{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-my-blog","title":"Welcome to my blog","text":"<p>Hi there! I'm Hans, a student studying at Tsinghua University in China. My research in school focuses on decision-making, planning and control in autonomous driving.</p> <p>This is the website I used to take notes while learning.Now that I'm about to graduate from school, I'm looking for a job related to decision-making and planning in autonomous driving.</p> <p>More about me:</p> <ul> <li>Email</li> <li>Github</li> <li>\u77e5\u4e4e</li> </ul>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/","title":"ACM\u5e38\u7528\u51fd\u6570","text":""},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_1","title":"\u5b57\u7b26\u4e32\u8f6c\u6362","text":""},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#c","title":"C\u98ce\u683c","text":"<pre><code>\u5b57\u7b26\u4e32\u8f6c\u6574\u578b\nint       atoi( const char *str );\nlong      atol( const char *str );\nlong long atoll( const char *str );\n\n\u5b57\u7b26\u4e32\u8f6c\u6d6e\u70b9\u578b\ndouble atof( const char* str );//\u5386\u53f2\u539f\u56e0\uff0c\u8f6c\u4e3adouble\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#c_1","title":"C++\u98ce\u683c","text":"<pre><code>int       stoi( const std::string&amp; str, std::size_t* pos = 0, int base = 10 );\nlong      stol( const std::string&amp; str, std::size_t* pos = 0, int base = 10 );\nlong long stoll( const std::string&amp; str, std::size_t* pos = 0, int base = 10 );\n\n\u5b57\u7b26\u4e32\u8f6c\u6d6e\u70b9\u578b\nfloat\u00a0\u00a0 \u00a0 stof(\u00a0const\u00a0std::string&amp;\u00a0str,\u00a0std::size_t*\u00a0pos\u00a0=\u00a00\u00a0);\ndouble\u00a0\u00a0 \u00a0stod(\u00a0const\u00a0std::string&amp;\u00a0str,\u00a0std::size_t*\u00a0pos\u00a0=\u00a00\u00a0);\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#string","title":"\u4e07\u80fd\u8f6cstring","text":"<pre><code>Defined in header &lt;string&gt;\nstd::string to_string( int value );\nstd::string to_string( long value );\nstd::string to_string( long long value );\nstd::string to_string( unsigned value );\nstd::string to_string( unsigned long value );\nstd::string to_string( unsigned long long value );\nstd::string to_string( float value );\nstd::string to_string( double value );\nstd::string to_string( long double value );\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_2","title":"\u5185\u5b58\u76f8\u5173","text":""},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#memset","title":"memset","text":"<pre><code>memset(arr, 0x3f, sizeof arr);//\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\u62100x3f3f3f3f\uff0c\u53731061109567\uff0c\u901a\u5e38\u770b\u6210int\u7684\u65e0\u7a77\u5927\nmemset(arr, 0x7f, sizeof arr);//\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\u62100x7f7f7f7f\uff0c\u53732139062143\uff0c\u901a\u5e38\u4e5f\u770b\u6210int\u7684\u65e0\u7a77\u5927\uff0c\u4f46\u6ca1\u6709\u4e0a\u4e00\u6761\u5e38\u7528\uff0c\u539f\u56e0\u5728\u4e8e2139062143\u8fc7\u5927\uff0c\u518d\u505a\u52a0\u6cd5\u65f6\u5bb9\u6613\u7206int\n\n\nmemset(arr, 0, sizeof arr);//\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e3a0\nmemset(arr, 0x3f, sizeof arr); //\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e3a0.0047,\u7531\u4e8e\u6ca1\u6709\u7528\u5904\uff0c\u56fa\u6ca1\u7528\nmemset(arr, 0x7f, sizeof arr); //\u6d6e\u70b9\u6570\u7684\u6b63\u65e0\u7a77\u5927\uff0c\u8fd9\u4e2a\u6709\u7528\n\n\nmemset(arr, val, sizeof(type) * num);//type\u4e3a\u6570\u7ec4\u7684\u7c7b\u578b\uff0cnum\u4e3a\u521d\u59cb\u5316\u7684\u4e2a\u6570\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#memcpy","title":"memcpy","text":"<pre><code>int a[100], b[100];\n// \u76f8\u5f53\u4e8eb = a\nmemcpy(b, a, sizeof a); \n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#strlen","title":"strlen","text":"<pre><code>char str[100];\nscanf(\"%s\", str);\nint len = strlen(str); // \u4f20\u5165\u9700\u8981\u77e5\u9053\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u7684\u5934\u6307\u9488\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#strcmp","title":"strcmp","text":"<pre><code>char a[10] = \"abc\", b[10] = \"abd\";\nint k = strcmp(a, b); // \u4f20\u5165\u9700\u8981\u6bd4\u8f83\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5934\u6307\u9488\n// \u82e5 a &gt; b\uff0c\u5219 k &gt; 0\n// \u82e5a == b\uff0c\u5219 k = 0\n// \u82e5 a &lt; b\uff0c\u5219 k &lt; 0\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#strcpy","title":"strcpy","text":"<pre><code>char a[10] = \"aaaaaa\";\nchar b[10] = \"bbbbbb\";\nstrcpy(b, a); // \u4f20\u5165\u4e24\u4e2a\u9700\u8981\u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\u5934\u6307\u9488\uff0c\u76f8\u5f53\u4e8eb = a\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#strcat","title":"strcat","text":"<pre><code>char a[10] = \"aaa\";\nchar b[10] = \"bbb\";\nstrcat(b, a); //\u4f20\u5165\u9700\u8981\u64cd\u4f5c\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5934\u6307\u9488\uff0c \u76f8\u5f53\u4e8eb += a\nputs(b); //\u8f93\u51fa bbbaaa\nstrcat(b, &amp;a[2]); //\u76f8\u5f53\u4e8eb += &amp;a[2]\nputs(b); //\u8f93\u51fa bbbaaaa\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_3","title":"\u5224\u65ad\u7c7b\u578b","text":"<pre><code>//1.isalpha\n\nisalpha()\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\uff0c\u5982\u679c\u662f\u5b57\u7b26\u5219\u8fd4\u56de\u975e\u96f6\uff0c\u5426\u5219\u8fd4\u56de\u96f6\u3002\n\n\u00a0 \u00a0 cout &lt;&lt; isalpha('a');//\u8fd4\u56de\u975e\u96f6\n\n\u00a0 \u00a0 cout &lt;&lt; isalpha('2');//\u8fd4\u56de0\n\n//2.isalnum\n\nisalnum()\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\u6570\u5b57\u6216\u8005\u5b57\u6bcd\uff0c\u4e5f\u5c31\u662f\u8bf4\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u5c5e\u4e8ea~z||A~Z||0~9\u3002\n\n\u00a0 \u00a0 \u00a0 \u00a0 cout &lt;&lt; isalnum('a');//\u8f93\u51fa\u975e\u96f6\n\n\u00a0 \u00a0 cout &lt;&lt; isalnum('2');//\u975e\u96f6\n\n\u00a0 \u00a0 cout &lt;&lt; isalnum('.');//\u96f6\n\n//3. isdigit \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\n\n//3.islower/tolower\n\nislower()\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e5f\u5c31\u662f\u662f\u5426\u5c5e\u4e8ea~z\u3002\ntolower()\u7528\u6765\u8bb2\u5927\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5c0f\u5199\n\u00a0 \u00a0 cout &lt;&lt; islower('a');//\u975e\u96f6\n\n\u00a0 \u00a0 cout &lt;&lt; islower('2');//\u8f93\u51fa0\n\n\u00a0 \u00a0 cout &lt;&lt; islower('A');//\u8f93\u51fa0\n\n//4.isupper/toupper\n\nisupper()\u548cislower\u76f8\u53cd\uff0c\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd\u3002\ntoupper()\u7528\u6765\u5c06\u5c0f\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5927\u5199\n\u00a0 \u00a0 \u00a0 \u00a0 cout &lt;&lt; isupper('a');//\u8fd4\u56de0\n\n\u00a0 \u00a0 cout &lt;&lt; isupper('2');//\u8fd4\u56de0\n\n\u00a0 \u00a0 cout &lt;&lt; isupper('A');//\u8fd4\u56de\u975e\u96f6\n\n// 5. isspace\n\n// 6. \n\n//C++ \u6a21\u677f\n#include &lt;iostream&gt;\n#include &lt;type_traits&gt;  // \u9700\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6\u6765\u4f7f\u7528 std::is_same\n\nint main() {\n    int a = 10;\n\n    if (std::is_same&lt;decltype(a), int&gt;::value) {\n        std::cout &lt;&lt; \"a is of type int\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"a is NOT of type int\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_4","title":"\u5176\u4ed6","text":""},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#stringfind","title":"string.find","text":"<p>s.find(a)\u5feb\u901f\u67e5\u627e\u5b57\u7b26\u4e32s\u4e2d\u662f\u5426\u6709\u5b50\u4e32a\u3002\u5982\u679c\u6709\u8fd4\u56des\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de string :: npos;</p> <p>\u793a\u4f8b\uff1a\u529b\u6263796</p> <pre><code>class Solution {\npublic:\n    bool rotateString(string s, string goal) {\n        return s.size() == goal.size() &amp;&amp; (s + s).find(goal) != string :: npos;\n    }\n};\n//\u53ea\u9700\u8981\u68c0\u67e5 goal \u662f\u5426\u4e3as+s \u7684\u5b50\u5b57\u7b26\u4e32\u5373\u53ef\n</code></pre>"},{"location":"C%2B%2B/ACM%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_5","title":"\u5bb9\u5668","text":"<pre><code>vector, \u53d8\u957f\u6570\u7ec4\uff0c\u500d\u589e\u7684\u601d\u60f3\n    size()  \u8fd4\u56de\u5143\u7d20\u4e2a\u6570\n    empty()  \u8fd4\u56de\u662f\u5426\u4e3a\u7a7a\n    clear()  \u6e05\u7a7a\n    front()/back()\n    push_back()/pop_back()\n    begin()/end()\n    []\n    \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u6309\u5b57\u5178\u5e8f\n\npair&lt;int, int&gt;\n    first, \u7b2c\u4e00\u4e2a\u5143\u7d20\n    second, \u7b2c\u4e8c\u4e2a\u5143\u7d20\n    \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u4ee5first\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5second\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff08\u5b57\u5178\u5e8f\uff09\n\nstring\uff0c\u5b57\u7b26\u4e32\n    size()/length()  \u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6\n    empty()\n    clear()\n    substr(\u8d77\u59cb\u4e0b\u6807\uff0c(\u5b50\u4e32\u957f\u5ea6))  \u8fd4\u56de\u5b50\u4e32\n    c_str()  \u8fd4\u56de\u5b57\u7b26\u4e32\u6240\u5728\u5b57\u7b26\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740\n\nqueue, \u961f\u5217\n    size()\n    empty()\n    push()  \u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n    front()  \u8fd4\u56de\u961f\u5934\u5143\u7d20\n    back()  \u8fd4\u56de\u961f\u5c3e\u5143\u7d20\n    pop()  \u5f39\u51fa\u961f\u5934\u5143\u7d20\n\npriority_queue, \u4f18\u5148\u961f\u5217\uff0c\u9ed8\u8ba4\u662f\u5927\u6839\u5806\n    size()\n    empty()\n    push()  \u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n    top()  \u8fd4\u56de\u5806\u9876\u5143\u7d20\n    pop()  \u5f39\u51fa\u5806\u9876\u5143\u7d20\n    \u5b9a\u4e49\u6210\u5c0f\u6839\u5806\u7684\u65b9\u5f0f\uff1apriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q;\n\nstack, \u6808\n    size()\n    empty()\n    push()  \u5411\u6808\u9876\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n    top()  \u8fd4\u56de\u6808\u9876\u5143\u7d20\n    pop()  \u5f39\u51fa\u6808\u9876\u5143\u7d20\n\ndeque, \u53cc\u7aef\u961f\u5217\n    size()\n    empty()\n    clear()\n    front()/back()\n    push_back()/pop_back()\n    push_front()/pop_front()\n    begin()/end()\n    []\n\nset, map, multiset, multimap, \u57fa\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811\uff08\u7ea2\u9ed1\u6811\uff09\uff0c\u52a8\u6001\u7ef4\u62a4\u6709\u5e8f\u5e8f\u5217\n    size()\n    empty()\n    clear()\n    begin()/end()\n    ++, -- \u8fd4\u56de\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(logn)\n\n    set/multiset\n        insert()  \u63d2\u5165\u4e00\u4e2a\u6570\n        find()  \u67e5\u627e\u4e00\u4e2a\u6570\n        count()  \u8fd4\u56de\u67d0\u4e00\u4e2a\u6570\u7684\u4e2a\u6570\n        erase()\n            (1) \u8f93\u5165\u662f\u4e00\u4e2a\u6570x\uff0c\u5220\u9664\u6240\u6709x   O(k + logn)\n            (2) \u8f93\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5220\u9664\u8fd9\u4e2a\u8fed\u4ee3\u5668\n        lower_bound()/upper_bound()\n            lower_bound(x)  \u8fd4\u56de\u5927\u4e8e\u7b49\u4e8ex\u7684\u6700\u5c0f\u7684\u6570\u7684\u8fed\u4ee3\u5668\n            upper_bound(x)  \u8fd4\u56de\u5927\u4e8ex\u7684\u6700\u5c0f\u7684\u6570\u7684\u8fed\u4ee3\u5668\n    map/multimap\n        insert()  \u63d2\u5165\u7684\u6570\u662f\u4e00\u4e2apair\n        erase()  \u8f93\u5165\u7684\u53c2\u6570\u662fpair\u6216\u8005\u8fed\u4ee3\u5668\n        find()\n        []  \u6ce8\u610fmultimap\u4e0d\u652f\u6301\u6b64\u64cd\u4f5c\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logn)\n        lower_bound()/upper_bound()\n\nunordered_set, unordered_map, unordered_multiset, unordered_multimap, \u54c8\u5e0c\u8868\n    \u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u589e\u5220\u6539\u67e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\n    \u4e0d\u652f\u6301 lower_bound()/upper_bound()\uff0c \u8fed\u4ee3\u5668\u7684++\uff0c--\n\nbitset, \u5727\u4f4d\n    bitset&lt;10000&gt; s;\n    ~, &amp;, |, ^\n    &gt;&gt;, &lt;&lt;\n    ==, !=\n    []\n\n    count()  \u8fd4\u56de\u6709\u591a\u5c11\u4e2a1\n\n    any()  \u5224\u65ad\u662f\u5426\u81f3\u5c11\u6709\u4e00\u4e2a1\n    none()  \u5224\u65ad\u662f\u5426\u5168\u4e3a0\n\n    set()  \u628a\u6240\u6709\u4f4d\u7f6e\u62101\n    set(k, v)  \u5c06\u7b2ck\u4f4d\u53d8\u6210v\n    reset()  \u628a\u6240\u6709\u4f4d\u53d8\u62100\n    flip()  \u7b49\u4ef7\u4e8e~\n    flip(k) \u628a\u7b2ck\u4f4d\u53d6\u53cd\n</code></pre>"},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/","title":"C++noexcept\u5173\u952e\u5b57\u4ee5\u53cavolatile\u5173\u952e\u5b57","text":""},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/#noexcept","title":"noexcept","text":""},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/#1-noexcept","title":"1 noexcept\u4f5c\u7528","text":"<p>noexcept\u4e3b\u8981\u544a\u8bc9\u7f16\u8bd1\u5668\u8be5\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7f16\u8bd1\u5668\u4f18\u5316\u3002\u5982\u679c\u4e0d\u52a0noexcept\u8868\u793a\u9ed8\u8ba4\u4f1a\u629b\u51fa\u5f02\u5e38\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a</p>"},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/#2noexcept","title":"2noexcept\u7684\u7531\u6765","text":"<p>\u5728C++11\u4e4b\u524d\u662f\u6ca1\u6709noexcept\u7684\uff0c\u53ea\u6709throw\u3002throw \u5173\u952e\u5b57\u9664\u4e86\u53ef\u4ee5\u7528\u5728\u51fd\u6570\u4f53\u4e2d\u629b\u51fa\u5f02\u5e38\uff0c\u8fd8\u53ef\u4ee5\u7528\u5728\u51fd\u6570\u5934\u548c\u51fd\u6570\u4f53\u4e4b\u95f4\uff0c\u6307\u660e\u5f53\u524d\u51fd\u6570\u80fd\u591f\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u8fd9\u79f0\u4e3a\u5f02\u5e38\u89c4\u8303\uff0c\u6709\u4e9b\u6559\u7a0b\u4e5f\u79f0\u4e3a\u5f02\u5e38\u6307\u793a\u7b26\u6216\u5f02\u5e38\u5217\u8868\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a </p> <p></p> <p>\u4f46\u662f\u5728c++11\u662f\u4e2d\uff0cthrow\u88ab\u629b\u5f03\u6389\u4e86</p> <p>\u5f02\u5e38\u89c4\u8303\u7684\u521d\u8877\u662f\u597d\u7684\uff0c\u5b83\u5e0c\u671b\u8ba9\u7a0b\u5e8f\u5458\u770b\u5230\u51fd\u6570\u7684\u5b9a\u4e49\u6216\u58f0\u660e\u540e\uff0c\u7acb\u9a6c\u5c31\u77e5\u9053\u8be5\u51fd\u6570\u4f1a\u629b\u51fa\u4ec0\u4e48\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u8fd9\u6837\u7a0b\u5e8f\u5458\u5c31\u53ef\u4ee5\u4f7f\u7528 try-catch \u6765\u6355\u83b7\u4e86\u3002\u5982\u679c\u6ca1\u6709\u5f02\u5e38\u89c4\u8303\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u9605\u8bfb\u51fd\u6570\u6e90\u7801\u624d\u80fd\u77e5\u9053\u51fd\u6570\u4f1a\u629b\u51fa\u4ec0\u4e48\u5f02\u5e38\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6709\u65f6\u5019\u4e5f\u4e0d\u5bb9\u6613\u505a\u5230\u3002\u4f8b\u5982\uff0cfunc_outer() \u51fd\u6570\u53ef\u80fd\u4e0d\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u4f46\u5b83\u8c03\u7528\u4e86\u53e6\u5916\u4e00\u4e2a\u51fd\u6570 func_inner()\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ef\u80fd\u4f1a\u5f15\u53d1\u5f02\u5e38\u3002\u518d\u5982\uff0c\u7f16\u5199\u7684\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u4e86\u8001\u5f0f\u7684\u4e00\u4e2a\u5e93\u51fd\u6570\uff0c\u6b64\u65f6\u4e0d\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u4f46\u662f\u8001\u5f0f\u5e93\u66f4\u65b0\u4ee5\u540e\u8fd9\u4e2a\u51fd\u6570\u5374\u5f15\u53d1\u4e86\u5f02\u5e38\u3002</p> <p>\u5176\u5b9e\uff0c\u4e0d\u4ec5\u4ec5\u5982\u6b64\uff0c 1. \u5f02\u5e38\u89c4\u8303\u7684\u68c0\u67e5\u662f\u5728\u8fd0\u884c\u671f\u800c\u4e0d\u662f\u7f16\u8bd1\u671f\uff0c\u56e0\u6b64\u7a0b\u5e8f\u5458\u4e0d\u80fd\u4fdd\u8bc1\u6240\u6709\u5f02\u5e38\u90fd\u5f97\u5230\u4e86 catch \u5904\u7406\u3002</p> <ol> <li> <p>\u7531\u4e8e\u7b2c\u4e00\u70b9\u7684\u5b58\u5728\uff0c\u7f16\u8bd1\u5668\u9700\u8981\u751f\u6210\u989d\u5916\u7684\u4ee3\u7801\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u59a8\u788d\u4e86\u4f18\u5316\u3002</p> </li> <li> <p>\u6a21\u677f\u51fd\u6570\u4e2d\u65e0\u6cd5\u4f7f\u7528\u3002</p> </li> </ol> <p>\u6240\u4ee5 C++11 \u6452\u5f03\u4e86 throw \u5f02\u5e38\u89c4\u8303\uff0c\u800c\u5f15\u5165\u4e86\u65b0\u7684\u5f02\u5e38\u8bf4\u660e\u7b26 noexcept\u3002</p>"},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/#3-c11noexcept","title":"3 C++11\u4e2d\u7684noexcept","text":"<p>\u52a0\u5728\u51fd\u6570\u660e\u548c\u51fd\u6570\u4f53\u4e4b\u95f4\uff0c\u8868\u793a\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u5f02\u5e38\uff0c\u5e2e\u52a9\u7f16\u8bd1\u5668\u4f18\u5316\u3002 \u6b64\u5916noexcept\u662f\u4e00\u4e2a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8fd4\u56debool\u503c\u3002\u8fd9\u6837\u4e4b\u524dthrow\u7684\u65e0\u6cd5\u6355\u6349\u51fd\u6570\u5185\u5176\u4ed6\u51fd\u6570\u662f\u5426\u6709\u5f02\u5e38\u7684\u7f3a\u70b9\u5c31\u88ab\u89e3\u51b3\u4e86\u3002</p> <p></p> <p></p>"},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/#4","title":"4 \u4f7f\u7528\u5efa\u8bae","text":""},{"location":"C%2B%2B/C%2B%2Bnoexcept%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A5%E5%8F%8Avolatile%E5%85%B3%E9%94%AE%E5%AD%97/#volatile","title":"volatile","text":"<p>volatile\u4e0econst\u662f\u76f8\u53cd\u7684\u8bcd</p> <p>volatile \u5173\u952e\u5b57\u662f\u4e00\u79cd\u7c7b\u578b\u4fee\u9970\u7b26\uff0c\u7528\u5b83\u58f0\u660e\u7684\u7c7b\u578b\u53d8\u91cf\u8868\u793a\u53ef\u4ee5\u88ab\u67d0\u4e9b\u7f16\u8bd1\u5668\u672a\u77e5\u7684\u56e0\u7d20\u66f4\u6539\uff0c\u6bd4\u5982\uff1a\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u6216\u8005\u5176\u5b83\u7ebf\u7a0b\u7b49\u3002\u9047\u5230\u8fd9\u4e2a\u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u5bf9\u8bbf\u95ee\u8be5\u53d8\u91cf\u7684\u4ee3\u7801\u5c31\u4e0d\u518d\u8fdb\u884c\u4f18\u5316\uff0c\u4ece\u800c\u53ef\u4ee5\u63d0\u4f9b\u5bf9\u7279\u6b8a\u5730\u5740\u7684\u7a33\u5b9a\u8bbf\u95ee\u3002\u58f0\u660e\u65f6\u8bed\u6cd5\uff1aint volatile vInt;\u00a0\u5f53\u8981\u6c42\u4f7f\u7528 volatile \u58f0\u660e\u7684\u53d8\u91cf\u7684\u503c\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u603b\u662f\u91cd\u65b0\u4ece\u5b83\u6240\u5728\u7684\u5185\u5b58\u8bfb\u53d6\u6570\u636e\uff0c\u5373\u4f7f\u5b83\u524d\u9762\u7684\u6307\u4ee4\u521a\u521a\u4ece\u8be5\u5904\u8bfb\u53d6\u8fc7\u6570\u636e\u3002\u800c\u4e14\u8bfb\u53d6\u7684\u6570\u636e\u7acb\u523b\u88ab\u4fdd\u5b58\u3002\u4f8b\u5982\uff1a <pre><code>volatile int i=10;\nint a = i;\n...\n// \u5176\u4ed6\u4ee3\u7801\uff0c\u5e76\u672a\u660e\u786e\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u5bf9 i \u8fdb\u884c\u8fc7\u64cd\u4f5c\nint b = i;\n</code></pre></p> <p>volatile \u6307\u51fa i \u662f\u968f\u65f6\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u7684\uff0c\u6bcf\u6b21\u4f7f\u7528\u5b83\u7684\u65f6\u5019\u5fc5\u987b\u4ece i\u7684\u5730\u5740\u4e2d\u8bfb\u53d6\uff0c\u56e0\u800c\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\u4f1a\u91cd\u65b0\u4ecei\u7684\u5730\u5740\u8bfb\u53d6\u6570\u636e\u653e\u5728 b \u4e2d\u3002\u800c\u4f18\u5316\u505a\u6cd5\u662f\uff0c\u7531\u4e8e\u7f16\u8bd1\u5668\u53d1\u73b0\u4e24\u6b21\u4ece i\u8bfb\u6570\u636e\u7684\u4ee3\u7801\u4e4b\u95f4\u7684\u4ee3\u7801\u6ca1\u6709\u5bf9 i \u8fdb\u884c\u8fc7\u64cd\u4f5c\uff0c\u5b83\u4f1a\u81ea\u52a8\u628a\u4e0a\u6b21\u8bfb\u7684\u6570\u636e\u653e\u5728 b \u4e2d\u3002\u800c\u4e0d\u662f\u91cd\u65b0\u4ece i \u91cc\u9762\u8bfb\u3002 \u8fd9\u6837\u4ee5\u6765\uff0c\u5982\u679c i\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u53d8\u91cf\u6216\u8005\u8868\u793a\u4e00\u4e2a\u7aef\u53e3\u6570\u636e\u5c31\u5bb9\u6613\u51fa\u9519\uff0c\u6240\u4ee5\u8bf4 volatile \u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u7279\u6b8a\u5730\u5740\u7684\u7a33\u5b9a\u8bbf\u95ee\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E7%9A%84%E6%A6%82%E5%BF%B5/","title":"C++\u4e00\u4e9b\u540d\u8bcd\u7684\u6982\u5ff5","text":"<p>value category(\u503c\u7c7b\u522b)\uff0ctype(\u7c7b\u578b)\uff0cexpression(\u8868\u8fbe\u5f0f)\uff0cobject(\u5bf9\u8c61)\uff0creference(\u5f15\u7528)\u8fd9\u51e0\u4e2a\u540d\u8bcd\u4e4b\u95f4\u5230\u5e95\u662f\u4ec0\u4e48\u5173\u7cfb\u3002</p> <p>\u8868\u8fbe\u5f0f\uff0c\u5bf9\u8c61\uff0c\u5f15\u7528\u90fd\u6709\u7c7b\u578b\u3002\u5f15\u7528\u4e0d\u662f\u5bf9\u8c61\u3002\u5bf9\u8c61\u4e0d\u662f\u8868\u8fbe\u5f0f\u3002\u8868\u8fbe\u5f0f\u53ef\u4ee5\u521b\u5efa\u5bf9\u8c61\u3002\u5f15\u7528\u7ed1\u5b9a\u4e00\u4e2a\u5bf9\u8c61\u3002\u53ea\u6709\u8868\u8fbe\u5f0f\u6709\u503c\u7c7b\u522b\u3002\u5f15\u7528\u548c\u5bf9\u8c61\u90fd\u662fentity\u3002</p> <p>prvalue\u548cxvalue\u90fd\u662f\u503c\u7c7b\u522b\uff0c\u53ea\u80fd\u7528\u6765\u5f62\u5bb9\u8868\u8fbe\u5f0f\u3002\u53f3\u503c\u5f15\u7528\u8fd9\u4e2a\u4e2d\u6587\u8868\u8fbe\u6709\u6b67\u4e49\uff0c\u53ef\u4ee5\u8868\u793arvalue reference type\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e00\u4e2areference\u7684\u7c7b\u578b\u662frvalue reference type\u3002</p> <p>\u201c\u53f3\u503c\u5f15\u7528\u4e0d\u662f\u53f3\u503c\u201d\uff0c\u6307\u7684\u662f\u4e00\u4e2areference\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u65f6\u4e0d\u662f\u53f3\u503c\uff0c\u4f46\u5982\u679c\u662f\u4e00\u4e2a\u8fd4\u56de\u7684\u7c7b\u578b\u662frvalue reference type\u7684\u8868\u8fbe\u5f0f\uff08\u6bd4\u5982std::move)\uff0c\u90a3\u5b83\u662f\u53f3\u503c\u4e2d\u7684xvalue\u3002</p> <p>\u521b\u5efa\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u7c7b\u522b\u80af\u5b9a\u662fprvalue\uff0c\u4f46\u5982\u679c\u8be5\u8868\u8fbe\u5f0f\u662f\u5176\u4ed6\u8868\u8fbe\u5f0f\u7684\u5b50\u8868\u8fbe\u5f0f\uff0c\u90a3\u5176\u4ed6\u8868\u8fbe\u5f0f\u5b8c\u5168\u53ef\u4ee5\u5c06\u5176\u5305\u88f9\u540e\u8ba9\u503c\u7c7b\u522b\u53d8\u6210\u522b\u7684\uff08\u52a0\u4e2astatic_cast\u5b8c\u4e8b\uff09\u3002std::move(A{})\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0cA{}\u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u88ab\u7ed1\u5b9a\u5230std::move\u7684\u51fd\u6570\u53c2\u6570\u4e0a\u53bb\uff08\u53c2\u6570\u7684\u7c7b\u578b\u662freference type\uff09\u3002\u7136\u540e\u6211\u4eec\u53c8\u6709\u201cthe lifetime of the temporary object is extended to match the lifetime of the reference\u201d\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\u7684lifetime\u7b49\u4e8estd::move\u7684\u53c2\u6570\u7684lifetime\uff0c\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u81ea\u7136\u5c31\u88ab\u9500\u6bc1\u4e86\u3002</p> <p></p> <p>\u4f5c\u8005\uff1aZhiHuReader \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/604327959/answer/3140142366 \u6765\u6e90\uff1a\u77e5\u4e4e \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002</p> <p>\u4f5c\u8005\uff1aZhiHuReader \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/604327959/answer/3140142366 \u6765\u6e90\uff1a\u77e5\u4e4e \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADStruct%E5%92%8CUnion%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"C++\u4e2dStruct\u548cUnion\u7684\u533a\u522b","text":"<p>\u7ed3\u6784\u4f53struct\uff1a\u628a\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u7ec4\u5408\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002</p> <p>\u5171\u540c\u4f53union\uff1a \u4f7f\u51e0\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u5171\u540c\u5360\u7528\u4e00\u6bb5\u5185\u5b58\u3002</p> <p>\u7ed3\u6784\u4f53(struct)\u4e2d\u6240\u6709\u53d8\u91cf\u662f\u201c\u5171\u5b58\u201d\u7684\u2014\u2014\u4f18\u70b9\u662f\u201c\u6709\u5bb9\u4e43\u5927\u201d\uff0c\u5168\u9762\uff1b\u7f3a\u70b9\u662fstruct\u5185\u5b58\u7a7a\u95f4\u7684\u5206\u914d\u662f\u7c97\u653e\u7684\uff0c\u4e0d\u7ba1\u7528\u4e0d\u7528\uff0c\u5168\u5206\u914d\u3002</p> <p>\u800c\u8054\u5408\u4f53(union)\u4e2d\u662f\u5404\u53d8\u91cf\u662f\u201c\u4e92\u65a5\u201d\u7684\u2014\u2014\u7f3a\u70b9\u5c31\u662f\u4e0d\u591f\u201c\u5305\u5bb9\u201d\uff1b\u4f46\u4f18\u70b9\u662f\u5185\u5b58\u4f7f\u7528\u66f4\u4e3a\u7cbe\u7ec6\u7075\u6d3b\uff0c\u4e5f\u8282\u7701\u4e86\u5185\u5b58\u7a7a\u95f4\u3002Union\u7684\u7279\u70b9\u5c31\u662f\u540c\u4e00\u65f6\u95f4\uff0c\u53ea\u80fd\u7531\u4e00\u4e2a\u6210\u5458\u5360\u7528\u5185\u5b58\u3002union\u7684\u5185\u5b58\u662f\u7167\u7740\u91cc\u8fb9\u5360\u5730\u513f\u6700\u5927\u7684\u90a3\u4e2a\u53d8\u91cf\u5206\u7684\u3002</p> <p>Union\u9002\u7528\u4e8e\u5404\u6570\u636e\u7c7b\u578b\u5404\u53d8\u91cf\u5360\u7528\u7a7a\u95f4\u5dee\u4e0d\u591a\u5e76\u4e14\u5bf9\u5404\u53d8\u91cf\u540c\u65f6\u4f7f\u7528\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u5408\u3002 \u4e00\u4e2a\u6570\u7ec4\uff08\u6216\u8005\u66f4\u5927\u7684\u6570\u7ec4int a[100]\uff09\uff0c\u548c\u4e00\u4e2a\u6216\u8005\u51e0\u4e2a\u5c0f\u53d8\u91cf\u5199\u5728\u4e00\u4e2aunion\u91cc\uff0c\u5b9e\u5728\u6ca1\u4ec0\u4e48\u5fc5\u8981\uff0c\u8282\u7701\u7684\u7a7a\u95f4\u592a\u6709\u9650\u4e86\uff0c\u8fd8\u589e\u52a0\u4e86\u4e00\u4e9b\u98ce\u9669\uff08\u6700\u5c11\u6709\u524d\u8fb9\u63d0\u5230\u7684\u903b\u8f91\u4e0a\u7684\u98ce\u9669\uff09\u3002\u6240\u4ee5\uff0c\u4ece\u5185\u5b58\u5360\u7528\u5206\u6790\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u5982\u76f4\u63a5struct\u3002</p> <p></p> <p>\u53bb\u522b\u7684\u5177\u4f53\u5b9e\u4f8b\uff1a (2\u6761\u6d88\u606f) \u7ed3\u6784\u4f53struct\u548c\u8054\u5408\u4f53union\u6700\u5168\u8bb2\u89e3_struct union_liguangxian2018\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADconst%E5%A3%B0%E6%98%8E%E4%B8%8D%E5%90%8C%E4%BD%8D%E7%BD%AE%E7%9A%84%E4%B8%8D%E5%90%8C%E5%90%AB%E4%B9%89/","title":"C++\u4e2dconst\u58f0\u660e\u4e0d\u540c\u4f4d\u7f6e\u7684\u4e0d\u540c\u542b\u4e49","text":"<p>\u51c6\u5219\uff1aconst\u662f\u5de6\u7ed3\u5408\u7684\uff0c\u5148\u4fee\u9970\u5de6\u8fb9\uff0c\u5982\u679c\u5de6\u8fb9\u6ca1\u6709\u5219\u4fee\u9970\u53f3\u8fb9\u3002 \u5982\u7b14\u8bb0\u4e2d\u6240\u8bf4\uff1a [[C++\u4e2d\u5d4c\u5957\u7c7b\u578b\u58f0\u660e\u7684\u8bfb\u6cd5]]</p> <p>\u6bd4\u5982\uff1a int const *r \u8868\u793aint\u662f\u5e38\u91cf\uff0c\u800c\u6307\u9488\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff08\u5e38\u91cf\u6307\u9488\uff09\u3002\u6309\u7167\u4e4b\u524d\u7b14\u8bb0\u7c7b\u578b\u58f0\u660e\u7684\u8bfb\u6cd5\uff08\u5148\u770b\u53f3\u518d\u770b\u5de6\uff09\uff0cr\u662f\u6307\u9488</p> <p>int * const r\u8868\u793a*\u662f\u5e38\u91cf\uff0cint\u503c\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff08\u6307\u9488\u5e38\u91cf\uff09</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADsstream/","title":"C++\u4e2dsstream","text":"<p>sstream\u4e2d\u6709\u4e09\u4e2a\u5e38\u7528\u7684\u7c7b\uff1a 1. stringstream(\u540c\u65f6\u652f\u6301&gt;&gt; \u548c&lt;&lt;) 2. istringstream(\u53ea\u652f\u6301&gt;&gt;) 3. ostringstream(\u53ea\u652f\u6301&lt;&lt;)</p> <pre><code>#include &lt;string&gt;\n#include &lt;sstream&gt;//\n#include &lt;iostream&gt;\nusing namespace std;\n//ostringstream \u7528\u4e8e\u6267\u884cC\u98ce\u683c\u5b57\u7b26\u4e32\u7684\u8f93\u51fa\u64cd\u4f5c\nvoid ostringstream_test()\n{\n    //ostringstream \u53ea\u652f\u6301 &lt;&lt; \u64cd\u4f5c\u7b26\n    std::ostringstream oss;\n    oss &lt;&lt; \"this is test\" &lt;&lt; 123456;\n    std::cout&lt;&lt;oss.str()&lt;&lt;std::endl;\n    oss.str(\"\");//\u6e05\u7a7a\u4e4b\u524d\u7684\u5185\u5bb9\n    //oss.clear();//\u5e76\u4e0d\u80fd\u6e05\u7a7a\u5185\u5b58\n    //\u6d6e\u70b9\u6570\u8f6c\u6362\u9650\u5236\n    double tmp = 123.1234567890123;\n    oss.precision(12);\n    oss.setf(std::ios::fixed);//\u5c06\u6d6e\u70b9\u6570\u7684\u4f4d\u6570\u9650\u5b9a\u4e3a\u5c0f\u6570\u70b9\u4e4b\u540e\u7684\u4f4d\u6570\n    oss &lt;&lt; tmp;\n\n    std::cout &lt;&lt; oss.str() &lt;&lt; \"\\r\\n\" &lt;&lt; std::endl;\n}\n\n//istringstream \u7528\u4e8e\u6267\u884cC\u98ce\u683c\u5b57\u7b26\u4e32\u7684\u8f93\u5165\u64cd\u4f5c\nvoid istringstream_test()\n{\n    //istringstream \u53ea\u652f\u6301 &gt;&gt; \u64cd\u4f5c\u7b26\n    std::string str = \"welcome to china\";\n    std::istringstream iss(str);\n\n    //\u628a\u5b57\u7b26\u4e32\u4e2d\u4ee5\u7a7a\u683c\u9694\u5f00\u7684\u5185\u5bb9\u63d0\u53d6\u51fa\u6765\n    std::string out;\n    while(iss &gt;&gt; out)\n    {\n        std::cout &lt;&lt; out &lt;&lt; std::endl;\n    }\n    std::cout &lt;&lt; \"\\r\\n\" &lt;&lt; std::endl;\n}\n\n//stringstream \u540c\u65f6\u652f\u6301C\u98ce\u683c\u5b57\u7b26\u4e32\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\nvoid stringstream_test()\n{\n    //\u8f93\u5165\n    std::stringstream ss;\n    ss &lt;&lt; \"hello this is kandy \" &lt;&lt; 123;\n    std::cout &lt;&lt; ss.str() &lt;&lt; \"\\r\\n\" &lt;&lt; std::endl;\n\n    //\u8f93\u51fa\n    std::string out;\n    while(ss &gt;&gt; out)\n    {\n        std::cout &lt;&lt; out.c_str() &lt;&lt; std::endl;\n    }\n    std::cout &lt;&lt; \"\\r\\n\" &lt;&lt; std::endl;\n}\n\nint main()\n{\n    ostringstream_test();   \n    istringstream_test();\n    stringstream_test();\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/","title":"C++\u4e2dstatic\u3001extern\u3001include\u3001inline\u3001constexpr","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#1","title":"1. \u5168\u5c40\u53d8\u91cf","text":"<ul> <li>\u53d8\u91cf\u6709\u5b9a\u4e49\u548c\u58f0\u660e\u4e4b\u5206\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf\u6765\u8bf4\uff0c\u58f0\u660e\u53ef\u4ee5\u591a\u6b21\uff0c\u4f46\u662f\u5b9a\u4e49\u53ea\u80fd\u7531\u4e00\u6b21\u3002</li> <li>\u4e0d\u5141\u8bb8\u5728\u51fd\u6570\u5916\u90e8\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u5168\u5c40\u53d8\u91cf\u5728\u51fd\u6570\u5916\u53ea\u80fd\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff08\u53ea\u80fd int a = 0;\u6216\u8005int a;C++\u9ed8\u8ba4\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u503c\u4e3a0\u3002\u4e0d\u80fd\u5148\u58f0\u660e\u518d\u8d4b\u503c\uff0c\u6bd4\u5982 int a\uff1ba=5\uff1b\u8fd9\u4f1a\u62a5\u9519\uff09</li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#2-static","title":"2. static","text":"<ul> <li> <p>static\u662f\u9759\u6001\u7684\u610f\u601d\u3002\u7528static\u58f0\u660e\u7684\u53d8\u91cf\u90fd\u5b58\u5728\u9759\u6001\u533a\uff0c\u9759\u6001\u533a\u5305\u62ec\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08\u4f5c\u7528\u57df\u53ea\u5728\u5c40\u90e8\uff0c\u5168\u5c40\u4e0d\u53ef\u89c1\uff09\u3001\u5168\u5c40\u53d8\u91cf\u3001\u7c7b\u5185\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002\u9759\u6001\u533a\u7684\u6240\u6709\u53d8\u91cf\uff0c\u521d\u59cb\u5316\u7684\u65f6\u5019\u81ea\u52a8\u521d\u59cb\u5316\u4e3a 0\u3002</p> </li> <li> <p>static\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\u4e00\u662f\u9650\u5b9a\u4f5c\u7528\u57df\uff0c\u4e8c\u662f\u53ea\u521d\u59cb\u5316\u4e00\u6b21\u3002</p> </li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#21","title":"2.1 \u9759\u6001\u5c40\u90e8\u53d8\u91cf","text":"<p>\u5728\u4fee\u9970\u5c40\u90e8\u53d8\u91cf\u7684\u65f6\u5019\uff0cstatic \u4fee\u9970\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u6267\u884c\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u5e76\u4e14\u4f5c\u7528\u57df\u4ecd\u7136\u5728\u5c40\u90e8\uff0c\u5916\u90e8\u4e0d\u53ef\u89c1\uff0cstatic\u5ef6\u957f\u4e86\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\uff0c\u76f4\u5230\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u4ee5\u540e\u624d\u91ca\u653e\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#22","title":"2.2 \u9759\u6001\u5168\u5c40\u53d8\u91cf","text":"<ul> <li> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u653e\u5728\u6e90\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u4e0d\u80fd\u4f7f\u7528extern\u5173\u952e\u5b57\u5c06\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5bfc\u51fa\uff0c\u56e0\u6b64\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u5728\u5b9a\u4e49\u6b64\u53d8\u91cf\u7684\u6587\u4ef6\u4e2d\u8c03\u7528(\u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u4e2a\u540d\u5b57\u7684\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e0d\u540c\u7684\u503c\uff0c\u4e92\u4e0d\u5f71\u54cd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u4f5c\u7528\u57df\u53ea\u9650\u4e8e\u6587\u4ef6\u672c\u8eab)\u3002</p> </li> <li> <p>\u666e\u901a\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u5de5\u7a0b\uff0c\u5728\u5934\u6587\u4ef6\u4e2d\u4f7f\u7528extern\u5173\u952e\u5b57\u58f0\u660e\u666e\u901a\u5168\u5c40\u53d8\u91cf\uff0c\u5e76\u5728\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u5176\u4ed6\u6587\u4ef6\u4e2d\u53ea\u8981\u4f7f\u7528#include\u5305\u542b\u58f0\u660e\u666e\u901a\u5168\u5c40\u53d8\u91cf\u7684\u5934\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u4f7f\u7528\u666e\u901a\u5168\u5c40\u53d8\u91cf\u3002</p> </li> <li> <p>\u5982\u679c\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5728\u58f0\u660e\u7684\u540c\u65f6\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u5982\u679c\u9759\u6001\u5168\u5c40\u6ca1\u6709\u663e\u793a\u5730\u521d\u59cb\u5316\u4e3a\u9ed8\u8ba4\u503c\uff0c\u76f8\u5f53\u4e8e\u5728\u5934\u6587\u4ef6\u4e2d\u540c\u65f6\u5b8c\u6210\u58f0\u660e\u548c\u5b9a\u4e49\uff0c\u800c\u666e\u901a\u5168\u5c40\u53d8\u91cf\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u4e2d\u3002</p> </li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#23","title":"2.3 \u9759\u6001\u666e\u901a\u51fd\u6570","text":"<ul> <li>static \u4fee\u9970\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u8fd9\u4e2a\u51fd\u6570\u7684\u53ea\u80fd\u5728\u5b9a\u4e49\u6b64\u51fd\u6570\u7684\u6587\u4ef6\u4e2d\u8c03\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u8c03\u7528\u3002(\u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u4e2a\u540d\u5b57\u7684\u9759\u6001\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u4e92\u4e0d\u5f71\u54cd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u4f5c\u7528\u57df\u53ea\u9650\u4e8e\u6587\u4ef6\u672c\u8eab)</li> <li>\u4e5f\u5c31\u662finclude\u51fd\u6570\u5934\u6587\u4ef6\u540e\uff0c\u5fc5\u987b\u8981\u5728\u672c\u6587\u4ef6\u4e2d\u5b9e\u73b0\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u800c\u4e0d\u80fd\u94fe\u63a5\u9636\u6bb5\u53bb\u522b\u7684\u6587\u4ef6\u5bfb\u627e\u51fd\u6570\u7684\u5b9a\u4e49\u3002 \u6bd4\u5982 <pre><code>//a.h\nstatic int func(int a);\n\n//a.cc\n#include \"a.h\"\nint func(int a){\n    return 10;\n}\n\n//b.cc\n#include \"a.h\"\nint main(){\n func();//\u65e0\u6cd5\u8c03\u7528\uff0c\u5fc5\u987b\u8981\u5728b.cc\u4e2d\u91cd\u65b0\u5b9a\u4e49func\u3002\u53bb\u6389a.h\u4e2d\u7684static\u5c31\u53ef\u4ee5\u8c03\u7528\uff0c\u56e0\u4e3a\u51fd\u6570\u58f0\u660e\u9ed8\u8ba4\u662fextern\u7684\u3002\n}\n</code></pre></li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#24","title":"2.4 \u7c7b\u4e2d\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf","text":"<p>\u88ab static \u4fee\u9970\u7684\u53d8\u91cf\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d.\u53d8\u91cf\u540d\u76f4\u63a5\u5f15\u7528\uff0c\u800c\u4e0d\u9700\u8981 new \u51fa\u4e00\u4e2a\u7c7b\u6765\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u901a\u8fc7\u5177\u4f53\u7684\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee\u3002</p> <ul> <li> <p>\u9759\u6001\u6570\u636e\u6210\u5458\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab\uff0c\u5b83\u662f\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u7684\u5171\u4eab\u6210\u5458\uff0c\u5b83\u5728\u5185\u5b58\u4e2d\u53ea\u5360\u4e00\u4efd\u7a7a\u95f4\uff0c\u5982\u679c\u6539\u53d8\u5b83\u7684\u503c\uff0c\u5219\u5404\u5bf9\u8c61\u4e2d\u8fd9\u4e2a\u6570\u636e\u6210\u5458\u7684\u503c\u90fd\u88ab\u6539\u53d8\u3002</p> </li> <li> <p>\u9759\u6001\u6570\u636e\u6210\u5458\u662f\u5728\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u65f6\u88ab\u5206\u914d\u7a7a\u95f4\uff08\u5206\u914d\u5230\u9759\u6001\u533a\uff09\uff0c\u5230\u7a0b\u5e8f\u7ed3\u675f\u4e4b\u540e\u624d\u91ca\u653e\uff0c\u53ea\u8981\u7c7b\u4e2d\u6307\u5b9a\u4e86\u9759\u6001\u6570\u636e\u6210\u5458\uff0c\u5373\u4f7f\u4e0d\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4e5f\u4f1a\u4e3a\u9759\u6001\u6570\u636e\u6210\u5458\u5206\u914d\u7a7a\u95f4\u3002</p> </li> <li> <p>\u9759\u6001\u6570\u636e\u6210\u5458\u53ef\u4ee5\u88ab\u521d\u59cb\u5316\uff0c\u4f46\u662f\u53ea\u80fd\u5728\u7c7b\u4f53\u5916\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u82e5\u672a\u5bf9\u9759\u6001\u6570\u636e\u6210\u5458\u8d4b\u521d\u503c\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4e3a\u5176\u521d\u59cb\u5316\u4e3a 0\u3002</p> </li> <li> <p>\u9759\u6001\u6210\u5458\u53d8\u91cf\u4f7f\u7528\u524d\u5fc5\u987b\u5148\u5728\u7c7b\u5916\u521d\u59cb\u5316(\u5982\u00a0int MyClass::m_nNumber = 0;)\uff0c\u5426\u5219\u4f1a\u5728 linker \u65f6\u51fa\u9519\u3002\u4f46\u662f\u5982\u679c\u662fconst static\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u6240\u6709\u7c7b\u90fd\u6709\u8fd9\u4e2a\u53d8\u91cf\u4e14\u4e0d\u53ef\u53d8\u3002(C++17\u4e4b\u524d)\u3002C++17 \u4e4b\u540e\uff0cinline\u53ef\u4ee5\u76f4\u63a5\u4fee\u9970\u53d8\u91cf\uff08\u4e4b\u524d\u53ea\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\uff09\uff0c\u53ef\u4ee5\u5728\u7c7b\u5185\u901a\u8fc7static inline \u76f4\u63a5\u8fdb\u884c\u58f0\u660e\u4e0e\u521d\u59cb\u5316\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5185\u90e8\u8fdb\u884c\u58f0\u660e\uff0c\u5728\u7c7b\u5916\uff08\u4f46\u662f\u5728\u5934\u6587\u4ef6\u4e2d\uff09\u901a\u8fc7inline \u8fdb\u884c\u521d\u59cb\u5316\u3002\u5176\u5b9e\u5c31\u662f\u65b0\u6807\u51c6\u901a\u8fc7inline\u80fd\u591f\u4fdd\u8bc1\u7c7b\u5185\u9759\u6001\u53d8\u91cf\u53ea\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u5168\u5c40\u5171\u4eab\u4e00\u4efd\u6570\u636e\uff0c\u800c\u4e4b\u524d\u7684\u6807\u51c6\u662f\u4e0d\u5141\u8bb8inline\u4fee\u9970\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\uff1b\u5728c++17\u5f00\u59cb\uff0cconstexpr\u5305\u542binline\u542b\u4e49\u3002 <pre><code>class MyClass\n{\n    static inline std::string name = \"asda\"; // OK since C++17\n    ...\n};\n\ninline MyClass myGlobalObj; // OK even if included/defined by multiple CPP files\n</code></pre></p> </li> <li> <p>\u9759\u6001\u6570\u636e\u6210\u5458\u65e2\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u540d\u5f15\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u5f15\u7528\u3002</p> </li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#25","title":"2.5 \u7c7b\u4e2d\u7684\u9759\u6001\u6210\u5458\u51fd\u6570","text":"<p>\u88ab static \u4fee\u9970\u7684\u65b9\u6cd5\u5c5e\u4e8e\u7c7b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d.\u65b9\u6cd5\u540d\u76f4\u63a5\u5f15\u7528\uff0c\u800c\u4e0d\u9700\u8981 new \u51fa\u4e00\u4e2a\u7c7b\u6765\u3002 - \u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u3002\u4f46\u662f\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff08\u56e0\u4e3a\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u8fd8\u6ca1\u6709\u5206\u914d\u5185\u5b58\uff0c\u5b9e\u4f8b\u5316\u540e\u624d\u5206\u914d\u5185\u5b58\uff09 - \u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8c03\u7528\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u4f46\u53cd\u4e4b\u4e0d\u80fd\u3002 - \u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u6709 this \u6307\u9488\uff0c\u800c\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709 this \u6307\u9488 - \u603b\u7ed3\uff1a\u975e\u9759\u6001\u53ef\u4ee5\u8c03\u7528\u9759\u6001\uff0c\u4f46\u662f\u9759\u6001\u4e0d\u53ef\u4ee5\u8c03\u7528\u975e\u9759\u6001\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#3-extern","title":"3 extern\u7684\u7528\u6cd5\uff1a","text":"<ul> <li>extern\uff1a\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u5916\u90e8\u7684\uff0c\u5728\u94fe\u63a5\u9636\u6bb5\uff0c\u5728\u522b\u7684\u6e90\u6587\u4ef6\u4e2d\u5bfb\u627e\u5176\u5b9a\u4e49\u3002 \u4f8b\u5982\uff1aextern int a;\u663e\u5f0f\u7684\u8bf4\u660e\u4e86a\u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u5728\u7a0b\u5e8f\u7684\u5176\u4ed6\u5730\u65b9\u5206\u914d\u7684\uff0c\u5728\u6587\u4ef6\u4e2d\u5176\u4ed6\u4f4d\u7f6e\u6216\u8005\u5176\u4ed6\u6587\u4ef6\u4e2d\u5bfb\u627ea\u8fd9\u4e2a\u53d8\u91cf\u3002</li> <li>\u5bf9\u4e8e\u51fd\u6570\u6765\u8bf4\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u6307\u5b9aextern\uff0c\u9ed8\u8ba4\u51fd\u6570\u5c31\u662fextern\u7684\uff0c\u6240\u4ee5include\u51fd\u6570\u7684\u5934\u6587\u4ef6\u540e\uff0c\u6839\u636e\u51fd\u6570\u7684\u58f0\u660e\u53ef\u4ee5\u5728\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u4e2d\u627e\u5230\u5176\u5b9a\u4e49\u3002</li> <li>\u5bf9\u4e8e\u53d8\u91cf\u6765\u8bf4\uff0c\u9700\u8981\u663e\u793a\u6307\u5b9aextern\u3002\u5982\u679c\u9700\u8981\u7528\u5230\u5176\u4ed6\u6e90\u6587\u4ef6\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u90a3\u4e48\u9700\u8981\u5728\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\u4e2d\u6dfb\u52a0extern\u58f0\u660e\u3002</li> </ul> <p>\u7528\u6cd5 - \u4e00\u4e2ac\u6587\u4ef6\u9700\u8981\u8c03\u7528\u53e6\u4e00\u4e2ac\u6587\u4ef6\u91cc\u7684\u53d8\u91cf\u6216\u8005\u51fd\u6570\uff0c\u800c\u4e0d\u80fd\u4ece.h\u6587\u4ef6\u4e2d\u8c03\u7528\u53d8\u91cf\u3002 - extern int a = 5\u4e0eint a = 5\u610f\u4e49\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u5b9a\u4e49\u3002\u800cextern int a;\u662f\u58f0\u660e\u3002\u4f46\u4f1a\u4ea7\u751f\u4e00\u6761\u8b66\u544a\uff08\u8fd9\u6837extern\u5c31\u5931\u53bb\u4e86\u539f\u6709\u7684\u610f\u4e49\uff0c\u662f\u4e0d\u63a8\u8350\u7684\u7528\u6cd5\uff09\u3002 - \u5bf9\u4e8e\u51fd\u6570\u800c\u8a00\uff0c\u548c\u5f15\u7528\u53d8\u91cf\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u9700\u8981\u8c03\u7528\u5176\u4ed6.c\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\uff0c\u5728\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u58f0\u660e\u524d\u52a0extern\u5373\u53ef\uff0c\u4e0d\u52a0extern\u800c\u76f4\u63a5\u58f0\u660e\u51fd\u6570\u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3a\u58f0\u660e\u5168\u5c40\u51fd\u6570\u9ed8\u8ba4\u524d\u9762\u5e26\u6709extern\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#31","title":"3.1 \u5efa\u8bae\u7528\u6cd5","text":"<p>\u4f8b\u5982\uff1a\u5728a.h\u91cc\u5199extern int a;\uff08\u58f0\u660e\uff09\uff0ca.c\u6587\u4ef6\u4e2d\u5b9a\u4e49int a = 5\uff0c\u5982\u679c\u8981\u5728\u5176\u4ed6\u6587\u4ef6\u91cc\u8c03\u7528a\u8fd9\u4e2a\u53d8\u91cf\uff0c\u76f4\u63a5#include\uff0c\u7136\u540e\u76f4\u63a5\u4f7f\u7528a\u8fd9\u4e2a\u53d8\u91cf\u5373\u53ef\u3002"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#32-externinclude","title":"3.2 extern\u548cinclude\u7684\u533a\u522b","text":"<p>include\u76f8\u5f53\u4e8e\u628ainclude .h\u6587\u4ef6\u76f4\u63a5\u5e26\u5165\u5230\u672c\u6e90\u6587\u4ef6\u91cc\uff0c\u6bd4\u5982\u5728b.c\u6587\u4ef6\u91ccinclude \u201ca.h\u201d\uff0c\u5c31\u76f8\u5f53\u4e8e\u628aa.h\u6587\u4ef6\u91cc\u6240\u6709\u5b9a\u4e49\u7684\u53d8\u91cf\u548c\u51fd\u6570\u5168\u90e8\u62f7\u8d1d\u4e86\u4e00\u4efd\u653e\u5165\u4e86b.c\u91cc\uff0c\u4e00\u4e2a\u9879\u76ee\u91cc\uff0c\u4e00\u4e2a.h\u6587\u4ef6\u53ef\u80fd\u4f1a\u88ab\u591a\u4e2a.c\u6e90\u6587\u4ef6\u5305\u542b\uff0c\u8fd9\u6837\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u91cd\u590d\u5b9a\u4e49\u7684\u9519\u8bef\u3002\u800c\u4e14\u5c3d\u91cf\u4e0d\u8981\u5728.h\u91cc\u5b9a\u4e49\u53d8\u91cf\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u597d\u7684\u4e60\u60ef\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#4-inline","title":"4 inline","text":"<p>inline\u548cconstexpr\u90fd\u53ef\u4ee5\u591a\u6b21\u5b9a\u4e49\uff08\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\uff08cpp\u6587\u4ef6\uff09\u5b9a\u4e49\u4e00\u6b21\uff09\u3002\u56e0\u6b64\u53ef\u4ee5\u5c06\u5b9a\u4e49\u5199\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528\u65f6include\u8be5\u5934\u6587\u4ef6\u5373\u53ef\uff0c\u4e0d\u4f1a\u62a5\u91cd\u590d\u5b9a\u4e49\u7684\u9519\u8bef\u3002</p> <p>inline\u8868\u793a\u5185\u8054\u3002\u8868\u793a\u51fd\u6570\u6216\u53d8\u91cf\u5168\u5c40\u53ea\u6709\u4e00\u4efd\uff0c\u53ef\u4ee5\u6709\u591a\u6b21\u5b9a\u4e49\u3002 - \u4ee5inline\u4fee\u9970\u7684\u51fd\u6570\uff0c\u5728\u7f16\u8bd1\u65f6\u4f1a\u5728\u8c03\u7528\u5185\u8054\u51fd\u6570\u7684\u5730\u65b9\u5c55\u5f00\uff0c\u6ca1\u6709\u51fd\u6570\u538b\u6808\u7684\u5f00\u9500\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u3002inline\u53ea\u662f\u5bf9\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u5efa\u8bae\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u53bb\u4f18\u5316\u3002inline\u5fc5\u987b\u548c\u51fd\u6570\u5b9a\u4e49\u653e\u5728\u4e00\u8d77\u624d\u6709\u4f5c\u7528\uff0c\u653e\u5728\u58f0\u660e\u524d\u4e0d\u8d77\u4f5c\u7528\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u5185\u8054\u51fd\u6570\uff0c\u4e0d\u80fd\u50cf\u666e\u901a\u51fd\u6570\u90a3\u6837\uff0c\u76f4\u63a5\u5728.h\u6587\u4ef6\u91cc\u9762\u58f0\u660e\u4e0b\uff0c\u6e90\u6587\u4ef6\u91cc\u9762\u5b9a\u4e49\u4e0b\uff0c\u7136\u540e\u5176\u4ed6C\u6587\u4ef6\u5c31\u53ef\u4ee5\u8c03\u7528 - \u5355\u72ec\u5b9a\u4e49inline\u51fd\u6570\u6700\u597d\u548cstatic\u8fde\u7528\u3002\u5982\u679cinline\u51fd\u6570\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u51fa\u73b0\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a.h\u88ab\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u5305\u542b\uff0c\u5219\u4f1a\u51fa\u73b0\u91cd\u590d\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5931\u8d25\u3002\u800c\u52a0\u4e0astatic\u7684\u524d\u7f00\u540e\uff0c\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002static\u53ef\u4ee5\u9650\u5236\u4f5c\u7528\u57df\u5728\u5f53\u524d\u51fd\u6570\u5b9a\u4e49\u7684\u6587\u4ef6\u3002\u5373\u4f7f\u6709\u591a\u4e2a\u5b9a\u4e49\u4e5f\u4e0d\u51b2\u7a81\u3002</p> <ul> <li>static\u4fee\u9970\u7684\u5168\u5c40\u51fd\u6570\u6216\u8005\u53d8\u91cf\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u4efd\u5b9e\u4f8b\uff08\u9650\u5236\u5b9a\u4e49\u6587\u4ef6\u4e3a\u4f5c\u7528\u57df\uff09\u3002</li> <li>\u800cinline\u4fee\u9970\u7684\u5168\u5c40\u51fd\u6570\u6216\u53d8\u91cf\u90fd\u662f\u5171\u7528\u4e00\u4efd\u3002</li> <li>\u5bf9\u4e8e\u5168\u5c40\u51fd\u6570/\u53d8\u91cf\u800c\u8a00static inline\u4fee\u9970\u4e0e\u5355\u72ecstatic\u4fee\u9970\u7684\u6548\u679c\u4e00\u81f4\u3002</li> <li>\u5bf9\u4e8e\u7c7b\u5185\u53d8\u91cf\u800c\u8a00\uff0cstatic inline\u4fee\u9970\u7684\u6548\u679c\u5c31\u8ddfinline\u7684\u6548\u679c\u4e00\u81f4\uff0c\u5168\u5c40\u5171\u4eab\u4e00\u4efd\uff1b </li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%ADstatic%E3%80%81extern%E3%80%81include%E3%80%81inline%E3%80%81constexpr/#5-constexpr","title":"5 constexpr","text":"<p>\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u901a\u5e38\u7528\u6765\u5b9a\u4e49\u5168\u5c40\u5e38\u91cf\uff0c\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u597dconstexpr\u5e38\u91cf\uff0c\u53ef\u4ee5\u88ab\u591a\u4e2a\u6e90\u6587\u4ef6\u5f15\u5165\uff08\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\uff08\u6e90\u6587\u4ef6\uff09\u90fd\u53ef\u4ee5\u5b9a\u4e49\u4e00\u6b21inline\u6216constexpr\u4fee\u9970\u7684\u53d8\u91cf\uff0c\u901a\u5e38\u662finclude\u542b\u6709inline\u548cconstexpr\u7684\u5934\u6587\u4ef6\uff09\uff0c\u800c\u4e0d\u62a5\u9519\u3002</p> <ul> <li>\u5185\u8054\u51fd\u6570\u548cconstexpr\u51fd\u6570\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u591a\u6b21\u5b9a\u4e49\uff0c\u4f46\u662f\u591a\u4e2a\u5b9a\u4e49\u5fc5\u987b\u5b8c\u5168\u4e00\u81f4\uff0c\u56e0\u6b64\u5185\u8054\u51fd\u6570\u548cconstexpr\u51fd\u6570\u901a\u5e38\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u4e2d\u3002</li> <li>\u5728C++17\u4e2dconstexpr\u542b\u6709inline\u7684\u58f0\u660e\u3002</li> <li>constexpr\u7528\u6765\u5b9a\u4e49\u5168\u5c40\u5e38\u91cf\u66f4\u65b9\u4fbf\uff0c\u53ea\u9700\u8981\u5355\u72ec\u5f00\u4e00\u4e2a.h\u6587\u4ef6\u4e13\u95e8\u653e\u5168\u5c40\u5e38\u91cf\u5373\u53ef\uff0c\u5176\u4ed6Cpp\u6587\u4ef6\u4f7f\u7528\u65f6\u53ea\u9700\u8981include\u8be5\u5934\u6587\u4ef6\u3002</li> <li></li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E5%B5%8C%E5%A5%97%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E%E7%9A%84%E8%AF%BB%E6%B3%95/","title":"C++\u4e2d\u5d4c\u5957\u7c7b\u578b\u58f0\u660e\u7684\u8bfb\u6cd5","text":"<p>C++\u4e2d\u7c7b\u578b\u58f0\u660e\u5e94\u8be5\u9075\u5faa\u4ee5\u4e0b\u539f\u5219\uff1a\u5148\u627e\u5230\u53d8\u91cf\u540d\uff0c\u5148\u5f80\u53f3\u627e\uff0c\u518d\u5f80\u5de6\u627e\uff0c\u9047\u5230\u62ec\u53f7\u4f9d\u6b21\u5faa\u73af\uff0c\u9047\u5230const\u53ef\u4ee5\u5148\u8df3\u8fc7\u3002 </p> <p>\u4e3e\u4f8b\uff1a</p> <p>v\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u5b58\u653e\u7684\u662f\u6307\u9488\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411int </p> <p>v\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u5b58\u7684\u662fint\uff08\u6570\u7ec4\u6307\u9488\uff09 </p> <p>v\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u5b58\u653e\u7684\u662f\u6307\u9488\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411int\u8fd4\u56de\u578b\u7684\u51fd\u6570 </p> <p>v\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u5b58\u7684\u662f\u6307\u9488\uff0c\u6307\u5411int\u8fd4\u56de\u578b\u7684\u51fd\u6570 </p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%83%BD%E6%98%AF%E8%99%9A%E5%87%BD%E6%95%B0/","title":"C++\u4e2d\u6784\u9020\u51fd\u6570\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u865a\u51fd\u6570","text":"<p>\u6700\u597d\u7684\u56de\u7b54\uff1a\u8fd9\u662f\u4e00\u4e2a\u5148\u6709\u9e21\u8fd8\u662f\u5148\u6709\u86cb\u7684\u95ee\u9898\u3002\u865a\u51fd\u6570\u901a\u8fc7\u865a\u8868\u8c03\u7528\uff0c\u865a\u8868\u662f\u5728\u6784\u9020\u51fd\u6570\u91cc\u521d\u59cb\u5316\u7684\u3002 \u5f53\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u8d4b\u503c\u7ed9\u7236\u7c7b\u6307\u9488\u65f6\uff0c\u5982\u679c\u6784\u9020\u51fd\u6570\u662f\u865a\u7684\uff0c\u5c31\u9700\u8981\u901a\u8fc7 vtable\u6765\u8c03\u7528\uff0c\u53ef\u662f\u5bf9\u8c61\u8fd8\u6ca1\u6709\u5b9e\u4f8b\u5316\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u7a7a\u95f4\u8fd8\u6ca1\u6709\uff0c\u65e0\u6cd5\u627e\u5230vtable\uff0c\u6240\u4ee5\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84tuple%E3%80%81get%E3%80%81tie/","title":"C++\u4e2d\u7684tuple\u3001get\u3001tie","text":"<p>1.tuple\u7684\u521b\u5efa</p> <p>2.get\u7684\u4f7f\u7528</p> <p>\u5728 C++11 \u7684\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u00a0std::get&lt; Index &gt;(tuple)\u00a0\uff08\u4ee5\u5e38\u91cf\u6574\u6570\u503c\u4e3a\u7d22\u5f15\u53f7\uff09\u64cd\u4f5c tuple \u4e2d\u7684\u53c2\u6570\uff0c\u800c\u5230\u4e86 C++14 \u4e4b\u540e\u7684\u6807\u51c6\uff0c\u65b0\u589e\u4e86\u00a0std::get&lt; Type &gt;(tuple)\u00a0\uff08\u4ee5\u6570\u636e\u7c7b\u578b\u4e3a\u7d22\u5f15\uff09\u7684\u65b9\u5f0f\u64cd\u4f5c tuple \u4e2d\u7684\u53c2\u6570\u3002</p> <p></p> <p></p> <ol> <li>tie\u7684\u7528\u6cd5 </li> </ol>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/","title":"C++\u4e2d\u7684\u4e00\u4e9b\u5751","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#1","title":"1.\u51fd\u6570\u4f53\u5916\u53ea\u80fd\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u6216\u8005\u5bf9\u8c61\uff0c\u800c\u4e0d\u80fd\u6267\u884c\u8bed\u53e5","text":"<p>\u5177\u4f53\u6267\u884c\u7684\u8bed\u53e5\u53ea\u80fd\u5199\u5230\u51fd\u6570\u4f53\u91cc\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570\u3002\u6bd4\u5982\u5728\u5168\u5c40\u4e2dstd::cout &lt;&lt; \"hello world\"\u662f\u4e0d\u53ef\u4ee5\u7684\u3002\u53ea\u80fd\u628a\u4ed6\u653e\u5230\u4e00\u4e2a\u51fd\u6570\u4e2d\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#2","title":"2.\u5355\u4f8b\u6a21\u5f0f","text":"<p>\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9759\u6001\u53d8\u91cf\uff0c\u7136\u540e\u5982\u679c\u518d\u6389\u7528\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u5728\u6267\u884c\u65b0\u5efa\u8fd9\u4e2a\u6307\u4ee4\u4e86\u3002\u4e0b\u56fe\u4e2db\uff0cc\u4e0d\u518d\u65b0\u5efa\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56dea\u521b\u5efa\u7684\u5355\u4f8b\u5730\u5740\u3002 </p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#3-staticoverrideconst","title":"3 \u7c7b\u5185static\u3001override\u58f0\u660e\uff0c\u5728\u7c7b\u5916\u4e0d\u9700\u8981\u91cd\u590d\u8bf4\u660e\uff0c\u4f46\u662fconst\u51fd\u6570\u9700\u8981\u3002","text":"<p>\u5728\u7c7b\u5185\u58f0\u660e\u65f6\u8981\u52a0static\u58f0\u660e\uff0c\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\u4e0d\u52a0\u3002\u7c7b\u4f3c\u7684\u8fd8\u6709override\u3001virtual\u3002\u4f46\u662fconst\u4e0d\u5305\u542b\u5728\u5185\u3002</p> <p> </p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#4inline","title":"4.\u7c7b\u5185\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u52a0\u4e0ainline\uff0c\u5728\u7c7b\u5916\u65f6\u9700\u8981\u624b\u52a8\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\u52a0\u4e0a\uff0c\u800c\u5728\u7c7b\u5185\u65e0\u9700\u52a0\u3002","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#5googlebool-funcconst-b-inputc-output","title":"5.\u5728google\u89c4\u8303\u4e2d\uff0c\u4e00\u822cbool func(const B &amp;input\uff0cC *output)\uff0c","text":"<p>\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u9996\u5148bool\u5929\u7136\u5177\u6709\u5b9e\u9645\u7684\u610f\u4e49\uff0c\u6bd4\u5982\u4e00\u4e2aprecess\u7c7b\u7684\u51fd\u6570\uff0c\u5929\u7136\u9700\u8981\u8fd4\u56de\u662f\u5426\u6210\u529f\u3002\u5176\u6b21\uff0c\u5982\u679coutput\u592a\u591a\uff0c\u4e00\u822c\u4e5f\u4f1a\u8fd9\u6837\u5199\u3002\u4e4b\u6240\u4ee5\u8f93\u51fa\u5199\u6210\u6307\u9488\u662f\u56e0\u4e3a\u6bd4\u8f83\u597d\u8fa8\u522b\u3002\u5982\u679c\u8fd4\u56de\u7684\u53ea\u662f\u4e00\u4e2a\u503c\uff0c\u90a3\u4e48A func(const &amp;B)\u4e5f\u5b8c\u5168\u6ca1\u95ee\u9898\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#6c","title":"6.C++\u4e2d\u7279\u6b8a\u7684\u6784\u9020\u51fd\u6570\uff1a\u6790\u6784\uff0c\u62f7\u8d1d\u6784\u9020\uff0c\u62f7\u8d1d\u590d\u5236\uff0c\u79fb\u52a8\u6784\u9020\uff0c\u79fb\u52a8\u8d4b\u503c\uff0c\u9075\u5faa\u4e09\u4e94\u539f\u5219\uff1a","text":"<p>\u4e5f\u53eb\u4e09\u4e94\u6cd5\u5219\uff0c\u6307\u7684\u662f\u6790\u6784\uff0c\u62f7\u8d1d\u6784\u9020\uff0c\u62f7\u8d1d\u590d\u5236\uff0c\u79fb\u52a8\u6784\u9020\uff0c\u79fb\u52a8\u8d4b\u503c\u9700\u8981\u540c\u65f6\u51fa\u73b0\u7684\u6d88\u5931\u3002\u8981\u4e48\u90fd\u5b9a\u4e49\uff0c\u8981\u4e48\u90fd\u4e0d\u5b9a\u4e49\u3002</p> <p>C++\u4e09\u6cd5\u5219\uff1a\u5982\u679c\u9700\u8981\u6790\u6784\u51fd\u6570\uff0c\u5219\u4e00\u5b9a\u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u64cd\u4f5c\u7b26\u3002 \u5728\u8f83\u65b0\u7684 C++11 \u6807\u51c6\u4e2d\uff0c\u4e3a\u4e86\u652f\u6301\u79fb\u52a8\u8bed\u4e49\uff0c\u53c8\u589e\u52a0\u4e86\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u8fd9\u6837\u5171\u6709\u4e94\u4e2a\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u6240\u4ee5\u53c8\u79f0\u4e3a\u201cC++\u4e94\u6cd5\u5219\u201d\uff1b \u4e5f\u5c31\u662f\u8bf4\uff0c\u201c\u4e09\u6cd5\u5219\u201d\u662f\u9488\u5bf9\u8f83\u65e7\u7684 C++89 \u6807\u51c6\u8bf4\u7684\uff0c\u201c\u4e94\u6cd5\u5219\u201d\u662f\u9488\u5bf9\u8f83\u65b0\u7684 C++11 \u6807\u51c6\u8bf4\u7684\uff1b\u4e3a\u4e86\u7edf\u4e00\u79f0\u547c\uff0c\u540e\u6765\u4eba\u4eec\u5e72\u628a\u5b83\u53eb\u505a\u201cC++ \u4e09/\u4e94\u6cd5\u5219\u201d\uff1b</p> <ol> <li> <p>\u53ea\u8981\u4e0d\u6d89\u53ca\u5230\u6307\u9488\u548c\u5185\u5b58\uff0c\u5c31\u4e0d\u8981\u53bb\u81ea\u5df1\u58f0\u660e\u62f7\u8d1d\u6784\u9020\uff0c\u62f7\u8d1d\u590d\u5236\uff0c\u79fb\u52a8\u6784\u9020\uff0c\u79fb\u52a8\u8d4b\u503c\u548c\u6790\u6784(\u4e94\u6cd5\u5219\uff0c\u9488\u5bf9C++11\u4e4b\u540e)\uff0c\u9ed8\u8ba4\u6784\u9020\u53ef\u4ee5\u7528defalut\u6765\u58f0\u660e\u3002\u5982\u679c\u6d89\u53ca\u5230\u6307\u9488\u548c\u5185\u5b58\uff0c\u90a3\u4e48\u5c31\u8981\u9075\u5faa\u4e09\u539f\u5219(\u540c\u65f6\u5b9a\u4e49\u6790\u6784\uff0c\u62f7\u8d1d\u6784\u9020\uff0c\u62f7\u8d1d\u8d4b\u503c)\u3002 \u5728\u6d89\u53ca\u6307\u9488\u548c\u5185\u5b58\u65f6\u9700\u8981\u5b9a\u4e49\u6790\u6784\u51fd\u6570\u7684\u539f\u56e0\u662f\u8fd9\u6837\uff1a\u5408\u6210\u7684\u6790\u6784\u51fd\u6570\u4e0d\u8db3\u4ee5\u91ca\u653e\u7c7b\u6240\u62e5\u6709\u7684\u8d44\u6e90\u3002\u540c\u65f6\u5728\u62f7\u8d1d\u4e2d\uff0c\u6709\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\uff0c\u6211\u4eec\u5fc5\u987b\u9632\u6b62\u6d45\u62f7\u8d1d\u95ee\u9898\uff0c\u6240\u4ee5\uff0c\u4e00\u5b9a\u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u662f\u9632\u6b62\u6d45\u62f7\u8d1d\u95ee\u9898\u6240\u5fc5\u987b\u7684\u3002</p> </li> <li> <p>\u4e0d\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u80af\u5b9a\u4e0d\u4f1a\u51fa\u9519\uff0c\u4f46\u662f\u53ef\u80fd\u6027\u80fd\u8f83\u4f4e\u3002</p> </li> <li>\u5982\u679c\u58f0\u660e\u4e86\u79fb\u52a8\u64cd\u4f5c\uff0c\u5219\u5220\u9664\u62f7\u8d1d\u64cd\u4f5c\uff08\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u590d\u5236\uff09</li> </ol> <p>\u5982\u679c\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u79fb\u52a8\u6784\u9020\u51fd\u6570/\u79fb\u52a8\u8fd0\u7b97\u7b26\uff0c\u5219\u8be5\u7c7b\u7684\u5408\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f1a\u88ab\u5b9a\u4e49\u4e3a\u5220\u9664\u7684\uff08\u56e0\u4e3a\u751f\u6210\u7684\u4f1a\u6709\u5371\u9669\uff0c\u4e0d\u5982\u76f4\u63a5\u5220\u9664\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u79fb\u52a8\u64cd\u4f5c\u7684\u7c7b\u4e5f\u8981\u5b9a\u4e49\u81ea\u5df1\u7684\u62f7\u8d1d\u64cd\u4f5c\uff0c\u5426\u5219\u62f7\u8d1d\u64cd\u4f5c\u4f1a\u88ab\u9ed8\u8ba4\u5b9a\u4e49\u4e3a\u5220\u9664\u7684\u3002</p> <p>1. </p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#6","title":"6.\u4ec0\u4e48\u65f6\u5019\u4f20\u503c\u548c\u4f20\u5f15\u7528","text":"<p>\u8865\u5145\uff1a\u667a\u80fd\u6307\u9488\uff0c\u4e00\u822c\u4e5f\u53ef\u8981\u4f20\u5f15\u7528\u3002</p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/","title":"C++\u4e2d\u7684\u5bf9\u8c61\u6a21\u578b","text":"<p>\u5bf9\u8c61\u6a21\u578b</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#1","title":"1 \u5bf9\u8c61\u5e03\u5c40\u603b\u89c8","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#2","title":"2 \u7ee7\u627f\u4e0b\u7684\u5bf9\u8c61\u5e03\u5c40\uff08\u975e\u591a\u6001\uff09","text":"<p>\u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b\u5728\u4f4e\u5730\u5740\uff0c\u5b50\u7c7b\u5728\u9ad8\u5730\u5740\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#21","title":"2.1 \u5355\u7ee7\u627f","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#22","title":"2.2 \u591a\u7ee7\u627f","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#3","title":"3 \u7ee7\u627f\u4e0b\u7684\u5bf9\u8c61\u5e03\u5c40\uff08\u591a\u6001\uff09","text":"<ul> <li>c++\u89c4\u5b9a\uff0c\u5f53\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u540e\uff0c\u5176\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u90fd\u81ea\u52a8\u6210\u4e3a\u865a\u51fd\u6570\u3002\u6240\u4ee5\u865a\u51fd\u6570\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\u65f6\u53ef\u4ee5\u4e0d\u7528\u52a0virtual\u5173\u952e\u5b57\uff0c\u4f46\u4e60\u60ef\u4e0a\u6bcf\u4e00\u5c42\u58f0\u660e\u51fd\u6570\u65f6\u90fd\u52a0virtual,\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u6e05\u6670\u3002</li> <li>\u865a\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49\u5206\u79bb\u65f6\uff0c\u58f0\u660e\u52a0virtual\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u4e0d\u52a0\u3002</li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#31","title":"3.1 \u5355\u7ee7\u627f","text":"<ul> <li> <p>\u6709\u4e24\u4e2a\u6790\u6784\u51fd\u6570\uff0c\u4f46\u662f\u6211\u4eec\u5176\u5b9e\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6790\u6784\u51fd\u6570\uff08\u5269\u4e0b\u7684\u90a3\u4e2a\u662f\u7f16\u8bd1\u5668\u5408\u6210\u7684\uff0c\u5982\u4e0b\u56fe\u4e2d\u7684\u7ea2\u8272\u548c\u6a59\u8272\u7684\u6790\u6784\uff09</p> </li> <li> <p>\u5f53\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u5b50\u7c7b\uff08Point2D * pt= Point3D();\uff09\uff0c\u5b9e\u9645\u4e0a\u901a\u8fc7\u865a\u51fd\u6570\u8868\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u8c03\u7528\u7684\u662f\u5b50\u7c7b\u7684\u51fd\u6570\u3002\u8fd9\u5c31\u662f\u591a\u6001\u3002</p> </li> <li> <p>\u5047\u8bbePoint2D\u6709\u4e00\u4e2a\u865a\u51fd\u6570vfunc()\uff0c\u4f46\u662fPoint3D\u6ca1\u6709\u91cd\u5199\uff0cPoint3D\u4e5f\u4f1a\u628avfunc()\u7ee7\u627f\u4e0b\u6765\uff0c\u56e0\u6b64\u901a\u8fc7\u5b50\u7c7b\u6307\u9488\u8c03\u7528vfunc\u65f6\u4f1a\u8c03\u7528\u5230\u7236\u7c7b\u7684vfun\u3002</p> </li> <li> <p>Point3D\u7684\u865a\u6790\u6784\u51fd\u6570\uff08\u4e0d\u58f0\u660e\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\uff09\u4f1a\u81ea\u52a8\u6389\u7528Point2D\u7684\u865a\u6790\u6784\u51fd\u6570\u3002</p> </li> </ul> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#4","title":"4 \u6784\u9020\u51fd\u6570\u8bed\u4e49\u5b66","text":""},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#41","title":"4.1 \u5408\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u56db\u79cd\u60c5\u51b5","text":"<p> \u7f16\u8bd1\u5668\u4f1a\u5408\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u76844\u79cd\u60c5\u51b5\uff08\u603b\u7ed3\u6765\u8bf4\u53ea\u8981\u7c7b\u5185\u6709\u9700\u8981\u521d\u59cb\u5316\u7684\u6210\u5206\uff0c\u6bd4\u5982\u865a\u51fd\u6570\u8868\u3001\u975e\u9759\u6001\u6210\u5458\u9ed8\u8ba4\u521d\u59cb\u5316\u3001\u4e3b\u52a8\u521d\u59cb\u5316\u6210\u5458\uff0c\u90a3\u4e48\u5c31\u4f1a\u5408\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff09\uff1a</p> <p>\u53ea\u8981\u4e0b\u5217\u56db\u79cd\u60c5\u51b5\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5c31\u4e0d\u4f1a\u5408\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002</p> <ol> <li> <p>\u7c7b\u4e2d\u6709\u865a\u51fd\u6570 </p> </li> <li> <p>\u7c7b\u4e2d\u6709\u7b49\u53f7\u6216\u8005\u5927\u62ec\u53f7\u521d\u59cb\u5316 </p> </li> <li> <p>\u57fa\u7c7b\u6709\u81ea\u5b9a\u4e49\uff08\u6216\u8005\u7f16\u8bd1\u5668\u5408\u6210\u7684\u6709\u610f\u4e49\uff09\u7684\u6784\u9020\u51fd\u6570\u3002\u7f16\u8bd1\u5668\u5408\u6210\u7684\u6709\u610f\u4e49\u6784\u9020\u51fd\u6570\u63071. 2. \u60c5\u51b5 </p> </li> <li> <p>\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u6709\u81ea\u5b9a\u4e49\uff08\u6216\u8005\u7f16\u8bd1\u5668\u5408\u6210\u7684\u6709\u610f\u4e49\uff09\u7684\u6784\u9020\u51fd\u6570\u3002\u7f16\u8bd1\u5668\u5408\u6210\u7684\u6709\u610f\u4e49\u6784\u9020\u51fd\u6570\u63071. 2. \u60c5\u51b5     \u57fa\u672c\u6570\u636e\u6210\u5458\uff0c\u6bd4\u5982int\u3001double\u3001float\uff0c\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 </p> </li> </ol>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#42","title":"4.2 \u57fa\u7c7b\u548c\u6570\u636e\u6210\u5458\u7684\u521d\u59cb\u5316\u65f6\u673a","text":"<ol> <li> <p>\u5bf9\u4e8e\u57fa\u7c7b\uff0c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u505a\u4e00\u5b9a\u7684\u8865\u5145\uff0c\u6bd4\u5982\u81ea\u52a8\u8c03\u7528\u7236\u7c7b\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 </p> </li> <li> <p>\u521d\u59cb\u5316\u5217\u8868\u66f4\u52a0\u9ad8\u6548\uff0c\u76f4\u63a5\u4f1a\u8c03\u7528string\u7684\u6784\u9020\u51fd\u6570\uff0c\u800c\u4e0d\u7528\u8c03\u7528string\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u518d\u8d4b\u503c\u3002 </p> </li> <li> <p>\u521d\u59cb\u5316\u5217\u8868\u7684\u8865\u5145\uff0c\u521d\u59cb\u5316\u5217\u8868\u7684\u987a\u5e8f\u4e0d\u91cd\u8981\uff0c\u8fd8\u662f\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u521d\u59cb\u5316\uff08\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u6784\u9020\uff09\u3002</p> </li> </ol> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#43","title":"4.3 \u62f7\u8d1d\u6784\u9020","text":"<p> \u4e0b\u5217\u56db\u79cd\u60c5\u51b5\u4f7f\u7c7b\u6ca1\u6709\u4f4d\u9010\u6b21\u62f7\u8d1d\u7684\u7279\u6027\uff0c\u4f1a\u5408\u6210\u62f7\u8d1d\u6784\u9020\u3002 - data member\u6709\u62f7\u8d1d\u6784\u9020 - \u57fa\u7c7b\u6709\u62f7\u8d1d\u6784\u9020 - \u7c7b\u6709\u865a\u51fd\u6570 - \u7ee7\u627f\u81ea\u865a\u7c7b</p> <p></p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/#5","title":"5 \u6790\u6784\u51fd\u6570\u8bed\u4e49\u5b66","text":"<p>\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6790\u6784\u51fd\u6570\uff0c\u5982\u679c\u5185\u90e8\u7684\u6210\u5458\u53d8\u91cf\u6216\u8005\u662f\u57fa\u7c7b\u6709\u6790\u6784\u51fd\u6570\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u5408\u6210\u6790\u6784\u51fd\u6570\u3002 \u4e0b\u5217\u4e2d\u2460\u3001\u2461\u3001\u2462\u3001\u2463\u90fd\u4e0d\u4f1a\u5408\u6210\u6790\u6784\u51fd\u6570\u3002\u4f46\u662f\u2463\u662f\u9700\u8981\u7a0b\u5e8f\u5458\u5b9a\u4e49\u6790\u6784\u51fd\u6570\u7684\uff0c\u4e0d\u7136\u4f1a\u5185\u5b58\u6cc4\u6f0f\u3002</p> <p></p> <p>\u5bf9\u4e8e\u7ee7\u627f\uff0c\u5148\u8c03\u7528\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff08\u4f1a\u81ea\u52a8\u5408\u6210\u5230\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e2d\uff09 </p> <p>\u6790\u6784\u987a\u5e8f\u4e0e\u58f0\u660e\u987a\u5e8f\u76f8\u53cd\uff08\u7531\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u6790\u6784\uff09\uff1a </p> <p>\u6784\u9020\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u6784\u9020\uff0c\u6790\u6784\u7531\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u6790\u6784\u3002 \u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b\u5728\u4f4e\u5730\u5740\uff0c\u5b50\u7c7b\u5728\u9ad8\u5730\u5740\u3002 \u539f\u56e0\uff1a\u4f9d\u8d56\u5173\u7cfb</p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E6%A8%A1%E6%9D%BF%E5%85%83%E7%BC%96%E7%A8%8B/","title":"C++\u4e2d\u7684\u6a21\u677f\u5143\u7f16\u7a0b","text":"<ul> <li>SFINAE\uff08substitution failure is not an error\uff09\uff1a\u66ff\u6362\u5931\u8d25\u4e0d\u62a5\u9519\uff0c\u82f1\u6587\u8bfb\u6cd5\u4e3ase fei ni a\uff0c\u4ed6\u7684\u610f\u601d\u662f\u5047\u5982\u6709\u4e00\u4e2a\u7279\u5316\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u65f6\u9519\u8bef(\u5373\u51fa\u73b0\u7f16\u8bd1\u5931\u8d25)\uff0c\u53ea\u8981\u8fd8\u6709\u522b\u7684\u9009\u62e9\u53ef\u4ee5\u88ab\u9009\u62e9\uff0c\u90a3\u4e48\u5c31\u65e0\u89c6\u8fd9\u4e2a\u7279\u5316\u9519\u8bef\u800c\u53bb\u9009\u62e9\u53e6\u5916\u7684\u53ef\u9009\u9009\u62e9\u3002</li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E6%A8%A1%E6%9D%BF%E5%85%83%E7%BC%96%E7%A8%8B/#-","title":"- \u5f53\u8c03\u7528\u6a21\u677f\u51fd\u6570\u65f6\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u4f20\u5165\u53c2\u6570\u63a8\u5bfc\u6700\u5408\u9002\u7684\u6a21\u677f\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u5982\u679c\u67d0\u4e00\u4e2a\u6216\u8005\u67d0\u51e0\u4e2a\u6a21\u677f\u51fd\u6570\u63a8\u5bfc\u51fa\u6765\u662f\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\u7684\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u53ef\u4ee5\u6b63\u786e\u63a8\u5bfc\u51fa\u6765\uff0c\u90a3\u4e48\u90a3\u51e0\u4e2a\u63a8\u5bfc\u5f97\u5230\u7684\u53ef\u80fd\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u7684\u6a21\u677f\u51fd\u6570\u5e76\u4e0d\u4f1a\u5f15\u53d1\u7f16\u8bd1\u9519\u8bef\u3002\u8fd9\u6bb5\u8bdd\u5f88\u7ed5\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7528\u4ee3\u7801\u8bf4\u660e\u4e00\u4e0b\uff0c\u4e00\u770b\u4fbf\u77e5\u3002","text":"<p><pre><code>struct Test {\n    typedef int foo;\n};\n\ntemplate &lt;typename T&gt; \nvoid f(typename T::foo) {} // Definition #1\n\ntemplate &lt;typename T&gt; \nvoid f(T) {}               // Definition #2\n\nint main() {\n    f&lt;Test&gt;(10); // Call #1.\n    f&lt;int&gt;(10);  // Call #2. Without error (even though there is no int::foo) thanks to SFINAE.\n}\n</code></pre>   \u8fd9\u662fwiki\u4e0aSFINAE\u7684\u4e00\u4e2a\u7ecf\u5178\u793a\u4f8b\uff0c\u6ce8\u91ca\u5df2\u7ecf\u89e3\u91ca\u7684\u76f8\u5f53\u660e\u767d\uff0c\u7531\u4e8e\u63a8\u5bfc\u6a21\u677f\u51fd\u6570\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6b63\u786e\u7684\u7248\u672c\uff0c\u6240\u4ee5\u5373\u65f6int::foo\u662f\u4e00\u4e2a\u8bed\u6cd5\u9519\u8bef\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\u8fd9\u5c31\u662fSFINAE\u8981\u4e49\u3002\u5728C++11\u4e2d\uff0c\u6807\u51c6\u786e\u7acb\u4e86\u8fd9\u79cd\u7f16\u8bd1\u7684\u884c\u4e3a\uff0c\u800c\u4e0d\u50cfC++98\u672a\u660e\u786e\u5b9a\u4e49\u5b83\u7684\u884c\u4e3a\u3002\u901a\u8fc7std::enable_if\u548cSFINAE\u7684\u5171\u540c\u4f7f\u7528\uff0c\u4f1a\u4ea7\u751f\u5f88\u591a\u5f88\u5947\u5999\u7684\u5b9e\u73b0\uff0cSTL\u5e93\u4e2d\u5927\u91cf\u7684\u5e94\u7528\u4e86\u8fd9\u79cd\u7ec4\u5408\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u7ec4\u5408\u4e00\u8d77\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E6%A8%A1%E6%9D%BF%E5%85%83%E7%BC%96%E7%A8%8B/#-sfinaeenable_if","title":"- \u6a21\u677f\u66ff\u6362\u7684\u8fc7\u7a0b\uff1a\u7b2c\u4e8c\u6b65\u7528\u5230\u4e86SFINAE\uff0c\u66ff\u6362\u5931\u8d25\u4e86\u6ca1\u5173\u7cfb\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u66ff\u6362\u6210\u529f\u4e86\u5c31\u4e0d\u62a5\u9519\uff0c\u5982\u679c\u60f3\u4e3b\u52a8\u8ba9\u5176\u66ff\u6362\u5931\u8d25\uff0c\u5c31\u53ef\u4ee5\u7528enable_if\u4e86","text":"<ul> <li> <p>type_traits\u662fC++11\u65b0\u5f15\u5165\u7684\u6a21\u677f\u5e93\uff08\u7c7b\u578b\u7279\u5f81\uff09\uff0c\u91cc\u8fb9\u6838\u5fc3\u7684\u6a21\u677f\u7c7b\u6709enable_if\u548cis_same\uff0c\u8fd9\u4e2a\u5e93\u4e2d\u6bcf\u4e00\u4e2a\u6a21\u677f\u7c7b\u90fd\u6709\u4e00\u4e2avalue\u503c\u7528\u6765\u8868\u793a\u542b\u4e49\u3002\u8be5\u5e93\u7684\u5b9e\u73b0\u4e00\u822c\u90fd\u662f\u901a\u8fc7\u901a\u7528\u6a21\u677f+\u6a21\u677f\u7279\u4f8b\u6765\u5b9e\u73b0\u7684\u3002</p> </li> <li> <p>\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0ctype_traits\u53ef\u4ee5\u7528C++20\u7684concept\u548crequire\u6765\u66ff\u4ee3\uff0c\u5199\u6cd5\u66f4\u52a0\u7b80\u6d01\u3002\uff08https://www.zhihu.com/question/542280815\uff09</p> </li> <li> <p>\u96f6\u6210\u672c\u62bd\u8c61\uff1a\u4e00\u822c\u6307\u8fd0\u884c\u65f60\u6210\u672c\uff0c\u610f\u5473\u7740\u6dfb\u52a0\u66f4\u9ad8\u5c42\u6b21\u7684\u7f16\u7a0b\u6982\u5ff5\uff0c\u6bd4\u5982\u6cdb\u578b\u3001\u96c6\u5408\u7b49\u7b49\uff0c\u4e0d\u4f1a\u5e26\u6765\u8fd0\u884c\u65f6\u6210\u672c\uff0c\u53ea\u4f1a\u5e26\u6765\u7f16\u8bd1\u5668\u65f6\u95f4\u6210\u672c(\u4ee3\u7801\u7f16\u8bd1\u8d77\u6765\u4f1a\u66f4\u6162)\u3002\u5728\u96f6\u6210\u672c\u62bd\u8c61\u4e0a\u7684\u4efb\u4f55\u64cd\u4f5c\u90fd\u548c\u4f7f\u7528\u8f83\u4f4e\u7ea7\u522b\u7684\u7f16\u7a0b\u6982\u5ff5(\u5bf9\u4e8e\u5faa\u73af\u3001\u8ba1\u6570\u5668\u3001 ifs \u7b49\u7b49)\u624b\u5de5\u7f16\u5199\u5339\u914d\u529f\u80fd\u4e00\u6837\u5feb\u3002</p> </li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/","title":"C++\u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49","text":"<p>note\uff1a\u4e00\u822c\u6765\u4ee5*_t\u7ed3\u5c3e\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3atype/typedef\u7684\u7f29\u5199\uff0c\u8868\u793a\u5b83\u662f\u901a\u8fc7typedef\u5b9a\u4e49\u7684\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u6570\u636e\u7c7b\u578b\u3002uint8_t\uff0cuint16_t\uff0cuint32_t\u7b49\u90fd\u4e0d\u662f\u4ec0\u4e48\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u4eec\u53ea\u662f\u4f7f\u7528typedef\u7ed9\u7c7b\u578b\u8d77\u7684\u522b\u540d\uff0c\u65b0\u74f6\u88c5\u8001\u9152\u7684\u628a\u620f\u3002 \u53c8\u6bd4\u5982float64\u662fdouble\u7684\u522b\u540d</p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/#1","title":"1 \u5185\u7f6e\u7c7b\u578b","text":"<p>\u4e03\u79cd\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578bbool\u3001char\u3001int\u3001flaot\u3001double\u3001void\u3001wchar_t\uff08typedef short int wchar_t;\uff09 \u4e00\u4e9b\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u578b\u4fee\u9970\u7b26\u8fdb\u884c\u4fee\u9970\uff08int\u548cchar\u9ed8\u8ba4\u90fd\u662fsigned\uff09\uff1a - signed - unsigned - short - long</p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/#char","title":"char","text":"\u7c7b\u578b \u4f4d \u8303\u56f4 char 1 \u4e2a\u5b57\u8282 -128 \u5230 127 \u6216\u8005 0 \u5230 255 unsigned char 1 \u4e2a\u5b57\u8282 0 \u5230 255 signed char 1 \u4e2a\u5b57\u8282 -128 \u5230 127"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/#int","title":"int","text":"\u7c7b\u578b \u4f4d \u8303\u56f4 int 4 \u4e2a\u5b57\u8282 -2147483648 \u5230 2147483647 unsigned int 4 \u4e2a\u5b57\u8282 0 \u5230 4294967295 signed int 4 \u4e2a\u5b57\u8282 -2147483648 \u5230 2147483647 short int 2 \u4e2a\u5b57\u8282 -32768 \u5230 32767 unsigned short int 2 \u4e2a\u5b57\u8282 0 \u5230 65,535 signed short int 2 \u4e2a\u5b57\u8282 -32768 \u5230 32767 long int 8 \u4e2a\u5b57\u8282 -9,223,372,036,854,775,808 \u5230 9,223,372,036,854,775,807 signed long int 8 \u4e2a\u5b57\u8282 -9,223,372,036,854,775,808 \u5230 9,223,372,036,854,775,807 unsigned long int 8 \u4e2a\u5b57\u8282 0 \u5230 18,446,744,073,709,551,615"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/#float","title":"float","text":"float 4 \u4e2a\u5b57\u8282 \u7cbe\u5ea6\u578b\u53604\u4e2a\u5b57\u8282\uff0832\u4f4d\uff09\u5185\u5b58\u7a7a\u95f4\uff0c\u00b1 3.4e \u00b1 38 (~7 \u4e2a\u6570\u5b57)"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/#double","title":"double","text":"double 8 \u4e2a\u5b57\u8282 \u53cc\u7cbe\u5ea6\u578b\u53608 \u4e2a\u5b57\u8282\uff0864\u4f4d\uff09\u5185\u5b58\u7a7a\u95f4\uff0c\u00b1 1.7e \u00b1 308 (~15 \u4e2a\u6570\u5b57) long double 16 \u4e2a\u5b57\u8282 \u957f\u53cc\u7cbe\u5ea6\u578b 16 \u4e2a\u5b57\u8282\uff08128\u4f4d\uff09\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u63d0\u4f9b18-19\u4f4d\u6709\u6548\u6570\u5b57\u3002"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E7%9A%84%E7%BB%A7%E6%89%BF/","title":"C++\u4e2d\u7684\u7ee7\u627f","text":"<ol> <li> <p>C++\u4e2d\u7684\u7ee7\u627f\u5206\u4e3apublic\u3001protected\u3001private\uff0c\u4e09\u79cd\u7ee7\u627f\u5173\u7cfb\u7684\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a </p> </li> <li> <p>\u8981\u60f3\u5b9e\u73b0\u591a\u6001\u53ea\u80fd\u7528public\u7ee7\u627f\uff0c\u5982\u4e0b\u56fe\u6240\u793a </p> </li> </ol> <p>C++\u7684\u79c1\u6709\u7ee7\u627f\u548cEBO_fl2011sx\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4e3b\u8981\u539f\u56e0\u5982\u4e0b\uff1a \u5b9e\u9645\u4e0a\uff0cC++\u4e2d\u7684\u7ee7\u627f\uff0c\u5b9e\u9645\u4e0a\u662f\u628a\u7236\u7c7b\u5168\u90e8\u7ee7\u627f\u8fc7\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\u76f4\u63a5\u628a\u7236\u7c7b\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\uff1a</p> <p>class A{ }\uff1b class B\uff1aA{ }\uff1b \u5b9e\u9645\u4e0a\uff0cB\u4e2d\u5b58\u5728\u4e00\u4e2aA\u7684\u5bf9\u8c61\uff1a class B{ A a\uff1b }\uff1b</p> <p>\u90a3\u4e48\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u5982\u679c\u662fprivate\u7ee7\u627f\uff0c\u90a3\u4e48\u6709\uff1a class B{ private\uff1a \u00a0\u00a0 \u00a0A a\uff1b }\uff1b</p> <p>\u6240\u4ee5\u5bf9\u4e8eA\u4e2d\u539f\u6765\u7684public\uff0cprotected\uff0cprivate\u5143\u7d20\uff0c\u5728B\u4e2d\u53d6\u4ea4\u96c6\uff0c\u5206\u522b\u53d8\u4e3aprivate\uff0cprivate\uff0c\u4e0d\u53ef\u89c1\uff08\u8bb0\u4f4f\u5c31\u884c\u4e86\uff0c\u867d\u7136\u4e0d\u53ef\u89c1\uff0c\u4f46\u662f\u662f\u5b9e\u9645\u5b58\u5728B\u4e2d\u7684\u5185\u5b58\u7684\uff09</p> <p>\u90a3\u4e48\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u5982\u679c\u662fprotected\u7ee7\u627f\uff0c\u90a3\u4e48\u6709\uff1a class B{ protected\uff1a \u00a0\u00a0 \u00a0A a\uff1b }\uff1b</p> <p>\u6240\u4ee5\u5bf9\u4e8eA\u4e2d\u539f\u6765\u7684public\uff0cprotected\uff0cprivate\u5143\u7d20\uff0c\u5728B\u4e2d\u53d6\u4ea4\u96c6\uff0c\u5206\u522b\u53d8\u4e3aprotected\uff0cprotected\uff0c\u4e0d\u53ef\u89c1\uff08\u8bb0\u4f4f\u5c31\u884c\u4e86\uff0c\u867d\u7136\u4e0d\u53ef\u89c1\uff0c\u4f46\u662f\u662f\u5b9e\u9645\u5b58\u5728B\u4e2d\u7684\u5185\u5b58\u7684\uff09</p> <p>\u90a3\u4e48\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u5982\u679c\u662fpublic\u7ee7\u627f\uff0c\u90a3\u4e48\u6709\uff1a class B{ public\uff1a \u00a0\u00a0 \u00a0A a\uff1b }\uff1b</p> <p>\u6240\u4ee5\u5bf9\u4e8eA\u4e2d\u539f\u6765\u7684public\uff0cprotected\uff0cprivate\u5143\u7d20\uff0c\u5728B\u4e2d\u53d6\u4ea4\u96c6\uff0c\u5206\u522b\u53d8\u4e3apublic\uff0cprotected\uff0c\u4e0d\u53ef\u89c1\uff08\u8bb0\u4f4f\u5c31\u884c\u4e86\uff0c\u867d\u7136\u4e0d\u53ef\u89c1\uff0c\u4f46\u662f\u662f\u5b9e\u9645\u5b58\u5728B\u4e2d\u7684\u5185\u5b58\u7684\uff09</p> <p>\u6240\u4ee5\u8bf4\u5982\u679c\u5b9e\u73b0\u591a\u6001\uff0c\u628a\u5b50\u7c7b\u7684\u5730\u5740\u8d4b\u7ed9\u7236\u7c7b\u578b\u7684\u6307\u9488\uff08\u5373\u628a\u5b50\u7c7b\u4e2d\u7236\u7c7b\u7684\u90e8\u5206\uff0c\u4f20\u7ed9\u5916\u8fb9\u7684\u7236\u7c7b\u6307\u9488\uff09\uff0c\u5373 A *a = new B\uff08\uff09\uff1b</p> <p>\u5982\u679c\u662fpublic\u7ee7\u627f\uff0cB\u4e2d\u7684A\u662fpublic\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5916\u90e8\u53d6\u5730\u5740\uff0c\u81ea\u7136\u5c31\u53ef\u4ee5\u628aB\u4e2dA\u7684\u5730\u5740\u8d4b\u7ed9A\u7684\u6307\u9488\u3002 \u5982\u679c\u662fprotected\u7ee7\u627f\uff0cB\u4e2d\u7684A\u662fprotected\u7684\uff0c\u4e0d\u80fd\u5728\u5916\u90e8\u53d6\u5730\u5740\uff0c\u6240\u4ee5\u4e0d\u80fd\u5b9e\u73b0\u628aB\u4e2dA\u7684\u5730\u5740\u8d4b\u7ed9A\u7684\u6307\u9488\uff0c\u81ea\u7136\u4e0d\u80fd\u5b9e\u73b0\u591a\u6001\u3002 \u5982\u679c\u662fprivate\u7ee7\u627f\uff0cB\u4e2d\u7684A\u662fprivate\u7684\uff0c\u4e0d\u80fd\u5728\u5916\u90e8\u53d6\u5730\u5740\uff0c\u6240\u4ee5\u4e0d\u80fd\u5b9e\u73b0\u628aB\u4e2dA\u7684\u5730\u5740\u8d4b\u7ed9A\u7684\u6307\u9488\uff0c\u81ea\u7136\u4e0d\u80fd\u5b9e\u73b0\u591a\u6001\u3002</p> <ol> <li>C++\u5bf9\u8c61\u5185\u5b58\u6a21\u578b\u7684\u5f88\u597d\u7684\u6559\u7a0b</li> </ol> <p>https://www.bilibili.com/video/BV1v64y1q7JT/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40</p> <ol> <li>\u7236\u7c7b\u548c\u5b50\u7c7b\u540c\u540d\u7684\u60c5\u51b5 \u5e76\u4e0d\u8986\u76d6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7236\u7c7b\uff1a\uff1a\u6210\u5458\u540d\u7684\u65b9\u5f0f\uff0c\u5728\u5b50\u7c7b\u4e2d\u8bbf\u95ee\u7236\u7c7b\u7684\u540c\u540d\u5bf9\u8c61\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 </li> </ol> <p>\u5176\u5b9e\u81ea\u5df1\u7684\u7c7b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u7528\u7c7b\u540d+\uff1a\uff1a\u8bbf\u95ee\uff0c\u53ea\u662f\u53ef\u4ee5\u7701\u7565\u3002 </p> <p></p> <p>\u5bf9\u4e8eC\u6765\u8bf4\uff0c\u5176\u5bf9\u8c61\u6a21\u578b\u662f class C{ B b } \u5bf9\u4e8eB\u6765\u8bf4 class B{ A a } \u6240\u4ee5\uff0c\u5728\u5b59\u7c7bC\u4e2d\u8bbf\u95eeA\u4e2d\u7684\u53d8\u91cf\uff0c\u9700\u8981\u52a0B\uff1a\uff1aA\uff1a\uff1a\uff0c\u6216\u8005C\uff1a\uff1aB\uff1a\uff1aA\uff1a\uff1a \u540c\u7406\uff0c\u5728C\u4e2d\u8bbf\u95eeA\u7684\u65b9\u6cd5\u4e5f\u662f\u4e00\u6837\u3002 \u6ce8\u610f\uff1a\u5982\u679cABC\u4e2d\u540c\u65f6\u53c8test()\u65b9\u6cd5\uff0c\u90a3\u4e48C::test()\uff0c\u8bbf\u95ee\u7684\u662fC\u7684test\uff0cC::B::test()\u8bbf\u95ee\u7684\u662fB\u7684test\u3002</p> <ol> <li> <p>\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u901a\u8fc7pubulic/protected/private + using \u6765\u4fee\u6539\u7ee7\u627f\u8fc7\u6765\u7684\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u7684\u6743\u9650\u3002 </p> </li> <li> <p>\u7ee7\u627f\u7684\u5bf9\u8c61\u6a21\u578b\uff08\u7236\u7c7b\u548c\u5b50\u7c7b\u7684this\u6307\u9488\u662f\u540c\u4e00\u4e2a\uff09 </p> </li> <li> <p>C++\u4e2d\u7ee7\u627f\u7684\u9ed8\u8ba4\u89c4\u5219\uff1a\u7236\u7c7b\u7531\u7236\u7c7b\u81ea\u5df1\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\uff0c\u5b50\u7c7b\u6784\u9020\u51fd\u6570\u53ea\u521d\u59cb\u5316\u5269\u4e0b\u7684\u90e8\u5206\u3002</p> </li> <li> <p>\u5982\u679c\u5b50\u7c7b\u91cd\u8f7d\u4e86\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\uff0c\u90a3\u4e48\u7236\u7c7b\u7684\u6240\u6709\u540c\u540d\u51fd\u6570\u90fd\u4f1a\u88ab\u9690\u85cf\uff0c\u5982\u4e0b\u8fb9\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u4e0d\u6ce8\u91ca\uff0c\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b50\u7c7b\u91cd\u8f7d\u4e86func\uff0c\u6240\u4ee5\u9ed8\u8ba4\u8c03\u7528\u5b50\u7c7b\u7684func\u51fd\u6570\uff0c\u4f46\u662f\u5b50\u7c7b\u7684func\u53c8\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u6240\u4ee5\u62a5\u9519\u3002</p> </li> </ol> <p></p> <ol> <li> <p>\u865a\u62df\u7ee7\u627f \u865a\u62df\u7ee7\u627f\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u83f1\u5f62\u7ee7\u627f\u7684\u60c5\u51b5\u4f7f\u7528\u7684\u3002 </p> </li> <li> <p>\u5728\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u53ea\u9700\u8981\u5728\u58f0\u660e\u65f6\u589e\u52a0virtual\uff0c\u5728\u51fd\u6570\u5177\u4f53\u5b9a\u4e49\u65f6\u4e0d\u80fd\u52a0 </p> </li> <li>\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u548coverride\u8fde\u7528\uff0c\u540c\u65f6\u4e0d\u58f0\u660evirtual(\u56e0\u4e3a\u7236\u7c7b\u58f0\u660e\u8fc7\u4e86)</li> </ol> <p> \u57fa\u7c7b  \u6d3e\u751f\u7c7b  \u5982\u679c\u57fa\u7c7b\u52a0\u4e0avirtual\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\u3002</p> <ol> <li>\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u662fvirtual\u7684\u3002</li> </ol> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5982\u679c~AA()\u4e0d\u662fvirtual\u7684\uff0c\u90a3\u4e48delete a\u5176\u5b9e\u8c03\u7528\u7684\u662f<sub>AA\uff08\uff09\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e\u6211\u4eec\u60f3\u8981\u5b9e\u73b0\u7684\u662f\u591a\u6001\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5e0c\u671b\u8c03\u7528\u7684\u662f</sub>BB\uff08\uff09\uff0c\u56e0\u4e3a<sub>BB\uff08\uff09\u4e2d\u4f1a\u81ea\u52a8\u8c03\u7528</sub>AA\uff08\uff09\u3002\u8fd9\u65f6\uff0c\u628a<sub>AA\uff08\uff09\u58f0\u660e\u4e3avirtual\uff0c\u90a3\u4e48</sub>BB\uff08\uff09\u81ea\u52a8\u53d8\u4e3avirtual\uff0c\u57fa\u7c7b\u7684\u6307\u9488a\u5c31\u4f1a\u6307\u5411~BB\uff08\uff09\u3002</p> <p></p> <ol> <li> <p>\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\uff0cdelete\u540e\u8981\u6307\u5411nullptr </p> </li> <li> <p>\u7eaf\u865a\u51fd\u6570\u548c\u62bd\u8c61\u7c7b </p> </li> <li> <p>\u52a8\u6001\u7c7b\u578b\u8f6c\u6362 </p> </li> <li> <p>typeinfo\uff08int\uff09.name()\u8fd4\u56de\u7684\u7c7b\u578b\u540d\u79f0\uff0c\u6839\u636e\u7f16\u8bd1\u5668\u4e0d\u540c\u800c\u4e0d\u540c\uff0cmsvc\u8fd4\u56deint\uff0cgcc\u8fd4\u56dei </p> </li> </ol> <p> </p>"},{"location":"C%2B%2B/C%2B%2B%E4%B8%AD%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/","title":"C++\u4e2d\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7","text":"<p>[] () .\u7684\u4f18\u5148\u7ea7\u6700\u9ad8</p> <p>++ -- * \u6b21\u4e4b\uff0c\u4e14++ -- \u9ad8\u4e8e*\u53f7</p> <p></p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8spdlog%E5%92%8Cmatplotlib-cpp/","title":"C++\u4f7f\u7528spdlog\u548cmatplotlib cpp","text":"<p>\u5176\u4e2dspdlog\u662f\u4e00\u4e2a\u5934\u6587\u4ef6\u5e93\uff0c\u4e0d\u9700\u8981\u94fe\u63a5\u3002 matplotlib-cpp\u9700\u8981\u8c03\u7528python\uff0c\u6240\u4ee5\u9700\u8981cmake\u4e2d\u914d\u7f6epython</p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8spdlog%E5%92%8Cmatplotlib-cpp/#third_part","title":"\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939third_part","text":"<p>\u628aspdlog\u548cmatplotlib-cpp clone\u4e0b\u6765 </p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8spdlog%E5%92%8Cmatplotlib-cpp/#cmake","title":"\u914d\u7f6ecmake","text":"<pre><code>cmake_minimum_required(VERSION 3.0.0)\nproject(test VERSION 0.1.0 LANGUAGES C CXX)\nset(EXPORT_COMPILE_COMMANDS ON)\n\nfind_package(Python3 COMPONENTS Interpreter Development REQUIRED)\nfind_package(Python3 COMPONENTS NumPy)\nfind_package(PythonLibs REQUIRED)\n\nadd_executable(test main.cpp)\n\ntarget_include_directories(test\nPRIVATE\n${CMAKE_CURRENT_SOURCE_DIR}/third_party/spdlog/include\n${CMAKE_CURRENT_SOURCE_DIR}/third_party/matplotlib-cpp\n${PYTHON_INCLUDE_DIRS})\n\ntarget_link_libraries(test\nPRIVATE\n${PYTHON_LIBRARIES})\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8using/","title":"C++\u4f7f\u7528using","text":"<p>using\u7684\u56db\u79cd\u7528\u6cd5\uff1a</p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8using/#1","title":"1. \u58f0\u660e\u547d\u540d\u7a7a\u95f4","text":"<p>using namespace std; \u6216\u8005 using std::cout;</p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8using/#2","title":"2. \u7c7b\u578b\u522b\u540d","text":"<p>using a = int</p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8using/#3","title":"3. \u6539\u53d8\u5b50\u7c7b\u4e2d\u7684\u7236\u7c7b\uff08\u6210\u5458\u53d8\u91cf\u3001\u6210\u5458\u51fd\u6570\u3001\u7c7b\u578b\u58f0\u660e\uff09\u7684\u8bbf\u95ee\u6743\u9650","text":"<pre><code>class T5Base {\npublic:\n    T5Base() :value(55) {}\n    using Type = std::vector&lt;int&gt;;\n    virtual ~T5Base() {}\n    void test1() { cout &lt;&lt; \"T5Base test1...\" &lt;&lt; endl; }\nprotected:\n    int value;\n};\n\nclass T5Derived : private T5Base {\npublic:\n    //using T5Base::test1;\n    //using T5Base::value;\n    //using T5Base::Type;\n    void test2() { cout &lt;&lt; \"value is \" &lt;&lt; value &lt;&lt; endl; }\n};\n\nT5Base::Type a{1,2,3};//ok\nT5Derived::Type b{1,2,3}//error,private\u7ee7\u627f\u4f7fType\u53d8\u4e3a\u4e86private\u3002\u901a\u8fc7::\u53ea\u80fd\u8c03\u7528public\u7684\u7c7b\u578b\u58f0\u660e\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5728T5Derived\u7684public\u4e2dusing T5Base::Type\u6539\u53d8\u6743\u9650\uff0c\u4f7f\u5176\u53ef\u7528\u3002\n</code></pre> <p>\u57fa\u7c7b\u4e2d\u6210\u5458\u53d8\u91cf value \u662fprotected\uff0c\u5728 private \u7ee7\u627f\u4e4b\u540e\uff0c\u5bf9\u4e8e\u5916\u754c\u8fd9\u4e2a\u503c\u4e3a private\uff0c\u4e5f\u5c31\u662f\u8bf4T5Derived \u7684\u5bf9\u8c61\u65e0\u6cd5\u4f7f\u7528\u8fd9\u4e2a value\u3002</p> <p>\u5982\u679c\u60f3\u8981\u901a\u8fc7\u5bf9\u8c61\u4f7f\u7528\uff0c\u9700\u8981\u5728public\u4e0b\u901a\u8fc7 using T5Base::value \u6765\u5f15\u7528\uff0c\u8fd9\u6837 T5Derived \u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002</p> <p>\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570 test1()\uff0c\u5728private\u7ee7\u627f\u540e\u53d8\u4e3a private\uff0cT5Derived \u7684\u5bf9\u8c61\u540c\u6837\u65e0\u6cd5\u8bbf\u95ee\uff0c\u901a\u8fc7 using T5Base::test1 \u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8using/#4typedef","title":"4.\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u7c7b\u578b\u522b\u540d\uff08\u4ee3\u66fftypedef\uff09","text":"<pre><code>//\u65b9\u6cd5\u4e00 \u4e0d\u4f7f\u7528using\uff0c\u9700\u8981\u5148\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u6765\u4f7f\u7528\u6a21\u677f\u522b\u540d\ntemplate &lt;typename T&gt;\nstruct map_s\n{\n    typedef std::map &lt;std::string, T&gt; map;\n}\n\nmap_s&lt;int&gt;::map map1;\nmap1.insert({\"key\", 1});\n\n//\u65b9\u6cd5\u4e8c \u4f7f\u7528using\uff0c\u4e0d\u9700\u8981\u989d\u5916\u5b9a\u4e49\u7c7b\uff0c\u6765\u58f0\u660e\u6a21\u7248\u522b\u540d\ntemplate &lt;typename T&gt;\nusing map_s = std::map&lt;std::string, T&gt;;\nmap_s&lt;int&gt; map2;\nmap2.insert({\"key\", 2});\n\n\n//using \u5305\u542b\u4e86typedef\u7684\u6240\u6709\u529f\u80fd\ntypedef unsigned int unit_t; \nusing unit_t = unsigned int;\n\ntypedef std::map&lt;std::string, int&gt; map;\nusing map = std::map&lt;std::string, int&gt;;\n\ntypedef int(*Functype)(int, int); //typedef \u5b9a\u4e49\u51fd\u6570\u6307\u9488\nusing Functype = int(*)(int, int);\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E4%BD%BF%E7%94%A8using/#_1","title":"\u5efa\u8bae\uff1a","text":"<ul> <li>\u6240\u6709\u7684\u7ee7\u627f\u90fd\u662f\u7528public\u7ee7\u627f\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6539\u53d8\u6743\u9650\u3002</li> <li>\u7c7b\u4e2d\u7684using \u58f0\u660e\u7c7b\u578b\u90fd\u653e\u5230public\u4e2d\uff0c\u662f\u5916\u754c\u80fd\u591f\u8bbf\u95ee\u3002</li> <li></li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/","title":"C++\u5185\u5b58\u5206\u914d","text":""},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/#_1","title":"\u53ef\u5bfb\u5740\u6a21\u578b\u548c\u5185\u5b58\u5e03\u5c40","text":"<p>\u6211\u4eec\u77e5\u9053\uff0c\u5185\u5b58\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u7edf\u4e00\u7ba1\u7406\u7684\uff0c\u5185\u5b58\u91cc\u9762\u4e00\u4e2a\u5b57\u8282\u5c31\u7b49\u4e8e8\u4e2a\u4e8c\u8fdb\u5236\u4f4d,\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u5c31\u4e3a\u5185\u5b58\u7a7a\u95f4\u8fdb\u884c\u7f16\u53f7,\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u5bfb\u5740\u6a21\u578b\u3002\u90a3\u4e48\u6211\u4eec\u7ecf\u5e38\u8bf4\u768432\u4f4d\u6307\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u5185\u5b58\u7f16\u53f7\u6700\u5927\u53ea\u7f16\u53f7\u52302\u768432\u6b21\u65b9(\u5373\u53ea\u80fd\u7f1642,9496,7296\u4e2a\u5730\u5740\u7f16\u53f7)\uff0c\u800c\u6bcf\u4e2a\u7f16\u53f7\u903b\u8f91\u4e0a\u559c\u6b22\u4f7f\u7528\u5341\u516d\u8fdb\u5236\u6765\u8868\u793a,\u5e76\u4e14\u7528\u4e8e\u8868\u793a\u5185\u5b58\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u5f62\u5f0f\u901a\u4fd7\u70b9\u8bf4\u5c31\u662f4GB\u7684\u5185\u5b58\u5927\u5c0f\u3002\u4e3a\u4ec0\u4e4832\u4f4dx86\u7684\u64cd\u4f5c\u7cfb\u7edf\u65e0\u6cd5\u4f7f\u7528\u5927\u4e8e4GB\u7684\u5185\u5b58\u6761\u7684\u989d\u5916\u7a7a\u95f4\uff1f\u539f\u56e0\u5c31\u5728\u8fd9\u91cc\u3002  </p>"},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/#cc","title":"C/C++\u7a0b\u5e8f\u7684\u5185\u5b58\u6a21\u578b","text":"<ul> <li>\u6808\u662f\u5411\u4e0b\u589e\u957f\uff08\u7531\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\uff09</li> <li>\u5806\u662f\u5411\u4e0a\u589e\u957f\uff08\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\uff09</li> </ul> <p>\u6240\u6709\u5185\u5b58\u76f8\u5173\u7684\u5185\u5b58\u533a\u57df\u90fd\u4e00\u4e00\u5217\u51fa\u4e86,\u5bf9\u4e8e\u7a0b\u5e8f\u5458\u611f\u5174\u8da3\u7684\u4e3b\u8981\u5185\u5b58\u533a\u57df\u662f\u4ee3\u7801\u6bb5\uff0c\u6570\u636e\u6bb5\u548c\u5b57\u9762\u91cf\u6c60\u548cbss\uff0c\u5806\u6808\u548c\u5806\u3002</p> <p></p> <p>\u4ece\u7a0b\u5e8f\u7684\u7ec4\u7ec7\u7684\u65b9\u5f0f\u6765\u67e5\u770b\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40</p> <ul> <li>\u4ee3\u7801\u6bb5:\u7a0b\u5e8f\u7684\u6240\u6709\u6307\u4ee4\u4f1a\u5b58\u653e\u5728\u8fd9\u4e2a\u533a\u57df\uff0c\u8fd9\u662f\u5df2\u7ecf\u7f16\u8bd1\u540e\u7684\u673a\u5668\u7801\u3002</li> <li>\u5b57\u9762\u91cf\u6c60\u662f\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u7684\u4e00\u4e9b\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u5728\u7a0b\u5e8f\u4e2d\u7528\u4e8e\u663e\u793a\u6587\u5b57</li> <li>\u5168\u5c40\u6570\u636e\u6bb5\uff1a\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u7684\u5e38\u91cf\u548c\u5168\u5c40/\u9759\u6001\u7684\u53d8\u91cf\u3002C/C++ \u7528global/static\u58f0\u660e\u7684\u53d8\u91cf\u90fd\u5b58\u653e\u5728\u8fd9\u4e2a\u533a\u57df\uff0c\u5bf9\u6240\u6709\u51fd\u6570\u516c\u5f00\u53ef\u89c1\u3002</li> <li>\u5806:\u8fd9\u91cc\u4fdd\u5b58\u7684\u6570\u636e\u53ea\u662f\u4e3a\u4e86\u4e34\u65f6\u5b58\u50a8\u4e00\u4e9b\u503c\u800c\u521b\u5efa\u7684\uff0c\u800c\u6211\u4eec\u53ef\u80fd\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u56de\u6536\u6b64\u5185\u5b58\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4e0d\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u6240\u4ee5\u4f7f\u7528C\u4e2d\u7684new\u6216malloc\u8fd9\u7c7b\u5185\u5b58\u5206\u914d\u7a0b\u5e8f\u6765\u4e3a\u6211\u4eec\u6240\u9700\u7684\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u63d0\u4f9b\u65b0\u7684\u7a7a\u95f4\uff0c\u5e76\u4e14\u968f\u7740\u6211\u4eec\u8981\u6c42\u8d8a\u6765\u8d8a\u591a\u7684\u52a8\u6001\u6570\u636e\u7a7a\u95f4\u800c\u8be5\u533a\u57df\u4e0d\u65ad\u6269\u5927\uff0c\u5e76\u4e14\u5728\u5185\u5b58\u4e2d\u9010\u6e10\u589e\u957f\u5230\u66f4\u9ad8\u7684\u5730\u5740\u3002</li> <li>\u6808:\u5f53\u6211\u4eec\u6267\u884c\u8fd9\u4e9b\u8fc7\u7a0b\u8c03\u7528\u65f6,\u5806\u7684\u57fa\u672c\u7279\u6027\u662fLIFO,\u5b58\u50a8\u7740\u8be5\u7a0b\u5e8f\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u5b83\u5c06\u4ece\u5185\u5b58\u7684\u9ad8\u5c42\u5730\u5740\u5f00\u59cb\uff0c\u7136\u540e\u5411\u53e6\u4e00\u4e2a\u65b9\u5411\u5411\u4e0b\u6269\u5c55\u3002\u4e0a\u4e0b\u6587\u5176\u5b9e\u5c31\u662f\u7a0b\u5e8f\u4e2d\u5404\u4e2a\u51fd\u6570\u4e4b\u95f4\u8c03\u7528\u7684\u5148\u540e\u987a\u5e8f\u3002</li> </ul> <p>\u8fd9\u79cd\u5178\u578b\u7684\u5185\u5b58\u5e03\u5c40\u6709\u4e00\u4e2a\u6bd4\u8f83\u6709\u8da3\u7684\u5730\u65b9,\u5b9e\u9645\u4e0a\u6808\u5411\u4f4e\u5c42\u5730\u5740\u4e0d\u65ad\u589e\u957f\uff0c\u52a8\u6001\u6570\u636e\u4f1a\u5411\u9ad8\u5c42\u5730\u5740\u589e\u957f\uff0c\u53ea\u8981\u4f60\u7684\u7a0b\u5e8f\u8db3\u591f\u7cdf\u7cd5,\u4f8b\u5982\u7528\u65e0\u6b62\u5883\u7684\u9012\u5f52\u548c\u4e0d\u65ad\u62a2\u5360\u5806\u53ef\u7528\u7684\u7a7a\u95f4\uff0c\u8fd9\u4e24\u4e2a\u8d27\u59cb\u7ec8\u4f1a\u78b0\u9762\uff0c\u8fd9\u5c06\u662f\u4e00\u4ef6\u975e\u5e38\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u4e00\u79cd\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u8fd9\u79cd\u60c5\u51b5\u64cd\u4f5c\u7cfb\u7edf\u8bf4\u5b83\u5185\u5b58\u4e0d\u8db3\u65f6,\u4f8b\u5982Windows\u81ed\u540d\u62db\u5631\u7684\u84dd\u5c4f\u63d0\u793a...!!</p>"},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/#ia32","title":"IA32\u5e73\u53f0\u7684\u7a0b\u5e8f\u6808","text":"<p>\u8ba9\u6211\u4eec\u770b\u4e00\u4e0bia-32\u4f53\u7cfb\u7ed3\u6784\u7684\u8c03\u7528\u5806\u6808\uff0c\u6211\u4eec\u5c06\u5806\u6808\u7684\u5e95\u90e8\u653e\u5728\u5185\u5b58\u7684\u9876\u90e8\uff0c\u5e76\u5c06\u5806\u6808\u7684\u9876\u90e8\u653e\u5728\u5185\u5b58\u7684\u5e95\u90e8\u3002 \u8fd9\u53ea\u662f\u6211\u4eec\u4f7f\u7528\u7684\u7ea6\u5b9a\uff0c\u56e0\u4e3a\u6211\u5c31\u559c\u6b22\u4f7f\u7528\u5012\u7f6e\u7684\u5f62\u5f0f\uff0c\u4e5f\u6709\u4eba\u559c\u6b22\u5c06\u6808\u9876\u5b9a\u4e8e\u4e3a\u4e0a\u65b9\u4e14\u6808\u5e95\u5b9a\u4e49\u5728\u4e0b\u65b9,\u4f46\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u6807\u6ce8\u9ad8\u5730\u5740\u548c\u4f4e\u5730\u5740\uff0c\u90a3\u5c31\u201c\u8bef\u4eba\u5b50\u5f1f\u201d\u4e86\u3002\u4e89\u8bba\u8fd9\u4e9b\u6beb\u65e0\u610f\u4e49\u3002</p> <p></p> <p>\u552f\u4e00\u8981\u8bb0\u4f4f\u7684\u662f\u6808\u662f\u671d\u7740\u5185\u5b58\u4f4e\u5730\u5740\u65b9\u5411\u589e\u957f\uff0ciA32\u6808\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5bc4\u5b58\u5668\uff0c\u79f0\u4e3aesp\u3002\u8be5\u5bc4\u5b58\u5668\u59cb\u7ec8\u6307\u5411\u5806\u6808\u7684\u9876\u90e8\u5143\u7d20\uff0c\u5373\u653e\u7f6e\u5728\u5806\u6808\u4e0a\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/#push","title":"push\u64cd\u4f5c","text":"<p>\u597d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u770b\u7684\u7b2c\u4e00\u4e2a\u5806\u6808\u64cd\u4f5c\u662fpush\u6307\u4ee4\uff0c\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u7684\u662f</p> <pre><code>pushl \u5bc4\u5b58\u5668\u540d\u79f0 \u6216  push \u67d0\u4e2a\u7c7b\u578b\u7684\u6307\u9488\n</code></pre> <p>\u8868\u793a\u4e00\u4e2a32\u4f4d\u7684\u503c\uff0c\u5e76\u4e3a\u5176\u6307\u5b9a\u4e86\u8981\u5165\u6808\u7684\u6e90\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u4f4d\u7f6e\uff0c\u57fa\u672c\u4e0a\u5b83\u662f\u5b83\u4f1a\u4ece\u8be5\u6e90\u83b7\u53d6\u503c\uff0c\u65e0\u8bba\u5b83\u662f\u5bc4\u5b58\u5668\u8fd8\u662f\u5185\u5b58\u4f4d\u7f6e\u90fd\u4f1a\u63a8\u5165\u5230\u6808\u9876\u3002\u5b83\u8fd8\u4f1a\u5c06\u6808\u6307\u9488\u9012\u51cf4\uff0c\u4e3a\u4ec0\u4e48\u8981\u51cf4\uff0c\u56e0\u4e3apushl\u521a\u597d\u662f4\u4e2a\u5b57\u8282\uff0c\u5e76\u4e14\u662f\u8d85\u4f4e\u5730\u5740\u65b9\u5411\u589e\u957f\u7684,\u56e0\u6b64\u6808\u6307\u9488\u9012\u51cf\uff0c</p> <p>\u5982\u4e0b\u56fe\u6240\u793a,\u73b0\u5728\u6808\u6307\u9488\u6307\u5411\u5185\u5b58\u4e2d\u5df2\u5c06\u8be5\u503c\u6dfb\u52a0\u6216\u590d\u5236\u5230\u5185\u5b58\u4e2d\u7684\u65b0\u4f4d\u7f6e\u3002  </p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/#pop","title":"pop\u64cd\u4f5c","text":"<pre><code>popl \u5bc4\u5b58\u5668\u540d\u79f0 \u6216  popl  \u67d0\u4e2a\u7c7b\u578b\u7684\u6307\u9488\n</code></pre> <p>popl\u6307\u4ee4\u5c06\u6570\u636e\u4ece\u5806\u6808\u4e2d\u79fb\u51fa\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2adst\u53c2\u6570,\u4ee5\u83b7\u53d6\u4ece\u6808\u4e2d\u5f39\u51fa\u7684\u503c\uff0c\u7136\u540e\u5c06\u8be5\u503c\u653e\u5165\u67d0\u4e2a\u5185\u5b58\u5730\u5740\u6307\u5411\u7684\u4f4d\u7f6e\u6216CPU\u4e2d\u7684\u5bc4\u5b58\u5668\u3002</p> <p></p> <p>\u6211\u4eec\u4ece\u5806\u6808\u9876\u5220\u9664\u67d0\u4e2a\u503c\uff0c\u5e76\u518d\u6b21\u4e3a\u8be532\u4f4d\u5b57\u7684esp\u5411\u4e0a\u8c03\u6574\u5806\u6808\u6307\u9488\u3002</p> <p>\u6211\u4eecpop\u64cd\u4f5c\u7684\u65f6\u5019\u662f\u771f\u7684\u201c\u5220\u9664\u201d\u539f\u5148\u7684\u503c\u5417\uff1f \u8fd9\u4e2a\u503c\u5e76\u672a\u5220\u9664\uff0c\u5b83\u4ecd\u7136\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u53ea\u662f\u6211\u4eec\u4e0d\u518d\u5f15\u7528\u5b83\u4e86\u3002\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u8c03\u6574\u4e86\u5806\u6808\u6307\u9488\uff0c\u4f7f\u5176\u6307\u5411\u6808\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\u3002 \u4f46\u662f\u539f\u5148\u8fd9\u4e9b\u4f4d\u7684\u6570\u636e\u4ecd\u7136\u9a7b\u7559\u5728\u539f\u5148\u7684\u5185\u5b58\u4f4d\u7f6e,\u53ea\u662f\u7a0b\u5e8f\u4e0d\u518d\u89e3\u91ca\u89e3\u6790\u8fd9\u4e9b\u4f4d\u4e2d\u7684\u4e8c\u8fdb\u5236\u7801\u3002 \u5df2\u7ecf\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u6709\u6548\u5730\u5220\u9664\u4e86\u5b83\u4eec\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u56de\u6536\u8be5\u7a7a\u95f4\u5e76\u5c06\u65b0\u6570\u636e\u538b\u5165\u6808\u5e76\u8986\u76d6\u8fd9\u4e9b\u4f4d\u3002\u56e0\u6b64\u9700\u8981\u4fdd\u7559\u88ab\u5f39\u51fa\u7684\u6570\u636e\uff0c\u53ea\u9700\u5c06\u5b83\u4eec\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\u5373\u53ef\u3002</p> <p>\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5806\u6808\u6765\u8ddf\u8e2a\u8fc7\u7a0b\u8c03\u7528\uff0c\u4ee5\u53ca\u5982\u4f55\u8bb0\u4f4f\u8fc7\u7a0b\u8c03\u7528\u7ed3\u675f\u65f6\u9700\u8981\u8fd4\u56de\u7684\u8fd4\u56de\u5730\u5740\u4ee5\u53ca\u9700\u8981\u4ece\u8be5\u8fc7\u7a0b\u83b7\u53d6\u7684\u8fd4\u56de\u503c\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/#_2","title":"\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u8c03\u7528\u6982\u8ff0","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u8fc7\u7a0b\u8c03\u7528\u7684\u6982\u8ff0\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u5f88\u7b80\u964b\u7684\u4f8b\u5b50\uff0c\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u5df2\u7ecf\u770b\u51fa\u5f88\u591a\u6f0f\u6d1e\u4e86-_-b!!\u6211\u8bf4\u660e\u5728\u5148\u8fd9\u4e2a\u4f8b\u5b50\u4ec5\u4ec5\u8d77\u5230\u629b\u8f6c\u5f15\u7389\u7684\u4f5c\u7528\u5e76\u4e14\u5728\u6700\u540e\u901a\u8fc7\u8be5\u4f8b\u5b50\u63d0\u51fa\u51e0\u4e2a\u95ee\u9898\uff0c\u800c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u5728\u4ee5\u540e\u7684\u6587\u7ae0\u91cc\u4f1a\u8be6\u7ec6\u5f97\u5230\u89e3\u7b54\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u4ece\u8c03\u7528\u8005\u548c\u88ab\u8c03\u7528\u8005\u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u5f00\u59cb\u3002</p> <ol> <li>\u8c03\u7528\u8005\u5c06\u8bbe\u7f6e\u4e00\u4e9b\u53c2\u6570,\u5e76\u5728\u6267\u884ccall\u6307\u4ee4\u540e,\u8be5\u6307\u4ee4\u5c06\u63a7\u5236\u6d41\u8df3\u8f6c\u5230\u88ab\u8c03\u7528\u88ab\u8c03\u7528\u8005\u7684\u51fd\u6570\uff0c\u4e4b\u524d\u5728\u88ab\u8c03\u7528\u8005\u521d\u59cb\u5316\u7684\u53c2\u6570\u4e5f\u4e00\u540c\u4f20\u9012\u7ed9\u88ab\u8c03\u7528\u8005\u3002  </li> </ol> <p></p> <p>2.\u6b64\u65f6\u63a7\u5236\u6743\u5728\u88ab\u8c03\u7528\u8005\u7684\u51fd\u6570\u4e2d\uff0c\u88ab\u8c03\u7528\u8005\u4f1a\u521b\u5efa\u4e00\u4e9b\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u6267\u884c\u4e00\u4e9b\u8fd0\u7b97\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u8fd0\u7b97\u7684\u7ed3\u679c\u8bbe\u4e3a\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u8be5\u8fd4\u56de\u503c\u662f\u88ab\u8c03\u7528\u51fd\u6570\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u51fd\u6570\u7684\u3002  </p> <p></p> <p>3.\u5728\u88ab\u8c03\u7528\u8005\u51fd\u6570\u6267\u884creturn\u4e4b\u524d,\u8981\u6e05\u7406\u521b\u5efa\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5e76\u56de\u6536\u7a7a\u95f4\uff0c\u6700\u540e\u6267\u884creturn\u6307\u4ee4\u4ee5\u544a\u8bc9CPU\u8981\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u8c03\u7528\u8005\u51fd\u6570\u3002</p> <p>4.\u5e76\u8f6c\u5230\u8c03\u7528\u8005\u51fd\u6570\u539f\u5148\u6267\u884c\u70b9\u4e4b\u540e\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u7531\u4e8e\u8c03\u7528\u8005\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u540e\u6ca1\u6709\u5176\u4ed6\u6307\u4ee4\u4e86\u5c31\u5f00\u59cb\u6e05\u7406\u7a7a\u95f4\uff0c\u8be5\u7a7a\u95f4\u6700\u521d\u7528\u4e8e\u8bbe\u7f6e\u53c2\u6570\u6240\u5360\u7528\u7684\u7a7a\u95f4\u90fd\u4f1a\u88ab\u56de\u6536\u3002\u6b64\u5904\uff0c\u6211\u4eec\u5e94\u8be5\u8981\u6e05\u695a\u539f\u5148\u88ab\u8c03\u7528\u8005\u51fd\u6570\u6240\u5360\u7528\u7684\u7a7a\u95f4\u5df2\u88ab\u56de\u6536\uff0c\u5e76\u4e14\u8c03\u7528\u8005\u51fd\u6570\u518d\u6267\u884c\u540e\u4e5f\u4f1a\u9500\u6bc1\u81ea\u5df1\uff0c\u8fd9\u5c31\u662f\u8c03\u7528\u8fc7\u7a0b\u8bbe\u7f6e\u3002</p> <p>\u4ee5\u4e0a\u7684\u4f8b\u5b50\u5f88\u7b80\u5355\uff0c\u57fa\u672c\u7a0d\u5fae\u6709\u4e00\u4e9b\u4ee3\u7801\u57fa\u7840\u7684\u8bfb\u8005\u4e0d\u7528\u770b\u90fd\u77e5\u9053\uff0c\u4f46\u6211\u7684\u76ee\u7684\u662f\u5bfc\u51fa\u5982\u4e0b\u51e0\u4e2a\u95ee\u9898\u70b9\u3002</p> <ul> <li>\u88ab\u8c03\u7528\u8005\u51fd\u6570\u5fc5\u987b\u77e5\u9053\u4ece\u54ea\u91cc\u83b7\u53d6\u53c2\u6570\uff1f</li> <li>\u88ab\u8c03\u7528\u8005\u5fc5\u987b\u77e5\u9053\u4ece\u54ea\u91cc\u83b7\u53d6\u8fd4\u56de\u5730\u5740\uff1f</li> <li>\u8c03\u7528\u8005\u5fc5\u987b\u77e5\u9053\u4ece\u54ea\u91cc\u83b7\u53d6\u8fd4\u56de\u503c\uff1f</li> </ul> <p>\u7531\u4e8e\u8c03\u7528\u548c\u88ab\u8c03\u7528\u65b9\u5728\u540c\u4e00\u4e2aCPU\u4e0a\u8fd0\u884c\uff0c\u56e0\u6b64\u5b83\u4eec\u5f53\u7136\u4f7f\u7528\u8be5CPU\u4e2d\u7684\u540c\u4e00\u5bc4\u5b58\u5668\uff0c\u56e0\u6b64\u8981\u6709\u4e00\u79cd\u673a\u5236\u786e\u4fdd\u4e24\u8005\u4e4b\u95f4\u4e0d\u4f1a\u540c\u65f6\u4e89\u593aCPU\u7684\u8d44\u6e90\u3002\u8fd9\u79cd\u673a\u5236\u5c31\u662f\uff1a</p> <ul> <li>\u5982\u679c\u8c03\u7528\u8005\u8981\u4f7f\u7528\u67d0\u4e2a\u5bc4\u5b58\u5668\uff0c\u800c\u521a\u597d\u88ab\u8c03\u7528\u8005\u4e5f\u9700\u8981\u4f7f\u7528\u8be5\u5bc4\u5b58\u5668\uff0c\u8c03\u7528\u8005\u5728\u4ea4\u51fa\u8be5\u5bc4\u5b58\u5668\u7684\u63a7\u5236\u6743\u4e4b\u524d\uff0c\u5b83\u4f1a\u5148\u4fdd\u5b58\u8be5\u5bc4\u5b58\u5668(\u901a\u5e38\u662f\u4e00\u4e2a\u5730\u5740)\uff0c\u5f53\u8fd9\u4e00\u6b65\u5b8c\u6210\u540e\uff0c\u5c31\u5c06\u5bc4\u5b58\u5668\u8ba9\u7ed9\u88ab\u8c03\u7528\u8005\u3002</li> <li>\u540c\u7406\uff0c\u88ab\u8c03\u7528\u8005\u4e5f\u53ef\u80fd\u4f1a\u4fdd\u5b58\u5f53\u524d\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\u7684\u5730\u5740\u540e\uff0c\u624d\u8ba9\u51fa\u5bc4\u5b58\u5668\u7684\u63a7\u5236\u6743\u3002</li> </ul> <p>\u8fd9\u91cc\u4e5f\u5f15\u51fa\u4e00\u4e2a\u95ee\u9898\uff1a\u7a76\u7adf\u8981\u8d4b\u4e88\u6240\u6709\u804c\u8d23\u7ed9\u8c03\u7528\u8005\u8fd8\u662f\u88ab\u8c03\u7528\u8005\uff1f\u6216\u6240\u6709\u804c\u8d23\u7531\u4e24\u8005\u5171\u540c\u627f\u62c5?\u8fd9\u5c31\u8ddf\u8c03\u7528\u673a\u5236\u626f\u4e0d\u4e0a\u5173\u7cfb\u4e86\uff0c\u800c\u662f\u8003\u9a8c\u7a0b\u5e8f\u5458\u5982\u4f55\u5408\u7406\u8bbe\u8ba1\u51fd\u6570\u7684\u529f\u80fd\uff0c\u660e\u786e\u51fd\u6570\u4e4b\u95f4\u7684\u5206\u5de5\u4e3b\u6b21\u7684\u95ee\u9898\u4e86!!</p>"},{"location":"C%2B%2B/C%2B%2B%E5%88%9D%E5%A7%8B%E5%8C%96/","title":"C++\u521d\u59cb\u5316","text":""},{"location":"C%2B%2B/C%2B%2B%E5%88%9D%E5%A7%8B%E5%8C%96/#c","title":"C++\u4e2d \u7c7b\u521d\u59cb\u5316\u65f6\u52a0()\u548c\u4e0d\u52a0\u62ec\u53f7()\u7684\u533a\u522b.","text":""},{"location":"C%2B%2B/C%2B%2B%E5%88%9D%E5%A7%8B%E5%8C%96/#1","title":"1.  \u5728\u6808\u4e0a\u521d\u59cb\u5316","text":"<p>\u7ed3\u8bba\uff1a\u5728\u6808\u4e0a\u521d\u59cb\u5316\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u4e0d\u8981\u52a0\u62ec\u53f7\uff0c \u4e0d\u7136\u53ef\u80fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E5%88%9D%E5%A7%8B%E5%8C%96/#2-new","title":"2 \u5728\u5806\u4e0a\u521d\u59cb\u5316\uff08\u7528new\uff09","text":"<p>\u7ed3\u8bba\uff1a\u4e0d\u7ba1\u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\u8fd8\u662f\u81ea\u5b9a\u4e49\u7c7b\uff0c\u6700\u597dnew\u7684\u65f6\u5019\u90fd\u52a0\u4e0a\u62ec\u53f7\u3002</p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E5%88%9D%E5%A7%8B%E5%8C%96/#3c","title":"3.C++\u521d\u59cb\u5316\u6700\u4f73\u5b9e\u8df5","text":"<p>\u7edf\u4e00\u7528{}\u521d\u59cb\u5316</p> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E5%8F%8D%E5%B0%84%E7%9A%84%E5%AE%9E%E7%8E%B0/","title":"C++\u53cd\u5c04\u7684\u5b9e\u73b0","text":"<p>C++\u7684\u7b2c\u4e09\u65b9\u7684\u53cd\u5c04\u5e93\u975e\u5e38\u591a\uff0c\u524d\u9635\u5b50\u8fd8\u7528\u8fc7pfr\uff0c\u4e0d\u9700\u8981\u7528\u5b8f\u53bb\u6ce8\u518c\uff0c\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u6570\u636e\u6210\u5458\u7684\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include \"boost/pfr.hpp\"\n\nstruct my_struct { // no ostream operator defined!\n    int i;\n    char c;\n    double d;\n};\n\nint main() {\n    my_struct s{100, 'H', 3.141593};\n    std::cout &lt;&lt; \"my_struct has \" &lt;&lt; boost::pfr::tuple_size&lt;my_struct&gt;::value\n        &lt;&lt; \" fields: \" &lt;&lt; boost::pfr::io(s) &lt;&lt; \"\\n\";\n}\n\n// \u8f93\u51fa\uff1a\nmy_struct has 3 fields: {100, H, 3.14159}\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91%3D%E4%B8%87%E8%83%BD%E5%BC%95%E7%94%A8%2B%E5%BC%95%E7%94%A8%E6%8A%98%E5%8F%A0%2Bstd%20forward/","title":"C++\u5b8c\u7f8e\u8f6c\u53d1=\u4e07\u80fd\u5f15\u7528+\u5f15\u7528\u6298\u53e0+std forward","text":"<ol> <li>\u9605\u8bfb\u8fd9\u7bc7\u535a\u6587\u9700\u8981\u4e86\u89e3C++\u4e2d\u7684\u5de6\u503c\uff08lvalue\uff09\u548c\u53f3\u503c\uff08rvalue\uff09\u7684\u6982\u5ff5\uff0c\u8be6\u60c5\u53c2\u89c1\u6211\u7684\u53e6\u5916\u4e00\u7bc7\u535a\u6587\uff1aC++\u79fb\u52a8\u8bed\u4e49\u53ca\u62f7\u8d1d\u4f18\u5316</li> <li>\u4e07\u80fd\u5f15\u7528\u548c\u5b8c\u7f8e\u8f6c\u53d1\u591a\u6d89\u53ca\u5230\u6a21\u677f\u7684\u4f7f\u7528\uff0c\u5982\u82e5\u4e0d\u662f\u81ea\u5df1\u5199\u6a21\u677f\uff0c\u5219\u53ef\u4e0d\u7528\u5173\u5fc3</li> </ol>"},{"location":"C%2B%2B/C%2B%2B%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91%3D%E4%B8%87%E8%83%BD%E5%BC%95%E7%94%A8%2B%E5%BC%95%E7%94%A8%E6%8A%98%E5%8F%A0%2Bstd%20forward/#universal-reference","title":"\u4e07\u80fd\u5f15\u7528\uff08Universal Reference\uff09","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a <pre><code>1. `#include &lt;iostream&gt;`\n\n3. `using std::cout;`\n4. `using std::endl;`\n\n7. `template&lt;typename T&gt;`\n8. `void func(T&amp; param) {`\n9.     `cout &lt;&lt; param &lt;&lt; endl;`\n10. `}`\n\n13. `int main() {`\n14.     `int num = 2019;`\n15.     `func(num);`\n16.     `return 0;`\n17. `}`\n</code></pre></p> <p>\u8fd9\u6837\u4f8b\u5b50\u7684\u7f16\u8bd1\u8f93\u51fa\u90fd\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u4fee\u6539\u6210\u4e0b\u9762\u7684\u8c03\u7528\u65b9\u5f0f\u5462\uff1f <pre><code>1. `int main() {`\n2.     `func(2019);`\n3.     `return 0;`\n4. `}`\n</code></pre></p> <p>\u5219\u4f1a\u5f97\u5230\u4e00\u4e2a\u5927\u5927\u7684\u7f16\u8bd1\u9519\u8bef\u3002\u56e0\u4e3a\u4e0a\u9762\u7684\u6a21\u677f\u51fd\u6570\u53ea\u80fd\u63a5\u53d7\u5de6\u503c\u6216\u8005\u5de6\u503c\u5f15\u7528\uff08\u5de6\u503c\u4e00\u822c\u662f\u6709\u540d\u5b57\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u53d6\u5230\u5730\u5740\u7684\uff09\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u91cd\u8f7d\u4e00\u4e2a\u63a5\u53d7\u53f3\u503c\u7684\u6a21\u677f\u51fd\u6570\uff0c\u5982\u4e0b\u4e5f\u53ef\u4ee5\u8fbe\u5230\u6548\u679c\u3002</p> <pre><code>1. `template&lt;typename T&gt;`\n2. `void func(T&amp; param) {`\n3.     `cout &lt;&lt; \"\u4f20\u5165\u7684\u662f\u5de6\u503c\" &lt;&lt; endl;`\n4. `}`\n5. `template&lt;typename T&gt;`\n6. `void func(T&amp;&amp; param) {`\n7.     `cout &lt;&lt; \"\u4f20\u5165\u7684\u662f\u53f3\u503c\" &lt;&lt; endl;`\n8. `}`\n\n12. `int main() {`\n13.     `int num = 2019;`\n14.     `func(num);`\n15.     `func(2019);`\n16.     `return 0;`\n17. `}`\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a</p> <ol> <li><code>\u4f20\u5165\u7684\u662f\u5de6\u503c</code></li> <li><code>\u4f20\u5165\u7684\u662f\u53f3\u503c</code></li> </ol> <p>\u7b2c\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u7684\u662f\u5de6\u503c\u5f97\u7248\u672c\uff0c\u7b2c\u4e8c\u6b21\u51fd\u6570\u8c03\u7528\u7684\u662f\u53f3\u503c\u7248\u672c\u3002\u4f46\u662f\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u53ea\u5199\u4e00\u4e2a\u6a21\u677f\u51fd\u6570\u5373\u53ef\u4ee5\u63a5\u6536\u5de6\u503c\u53c8\u53ef\u4ee5\u63a5\u6536\u53f3\u503c\u5462\uff1f</p> <p>C++ 11\u4e2d\u6709\u4e07\u80fd\u5f15\u7528\uff08Universal Reference\uff09\u7684\u6982\u5ff5\uff1a\u4f7f\u7528<code>T&amp;&amp;</code>\u7c7b\u578b\u7684\u5f62\u53c2\u65e2\u80fd\u7ed1\u5b9a\u53f3\u503c\uff0c\u53c8\u80fd\u7ed1\u5b9a\u5de6\u503c\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u4e86\uff1a\u53ea\u6709\u53d1\u751f\u7c7b\u578b\u63a8\u5bfc\u7684\u65f6\u5019\uff0cT&amp;&amp;\u624d\u8868\u793a\u4e07\u80fd\u5f15\u7528\uff1b\u5426\u5219\uff0c\u8868\u793a\u53f3\u503c\u5f15\u7528\u3002</p> <p>\u6240\u4ee5\uff0c\u4e0a\u9762\u7684\u6848\u4f8b\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u4e3a\uff1a <pre><code>1. `template&lt;typename T&gt;`\n2. `void func(T&amp;&amp; param) {`\n3.     `cout &lt;&lt; param &lt;&lt; endl;`\n4. `}`\n\n7. `int main() {`\n8.     `int num = 2019;`\n9.     `func(num);`\n10.     `func(2019);`\n11.     `return 0;`\n12. `}`\n</code></pre></p>"},{"location":"C%2B%2B/C%2B%2B%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91%3D%E4%B8%87%E8%83%BD%E5%BC%95%E7%94%A8%2B%E5%BC%95%E7%94%A8%E6%8A%98%E5%8F%A0%2Bstd%20forward/#universal-collapse","title":"\u5f15\u7528\u6298\u53e0\uff08Universal Collapse\uff09","text":"<p>\u4e07\u80fd\u5f15\u7528\u8bf4\u5b8c\u4e86\uff0c\u63a5\u7740\u6765\u804a\u5f15\u7528\u6298\u53e0\uff08Univers Collapse\uff09\uff0c\u56e0\u4e3a\u5b8c\u7f8e\u8f6c\u53d1\uff08Perfect Forwarding\uff09\u7684\u6982\u5ff5\u6d89\u53ca\u5f15\u7528\u6298\u53e0\u3002\u4e00\u4e2a\u6a21\u677f\u51fd\u6570\uff0c\u6839\u636e\u5b9a\u4e49\u7684\u5f62\u53c2\u548c\u4f20\u5165\u7684\u5b9e\u53c2\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u4e0b\u9762\u56db\u4e2d\u7ec4\u5408\uff1a</p> <ul> <li>\u5de6\u503c-\u5de6\u503c T&amp; &amp; # \u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u7c7b\u578b\u662f\u5de6\u503c\u5f15\u7528\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u5de6\u503c\u5f15\u7528\u3002\u6b64\u65f6\u7c7b\u578b\u63a8\u5bfc\u4e3aint &amp;&amp; <pre><code>1. `template&lt;typename T&gt;`\n2. `void func(T&amp; param) {`\n3.     `cout &lt;&lt; param &lt;&lt; endl;`\n4. `}`\n\n7. `int main() {`\n8.    // `int&amp; num = 2019;` \u62a5\u9519\uff0c\u5de6\u503c\u5f15\u7528\u4e0d\u80fd\u6307\u5411\u53f3\u503c\n9.       int a = 10;\n10.      int&amp; num = a;\n11.     `func(num);`\n13.     `return 0;`\n14. `}`\n</code></pre></li> <li>\u5de6\u503c-\u53f3\u503c T&amp; &amp;&amp; # \u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u7c7b\u578b\u662f\u5de6\u503c\u5f15\u7528\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u53f3\u503c\u5f15\u7528\u3002\u6b64\u65f6\u7c7b\u578b\u63a8\u5bfc\u4e3aint &amp; &amp;&amp; <pre><code>1. `template&lt;typename T&gt;`\n2. `void func(T&amp; param) {`\n3.     `cout &lt;&lt; param &lt;&lt; endl;`\n4. `}`\n\n7. `int main() {`\n8.     `int&amp;&amp; num = 2019;`\n9.     `func(num);`\n11.     `return 0;`\n12. `}`\n</code></pre></li> <li>\u53f3\u503c-\u5de6\u503c T&amp;&amp; &amp; # \u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u7c7b\u578b\u662f\u53f3\u503c\u5f15\u7528\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u5de6\u503c\u5f15\u7528\u3002\u6b64\u65f6\u7c7b\u578b\u63a8\u5bfc\u4e3aint &amp;&amp; &amp; <pre><code>1. `template&lt;typename T&gt;`\n2. `void func(T&amp;&amp; param) {`\n3.     `cout &lt;&lt; param &lt;&lt; endl;`\n4. `}`\n\n7. `int main() {`\n8.    // `int&amp; num = 2019;` \u62a5\u9519\uff0c\u5de6\u503c\u5f15\u7528\u4e0d\u80fd\u6307\u5411\u53f3\u503c\n9.       int a = 10;\n10.      int&amp; num = a;\n11.     `func(num);`\n13.     `return 0;`\n14. `}`\n15. \n</code></pre></li> <li>\u53f3\u503c-\u53f3\u503c T&amp;&amp; &amp;&amp; # \u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u7c7b\u578b\u662f\u53f3\u503c\u5f15\u7528\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u53f3\u503c\u5f15\u7528\u3002\u3002\u6b64\u65f6\u7c7b\u578b\u63a8\u5bfc\u4e3aint &amp;&amp; &amp;&amp; <pre><code>1. `template&lt;typename T&gt;`\n2. `void func(T&amp;&amp; param) {`\n3.     `cout &lt;&lt; param &lt;&lt; endl;`\n4. `}`\n\n7. `int main() {`\n8.     `int&amp;&amp; num = 2019;`\n9.     `func(num);`\n11.     `return 0;`\n12. `}`\n</code></pre></li> </ul> <p>\u4f46\u662fC++\u4e2d\u4e0d\u5141\u8bb8\u5bf9\u5f15\u7528\u518d\u8fdb\u884c\u5f15\u7528\uff0c\u5bf9\u4e8e\u4e0a\u8ff0\u60c5\u51b5\u7684\u5904\u7406\u6709\u5982\u4e0b\u7684\u89c4\u5219\uff1a</p> <p>\u6240\u6709\u7684\u6298\u53e0\u5f15\u7528\u6700\u7ec8\u90fd\u4ee3\u8868\u4e00\u4e2a\u5f15\u7528\uff0c\u8981\u4e48\u662f\u5de6\u503c\u5f15\u7528\uff0c\u8981\u4e48\u662f\u53f3\u503c\u5f15\u7528\u3002\u89c4\u5219\u662f\uff1a\u5982\u679c\u4efb\u4e00\u5f15\u7528\u4e3a\u5de6\u503c\u5f15\u7528\uff0c\u5219\u7ed3\u679c\u4e3a\u5de6\u503c\u5f15\u7528\u3002\u5426\u5219\uff08\u5373\u4e24\u4e2a\u90fd\u662f\u53f3\u503c\u5f15\u7528\uff09\uff0c\u7ed3\u679c\u4e3a\u53f3\u503c\u5f15\u7528\u3002</p> <p>\u5373\u5c31\u662f\u524d\u9762\u4e09\u79cd\u60c5\u51b5\u4ee3\u8868\u7684\u90fd\u662f\u5de6\u503c\u5f15\u7528\uff0c\u9000\u5316\u6210int&amp;\uff0c\u800c\u7b2c\u56db\u79cd\u4ee3\u8868\u7684\u53f3\u503c\u5f15\u7528\uff0c\u9000\u5316\u6210int &amp;&amp;\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91%3D%E4%B8%87%E8%83%BD%E5%BC%95%E7%94%A8%2B%E5%BC%95%E7%94%A8%E6%8A%98%E5%8F%A0%2Bstd%20forward/#perfect-forwarding","title":"\u5b8c\u7f8e\u8f6c\u53d1\uff08Perfect Forwarding\uff09","text":"<p>\u4e0b\u9762\u63a5\u7740\u8bf4\u5b8c\u7f8e\u8f6c\u53d1\uff08Perfect Forwarding\uff09\uff0c\u9996\u5148\uff0c\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a <pre><code>1. `#include &lt;iostream&gt;`\n\n3. `using std::cout;`\n4. `using std::endl;`\n\n6. `template&lt;typename T&gt;`\n7. `void func(T&amp; param) {`\n8.     `cout &lt;&lt; \"\u4f20\u5165\u7684\u662f\u5de6\u503c\" &lt;&lt; endl;`\n9. `}`\n10. `template&lt;typename T&gt;`\n11. `void func(T&amp;&amp; param) {`\n12.     `cout &lt;&lt; \"\u4f20\u5165\u7684\u662f\u53f3\u503c\" &lt;&lt; endl;`\n13. `}`\n\n16. `template&lt;typename T&gt;`\n17. `void warp(T&amp;&amp; param) {`\n18.     `func(param);`\n19. `}`\n\n22. `int main() {`\n23.     `int num = 2019;`\n24.     `warp(num);`\n25.     `warp(2019);`\n26.     `return 0;`\n27. `}`\n</code></pre></p> <p>\u731c\u4e00\u4e0b\uff0c\u4e0a\u9762\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f</p> <ol> <li><code>\u4f20\u5165\u7684\u662f\u5de6\u503c</code></li> <li><code>\u4f20\u5165\u7684\u662f\u5de6\u503c</code></li> </ol> <p>\u662f\u4e0d\u662f\u548c\u6211\u4eec\u9884\u671f\u7684\u4e0d\u4e00\u6837\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u539f\u56e0\uff1a</p> <p><code>warp()</code>\u51fd\u6570\u672c\u8eab\u7684\u5f62\u53c2\u662f\u4e00\u4e2a\u4e07\u80fd\u5f15\u7528\uff0c\u5373\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\u53c8\u53ef\u4ee5\u63a5\u53d7\u53f3\u503c\uff1b\u7b2c\u4e00\u4e2a<code>warp()</code>\u51fd\u6570\u8c03\u7528\u5b9e\u53c2\u662f\u5de6\u503c\uff0c\u6240\u4ee5\uff0c<code>warp()</code>\u51fd\u6570\u4e2d\u8c03\u7528<code>func()</code>\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u4e5f\u5e94\u8be5\u662f\u5de6\u503c\uff1b\u7b2c\u4e8c\u4e2awarp()\u51fd\u6570\u8c03\u7528\u5b9e\u53c2\u662f\u53f3\u503c\uff0c\u6839\u636e\u4e0a\u9762\u6240\u8bf4\u7684\u5f15\u7528\u6298\u53e0\u89c4\u5219\uff0cwarp()\u51fd\u6570\u63a5\u6536\u7684\u53c2\u6570\u7c7b\u578b\u662f\u53f3\u503c\u5f15\u7528\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5374\u8c03\u7528\u4e86\u8c03\u7528func()\u7684\u5de6\u503c\u7248\u672c\u4e86\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u5728warp()\u51fd\u6570\u5185\u90e8\uff0c\u5de6\u503c\u5f15\u7528\u7c7b\u578b\u53d8\u4e3a\u4e86\u53f3\u503c\uff0c\u56e0\u4e3a\u53c2\u6570\u6709\u4e86\u540d\u79f0\uff0c\u6211\u4eec\u4e5f\u901a\u8fc7\u53d8\u91cf\u540d\u53d6\u5f97\u53d8\u91cf\u5730\u5740\u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u4fdd\u6301\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u53d8\u91cf\u7c7b\u578b\u7684\u4e0d\u53d8\u5462\uff1f\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8c13\u7684\u201c\u5b8c\u7f8e\u8f6c\u53d1\u201d\u6280\u672f\uff0c\u5728C++11\u4e2d\u901a\u8fc7<code>std::forward()</code>\u51fd\u6570\u6765\u5b9e\u73b0\u3002\u6211\u4eec\u4fee\u6539\u6211\u4eec\u7684<code>warp()</code>\u51fd\u6570\u5982\u4e0b\uff1a <pre><code>1. `template&lt;typename T&gt;`\n2. `void warp(T&amp;&amp; param) {`\n3.     `func(std::forward&lt;T&gt;(param));`\n4. `}`\n</code></pre></p> <p>\u5219\u53ef\u4ee5\u8f93\u51fa\u9884\u671f\u7684\u7ed3\u679c\u3002</p> <p>\u4f8b\u5b502 <pre><code>template&lt;typename T&gt;\nvoid print(T &amp; t){\n    std::cout &lt;&lt; \"Lvalue ref\" &lt;&lt; std::endl;\n}\n\ntemplate&lt;typename T&gt;\nvoid print(T &amp;&amp; t){\n    std::cout &lt;&lt; \"Rvalue ref\" &lt;&lt; std::endl;\n}\n\ntemplate&lt;typename T&gt;\nvoid testForward(T &amp;&amp; v){ \n    print(v);//v\u6b64\u65f6\u5df2\u7ecf\u662f\u4e2a\u5de6\u503c\u4e86,\u6c38\u8fdc\u8c03\u7528\u5de6\u503c\u7248\u672c\u7684print\n    print(std::forward&lt;T&gt;(v)); //\u672c\u6587\u7684\u91cd\u70b9\n    print(std::move(v)); //\u6c38\u8fdc\u8c03\u7528\u53f3\u503c\u7248\u672c\u7684print\n\n    std::cout &lt;&lt; \"\" &lt;&lt; std::endl;\n}\n\nint main(int argc, char * argv[])\n{\n    int x = 1;\n    testForward(x); //\u5b9e\u53c2\u4e3a\u5de6\u503c\n    testForward(std::move(x)); //\u5b9e\u53c2\u4e3a\u53f3\u503c\n}\n</code></pre></p> <pre><code>Lvalue ref\nLvalue ref\nRvalue ref\n\nLvalue ref\nRvalue ref\nRvalue ref\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/","title":"C++\u5f62\u53c2\u5305\u4e0e\u53ef\u53d8\u53c2\u6570\u6a21\u677f","text":"<p>\u5f62\u53c2\u5305</p>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#1-c","title":"1 C++\u5f62\u53c2\u5305","text":"<p>\u6a21\u677f\u5f62\u53c2\u5305\u662f\u63a5\u53d7\u96f6\u4e2a\u6216\u66f4\u591a\u4e2a\u6a21\u677f\u5b9e\u53c2\uff08\u975e\u7c7b\u578b\u3001\u7c7b\u578b\u6216\u6a21\u677f\uff09\u7684\u6a21\u677f\u5f62\u53c2\u3002\u51fd\u6570\u5f62\u53c2\u5305\u662f\u63a5\u53d7\u96f6\u4e2a\u6216\u66f4\u591a\u4e2a\u51fd\u6570\u5b9e\u53c2\u7684\u51fd\u6570\u5f62\u53c2\u3002</p> <p>\u81f3\u5c11\u6709\u4e00\u4e2a\u5f62\u53c2\u5305\u7684\u6a21\u677f\u88ab\u79f0\u4f5c_\u53d8\u53c2\u6a21\u677f_\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#11","title":"1.1 \u975e\u7c7b\u578b\u6a21\u677f\u5f62\u53c2\u5305\uff08\u5f62\u53c2\u5305\u91cc\u662f\u5177\u4f53\u7684\u6570\u5b57\uff09","text":""},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#12","title":"1.2 \u6a21\u677f\u5f62\u53c2\u5305\u4e0e\u51fd\u6570\u5f62\u53c2\u5305\uff08\u5f62\u53c2\u5305\u91cc\u662f\u7c7b\u578b\u4e0e\u5f62\u53c2\u5305\u91cc\u662f\u5b9e\u53c2\uff09","text":"<pre><code>template &lt;class... Args&gt;\nvoid f(Args... args)//Args\u89e3\u5305\uff0c\u53d8\u4e3aint a\u548cint b\uff0cargs\u4e3aa b \u7684\u96c6\u5408\n{    \n    cout &lt;&lt; sizeof...(args) &lt;&lt; endl; //\u6253\u5370\u53d8\u53c2\u7684\u4e2a\u6570\n}\n\nf();        //0 \u540cf&lt;&gt;()\nf(1, 2);    //2 \u540cf&lt;int,int&gt;(1, 2)\uff0c\u6b64\u65f6Args\u4e3a\u5305\u542bint\u548cint\u7684\u53c2\u6570\u5305\uff0cargs\u4e3a\u5305\u542b1,2(\u5f62\u53c21\uff0c\u5f62\u53c22)\u7684\u53c2\u6570\u5305\nf(1, 2.5, \"\");    //3 \u540cf&lt;int, float, const char*&gt;(1, 2.5, \"\")\u6b64\u65f6Args\u4e3a\u5305\u542bint, float, const char*\u7684\u53c2\u6570\u5305\uff0cargs\u4e3a\u5305\u542b1\uff0c2.5\uff0c3\uff08\u5f62\u53c21\u3001\u5f62\u53c22\u3001\u5f62\u53c23\uff09\u7684\u53c2\u6570\u5305\n</code></pre> <pre><code>template&lt;typename... Args&gt; void f(Args... args) { \n    constexpr auto s1 = sizeof...(Args); // \u6a21\u677f\u53c2\u6570\u5305 \n    constexpr auto s2 = sizeof...(args); // \u51fd\u6570\u53c2\u6570\u5305 \n    static_assert(s1  s2);\n}\n</code></pre> <p>\u5f62\u53c2\u5305\u5c55\u5f00 <pre><code>template&lt;typename... Args&gt; void f(Args... args) { \n    std::tuple&lt;Args...&gt; tp = // \u5c55\u5f00\u6a21\u677f\u53c2\u6570\u5305 \n    std::make_tuple(args...); // \u5c55\u5f00\u51fd\u6570\u53c2\u6570\u5305 \n}\n\n`f(1, \"2\", 3.0)`\u00a0\u5c55\u5f00\u540e\u7684\u7ed3\u679c\u00a0[https://cppinsights.io/s/b78454ba](https://cppinsights.io/s/b78454ba)\ntemplate&lt;&gt; \nvoid f&lt;int, const char *, double&gt;(int __args0, const char * __args1, double __args2) { \n    std::tuple&lt;int, const char *, double&gt; tp = std::make_tuple(__args0, __args1, __args2); \n    //Args \u4e3aint\u3001const char*\u3001double\u7684\u96c6\u5408\n    //args \u4e3a__args0, __args1, __args2\u7684\u96c6\u5408\n}\n</code></pre></p>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#13","title":"1.3 \u5f62\u53c2\u5305\u7684\u904d\u5386","text":""},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#131","title":"1.3.1 \u9012\u5f52\u51fd\u6570\uff1a","text":"<p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\n//\u9012\u5f52\u7ec8\u6b62\u51fd\u6570\nvoid print()\n{\n   cout &lt;&lt; \"empty\" &lt;&lt; endl;\n}\n//\u5c55\u5f00\u51fd\u6570\ntemplate &lt;class T, class ...Args&gt;\nvoid print(T head, Args... rest)\n{\n   cout &lt;&lt; \"parameter \" &lt;&lt; head &lt;&lt; endl;\n   print(rest...);\n}\n\nint main(void)\n{\n   print(1, 2.5, \"\");//\u6b64\u65f6\uff0cArgs\u4e3afloat\u548cconst char*\uff0crest\u4e3a2.5\u548c\u201c\u201d\uff0chead\u4e3a1\n   return 0;\n}\n</code></pre> \u4e0a\u4f8b\u4f1a\u8f93\u51fa\u6bcf\u4e00\u4e2a\u53c2\u6570\uff0c\u76f4\u5230\u4e3a\u7a7a\u65f6\u8f93\u51faempty\u3002\u5c55\u5f00\u53c2\u6570\u5305\u7684\u51fd\u6570\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u9012\u5f52\u51fd\u6570\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u9012\u5f52\u7ec8\u6b62\u51fd\u6570\uff0c\u53c2\u6570\u5305Args...\u5728\u5c55\u5f00\u7684\u8fc7\u7a0b\u4e2d\u9012\u5f52\u8c03\u7528\u81ea\u5df1\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u53c2\u6570\u5305\u4e2d\u7684\u53c2\u6570\u5c31\u4f1a\u5c11\u4e00\u4e2a\uff0c\u76f4\u5230\u6240\u6709\u7684\u53c2\u6570\u90fd\u5c55\u5f00\u4e3a\u6b62\uff0c\u5f53\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u5219\u8c03\u7528\u975e\u6a21\u677f\u51fd\u6570print\u7ec8\u6b62\u9012\u5f52\u8fc7\u7a0b\u3002 \u9012\u5f52\u8c03\u7528\u7684\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684: print(1,2,3,4); print(2,3,4); print(3,4); print(4); print();</p>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#132","title":"1.3.2\u5982\u679c\u7c7b\u578b\u4e00\u6837\u53ef\u4ee5\u7528\u521d\u59cb\u5316\u5217\u8868\u53bb\u627f\u8f7d\u5c55\u5f00\u7684\u5f62\u53c2\u5305","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include &lt;vector&gt;\n\ntemplate &lt;class... T&gt;\nvoid f(T... args) {\n\u00a0 auto m = {args...};//m \u4e3astd::initializer_list&lt;int&gt;\n\u00a0 for (auto i : m) {\n\u00a0 \u00a0 std::cout &lt;&lt; i &lt;&lt; \" \";\n\u00a0 }\n}\nint main(int argc, char* argv[]) {\n\u00a0 f(1, 2); // 1 , 2\n\u00a0 return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#133-c17","title":"1.3.3 \u6298\u53e0\u8868\u8fbe\u5f0f\uff08C++17\uff09","text":"<p>\u9012\u5f52\u51fd\u6570\u5c55\u5f00\u53c2\u6570\u5305\u662f\u4e00\u79cd\u6807\u51c6\u505a\u6cd5\uff0c\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u7f3a\u70b9,\u5c31\u662f\u5fc5\u987b\u8981\u4e00\u4e2a\u91cd\u8f7d\u7684\u9012\u5f52\u7ec8\u6b62\u51fd\u6570\uff0c\u5373\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u540c\u540d\u7684\u7ec8\u6b62\u51fd\u6570\u6765\u7ec8\u6b62\u9012\u5f52\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u611f\u89c9\u7a0d\u6709\u4e0d\u4fbf\u3002\u6709\u6ca1\u6709\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\u5462\uff1f\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u901a\u8fc7\u9012\u5f52\u65b9\u5f0f\u6765\u5c55\u5f00\u53c2\u6570\u5305\uff0c\u90a3\u5c31\u662f\u6298\u53e0\u8868\u8fbe\u5f0f\uff1a</p> <p>\u6298\u53e0\u8868\u8fbe\u5f0f\u662fC++17\u65b0\u5f15\u8fdb\u7684\u8bed\u6cd5\u7279\u6027\u3002\u4f7f\u7528\u6298\u53e0\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7b80\u5316\u5bf9C++11\u4e2d\u5f15\u5165\u7684\u53c2\u6570\u5305\u7684\u5904\u7406\uff0c\u4ece\u800c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u907f\u514d\u4f7f\u7528\u9012\u5f52\u3002 <pre><code>template &lt;class... T&gt;\nvoid f(T... args) {\n\u00a0 //\u6298\u53e0\u8868\u8fbe\u5f0f\uff0c\u4e00\u5143\u53f3\u6298\u53e0\n\u00a0 ((std::cout &lt;&lt; args &lt;&lt; \" \"), ...);\n\u00a0\u00a0 // \u6298\u53e0\u8868\u8fbe\u5f0f\uff0c\u5de6\u6298\u53e0\n\u00a0 (..., (std::cout &lt;&lt; args &lt;&lt; \" \"));\n}\n\nint main(int argc, char* argv[]) {\n\u00a0 f(1, 2, 3.5, \"hello\"); // 1 , 2 , 3.5. hello\n\u00a0 return 0;\n}\n//\u7531\u4e8e\u9017\u53f7\u8868\u8fbe\u5f0f\u662f\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97\uff0c\u6240\u4ee5\u4e0d\u7ba1\u662f\u53f3\u6298\u53e0\u8fd8\u662f\u5de6\u6298\u53e0\uff0c\u90fd\u662f\u8f93\u51fa1 , 2 , 3.5. hello\n</code></pre></p> <p>\u8bed\u6cd5\u5f62\u5f0f\u4e2d\u7684op\u4ee3\u8868\u8fd0\u7b97\u7b26\uff0cpack\u4ee3\u8868\u53c2\u6570\u5305\uff0cinit\u4ee3\u8868\u521d\u59cb\u503c\u3002</p> <ul> <li> <p>\u4e00\u5143\u53f3\u6298\u53e0(unary right fold) ( pack op ... ) \u4e00\u5143\u53f3\u6298\u53e0(E op ...)\u5c55\u5f00\u4e4b\u540e\u53d8\u4e3a E1 op (... op (EN-1 op EN))</p> </li> <li> <p>\u4e00\u5143\u5de6\u6298\u53e0(unary left fold) ( ... op pack ) \u4e00\u5143\u5de6\u6298\u53e0(... op E)\u5c55\u5f00\u4e4b\u540e\u53d8\u4e3a ((E1 op E2) op ...) op EN</p> </li> <li> <p>\u4e8c\u5143\u53f3\u6298\u53e0(binary right fold) ( pack op ... op init ) \u4e8c\u5143\u53f3\u6298\u53e0(E op ... op I)\u5c55\u5f00\u4e4b\u540e\u53d8\u4e3a E1 op (... op (EN\u22121 op (EN op I)))</p> </li> <li> <p>\u4e8c\u5143\u5de6\u6298\u53e0(binary left fold) ( init op ... op pack ) \u4e8c\u5143\u5de6\u6298\u53e0(I op ... op E)\u5c55\u5f00\u4e4b\u540e\u53d8\u4e3a (((I op E1) op E2) op ...) op EN</p> </li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E5%BD%A2%E5%8F%82%E5%8C%85%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#14","title":"1.4 \u5f62\u53c2\u5305\u7684\u6a21\u5f0f","text":"<p>\u53ef\u4ee5\u5728\u5f62\u53c2\u5305\u5916\u8fb9\u5957\u4e0a\u4e00\u4e9b\u7b26\u53f7\u6765\u7ed9\u5f62\u53c2\u5305\u5957\u4e0a\u4e00\u4e9b\u7c7b\u578b\u3002 \u4e3a\u6bcf\u4e2a\u7c7b\u578b\u52a0\u4e0a\u4e86const &amp; <pre><code>template&lt;typename... Args&gt; \nvoid print(const Args&amp;... args) {\n    ((std::cout &lt;&lt; args &lt;&lt; std::endl), ...); // \u9017\u53f7\u8868\u8fbe\u5f0f\u3001\u6298\u53e0\u8868\u8fbe\u5f0f \n}\n</code></pre></p>"},{"location":"C%2B%2B/C%2B%2B%E6%95%B0%E7%BB%84%E4%BC%A0%E5%8F%82/","title":"C++\u6570\u7ec4\u4f20\u53c2","text":"<p>C++\u6570\u7ec4\u4f20\u53c2</p>"},{"location":"C%2B%2B/C%2B%2B%E6%95%B0%E7%BB%84%E4%BC%A0%E5%8F%82/#c","title":"\u4f20\u7edf\u4f20\u53c2\uff08C\u8bed\u8a00\u517c\u5bb9\uff09","text":"<pre><code>void f1(int arr[]) {}\nvoid f2(int arr[8]) {}\nvoid f3(int(arr)[]) {}\nvoid f4(int(arr)[9]) {}\nvoid f5(int* arr) {}\n</code></pre> <p>\u4ee5\u4e0a\u7684\u5b9a\u4e49\u662f\u5b8c\u5168\u7b49\u4ef7\u7684, \u7279\u522b\u662f<code>void f2(int arr[8]) {}</code>\u8fd9\u79cd\u5199\u6cd5\uff0c\u975e\u5e38\u5177\u6709\u8ff7\u60d1\u6027\uff0c\u4e5f\u662f\u521d\u5b66\u8005\u5bb9\u6613\u72af\u9519\u7684\u5730\u65b9\u3002\u5b83\u4f1a\u8ba9\u4eba\u89c9\u5f97\uff0c\u53c2\u6570\u662f\u4e2a\u957f\u5ea6\u4e3a8\u7684int\u6570\u7ec4\uff0c\u7136\u540e\u5728\u51fd\u6570\u5185\u90e8\uff0c\u5b8c\u5168\u628a\u53c2\u6570<code>arr</code>\u5f53\u505a\u6570\u7ec4\u6765\u8bbf\u95ee\u3002\u6bd4\u5982\uff1a</p> <pre><code>void printArray(int arr[8]) {\n    int length = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0 ; i &lt; length; ++i){\n        std::cout &lt;&lt; arr[i] &lt;&lt; std::endl;\n    }\n}\n</code></pre> <p>\u800c\u5b9e\u9645\u4e0a\uff0c<code>sizeof(arr)</code>\u7684\u503c\u662f<code>sizeof(int*)</code>\uff0c\u8fd9\u6837\u5199\u51fa\u6765\u7684\u4ee3\u7801\u80af\u5b9a\u6709\u95ee\u9898\u3002</p> <pre><code>void func(int arr[8]) {\n    // arr \u5b9e\u9645\u4e0a\u662f int* \u7c7b\u578b\u7684\u6307\u9488\n\n    // \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\n    int value = arr[0];\n\n    // \u4fee\u6539\u6570\u7ec4\u5143\u7d20\n    arr[0] = 10;\n}\n\nvoid func(int arr[]) {\n    // arr \u5b9e\u9645\u4e0a\u662f int* \u7c7b\u578b\u7684\u6307\u9488\n\n    // \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\n    int value = arr[0];\n\n    // \u4fee\u6539\u6570\u7ec4\u5143\u7d20\n    arr[0] = 10;\n}\n</code></pre> <p>\u8fd9\u79cd\u5b9a\u4e49\u65b9\u6cd5\uff0c\u5728\u51fd\u6570\u5185\u90e8\u65e0\u6cd5\u5f97\u5230\u6570\u7ec4\u7684\u771f\u5b9e\u957f\u5ea6\uff0c\u4e00\u822c\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u589e\u52a0\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u957f\u5ea6\uff0c\u6bd4\u5982\uff1a</p> <pre><code>void printArray(int arr[], int length) {\n    for (int i = 0 ; i &lt; length; ++i){\n        std::cout &lt;&lt; arr[i] &lt;&lt; std::endl;\n    }\n}\n</code></pre> <p>\u8bb0\u4f4f<code>f1, f2, f3, f4</code>\u7684\u5b9a\u4e49\u5b8c\u5168\u7b49\u4ef7\u4e8e<code>f5</code>\uff0c\u4f7f\u7528\u4e0a\u57fa\u672c\u5c31\u4e0d\u4f1a\u72af\u9519\u4e86\u3002</p> <p>\u51c6\u786e\u5730\u8bf4\uff0c\u8fd9\u79cd\u5b9a\u4e49\u65b9\u6cd5\u5e76\u4e0d\u662f\u628a\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\uff0c\u53ea\u662f\u5b9a\u4e49\u4e86\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5199\u7684\u5f62\u5f0f\u50cf\u6570\u7ec4\u7f62\u4e86\u3002\u628a\u6570\u7ec4\u4f20\u7ed9\u5982\u6b64\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u6570\u7ec4\u5c31\u9000\u5316\u6210\u4e00\u4e2a\u6307\u9488\uff0c\u540c\u65f6\u4e22\u5931\u4e86\u957f\u5ea6\u4fe1\u606f\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E6%95%B0%E7%BB%84%E4%BC%A0%E5%8F%82/#c_1","title":"C++\u63a8\u8350\u7684\u6570\u7ec4\u4f20\u53c2","text":"<p>\u5982\u679c\u60f3\u4f20\u53c2\u65f6\u5c31\u786e\u5b9a\u597d\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u9700\u8981\u7528\u5230\u6570\u7ec4\u6307\u9488\u6216\u6570\u7ec4\u5f15\u7528\u3002 \u6bd4\u5982\uff1a <pre><code>//\u5b9e\u53c2\u5fc5\u987b\u662f\u542b\u670910\u4e2a\u6574\u6570\u7684\u6570\u7ec4\u3002\nvoid print(int (&amp;arr)[10]) {\n    for (auto i:arr) {\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n}\n</code></pre></p> <p>\u7528\u6570\u7ec4\u6307\u9488\u6216\u6570\u7ec4\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u6709\u5982\u4e0b\u4f18\u70b9\uff1a</p> <ol> <li>\u53c2\u6570\u4ecd\u7136\u4fdd\u7559\u7740\u6570\u7ec4\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af\u3002</li> <li>\u9632\u6b62\u53c2\u6570\u8bef\u4f20\u3002\u5982\u679c\u53c2\u6570\u662f\u957f\u5ea6\u4e3a8\u7684\u6570\u7ec4\u6307\u9488\u6216\u5f15\u7528\uff0c\u4f20\u9012\u957f\u5ea6\u4e3a10\u7684\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\uff0c\u7f16\u8bd1\u662f\u65e0\u6cd5\u901a\u8fc7\u7684\u3002</li> <li>\u65b9\u4fbf\u3002</li> </ol>"},{"location":"C%2B%2B/C%2B%2B%E6%95%B0%E7%BB%84%E4%BC%A0%E5%8F%82/#_1","title":"\u6570\u7ec4\u6307\u9488\u4f5c\u4e3a\u53c2\u6570","text":"<pre><code>//arr\u53ef\u6709\u53ef\u65e0\nvoid printArray(int(*arr)[8]) {\n    for (auto i : *arr){\n        std::cout &lt;&lt; i &lt;&lt; std::endl;\n    }\n}\n// \u4e8c\u7ef4\u6570\u7ec4\nvoid printArray(int(*arr)[2][3]) {\n    for(auto&amp; i : *arr) { // must be reference here\n        for(auto j : i) {\n            std::cout &lt;&lt; j &lt;&lt; std::endl;\n        }\n    }\n}\nint main(int argc, const char *argv[])\n{\n    int a[8] = {1,2,3,4,5,6,7,8};\n    int b[2][3] = {{11,22,33}, {44,55,66}};\n    printArray(&amp;a);\n    printArray(&amp;b);\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E6%95%B0%E7%BB%84%E4%BC%A0%E5%8F%82/#_2","title":"\u6570\u7ec4\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570","text":"<pre><code>//arr\u53ef\u6709\u53ef\u65e0\nvoid printArray(int(&amp;arr)[8]) {\n    for (auto i : arr){\n        std::cout &lt;&lt; i &lt;&lt; std::endl;\n    }\n}\n// \u4e8c\u7ef4\u6570\u7ec4\nvoid printArray(int(&amp;arr)[2][3]) {\n    for(auto&amp; i : arr) { // must be reference here\n        for(auto j : i) {\n            std::cout &lt;&lt; j &lt;&lt; std::endl;\n        }\n    }\n}\nint main(int argc, const char *argv[])\n{\n    int a[8] = {1,2,3,4,5,6,7,8};\n    int b[2][3] = {{11,22,33}, {44,55,66}};\n    printArray(a);\n    printArray(b);\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E6%95%B0%E7%BB%84%E4%BC%A0%E5%8F%82/#_3","title":"\u642d\u914d\u6a21\u677f","text":"<pre><code>// \u7f16\u8bd1\u671f\u83b7\u5f97\u6570\u7ec4\u957f\u5ea6\uff0c\u4e0d\u7528\u7279\u610f\u6307\u5b9aN\u7684\u503c\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc\n// see &lt;&lt;Effective Modern C++&gt;&gt;\ntemplate&lt;typename T, std::size_t N&gt;\nconstexpr std::size_t arraySize(T(&amp;)[N]) noexcept {\n    return N;\n}\n// \u6253\u5370\u4efb\u610f\u957f\u5ea6\u4e00\u7ef4\u6570\u7ec4\uff0ctype T is printable\ntemplate&lt;typename T, std::size_t N&gt;\nvoid printArray(T(&amp;arr)[N]) noexcept {\n    for (auto&amp; i : arr){\n        std::cout &lt;&lt; i &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/","title":"C++\u667a\u80fd\u6307\u9488","text":"<p>\u5f15\u7528\u8ba1\u6570\uff1a\u5bf9\u4e8e\u4e00\u5757\u5185\u5b58\uff0c\u591a\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\uff0c\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u5c31\u4f1a+1\u3002 \u5bf9\u4e8e\u6307\u9488\u6307\u9488\u8d4b\u503c\u6765\u8bf4\uff0c=\u53f7\u53f3\u8fb9\u7684\u5f15\u7528\u8ba1\u6570+1\uff0c=\u5de6\u8fb9\u7684\u5f15\u7528\u8ba1\u6570-1.\u4e0b\u56fe\u4e2dsp1 -1 \uff0csp4+1 </p>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#1-raii","title":"1. RAII","text":"<p>RAII \u662f resource acquisition is initialization \u7684\u7f29\u5199\uff0c\u610f\u4e3a\u201c\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\u201d\u3002\u5b83\u662f C++ \u4e4b\u7236 Bjarne Stroustrup \u63d0\u51fa\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u5176\u6838\u5fc3\u662f\u628a\u8d44\u6e90\u548c\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\uff0c\u5bf9\u8c61\u521b\u5efa\u83b7\u53d6\u8d44\u6e90\uff0c\u5bf9\u8c61\u9500\u6bc1\u91ca\u653e\u8d44\u6e90\u3002\u5728 RAII \u7684\u6307\u5bfc\u4e0b\uff0cC++ \u628a\u5e95\u5c42\u7684\u8d44\u6e90\u7ba1\u7406\u95ee\u9898\u63d0\u5347\u5230\u4e86\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ba1\u7406\u7684\u66f4\u9ad8\u5c42\u6b21\u3002</p>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#2-unique_ptr","title":"2. unique_ptr","text":"<p>unique_ptr\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u4e2a\u201c\u5f97\u4e0d\u5230\u5c31\u6bc1\u6389\u201d\u7684\u7406\u5ff5\uff0c\u76f4\u63a5\u628a\u62f7\u8d1d\u548c\u8d4b\u503c\u7981\u6b62\u4e86\u3002</p> <p>\u5bf9\u4e8e\u7528\u4e0d\u4e0a\u8d4b\u503c\u62f7\u8d1d\u7684\u573a\u666f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9009\u62e9unique_ptr\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002</p> <pre><code>template&lt;class T&gt;\n    class unique_ptr\n    {\n    public:\n        unique_ptr(T* ptr = nullptr)\n            :_ptr(ptr)\n        {}\n\n        //\u9632\u62f7\u8d1d\n        unique_ptr(unique_ptr&lt;T&gt;&amp; ap) = delete;\n        unique_ptr&lt;T&gt;&amp; operator = (unique_ptr&lt;T&gt;&amp; ap) = delete;\n\n        ~SmartPtr()\n        {\n            if (_ptr)delete _ptr;\n        }\n        //\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u652f\u6301\u89e3\u5f15\u7528\u548c-&gt;\u7b26\u53f7\n        T&amp; operator *()\n        {\n            return *_ptr;\n        }\n        T* operator -&gt;()\n        {\n            return _ptr;\n        }\n    private:\n        T* _ptr;\n    };\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#3-shared_ptr","title":"3. shared_ptr","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u8d44\u6e90\u6dfb\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8ba9\u6240\u6709\u7ba1\u7406\u8be5\u8d44\u6e90\u7684\u667a\u80fd\u5171\u7528\u8fd9\u4e2a\u8ba1\u6570\u5668\uff0c\u5018\u82e5\u53d1\u751f\u62f7\u8d1d\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u5018\u82e5\u6709\u6790\u6784\u53d1\u751f\uff0c \u8ba1\u6570\u5668\u51cf\u4e00\uff0c\u5f53\u8ba1\u6570\u5668\u7b49\u4e8e0\u7684\u65f6\u5019\uff0c\u5c31\u628a\u5bf9\u8c61\u6790\u6784\u6389\u3002 \u6240\u6709\u7684\u667a\u80fd\u6307\u9488\u5171\u540c\u7ef4\u62a4\u7740\u4e24\u4e2a\u5730\u5740\uff1a\u4e00\u4e2a\u65f6\u5bf9\u8c61\u8d44\u6e90\u7684\u5730\u5740\uff0c\u4e00\u4e2a\u662f\u5f15\u7528\u8ba1\u6570\u7684\u5730\u5740\uff08\u4e0d\u662f\u4e00\u4e2ashared_ptr\u6709\u4e00\u4e2aint\u8ba1\u6570\uff0c\u800c\u662f\u5171\u540c\u7ef4\u62a4\u4e00\u4e2aint*\uff09</p> <p><pre><code>template&lt;class T&gt;\n    class shared_ptr\n    {\n    public:\n        shared_ptr(T*ptr =nullptr)\n            :_ptr(ptr),_pcount(new int(1))\n        {}\n        //\u62f7\u8d1d\u6784\u9020,\u5b83\u4eec\u5171\u540c\u7684\u8ba1\u6570+1\n        shared_ptr(const shared_ptr&lt;T&gt;&amp; sp)\n            _ptr(sp._ptr),_pcount(sp._pcount)\n        {\n            ++(*_pcount);\n        }\n        //\u62f7\u8d1d\u8d4b\u503c\uff0c\u53f3\uff0b\u5de6-\n        shared_ptr&lt;T&gt;&amp; operator = (shared_ptr&lt;T&gt;&amp; sp)\n        {\n            if (_ptr != sp._ptr) {\n                //\u62f7\u8d1d\u8d4b\u503c\u65f6\uff0c=\u5de6\u8fb9\u8ba1\u6570-1\uff0c=\u53f3\u8fb9\u8ba1\u6570+1\n                if (--(*_pcount)  0){\n                    delete _pcount;\n                    delete _ptr;\n                }\n                _ptr = sp._ptr;\n                _pcount = sp._pcount;\n                //\u6b64\u65f6++(*_pcount)\u548c++(*sp._pcount)\u662f\u7b49\u4ef7\u7684\n                ++(*_pcount);\n            }\n            return *this;\n        }\n        T&amp; operator *()\n        {\n            return *_ptr;\n        }\n\n        T* operator -&gt;()\n        {\n            return _ptr;\n        }\n\n\n        ~shared_ptr()\n        {   //\u6790\u6784\u65f6\uff0c\u8ba1\u6570-1\uff0c\u7136\u540e\u5224\u65ad\uff1a\u5982\u679c\u5f15\u7528\u8ba1\u6570\u4e3a0\u624d\u5220\u9664\u6307\u5411\u8d44\u6e90\n            if (--(*_pcount)  0 &amp;&amp; _ptr) {\n                delete _pcount;\n                delete _ptr;\n            }\n        }\n    private:\n        T* _ptr;\n        int* _pcount;\n    };\n</code></pre> - \u62f7\u8d1d\u6784\u9020</p> <p></p> <ul> <li>\u8d4b\u503c\u62f7\u8d1d</li> </ul> <p>\u8d4b\u503c\u62f7\u8d1d\u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a</p> <ol> <li>\u5728\u88ab\u8d4b\u503c\u4e4b\u524d\u7684\u5bf9\u8c61\u9700\u8981\u5c06\u81ea\u5df1\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u653e\u5f03\u5f53\u524d\u8d44\u6e90\u7684\u7ba1\u7406\u6743\uff0c\u7136\u540e\u518d\u53bb\u88ab\u8d4b\u503c\uff0c\u53d6\u5f97\u65b0\u7684\u7ba1\u7406\u6743\u3002</li> <li>\u907f\u514d\u81ea\u5df1\u5bf9\u81ea\u5df1\u8d4b\u503c\uff0c\u6309\u71671\u4e2d\u7684\u673a\u5236\uff0c\u5982\u679c\u81ea\u5df1\u5bf9\u81ea\u5df1\u8d4b\u503c\uff0c\u4f1a\u9020\u6210\u65e0\u8c13\u7684\u64cd\u4f5c\uff0c\u6216\u8005\u8bef\u6790\u6784\u8d44\u6e90\u3002</li> </ol> <p></p>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#4-weak_ptr","title":"4. weak_ptr","text":"<p>\u5982\u679c\u4f60\u4ed4\u7ec6\u601d\u8003\u00a0<code>std::shared_ptr</code>\u00a0\u5c31\u4f1a\u53d1\u73b0\u4f9d\u7136\u5b58\u5728\u7740\u8d44\u6e90\u65e0\u6cd5\u91ca\u653e\u7684\u95ee\u9898\u3002\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>struct A;  \nstruct B;  \n\nstruct A {  \n    std::shared_ptr&lt;B&gt; pointer;  \n    ~A() {  \n        std::cout &lt;&lt; \"A \u88ab\u9500\u6bc1\" &lt;&lt; std::endl;  \n    }  \n};  \nstruct B {  \n    std::shared_ptr&lt;A&gt; pointer;  \n    ~B() {  \n        std::cout &lt;&lt; \"B \u88ab\u9500\u6bc1\" &lt;&lt; std::endl;  \n    }  \n};  \nint main() {  \n    auto a = std::make_shared&lt;A&gt;();  \n    auto b = std::make_shared&lt;B&gt;();  \n    a-&gt;pointer = b;  \n    b-&gt;pointer = a;  \n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u662f A, B \u90fd\u4e0d\u4f1a\u88ab\u9500\u6bc1\uff0c\u8fd9\u662f\u56e0\u4e3a a,b \u5185\u90e8\u7684 pointer \u540c\u65f6\u53c8\u5f15\u7528\u4e86\u00a0<code>a,b</code>\uff0c\u8fd9\u4f7f\u5f97\u00a0<code>a,b</code>\u00a0\u7684\u5f15\u7528\u8ba1\u6570\u5747\u53d8\u4e3a\u4e86 2\uff0c\u800c\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c<code>a,b</code>\u00a0\u667a\u80fd\u6307\u9488\u88ab\u6790\u6784\uff0c\u5374\u53ea\u80fd\u9020\u6210\u8fd9\u5757\u533a\u57df\u7684\u5f15\u7528\u8ba1\u6570-1\uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u4e86\u00a0<code>a,b</code>\u00a0\u5bf9\u8c61\u6307\u5411\u7684\u5185\u5b58\u533a\u57df\u5f15\u7528\u8ba1\u6570\u4e0d\u4e3a\u96f6\uff0c\u800c\u5916\u90e8\u5df2\u7ecf\u6ca1\u6709\u529e\u6cd5\u627e\u5230\u8fd9\u5757\u533a\u57df\u4e86\uff0c\u4e5f\u5c31\u9020\u6210\u4e86\u5185\u5b58\u6cc4\u9732\u3002 \u90a3\u4e48A\u8282\u70b9\u8d44\u6e90\u4ec0\u4e48\u65f6\u5019\u6790\u6784\u5462, \u5f53B-&gt;pointer\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u5f53B\u8282\u70b9\u8d44\u6e90\u6790\u6784\uff0c\u90a3\u4e48B\u8282\u70b9\u8d44\u6e90\u4ec0\u4e48\u65f6\u5019\u6790\u6784\u5462\uff0c\u5f53A-&gt;pointer\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u5f53A\u8282\u70b9\u8d44\u6e90\u6790\u6784\u2026\u6b64\u65f6\u5f62\u6210\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u201c\u6b7b\u9501\u201d\u7684\u60c5\u51b5\u3002 \u5982\u56fe \uff1a</p> <p></p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u5c31\u662f\u4f7f\u7528\u5f31\u5f15\u7528\u6307\u9488\u00a0<code>std::weak_ptr</code>\uff0c<code>std::weak_ptr</code>\u662f\u4e00\u79cd\u5f31\u5f15\u7528\uff08\u76f8\u6bd4\u8f83\u800c\u8a00\u00a0<code>std::shared_ptr</code>\u00a0\u5c31\u662f\u4e00\u79cd\u5f3a\u5f15\u7528\uff09\u3002\u5f31\u5f15\u7528\u4e0d\u4f1a\u5f15\u8d77\u5f15\u7528\u8ba1\u6570\u589e\u52a0\uff0c\u5f53\u6362\u7528\u5f31\u5f15\u7528\u65f6\u5019\uff0c\u6700\u7ec8\u7684\u91ca\u653e\u6d41\u7a0b\u5982\u56fe\u6240\u793a(A\u8ba1\u6570\u4e3a1\uff0cB\u8ba1\u6570\u4e3a2\uff0c\u79bb\u5f00\u4f5c\u7528\u57df\u65f6a,b\u9500\u6bc1\uff0c\u7531\u4e8e\u6b64\u65f6A\u7684\u8ba1\u6570\u4e3a0\uff0cB\u8ba1\u6570\u4e3a1\uff0cA\u9500\u6bc1\uff0c\u6240\u4ee5A-&gt;pointer\u9500\u6bc1\uff0cB\u7684\u8ba1\u6570-1\uff0c\u53d8\u4e3a0\uff0cB\u4e5f\u9500\u6bc1)\uff1a <pre><code>struct B {  \n    std::weak_ptr&lt;A&gt; pointer;  \n    ~B() {  \n        std::cout &lt;&lt; \"B \u88ab\u9500\u6bc1\" &lt;&lt; std::endl;  \n    }  \n};\n</code></pre></p> <p></p> <p>\u5728\u4e0a\u56fe\u4e2d\uff0c\u6700\u540e\u4e00\u6b65\u53ea\u5269\u4e0b B\uff0c\u800c B \u5e76\u6ca1\u6709\u4efb\u4f55\u667a\u80fd\u6307\u9488\u5f15\u7528\u5b83\uff0c\u56e0\u6b64\u8fd9\u5757\u5185\u5b58\u8d44\u6e90\u4e5f\u4f1a\u88ab\u91ca\u653e\u3002</p> <p><code>std::weak_ptr</code>\u00a0\u6ca1\u6709\u00a0<code>*</code>\u00a0\u8fd0\u7b97\u7b26\u548c\u00a0<code>-&gt;</code>\u00a0\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u4e0d\u80fd\u591f\u5bf9\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u00a0<code>std::shared_ptr</code>\u00a0\u662f\u5426\u5b58\u5728\uff0c\u5176\u00a0<code>expired()</code>\u00a0\u65b9\u6cd5\u80fd\u5728\u8d44\u6e90\u672a\u88ab\u91ca\u653e\u65f6\uff0c\u4f1a\u8fd4\u56de\u00a0<code>false</code>\uff0c\u5426\u5219\u8fd4\u56de\u00a0<code>true</code>\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4e5f\u53ef\u4ee5\u7528\u4e8e\u83b7\u53d6\u6307\u5411\u539f\u59cb\u5bf9\u8c61\u7684\u00a0<code>std::shared_ptr</code>\u00a0\u6307\u9488\uff0c\u5176\u00a0<code>lock()</code>\u00a0\u65b9\u6cd5\u5728\u539f\u59cb\u5bf9\u8c61\u672a\u88ab\u91ca\u653e\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u539f\u59cb\u5bf9\u8c61\u7684\u00a0<code>std::shared_ptr</code>\u00a0\u6307\u9488\uff0c\u8fdb\u800c\u8bbf\u95ee\u539f\u59cb\u5bf9\u8c61\u7684\u8d44\u6e90\uff0c\u5426\u5219\u8fd4\u56de<code>nullptr</code>\u3002</p> <p>weak_ptr \u4e0d\u662f\u4e00\u4e2aRALL\u667a\u80fd\u6307\u9488\uff0c\u5b83\u4e0d\u53c2\u4e0e\u8d44\u6e90\u7684\u7ba1\u7406\uff0c\u4ed6\u662f\u4e13\u95e8\u7528\u6765\u89e3\u51b3\u5f15\u7528\u8ba1\u6570\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2ashared_ptr \u6765\u521d\u59cb\u5316\u4e00\u4e2aweak_ptr,\u4f46\u662fweak_ptr \u4e0d\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u4e0d\u53c2\u4e0e\u7ba1\u7406\uff0c\u4f46\u662f\u4e5f\u50cf\u6307\u9488\u4e00\u6837\u8bbf\u95ee\u4fee\u6539\u8d44\u6e90\u3002</p> <p>\u5b9e\u73b0\u5982\u4e0b\uff1a <pre><code>    template&lt;class T&gt;\n    class weak_ptr\n    {\n    public:\n        weak_ptr()\n            :_ptr(nullptr)\n        {}\n        weak_ptr(shared_ptr&lt;T&gt;&amp; sp)\n            :_ptr(sp.get()),_pcount(sp.use_count())\n        {}\n        weak_ptr(weak_ptr&lt;T&gt;&amp; sp)\n            :_ptr(sp._ptr), _pcount(sp._pcount)\n        {}\n        weak_ptr&amp; operator = (shared_ptr&lt;T&gt;&amp; sp)\n        {\n            _ptr = sp.get();\n            *_pcount = sp.use_count();\n            return *this;\n        }\n        weak_ptr&amp; operator = (weak_ptr&lt;T&gt;&amp; sp)\n        {\n            _ptr = sp._ptr;\n            _pcount = sp._pcount;\n            return *this;\n        }\n\n        bool expired() const  { return *_pcount  0; }\n\n        shared_ptr&lt;T&gt; lock()  {\n        if (expired()) { \n            return shared_ptr&lt;T&gt;(nullptr);\n        } else { \n            return SharedPtr&lt;T&gt;(*this); \n        }\n    private:\n        T* _ptr;\n        int* _pcount;\n\n    };\n</code></pre></p>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_1","title":"\u81ea\u5b9a\u4e49\u5220\u9664\u5668","text":"<p>\u4e0d\u7ba1\u662f\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u7684shared_ptr\u8fd8\u662f\u5e93\u4e2d\u7684shared_ptr,\u6211\u4eec\u5728\u6790\u6784\u7684\u65f6\u5019\u9ed8\u8ba4\u90fd\u662f delete _ptr,\u5982\u679c\u6211\u4eec\u6258\u7ba1\u7684\u7c7b\u578b\u662f new T[] ,\u6216\u8005 malloc\u51fa\u6765\u7684\u8bdd\uff0c\u5c31\u5bfc\u81f4\u7c7b\u578b\u4e0d\u662f\u5339\u914d\u7684\uff0c\u65e0\u6cd5\u6790\u6784\u3002</p> <p>\u4e3a\u6b64\uff0cshared_ptr\u63d0\u4f9b\u4e86 \u5b9a\u5236\u5220\u9664\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6784\u9020\u7684\u65f6\u5019\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u5982\u679c\u6211\u4eec\u4e0d\u4f20\u53c2\uff0c\u5c31\u9ed8\u8ba4\u4f7f\u7528delete</p> <pre><code>    template&lt;class T&gt;\n    struct DeleteArray\n    {\n        void operator()(T* ptr)\n        {\n            delete[]ptr;\n        }\n    };\n\n    void test_deletor()\n    {\n        DeleteArray&lt;string&gt;da; //\u4f7f\u7528\u4eff\u51fd\u6570\u5b9a\u5236\n        std::shared_ptr&lt;string&gt;s2(new string[10], da);\n\n        std::shared_ptr&lt;string&gt;s3((string*)malloc(sizeof(string)),\n         [](string* ptr) {free(ptr); }); //\u4f7f\u7528lamdba \u5b9a\u5236\n    }\n</code></pre>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_2","title":"\u667a\u80fd\u6307\u9488\u4f5c\u4e3a\u5f62\u53c2\u548c\u8fd4\u56de\u503c","text":""},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_3","title":"\u4f5c\u4e3a\u5f62\u53c2","text":"<ul> <li>\u5f15\u7528\u4f20\u9012 (<code>std::shared_ptr</code> &amp; <code>std::unique_ptr</code>)\uff1a\u5f53\u4f60\u60f3\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u6307\u9488\u6216\u5176\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5e76\u5f71\u54cd\u8c03\u7528\u8005\u6301\u6709\u7684\u6307\u9488\u65f6\u3002 <pre><code>void processShared(const std::shared_ptr&lt;MyClass&gt;&amp; ptr) {\n    // \u8bfb\u53d6ptr\u6307\u5411\u7684\u5bf9\u8c61\n}\n\nvoid modifyUnique(std::unique_ptr&lt;MyClass&gt;&amp; ptr) {\n    // \u4fee\u6539ptr\u6307\u5411\u7684\u5bf9\u8c61\n}\n</code></pre></li> <li>\u503c\u4f20\u9012 (<code>std::shared_ptr</code>)\uff1a\u9002\u7528\u4e8e\u9700\u8981\u62f7\u8d1d\u6307\u9488\u7684\u60c5\u51b5\uff0c\u901a\u5e38\u7528\u4e8e <code>std::shared_ptr</code>\uff0c\u56e0\u4e3a\u5b83\u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u6765\u5171\u4eab\u6240\u6709\u6743\u3002</li> </ul> <pre><code>void processShared(const std::shared_ptr&lt;MyClass&gt; ptr) {\n    // \u8bfb\u53d6ptr\u6307\u5411\u7684\u5bf9\u8c61\n}\n\nvoid modifyUnique(std::unique_ptr&lt;MyClass&gt; ptr) {\n    // \u4fee\u6539ptr\u6307\u5411\u7684\u5bf9\u8c61\n}\n</code></pre> <ul> <li>\u4f20\u9012\u5e38\u91cf\u5f15\u7528 (<code>const std::shared_ptr&lt;T&gt;&amp;</code>)\uff1a\u5f53\u4f60\u4e0d\u9700\u8981\u4fee\u6539\u6307\u9488\u4f46\u53c8\u4e0d\u60f3\u62f7\u8d1d\uff08\u907f\u514d\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff09\u65f6\uff0c\u9002\u7528\u4e8e\u53ea\u8bfb\u8bbf\u95ee\u3002</li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_4","title":"\u4f5c\u4e3a\u8fd4\u56de\u503c","text":"<ul> <li>\u521b\u5efa\u65b0\u5bf9\u8c61\uff1a\u4f7f\u7528 <code>std::make_unique</code> \u6216 <code>std::make_shared</code> \u5728\u51fd\u6570\u5185\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a\u667a\u80fd\u6307\u9488\u3002</li> </ul> <p><pre><code>std::unique_ptr&lt;MyClass&gt; createMyClassUnique() {\n    return std::make_unique&lt;MyClass&gt;();\n}\n\nstd::shared_ptr&lt;MyClass&gt; createMyClassShared() {\n    return std::make_shared&lt;MyClass&gt;();\n}\n</code></pre> - \u4f20\u9012\u6240\u6709\u6743\uff1a\u5bf9\u4e8e <code>std::unique_ptr</code>\uff0c\u5f53\u4f60\u60f3\u5c06\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u6743\u4ece\u4e00\u4e2a\u51fd\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u65f6\u3002</p> <ul> <li>\u5171\u4eab\u6240\u6709\u6743\uff1a\u5bf9\u4e8e <code>std::shared_ptr</code>\uff0c\u5f53\u591a\u4e2a\u6240\u6709\u8005\u9700\u8981\u5171\u4eab\u5bf9\u540c\u4e00\u5bf9\u8c61\u7684\u8bbf\u95ee\u65f6\u3002</li> </ul>"},{"location":"C%2B%2B/C%2B%2B%E6%A8%A1%E6%9D%BF%E7%BC%96%E7%A8%8B/","title":"C++\u6a21\u677f\u7f16\u7a0b","text":""},{"location":"C%2B%2B/C%2B%2B%E6%A8%A1%E6%9D%BF%E7%BC%96%E7%A8%8B/#1-c","title":"1. C++\u4e2d\u5982\u679c\u5b58\u5728\u540c\u540d\u51fd\u6570\u7684\u666e\u901a\u51fd\u6570\uff0c\u6a21\u677f\u5177\u4f53\u5316\u51fd\u6570\uff0c\u6a21\u677f\u51fd\u6570\u3002\u90a3\u4e48\u8c03\u7528\u7684\u4f18\u5148\u7ea7\u662f\u666e\u901a\u51fd\u6570&gt;\u6a21\u677f\u5177\u4f53\u5316\u51fd\u6570&gt;\u6a21\u677f\u51fd\u6570\u3002","text":""},{"location":"C%2B%2B/C%2B%2B%E6%A8%A1%E6%9D%BF%E7%BC%96%E7%A8%8B/#2","title":"2. \u6a21\u677f\u5177\u4f53\u5316\u51fd\u6570\u548c\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u662f\u6709\u5b9e\u4f53\u7684\uff0c\u53ef\u4ee5\u5934\u6587\u4ef6\u58f0\u660e\uff0c\u6e90\u6587\u4ef6\u5b9a\u4e49\u3002\u800c\u6a21\u677f\u51fd\u6570\u6ca1\u6709\u5b9e\u4f53\uff0c\u6240\u4ee5\u4e0d\u80fd\u5206\u6587\u4ef6\u7f16\u5199\uff0c\u53ea\u80fd\u5728\u5934\u6587\u4ef6\u4e2d\u5206\u522b\u58f0\u660e\u548c\u5b9a\u4e49\u3002","text":""},{"location":"C%2B%2B/C%2B%2B%E6%A8%A1%E6%9D%BF%E7%BC%96%E7%A8%8B/#3-decltypefuncauto-funcc14","title":"3. decltype\uff08func\uff08\uff09\uff09\u62ec\u53f7\u5185\u5982\u679c\u662f\u51fd\u6570\uff0c\u5e76\u4e0d\u4f1a\u8c03\u7528\u51fd\u6570\uff0c\u53ea\u4f1a\u63a8\u5bfc\u51fa\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3002\u800cauto = func\uff08\uff09\uff0c\u4f1a\u8c03\u7528\u51fd\u6570\u4f53\u3002\u6ce8\u610f\uff1a\u51fd\u6570\u540e\u7f6e\u8fd4\u56de\u7c7b\u578b\u5728C++14\u4e4b\u540e\u5c31\u6ca1\u4ec0\u4e48\u610f\u4e49\u4e86\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528","text":""},{"location":"C%2B%2B/C%2B%2B%E6%A8%A1%E6%9D%BF%E7%BC%96%E7%A8%8B/#4","title":"4. \u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u9690\u5f0f\u7684\u63a8\u5bfc\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u51fd\u6570\u6a21\u677f\u521b\u5efa\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528&lt;&gt;\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u3002\u4f46\u662f\u7c7b\u6a21\u677f\u4e0d\u884c\uff0c\u7c7b\u6a21\u677f\u5fc5\u987b\u7528&lt;&gt;\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u3002","text":""},{"location":"C%2B%2B/C%2B%2B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E9%9D%A2%E9%87%8F/","title":"C++\u81ea\u5b9a\u4e49\u5b57\u9762\u91cf","text":""},{"location":"C%2B%2B/C%2B%2B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E9%9D%A2%E9%87%8F/#1-c","title":"1. c++\u4e2d\u7684\u5b57\u9762\u91cf","text":"<p>\u5728C++11\u4e4b\u524d\uff0c\u5b57\u9762\u91cf\u662f\u4e0d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u53ea\u6709\u7cfb\u7edf\u89c4\u5b9a\u7684\u4e00\u4e9b\u5b57\u9762\u91cf\uff0c\u5305\u62ec\uff1a - \u6574\u6570\u5b57\u9762\u91cf\uff08u\u6216l\u6216\u4e0d\u52a0\uff09\u59821 2  3u  454545l - \u6d6e\u70b9\u6570\u5b57\u9762\u91cf\uff08f\u6216\u4e0d\u52a0\uff09 \u59821.23 - \u5e03\u5c14\u5b57\u9762\u91cf \u5982true - \u5b57\u7b26\u5b57\u9762\u91cf\uff1a\u5355\u5f15\u53f7\uff0c\u901a\u5e38\u5b57\u7b26\u5b57\u9762\u91cf\uff0c\u4f8b\u5982'a'  '\\n' \u3001UTF-8 \u5b57\u7b26\u5b57\u9762\u91cf\uff0c\u4f8b\u5982\u00a0u8'a'\uff0cUTF-16 \u5b57\u7b26\u5b57\u9762\u91cf\uff0c\u4f8b\u5982\u00a0u'\u732b' - \u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff1a\u53cc\u5f15\u53f7\uff0c\u5982\"hello\"\uff0c\u5176\u662fconst char[6]\uff0c\u5e76\u4fdd\u6709\u5b57\u7b26\u00a0'H'\u3001'e'\u3001'l'\u3001'l'\u3001'o'\u00a0\u53ca\u00a0'\\0'\u3002 - \u7a7a\u6307\u9488\u5b57\u9762\u91cf\uff1anullptr\uff08C++11\uff09</p>"},{"location":"C%2B%2B/C%2B%2B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E9%9D%A2%E9%87%8F/#2","title":"2.\u7528\u6237\u81ea\u5b9a\u4e49\u5b57\u9762\u91cf","text":"<p>\u5728c++11\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u9762\u91cf\uff1a - \u7528\u6237\u5b9a\u4e49\u6574\u6570\u5b57\u9762\u91cf\uff0c\u4f8b\u5982\u00a012_km</p> <ul> <li> <p>\u7528\u6237\u5b9a\u4e49\u6d6e\u70b9\u5b57\u9762\u91cf\uff0c\u4f8b\u5982\u00a00.5_Pa</p> </li> <li> <p>\u7528\u6237\u5b9a\u4e49\u5b57\u7b26\u5b57\u9762\u91cf\uff0c\u4f8b\u5982\u00a0'c'_X</p> </li> <li> <p>\u7528\u6237\u5b9a\u4e49\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u4f8b\u5982\u00a0\"abd\"_L\u00a0\u6216\u00a0u\"xyz\"_M</p> </li> </ul> <pre><code>long double operator \"\"_w(long double);\n[std::string](http://zh.cppreference.com/w/cpp/string/basic_string) operator \"\"_w(const char16_t*, size_t);\nunsigned    operator \"\"_w(const char*);\n\u00a0\nint main()\n{\n    1.2_w;    // \u8c03\u7528 operator \"\"_w(1.2L)\n    u\"one\"_w; // \u8c03\u7528 operator \"\"_w(u\"one\", 3)\n    12_w;     // \u8c03\u7528 operator \"\"_w(\"12\")\n    \"two\"_w;  // \u9519\u8bef\uff1a\u6ca1\u6709\u9002\u7528\u7684\u5b57\u9762\u91cf\u8fd0\u7b97\u7b26\n}\n</code></pre>"},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/","title":"Casadi\u914d\u7f6e\u5404\u79cd\u6c42\u89e3\u5668\uff08ipopt\u3001osqp\u3001qpoases\uff09","text":""},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#1casadi","title":"1.casadi\u7684\u6e90\u7801\u5b89\u88c5","text":"<pre><code>sudo apt install gcc g++ gfortran git cmake liblapack-dev pkg-config --install-recommends\nsudo apt install ipython3 python3-dev python3-numpy python3-scipy python3-matplotlib --install-recommends\nsudo apt install swig --install-recommends\ngit clone https://github.com/casadi/casadi.git -b main casadi\n</code></pre>"},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#2","title":"2.\u5e93\u7684\u5b89\u88c5","text":""},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#ipopt","title":"ipopt\u7684\u5b89\u88c5","text":"<pre><code>sudo apt install coinor-libipopt-dev\n</code></pre>"},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#osqp060casadi06","title":"osqp\u7684\u5b89\u88c5(0.6.0\u7248\u672c,casadi\u53ea\u652f\u63010.6)","text":"<pre><code>git clone https://github.com/osqp/osqp.git\ncd osqp\ngit submodule\u00a0update --init\u00a0--recursive\ngit checkout -b 0.6.0 v0.6.0\nmkdir build &amp;&amp; cd build\ncmake ..\nmake -j7\nsudo make install\n</code></pre>"},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#qpoases","title":"qpoases\u5b89\u88c5","text":"<pre><code>git clone https://github.com/coin-or/qpOASES.git\ncd qpOASES\ngit submodule\u00a0update --init\u00a0--recursive\nmkdir build &amp;&amp; cd build\ncmake ..\nmake -j7\nsudo make install\n</code></pre>"},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#3-casadi","title":"3 casadi\u7f16\u8bd1","text":"<pre><code>//casadi/build\u76ee\u5f55\u4e0b\ncmake -DWITH_OSQP=ON -DWITH_LAPACK=ON -DWITH_QPOASES=ON -DWITH_IPOPT=ON ..\nmake -j7\nsudo make install\n</code></pre>"},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#qpoases_1","title":"qpoases","text":""},{"location":"C%2B%2B/Casadi%E9%85%8D%E7%BD%AE%E5%90%84%E7%A7%8D%E6%B1%82%E8%A7%A3%E5%99%A8%EF%BC%88ipopt%E3%80%81osqp%E3%80%81qpoases%EF%BC%89/#4demo-nlpqp","title":"4.demo \u4ee3\u7801\uff08nlp\u3001qp\uff09","text":"<pre><code># \u58f0\u660e\u8981\u6c42\u7684 cmake \u6700\u4f4e\u7248\u672c\ncmake_minimum_required(VERSION 3.0)\nset(CMAKE_CXX_STANDARD 11)\nproject(TEST)\n\n# \u6dfb\u52a0\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\nadd_executable(test qp.cpp)\n# \u6dfb\u52a0\u76f8\u5173\u5e93\u6587\u4ef6\u94fe\u63a5\u5230\u5de5\u7a0b\ntarget_link_libraries(test /usr/local/lib/libcasadi.so.3.7)\n# \u8bbe\u7f6e\u8f93\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\nset_target_properties(test PROPERTIES RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin\")\n</code></pre> <p>nlp\u95ee\u9898 <pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include &lt;casadi/casadi.hpp&gt;\nusing namespace std;\nusing namespace casadi;\nint main()\n{\n\u00a0 \u00a0cout &lt;&lt; \"casadi_test\" &lt;&lt; endl;\n// This is another way to define a nonlinear solver. Opti is new\n/*\n\u00a0 * \u00a0 \u00a0min \u00a0x1*x4*(x1 + x2 + x3) + x3\n\u00a0 * \u00a0 \u00a0s.t. x1*x2*x3*x4 &gt;=25\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 x1^2 + x2^2 + x3^2 + x4^2 = 40\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 &lt;= x1, x2, x3, x4 &lt;= 5\n*/\n// \u00a0 Optimization variables\n\u00a0 SX x = SX::sym(\"x\", 4);\n\u00a0 std::cout &lt;&lt; \"x:\" &lt;&lt; x &lt;&lt; std::endl;\n\u00a0 // Objective\n\u00a0 SX f = x(0)*x(3)*(x(0) + x(1) + x(2)) + x(2);\n\u00a0 // SX f = x(0) * x(0)*x(3) + x(0)*x(1)*x(3) + x(0)*x(2)*x(3)+ x(2);\n\u00a0 std::cout &lt;&lt; \"f:\" &lt;&lt; f &lt;&lt; std::endl;\n\u00a0 // Constraints\n\u00a0 // SX g = vertcat(6 * x(0) + 3 * x(1) + 2 * x(2) - p(0), p(1) * x(0) + x(1) - x(2) - 1);\n\u00a0 SX g = vertcat(x(0)*x(1)*x(2)*x(3), pow(x(0),2) + pow(x(1),2) + pow(x(2),2) + pow(x(3),2));\n\u00a0 std::cout &lt;&lt; \"g:\" &lt;&lt; g &lt;&lt; std::endl;\n\u00a0 // Initial guess and bounds for the optimization variables\n\u00a0 vector&lt;double&gt; x0 = { 0.0, 0.0, 0.0, 0.0 };\n\u00a0 vector&lt;double&gt; lbx = { 1, 1, 1, 1 };\n\u00a0 vector&lt;double&gt; ubx = {5, 5, 5, 5 };\n\u00a0 // Nonlinear bounds\n\u00a0 vector&lt;double&gt; lbg = { 25, 40 };\n\u00a0 vector&lt;double&gt; ubg = { inf, 40 };\n\u00a0 // NLP\n\u00a0 SXDict nlp = { { \"x\", x }, { \"f\", f }, { \"g\", g } };\n\u00a0 // Create NLP solver and buffers\n\u00a0 Dict opts;\n\u00a0 // opts[\"print_time\"] = false;\n\u00a0 //\u5173\u95ed\u7ed3\u679c\u6253\u5370\n\u00a0 // opts[\"ipopt.print_level\"] = 0;\n\u00a0 Function solver = nlpsol(\"solver\", \"ipopt\", nlp, opts);\n\u00a0 std::map&lt;std::string, DM&gt; arg, res;\n\u00a0 // Solve the NLP\n\u00a0 arg[\"lbx\"] = lbx;\n\u00a0 arg[\"ubx\"] = ubx;\n\u00a0 arg[\"lbg\"] = lbg;\n\u00a0 arg[\"ubg\"] = ubg;\n\u00a0 arg[\"x0\"] = x0;\n\u00a0 res = solver(arg);\n\u00a0 // Print the solution\n\u00a0 cout &lt;&lt; \"--------------------------------\" &lt;&lt; endl;\n\u00a0 // std::cout &lt;&lt; res &lt;&lt; std::endl;\n\u00a0 cout &lt;&lt; \"objective: \" &lt;&lt; res.at(\"f\") &lt;&lt; endl;\n\u00a0 cout &lt;&lt; \"solution: \" &lt;&lt; res.at(\"x\") &lt;&lt; endl;\n\u00a0 return 0;\n}\n</code></pre></p> <p>qp\u95ee\u9898 <pre><code>#include &lt;casadi/casadi.hpp&gt;\nint main() {\n\u00a0 \u00a0 // \u521b\u5efa\u95ee\u9898\u53d8\u91cf\n\u00a0 \u00a0 casadi::SX x = casadi::SX::sym(\"x\", 2); \u00a0// 2\u7ef4\u53d8\u91cfx\n\u00a0 \u00a0 casadi::SX f = x(0)*x(0)+x(1)*x(1); \u00a0// \u76ee\u6807\u51fd\u6570 f = x1^2 + x2^2\n\u00a0 \u00a0 // \u521b\u5efa\u7ea6\u675f\u6761\u4ef6\n\u00a0 \u00a0 casadi::SX g = x(0) + x(1) - 1; \u00a0// \u7ea6\u675f\u6761\u4ef6 g = x1 + x2 - 1\n\u00a0 \u00a0 // \u521b\u5efa\u95ee\u9898\u5bf9\u8c61\n\u00a0 \u00a0 casadi::SXDict qp = { { \"x\", x }, { \"f\", f }, { \"g\", g } };\n\u00a0 \u00a0 // \u521b\u5efa\u6c42\u89e3\u5668\n\u00a0 \u00a0 casadi::Dict opts;\n\u00a0 \u00a0 casadi::Function solver = casadi::qpsol(\"solver\", \"qpoases\", qp, opts);\n\u00a0 \u00a0 // \u8bbe\u7f6e\u6c42\u89e3\u5668\u53c2\u6570\n\u00a0 \u00a0 std::map&lt;std::string, casadi::DM&gt; args, res;\n\u00a0 \u00a0 args[\"lbg\"] = 0.0; \u00a0// \u7ea6\u675f\u4e0b\u754c\n\u00a0 \u00a0 args[\"ubg\"] = 0.0; \u00a0// \u7ea6\u675f\u4e0a\u754c\n\u00a0 \u00a0 // \u6c42\u89e3\u95ee\u9898\n\u00a0 \u00a0 res = solver(args);\n\u00a0 \u00a0 // \u8f93\u51fa\u7ed3\u679c\n\u00a0 \u00a0 std::cout &lt;&lt; \"Optimal solution: \" &lt;&lt; res.at(\"x\") &lt;&lt; std::endl;\n\u00a0 \u00a0 std::cout &lt;&lt; \"Optimal cost: \" &lt;&lt; res.at(\"f\") &lt;&lt; std::endl;\n\u00a0 \u00a0 return 0;\n\n}\n</code></pre></p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/","title":"STL6\u5927\u7ec4\u4ef6","text":"<p>\u5bb9\u5668\u901a\u8fc7\u7a7a\u95f4\u914d\u7f6e\u5668\u53d6\u5f97\u6570\u636e\u5b58\u50a8\u7a7a\u95f4\uff1b\u7b97\u6cd5\u5229\u7528\u8fed\u4ee3\u5668\u5411\u5bb9\u5668\u5b58\u53d6\u6570\u636e\uff1b\u4eff\u51fd\u6570\u534f\u52a9\u7b97\u6cd5\u5b8c\u6210\u4e0d\u540c\u7684\u7b56\u7565\uff1b\u9002\u914d\u5668\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u5bb9\u5668\u3001\u8fed\u4ee3\u5668\u6216\u4eff\u51fd\u6570\u7684\u63a5\u53e3\uff1b \u00a0</p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#1-container","title":"1 \u5bb9\u5668Container","text":""},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#11","title":"1.1\u987a\u5e8f\u5f0f\u5bb9\u5668","text":"<p>STL\u5bb9\u5668\u5305\u542b\u4e24\u79cd\uff1a\u5e8f\u5217\u5f0f\u5bb9\u5668\u4e3b\u8981\u6709vector\u3001list\u3001deque\uff0cforward_list\u548carray \u987a\u5e8f\uff1a\u8bbf\u95ee\u3001\u6392\u5e8f\u65b9\u4fbf\uff0c\u63d2\u5165\u5220\u9664\u4e0d\u4fbf\uff08\u5982vector\u5bb9\u5668\u5c31\u662f\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784 \u94fe\u5f0f\uff1a\u63d2\u5165\u5220\u9664\u65b9\u4fbf\uff0c\u5b58\u53d6\u4e0d\u4fbf\uff08\u5982 list \u5b58\u50a8\u7ed3\u6784\uff09 \u6df7\u5408 :\u8bbf\u95ee\u65b9\u4fbf\uff0c\u5728\u4e24\u7aef\u63d2\u5165\u548c\u5220\u9664\u65b9\u4fbf\uff0c\u5728\u4e2d\u95f4\u4e0d\u4fbf\uff08\u5982 deque\uff09\u3002 1\u3001list \u5bb9\u5668\u7684\u6027\u8d28 list\u5bb9\u5668\u8868\u793a\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u5141\u8bb8\u5411\u524d\u6216\u5411\u540e\u9010\u4e2a\u904d\u5386\u5143\u7d20\u3002\u5728\u4efb\u4f55\u4f4d\u7f6e\u90fd\u53ef\u9ad8\u6548\u5730insert\u6216erase\u4e00\u4e2a\u5143\u7d20\u3002\u63d2\u5165\u6216\u5220\u9664list\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u4e0d\u9700\u8981\u79fb\u52a8\u4efb\u4f55\u5176\u4ed6\u5143\u7d20\u3002</p> <p>list\u5bb9\u5668\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u8bbf\u95ee\u67d0\u4e2a\u5143\u7d20\u8981\u6c42\u904d\u5386\u6240\u6d89\u53ca\u7684\u5176\u4ed6\u5143\u7d20</p> <p>2\u3001vector \u5bb9\u5668\u7684\u6027\u8d28 \u5bf9\u4e8evector\u5bb9\u5668\uff0c\u56e0\u4e3avector\u5bb9\u5668\u662f\u6309\u987a\u5e8f\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u9664\u4e86\u5bb9\u5668\u5c3e\u90e8\u5916\uff0c\u5176\u4ed6\u4efb\u4f55\u4f4d\u7f6e\u4e0a\u7684\u63d2\u5165\uff08\u5220\u9664\uff09\u64cd\u4f5c\u90fd\u8981\u6c42\u79fb\u52a8\u88ab\u63d2\u5165\uff08\u6216\u5220\u9664\uff09\u5143\u7d20\u53f3\u8fb9\u6240\u6709\u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u62e5\u670950\u4e2a\u5143\u7d20\u7684vector\u5bb9\u5668\uff0c\u6211\u4eec\u5e0c\u671b\u5220\u9664\u5176\u4e2d\u7684\u7b2c23\u53f7\u5143\u7d20\uff0c\u521923\u53f7\u5143\u7d20\u540e\u9762\u7684\u6240\u6709\u5143\u7d20\u90fd\u5fc5\u987b\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5426\u5219\uff0cvector\u5bb9\u5668\u4e0a\u5c06\u4f1a\u7559\u4e0b\u4e00\u4e2a\u7a7a\u4f4d\uff08hole\uff09,\u800cvector\u5bb9\u5668\u7684\u5143\u7d20\u5c31\u4e0d\u518d\u662f\u8fde\u7eed\u5b58\u653e\u7684\u4e86\u3002</p> <p>3\u3001deque \u5bb9\u5668\u7684\u6027\u8d28\u2014-\u4e24\u7aef\u5bb9\u6613\uff0c\u4e2d\u95f4\u96be deque\u5bb9\u5668\u62e5\u6709\u66f4\u52a0\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u3002\u4ecedeque\u961f\u5217\u7684\u4e24\u7aef\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u90fd\u975e\u5e38\u5feb\u3002\u5728\u5bb9\u5668\u4e2d\u95f4\u63d2\u5165\u6216\u5220\u9664\u4ed8\u51fa\u5f88\u5927\u4ee3\u4ef7\u3002deque\u5bb9\u5668\u5177\u6709list\u548cvector\u7684\u4e00\u4e9b\u6027\u8d28\uff1a</p> <p>\u4e0evector\u4e00\u6837\uff0c\u5728deque\u5bb9\u5668\u7684\u4e2d\u95f4insert\u6216erase\u6548\u7387\u6bd4\u8f83\u4f4e</p> <p>\u4e0d\u540c\u4e8evector\u5bb9\u5668\uff0cdeque\u5bb9\u5668\u63d0\u4f9b\u9ad8\u6548\u5730\u5728\u5176\u9996\u90e8\u5b9e\u73b0insert\u548cerase\u64cd\u4f5c\uff0c\u5c31\u50cf\u5728\u5bb9\u5668\u5c3e\u90e8\u4e00\u6837\u3002</p> <p>\u4e0e vector\u5bb9\u5668\u4e00\u6837\uff0c\u4e0d\u540c\u4e8elist\u7684\u662f\uff0cdeque\u5bb9\u5668\u652f\u6301\u5bf9\u6240\u6709\u5143\u7d20\u7684\u968f\u673a\u8bbf\u95ee\uff1b</p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#12","title":"1.2 \u5173\u8054\u5f0f\u5bb9\u5668","text":"<p>\u5173\u8054\u5f0f\u5bb9\u5668\u4e3b\u8981\u6709\uff1aset\u3001map\u3001multiset\u3001multimap\u3001unordered_set\u3001unordered_map\u3001unordered_multiset\u3001unordered_multiamp \u5bb9\u5668\u4e3b\u8981\u662f\u7528\u6765\u5b58\u653e\u6570\u636e\u7684\uff0c\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u6765\u770b\u5bb9\u5668\u662f\u4e00\u79cdclass template\uff08\u7c7b\u6a21\u677f\uff09\u3002</p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#2-adapter","title":"2 \u9002\u914d\u5668Adapter","text":"<p>\u9002\u914d\u5668\uff0c \u5728STL\u4e2d\u626e\u6f14\u7740\u8f6c\u6362\u5668\u7684\u89d2\u8272\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7528\u4e8e\u5c06\u4e00\u79cd\u63a5\u53e3\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u63a5\u53e3\uff0c\u4ece\u800c\u662f\u539f\u672c\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3\u80fd\u591f\u5f88\u597d\u5730\u4e00\u8d77\u8fd0\u4f5c\u3002 \u6839\u636e\u76ee\u6807\u63a5\u53e3\u7684\u7c7b\u578b\uff0c\u9002\u914d\u5668\u53ef\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <p>\uff081\uff09 \u6539\u53d8\u5bb9\u5668\u7684\u63a5\u53e3\uff0c\u79f0\u4e3a\u5bb9\u5668\u9002\u914d\u5668\uff1b \u3000\u3000\uff082\uff09\u6539\u53d8\u8fed\u4ee3\u5668\u7684\u63a5\u53e3\uff0c\u79f0\u4e3a\u8fed\u4ee3\u5668\u9002\u914d\u5668\uff1b \u3000\u3000\uff083\uff09\u6539\u53d8\u4eff\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u79f0\u4e3a\u4eff\u51fd\u6570\u9002\u914d\u5668\u3002 \u3000</p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#21","title":"2.1 \u5bb9\u5668\u9002\u914d\u5668","text":"<p>\u5bb9\u5668\u7684\u9002\u914d\u5668\u6709stack\u3001queue\u3001priority_queue\uff0c\u662f\u5728\u5bb9\u5668deque\u7684\u57fa\u7840\u8fdb\u884c\u4e86\u4e00\u4e9b\u7279\u5b9a\u7684\u7ea6\u675f\uff0c\u56e0\u800c\u672c\u8d28\u4e0a\u5e76\u4e0d\u5c5e\u4e8e\u5bb9\u5668\uff0c\u800c\u662f\u5bb9\u5668\u7684\u9002\u914d\u5668\u3002 1. stack\\\uff1a\u662f\u4e00\u4e2a\u5c01\u88c5\u4e86 deque\\ \u5bb9\u5668\u7684\u9002\u914d\u5668\u7c7b\u6a21\u677f\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7684\u662f\u4e00\u4e2a\u540e\u5165\u5148\u51fa\uff08Last-In-First-Out\uff0cLIFO\uff09\u7684\u538b\u5165\u6808\u3002stack\\ \u6a21\u677f\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 stack \u4e2d\u3002 2. queue\\\uff1a\u662f\u4e00\u4e2a\u5c01\u88c5\u4e86 deque\\ \u5bb9\u5668\u7684\u9002\u914d\u5668\u7c7b\u6a21\u677f\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7684\u662f\u4e00\u4e2a\u5148\u5165\u5148\u51fa\uff08First-In-First-Out\uff0cFIFO\uff09\u7684\u961f\u5217\u3002\u53ef\u4ee5\u4e3a\u5b83\u6307\u5b9a\u4e00\u4e2a\u7b26\u5408\u786e\u5b9a\u6761\u4ef6\u7684\u57fa\u7840\u5bb9\u5668\u3002queue\\ \u6a21\u677f\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 queue \u4e2d\u3002 <p>queue\u548cdeque\u7684\u533a\u522b\uff1a queue\u53ef\u4ee5\u8bbf\u95ee\u4e24\u7aef\u4f46\u662f\u53ea\u80fd\u4fee\u6539\u961f\u5934\u800cdeque\u53ef\u4ee5\u8bbf\u95ee\u4e24\u7aef\u5e76\u4e14\u53ef\u4ee5\u5728\u961f\u9996\u548c\u961f\u5c3e\u5220\u9664\u548c\u63d2\u5165\u5143\u7d20</p> <pre><code>deque\u662f\u53cc\u7aef\u961f\u5217\uff08\u53ef\u4ee5\u5728\u961f\u5934\u961f\u5c3e\u8fdb\u884c\u5165\u961f\u51fa\u961f\u64cd\u4f5c\uff09\uff0c\u6709push_back\u3001push_front\u3001pop_back\u3001pop_front\nqueue\u662f\u5355\u7aef\u961f\u5217\uff0c\u53ea\u80fd\u961f\u5c3e\u63d2\u5165\uff0c\u961f\u9996\u5f39\u51fa\uff0c\u53ea\u6709push\u548cpop\n</code></pre> <ol> <li>priority_queue\\\uff1a\u662f\u4e00\u4e2a\u5c01\u88c5\u4e86 vector\\ \u5bb9\u5668\u7684\u9002\u914d\u5668\u7c7b\u6a21\u677f\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7684\u662f\u4e00\u4e2a\u4f1a\u5bf9\u5143\u7d20\u6392\u5e8f\uff0c\u4ece\u800c\u4fdd\u8bc1\u6700\u5927\u5143\u7d20\u603b\u5728\u961f\u5217\u6700\u524d\u9762\u7684\u961f\u5217\u3002priority_queue\\ \u6a21\u677f\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 queue \u4e2d\u3002 <p> </p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#22","title":"2.2\u51fd\u6570\u5bf9\u8c61\u9002\u914d\u5668","text":"<ol> <li>\u7ed1\u5b9a\u5668(binder)\uff1a\u7ed9\u4e8c\u5143\u51fd\u6570\u5bf9\u8c61\u7ed1\u5b9a\u4e00\u4e2a\u5e38\u91cf\uff0c\u8f6c\u5316\u6210\u4e00\u5143\u51fd\u6570\u5bf9\u8c61\u3002\u5305\u62ec<code>bind1st</code>\u548c<code>bind2nd</code>\u3002</li> <li>\u53d6\u53cd\u5668(negator)\uff1a\u5c06\u8c13\u8bcd\u51fd\u6570\u5bf9\u8c61\u7ed3\u679c\u53d6\u53cd\u3002\u5305\u62ec<code>not1</code>\u548c<code>not2</code></li> </ol>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#23","title":"2.3\u8fed\u4ee3\u5668\u9002\u914d\u5668","text":"<p>C++ STL \u6807\u51c6\u5e93\u4e2d\u8fed\u4ee3\u5668\u5927\u81f4\u5206\u4e3a 5 \u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f\u8f93\u5165\u8fed\u4ee3\u5668\u3001\u8f93\u51fa\u8fed\u4ee3\u5668\u3001\u524d\u5411\u8fed\u4ee3\u5668\u3001\u53cc\u5411\u8fed\u4ee3\u5668\u4ee5\u53ca\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9 5 \u79cd\u8fed\u4ee3\u5668\u662f STL \u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u6700\u57fa\u7840\u7684\u8fed\u4ee3\u5668\uff0c\u5f88\u591a\u573a\u666f\u4e2d\u904d\u5386\u5bb9\u5668\u7684\u9700\u6c42\uff0c\u5b83\u4eec\u5e76\u4e0d\u9002\u5408\u3002 \u6240\u8c13\u8fed\u4ee3\u5668\u9002\u914d\u5668\uff0c\u5176\u672c\u8d28\u4e5f\u662f\u4e00\u4e2a\u6a21\u677f\u7c7b\uff0c\u6bd4\u8f83\u7279\u6b8a\u7684\u662f\uff0c\u8be5\u6a21\u677f\u7c7b\u662f\u501f\u52a9\u4ee5\u4e0a 5 \u79cd\u57fa\u7840\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fed\u4ee3\u5668\u9002\u914d\u5668\u6a21\u677f\u7c7b\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u662f\u901a\u8fc7\u5bf9\u4ee5\u4e0a 5 \u79cd\u57fa\u7840\u8fed\u4ee3\u5668\u62e5\u6709\u7684\u6210\u5458\u65b9\u6cd5\u8fdb\u884c\u6574\u5408\u3001\u4fee\u6539\uff0c\u751a\u81f3\u4e3a\u4e86\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u8fd8\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u65b0\u7684\u6210\u5458\u65b9\u6cd5\u3002\u7531\u6b64\uff0c\u5c06\u57fa\u7840\u8fed\u4ee3\u5668\u201c\u6539\u5934\u6362\u9762\u201d\uff0c\u5c31\u53d8\u6210\u4e86\u672c\u8282\u8981\u8bb2\u7684\u8fed\u4ee3\u5668\u9002\u914d\u5668\u3002 \u672c\u8d28\u4e0a\u8bb2\uff0c\u8fed\u4ee3\u5668\u9002\u914d\u5668\u4ecd\u5c5e\u4e8e\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u57fa\u7840\u8fed\u4ee3\u5668\u7684\u201c\u7ffb\u65b0\u7248\u201d\u6216\u8005\u201c\u5347\u7ea7\u7248\u201d\u3002\u540c\u65f6\uff0c\u201cxxx \u8fed\u4ee3\u5668\u9002\u914d\u5668\u201d\u901a\u5e38\u76f4\u63a5\u79f0\u4e3a\u201cxxx \u8fed\u4ee3\u5668\u201d\u3002</p> <p></p> <p> \u975e\u9002\u914d\u5668\u7248\u672c</p> <p> \u9002\u914d\u5668\u7248\u672c</p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#3-algorithm","title":"3 \u7b97\u6cd5Algorithm","text":"<p>\u4e00\u822c\u5206\u4e3a\u4e09\u7c7b\uff0c\u67e5\u627e\u3001\u6392\u5e8f\u548c\u6570\u503c\u64cd\u4f5c\u3002 \u67e5\u627e\u5e38\u7528\u7684\u6709<code>std::find</code>\u3001<code>std::find_if</code>\u3001<code>std::find_first_of</code>\u7b49\u3002 \u6392\u5e8f\u4e3b\u8981\u7528<code>std::sort</code>\u53ca\u5176\u5bb6\u65cf\u7684\u4e00\u7cfb\u5217\u7b97\u6cd5\u3002 \u6570\u503c\u64cd\u4f5c\u4e3b\u8981\u7528<code>std::accumulate</code>\u6c42\u548c\u3002</p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#4iterator","title":"4\u8fed\u4ee3\u5668Iterator","text":"<p>STL\u4e2d\u8fed\u4ee3\u5668\u4e3b\u8981\u7528\u6765\u628a\u5bb9\u5668\u548c\u7b97\u6cd5\u7ed3\u5408\u8d77\u6765\uff0c\u626e\u6f14\u5bb9\u5668\u4e0e\u7b97\u6cd5\u4e4b\u95f4\u7684\u80f6\u5408\u5242\uff0c\u662f\u6240\u8c13\u7684\u201c\u6cdb\u578b\u6307\u9488\u201d\u3002\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u770b\u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u5c06operator\u3001operator-&gt;\u3001operator++\u3001operator--\u7b49\u6307\u9488\u64cd\u4f5c\u91cd\u8f7d\u7684class template\uff08\u7c7b\u6a21\u677f\uff09\u3002\u6240\u6709\u7684STL\u5bb9\u5668\u90fd\u6709\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u53ea\u6709\u5bb9\u5668\u672c\u8eab\u624d\u77e5\u9053\u5982\u4f55\u904d\u5386\u81ea\u8eab\u7684\u5143\u7d20*\u3002 \u6309\u529f\u80fd\u5f3a\u5f31\uff0c\u8fed\u4ee3\u5668\u53ef\u4ee5\u5206\u4e3a\u8f93\u5165\u3001\u8f93\u51fa\u3001\u6b63\u5411\u3001\u53cc\u5411\u3001\u968f\u673a\u8bbf\u95ee\u4e94\u79cd</p> <p>1) \u6b63\u5411\u8fed\u4ee3\u5668\u3002\u5047\u8bbe p \u662f\u4e00\u4e2a\u6b63\u5411\u8fed\u4ee3\u5668\uff0c\u5219 p \u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a++p\uff0cp++\uff0c*p\u3002\u6b64\u5916\uff0c\u4e24\u4e2a\u6b63\u5411\u8fed\u4ee3\u5668\u53ef\u4ee5\u4e92\u76f8\u8d4b\u503c\uff0c\u8fd8\u53ef\u4ee5\u7528<code>`\u548c</code>!=`\u8fd0\u7b97\u7b26\u8fdb\u884c\u6bd4\u8f83\u3002  </p> <p>2) \u53cc\u5411\u8fed\u4ee3\u5668\u3002\u53cc\u5411\u8fed\u4ee3\u5668\u5177\u6709\u6b63\u5411\u8fed\u4ee3\u5668\u7684\u5168\u90e8\u529f\u80fd\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u82e5 p \u662f\u4e00\u4e2a\u53cc\u5411\u8fed\u4ee3\u5668\uff0c\u5219<code>--p</code>\u548c<code>p--</code>\u90fd\u662f\u6709\u5b9a\u4e49\u7684\u3002<code>--p</code>\u4f7f\u5f97 p \u671d\u548c<code>++p</code>\u76f8\u53cd\u7684\u65b9\u5411\u79fb\u52a8\u3002  \u53cc\u5411\u8fed\u4ee3\u5668\u4e0d\u652f\u6301&lt; &gt;\u6bd4\u8f83</p> <p>3) \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u5177\u6709\u53cc\u5411\u8fed\u4ee3\u5668\u7684\u5168\u90e8\u529f\u80fd\u3002\u82e5 p \u662f\u4e00\u4e2a\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0ci \u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u6216\u5e38\u91cf\uff0c\u5219 p \u8fd8\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6b64\u5916\uff0c\u4e24\u4e2a\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668 p1\u3001p2 \u8fd8\u53ef\u4ee5\u7528 &lt;\u3001&gt;\u3001&lt;=\u3001&gt;= \u8fd0\u7b97\u7b26\u8fdb\u884c\u6bd4\u8f83\u3002<code>p1&lt;p2</code>\u7684\u542b\u4e49\u662f\uff1ap1 \u7ecf\u8fc7\u82e5\u5e72\u6b21\uff08\u81f3\u5c11\u4e00\u6b21\uff09<code>++</code>\u64cd\u4f5c\u540e\uff0c\u5c31\u4f1a\u7b49\u4e8e p2\u3002\u5176\u4ed6\u6bd4\u8f83\u65b9\u5f0f\u7684\u542b\u4e49\u4e0e\u6b64\u7c7b\u4f3c\u3002</p> <ul> <li>p+=i\uff1a\u4f7f\u5f97 p \u5f80\u540e\u79fb\u52a8 i \u4e2a\u5143\u7d20\u3002</li> <li>p-=i\uff1a\u4f7f\u5f97 p \u5f80\u524d\u79fb\u52a8 i \u4e2a\u5143\u7d20\u3002</li> <li>p+i\uff1a\u8fd4\u56de p \u540e\u9762\u7b2c i \u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li>p-i\uff1a\u8fd4\u56de p \u524d\u9762\u7b2c i \u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li>p[i]\uff1a\u8fd4\u56de p \u540e\u9762\u7b2c i \u4e2a\u5143\u7d20\u7684\u5f15\u7528\u3002</li> </ul> <p></p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#5-functor","title":"5 \u4eff\u51fd\u6570functor","text":"<p>\u4eff\u51fd\u6570\u662f\u4e00\u79cd\u884c\u4e3a\u7c7b\u4f3c\u51fd\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u662f\u91cd\u8f7d\u4e86operator()\u7684class\u6216class template\uff08\u7c7b\u6a21\u677f\uff09\uff0c\u4e00\u822c\u51fd\u6570\u6307\u9488\u53ef\u89c6\u4e3a\u72ed\u4e49\u7684\u4eff\u51fd\u6570\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nclass A{\npublic:\n      int operator()(int x, int y){\n          return x+y;\n      }\n};\n\nint main(){ \n    A *a = new A();\n    cout&lt;&lt;(*a)(3,4)&lt;&lt;endl;\n\n    getchar();\n    return 0;\n}\n/*\n\u8f93\u51fa\n7 \n*/\n</code></pre></p>"},{"location":"C%2B%2B/STL6%E5%A4%A7%E7%BB%84%E4%BB%B6/#6-allocator","title":"6 \u5206\u914d\u5668Allocator","text":"<p>STL\u7684\u7a7a\u95f4\u914d\u7f6e\u5668\u4e3b\u8981\u7528\u6765\u7ed9\u5bb9\u5668\u8fdb\u884c\u7a7a\u95f4\u7684\u914d\u7f6e\u4e0e\u7ba1\u7406\uff0c\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u6765\u8bf4\u7a7a\u95f4\u914d\u7f6e\u5668\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u52a8\u6001\u5206\u914d\u7a7a\u95f4\u3001\u7a7a\u95f4\u7ba1\u7406\u3001\u7a7a\u95f4\u91ca\u653e\u7684class template\uff08\u7c7b\u6a21\u677f\uff09\u3002\u4e00\u822c\u5bb9\u5668\u90fd\u4f1a\u81ea\u5e26\u9ed8\u8ba4\u5206\u914d\u5668\uff0c\u5f88\u5c11\u4f1a\u81ea\u5df1\u5b9e\u73b0\u5206\u914d\u5668\u3002</p>"},{"location":"C%2B%2B/VSCODEC%2B%2B%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/","title":"VSCODEC++\u914d\u7f6e\u73af\u5883","text":"<p>\u5de5\u5177\u94fe</p> <p>1. \u4ee3\u7801\u63d0\u793a \u9009\u62e9c/c++\u800c\u4e0d\u9009\u62e9clangd\uff0c\u4e3b\u8981\u662f\u56e0\u4e3ac/c++\u63d2\u4ef6\u53ef\u4ee5\u914d\u7f6ec_cpp_properties.json\uff0c\u6765\u5305\u542b\u5934\u6587\u4ef6\u8fdb\u884c\u63d0\u793a\u3002</p> <p>clangd\u4f9d\u8d56\u4e8ecmake\u751f\u6210\u7684compile_commands.json\uff0c\u4e0d\u592a\u65b9\u4fbf\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5728\u4ee3\u7801\u91cf\u5927\u7684\u65f6\u5019clangd\u7684\u63d0\u793a\u901f\u5ea6\u5927\u4e8eC/C++\u3002\u4e14C/C++\u548cclang\u63d2\u4ef6\u4e0d\u80fd\u5171\u5b58\uff0c\u6240\u4ee5\u4e0d\u80fd\u4e0b\u8f7dclangd\u63d2\u4ef6\u3002</p> <p>clangd\u4e5f\u53ef\u4ee5\u50cfc_cpp_properties.json\u4e00\u6837\u81ea\u5df1\u914d\u7f6e\u5934\u6587\u4ef6\u8def\u5f84\u3002\u5177\u4f53\u5728seetings.json\u4e2d\u3002 </p> <p>clangd\u4e0b\u8f7d\u5730\u5740\uff1agithub\u641cclangd\uff0c\u76f4\u63a5\u4e0b\u8f7d\u3002clangd\u548cLLVM\u4e0d\u662f\u7ed1\u5b9a\u7684\uff0c\u9700\u8981\u5355\u72ec\u4e0b\u8f7d\u3002</p> <p>2.\u4ee3\u7801\u683c\u5f0f\u5316 \u8fd9\u4e2a\u6beb\u65e0\u7591\u95ee\uff0c\u9009\u62e9clang-format\uff0c\u5b89\u88c5\u8be5\u63d2\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u67e5\u627e\u201cformat\u201d\u6216\u201cclang\u201d\u6765\u914d\u7f6e\u3002\u6ce8\u610f\uff1a 2.1 \u5982\u679c\u4ee3\u7801\u63d0\u793a\u7528\u7684clangd\uff0c\u9700\u8981\u5728clang\u63d2\u4ef6\u4e2d\u9700\u8981\u914d\u7f6eclang\u7684path\uff0c\u548cclang format\u7684path\u3002 clangd\u4e0b\u8f7d\u5730\u5740\uff1agithub\u641cclangd\uff0c\u76f4\u63a5\u4e0b\u8f7d</p> <p>2.2 \u5982\u679c\u4ee3\u7801\u63d0\u793a\u7528\u7684c/c++\uff0c\u9700\u8981\u914d\u7f6e\u5982\u4e0b\u4e09\u9879\uff1a\u7b2c\u4e00\u9879\u662f\u5907\u9009\u98ce\u683c\u3002\u7b2c\u4e8c\u9879\u662f\u5b89\u88c5\u7684clang-format\u7684\u8def\u5f84\uff08\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5LLVM\uff0c\u5728bin\u6587\u4ef6\u5939\u4e0b\u6709clang-format.exe\u6587\u4ef6\uff09\u3002\u7b2c\u4e09\u9879\u662f\u662f\u5426\u4f7f\u7528.clang-format\u6587\u4ef6\u3002</p> <p>clang-format\u4e0b\u8f7d\u5730\u5740\uff1a\u548cllvm\u7ed1\u5b9a\u7684\uff0c\u9700\u8981\u4e0b\u8f7dllvm </p> <p></p> <p>3.\u7f16\u8bd1\u5668 \u9009\u62e9GCC\u800c\u4e0d\u662fclang</p>"},{"location":"C%2B%2B/backward-cpp%E7%9A%84%E4%BD%BF%E7%94%A8/","title":"Backward cpp\u7684\u4f7f\u7528","text":""},{"location":"C%2B%2B/backward-cpp%E7%9A%84%E4%BD%BF%E7%94%A8/#0","title":"0 \u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>sudo apt-get install libdw-dev\n</code></pre>"},{"location":"C%2B%2B/backward-cpp%E7%9A%84%E4%BD%BF%E7%94%A8/#1-add-subdirecttory","title":"1 \u5b98\u65b9\u4f7f\u7528\u65b9\u6cd5\uff08add subdirecttory\uff09","text":"<p>\u9700\u8981\u628a\u6574\u4e2a\u5305\u90fdclone\u4e0b\u6765</p> <pre><code>git clone https://github.com/bombela/backward-cpp.git\n</code></pre> <p>CMakeLists.txt \u8bb0\u4f4f\uff0c\u8981\u6253\u5f00debug\u6a21\u5f0f <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(test)\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\nadd_subdirectory(backward-cpp)\nset(CMAKE_BUILD_TYPE Debug)\nadd_executable(${PROJECT_NAME} main.cpp)\ntarget_link_libraries(${PROJECT_NAME} PUBLIC Backward::Interface)\n</code></pre> \u6d4b\u8bd5\u4ee3\u7801</p> <pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#define BACKWARD_HAS_DW 1\n#include \"backward.hpp\"\nnamespace backward{\n    backward::SignalHandling sh;\n}\n\nint main(){\n    char *c = \"hello world\";\n    c[1] = 'H';\n}\n</code></pre>"},{"location":"C%2B%2B/backward-cpp%E7%9A%84%E4%BD%BF%E7%94%A8/#2","title":"2 \u7b80\u6d01\u65b9\u6cd5","text":"<p>\u53ea\u9700\u8981clone hpp\u6587\u4ef6 <pre><code>wget https://raw.githubusercontent.com/bombela/backward-cpp/master/backward.hpp\n</code></pre></p> <p>CMakeLists.txt \u8bb0\u4f4f\uff0c\u8981\u6253\u5f00debug\u6a21\u5f0f <pre><code>cmake_minimum_required(VERSION 3.15)\nproject(test)\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# debug\nset(CMAKE_BUILD_TYPE Debug)\nadd_executable(${PROJECT_NAME} main.cpp)\ntarget_include_directories(${PROJECT_NAME} PRIVATE\n    backward-cpp\n)\ntarget_link_libraries(${PROJECT_NAME} PRIVATE\n    dw\n)\n</code></pre> \u6d4b\u8bd5\u4ee3\u7801</p> <pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#define BACKWARD_HAS_DW 1\n#include \"backward.hpp\"\nnamespace backward{\n    backward::SignalHandling sh;\n}\n\nint main(){\n    char *c = \"hello world\";\n    c[1] = 'H';\n}\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B%E7%BC%96%E8%AF%91%E5%99%A8gcc%20clang%20MSVC/","title":"c++\u7f16\u8bd1\u5668gcc clang MSVC","text":"<p>\u4e09\u5927\u4e3b\u6d41\u7f16\u8bd1\u5668\u4e2dclang\u662fLLVM\u7684\u4e00\u4e2a\u5b50\u9879\u76ee\uff0c\u662fLLVM\u7684\u524d\u7aef LLVM\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p>LLVM\u65e9\u671f\u7684\u524d\u7aef\u4f7f\u7528\u7684\u662fgcc\uff0c\u540e\u6765apple\u516c\u53f8\u91cd\u65b0\u4e3aC C++ Objective C\u91cd\u65b0\u8bbe\u8ba1\u4e86LLVM\u7684\u524d\u7aef\uff0c\u53d6\u540d\u4e3aclang\uff0c\u4ee3\u66ff\u6389gcc\u7684\u524d\u7aef\u3002\u4ece\u800c\u4f7fLLVM\u53d8\u6210\u4e86\u524d\u7aefclang\uff0c\u540e\u7aefLLVM\uff0c\u4e0d\u518d\u662f\u524d\u7aefgcc\uff0c\u540e\u7aefLLVM\u3002</p> <p>gcc\u7684\u524d\u7aef\u3001\u4e2d\u7aef\u3001\u540e\u7aef\u90fd\u53ebgcc\u3002</p> <p></p> <p>clang-format\u662f\u7528\u6765\u683c\u5f0f\u5316\u4ee3\u7801\u7684\uff0c\u53ef\u4ee5\u5355\u72ec\u4e0b\u8f7d clangd\u662f\u7528\u6765\u667a\u80fd\u63d0\u793a\u7684\uff0c\u548cvscode\u4e2dc/c++ \u63d2\u4ef6\u662f\u51b2\u7a81\u7684\uff0c\u4ed6\u7684\u63d0\u793a\u4f9d\u8d56\u4e8eCmake\u751f\u6210\u7684compile_commands.json</p> <p></p>"},{"location":"C%2B%2B/cmake%E4%B8%ADprivate%E5%92%8Cpublic%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"Cmake\u4e2dprivate\u548cpublic\u7684\u533a\u522b","text":"<p>target_include_directories()\uff1a\u6307\u5b9a\u76ee\u6807\u5305\u542b\u7684\u5934\u6587\u4ef6\u8def\u5f84\u3002 target_link_libraries()\uff1a\u6307\u5b9a\u76ee\u6807\u94fe\u63a5\u7684\u5e93\u3002 target_compile_options()\uff1a\u6307\u5b9a\u76ee\u6807\u7684\u7f16\u8bd1\u9009\u9879\u3002 \u76ee\u6807\u00a0\u7531\u00a0add_library()\u00a0\u6216\u00a0add_executable()\u00a0\u751f\u6210\u3002 \u8fd9\u4e09\u4e2a\u6307\u4ee4\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4ee5\u00a0target_include_directories()\u00a0\u4e3a\u4f8b\u8fdb\u884c\u8bb2\u89e3\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e0b\u4f9d\u8d56\u5173\u7cfb\uff1aa\u4f9d\u8d56b\uff0cb\u4f9d\u8d56c a&lt;-b&lt;-c \u5982\u679cb.cpp\u4e2d\u8c03\u7528\u4e86c.h\uff0c\u800cb.h\u4e2d\u4e0d\u9700\u8981\u8c03\u7528c.h\u3002\u90a3\u4e48b\u5728\u94fe\u63a5c\u65f6\u662fprivate\u7684\u3002\u6b64\u65f6a\u8c03\u7528b.h\u65f6\uff0c\u662f\u6ca1\u6709\u529e\u6cd5\u7528c\u4e2d\u7684\u51fd\u6570\u7684\u3002 \u5982\u679cb.h\u4e2d\u8c03\u7528\u4e86c.h\uff0c\u800cb.cpp\u4e2d\u4e0d\u9700\u8981\u8c03\u7528c.h\u3002\u90a3\u4e48b\u5728\u94fe\u63a5c\u65f6\u662finterface\u7684\u3002\u6b64\u65f6a\u8c03\u7528b.h\u65f6\uff0c\u662f\u53ef\u4ee5\u7528c\u4e2d\u7684\u51fd\u6570\u7684\u3002 \u5982\u679cb.h\u4e2d\u548cb.cpp\u90fd\u8c03\u7528\u4e86c.h\u3002\u90a3\u4e48b\u5728\u94fe\u63a5c\u65f6\u662fpublic\u7684\u3002\u6b64\u65f6a\u8c03\u7528b.h\u65f6\uff0c\u662f\u6ca1\u6709\u529e\u6cd5\u7528c\u4e2d\u7684\u51fd\u6570\u7684\u3002</p> <p>\u5bf9\u4e8ea\u94fe\u63a5b\uff0c\u4e00\u5b9a\u662fprivate\u7684\uff0c\u56e0\u6b64a\u662f\u8fd0\u884c\u6587\u4ef6\uff0c\u4e0d\u9700\u8981.h\u6587\u4ef6</p>"},{"location":"C%2B%2B/cmake%E4%B8%ADtarget_source/","title":"Cmake\u4e2dtarget source","text":"<p>cmake\u4e2d\u7684target_source\uff08project_name a.cpp b.cpp\uff09\uff0c\u76f8\u5f53\u4e8eadd_library\uff08project_name a.cpp b.cpp\uff09\u4e2d\u6dfb\u52a0\u6e90\u6587\u4ef6a.cpp b.cpp\u7684\u529f\u80fd\uff0c\u597d\u5904\u662f\u53ef\u4ee5\u63a7\u5236PRIVATE\u548cPUBLIC</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u5b50\u6a21\u5757\u7684\u6784\u5efa\u8fc7\u7a0b </p>"},{"location":"C%2B%2B/const%E5%92%8Cconstexpr%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"Const\u548cconstexpr\u7684\u533a\u522b","text":"<p>\u6700\u91cd\u8981\u7684\u533a\u522b\uff1a</p> <p>const\u4fee\u9970\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0c\u800cconstexpr\u4fee\u9970\u7684\u53d8\u91cf\u4e00\u5b9a\u662f\u5728\u7f16\u8bd1\u5668\u521d\u59cb\u5316</p> <p>constexpr\u662f\u540d\u526f\u5176\u5b9e\u7684\u5e38\u91cf\uff0c\u6240\u6709\u7684constexpr\u90fd\u662fconst</p> <p>const\u8868\u793a\u7684\u662fread only\u7684\u8bed\u4e49\uff0c\u8868\u793a\u8fd0\u884c\u65f6\u4e0d\u53ef\u66f4\u6539</p>"},{"location":"C%2B%2B/cpp_11/","title":"C++11 New Features and Libraries","text":""},{"location":"C%2B%2B/cpp_11/#new-features","title":"New Features","text":""},{"location":"C%2B%2B/cpp_11/#move-segmentics","title":"Move Segmentics","text":"<p>Moving an object means to transfer ownership of some resource it manage to another object.</p> <p>Benefits:</p> <ul> <li>Performance optimization: while copying a temporary object(for example, a <code>vector</code>) to a list, without <code>std::move</code> you have to copy every element in vector and store them in new place. <code>Moving</code> a vector is just copying some pointer and internal state over to the new one.</li> <li>Make it possible to have only one instance at a time: for example, <code>std::unique_ptr</code> is non-copyable, but you can use <code>move</code> to transfer an instance between scopes at the language level.</li> </ul>"},{"location":"C%2B%2B/cpp_11/#rvalue-references","title":"Rvalue References","text":"<p><code>Rvalue reference</code> is a new reference. It's a non-template type(such as <code>int</code>) and can be created with the syntax <code>T &amp;&amp;</code>. It can be binded only to rvalues.</p>"},{"location":"C%2B%2B/cpp_11/#forwarding-references","title":"Forwarding References","text":"<p><code>Forwarding reference</code> is also known as <code>universal references</code>.</p> <ul> <li>It can be created by <code>T&amp;&amp;</code> when <code>T</code> is a template type or <code>auto&amp;&amp;</code>.</li> <li>This enables <code>perfect forwarding</code>: the ability to pass arguments while maintaining their value category(e.g. lvalue stay as lvalue, temporaries are forwarded as rvalue).</li> </ul>"},{"location":"C%2B%2B/cpp_11/#variadic-templates","title":"Variadic Templates","text":"<p>The <code>...</code> syntax creates a <code>parameter pack</code> or expands one. A template <code>parameter pack</code> is a template parameter that accepts zero or more template arguments. A template with at least one parameter pack is called a <code>variadic template</code>. An exmple is as following: <pre><code>template &lt;typename... T&gt;\nstruct arity {\n  constexpr static int value = sizeof...(T);\n};\nstatic_assert(arity&lt;&gt;::value == 0);\nstatic_assert(arity&lt;char, short, int&gt;::value == 3);\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#initializer-lists","title":"Initializer Lists","text":"<p>A lightweight array-like container of elements created using a \"braced list\" syntax. For example, <code>1, 2, 3</code> creates a sequences of integars, that has type <code>std::initializer_list&lt;int&gt;</code>. Useful as a replacement to passing a vector of objects to a function. <pre><code>int sum(const std::initializer_list&lt;int&gt; &amp;list) {\n  int sum = 0;\n  for (auto &amp;e : list) {\n    sum += e;\n  }\n  return sum;\n}\n\nauto list = {1, 2, 3};\nsum(list);\nsum({1, 2, 3});\nsum({});\n</code></pre> It can also be used to initialize a vector, for example: <pre><code>const std::vector&lt;int&gt; test({1, 2, 3, 4});\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#static-assertions","title":"Static Assertions","text":"<p>Assertions that are evaluated at compile-time. Usage: <code>static_assert(condition, string)</code>. For example: <pre><code>constexpr int x = 0;\nconstexpr int y = 1;\nstatic_assert(x == y, \"x != y\");\n</code></pre> If <code>x == y</code> is true, compiler will do nothing, else the compiler will report an error, the error message is <code>x != y</code>.</p>"},{"location":"C%2B%2B/cpp_11/#auto","title":"<code>auto</code>","text":"<p><code>auto</code> typed variables are deduced by the compiler according to the type of their initializer. However, if the compiler cannot determine the type of variable, it will report an error. <pre><code>auto pi = 3.14;  // double\nauto b = 1;  // int\nauto l = 1, m = true, n = 1.6;  // error, 1 is int, m is bool\nauto o;  // error\n</code></pre></p> <p>Functions can also deduce the return type using <code>auto</code>. <pre><code>template &lt;typename X, typename Y&gt;\nauto add(X x, Y y) -&gt; decltype(x + y) {\n  return x + y;\n}\nadd(1, 2);  // int\nadd(1.0, 2);  // double\nadd(1.0, 2.0);  // double\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#lambda-expressions","title":"Lambda Expressions","text":"<p>A <code>lambda</code> is an unnamed function object capable of capturing variable in scope. It features:</p> <ul> <li>a capture list</li> <li>an optional set of parameters with an optional trailing return type</li> <li>a body</li> </ul> <p>An example of <code>capture list</code>:</p> <ul> <li><code>[]</code>: capture nothing</li> <li><code>[=]</code>: capture local objects(local variables, parameters) in scope by value</li> <li><code>[&amp;]</code>: cpature local objects(local variables, parameters) in scope by reference</li> <li><code>[this]</code>: capture <code>this</code> pointer by value</li> <li><code>[a, &amp;b]</code>: capture object <code>a</code> by value and <code>b</code> by reference</li> </ul> <pre><code>int x = 1;\n\nauto getX = [=] { return x; };\ngetX(); // == 1\n\nauto addX = [=](int y) { return x + y; };\naddX(1); // == 2\n\nauto getXRef = [&amp;]() -&gt; int&amp; { return x; };\ngetXRef(); // int&amp; to `x`\n</code></pre> <p>By default, value-captures cannot be modified inside the lambda because the complier-generated method is marked as <code>const</code>. The <code>mutable</code> keyword allows modifying captured variables. The keyword is placed after the parameter-list(which must be present even if it is empty). <pre><code>int x = 1;\n\nauto f1 = [&amp;x] { x = 2; }; // OK: x is a reference and modifies the original\n\nauto f2 = [x] { x = 2; }; // ERROR: the lambda can only perform const-operations on the captured value\n// vs.\nauto f3 = [x]() mutable { x = 2; }; // OK: the lambda can perform any operations on the captured value\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#decltype","title":"<code>decltype</code>","text":"<p><code>decltype</code> is an operator which returns the declared type of an expression passed to it. <pre><code>int a = 1; // `a` is declared as type `int`\ndecltype(a) b = a; // `decltype(a)` is `int`\nconst int&amp; c = a; // `c` is declared as type `const int&amp;`\ndecltype(c) d = a; // `decltype(c)` is `const int&amp;`\ndecltype(123) e = 123; // `decltype(123)` is `int`\nint&amp;&amp; f = 1; // `f` is declared as type `int&amp;&amp;`\ndecltype(f) g = 1; // `decltype(f) is `int&amp;&amp;`\ndecltype((a)) h = g; // `decltype((a))` is int&amp;\n\ntemplate &lt;typename X, typename Y&gt;\nauto add(X x, Y y) -&gt; decltype(x + y) {\n  return x + y;\n}\nadd(1, 2.0); // `decltype(x + y)` =&gt; `decltype(3.0)` =&gt; `double`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#type-aliases","title":"Type Aliases","text":"<p>Semantically similar to using a <code>typedef</code> but <code>using</code> of type aliases is easier to read and are compatible with templates. <pre><code>int x = 1;\n\nauto getX = [=] { return x; };\ngetX(); // == 1\n\nauto addX = [=](int y) { return x + y; };\naddX(1); // == 2\n\nauto getXRef = [&amp;]() -&gt; int&amp; { return x; };\ngetXRef(); // int&amp; to `x`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#nullptr","title":"<code>nullptr</code>","text":"<p>C++11 introduces a new null pointer to replace C's <code>NULL</code> macro. <code>nullptr</code> is of type <code>std::nullptr_t</code> and can be implicitly converted into pointer types, and unlike <code>NULL</code>, not convertible to integral types except <code>bool</code>. <pre><code>void foo(int);\nvoid foo(char*);\nfoo(NULL); // error -- ambiguous\nfoo(nullptr); // calls foo(char*)\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#strongly-typed-enums","title":"Strongly-typed Enums","text":"<p>Type-safe enums that solve a variable of problems with C-style enums:</p> <ul> <li>implicit conversions</li> <li>inability to specify the underlying type</li> <li>scope pollutions</li> </ul> <pre><code>// Specifying underlying type as `unsigned int`\nenum class Color : unsigned int { Red = 0xff0000, Green = 0xff00, Blue = 0xff };\n// `Red`/`Green` in `Alert` don't conflict with `Color`\nenum class Alert : bool { Red, Green };\nColor c = Color::Red;\n</code></pre>"},{"location":"C%2B%2B/cpp_11/#attributes","title":"Attributes","text":"<p>Attributes provide a universal syntax over <code>__attribute__(...)</code>, <code>__declspec</code>, etc <pre><code>// `noreturn` attribute indicates `f` doesn't return.\n[[ noreturn ]] void f() {\n  throw \"error\";\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#constexpr","title":"<code>constexpr</code>","text":"<p><code>constexp</code> is the expression that evaluated by the compiler at compile-time. It must be a const expression that compiler can evaluate at compile-time and can be used to indicate the variables, functions, etc. <pre><code>const int x = 123;\nconstexpr const int&amp; y = x; // error -- constexpr variable `y` must be initialized by a constant expression\n</code></pre></p> <p>The difference to <code>const</code>:</p> <ul> <li><code>const</code> variables can be initialized at run-time, but <code>constexp</code> variables must be initialized at compile-time</li> </ul>"},{"location":"C%2B%2B/cpp_11/#delegating-constructors","title":"Delegating Constructors","text":"<p>Constructors can now call other constructors in the same class using an initializer list. <pre><code>struct Foo {\n  int foo;\n  Foo(int foo) : foo{foo} {}\n  Foo() : Foo(0) {}\n};\n\nFoo foo;\nfoo.foo; // == 0\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#user-defined-literals","title":"User-defined Literals","text":"<p>User-defined literals allow you to extend the language and add your own syntax. To create a literal, define: <pre><code>T operator \"\"X(...) {}\n</code></pre> which returns a type <code>T</code> with a name <code>X</code>.</p> <p>Note that the name of this function defines the name of the literal. Any literal names not starting with an underscore are reserved an won't be invoked.</p> <p>String to integar conversion: <pre><code>// `const char*` and `std::size_t` required as parameters.\nint operator \"\" _int(const char* str, std::size_t) {\n  return std::stoi(str);\n}\n\n\"123\"_int; // == 123, with type `int`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#explicit-virtual-overrides","title":"Explicit Virtual Overrides","text":"<p>Specifies that a virtual function overrides another virtual function. If the virtual function does not override a parent's virtual function, throw a compiler error. <pre><code>struct A {\n  virtual void foo();\n  void bar();\n};\n\nstruct B : A {\n  void foo() override; // correct -- B::foo overrides A::foo\n  void bar() override; // error -- A::bar is not virtual\n  void baz() override; // error -- B::baz does not override A::baz\n};\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#final-specifier","title":"Final Specifier","text":"<p>Specifies that a virtual function cannot be overridden in a derived class or that a class cannot be inherited from. <pre><code>struct A {\n  virtual void foo();\n};\n\nstruct B : A {\n  virtual void foo() final;\n};\n\nstruct C : B {\n  virtual void foo(); // error -- declaration of 'foo' overrides a 'final' function\n};\n\nstruct A final {};\nstruct B : A {}; // error -- base 'A' is marked 'final'\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#default-functions","title":"Default Functions","text":"<p>A more elegant, efficient way to provide a default implementation of a funtion, such as a constructor. <pre><code>struct A {\n  A() = default;\n  A(int x) : x{x} {}\n  int x {1};\n};\nA a; // a.x == 1\nA a2 {123}; // a.x == 123\n\nstruct B {\n  B() : x{1} {}\n  int x;\n};\n\nstruct C : B {\n  // Calls B::B\n  C() = default;\n};\n\nC c; // c.x == 1\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#deleted-functions","title":"Deleted Functions","text":"<p>A more elegant, efficient way to provide a deleted implementation of a function. Useful for preventing copied on objects. <pre><code>class A {\n  int x;\n\npublic:\n  A(int x) : x{x} {};\n  A(const A&amp;) = delete;\n  A&amp; operator=(const A&amp;) = delete;\n};\n\nA x {123};\nA y = x; // error -- call to deleted copy constructor\ny = x; // error -- operator= deleted\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#range-based-for-loops","title":"Range-based For Loops","text":"<p>Syntactic sugar for iterating over a container's elements. <pre><code>std::array&lt;int, 5&gt; a {1, 2, 3, 4, 5};\nfor (int&amp; x : a) x *= 2;\n// a == { 2, 4, 6, 8, 10 }\nfor (int x : a) x *= 2;\n// a == { 1, 2, 3, 4, 5 }\n</code></pre> If you want to change element's value, don't forget to use reference.</p>"},{"location":"C%2B%2B/cpp_11/#special-member-function-for-move-sementics","title":"Special Member Function for Move Sementics","text":"<p>The copy constructor and copy assignment operator are called when copies are made, and with C++11's introduction of move semantics, there is now a move constructor and move assignment operator for moves. <pre><code>struct A {\n  std::string s;\n  A() : s{\"test\"} {}\n  A(const A&amp; o) : s{o.s} {}\n  A(A&amp;&amp; o) : s{std::move(o.s)} {}\n  A&amp; operator=(A&amp;&amp; o) {\n   s = std::move(o.s);\n   return *this;\n  }\n};\n\nA f(A a) {\n  return a;\n}\n\nA a1 = f(A{}); // move-constructed from rvalue temporary\nA a2 = std::move(a1); // move-constructed using std::move\nA a3 = A{};\na2 = std::move(a3); // move-assignment using std::move\na1 = f(A{}); // move-assignment from rvalue temporary\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#converting-constructors","title":"Converting Constructors","text":"<p>Converting constructors will convert values of braced list syntax into constructor arguments. <pre><code>struct A {\n  A(int) {}\n  A(int, int) {}\n  A(int, int, int) {}\n};\n\nA a {0, 0}; // calls A::A(int, int)\nA b(0, 0); // calls A::A(int, int)\nA c = {0, 0}; // calls A::A(int, int)\nA d {0, 0, 0}; // calls A::A(int, int, int)\n</code></pre></p> <p>Note that the braced list syntax does not allow narrowing: <pre><code>struct A {\n  A(int) {}\n};\n\nA a(1.1); // OK\nA b {1.1}; // Error narrowing conversion from double to int\n</code></pre></p> <p>Note that if a constructor accepts a <code>std::initializer_list</code>, it will be called instead: <pre><code>struct A {\n  A(int) {}\n  A(int, int) {}\n  A(int, int, int) {}\n  A(std::initializer_list&lt;int&gt;) {}\n};\n\nA a {0, 0}; // calls A::A(std::initializer_list&lt;int&gt;)\nA b(0, 0); // calls A::A(int, int)\nA c = {0, 0}; // calls A::A(std::initializer_list&lt;int&gt;)\nA d {0, 0, 0}; // calls A::A(std::initializer_list&lt;int&gt;)\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#explicit-convertion-functions","title":"Explicit Convertion Functions","text":"<p>Conversion functions can now be made explicit using the <code>explicit</code> specifier. <pre><code>struct A {\n  operator bool() const { return true; }\n};\n\nstruct B {\n  explicit operator bool() const { return true; }\n};\n\nA a;\nif (a); // OK calls A::operator bool()\nbool ba = a; // OK copy-initialization selects A::operator bool()\n\nB b;\nif (b); // OK calls B::operator bool()\nbool bb = b; // error copy-initialization does not consider B::operator bool()\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#inline-namespaces","title":"Inline Namespaces","text":"<p>All members of an inline namespace are treated as if they were part of its parent namespace, allowing specialization of functions and easing the process of versioning. This is a transitive property, if A contains B, which in turn contains C and both B and C are inline namespace, C's member can be used as if they were on A. <pre><code>namespace Program {\n  namespace Version1 {\n    int getVersion() { return 1; }\n    bool isFirstVersion() { return true; }\n  }\n  inline namespace Version2 {\n    int getVersion() { return 2; }\n  }\n}\n\nint version {Program::getVersion()};              // Uses getVersion() from Version2\nint oldVersion {Program::Version1::getVersion()}; // Uses getVersion() from Version1\nbool firstVersion {Program::isFirstVersion()};    // Does not compile when Version2 is added\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#non-static-data-member-initializers","title":"Non-static Data Member Initializers","text":"<p>Allows non-static members to be initialized where they are declared, potentially cleaning up constructors of default initializations. <pre><code>// Default initialization prior to C++11\nclass Human {\n    Human() : age{0} {}\n  private:\n    unsigned age;\n};\n// Default initialization on C++11\nclass Human {\n  private:\n    unsigned age {0};\n};\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#right-angle-brackets","title":"Right Angle Brackets","text":"<p>C++11 is now able to infer when a series of right angle brackets is used as an operator or as a closing statement of typedef, without having to add whitespaces. <pre><code>typedef std::map&lt;int, std::map &lt;int, std::map &lt;int, int&gt; &gt; &gt; cpp98LongTypedef;\ntypedef std::map&lt;int, std::map &lt;int, std::map &lt;int, int&gt;&gt;&gt;   cpp11LongTypedef;\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#ref-qualified-member-functions","title":"Ref-qualified Member Functions","text":"<p>Member functions can now be qualified depending on whether <code>*this</code> is an lvalue or rvalue reference. <pre><code>struct Bar {\n  // ...\n};\n\nstruct Foo {\n  Bar getBar() &amp; { return bar; }\n  Bar getBar() const&amp; { return bar; }\n  Bar getBar() &amp;&amp; { return std::move(bar); }\n  Bar getBar() const&amp;&amp; { return std::move(bar); }\nprivate:\n  Bar bar;\n};\n\nFoo foo{};\nBar bar = foo.getBar(); // calls `Bar getBar() &amp;`\n\nconst Foo foo2{};\nBar bar2 = foo2.getBar(); // calls `Bar Foo::getBar() const&amp;`\n\nFoo{}.getBar(); // calls `Bar Foo::getBar() &amp;&amp;`\nstd::move(foo).getBar(); // calls `Bar Foo::getBar() &amp;&amp;`\n\nstd::move(foo2).getBar(); // calls `Bar Foo::getBar() const&amp;&amp;`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#trailing-return-types","title":"Trailing Return Types","text":"<p>C++11 allows functions and lambdas an alternative syntax for specifying their return types. <pre><code>int f() {\n  return 123;\n}\n// vs.\nauto f() -&gt; int {\n  return 123;\n}\n\nauto g = []() -&gt; int {\n  return 123;\n};\n</code></pre></p> <p>This feature is especially useful when certain return types cannot be resolved: <pre><code>// NOTE: This does not compile!\ntemplate &lt;typename T, typename U&gt;\ndecltype(a + b) add(T a, U b) {\n    return a + b;\n}\n\n// Trailing return types allows this:\ntemplate &lt;typename T, typename U&gt;\nauto add(T a, U b) -&gt; decltype(a + b) {\n    return a + b;\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#noexcept-specifier","title":"Noexcept Specifier","text":"<p>The <code>noexcept</code> specifier specifies whether a function could throw exceptions. It is an improved version of <code>throw()</code>. <pre><code>void func1() noexcept;        // does not throw\nvoid func2() noexcept(true);  // does not throw\nvoid func3() throw();         // does not throw\n\nvoid func4() noexcept(false); // may throw\n</code></pre> Non-throwing functions are permitted to call potentially-throwing functions. Whenever an exception is thrown and the search for a handler encounters the outermost block of a non-throwing function, the function std::terminate is called. <pre><code>extern void f();  // potentially-throwing\nvoid g() noexcept {\n    f();          // valid, even if f throws\n    throw 42;     // valid, effectively a call to std::terminate\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#new-libraries","title":"New Libraries","text":""},{"location":"C%2B%2B/cpp_11/#stdmove","title":"<code>std::move</code>","text":"<p><code>std::move</code> indicates that the object passed to it may have its resources transferred. Using objects that have been moved from should be used with care, as they can be left in an unspecified state. <pre><code>std::unique_ptr&lt;int&gt; p1 {new int{0}}; // in practice, use std::make_unique\nstd::unique_ptr&lt;int&gt; p2 = p1; // error -- cannot copy unique pointers\nstd::unique_ptr&lt;int&gt; p3 = std::move(p1); // move `p1` into `p3`\n                                         // now unsafe to dereference object held by `p1`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#stdforward","title":"<code>std::forward</code>","text":"<p>Return the arguments passed to it while maintaining their value category and cv-qualifiers. Useful for generic code and factories. Used in conjunction with <code>forward reference</code> <pre><code>struct A {\n  A() = default;\n  A(const A&amp; o) { std::cout &lt;&lt; \"copied\" &lt;&lt; std::endl; }\n  A(A&amp;&amp; o) { std::cout &lt;&lt; \"moved\" &lt;&lt; std::endl; }\n};\n\ntemplate &lt;typename T&gt;\nA wrapper(T&amp;&amp; arg) {\n  return A{std::forward&lt;T&gt;(arg)};\n}\n\nwrapper(A{}); // moved\nA a;\nwrapper(a); // copied\nwrapper(std::move(a)); // moved\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#stdthread","title":"<code>std::thread</code>","text":"<p>The <code>std::thread</code> library provides a standard way to control threads, such as spawning and killing them. In the example below, multiple threads are spawned to do different calculations and then the program waits for all of them to finish. <pre><code>void foo(bool clause) { /* do something... */ }\n\nstd::vector&lt;std::thread&gt; threadsVector;\nthreadsVector.emplace_back([]() {\n  // Lambda function that will be invoked\n});\nthreadsVector.emplace_back(foo, true);  // thread will run foo(true)\nfor (auto&amp; thread : threadsVector) {\n  thread.join(); // Wait for threads to finish\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#stdto_string","title":"std::to_string","text":"<p>Converts a numeric argument to a <code>std::string</code> <pre><code>std::to_string(1.2);  // == \"1.2\"\nstd::to_string(123);  // == \"123\"\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#type-traits","title":"Type Traits","text":"<p>Type trait defines a compile-time template-based interfaces to query or modify the properties of types. <pre><code>static_assert(std::is_integral&lt;int&gt;::value);\nstatic_assert(std::is_same&lt;int, int&gt;::value);\nstatic_assert(std::is_same&lt;std::conditional&lt;true, int, double&gt;::type, int&gt;::value);\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#smart-pointers","title":"Smart Pointers","text":"<p>C++11 introduces new smart pointers: </p> <ul> <li><code>std::unique_ptr</code></li> <li><code>std::shared_ptr</code></li> <li><code>std::weak_ptr</code></li> </ul> <p><code>std::auto_ptr</code> now becomes deprecated and then eventually removed in C++17</p> <p><code>std::unique_ptr</code> is a non-copyable, movable pointer that manages its own heap-allocated memory.  Note: Prefer using the <code>std::make_X</code> helper functions as opposed to using constructors. <pre><code>std::unique_ptr&lt;Foo&gt; p1 {new Foo{}};  // `p1` owns `Foo`\nif (p1) {\n  p1-&gt;bar();\n}\n\n{\n  std::unique_ptr&lt;Foo&gt; p2 {std::move(p1)};  // Now `p2` owns `Foo`\n  f(*p2);\n\n  p1 = std::move(p2);  // Ownership returns to `p1` -- `p2` gets destroyed\n}\n\nif (p1) {\n  p1-&gt;bar();\n}\n// `Foo` instance is destroyed when `p1` goes out of scope\n</code></pre> A <code>std::shared_ptr</code> is a smart pointer that manages a resource that is shared across multiple owners. A shared pointer holds a control block which has a few components such as the managed object and a reference counter. All control block is thread-safe, however, manipulating the managed object itself is not thread-safe. <pre><code>void foo(std::shared_ptr&lt;T&gt; t) {\n  // Do something with `t`...\n}\n\nvoid bar(std::shared_ptr&lt;T&gt; t) {\n  // Do something with `t`...\n}\n\nvoid baz(std::shared_ptr&lt;T&gt; t) {\n  // Do something with `t`...\n}\n\nstd::shared_ptr&lt;T&gt; p1 {new T{}};\n// Perhaps these take place in another threads?\nfoo(p1);\nbar(p1);\nbaz(p1);\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#stdchrono","title":"<code>std::chrono</code>","text":"<p>The chrono library contains a set of utility functions and types that deal with durations, clocks, and time points. One use case of this library is benchmarking code: <pre><code>std::chrono::time_point&lt;std::chrono::steady_clock&gt; start, end;\nstart = std::chrono::steady_clock::now();\n// Some computations...\nend = std::chrono::steady_clock::now();\n\nstd::chrono::duration&lt;double&gt; elapsed_seconds = end - start;\ndouble t = elapsed_seconds.count(); // t number of seconds, represented as a `double`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#tuples","title":"Tuples","text":"<p>Tuples are a fixed-size collection of heterogeneous values. Access the elements of a <code>std::tuple</code> by unpacking using <code>std::tie</code> or <code>std::get</code>. <pre><code>// `playerProfile` has type `std::tuple&lt;int, const char*, const char*&gt;`.\nauto playerProfile = std::make_tuple(51, \"Frans Nielsen\", \"NYI\");\nstd::get&lt;0&gt;(playerProfile); // 51\nstd::get&lt;1&gt;(playerProfile); // \"Frans Nielsen\"\nstd::get&lt;2&gt;(playerProfile); // \"NYI\"\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#stdtie","title":"<code>std::tie</code>","text":"<p>Creates a tuple of lvalue references. Useful for unpacking <code>std::pair</code> and <code>std::tuple</code> objects. Use <code>std::ignore</code> as a placeholder for ignored values. In C++17, structured bindings shouhld be used instead. <pre><code>// With tuples...\nstd::string playerName;\nstd::tie(std::ignore, playerName, std::ignore) = std::make_tuple(91, \"John Tavares\", \"NYI\");\n\n// With pairs...\nstd::string yes, no;\nstd::tie(yes, no) = std::make_pair(\"yes\", \"no\");\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#stdarray","title":"<code>std::array</code>","text":"<p><code>std::array</code> is a container built on top of a C-style array. Supports common container   operations such as sorting. <pre><code>std::array&lt;int, 3&gt; a = {2, 1, 3};\nstd::sort(a.begin(), a.end()); // a == { 1, 2, 3 }\nfor (int&amp; x : a) x *= 2; // a == { 2, 4, 6 }\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#unordered-container","title":"Unordered Container","text":"<p>These containers maintain average constant-time complexity for search, insert, and remove operations. In order to achieve constant-time complexity, sacrifices order for speed by hashing elements into buckets. There are four unordered containers:</p> <ul> <li><code>unordered_set</code></li> <li><code>unordered_multiset</code></li> <li><code>unordered_map</code></li> <li><code>unordered_multimap</code></li> </ul>"},{"location":"C%2B%2B/cpp_11/#stdmake_shared","title":"<code>std::make_shared</code>","text":"<p><code>std::make_shared</code> is the recommanded way to create instance of <code>std::shared_ptr</code> due to the following reasons:</p> <ul> <li>Avoid having to use the new operator.</li> <li>Prevents code repetition when specifying the underlying type the pointer shall hold.</li> <li>It provides exception-safety. Suppose we were calling a function <code>foo</code> like:</li> </ul> <p><pre><code>foo(std::shared_ptr&lt;T&gt;{new T{}}, function_that_throws(), std::shared_ptr&lt;T&gt;{new T{}});\n</code></pre> The compiler is free to call <code>new T{}</code>, then <code>function_that_throw()</code>, and so on. Since we have allocated data on the heap in the first construction of a <code>T</code> we have introduced a leak here. With <code>std::make_shared</code>, we are given exception-safety: <pre><code>foo(std::make_shared&lt;T&gt;(), function_that_throws(), std::make_shared&lt;T&gt;());\n</code></pre></p> <ul> <li>Prevents having to do two allocations. When calling <code>std::shared_ptr{new T{}}</code>, we have to allocate memory for <code>T</code>, then in the shared pointer we have to allocate memory for the control block within the pointer.</li> </ul>"},{"location":"C%2B%2B/cpp_11/#stdref","title":"<code>std::ref</code>","text":"<p><code>std::ref(val)</code> is used to create object of type <code>std::reference_wrapper</code> that holds reference of val. Used in cases when usual reference passing using <code>&amp;</code> does not compile or <code>&amp;</code> is dropped due to type deduction. <code>std::cref</code> is similar but created reference wrapper holds a const reference to val. <pre><code>// create a container to store reference of objects.\nauto val = 99;\nauto _ref = std::ref(val);\n_ref++;\nauto _cref = std::cref(val);\n//_cref++; does not compile\nstd::vector&lt;std::reference_wrapper&lt;int&gt;&gt;vec; // vector&lt;int&amp;&gt;vec does not compile\nvec.push_back(_ref); // vec.push_back(&amp;i) does not compile\ncout &lt;&lt; val &lt;&lt; endl; // prints 100\ncout &lt;&lt; vec[0] &lt;&lt; endl; // prints 100\ncout &lt;&lt; _cref; // prints 100\n</code></pre></p>"},{"location":"C%2B%2B/cpp_11/#memory-model","title":"Memory Model","text":"<p>C++11 introduces a memory model for C++, which means library support for threading and atomic operations. Some of these operations include (but aren't limited to) atomic loads/stores, compare-and-swap, atomic flags, promises, futures, locks, and condition variables.</p>"},{"location":"C%2B%2B/cpp_11/#stdasync","title":"<code>std::async</code>","text":"<p><code>std::async</code> runs the given function either asynchronously or lazily-evaluated, then returns a <code>std::future</code> which holds the result of that function call.</p> <p>The first parameter is the policy which can be:</p> <ol> <li><code>std::launch::async</code> | <code>std::launch::deferred</code> It is up to the implementation whether to perform asynchronous execution or lazy evaluation.</li> <li><code>std::launch::async</code> Run the callable object on a new thread.</li> <li><code>std::launch::deferred</code> Perform lazy evaluation on the current thread.</li> </ol> <pre><code>int foo() {\n  /* Do something here, then return the result. */\n  return 1000;\n}\n\nauto handle = std::async(std::launch::async, foo);  // create an async task\nauto result = handle.get();  // wait for the result\n</code></pre>"},{"location":"C%2B%2B/cpp_11/#stdbeginend","title":"<code>std::begin/end</code>","text":"<p><code>std::begin</code> and <code>std::end</code> free functions were added to return begin and end iterators of a container generically. These functions also work with raw arrays which do not have begin and end member functions. <pre><code>template &lt;typename T&gt;\nint CountTwos(const T&amp; container) {\n  return std::count_if(std::begin(container), std::end(container), [](int item) {\n    return item == 2;\n  });\n}\n\nstd::vector&lt;int&gt; vec = {2, 2, 43, 435, 4543, 534};\nint arr[8] = {2, 43, 45, 435, 32, 32, 32, 32};\nauto a = CountTwos(vec); // 2\nauto b = CountTwos(arr);  // 1\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/","title":"C++14 New Features and Libraries","text":""},{"location":"C%2B%2B/cpp_14/#new-features","title":"New Features","text":""},{"location":"C%2B%2B/cpp_14/#binary-literals","title":"Binary Literals","text":"<p>Binary literals provide a convenient way to represent a number in binary. It is possible to separate digits with <code>'</code>. <pre><code>0b110  // == 6\n0b1111'1111 // == 255\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#generic-lambda-expressions","title":"Generic Lambda Expressions","text":"<p>C++14 now allows the <code>auto</code> type-specifier in the param list, enabling polymorphic lambdas. <pre><code>auto identity = [](auto x) { return x; };\nint three = identity(3);  // == 3\nstd::string foo = identity(\"foo\");  // == \"foo\"\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#lambda-capture-initializers","title":"Lambda Capture Initializers","text":"<p>This allows creating lambda captures initialized whith arbitrary expressions. The name given to the captured value does not need to be related to any variables in the enclosing scopes and introduces a new name inside the lambda body. The initializing expression is evaluated when the lambda is created(not invoked). <pre><code>int factory(int i) { return i * 10; }\nauto f = [x = factory(2)] { return x; }; // returns 20\n\nauto generator = [x = 0] () mutable {\n  // this would not compile without 'mutable' as we are modifying x on each call\n  return x++;\n};\nauto a = generator(); // == 0\nauto b = generator(); // == 1\nauto c = generator(); // == 2\n</code></pre></p> <p>Because it is now possible to move(or forward) values into a lambda that could previously be only captured by copy or reference we can now capture move-only types in a lambda by value. Note that in the below example the <code>p</code> in the capture-list of <code>task2</code> on the left-hand-side of <code>=</code> is a new variable private to the lambda body and does not refer to the original <code>p</code>. <pre><code>auto p = std::make_unique&lt;int&gt;(1);\n\nauto task1 = [=] { *p = 5; }; // ERROR: std::unique_ptr cannot be copied\n// vs.\nauto task2 = [p = std::move(p)] { *p = 5; }; // OK: p is move-constructed into the closure object\n// the original p is empty after task2 is created\n</code></pre></p> <p>Using this reference-captures can have different names than the referenced variable. <pre><code>auto x = 1;\nauto f = [&amp;r = x, x = x * 10] {\n  ++r;\n  return r + x;\n};\nf(); // sets x to 2 and returns 12\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#return-type-deduction","title":"Return Type Deduction","text":"<p>Using an <code>auto</code> return type in C++14, the compiler will attempt to deduce the type for you. With lambdas, you can now deduce its return type using <code>auto</code>, which makes returning a deduced reference or rvalue reference possible. <pre><code>// Deduce return type as `int`.\nauto f(int i) {\n return i;\n}\ntemplate &lt;typename T&gt;\nauto&amp; f(T&amp; t) {\n  return t;\n}\n\n// Returns a reference to a deduced type.\nauto g = [](auto&amp; x) -&gt; auto&amp; { return f(x); };\nint y = 123;\nint&amp; z = g(y); // reference to `y`\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#decltypeauto","title":"<code>decltype(auto)</code>","text":"<p>The <code>decltype(auto)</code> type-specifier also deduces a type like <code>auto</code> does. The difference is:</p> <ul> <li><code>decltype(auto)</code> keeps the reference and cv-qulifiers while <code>auto</code> not.</li> </ul> <pre><code>const int x = 0;\nauto x1 = x; // int\ndecltype(auto) x2 = x; // const int\nint y = 0;\nint&amp; y1 = y;\nauto y2 = y1; // int\ndecltype(auto) y3 = y1; // int&amp;\nint&amp;&amp; z = 0;\nauto z1 = std::move(z); // int\ndecltype(auto) z2 = std::move(z); // int&amp;&amp;\n// Note: Especially useful for generic code!\n\n// Return type is `int`.\nauto f(const int&amp; i) {\n return i;\n}\n\n// Return type is `const int&amp;`.\ndecltype(auto) g(const int&amp; i) {\n return i;\n}\n\nint x = 123;\nstatic_assert(std::is_same&lt;const int&amp;, decltype(f(x))&gt;::value == 0);\nstatic_assert(std::is_same&lt;int, decltype(f(x))&gt;::value == 1);\nstatic_assert(std::is_same&lt;const int&amp;, decltype(g(x))&gt;::value == 1);\n</code></pre>"},{"location":"C%2B%2B/cpp_14/#relaxing-constraints-on-constexpr-functions","title":"Relaxing Constraints on Constexpr Functions","text":"<p>In C++11 <code>constexpr</code> function bodies can only contain a very limited set of syntaxes, including(but not limited to):</p> <ul> <li><code>typedef</code></li> <li><code>using</code></li> <li><code>return</code></li> </ul> <p>In C++14, the set of allowable syntaxes expands greatly to include the most common syntaxes such as <code>if</code> statements, multiple <code>return</code>s, loops, etc.</p> <pre><code>constexpr int factorial(int n) {\n  if (n &lt;= 1) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\nfactorial(5); // == 120\n</code></pre>"},{"location":"C%2B%2B/cpp_14/#variable-templates","title":"Variable Templates","text":"<p>C++14 allows variables to be templated: <pre><code>template&lt;class T&gt;\nconstexpr T pi = T(3.1415926535897932385);\ntemplate&lt;class T&gt;\nconstexpr T e  = T(2.7182818284590452353);\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#deprecated-attribute","title":"<code>[[deprecated]]</code> Attribute","text":"<p>C++14 introduces the <code>[[deprecated]]</code> attribute to indicate that a unit (function, clss, etc) is discouraged and likely yield conpilation warnings. If a reason is provided, it will be included in the warning. <pre><code>[[deprecated]]\nvoid old_method();\n[[deprecated(\"Use new_method instead\")]]\nvoid legacy_method();\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#new-libraries","title":"New Libraries","text":""},{"location":"C%2B%2B/cpp_14/#user-defined-literals-for-standard-library-types","title":"User-defined Literals for Standard Library Types","text":"<p>New user-defineqd literals for standard library types, include new built-in literals for <code>chrono</code> and <code>basic_string</code>. These can be <code>constexpr</code> meaning that they can be used at compile-time. Some uses for these literals include compile-time integar parsing, binary literals, and imaginary number literals. <pre><code>using namespace std::chrono_literals;\nauto day = 24h;\nday.count(); // == 24\nstd::chrono::duration_cast&lt;std::chrono::minutes&gt;(day).count(); // == 1440\n</code></pre></p>"},{"location":"C%2B%2B/cpp_14/#compile-time-integar-sequence","title":"Compile-time Integar Sequence","text":"<p>The class template <code>std::integar_sequence</code> represents a compile-time sequence of integar. There are a few helpers built on top:</p> <ul> <li><code>std::make_integar_sequence&lt;T, N&gt;</code>: creates a sequence of <code>0, ..., N - 1</code> with type <code>T</code>.</li> <li><code>std::index_sequence_for&lt;T...&gt;</code>: converts a template parameter pack into an integar sequence.</li> </ul> <pre><code>template&lt;typename Array, std::size_t... I&gt;\ndecltype(auto) a2t_impl(const Array&amp; a, std::integer_sequence&lt;std::size_t, I...&gt;) {\n  return std::make_tuple(a[I]...);\n}\n\ntemplate&lt;typename T, std::size_t N, typename Indices = std::make_index_sequence&lt;N&gt;&gt;\ndecltype(auto) a2t(const std::array&lt;T, N&gt;&amp; a) {\n  return a2t_impl(a, Indices());\n}\n</code></pre>"},{"location":"C%2B%2B/cpp_14/#stdmake_unique","title":"<code>std::make_unique</code>","text":"<p><code>std::make_unique</code> is the recommanded way to create instances of <code>std::unique_ptr</code>s due to the following reasons:</p> <ul> <li>Avoid having to use the <code>new</code> operator.</li> <li>Prevents code repetition when specifying the underlying type the pointer shall hold.</li> <li>Most importantly, it provides exception-safety. Suppose we were calling a function <code>foo</code> like:</li> </ul> <p><pre><code>foo(std::unique_ptr&lt;T&gt;{new T{}}, function_that_throws(), std::unique_ptr&lt;T&gt;{new T{}});\n</code></pre> The compiler is free to call <code>new T{}</code>, then <code>function_that_throws()</code>, and so on... Since we have allocated data on the heap in the first construction of a <code>T</code>, we have introduced a leak here. With <code>std::make_unique</code>, we are given exception-safety: <pre><code>foo(std::make_unique&lt;T&gt;(), function_that_throws(), std::make_unique&lt;T&gt;());\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/","title":"C++17 New Features and Libraries","text":""},{"location":"C%2B%2B/cpp_17/#new-features","title":"New Features","text":""},{"location":"C%2B%2B/cpp_17/#template-argument-deduction-for-class-templates","title":"Template Argument Deduction for Class Templates","text":"<p>Automatic template argument deduction much like how it's done for functions, but now including class constructors. <pre><code>template &lt;typename T = float&gt;\nstruct MyContainer {\n  T val;\n  MyContainer() : val{} {}\n  MyContainer(T val) : val{val} {}\n  // ...\n};\nMyContainer c1 {1}; // OK MyContainer&lt;int&gt;\nMyContainer c2; // OK MyContainer&lt;float&gt;\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#declaring-non-type-template-parameters-with-auto","title":"Declaring Non-type Template Parameters with <code>auto</code>","text":"<p>Following the deduction rules of <code>auto</code>, while respecting the non-type template parameter list of allowable types[*], template arguments can be deduced from the type ot its arguments: <pre><code>template &lt;auto... seq&gt;\nstruct my_integer_sequence {\n  // Implementation here ...\n};\n\n// Explicitly pass type `int` as template argument.\nauto seq = std::integer_sequence&lt;int, 0, 1, 2&gt;();\n// Type is deduced to be `int`.\nauto seq2 = my_integer_sequence&lt;0, 1, 2&gt;();\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#folding-expressions","title":"Folding Expressions","text":"<p>A fold expression performs a fold of a template parameter pack over a binary operator.</p> <ul> <li>An expression of the form <code>(... op e)</code> or <code>(e op ...)</code>, where <code>op</code> is a fold-operator and <code>e</code> is an unexpanded parameter pack, are called unary folds.</li> <li>An expression of the form <code>(e1 op ... op e2)</code>, where <code>op</code> are fold-operators, is called a binary fold. Either <code>e1</code> or <code>e2</code> is an unexpanded parameter pack, but not both.</li> </ul> <pre><code>template &lt;typename... Args&gt;\nbool logicalAnd(Args... args) {\n    // Binary folding.\n    return (true &amp;&amp; ... &amp;&amp; args);\n}\nbool b = true;\nbool&amp; b2 = b;\nlogicalAnd(b, b2, true); // == true\n\ntemplate &lt;typename... Args&gt;\nauto sum(Args... args) {\n    // Unary folding.\n    return (... + args);\n}\nsum(1.0, 2.0f, 3); // == 6.0\n</code></pre>"},{"location":"C%2B%2B/cpp_17/#new-rules-for-auto-deduction-from-braced-init-list","title":"New Rules for <code>auto</code> Deduction from Braced-init-list","text":"<p>Changes to <code>auto</code> deduction when used with the uniform initialization syntax. Previously, <code>auto x {3}</code> deduced a <code>std::initializer_list&lt;int&gt;</code>, which now deduces to <code>int</code>. <pre><code>auto x1 {1, 2, 3};  // error: not a single element.\nauto x2 = {1, 2, 3};  // x2 is std::initializer_list&lt;int&gt;\nauto x3 {3};  // x3 is int\nauto x4 {3.0};  // x4 is double\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#constexpr-lambda","title":"<code>constexpr</code> Lambda","text":"<p>Compile-time lambda using <code>constexpr</code>. <pre><code>auto identity = [](int n) constexpr { return n; };\nstatic_assert(identity(123) == 123);\nconstexpr auto add = [](int x, int y) {\n  auto L = [=] { return x; };\n  auto R = [=] { return y; };\n  return [=] { return L() + R(); };\n};\n\nstatic_assert(add(1, 2)() == 3);\nconstexpr int addOne(int n) {\n  return [n] { return n + 1; }();\n}\n\nstatic_assert(addOne(1) == 2);\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#lambda-capture-this-by-value","title":"Lambda Capture <code>this</code> by Value","text":"<p>Capturing <code>this</code> in a lambda's environment was previously reference-only. An example of where <code>this</code> is problematic is asynchronous code using callbacks that require an object to be available, potentially past its lifetime. <code>*this</code> (C++17) will now make a copy of the current object, while <code>this</code> (C++11) continues to capture by reference. <pre><code>struct MyObj {\n  int value {123};\n  auto getValueCopy() {\n    return [*this] { return value; };\n  }\n  auto getValueRef() {\n    return [this] { return value; };\n  }\n};\nMyObj mo;\nauto valueCopy = mo.getValueCopy();\nauto valueRef = mo.getValueRef();\nmo.value = 321;\nvalueCopy(); // 123\nvalueRef(); // 321\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#inline-variables","title":"Inline Variables","text":"<p>The inline specifier can be applied to variables as well as to functions. A variable declared inline has the same semantics as a function declared inline. <pre><code>// Disassembly example using compiler explorer.\nstruct S { int x; };\ninline S x1 = S{321}; // mov esi, dword ptr [x1]\n                      // x1: .long 321\n\nS x2 = S{123};        // mov eax, dword ptr [.L_ZZ4mainE2x2]\n                      // mov dword ptr [rbp - 8], eax\n                      // .L_ZZ4mainE2x2: .long 123\n</code></pre> It can also be used to declare and define a static member variable, such that it does not need to be initialized in the source file. <pre><code>struct S {\n  S() : id{count++} {}\n  ~S() { count--; }\n  int id;\n  static inline int count{0}; // declare and initialize count to 0 within the class\n};\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#nested-namespaces","title":"Nested Namespaces","text":"<p>Using the namespace resolution operator to create nested namespace definitions. <pre><code>namespace A {\n  namespace B {\n    namespace C {\n      int i;\n    }\n  }\n}\n// vs.\nnamespace A::B::C {\n  int i;\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#structured-bindings","title":"Structured Bindings","text":"<p>A proposal for de-structuring initialization, that would allow writting <code>auto [ x, y, z] = expr;</code> where the type of <code>expr</code> was a tuple-like object, whose elements would be bound to the variables <code>x</code>, <code>y</code> and <code>z</code>(which is construc declares). tuple-like objects include <code>std::tuple</code>, <code>std::pair</code>, <code>std::array</code>, and aggregate structures. <pre><code>using Coordinate = std::pair&lt;int, int&gt;;\nCoordinate origin() {\n  return Coordinate{0, 0};\n}\n\nconst auto [ x, y ] = origin();\nx; // == 0\ny; // == 0\nstd::unordered_map&lt;std::string, int&gt; mapping {\n  {\"a\", 1},\n  {\"b\", 2},\n  {\"c\", 3}\n};\n\n// Destructure by reference.\nfor (const auto&amp; [key, value] : mapping) {\n  // Do something with key and value\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#selection-statements-with-initializer","title":"Selection Statements with Initializer","text":"<p>New version of <code>if</code> and <code>switch</code> statements which simplify code patterns and help users keep scopes tight. <pre><code>{\n  std::lock_guard&lt;std::mutex&gt; lk(mx);\n  if (v.empty()) v.push_back(val);\n}\n// vs.\nif (std::lock_guard&lt;std::mutex&gt; lk(mx); v.empty()) {\n  v.push_back(val);\n}\n\nFoo gadget(args);\nswitch (auto s = gadget.status()) {\n  case OK: gadget.zip(); break;\n  case Bad: throw BadFoo(s.message());\n}\n// vs.\nswitch (Foo gadget(args); auto s = gadget.status()) {\n  case OK: gadget.zip(); break;\n  case Bad: throw BadFoo(s.message());\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#constexpr-if","title":"<code>constexpr if</code>","text":"<p>Write code that is instantiated depending on a compile=time condition. <pre><code>template &lt;typename T&gt;\nconstexpr bool isIntegral() {\n  if constexpr (std::is_integral&lt;T&gt;::value) {\n    return true;\n  } else {\n    return false;\n  }\n}\nstatic_assert(isIntegral&lt;int&gt;() == true);\nstatic_assert(isIntegral&lt;char&gt;() == true);\nstatic_assert(isIntegral&lt;double&gt;() == false);\nstruct S {};\nstatic_assert(isIntegral&lt;S&gt;() == false);\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#utf-8-character-literals","title":"UTF-8 Character Literals","text":"<p>A character literal that begins with <code>u8</code> is a character literal of type <code>char</code>. The value of a UTF-8 character literal is equal to its ISO 10646 code point value. <pre><code>char x = u8'x';\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#direct-list-initialization-of-enums","title":"Direct List Initialization of Enums","text":"<p>Enums can now be initialized using braced syntax. <pre><code>enum byte : unsigned char {};\nbyte b {0}; // OK\nbyte c {-1}; // ERROR\nbyte d = byte{1}; // OK\nbyte e = byte{256}; // ERROR\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#fallthrough-nodiscard-maybe_unused-attributes","title":"<code>fallthrough</code>, <code>nodiscard</code>, <code>maybe_unused</code> attributes","text":"<p>C++17 introduces threee new attributes:</p> <ul> <li> <p><code>[[fallthrough]]</code>: indicates to the compiler that falling through in a switch statement is intended behavior. <pre><code>switch (n) {\n  case 1: [[fallthrough]]\n    // ...\n  case 2:\n    // ...\n    break;\n}\n</code></pre></p> </li> <li> <p><code>[[nodiscard]]</code>: issues a warning when either a function or class has this attribute and its return value is discarded. <pre><code>[[nodiscard]] bool do_something() {\n  return is_success; // true for success, false for failure\n}\n\ndo_something(); // warning: ignoring return value of 'bool do_something()',\n                // declared with attribute 'nodiscard'\n\n// Only issues a warning when `error_info` is returned by value.\nstruct [[nodiscard]] error_info {\n  // ...\n};\n\nerror_info do_something() {\n  error_info ei;\n  // ...\n  return ei;\n}\n\ndo_something(); // warning: ignoring returned value of type 'error_info',\n                // declared with attribute 'nodiscard'\n</code></pre></p> </li> <li> <p><code>[[maybe_unused]]</code>: indicates to be compiler that a variable or parameter might be unused an is intended. <pre><code>void my_callback(std::string msg, [[maybe_unused]] bool error) {\n  // Don't care if `msg` is an error message, just log it.\n  log(msg);\n}\n</code></pre></p> </li> </ul>"},{"location":"C%2B%2B/cpp_17/#new-libraries","title":"New Libraries","text":""},{"location":"C%2B%2B/cpp_17/#stdvariant","title":"<code>std::variant</code>","text":"<p>The class template <code>std::variant</code> represents a type-safe <code>union</code>. An instance of <code>std::variant</code> at any given time holds a value of one of its alternativqe types(it's possible for it to be valueless). <pre><code>std::variant&lt;int, double&gt; v{ 12 };\nstd::get&lt;int&gt;(v); // == 12\nstd::get&lt;0&gt;(v); // == 12\nv = 12.0;\nstd::get&lt;double&gt;(v); // == 12.0\nstd::get&lt;1&gt;(v); // == 12.0\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#stdoptional","title":"<code>std::optional</code>","text":"<pre><code>std::optional&lt;std::string&gt; create(bool b) {\n  if (b) {\n    return \"Godzilla\";\n  } else {\n    return {};\n  }\n}\n\ncreate(false).value_or(\"empty\"); // == \"empty\"\ncreate(true).value(); // == \"Godzilla\"\n// optional-returning factory functions are usable as conditions of while and if\nif (auto str = create(true)) {\n  // ...\n}\n</code></pre>"},{"location":"C%2B%2B/cpp_17/#stdany","title":"<code>std::any</code>","text":"<p>A type-safe container for single values of any type. <pre><code>std::any x {5};\nx.has_value() // == true\nstd::any_cast&lt;int&gt;(x) // == 5\nstd::any_cast&lt;int&amp;&gt;(x) = 10;\nstd::any_cast&lt;int&gt;(x) // == 10\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#stdstring_view","title":"std::string_view","text":"<p>A non-owning reference to a string. Useful for providing an abstraction on top of strings (e.g. for parsing). <pre><code>// Regular strings.\nstd::string_view cppstr {\"foo\"};\n// Wide strings.\nstd::wstring_view wcstr_v {L\"baz\"};\n// Character arrays.\nchar array[3] = {'b', 'a', 'r'};\nstd::string_view array_v(array, std::size(array));\n\nstd::string str {\"   trim me\"};\nstd::string_view v {str};\nv.remove_prefix(std::min(v.find_first_not_of(\" \"), v.size()));\nstr; //  == \"   trim me\"\nv; // == \"trim me\"\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#stdinvoke","title":"<code>std::invoke</code>","text":"<p>Invoke a <code>Callable</code> object with parameters. Examples of <code>Callable</code> objects are <code>std::function</code> or <code>std::bind</code> where an object can be called similarly to a regular function. <pre><code>template &lt;typename Callable&gt;\nclass Proxy {\n  Callable c;\npublic:\n  Proxy(Callable c): c(c) {}\n  template &lt;class... Args&gt;\n  decltype(auto) operator()(Args&amp;&amp;... args) {\n    // ...\n    return std::invoke(c, std::forward&lt;Args&gt;(args)...);\n  }\n};\nauto add = [](int x, int y) {\n  return x + y;\n};\nProxy&lt;decltype(add)&gt; p {add};\np(1, 2); // == 3\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#stdapply","title":"<code>std::apply</code>","text":"<p>Invoke a <code>Callable</code> object with a tuple of arguments <pre><code>auto add = [](int x, int y) {\n  return x + y;\n};\nstd::apply(add, std::make_tuple(1, 2)); // == 3\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#stdfilesystem","title":"<code>std::filesystem</code>","text":"<p>The new <code>std::filesystem</code> library provides a standard way to manipulate files, directories, and paths in a filesystem. <pre><code>const auto bigFilePath {\"bigFileToCopy\"};\nif (std::filesystem::exists(bigFilePath)) {\n  const auto bigFileSize {std::filesystem::file_size(bigFilePath)};\n  std::filesystem::path tmpPath {\"/tmp\"};\n  if (std::filesystem::space(tmpPath).available &gt; bigFileSize) {\n    std::filesystem::create_directory(tmpPath.append(\"example\"));\n    std::filesystem::copy_file(bigFilePath, tmpPath.append(\"newFile\"));\n  }\n}\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#stdbyte","title":"std::byte","text":"<p>The new <code>std::byte</code> type provides a standard way of representing data as byte. Benefits of using <code>std::byte</code> over <code>char</code> or <code>unsigned char</code> is that it is not a character type, and is also not an arithmetic type; while the only operator overloads available are bitwise operator. <pre><code>std::byte a {0};\nstd::byte b {0xFF};\nint i = std::to_integer&lt;int&gt;(b); // 0xFF\nstd::byte c = a &amp; b;\nint j = std::to_integer&lt;int&gt;(c); // 0\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#splicing-for-maps-and-sets","title":"Splicing for Maps and Sets","text":"<p>Moving nodes and merging containers whithout the overhead of expensive copies, moves, or heap allocations/deallocations. Moving elements from one map to another: <pre><code>std::map&lt;int, string&gt; src {{1, \"one\"}, {2, \"two\"}, {3, \"buckle my shoe\"}};\nstd::map&lt;int, string&gt; dst {{3, \"three\"}};\ndst.insert(src.extract(src.find(1))); // Cheap remove and insert of { 1, \"one\" } from `src` to `dst`.\ndst.insert(src.extract(2)); // Cheap remove and insert of { 2, \"two\" } from `src` to `dst`.\n// dst == { { 1, \"one\" }, { 2, \"two\" }, { 3, \"three\" } };\n</code></pre> Inserting elements which outlive the container: <pre><code>auto elementFactory() {\n  std::set&lt;...&gt; s;\n  s.emplace(...);\n  return s.extract(s.begin());\n}\ns2.insert(elementFactory());\n</code></pre> Changing the key of a map element: <pre><code>std::map&lt;int, string&gt; m {{1, \"one\"}, {2, \"two\"}, {3, \"three\"}};\nauto e = m.extract(2);\ne.key() = 4;\nm.insert(std::move(e));\n// m == { { 1, \"one\" }, { 3, \"three\" }, { 4, \"two\" } }\n</code></pre></p>"},{"location":"C%2B%2B/cpp_17/#parallel-algorithms","title":"Parallel Algorithms","text":"<p>Many of the STL algorithms, such as the <code>copy</code>, <code>find</code> and <code>sort</code> methods, started to support the parallel execution policies: <code>seq</code>, <code>par</code> and <code>par_unseq</code> which translate to \"sequentially\", \"parallel\" and \"parallel unsequenced\". <pre><code>std::vector&lt;int&gt; longVector;\n// Find element using parallel execution policy\nauto result1 = std::find(std::execution::par, std::begin(longVector), std::end(longVector), 2);\n// Sort elements using sequential execution policy\nauto result2 = std::sort(std::execution::seq, std::begin(longVector), std::end(longVector));\n</code></pre></p>"},{"location":"C%2B%2B/effective_cpp/","title":"Effective C++","text":"<p>This is a summary of the book \"Effective C++\" which gives 55 specific ways to imporve your programs and designs by Scott Meyers.</p>"},{"location":"C%2B%2B/effective_cpp/#1-view-c-as-a-federation-of-languages","title":"1. View C++ as a federation of languages.","text":"<ul> <li>Rules for effective C++ programming vary, depending on the part of C++ you are using.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#2-prefer-consts-enums-and-inlines-to-defines","title":"2. Prefer consts, enums, and inlines to #defines.","text":"<ul> <li>For simple constants, prefer const objects or enums to <code>#define</code>s.</li> <li>For function-like macros, prefer inline functions to <code>#define</code>s.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#3-use-const-whenever-possible","title":"3. Use <code>const</code> whenever possible.","text":"<ul> <li>Declaring something const help compilers detect usage errors. const can be applied to objects at any scope, to function parameters and return types, and to member functions as a whole.</li> <li>Compilers enforce bitwise constness, but you should program using logical constness.</li> <li>When const and non-const member functions have essentially identical implementations, code duplication can be avoided by having the non-const version call the const version.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#4-make-sure-that-the-objects-are-initialized-before-theyre-used","title":"4. Make sure that the objects are initialized before they're used.","text":"<ul> <li>Manually initialize objects of built-in type, because C++ only sometimes initializes them itself.</li> <li>In a constructor, prefer use of the member initialization list to assignment inside the body of the constructor. List data members in the initialization list in the same order they're declared in the class.</li> <li>Avoid initialization order problems across translation units by replacing non-local static objects with local static objects.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#5-know-what-functions-c-silently-writes-and-calls","title":"5. Know what functions C++ silently writes and calls.","text":"<ul> <li>Compilers may implicityly generate a class's default constructor, copy constructor, copy assignment operator, and destructor.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#6-explicityly-disallow-the-use-of-compiler-generated-function-you-do-not-want","title":"6. Explicityly disallow the use of compiler-generated function you do not want.","text":"<ul> <li>To disallow functionality automatically provided by compilerssss, declare the corresponding member functions <code>private</code> or <code>= delete</code> and give no implementations. Using a base class like Uncopyable is one way to do this.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#7-declare-destructors-virtual-in-polymorphic-basic-classes","title":"7. Declare destructors virtual in polymorphic basic classes.","text":"<ul> <li>Polymorphic base classes should declare virtual destructors. If a class has dany virtual functions, it should have a virtual destructor.</li> <li>Classes not designed to be base class or not designed to be used polymorhpically should not declare virtual destructors.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#8-prevent-exceptions-from-leaving-destructors","title":"8. Prevent exceptions from leaving destructors.","text":"<ul> <li>Destructors should never emit exceptions. If functions called in a destructor may throw, the destructor should catch any exceptions, then swallow them or terminate the program.</li> <li>If class clientss need to be able to react exceptions thron during an opreration, the class should provide a regular (i.e., non-destructor)function that performs the operation.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#9-never-call-virtual-function-during-construction-or-destruction","title":"9. Never call virtual function during construction or destruction.","text":"<ul> <li>Don't call virtual functions during construction or destruction, because such calls will never go to a more derived class than that of the currently executing constructor or destructor.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#10-have-assignment-operators-return-a-reference-to-this","title":"10. Have assignment operators return a reference to <code>*this</code>.","text":"<ul> <li>To meet the chain of assignments like <code>x = y = z = 15;</code>.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#11-handle-assignment-to-self-in-operator","title":"11. Handle assignment to self in <code>operator=</code>.","text":"<ul> <li>Make sure <code>operator=</code> is well-behaved when an object is assigned to itself. Techniques include comparing addresses of source and target objects, careful statement ordering, and copy-and-swap.</li> <li>Make sure that any function operating on more than one object behaves correctly if two or more of the objects are the same.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#12-copy-all-parts-of-an-object","title":"12. Copy all parts of an object.","text":"<ul> <li>Copy functions should be sure to copy all of an object's data members and all of its base class parts.</li> <li>Don't try to implement one of the copying functions in terms of the other. Instead, put common functionality in a third function that both call.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#13-use-objects-to-manage-resources","title":"13. Use objects to manage resources.","text":"<ul> <li>To prevent resource leaks, use <code>RAII</code>(Resource Acquisition Is Initialization) objects that acquire resources in their constructors and release them in their destructors.</li> <li>Two commonly useful <code>RAII</code> classes are <code>std::shared_ptr</code> and <code>std::unique_ptr</code>. <code>std::shared_ptr</code> is usually the better choice, because its behavior when copied is intuitive.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#14-think-carefully-about-copying-behavior-in-resource-managing-classes","title":"14. Think carefully about copying behavior in resource-managing classes.","text":"<ul> <li>Copying an <code>RAII</code> object entails copying the resource it manages, so the copying behavior of the resource determines the copying behavior of the <code>RAII</code> object.</li> <li>Common <code>RAII</code> class copying behaviors are disallowing copying and performing reference counting, but other behaviorss are possible.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#15-provide-access-to-raw-resource-in-resource-managing-classes","title":"15. Provide access to raw resource in resource-managing classes.","text":"<ul> <li><code>API</code>s often require access to raw resources, so each <code>RAII</code> class should offer a way to get at the resource it manages.</li> <li>Access may be via explicit conversion or implicit conversion. In general, explicit conversion is safer, but implicit conversion is more convenient for clients.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#16-use-the-same-form-in-correspongding-uses-of-new-and-delete","title":"16. Use the same form in correspongding uses of <code>new</code> and <code>delete</code>.","text":"<ul> <li>If you use <code>[]</code> in a new expression, you must use <code>[]</code> in the corresponding delete expression. If you don't use <code>[]</code> in a new expression, you mustn't use <code>[]</code> in the corresponding delete expression.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#17-store-newed-objects-in-smart-pointers-in-standalone-statements","title":"17. Store <code>new</code>ed objects in smart pointers in standalone statements.","text":"<ul> <li>Store <code>new</code>ed objects in smart pointer in standlone statements. Failure to do this can lead to subtle resource leaks when exceptions are thrown.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#18-make-interfaces-easy-to-use-correctly-and-hard-to-use-incorrectly","title":"18. Make interfaces easy to use correctly and hard to use incorrectly.","text":"<ul> <li>Good interfaces are easy to use correctly and hard to use incorrectly. You should strive for these characteristics in all your interfaces.</li> <li>Ways to facilitate correct use include consistency in interfaces and behavioral compatibility with built-in types.</li> <li>Ways to prevent errors include creating new typess, restricting operations on types, constraining object values, and eliminating client resource management respoinsibilities.</li> <li><code>std::shared_ptr</code> supports custom deleters. This preventss the cross-DLL problems, can be used to automatically unlock mutexes.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#19-treak-class-design-as-type-design","title":"19. Treak class design as type design.","text":"<p>Before defining a new type, be sure to consider all these issues:</p> <ul> <li>How should objects of your new type be created and destroyed?</li> <li>How should object initialization differ from object assignment?</li> <li>What does it mean for objects of your new type to be passed by value?</li> <li>What are the restrictions on legal value for your new type?</li> <li>Does your new type fit into an inheritance graph?</li> <li>What kind of type conversions are allowed for your new type?</li> <li>What operators and functions make sense for the new type?</li> <li>What standard functions should be disallowed?</li> <li>Who should have access to the members of your new type?</li> <li>What is the \"undeclared interface\" of your new type?</li> <li>How general is your new type?</li> <li>Is a new type really what you need?</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#20-prefer-pass-by-reference-to-const-to-pass-by-value","title":"20. Prefer pass-by-reference-to-const to pass-by-value.","text":"<ul> <li>Prefer pass-by-reference-to-const over pass-by-value. It's typically more efficient and it avoids the slicing problem.</li> <li>The rule doesn't apply to built-in types and <code>STL</code> iterator and function object types. For them, pass-by-value is usually appropriate.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#21-dont-try-to-return-a-reference-when-you-must-return-an-object","title":"21. Don't try to return a reference when you must return an object.","text":"<ul> <li>Never return a pointer or reference to a local stack object, a reference to a heap-allocated object or a pointer or reference to a local static object i there is a chance that more than one such object will be needed.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#22-declare-data-members-private","title":"22. Declare data members <code>private</code>.","text":"<ul> <li>Declare data members <code>private</code>, it gives clients syntactically uniform access to data, affords fine-grained access control, allows invariants to be enforced, and offers class authors implementation flexibility.</li> <li>Protected is no more encapsulated than <code>public</code>.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#23-prefer-non-member-non-friend-functions-to-member-functions","title":"23. Prefer non-member non-friend functions to member functions.","text":"<ul> <li>Doing so increases encapsulation, packaging flexibility, and functional extensibility.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#24-declare-non-member-functions-when-type-conversions-should-apply-to-all-parameters","title":"24. Declare non-member functions when type conversions should apply to all parameters.","text":"<ul> <li>If you need type conversions on all parameters to a function (including the one that would otherwise be pointed to by the <code>this</code> pointer), the function must be a non-member.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#25-consider-support-for-a-non-throwing-swap","title":"25. Consider support for a non-throwing <code>swap</code>.","text":"<ul> <li>Provide a <code>swap</code> member function when <code>std::swap</code> would be inefficient for your type. Make sure your swap doesn't throw exceptions.</li> <li>If you offer a member swap, also offer a non-member swap that calls the member. For classes(not templates), specialize <code>std::swap</code>, too.</li> <li>When calling swap, employ a using declaration for <code>std::swap</code>, then call swap without namespace qualification.</li> <li>It's fine to totally specialize <code>std</code> templates for user-defined bypes, but never try to add something completely new to std.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#26-postpone-variable-definitions-as-long-as-possible","title":"26. Postpone variable definitions as long as possible.","text":"<ul> <li>It increase problem clarity and improves program efficiency.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#27-minimize-casting","title":"27. Minimize casting.","text":"<p>C++ offers four new cast froms:</p> <ul> <li><code>const_cast&lt;T&gt;(expression)</code>: used to cast away constness of objects.</li> <li><code>dynamic_cast&lt;T&gt;(expression)</code>: used to perform \"safe downcasting\", i.e., to determine whether an object is of a particular type in an inheritance hierarchy.</li> <li><code>reinterpret_cast&lt;T&gt;(expression)</code>: used for low-level casts that yield implementation-dependent results, e.g., casting a pointer to an int.</li> <li> <p><code>static_cast&lt;T&gt;(expression)</code>: used to force implicit conversions, e.g. non-const object to const object, int to double, etc.</p> </li> <li> <p>Avoid casts whenever practical, especially <code>dynamic_cast</code> in performance-sensitive code. If a design requires casting, try to develop a cast-free alternative.</p> </li> <li>When casting is neccessary, try to hide it inside a function. Clients can then call the function instead of putting casts in their own code.</li> <li>Prefer C++-style casts to old-style casts. They are easier to see, and they are more specific aboud what they do.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#28-avoid-returning-handle-to-object-internals","title":"28. Avoid returning \"handle\" to object internals","text":"<ul> <li>Avoid returning handles (references, pointers, or iterators) to object internals. Not returning handles increases encapsulation, helps const member functions act cosnt and minimizes the creation of dangling handles.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#29-strive-for-exception-safe-code","title":"29. Strive for exception-safe code.","text":"<ul> <li>Exception-safe functions leak no resource and allow no data structure to become corrupted, even when exceptions are thrown. Such functions offer the basic, strong, or nothrow guarantees.</li> <li>The strong guarantee can often be implemented via copy-and-swap, but the strong guarantee is not practical for all functions.</li> <li>A function can usually offer a guarantee no stronger than the weakest guarantee of the functions it calls.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#30-understand-the-ins-and-outs-of-inlining","title":"30. Understand the ins and outs of inlining.","text":"<ul> <li>Limit most inlining to small, frequently called functions. This facilitates debugging and binary upgradability, minimizes potential code bloat, and maximizes the chances of greater program speed.</li> <li>Don't declare fucntion template inline just because they appear in header files.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#31-minimize-compilation-dependencies-between-files","title":"31. Minimize compilation dependencies between files.","text":"<ul> <li>The general idea behind minimizing compilation dependencies is to depend on declarations instead of definitions. Two approaches based on this idea are Handle classes and Interface classes.</li> <li>Library header files should exist in full and declaration-only forms. This applies regardless of whether templates are involved.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#32-make-sure-public-inheritance-models-is-a","title":"32. Make sure public inheritance models \"is-a\".","text":"<ul> <li>Public inheritance means \"is-a\". Everything that applies to base classes must also apply to derived classes, because every derived class object <code>is a</code> base class object.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#33-avoid-hiding-inherited-names","title":"33. Avoid hiding inherited names.","text":"<ul> <li>Names in derived classes hide names in base classes. Under public inheritance, this is never desirable.</li> <li>To make hidden names visible again, employ <code>using</code> declarations or forwarding functions.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#34-differentiate-between-inheritance-of-interface-and-inheritance-of-implementation","title":"34. Differentiate between inheritance of interface and inheritance of implementation.","text":"<ul> <li>Inheritance of interface is different from inheritance of implementation. Under public inheritance, derived classes always inherit base class interfaces.</li> <li>Pure vitual functions specify inheritance of interface only.</li> <li>Simple (impure) virtual functions specify inheritance of interface plus inheritance of a default implementation.</li> <li>Non-virtual functions specify inheritance of interface plus inheritance of a mandatory implementation.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#35-consider-alternatives-to-virtual-functions","title":"35. Consider alternatives to virtual functions.","text":"<p>Here are some alternatives of virtual function:</p> <ul> <li>Use the non-virtual interface idiom(NVI idiom), a form of the Template Method design pattern that wraps public non-virtual member functions around less accessible virtual functions.</li> <li>Replace virtual functions with <code>function pointer data member</code>, a stripped-down manifestation of the <code>Strategy</code> design pattern.</li> <li>Replace virtual functions with <code>std::function</code> data member, thus allowing use of any callable entity with a signature compatible with what you ned. This, too is a form of the <code>Strategy</code> design pattern.</li> <li> <p>Replace virtual functions in one hierarchy with <code>virtual functions in another hierarychy</code>. This is the conventional implementation of the <code>Strategy</code> design pattern.</p> </li> <li> <p>Alternatives to virtual functions include the <code>NVI</code> idiom and various forms of the Strategy design pattern. The NVI idiom is itself an example of the Template Method design pattern.</p> </li> <li>A disadvantage of moving functionality from a member function to a function outside the class is that the non-member function lacks access to the class's non-public members.</li> <li><code>std::function</code> objects act like generalized function pointers. Such objects support all callable entities compatible with a given target signature.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#36-never-redefine-an-inherited-non-virtual-function","title":"36. Never redefine an inherited non-virtual function.","text":"<ul> <li>The implementation of derived class will hide the one of base class, which may lead to different results when called by pointer of derived class and pointer of base class.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#37-never-redefine-a-functions-inherited-default-parameter-value","title":"37. Never redefine a function's inherited default parameter value.","text":"<ul> <li>Because default parameter values are statically bound, while virtual functions(the only functions you should be redefining) are dynamically bound.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#38-model-has-a-or-is-implemented-in-terms-of-through-composition","title":"38. Model \"has-a\" or \"is-implemented-in-terms-of\" through composition.","text":"<ul> <li>Composition has meanings completely different from that of public inheritance.</li> <li>In the application domain, composition means \"has-a\". In the implementation domain, it means is-implemented-in-terms-of.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#39-use-private-inheritance-judiciously","title":"39. Use private inheritance judiciously.","text":"<ul> <li>Private inheritance means is-implementation-in-terms of. It's usually inferior to composition, but it makes sense when a derived class needs access to protected base class members or needs to redefine inherited virtual functions.</li> <li>Unlike composition, private inheritance can enable the empty base optimization. This can be important for library developers who strive to minimize object sizes.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#40-use-multiple-inheritance-judiciously","title":"40. Use multiple inheritance judiciously.","text":"<ul> <li>Multiple inheritance is more complex than single inheritance. It can lead to new ambiguity issues and to the need for virtual inheritance.</li> <li>Virtual inheritance imposes costs in size, speed, and complexity of initialization and assignment. It's most practical when virtual base classes have no idea.</li> <li>Multiple inheritance does have legitimate uses. On scenario involves combining public inheritance from an Interface class with private inheritance from a class that helps with implementation.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#41-understand-implicit-interfaces-and-compile-time-polymorphism","title":"41. Understand implicit interfaces and compile-time polymorphism.","text":"<ul> <li>Both classes and templates support interfaces and polymorphism.</li> <li>For classes, interfaces are centered on function signatures. Polymorphism occurs at runtime through virtual functions.</li> <li>For template parameters, interfaces are implicit and base on valid expression. Polymorphism occurs during compilation through template instantiation and function overloading resolution.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#42-understand-the-two-meaning-of-typename","title":"42. Understand the two meaning of typename.","text":"<ul> <li>When declaring template parameters, <code>class</code> and <code>template</code> are interchangeable.</li> <li>Use <code>typename</code> to identify nested dependent type names, except in base class lists or as a base class identifier in a member initialization list.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#43-know-how-to-access-names-in-templatized-base-classes","title":"43. Know how to access names in templatized base classes.","text":"<ul> <li>In derived class templates, refer to names in base class templates via:<ul> <li><code>this-&gt;</code> prefix;</li> <li><code>using</code> declaration;</li> <li>explicit base class qualification.</li> </ul> </li> </ul>"},{"location":"C%2B%2B/effective_cpp/#44-factor-parameter-independent-code-out-of-templates","title":"44. Factor parameter-independent code out of templates.","text":"<ul> <li>Templates generate multiple classes and multiple functions, so any template code not dependent on a template parameter causes bloat.</li> <li>Bloat due to non-type template parameters can often be eliminated by replacing template parameters with function parameters or class data members.</li> <li>Bloat due to type parameters can be reduced by sharing implementations for instantiation types with identical binary representations.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#45-use-member-function-templates-to-accept-all-compatible-types","title":"45. Use member function templates to accept \"all compatible types\".","text":"<ul> <li>Use member function templates to generate functions that accept all compatible types.</li> <li>If you declare member templates for generalized copy construction or generalized assignment, you'll still need to declare the normal copy constructor and copy assignment operator, too.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#46-define-non-member-functions-inside-templates-when-type-conversions-are-disired","title":"46. Define non-member functions inside templates when type conversions are disired.","text":"<ul> <li>When writting a class template that offers functions related to the template that support implicit type conversions on all parameters, define those functions as friends inside the class template.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#47-use-traits-classes-for-information-about-types","title":"47. Use traits classes for information about types.","text":"<ul> <li>Traits classes make information about types available during compilation. They're implemented using templates specializations.</li> <li>In conjunction with overloading, traits classes make it possible to perform compile-time <code>if else</code> tests on types.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#48-beware-of-template-metaprogramming","title":"48. Beware of template metaprogramming.","text":"<ul> <li>Template metaprogramming can shift work from runtime to compile-time, thus enabling earlier error detection and higher runtime performance.</li> <li>TMP can be used to generate custom code based on combinations of policy choices, and it can also be used to avoid generating code inappropriate for particular types.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#49-understand-the-behavior-of-the-new-handler","title":"49. Understand the behavior of the new-handler.","text":"<ul> <li><code>set_new_handler</code> allows you to specify a function to be called when memory allocation requests cannot be satisfied.</li> <li>Nothrow new is of limited utility, because it applies only to memory allocation; associated constructor calls may still throw exceptions.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#50-understand-when-it-makes-sense-to-replace-new-and-delete","title":"50. Understand when it makes sense to replace <code>new</code> and <code>delete</code>.","text":"<p>There are many valid reasons for writting custom versions of <code>new</code> and <code>delete</code>:</p> <ul> <li>To detect usage errors.</li> <li>To collect statistics about the use of dynamically allocated memory.</li> <li>To increase the speed of allocation and deallocation.</li> <li>To reduce the space overhead of default memory management.</li> <li>To compensate for suboptimal alignment in the default allocator.</li> <li>To cluster related objects near one another.</li> <li>To obtain unconventional behavior.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#51-adhere-to-convention-when-writing-new-and-delete","title":"51. Adhere to convention when writing <code>new</code> and <code>delete</code>.","text":"<ul> <li>operator <code>new</code> should <ul> <li>contain an infinite loop trying to allocate memory,</li> <li>call the new-handler if it can't satisfy a memory request, </li> <li>handle requests from zero bytes,</li> <li>class-specific versions should requests for larger blocks than expected.</li> </ul> </li> <li>operator <code>delete</code> should do nothing if passed a pointer that is null. Class-specific versions should handle blocks that are larger than expected.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#52-write-placement-delete-if-you-write-placement-new","title":"52. Write placement <code>delete</code> if you write placement <code>new</code>.","text":"<ul> <li>When you write a placement version of operator new, be sure to write the corresponding placement version of operator delete. If you don't, your program may experience subtle, intermittent memory leaks.</li> <li>When you declare placement version of new and delete, be sure not to unintentionally hide the normal versions of those functions.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#53-pay-attention-to-compiler-warnings","title":"53. Pay attention to compiler warnings.","text":"<ul> <li>Take compiler warnings seriously, and strive to compile warning-free at the maximum warning level supported by your compilers.</li> <li>Don't become dependent on compiler warnings, because different compilers warn about different things. Porting to a new compiler may eliminate warning messages you've come to rely on.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#54-familiarize-yourself-with-the-standard-library","title":"54. Familiarize yourself with the standard library.","text":"<ul> <li>The primary standard C++ library functionality consists of:<ul> <li>STL,</li> <li>iostreams,</li> <li>locales,</li> <li>C89 standard library.</li> </ul> </li> </ul>"},{"location":"C%2B%2B/effective_cpp/#55-familiarize-yourself-with-boost","title":"55. Familiarize yourself with Boost.","text":"<ul> <li>Boost is a community and website for the development of free, open source, peer-reviewed C++ libraries. Boost plays an influential role in C++ standardization.</li> </ul>"},{"location":"C%2B%2B/effective_cpp/#reference","title":"Reference","text":"<ul> <li>Effective C++ </li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/","title":"Effective Modern C++","text":"<p>This is a summary of the book \"Effective Modern C++\" which gives 42 specific ways to imporve your programs and designs by Scott Meyers.</p>"},{"location":"C%2B%2B/effective_modern_cpp/#1-understand-template-type-deduction","title":"1. Understand template type deduction.","text":"<ul> <li>During template type deduction, arguments that are references are treated as non-reference, i.e., their reference-ness is ignored.</li> <li>When deducing types for universal reference parameters, lvalue arguments get special treatment.</li> <li>when deducing types for by-value parameters, <code>const</code> and/or <code>volatile</code> arguments are treated as non-const and non-volatile.</li> <li>During template type deduction, arguments that are array or function names decay to pointers, unless they're used to initialize references.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#2-understand-auto-type-deduction","title":"2. Understand auto type deduction.","text":"<ul> <li><code>auto</code> type deduction is usually the same as template type deduction, buy <code>auto</code> type deduction assumes that a braced initializer represents a <code>std::initializer_list</code>, and template type deduction doesn't.</li> <li><code>auto</code> in a function return type or a lambda parameter implies template type deduction, not auto type deduction.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#3-understand-decltype","title":"3. Understand <code>decltype</code>.","text":"<ul> <li><code>decltype</code> almost always yields the type of a variable or expression without any modifications.</li> <li>For lvalue expressions of type T other than names, decltype always reports a type of <code>T&amp;</code>.</li> <li>C++14 supports <code>decltype(auto)</code>, which, like auto, deduces a type from its initializer, but it performs the type deduction using the <code>decltype</code> rules.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#4-know-how-to-view-deduced-types","title":"4. Know how to view deduced types.","text":"<ul> <li>Deduced types can often be seen using:<ul> <li>IDE editors,</li> <li>compiler error messages,</li> <li>Boost TypeIndex library.</li> </ul> </li> <li>The results of some tools may be neither helpful nor accurate, so an understanding of C++'s type deduction rules remains essential.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#5-prefer-auto-to-explicit-type-declarations","title":"5. Prefer <code>auto</code> to explicit type declarations.","text":"<ul> <li>The advances are:<ul> <li><code>auto</code> variables must be initialized,</li> <li>immune to type mismatches that can lead to portability or efficiency problems,</li> <li>can ease the process of refactoring,</li> <li>require less typing than variables with explicitly specified types.</li> </ul> </li> <li><code>auto</code>-typed variables are subject to the pitfalls described in iterm 2 and 6.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#6-use-the-explicitly-typed-initializer-idiom-when-auto-deduces-undesired-types","title":"6. Use the explicitly typed initializer idiom when auto deduces undesired types.","text":"<ul> <li>\"Invisible\" proxy types can cause auto to deduce the \"wrong\" type for an initializing expression.</li> <li>The explicitly typed initializer idiom forces auto to deduce the type you want it to have.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#7-distinguish-between-and-when-creating-objects","title":"7. Distinguish between <code>()</code> and <code>{}</code> when creating objects.","text":"<ul> <li>Braced initialization is the most widely usable initialization syntax, it prevents narrowing conversions, and it's immune to C++'s most vexing parse.</li> <li>During constructor overload resolution, braced initializers are matched to <code>std::initializer_list</code> parameters if at all possible, even if other constructors offer seemingly better matches.</li> <li>An example of where the choice between parentheses and braces can make a significant difference is creating a <code>std::vector&lt;numeric type&gt;</code> with two arguments.</li> <li>Choosing between parentheses and braces for object creation inside templates can be challenging.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#8-prefer-nullptr-to-0-and-null","title":"8. Prefer <code>nullptr</code> to <code>0</code> and <code>NULL</code>.","text":"<ul> <li>Avoid overloading on integral and pointer types.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#9-prefer-alias-declarations-to-typedefs","title":"9. Prefer alias declarations to typedefs.","text":"<ul> <li><code>typedef</code>s don't support templatization, but alias declarations do.</li> <li>Alias templates avoid the <code>::type</code> suffix and, in templates, the \"typename\" prefix often required to refer to  typedefs.</li> <li>C++14 offers alias templates for all the C++11 type traits transformations.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#10-prefer-scoped-enums-to-unscoped-enums","title":"10. Prefer <code>scoped enums</code> to <code>unscoped enums</code>.","text":"<ul> <li>C++98-style <code>enum</code>s are now known as unscoped enums.</li> <li>Enumerators of scoped enums are visible only within the enum. They convert to other types only with a cast.</li> <li>Both scoped and unscoped enums support specification of the underlying type. The default underlying type for scoped enums is int. Unscoped enums have no default underlying type.</li> <li>Scoped enums may always be forward-declared. Unscoped enums may be forward-declared only if their declaraation specifies an underlying type.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#11-prefer-deleted-functions-to-private-underfined-ones","title":"11. Prefer deleted functions to private underfined ones.","text":"<ul> <li>Any function may be deleted, including non-member functions and template instantiations.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#12-declare-overriding-functions-override","title":"12. Declare overriding functions <code>override</code>.","text":"<ul> <li>Declare overriding functions <code>override</code>.</li> <li>Member function reference qualifiers make it possible to treat lvalue and rvalue objects(<code>*this</code>) diffrently.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#13-prefer-const_iterators-to-iterators","title":"13. Prefer <code>const_iterator</code>s to <code>iterator</code>s.","text":"<ul> <li>In maximally generic code, prefer non-member versions of begin, end, rbegin, etc, over their member function counterparts.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#14-declare-functions-noexcept-if-they-wont-emit-exceptions","title":"14. Declare functions <code>noexcept</code> if they won't emit exceptions.","text":"<ul> <li><code>noexcept</code> is part of a function's interface, and that means that callers may depend on it.</li> <li><code>noexcept</code> functions are more optimizable than non-noexcept functions.</li> <li><code>noexcept</code> is particularly valuable for the move operations, swap, memory deallocation functions and destructions.</li> <li>Most functions are exception-neutral rather than <code>noexcept</code>.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#15-use-constexpr-whenever-possible","title":"15. Use <code>constexpr</code> whenever possible.","text":"<ul> <li><code>constexpr</code> objects are <code>const</code> and are initialized with values known during compilation.</li> <li><code>constexpr</code> functions can produce compile-time results when called with arguments whose values are known during compilation.</li> <li><code>constexpr</code> objects and functions may be used in a wider range of contexts than non-constexpr objects and functions.</li> <li><code>constexpr</code> is part of an object's or function's interface.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#16-make-const-member-functions-thread-safe","title":"16. Make <code>const</code> member functions thread safe.","text":"<ul> <li>Make <code>const</code> member functionsthreadsafe unless you're certain they'll never be used in a concurrent context.</li> <li>Use of <code>std::atomic</code> variables may offer better performance than a mutex, but they're suited for manipulation of only a single variable or memory location.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#17-understand-special-member-function-generation","title":"17. Understand special member function generation.","text":"<ul> <li>The special member functions are those compilers may generate on their own:<ul> <li>default constructor,</li> <li>destructor,</li> <li>copy constructor,</li> <li>copy operator,</li> <li>move constructor,</li> <li>move operator</li> </ul> </li> <li>Move operations are generated only for classes lacking explicitly declared move operations, copy operations and a destructor.</li> <li>The copy operations are generated only for classes lacking an explicitly declared copy operations, and it's deleted if a move operation is declared.</li> <li>Member function templates never suppress generation of special member functions.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#18-use-stdunique_ptr-for-exclusive-ownership-resource-management","title":"18. Use <code>std::unique_ptr</code> for exclusive-ownership resource management.","text":"<ul> <li><code>std::unique_ptr</code> is a small, fast, move-only smart pointer for managing resources with exclusive-ownership semantics.</li> <li>By default, resource destruction takes place via <code>delete</code>, but custom deleters can be specified. Stateful deleters and function pointers as deleters increase the size of <code>std::unique_ptr</code> objects.</li> <li>Converting a <code>std::unique_ptr</code> to a <code>std::shared_ptr</code> is easy.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#19-use-stdshared_ptr-for-shared-ownership-resource-management","title":"19. use <code>std::shared_ptr</code> for shared-ownership resource management.","text":"<ul> <li><code>std::shared_ptr</code>s offer convenience approaching that of garbage collection for the shared lifetime management of arbitrary resources.</li> <li>Compared to <code>std::unique_ptr</code>, <code>std::shared_ptr</code> objects are typically twice as big, incur overhead for control blocks, and require atomic reference count manipulations.</li> <li>Default resource destruction is via <code>delete</code>, but custom deleters are supported. The type of the deleter has no effect on the type of the <code>std::shared_ptr</code>.</li> <li>Avoid creating <code>std::shared_ptr</code>s from viariable of raw pointer type.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#20-use-stdweak_ptr-for-stdshared_ptr-like-pointers-that-can-dangle","title":"20. Use <code>std::weak_ptr</code> for <code>std::shared_ptr</code>-like pointers that can dangle.","text":"<ul> <li>Use <code>std::weak_ptr</code> for <code>std::shared_ptr</code>-like pointers that can dangle.</li> <li>Potential use cases for <code>std::weak_ptr</code> includes caching, observer lists, and the prevention of <code>std::shared_ptr</code> cycles.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#21-prefer-stdmake_unique-and-stdmake_shared-to-direct-use-of-new","title":"21. Prefer <code>std::make_unique</code> and <code>std::make_shared</code> to direct use of <code>new</code>.","text":"<ul> <li>Compared to direct use of <code>new</code>, <code>make</code> functions eliminate source code duplication, improve exception safety, and, for <code>std::make_shared</code> and <code>std::allocate_shared</code>, generate code that's smaller and faster.</li> <li>Situations where use of <code>make</code> functions is inappropriate include the need to specify custom deleters and a desire to pass braced initializers.</li> <li>For <code>std::shared_ptr</code>s, additional situations where <code>make</code> functions may be ill-advised include:<ul> <li>classes with custom memory management,</li> <li>systems with memory concerns, very large objects, and <code>std::weak_ptr</code>s that outlive the corresponding <code>std::shared_ptr</code>s.</li> </ul> </li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#22-when-using-the-pimplpointer-to-implementation-idiom-define-special-member-functions-in-the-implementation-file","title":"22. When using the Pimpl(Pointer to implementation) Idiom, define special member functions in the implementation file.","text":"<ul> <li>The Pimpl Idiom decreases build times by reducing compilation dependencies between class clients and class implementations.</li> <li>For <code>std::unique_ptr pImpl</code> pointers, declare special member functions in the class header, but implement them in the implementation file. Do this even if the default function implementations are acceptable.</li> <li>The above advice applies to <code>std::unique_ptr</code>, but no to <code>std::shared_ptr</code>.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#23-understand-stdmove-and-stdforward","title":"23. Understand <code>std::move</code> and <code>std::forward</code>.","text":"<ul> <li><code>std::move</code> performs an uncoditional cast to an rvalue. In and of itself, it doesn't move anything.</li> <li><code>std::forward</code> casts its argument to an rvalue only if that argument is bound to an rvalue. <code>Neither</code>std::move<code>nor</code>std::forward` do anything at runtime.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#24-distinguish-universal-references-from-rvalue-references","title":"24. Distinguish universal references from rvalue references.","text":"<ul> <li>If a function template parameter has type <code>T&amp;&amp;</code> for a deduced type <code>T</code>, or if an object is declared using <code>auto&amp;&amp;</code>, the parameter or object is a universal reference.</li> <li>If the form of the type declaration isn't precisely <code>type&amp;&amp;</code>, or if type deduction does not occur, <code>type&amp;&amp;</code> denotes an rvalue reference.</li> <li>Universal references correspond to rvalue references if they're initialized with rvalues. The correspond to lvalue references if they're initialized with lvalues.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#25-use-stdmove-on-rvalue-references-stdforward-on-universal-references","title":"25. Use <code>std::move</code> on rvalue references, <code>std::forward</code> on universal references.","text":"<ul> <li>Apply <code>std::move</code> to rvalue references and <code>std::forward</code> to universal references the last time each is used.</li> <li>Do the same thing for rvalue references and universal references being returned from functions that return by value.</li> <li>Never apply <code>std::move</code> or <code>std::forward</code> to local objects if they would otherwise be eligible for the return value optimization.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#26-avoid-overloading-on-universal-references","title":"26. Avoid overloading on universal references.","text":"<ul> <li>Overloading on universal references almost always leads to the universal reference overload being called more frequently than expected.</li> <li>Perfect-forwarding constructors are especially problematic, because they're typically better matches than copy constructors for non-cost lvalues, and they can hijack derived class calls to base class copy and move constructors.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#27-familiarize-yourselff-with-alternatives-to-overloading-on-universal-references","title":"27. Familiarize yourselff with alternatives to overloading on universal references.","text":"<ul> <li>Alternatives to the combination of universal references and overloading include:<ul> <li>the use of distinct function names,</li> <li>passing parameters by lvalue-reference-to-cost,</li> <li>passing parameters by value,</li> <li>using tag dispatch.</li> </ul> </li> <li>Constraining template via <code>std::enable_if</code> permits the use of universal references and  overloading together, but it controls the conditions under which compilers may use the universal reference overloads.</li> <li>Universal reference parameters often have efficiency advantages, but they typically have usability diadvantages.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#28-understand-reference-collapsing","title":"28. Understand reference collapsing.","text":"<ul> <li>Reference collapsing occurs in four contexts:<ul> <li>template instantiation,</li> <li><code>auto</code> type generation,</li> <li>creation and use of <code>typedef</code>s and alias declarations,</li> <li><code>decltype</code></li> </ul> </li> <li>When compilers generate a reference to a reference in a reference collapsing context, the result becomes a single reference. If either of the original references is an lvalue reference, the result is an lvalue reference. Otherwise it's an rvalue reference.</li> <li>Universaal references are rvalue references in contexts where type deduction distinguishes lvalues from rvalues and where reference collapsing occurs.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#29-assume-that-move-operations-are-not-present-not-cheap-and-not-used","title":"29. Assume that move operations are not present, not cheap, and not used.","text":"<ul> <li>Assume that move operations are not present, not cheap, and not used.</li> <li>In code with known types or support for move semantics, there is no need for assumptions.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#30-familiarize-yourself-with-perfect-forwarding-failure-cases","title":"30. Familiarize yourself with perfect forwarding failure cases.","text":"<ul> <li>Perfect forwarding fails when template type deduction fails or when it deduces the wrong type.</li> <li>The kinds of arguments that lead to perfect forwarding failure are:<ul> <li>braced initializers,</li> <li>null pointers expressed as <code>0</code> or <code>NULL</code>,</li> <li>declaration-only integral <code>const static</code> data members,</li> <li>template and overloaded function names,</li> <li>bitfields.</li> </ul> </li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#31-avoid-default-capture-modes","title":"31. Avoid default capture modes.","text":"<ul> <li>Default by-reference capture can lead to dangling references.</li> <li>Default by-value capture is susceptible to dangling pointers(especially <code>this</code>), and it misleadingly suggests that lambdas are self-contained.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#32-use-init-capture-to-move-objects-into-closures","title":"32. Use init capture to move objects into closures.","text":"<ul> <li>Use C++14's init capture to move objects into closures.</li> <li>In C++11, emulate init capture via:<ul> <li>hand-written classes,</li> <li><code>std::bind</code></li> </ul> </li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#33-use-decltype-on-auto-parameters-to-stdforward-them","title":"33. Use <code>decltype</code> on <code>auto&amp;&amp;</code> parameters to <code>std::forward</code> them.","text":"<ul> <li>Use <code>decltype</code> on <code>auto&amp;&amp;</code> parameters to <code>std::forward</code> them.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#34-prefer-lambda-to-stdbind","title":"34. Prefer lambda to <code>std::bind</code>.","text":"<ul> <li>Lambdas are more readable, more expressive, and may be more efficient than using <code>std::bind</code>.</li> <li>In C++11 only, <code>std::bind</code> may be useful for implementing move capture or for binding objects with templatized function call operators.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#35-prefer-task-based-programming-to-thread-based","title":"35. Prefer task-based programming to thread-based.","text":"<ul> <li>The <code>std::thread</code> API offers no direct way to get return values from asynchronouly run functions, and if those functions throw, the program is terminated.</li> <li>Threadd-base programming calls for manual management of thread exhaustion, oversubscription, load balancing, and adaptation to new platform.</li> <li>Task-based programming via <code>std::async</code> with the default launch policy handles most of these issues for you.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#36-specify-stdlaunchasync-if-asynchronicity-is-essential","title":"36. Specify <code>std::launch::async</code> if asynchronicity is essential.","text":"<ul> <li>The default launch policy for <code>std::async</code> permits both asynchronous and synchronous task execution.</li> <li>This flexibility leads to uncertainty when accessing <code>thread_local</code>s, implies that the task may never execute, and affects program logic for timeout-based wait calls.</li> <li>Specify <code>std::launch::async</code> if asynchronous task execution is essential.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#37-make-stdthreads-unjoinable-on-all-paths","title":"37. Make <code>std::threads</code> unjoinable on all paths.","text":"<ul> <li>Make <code>std::thread</code>s unjoinable on all paths.</li> <li>join-on-destruction can lead to difficult-to-debug performance anomalies.</li> <li>detach-on-destruction can lead to difficult-to-debug undefined behavior.</li> <li>Declare <code>std::thread</code> objects last in lists of data members.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#38-be-aware-of-varying-thread-handle-destructor-behavior","title":"38. Be aware of varying thread handle destructor behavior.","text":"<ul> <li>Future destructors normally just destroy the future's data members.</li> <li>The final future referring to a shared state for a non-deferred task launched via <code>std::async</code> blocks until the task completes.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#39-consider-void-function-for-one-shot-event-communication","title":"39. Consider <code>void</code> function for one-shot event communication.","text":"<ul> <li>For simple event communication, condvar-based designs require a superfluous mutex, impose constraints on the relative progress of detecting and reacting tasks, and require reacting tasks to verify that the event has taken place.</li> <li>Design employing a flag avoid those problems, but are based on polling, not blocking.</li> <li>Using <code>std::promise</code>s and futures dodges these issues, but the approach uses heap memory for shared states, and it's limited to one-shot communication.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#40-use-stdatomic-for-concurrency-volatile-for-special-memory","title":"40. Use <code>std::atomic</code> for concurrency, <code>volatile</code> for special memory.","text":"<ul> <li><code>std::atomic</code> is for data accessed from multiple threads without using mutexes, It's a tool for writing concurrent software.</li> <li><code>volatile</code> is for memory where reads and writes should not be optimized away. It's a tool for working with special memory.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#41-consider-pass-by-value-for-copyable-parameters-that-are-cheap-to-move-and-always-copied","title":"41. Consider pass by value for copyable parameters that are cheap to move and always copied.","text":"<ul> <li>For copyable, cheap-to-move parameters that are always copied, pass by value may be nearly as efficient as pass by reference, it's easier to implement, and it can generate less object code.</li> <li>Copying parameters via construction may be significantly more expensive than copying them via assignment.</li> <li>Pass by value is suject to the slicing problem, so it's typically inappropriate for base class parameter types.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#42-consider-emplacement-instead-of-insertion","title":"42. Consider emplacement instead of insertion.","text":"<ul> <li>In principle, emplacement functions should sometimes be more efficient than their insertion counterparts, and they should never be less efficient.</li> <li>In practice, they're most likely to be faster when:<ul> <li>the value being added is constructed into the container, not assigned;</li> <li>the argment types passed differ from the type held by the container;</li> <li>the container won't reject the value being added due to it being a duplicate.</li> </ul> </li> <li>Emplacement functions may perfrom type conversions that would be rejected by insertion functions.</li> </ul>"},{"location":"C%2B%2B/effective_modern_cpp/#reference","title":"Reference","text":"<ul> <li>Effective Modern C++</li> </ul>"},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/","title":"Hpipm\u5b89\u88c5","text":"<p>\u89c1 https://github.com/mayataka/hpipm-cpp</p>"},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/#_1","title":"\u5b89\u88c5\u5e93","text":""},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/#eigen3","title":"eigen3","text":"<pre><code>sudo apt install libeigen3-dev\n</code></pre>"},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/#blasfeo-and-hpipm","title":"blasfeo\u00a0and\u00a0hpipm","text":"<pre><code>git clone https://github.com/giaf/blasfeo\ngit clone https://github.com/giaf/hpipm\ncd blasfeo &amp;&amp; mkdir build &amp;&amp; cd build\ncmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBLASFEO_EXAMPLES=OFF \nmake -j8\nsudo make install -j\ncd ../../hpipm &amp;&amp; mkdir build &amp;&amp; cd build\ncmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DHPIPM_TESTING=OFF \nmake -j8\nsudo make install -j\n</code></pre>"},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/#_2","title":"\u8bbe\u7f6e\u52a8\u6001\u5e93\u8def\u5f84","text":"<pre><code>export LD_LIBRARY_PATH=/opt/blasfeo/lib:/opt/hpipm/lib:$LD_LIBRARY_PATH\n</code></pre>"},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/#hpipm-cpp","title":"\u5b89\u88c5hpipm-cpp","text":"<pre><code>git clone https://github.com/mayataka/hpipm-cpp\ncd hpipm-cpp\nmkdir build &amp;&amp; cd build\ncmake .. -DCMAKE_BUILD_TYPE=Release \nmake -j8\nsudo make install -j\n</code></pre>"},{"location":"C%2B%2B/hpipm%E5%AE%89%E8%A3%85/#_3","title":"\u4f7f\u7528","text":"<p>\u89c1hpipm-cpp/example(mpc\u3001ocpqp)</p>"},{"location":"C%2B%2B/linux%E5%92%8Cwindows%E4%B8%AD%E9%9D%99%E6%80%81%E5%BA%93%E5%92%8C%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E5%90%8E%E7%BC%80/","title":"Linux\u548cwindows\u4e2d\u9759\u6001\u5e93\u548c\u52a8\u6001\u5e93\u7684\u540e\u7f00","text":""},{"location":"C%2B%2B/osqp-eigen%E5%AE%89%E8%A3%85/","title":"Osqp eigen\u5b89\u88c5","text":""},{"location":"C%2B%2B/osqp-eigen%E5%AE%89%E8%A3%85/#_1","title":"\u5e93\u5b89\u88c5","text":""},{"location":"C%2B%2B/osqp-eigen%E5%AE%89%E8%A3%85/#eigen3","title":"eigen3","text":"<pre><code>sudo apt install libeigen3-dev\n</code></pre>"},{"location":"C%2B%2B/osqp-eigen%E5%AE%89%E8%A3%85/#osqp","title":"osqp","text":"<pre><code>git clone https://github.com/osqp/osqp.git\ncd osqp\ngit submodule\u00a0update --init\u00a0--recursive\ngit checkout -b 0.6.0 v0.6.0\nmkdir build &amp;&amp; cd build\ncmake ..\nmake -j7\nsudo make install\n</code></pre>"},{"location":"C%2B%2B/osqp-eigen%E5%AE%89%E8%A3%85/#_2","title":"\u6e90\u7801\u5b89\u88c5","text":"<pre><code>git clone https://github.com/robotology/osqp-eigen.git\ncd osqp-eigen\nmkdir build\ncd build\ncmake ..\nmake\nsudo make install\n</code></pre>"},{"location":"C%2B%2B/osqp-eigen%E5%AE%89%E8%A3%85/#_3","title":"\u4f7f\u7528","text":"<p>\u89c1osqp-eigen/example\uff08mpc\uff09</p>"},{"location":"C%2B%2B/priority_queue%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AF%94%E8%BE%83%E6%96%B9%E5%BC%8F/","title":"Priority queue\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u65b9\u5f0f","text":"<p>less\u5bf9\u5e94\u201c&lt;\u201d\u8fd0\u7b97\u7b26\uff0c</p> <p>greater\u5bf9\u5e94\"&gt;\"\u8fd0\u7b97\u7b26\u3002</p> <ul> <li>\u6700\u8fd1\u5b66\u4e60STL\uff0c\u53d1\u73b0STL\u9ed8\u8ba4\u90fd\u662f\u4f7f\u7528()\u6bd4\u8f83\u7684\uff0c\u9ed8\u8ba4\u6bd4\u8f83\u4f7f\u7528less\uff08\u5373'&lt;'\u8fd0\u7b97\u7b26\uff09\uff0c\u5982sort(a,a+n)\uff0c\u9ed8\u8ba4\u5c06\u6570\u7ec4\u6309\u7167\u9012\u589e\u7684\u987a\u5e8f\u6765\u6392\u5e8f\uff08\u524d\u9762\u7684\u5143\u7d20&lt;\u540e\u9762\u7684\u561b)\u3002</li> <li>\u4f46\u662f\u4f18\u5148\u961f\u5217\u7684\u6e90\u7801\u6bd4\u8f83\u5947\u7279\uff0c\u867d\u7136\u6309\u9053\u7406\u4f7f\u7528less\u6bd4\u8f83\u5e94\u8be5\u9ed8\u8ba4\u662f\u5c0f\u6839\u5806\uff08\u5373\u5806\u9876\u5143\u7d20\u6700\u5c0f\uff09\uff0c\u4f46\u662fpriority_queue&lt;int, vector\\&lt;int&gt;, less\\ &gt;\u5374\u662f\u5927\u6839\u5806\uff0c\u8981\u8bb0\u4f4fpriority_queue\u548csort\u662f\u76f8\u53cd\u7684\u3002"},{"location":"C%2B%2B/priority_queue%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AF%94%E8%BE%83%E6%96%B9%E5%BC%8F/#less","title":"less\u5bf9\u5e94\u5927\u9876\u5806\uff0c\u6839\u56e0\u5728\u4e8e\u5176\u5e95\u5c42\u5b9e\u73b0","text":"<p>less\uff1a\u5de6\u6570\u5c0f\u4e8e\u53f3\u6570\u65f6\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002</p> <p>\u5728\u5806\u7684\u8c03\u6574\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u5927\u9876\u5806\uff0c\u5982\u679c\u5f53\u524d\u63d2\u5165\u7684\u8282\u70b9\u503c\u5927\u4e8e\u5176\u7236\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5411\u4e0a\u8c03\u6574\u3002\u5176\u7236\u8282\u70b9\u7d22\u5f15\u5c0f\u4e8e\u5f53\u524d\u63d2\u5165\u8282\u70b9\u7684\u7d22\u5f15\uff0c\u4e5f\u5c31\u662f\u7236\u8282\u70b9\u662f\u5de6\u6570\uff0c\u63d2\u5165\u8282\u70b9\u662f\u53f3\u503c\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5de6\u6570\u5c0f\u4e8e\u53f3\u6570\u65f6\uff0c\u8981\u5411\u4e0a\u8c03\u6574\uff0c\u4e5f\u5c31\u662fCompare\u51fd\u6570\u5e94\u8be5\u8fd4\u56detrue\uff0c\u6b63\u597d\u662fless\u3002</p>"},{"location":"C%2B%2B/priority_queue%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AF%94%E8%BE%83%E6%96%B9%E5%BC%8F/#sort","title":"sort","text":"<pre><code>template &lt;class T&gt; struct greater {\n  bool operator() (const T&amp; x, const T&amp; y) const {return x&gt;y;}\n  typedef T first_argument_type;\n  typedef T second_argument_type;\n  typedef bool result_type;\n};\n\ntemplate &lt;class T&gt; struct less {\n  bool operator() (const T&amp; x, const T&amp; y) const {return x&lt;y;}\n  typedef T first_argument_type;\n  typedef T second_argument_type;\n  typedef bool result_type;\n};\n\n#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;iterator&gt;\n#include&lt;functional&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nint main()\n{\n    int A[]={1,4,3,7,10};\n    const int N=sizeof(A)/sizeof(int);\n    vector&lt;int&gt; vec(A,A+N);\n    ostream_iterator&lt;int&gt; output(cout,\" \");\n    cout&lt;&lt;\"Vector vec contains:\";\n    copy(vec.begin(),vec.end(),output);\n\n    cout&lt;&lt;\"\\nAfter greater&lt;int&gt;():\";\n    sort(vec.begin(),vec.end(),greater&lt;int&gt;());//\u5185\u7f6e\u7c7b\u578b\u4ece\u5927\u5230\u5c0f \n    copy(vec.begin(),vec.end(),output);\n\n    cout&lt;&lt;\"\\nAfter less&lt;int&gt;():\";\n    sort(vec.begin(),vec.end(),less&lt;int&gt;());   //\u5185\u7f6e\u7c7b\u578b\u5c0f\u5927\u5230\u5927 \n    copy(vec.begin(),vec.end(),output);\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/priority_queue%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AF%94%E8%BE%83%E6%96%B9%E5%BC%8F/#priority_queuesort","title":"priority_queue(\u4e0esort\u76f8\u53cd)","text":"<pre><code>struct cmp{\n\n        bool  operator ()  ( int a, int b){\n              return a &gt; b;\n       } \n}; \nstruct cmp1{\n       bool operator ()( int a ,int b ){\n           return a &lt; b;\n       }\n\npriority_queue&lt; int &gt; q;// \u9ed8\u8ba4q.top()\u662f\u4ece\u5927\u5230\u5c0f\u3002\npriority_queue &lt; int , vector&lt;int&gt; ,less&lt;int&gt; &gt; q;//q.top()\u4ece\u5927\u5230\u5c0f \u5927\u9876\u5806\npriority_queue &lt; int , vector&lt;int&gt;, greater&lt;int&gt; &gt; q; //q.top()\u4ece\u5c0f\u5230\u5927\uff0c\u9700\u8981vector\uff0c\u5c0f\u9876\u5806\npriority_queue &lt; int , vector&lt;int&gt; , cmp1  &gt; q;//q.top()\u4ece\u5927\u5230\u5c0f\uff0c\u9700\u8981vector\npriority_queue &lt; int , vector&lt;int&gt; , cmp &gt; q;//q.top()\u4ece\u5c0f\u5230\u5927\uff0c\u9700\u8981vector\n</code></pre>"},{"location":"C%2B%2B/typedef%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%88%E6%95%B0%E7%BB%84%EF%BC%89/","title":"Typedef\u7684\u7528\u6cd5\uff08\u6570\u7ec4\uff09","text":"<p>c++\u6807\u51c6\u5bf9\u4e8etypedef\u7684\u89e3\u91ca\uff1a\u4efb\u4f55\u58f0\u660e\u53d8\u91cf\u7684\u8bed\u53e5\u524d\u9762\u52a0\u4e0atypedef\uff0c\u539f\u6765\u662f\u53d8\u91cf\u7684\u90fd\u4f1a\u53d8\u6210\u4e00\u79cd\u7c7b\u578b\uff0c\u4e0d\u7ba1\u8fd9\u4e2a\u751f\u547d\u4e2d\u7684\u6807\u8bc6\u7b26\u53f7\u51fa\u73b0\u5728\u4e2d\u95f4\u8fd8\u662f\u9760\u540e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u628atypedef\u53bb\u6389\uff0c\u5c31\u662f\u4e00\u4e2a\u53d8\u91cf\u7684\u58f0\u660e\u3002</p> <p>\u6307\u9488\u6570\u7ec4\u548c\u6570\u7ec4\u6307\u9488\uff1a - \u9996\u5148\uff0c\u5bf9\u4e8e\u8bed\u53e5\u201cint*p1[5]\u201d\uff0c\u56e0\u4e3a\u201c[]\u201d\u7684\u4f18\u5148\u7ea7\u8981\u6bd4\u201c*\u201d\u8981\u9ad8\uff0c\u6240\u4ee5 p1 \u5148\u4e0e\u201c[]\u201d\u7ed3\u5408\uff0c\u6784\u6210\u4e00\u4e2a\u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u6570\u7ec4\u540d\u4e3a p1\uff0c\u800c\u201cint\u201d\u4fee\u9970\u7684\u662f\u6570\u7ec4\u7684\u5185\u5bb9\uff0c\u5373\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u6570\u7ec4\u5305\u542b 5 \u4e2a\u6307\u5411 int \u7c7b\u578b\u6570\u636e\u7684\u6307\u9488\uff0c\u5982\u56fe 1 \u6240\u793a\uff0c\u56e0\u6b64\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4*\u3002</p> <ul> <li>\u5176\u6b21\uff0c\u5bf9\u4e8e\u8bed\u53e5\u201cint(*p2)[5]\u201d\uff0c\u201c()\u201d\u7684\u4f18\u5148\u7ea7\u6bd4\u201c[]\u201d\u9ad8\uff0c\u201c*\u201d\u53f7\u548c p2 \u6784\u6210\u4e00\u4e2a\u6307\u9488\u7684\u5b9a\u4e49\uff0c\u6307\u9488\u53d8\u91cf\u540d\u4e3a p2\uff0c\u800c int \u4fee\u9970\u7684\u662f\u6570\u7ec4\u7684\u5185\u5bb9\uff0c\u5373\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cp2 \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u5305\u542b 5 \u4e2a int \u7c7b\u578b\u6570\u636e\u7684\u6570\u7ec4\uff0c\u5982\u56fe 2 \u6240\u793a\u3002\u5f88\u663e\u7136\uff0c\u5b83\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488</li> </ul>"},{"location":"C%2B%2B/typedef%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%88%E6%95%B0%E7%BB%84%EF%BC%89/#_1","title":"\u6570\u7ec4","text":"<p>typedef &lt;\u5143\u7d20\u7c7b\u578b\u5173\u952e\u5b57&gt; &lt;\u6570\u7ec4\u7c7b\u578b\u540d&gt;[&lt;\u5e38\u91cf\u8868\u8fbe\u5f0f&gt;];</p> <pre><code>typedef int num[5]; //\u5b9a\u4e49\u6570\u7ec4\u7c7b\u578b  \nusing num = int[5];\n\ntypedef char *num1[5]; //\u5b9a\u4e49\u6307\u9488\u6570\u7ec4\uff0c\u672c\u8eab\u662f\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u8fb9\u5b58\u4e865\u4e2achar\u7c7b\u578b\u7684\u6307\u9488\nusing num1 = char *[5];\n\ntypedef int(*num2)[5]; \u00a0//\u5b9a\u4e49\u6570\u7ec4\u6307\u9488\uff0c\u672c\u8eab\u662f\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2aint[5]\u7684\u6570\u7ec4\nusing num2 = int(*)[5];\n</code></pre> <pre><code>typedef int arrs[5];\nusing arrs=int[5];\n\ntypedef arrs * p_arr5;\nusing p_arr5 = arrs *;\n\ntypedef p_arr5 arrp10[10];\nusing arrp10=p_arr5[10];\n\narrs togs;       // togs\u662f\u5177\u67095\u4e2a\u5143\u7d20\u7684int\u6570\u7ec4\np_arr5 p2;      // p2\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5177\u6709\u5143\u7d20\u7684\u6570\u7ec4\narrp10  ap;    // ap\u662f\u5177\u6709\u5341\u4e2a\u5143\u7d20\u7684\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u5177\u67095\u4e2a\u5143\u7d20\u7684int\u6570\u7ec4\n</code></pre> <pre><code>//###### .\u5b9a\u4e49\u6307\u5411\u5305\u542b10\u4e2aint\u53d8\u91cf\u7684\u6570\u7ec4\u7684\u6307\u9488\u7c7b\u578b\ntypedef int (* pints)[10];\nint main()\n{\n    int arr[10] = {1,2,3,4};\n    pints pis = &amp;arr;\n    for(int i=0; i&lt;10; ++i)\n        cout &lt;&lt; (*pis)[i] &lt;&lt; \" \";\n}\n\u8f93\u51fa\uff1a  \n1 2 3 4 0 0 0 0 0 0\n</code></pre> <pre><code>###### \u5b9a\u4e49\u5305\u542b10\u4e2aint\u6307\u9488\u7684\u6570\u7ec4\u7c7b\u578b\ntypedef int * pInts[10];\nint main()\n{\n    int arr[10] = {1,2,3,4};\n    pInts pIs;\n    for(int i=0; i&lt;10; ++i)\n        pIs[i] = &amp;(arr[i]);\n    for(int i=0; i&lt;10; ++i)\n        cout &lt;&lt; *(pIs[i]) &lt;&lt; \" \";\n}\n\u8f93\u51fa\uff1a  \n5 6 7 8 0 0 0 0 0 0\n</code></pre>"},{"location":"C%2B%2B/typedef%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%88%E6%95%B0%E7%BB%84%EF%BC%89/#_2","title":"\u51fd\u6570\u6307\u9488","text":"<pre><code>typedef void*(*Fun)(int,int);\nusing P = void*(*)(int a);//\u7b49\u4ef7\u4e0a\u4e00\u6761\n</code></pre> <p>\u8fd9\u91cc\u5c06\u8fd4\u56de\u7c7b\u578b\u4e3avoid *\uff0c\u5165\u53c2\u4e3aint\u7684\u51fd\u6570\u7c7b\u578b\u547d\u540d\u4e3aFun\uff0c</p>"},{"location":"C%2B%2B/typedef%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%88%E6%95%B0%E7%BB%84%EF%BC%89/#_3","title":"\u666e\u901a\u7528\u6cd5","text":"<pre><code>typedef int my_int;\ntypedef int* my_int_point;\n</code></pre>"},{"location":"C%2B%2B/typedef%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%88%E6%95%B0%E7%BB%84%EF%BC%89/#usingtypedef","title":"using\u4ee3\u66fftypedef","text":""},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/","title":"\u4f7f\u7528gdb\u8c03\u8bd5","text":"<p>\u679c\u4f7f\u7528\u4e0a\u9762\u7684\u65b9\u5f0f\u6253\u5370\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u6253\u5370\u51fa\u6765\u7684\u53ea\u662f\u6307\u9488\u5730\u5740\u800c\u5df2\u3002\u90a3\u600e\u4e48\u6253\u5370\u51fa\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u5462\uff1f</p>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_1","title":"\u57fa\u672c\u547d\u4ee4","text":""},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_2","title":"\u8c03\u8bd5\u524d\u7684\u5224\u65ad","text":"<p>\u8981\u8c03\u8bd5C/C++\u7684\u7a0b\u5e8f\uff0c\u9996\u5148\u5728\u7f16\u8bd1\u65f6\uff0c\u8981\u4f7f\u7528gdb\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u5728\u4f7f\u7528gcc\u7f16\u8bd1\u6e90\u4ee3\u7801\u65f6\u5fc5\u987b\u52a0\u4e0a\u201c-g\u201d\u53c2\u6570\u3002\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\uff0c\u5426\u5219\u4e0d\u80fd\u4f7f\u7528GDB\u8fdb\u884c\u8c03\u8bd5\u3002</p> <p>\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u6709\u4e00\u4e2a\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u4e0d\u786e\u5b9a\u662f\u4e0d\u662f\u5e26\u6709-g\u53c2\u6570\uff0c\u5e26\u6709GDB\u8c03\u8bd5\uff0c\u8fd9\u4e2a\u65f6\u5019\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u547d\u4ee4\u9a8c\u8bc1\uff1agdb + \u4e8c\u8fdb\u5236\u6587\u4ef6\u540d</p> <p></p> <p>\u5982\u679c\u6ca1\u6709\u8c03\u8bd5\u4fe1\u606f\uff0c\u5219\u4f1a\u51fa\u73b0\uff1a Reading symbols from /home/minger/share/tencent/gdb/main\u2026(no debugging symbols found)\u2026done.</p> <p>\u5982\u679c\u5e26\u6709\u8c03\u8bd5\u529f\u80fd\uff0c\u4e0b\u9762\u4f1a\u63d0\u793a\uff1a</p> <p></p> <p>\u8bf4\u660e\u53ef\u4ee5\u8fdb\u884cGDB\u8c03\u8bd5\u3002</p> <p>\u4e5f\u53ef\u4ee5\u662f\u4f7f\u7528readelf\u547d\u4ee4\u67e5\u770b\uff1areadelf -S main|grep debug  \u5982\u679c\u6709debug\u8bf4\u660e\u6709\u8c03\u8bd5\u529f\u80fd\uff0c\u5982\u679c\u6ca1\u6709debug\u3002\u8bf4\u660e\u6ca1\u6709\u5e26\u6709\u8c03\u8bd5\u529f\u80fd\uff0c\u5219\u4e0d\u80fd\u88ab\u8c03\u8bd5\u3002</p> <p>\u5f00\u59cb\u8fdb\u5165\u6b63\u9898\uff0cGDB\u542f\u52a8\u8c03\u8bd5\u3002</p>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_3","title":"\u542f\u52a8\u8c03\u8bd5","text":"<p>\u7f16\u8bd1\u65f6\u589e\u52a0 -g\u53c2\u6570\u3002 gcc -g main.c -o main</p> <pre><code>#include &lt;stdio.h&gt;\nvoid Print(int i){\n    printf(\"hello,\u7a0b\u5e8f\u733f\u7f16\u7801 %d\\n\", i);\n}\nint main(int argc, char const *argv[]){\n    int i = 0;\n    for (i = 1; i &lt; 3; i++){\n        Print(i);\n    }\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u952e\u5165gdb\uff0c\u8fdb\u5165\u8c03\u8bd5\uff0c\u201c(gdb)\u201d\u4e3aGDB\u5185\u90e8\u547d\u4ee4\u5f15\u5bfc\u7b26\uff0c\u7b49\u5f85\u7528\u6237\u8f93\u5165GDB\u547d\u4ee4\u3002 </p> </li> <li> <p>\u4f7f\u7528\u201cfile\u201d\u547d\u4ee4\u8f7d\u5165\u88ab\u8c03\u8bd5\u7a0b\u5e8f main\uff08\u8fd9\u91cc\u7684 main \u5373\u524d\u9762gcc \u7f16\u8bd1\u8f93\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff1a\u5982\u679c\u6700\u540e\u4e00\u884c\u63d0\u793aReading symbols from /home/minger/share/tencent/gdb/main\u2026done. \u8868\u793a\u5df2\u7ecf\u52a0\u8f7d\u6210\u529f\u3002</p> </li> <li> <p>\u4f7f\u7528\u201cr\u201d\u547d\u4ee4\u6267\u884c\uff08Run\uff09\u88ab\u8c03\u8bd5\u6587\u4ef6\uff0c\u56e0\u4e3a\u5c1a\u672a\u8bbe\u7f6e\u4efb\u4f55\u65ad\u70b9\uff0c\u5c06\u76f4\u63a5\u6267\u884c\u5230\u7a0b\u5e8f\u7ed3\u675f\uff08\u5982\u679cmain\u6709\u53c2\u6570\uff0c\u5c31\u5728r \u540e\u8ddf\u4e0a\u53c2\u6570\uff09\uff1a </p> </li> </ul> <p></p>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#core","title":"\u5229\u7528core\u6392\u67e5\u6bb5\u9519\u8bef","text":""},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_4","title":"\u65b9\u6cd5\u4e00","text":"<p>\u52a0\u5165\u5df2\u7ecf\u751f\u6210\u4e86core\u6587\u4ef6\u3002\u7528gdb\u8c03\u8bd5\u8be5core\uff0c\u547d\u4ee4\u4e3a gdb core.test.3591 ,\u663e\u793a\u5982\u4e0b  program terminated with signal 11 \u544a\u8bc9\u6211\u4eec\u4fe1\u53f7\u4e2d\u65ad\u4e86\u6211\u4eec\u7684\u7a0b\u5e8f\uff0c\u53d1\u751f\u4e86\u6bb5\u9519\u8bef\u3002\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u6572\u547d\u4ee4 backtrace(bt) \u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u7684\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb\u3002</p>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_5","title":"\u65b9\u6cd5\u4e8c","text":"<p>\u4e5f\u53ef\u4ee5 gdb\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8f6f\u540e\u7528core-file\u547d\u4ee4+bt</p> <p>gdb \u53ef\u6267\u884c\u7a0b\u5e8f  \u8fdb\u5165gdb\u73af\u5883\u540e\uff0ccore-file core\u7684\u540d\u5b57  \u6572bt\u547d\u4ee4\uff0c\u8fd9\u662fgdb\u67e5\u770bback trace\u7684\u547d\u4ee4\uff0c\u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u7684\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb\u3002  \u53ef\u4ee5\u770b\u5230\u6700\u8fd1\u7684\u6808\u4e2d\u5b58\u50a8\u7684\u662f\u8c03\u7528\u4e86IO\u64cd\u4f5c\uff0c\u53ef\u4ee5\u770b\u5230main\u51fd\u6570\u768426\u884c\u51fa\u9519\u3002</p> <p>\u5230\u6b64\u4e3a\u6b62\uff0c\u5c31\u662fcore\u6587\u4ef6\u914d\u7f6e\u751f\u6210\u548c\u8c03\u8bd5\u65b9\u6cd5\u3002</p>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_6","title":"\u65ad\u70b9\u8bbe\u7f6e\u4e0e\u67e5\u770b\u6e90\u7801","text":"<ul> <li> <p>break \u6587\u4ef6\u540d:\u884c\u53f7\uff08\u8be5\u884c\u4e0d\u6267\u884c\uff09 </p> </li> <li> <p>break \u51fd\u6570\u540d </p> </li> <li> <p>\u6761\u4ef6\u65ad\u70b9\uff1abreak test.c:6 if num&gt;0</p> </li> <li> <p>\u67e5\u770b\u65ad\u70b9\uff1ainfo breakpoints</p> </li> <li> <p>\u5220\u9664\u65ad\u70b9\uff1adelete breakpoint</p> </li> <li> <p>\u67e5\u770b\u6e90\u7801\uff1a\u65ad\u70b9\u8bbe\u7f6e\u5b8c\u540e\uff0c\u5f53\u7a0b\u5e8f\u8fd0\u884c\u5230\u65ad\u70b9\u5904\u5c31\u4f1a\u6682\u505c\u3002\u6682\u505c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u65ad\u70b9\u9644\u8fd1\u7684\u4ee3\u7801\u3002\u67e5\u770b\u4ee3\u7801\u7684\u5b50\u547d\u4ee4\u662flist\uff0c\u7f29\u5199\u5f62\u5f0f\u4e3al\u3002 </p> </li> </ul>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_7","title":"\u5355\u6b65\u8c03\u8bd5\u4e0e\u67e5\u770b\u53d8\u91cf","text":"<p>\u65ad\u70b9\u9644\u8fd1\u7684\u4ee3\u7801\u4f60\u4e86\u89e3\u540e\uff0c\u8fd9\u65f6\u5019\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u5355\u6b65\u6267\u884c\u4e00\u6761\u4e00\u6761\u8bed\u53e5\u7684\u53bb\u6267\u884c\u3002\u53ef\u4ee5\u968f\u65f6\u67e5\u770b\u6267\u884c\u540e\u7684\u7ed3\u679c\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u80fd\u4f1a\u60f3\u77e5\u9053\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e00\u4e9b\u60c5\u51b5\uff0c\u5c31\u9700\u8981\u67e5\u770b\u53d8\u91cf\u7684\u503c\u3002\u4e0b\u9762\u4ecb\u7ecd\u5355\u6b65\u8c03\u8bd5\u4e0e\u8bbe\u7f6e\u53d8\u91cf\u3002</p> <ul> <li> <p>step\u5355\u6b65\u8fdb\u5165\uff08\u53ef\u7b80\u5199\u4e3as\uff09\uff0c\u5b83\u53ef\u4ee5\u5355\u6b65\u8ddf\u8e2a\u5230\u51fd\u6570\u5185\u90e8\u3002  \u4ece\u4e0a\u9762\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u5230\uff0c\u57285\u884c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u53ef\u89c1\uff0cstep\u547d\u4ee4\u8fdb\u5165\u5230\u4e86\u88ab\u8c03\u7528\u51fd\u6570\u4e2djudge_sd\u3002\u4f7f\u7528step\u547d\u4ee4\u4e5f\u4f1a\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4e00\u884c\u4e00\u884c\u7684\u5355\u6b65\u6267\u884c\u3002\u4f46\u662f\u5982\u679c\u6ca1\u6709\u8be5\u51fd\u6570\u6e90\u7801\uff0c\u9700\u8981\u8df3\u8fc7\u8be5\u51fd\u6570\u6267\u884c\uff0c\u53ef\u4f7f\u7528finish\u547d\u4ee4\uff0c\u7ee7\u7eed\u540e\u9762\u7684\u6267\u884c\u3002</p> </li> <li> <p>next\u5355\u6b65\u6267\u884c\uff08\u53ef\u7b80\u5199\u4e3an\uff09\u7528\u4e8e\u5728\u7a0b\u5e8f\u65ad\u4f4f\u540e\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6761\u8bed\u53e5\uff08\u4e0d\u8fdb\u5165\u51fd\u6570\u5185\u90e8\uff09\u3002  next\u547d\u4ee4\uff08\u53ef\u7b80\u5199\u4e3an\uff09\u7528\u4e8e\u5728\u7a0b\u5e8f\u65ad\u4f4f\u540e\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6761\u8bed\u53e5\u3002\u4e0a\u9762\u7684\u4fe1\u606f\u57285\u884c\u5904\u6253\u65ad\u70b9\uff0c\u7136\u540e\u8fd0\u884c\u52306\u884c\uff0c\u7136\u540e\u8f93\u5165 \u8fd0\u884cn 2\uff0c\u5219\u4f1a\u5355\u6b65\u6267\u884c\u4e24\u884c\u3002\u53ef\u89c1\uff0c\u4f7f\u7528next\u547d\u4ee4\u53ea\u4f1a\u5728\u672c\u65b9\u6cd5\u4e2d\u5355\u6b65\u6267\u884c\u3002</p> </li> <li> <p>continue\u547d\u4ee4\uff08\u53ef\u7b80\u5199\u4e3ac\uff09\u6216\u8005fg\uff0c\u5b83\u4f1a\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u518d\u6b21\u9047\u5230\u65ad\u70b9\u5904\u3002 \u6211\u4eec\u53ef\u80fd\u6253\u4e86\u591a\u5904\u65ad\u70b9\uff0c\u6216\u8005\u65ad\u70b9\u6253\u5728\u5faa\u73af\u5185\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u60f3\u8df3\u8fc7\u8fd9\u4e2a\u65ad\u70b9\uff0c\u751a\u81f3\u8df3\u8fc7\u591a\u6b21\u65ad\u70b9\u7ee7\u7eed\u6267\u884c\u8be5\u600e\u4e48\u505a\u5462\uff1f\u53ef\u4ee5\u4f7f\u7528continue\u547d\u4ee4\u3002\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u4ece\u6682\u505c\u5904\u7ee7\u7eed\u6267\u884c\u3002\u547d\u4ee4\u7684\u7b80\u5199\u5f62\u5f0f\u4e3ac</p> </li> </ul>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_8","title":"\u67e5\u770b\u53d8\u91cf","text":"<ul> <li>print\uff08\u7b80\u5199p\uff09 \u53d8\u91cf\u540d </li> </ul> <p>\u6253\u5370\u51fa\u7684\u53d8\u91cfi\u7684\u503c\u4e3a80\u3002</p> <p>\u5f53\u7136\uff0c\u591a\u4e2a\u51fd\u6570\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u4f1a\u6709\u540c\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u4e0a\u6587\u4ef6\u540d\u6216\u8005\u51fd\u6570\u540d\u6765\u533a\u5206\uff1a p 'testfile.c'::i p 'sum'::i</p> <ul> <li> <p>\u67e5\u770b\u6307\u9488\uff1a  \u5982\u679c\u4f7f\u7528\u4e0a\u9762\u7684\u65b9\u5f0f\u6253\u5370\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u6253\u5370\u51fa\u6765\u7684\u53ea\u662f\u6307\u9488\u5730\u5740\u800c\u5df2\u3002\u90a3\u600e\u4e48\u6253\u5370\u51fa\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u5462\uff1f</p> </li> <li> <p>\u67e5\u770b\u6307\u9488\u7684\u5185\u5bb9  \u4ec5\u4ec5\u4f7f\u7528\u53ea\u80fd\u6253\u5370\u7b2c\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u8981\u6253\u5370\u591a\u4e2a\u503c\uff0c\u540e\u9762\u8ddf\u4e0a\\@\u5e76\u52a0\u4e0a\u8981\u6253\u5370\u7684\u957f\u5ea6\u3002 \u6216\u8005\\@\u540e\u9762\u8ddf\u4e0a\u53d8\u91cf\u503c\uff1a\u5982\u4e0b\uff1a </p> </li> </ul>"},{"location":"C%2B%2B/%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/#_9","title":"\u8bbe\u7f6e\u53d8\u91cf","text":"<p>\u4f7f\u7528print\u547d\u4ee4\u67e5\u770b\u4e86\u53d8\u91cf\u7684\u503c\uff0c\u5982\u679c\u611f\u89c9\u8fd9\u4e2a\u503c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u60f3\u4fee\u6539\u4e0b\u8fd9\u4e2a\u503c\uff0c\u518d\u770b\u4e0b\u6267\u884c\u6548\u679c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u529e\u5462\uff1f\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u4fee\u6539\u4ee3\u7801\uff0c\u518d\u91cd\u65b0\u6267\u884c\u4ee3\u7801\u3002\u4f7f\u7528gdb\u7684set\u547d\u4ee4\uff0c\u4e00\u5207\u5c06\u53d8\u5f97\u66f4\u7b80\u5355\u3002</p>"},{"location":"C%2B%2B/%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%28%E4%BB%BF%E5%87%BD%E6%95%B0%29/","title":"\u51fd\u6570\u5bf9\u8c61(\u4eff\u51fd\u6570)","text":"<p>\u51fd\u6570\u5bf9\u8c61\u7684\u76f8\u5173\u7b14\u8bb0</p>"},{"location":"C%2B%2B/%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%28%E4%BB%BF%E5%87%BD%E6%95%B0%29/#1","title":"1. \u5b9a\u4e49","text":"<p>\u4e5f\u53eb\u4eff\u51fd\u6570\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u5c06<code>()</code>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u79f0\u4e3a\u51fd\u6570\u5bf9\u8c61\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u5c31\u662f\u51fd\u6570\u5bf9\u8c61\u3002\u51fd\u6570\u5bf9\u8c61\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u5f62\u5f0f\u770b\u8d77\u6765\u50cf\u51fd\u6570\u8c03\u7528\uff0c\u5b9e\u9645\u4e0a\u4e5f\u6267\u884c\u4e86\u51fd\u6570\u8c03\u7528\uff0c\u56e0\u800c\u5f97\u540d\u3002</p>"},{"location":"C%2B%2B/%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%28%E4%BB%BF%E5%87%BD%E6%95%B0%29/#2","title":"2. \u4e3e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\nclass CAverage\n{\npublic:\n    double operator()(int a1, int a2, int a3)\n    {  //\u91cd\u8f7d()\u8fd0\u7b97\u7b26\n        return (double)(a1 + a2 + a3) / 3;\n    }\n};\n\nint main()\n{\n    CAverage average;  //\u80fd\u591f\u6c42\u4e09\u4e2a\u6574\u6570\u5e73\u5747\u6570\u7684\u51fd\u6570\u5bf9\u8c61\n    cout &lt;&lt; average(3, 2, 3);  //\u7b49\u4ef7\u4e8e cout &lt;&lt; average.operator(3, 2, 3);\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%28%E4%BB%BF%E5%87%BD%E6%95%B0%29/#3-stl","title":"3. STL\u4e2d\u7684\u51fd\u6570\u5bf9\u8c61","text":"<p>\u5728STL\u4e2d\u5b9a\u4e49\u4e86\u5f88\u591a\u51fd\u6570\u5bf9\u8c61\u7c7b\u6a21\u677f</p> \u51fd\u6570\u5bf9\u8c61\u7c7b\u6a21\u677f \u6210\u5458\u51fd\u6570\u00a0T operator ( const T &amp;\u00a0x, const T &amp;\u00a0y) \u7684\u529f\u80fd plus \\&lt;T&gt; return x + y; minus \\&lt;T&gt; return x - y; multiplies \\&lt;T&gt; return x * y; divides \\&lt;T&gt; return x / y; modulus \\&lt;T&gt; return x % y; \u6210\u5458\u51fd\u6570\u00a0bool operator( const T &amp;\u00a0x, const T &amp;\u00a0y) \u7684\u529f\u80fd equal_to \\&lt;T&gt; return x  y; not_equal_to \\&lt;T&gt; return x! = y; greater \\&lt;T&gt; return x &gt;\u00a0y; less \\&lt;T&gt; return x &lt;\u00a0y; greater_equal \\&lt;T&gt; return x &gt;\u00a0= y; less_equal \\&lt;T&gt; return x &lt;= y; logical_and \\&lt;T&gt; return x &amp;&amp;\u00a0y; logical_or \\&lt;T&gt; return x |\u00a0y; \u6210\u5458\u51fd\u6570 T operator( const T &amp;\u00a0x) \u7684\u529f\u80fd negate \\&lt;T&gt; return - x; \u6210\u5458\u51fd\u6570\u00a0bool operator( const T &amp;\u00a0x) \u7684\u529f\u80fd logical_not \\&lt;T&gt; return ! x; <p>\u4f8b\u5982\uff0c\u5982\u679c\u8981\u6c42\u4e24\u4e2a double \u578b\u53d8\u91cf x\u3001y \u7684\u4e58\u79ef\uff0c\u53ef\u4ee5\u5199\uff1a multiplies\\ () (x, y) \u5176\u4e2dmultiplies\\ ()\u662f\u5c06\u51fd\u6570\u5bf9\u8c61\u7c7b\u5b9e\u4f8b\u5316\uff0c(x,y)\u662f\u8c03\u7528\u51fd\u6570 <p>less\u7684\u5b9e\u73b0 <pre><code>1. template &lt;class_Tp&gt;\n2. struct less\n3. {\n4. bool operator() (const_Tp &amp; __x, const_Tp &amp; __y) const\n5. { return __x &lt; __y; }\n6. };\n</code></pre></p>"},{"location":"C%2B%2B/%E5%88%A9%E7%94%A8protobuf%E5%AE%9E%E7%8E%B0C%2B%2B%E5%8F%8D%E5%B0%84/","title":"\u5229\u7528protobuf\u5b9e\u73b0C++\u53cd\u5c04","text":"<p>Protobuf \u6765\u5b9a\u4e49\u6570\u636e\uff0c\u5b83\u6709\u5f88\u591a\u597d\u5904\uff1a</p> <ul> <li>\u6709\u660e\u786e\u7684 schema \u5b9a\u4e49\uff0c\u4e14\u652f\u6301\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\uff1b\u5728\u8de8\u56e2\u961f\u5408\u4f5c\u65f6\u7279\u522b\u65b9\u4fbf\uff0cproto \u5b9a\u4e49\u6587\u4ef6\u5c31\u662f\u4ea4\u4e92\u534f\u8bae\uff0c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u7684\u6587\u6863</li> <li> <p>\u652f\u6301\u591a\u79cd\u6570\u636e\u683c\u5f0f\u7684\u5e8f\u5217\u5316\u548c\u89e3\u6790\uff1a</p> </li> <li> <p>\u4e8c\u8fdb\u5236\u683c\u5f0f\uff1a\u5360\u7528\u7a7a\u95f4\u5c0f\uff0c\u9002\u5408\u7f51\u7edc\u4f20\u8f93\u6216\u5e8f\u5217\u5316\u6587\u4ef6</p> </li> <li>Protobuf \u7684\u660e\u6587\u683c\u5f0f\uff08 \u4e00\u822c\u4f1a\u88ab\u79f0\u4e3a pbtxt\uff09\uff1a\u53ef\u4ee5\u901a\u8fc7 msg.DebugString() \u751f\u6210\uff0c\u914d\u7f6e\u7b80\u5355\uff0c\u53ef\u7528\u6765\u5199\u914d\u7f6e\u6587\u4ef6\uff1b\u8fd9\u4e2a\u683c\u5f0f\u53ef\u4ee5\u5728\u8c03\u8bd5\u65f6\u6253\u5370\u6570\u636e\uff0c\u5f88\u65b9\u4fbf</li> <li> <p>\u4e5f\u652f\u6301\u548c Json\u3001XML \u7b49\u6570\u636e\u683c\u5f0f\u76f8\u4e92\u8f6c\u6362</p> </li> <li> <p>\u5bf9\u4e8e C++ \u800c\u8a00\uff0cProtobuf \u53ef\u4ee5\u81ea\u5df1\u9ad8\u6548\u5730\u7ba1\u7406\u5185\u5b58\uff0c\u4e0d\u9700\u8981\u7528\u6237\u64cd\u5fc3</p> </li> <li>\u5f88\u597d\u7684\u524d\u540e\u517c\u5bb9\u6027\uff0c\u5728\u53ea\u4f7f\u7528 optional \u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u672c\u4e0d\u4f1a\u9047\u5230\u517c\u5bb9\u6027\u7684\u95ee\u9898</li> <li>Protobuf \u652f\u6301\u53cd\u5c04\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5b9e\u73b0\u66f4\u597d\u7684\u4ee3\u7801\u590d\u7528</li> </ul> <p>Protobuf \u7684\u53cd\u5c04\u6307\u7684\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u83b7\u53d6 Protobuf Message \u7684\u76f8\u5173\u4fe1\u606f\uff1a</p> <ul> <li>Message \u7684\u5b57\u6bb5\u4fe1\u606f\uff0c\u5305\u62ec\u5b57\u6bb5\u540d\uff0c\u5b57\u6bb5\u7c7b\u578b\u7b49</li> <li>\u8bfb\u53d6\u6216\u4fee\u6539 Message \u5b57\u6bb5\u7684\u503c</li> <li>\u57fa\u4e8e Message \u540d\u79f0\u521b\u5efa\u6216\u89e3\u6790\u5bf9\u5e94\u7684 C++ \u5bf9\u8c61\uff08\u8fd9\u4e2a\u529f\u80fd\u672c\u6587\u672a\u4f7f\u7528\u5230\uff09</li> </ul>"},{"location":"C%2B%2B/%E5%88%A9%E7%94%A8protobuf%E5%AE%9E%E7%8E%B0C%2B%2B%E5%8F%8D%E5%B0%84/#protobuf","title":"\u5982\u4f55\u4f7f\u7528 Protobuf \u53cd\u5c04","text":"<p>\u53cd\u5c04\u6709\u4e09\u4e2a\u91cd\u8981\u7684\u7c7b\uff1a</p> <ul> <li>Descriptor\uff1a\u8fd9\u4e2a\u7c7b\u662f\u5bf9\u5e94\u4e00\u79cd Message \u7c7b\u578b\u7684\uff0c\u76f8\u540c\u7c7b\u578b Message \u7684 Descriptor \u662f\u4e00\u6837\u7684\u3002\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u83b7\u53d6 Message \u6709\u591a\u5c11\u4e2a\u5b57\u6bb5\uff0c\u4ee5\u53ca\u83b7\u53d6\u5b57\u6bb5\u7684 FieldDescriptor</li> <li>FieldDescriptor\uff1a\u8fd9\u4e2a\u7c7b\u662f\u7528\u6765\u63cf\u8ff0\u67d0\u4e2a\u5177\u4f53\u5b57\u6bb5\u76f8\u5173\u7684\u4fe1\u606f\u7684\uff0c\u5305\u62ec\u5b57\u6bb5\u7684\u7c7b\u578b\u3001\u540d\u79f0\u3001\u7f16\u53f7\u7b49</li> <li>Reflection\uff1a\u901a\u8fc7\u5b83\u548c FieldDescriptor\uff0c\u6211\u4eec\u5c31\u80fd\u5b9e\u73b0\u5bf9\u5177\u4f53\u5b57\u6bb5\u7684\u8bfb\u6216\u8005\u5199</li> </ul> <p>\u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u8be5\u600e\u6837\u4f7f\u7528 Protobuf \u53cd\u5c04\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u5b9a\u4e49\u4e86\u4e0b\u9762\u4e00\u4e2a Protobuf Message\uff1a</p> <pre><code>syntax = \"proto3\";\n\nmessage Test {\n  int32 bar = 1;\n  string foo = 2;\n}\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u4ee3\u7801\u6765\u904d\u5386\u4e00\u4e2a Test Message \u6765\u6253\u5370\u5b83\u6240\u6709\u7684\u5b57\u6bb5\u540d\uff0c\u4ee5\u53ca\u5bf9\u5e94\u5b57\u6bb5\u7684\u5177\u4f53\u503c\uff1a</p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include \"test.pb.h\"\n#include &lt;google/protobuf/message.h&gt;\n\nusing namespace std;\n\nusing google::protobuf::Message;\nusing google::protobuf::Reflection;\nusing google::protobuf::Descriptor;\nusing google::protobuf::FieldDescriptor;\n\nint main(int argc, char *argv[]) {\n  Test msg;\n\n  msg.set_bar(42);\n  msg.set_foo(\"I'm hiber\");\n\n  Descriptor* msg_descriptor = msg.GetDescriptor();\n\n  for (int i = 0; i &lt; msg_descriptor-&gt;field_count(); ++i) {\n    FieldDescriptor* fd_descriptor = msg_descriptor-&gt;field(i);\n\n    string name = fd_descriptor-&gt;name();\n    printf(\"Field name: %s\\n\", name.c_str());\n  }\n\n  Reflection* msg_reflection = msg.GetReflection();\n  FieldDescriptor* bar_field = msg_descriptor-&gt;FindFieldByName(\"bar\");\n  if (bar_field != nullptr) {\n    int bar_val = msg_reflection-&gt;GetInt32(msg, bar_field);\n    printf(\"Bar value: %d\\n\", bar_val);\n  }\n\n  FieldDescriptor* foo_field = msg_descriptor-&gt;FindFieldByName(\"bar\");\n  if (foo_field != nullptr) {\n    string foo_val = msg_reflection-&gt;GetString(msg, foo_field);\n    printf(\"Foo value: %s\\n\", foo_val.c_str());\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E5%88%A9%E7%94%A8protobuf%E5%AE%9E%E7%8E%B0C%2B%2B%E5%8F%8D%E5%B0%84/#_1","title":"\u57fa\u4e8e\u5b57\u6bb5\u540d\u8fdb\u884c\u503c\u590d\u5236","text":"<p>\u6709\u65f6\u6211\u4eec\u9700\u8981\u7528\u4e24\u4e2a\u4e0d\u540c\u7684 Protobuf Message \u53bb\u8868\u793a\u67d0\u4e2a\u76f8\u540c\u7684\u4e1a\u52a1\u5b9e\u4f53\u3002\u4f8b\u5982\u5728\u6211\u4eec\u7684\u5e7f\u544a\u7cfb\u7edf\u91cc\u4f1a\u6709\u4e09\u79cd\u4e0d\u540c\u7684 Message \u6765\u5b9a\u4e49\u4e00\u4e2a\u5e7f\u544a\uff1a</p> <ul> <li>RetrievalAd\uff1a\u53ec\u56de\u6a21\u5757\u8fd4\u56de\u7ed3\u679c\u91cc\u5b9a\u4e49\u7684\u5e7f\u544a\uff0c\u4f1a\u5305\u62ec\u5e7f\u544a\u5728\u5012\u6392\u91cc\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5e7f\u544a ID\uff0c\u51fa\u4ef7\u7b49\u4fe1\u606f</li> <li>Element\uff1a\u5e7f\u544a\u5f15\u64ce\u5185\u90e8\u7528\u6765\u8868\u793a\u5e7f\u544a\u7684 Message\uff0c\u9664\u4e86 RetrievalAd \u91cc\u7684\u4fe1\u606f\uff0c\u8fd8\u4f1a\u5305\u62ec\u5e7f\u544a\u7684 pctr\u3001pcvr \u7b49\u4fe1\u606f</li> <li>AdResult\uff1a\u5e7f\u544a\u5f15\u64ce\u8fd4\u56de\u7ed9\u5916\u90e8\u7684\u4fe1\u606f\uff0c\u4f1a\u5305\u62ec\u5e7f\u544a\u7684\u7d20\u6750\u4fe1\u606f\u7b49</li> </ul> <p>\u8fd9\u51e0\u79cd\u7ed3\u6784\u91cc\u4f1a\u6709\u5f88\u591a\u5b57\u6bb5\u662f\u4e00\u6837\u7684\uff0c\u5b83\u4eec\u6709\u76f8\u540c\u7684\u7c7b\u578b\u548c\u540d\u79f0\uff0c\u5982\u679c\u624b\u5de5\u8fdb\u884c\u8d4b\u503c\u7684\u8bdd\u5c31\u5f88\u9ebb\u70e6\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u6765\u5b9e\u73b0\u76f8\u540c\u540d\u79f0\u5b57\u6bb5\u7684\u81ea\u52a8\u8d4b\u503c\uff1a</p> <pre><code>bool FillMsgWithExistFields(const Message&amp; in, Message* out) {\n#define FILL_FIELD_TYPE(cpptype, method) \\\n  if (type == FieldDescriptor::CPPTYPE_##cpptype) { \\\n    auto value = in_ref-&gt;Get##method(in, in_fd); \\\n    out_ref-&gt;Set##method(out, out_fd, value); \\\n    continue; \\\n  }\n\n  if (out == nullptr) {\n    return false;\n  }\n  auto* in_des = in.GetDescriptor();\n  auto* out_des = out-&gt;GetDescriptor();\n  auto* in_ref = in.GetReflection();\n  auto* out_ref = out-&gt;GetReflection();\n\n  for (int i = 0; i &lt; in_des-&gt;field_count(); ++i) {\n    auto* in_fd = in_des-&gt;field(i);\n    const auto&amp; to_field_name = in_fd-&gt;options().GetExtension(to_field);\n    const FieldDescriptor* out_fd = nullptr;\n    const auto&amp; in_name = in_fd-&gt;name();\n    if (!to_field_name.empty()) {\n      out_fd = out_des-&gt;FindFieldByName(to_field_name);\n    } else {\n      out_fd = out_des-&gt;FindFieldByName(in_name);\n    }\n\n    if (out_fd == nullptr) {\n      continue;\n    }\n\n    if (out_fd-&gt;is_repeated()) {\n      AddRepeatField(*in_fd, *out_fd, in, out);\n      continue;\n    }\n\n    // skip field while repeated type between in and out is not match\n    if (in_fd-&gt;is_repeated()) {\n      continue;\n    }\n\n    if (!in_fd-&gt;is_repeated() &amp;&amp; !in_ref-&gt;HasField(in, in_fd)) {\n      VLOG(Vlog::DETAIL) &lt;&lt; \"Field is empty, skip \" &lt;&lt; in_name;\n      continue;\n    }\n\n    if (IsPbNumber(in_fd-&gt;cpp_type()) &amp;&amp; IsPbNumber(out_fd-&gt;cpp_type())) {\n      SetPbField(out, *out_fd, GetPbMsgInt(in, *in_fd));\n      continue;\n    }\n\n    if (in_fd-&gt;cpp_type() != out_fd-&gt;cpp_type()) {\n      LOG_EVERY_N(ERROR, 10) &lt;&lt; \"Field type is different: \" &lt;&lt; in_name;\n      continue;\n    }\n\n    auto type = in_fd-&gt;cpp_type();\n    FILL_FIELD_TYPE(INT32, Int32);\n    FILL_FIELD_TYPE(UINT32, UInt32);\n    FILL_FIELD_TYPE(INT64, Int64);\n    FILL_FIELD_TYPE(UINT64, UInt64);\n    FILL_FIELD_TYPE(FLOAT, Float);\n    FILL_FIELD_TYPE(DOUBLE, Double);\n    FILL_FIELD_TYPE(BOOL, Bool);\n    FILL_FIELD_TYPE(STRING, String);\n\n    VLOG(Vlog::AD) &lt;&lt; \"Not supported message type: \" &lt;&lt; out_fd-&gt;type_name();\n  }\n\n  return true;\n\n#undef FILL_FIELD_TYPE\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u7701\u53bb\u4f8b\u5982 AddRepeatField \u4e4b\u7c7b\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4ed6\u4eec\u4e5f\u662f\u7c7b\u4f3c\u7684\u539f\u7406\uff0c\u4e0d\u96be\u5b9e\u73b0\u3002</p>"},{"location":"C%2B%2B/%E5%88%A9%E7%94%A8protobuf%E5%AE%9E%E7%8E%B0C%2B%2B%E5%8F%8D%E5%B0%84/#protobuf_1","title":"\u57fa\u4e8e Protobuf \u53cd\u5c04\u5b9e\u73b0\u81ea\u52a8\u89c4\u5219\u5224\u5b9a","text":"<p>\u6709\u65f6\u6211\u4eec\u9700\u8981\u57fa\u4e8e\u4e1a\u52a1\u8981\u6c42\u5bf9\u4e00\u4e9b Message \u8fdb\u884c\u6709\u6548\u6027\u5224\u65ad\uff0c\u8fd9\u4e9b\u5224\u65ad\u901a\u5e38\u662f\u786e\u5b9a\u67d0\u51e0\u4e2a\u5b57\u6bb5\u662f\u4e0d\u662f\u6307\u5b9a\u7684\u53d6\u503c\uff0c\u9488\u5bf9\u6bcf\u4e2a Message \u90fd\u5b9e\u73b0\u5224\u5b9a\u51fd\u6570\u4f1a\u663e\u5f97\u5f88\u7e41\u7410\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u548c options \u6765\u5b9e\u73b0\u57fa\u4e8e\u914d\u7f6e\u7684\u89c4\u5219\u5224\u5b9a\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u5982\u4e0b\u7684\u5e7f\u544a Message \u5b9a\u4e49\uff1a</p> <pre><code>message AdGroup {\n  uint64 ad_group_id         = 1 ;\n  uint64 advertiser_id       = 2 ;\n\n  // reserved fields numbers\n  uint32 is_deleted          = 50;\n  uint32 operate_status = 51;\n} \n</code></pre> <p>\u5e7f\u544a\u53ea\u6709\u5728 is_deleted != 0 \u548c operate_status == 1 \u7684\u65f6\u5019\u624d\u662f\u5408\u6cd5\u7684\u3002</p> <p>\u9488\u5bf9\u8fd9\u4e2a\u9700\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e24\u4e2a FieldOptions\uff1a</p> <pre><code>import \"google/protobuf/descriptor.proto\";\n\nextend google.protobuf.FieldOptions {\n  int64 valid_int_value = 51000;\n  bool valid_be_default = 51001;\n}\n</code></pre> <p>\u7ed9\u4e4b\u524d\u7684\u7ed3\u6784\u52a0\u4e0a\u5bf9\u5e94\u7684 option \u914d\u7f6e\uff1a</p> <pre><code>message AdGroup {\n  uint64 ad_group_id         = 1 ;\n  uint64 advertiser_id       = 2 ;\n\n  // reserved fields numbers\n  uint32 is_deleted          = 50 [(valid_be_default) = true];\n  uint32 operate_status = 51 [(valid_int_value) = 1];\n} \n</code></pre> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u51fd\u6570\u6765\u5224\u65ad\u4e00\u4e2a Message \u662f\u4e0d\u662f\u6709\u6548\u7684\uff1a</p> <pre><code>bool IsPbMsgValid(const Message&amp; msg) {\n  auto* des = msg.GetDescriptor();\n  auto* ref = msg.GetReflection();\n\n  for (int i = 0; i &lt; des-&gt;field_count(); ++i) {\n    auto* fd_des = des-&gt;field(i);\n\n    // Valid the field should be default value\n    if (fd_des-&gt;options().HasExtension(valid_be_default)) {\n      if (ref-&gt;HasField(msg, fd_des)) {\n        return false;\n      }\n    }\n\n    if (fd_des-&gt;options().HasExtension(valid_int_value)) {\n      auto valid_val = fd_des-&gt;options().GetExtension(valid_int_value);\n\n      if (GetPbMsgInt(msg, *fd_des) != valid_val) {\n        VLOG(Vlog::AD) &lt;&lt; \"Fail to validate, valid_int_value: field \" &lt;&lt; fd_des-&gt;name()\n            &lt;&lt; \" should be \" &lt;&lt; valid_val;\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n</code></pre> <p>\u4ee5\u540e\u67d0\u4e2a Message \u6709\u7c7b\u4f3c\u7684\u6709\u6548\u6027\u5224\u5b9a\u8981\u6c42\u65f6\uff0c\u76f4\u63a5\u5728 proto \u91cc\u52a0\u5bf9\u5e94\u7684 option \u5373\u53ef\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u5224\u5b9a\u89c4\u5219\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u6b21\u3002</p>"},{"location":"C%2B%2B/%E5%88%A9%E7%94%A8protobuf%E5%AE%9E%E7%8E%B0C%2B%2B%E5%8F%8D%E5%B0%84/#_2","title":"\u603b\u7ed3","text":"<p>Protobuf \u53cd\u5c04\u5728\u6211\u4eec\u7684\u7ebf\u4e0a\u6548\u679c\u5e7f\u544a\u7cfb\u7edf\u91cc\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5728\u7ebf\u4e0a\u5cf0\u503c 1 \u4e07\u5de6\u53f3\u7684 QPS \u4e0b\u4e5f\u6ca1\u6709\u5bfc\u81f4\u989d\u5916\u7684\u6027\u80fd\u8d1f\u8f7d\u3002</p> <p>\u901a\u8fc7 Protobuf \u53cd\u5c04\u7684\u4f7f\u7528\uff0c\u80fd\u8ba9\u6211\u4eec\u5feb\u901f\u652f\u6301\u5f88\u591a\u4e1a\u52a1\u9700\u8981\uff0c\u4f8b\u5982\u5728\u652f\u6301\u65b0\u7684\u521b\u610f\u6837\u5f0f\u65f6\uff0c\u53ea\u9700\u8981\u4fee\u6539 proto \u5b9a\u4e49\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ee3\u7801\u4fee\u6539\u3002\u540c\u65f6\uff0c\u53cd\u5c04\u4e5f\u51cf\u5c11\u4e86\u5f88\u591a\u53ef\u80fd\u7684\u91cd\u590d\u4ee3\u7801\uff0c\u964d\u4f4e\u4e86\u7ef4\u62a4\u6210\u672c\u3002</p>"},{"location":"C%2B%2B/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","title":"\u5355\u4f8b\u6a21\u5f0f","text":"<p>\u9700\u8981\u628a\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\uff0c\u8fd9\u6837\u5c31\u65e0\u6cd5\u5728\u7c7b\u5916\u521b\u5efa\u5b9e\u4f8b\u3002 <pre><code>int main() {\n    Singleton obj; // \u9519\u8bef\uff1aSingleton\u7684\u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\n}\n</code></pre> \u4f46\u662f\u53ef\u4ee5  Singleton* Singleton::instance = new Singleton();\uff0c\u867d\u7136\u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\uff0c\u4f46\u5b83\u5728<code>Singleton</code>\u7c7b\u5185\u90e8\u662f\u53ef\u8bbf\u95ee\u7684\u3002 \u5f53\u4f60\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u8005\u9759\u6001\u6210\u5458\u521d\u59cb\u5316\u4e2d\u8c03\u7528\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u4ecd\u7136\u5904\u4e8e\u7c7b\u7684\u201c\u5185\u90e8\u201d\u8303\u56f4\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48new Singleton();\u662f\u5408\u6cd5\u7684\u3002\u5728\u8fd9\u91cc\uff0c<code>Singleton::instance</code>\u7684\u521d\u59cb\u5316\u53d1\u751f\u5728\u7c7b\u7684\u201c\u5185\u90e8\u201d\uff0c\u56e0\u6b64\u53ef\u4ee5\u8c03\u7528\u79c1\u6709\u7684\u6784\u9020\u51fd\u6570\u3002\u8fd9\u4e0e\u5728\u7c7b\u7684\u5916\u90e8\u5c1d\u8bd5\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff08\u5982<code>Singleton obj;</code>\uff09\u662f\u4e0d\u540c\u7684</p>"},{"location":"C%2B%2B/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_1","title":"\u6076\u6c49\u6a21\u5f0f\uff1a","text":"<p>\u997f\u6c49\u6a21\u5f0f\u662f\u6307\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u5c31\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u5c06\u5355\u4f8b\u5bf9\u8c61\u5b9a\u4e49\u4e3a\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u5e76\u5728\u5b9a\u4e49\u65f6\u76f4\u63a5\u521d\u59cb\u5316\u3002\u5b9e\u73b0\u997f\u6c49\u6a21\u5f0f\u7684\u5173\u952e\u5728\u4e8e\u5c06\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a\u79c1\u6709\uff0c\u8fd9\u6837\u5c31\u65e0\u6cd5\u5728\u7c7b\u5916\u521b\u5efa\u5b9e\u4f8b\u3002</p> <p>\u7f3a\u70b9\uff1a\u997f\u6c49\u6a21\u5f0f\u7684\u7f3a\u70b9\u5728\u4e8e\u65e0\u6cd5\u63a7\u5236\u5355\u4f8b\u5bf9\u8c61\u7684\u521b\u5efa\u65f6\u95f4\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u542f\u52a8\u8f83\u6162 \u4f18\u70b9\uff1a\u7ebf\u7a0b\u5b89\u5168</p> <pre><code>class Singleton {\npublic:\n    static Singleton* getInstance() {\n        return instance;\n    }\nprivate:\n    Singleton() {} // \u5c06\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a\u79c1\u6709\n    static Singleton* instance; // \u5b9a\u4e49\u4e3a\u9759\u6001\u6210\u5458\u53d8\u91cf\u5e76\u76f4\u63a5\u521d\u59cb\u5316\n};\nSingleton* Singleton::instance = new Singleton(); // \u76f4\u63a5\u521d\u59cb\u5316\u5355\u4f8b\u5bf9\u8c61\n\nint main() {\n    Singleton* obj1 = Singleton::getInstance();\n    Singleton* obj2 = Singleton::getInstance();\n    // obj1\u548cobj2\u6307\u5411\u540c\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_2","title":"\u61d2\u6c49\u6a21\u5f0f\uff1a","text":"<p>\u61d2\u6c49\u6a21\u5f0f\u662f\u6307\u5728\u9700\u8981\u65f6\u624d\u521b\u5efa\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u5728\u7b2c\u4e00\u6b21\u8c03\u7528getInstance()\u65b9\u6cd5\u65f6\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61\u3002\u5b9e\u73b0\u61d2\u6c49\u6a21\u5f0f\u7684\u5173\u952e\u5728\u4e8e\u5c06\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a\u79c1\u6709\uff0c\u8fd9\u6837\u5c31\u65e0\u6cd5\u5728\u7c7b\u5916\u521b\u5efa\u5b9e\u4f8b\uff0c\u7136\u540e\u4f7f\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u4fdd\u5b58\u5355\u4f8b\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u901a\u8fc7getInstance()\u65b9\u6cd5\u8fd4\u56de\u8be5\u6307\u9488\uff0c\u5b9e\u73b0\u5bf9\u5355\u4f8b\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002</p> <p>\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u4e0d\u5b89\u5168 \u4f18\u70b9\uff1a\u542f\u52a8\u5feb</p> <pre><code>class Singleton {\npublic:\n    static Singleton* getInstance() {\n        if (instance == nullptr) {\n            instance = new Singleton();\n        }\n        return instance;\n    }\nprivate:\n    Singleton() {} // \u5c06\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a\u79c1\u6709\n    static Singleton* instance; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u4fdd\u5b58\u5355\u4f8b\u5bf9\u8c61\u7684\u6307\u9488\n};\nSingleton* Singleton::instance = nullptr; // \u521d\u59cb\u5316\u5355\u4f8b\u6307\u9488\u4e3anullptr\n\nint main() {\n    Singleton* obj1 = Singleton::getInstance();\n    Singleton* obj2 = Singleton::getInstance();\n    // obj1\u548cobj2\u6307\u5411\u540c\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\n    return 0;\n}\n</code></pre> <p>\u4e3a\u4e86\u89e3\u51b3\u61d2\u6c49\u6a21\u5f0f\u4e2d\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cc\u91cd\u9501\u5b9a\uff08DCL, Double-Checked Locking\uff09\uff1a <pre><code>#include &lt;mutex&gt;\n\nclass Singleton {\npublic:\n    static Singleton* getInstance() {\n        if (instance == nullptr) {\n            std::lock_guard&lt;std::mutex&gt; lock(mtx);//std::lock_guar\u4e0emutex\u914d\u5408\u4f7f\u7528\uff0c\u628a\u9501\u653e\u5230lock_guard\u4e2d\u65f6\uff0cmutex\u81ea\u52a8\u4e0a\u9501\uff0clock_guard\u6790\u6784\u65f6\uff0c\u540c\u65f6\u628amutex\u89e3\u9501\n            //\u4e5f\u53ef\u4ee5\uff1a\n            //mutex.lock();\n            if (instance == nullptr) {\n                instance = new Singleton();\n            }\n            //mutex.unlock();\n        }\n        return instance;\n    }\nprivate:\n    Singleton() {}\n    static Singleton* instance;\n    static std::mutex mtx;\n};\n\nSingleton* Singleton::instance = nullptr;\nstd::mutex Singleton::mtx;\n</code></pre></p>"},{"location":"C%2B%2B/%E5%A4%9A%E6%80%81/","title":"\u591a\u6001","text":"<p>\u5728C++\u4e2d\uff0c\u591a\u6001\u662f\u6307\u76f8\u540c\u7684\u63a5\u53e3\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u7684\u591a\u79cd\u5f62\u5f0f\u3002\u591a\u6001\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a\u7f16\u8bd1\u671f\u591a\u6001\uff08Compile-time polymorphism\uff09\u548c\u8fd0\u884c\u65f6\u591a\u6001\uff08Run-time polymorphism\uff09\u3002\u4e0b\u9762\u5bf9\u8fd9\u4e24\u8005\u8fdb\u884c\u89e3\u91ca\u3002</p> <ol> <li>\u7f16\u8bd1\u671f\u591a\u6001\uff08Compile-time polymorphism\uff09:</li> <li> <p>\u51fd\u6570\u91cd\u8f7d: \u5f53\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u540d\u79f0\u76f8\u540c\u4f46\u53c2\u6570\u5217\u8868\u4e0d\u540c\u7684\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e9b\u51fd\u6570\u662f\u91cd\u8f7d\u7684\u3002\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u8c03\u7528\u7684\u53c2\u6570\u5217\u8868\u6765\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002</p> <pre><code>void print(int i) {\n    std::cout &lt;&lt; \"Here is int: \" &lt;&lt; i &lt;&lt; std::endl;\n}\n\nvoid print(double d) {\n    std::cout &lt;&lt; \"Here is double: \" &lt;&lt; d &lt;&lt; std::endl;\n}\n</code></pre> </li> <li> <p>\u8fd0\u7b97\u7b26\u91cd\u8f7d: \u4f60\u53ef\u4ee5\u4e3a\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u63d0\u4f9b\u9002\u5f53\u7684\u8fd0\u7b97\u7b26\u3002</p> <pre><code>class Complex {\nprivate:\n    float real;\n    float imag;\npublic:\n    Complex operator + (Complex const &amp;obj) {\n        Complex temp;\n        temp.real = real + obj.real;\n        temp.imag = imag + obj.imag;\n        return temp;\n    }\n};\n</code></pre> </li> <li> <p>\u6a21\u677f: \u901a\u8fc7\u4f7f\u7528\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u6216\u7c7b\u6a21\u677f\uff0c\u4f7f\u5176\u9002\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002</p> <pre><code>template &lt;typename T&gt;\nT max(T x, T y) {\n    return (x &gt; y) ? x : y;\n}\n</code></pre> </li> <li> <p>\u8fd0\u884c\u65f6\u591a\u6001\uff08Run-time polymorphism\uff09:</p> </li> <li> <p>\u865a\u51fd\u6570\u4e0e\u7ee7\u627f: \u8fd0\u884c\u65f6\u591a\u6001\u662f\u901a\u8fc7\u4f7f\u7528\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u6765\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\uff0c\u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\u5fc5\u987b\u88ab\u58f0\u660e\u4e3a<code>virtual</code>\u3002\u8fd9\u6837\uff0c\u5f53\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u51fd\u6570\u3002</p> <pre><code>class Base {\npublic:\n    virtual void show() {\n        std::cout &lt;&lt; \"Base class\" &lt;&lt; std::endl;\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void show() {\n        std::cout &lt;&lt; \"Derived class\" &lt;&lt; std::endl;\n    }\n};\n\n// \u4f7f\u7528:\nBase* bptr;\nDerived d;\nbptr = &amp;d;\nbptr-&gt;show();  // \u8f93\u51fa \"Derived class\"\n</code></pre> </li> <li> <p>\u7eaf\u865a\u51fd\u6570\u4e0e\u62bd\u8c61\u7c7b: \u7eaf\u865a\u51fd\u6570\u662f\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e\u7684\u865a\u51fd\u6570\uff0c\u5b83\u6ca1\u6709\u5b9a\u4e49\u3002\u62e5\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u88ab\u79f0\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u4e3a\u6b64\u7c7b\u521b\u5efa\u5bf9\u8c61\u3002</p> </li> </ol> <p>\u603b\u7ed3\uff1a\u7f16\u8bd1\u671f\u591a\u6001\u5728\u7f16\u8bd1\u65f6\u89e3\u6790\uff0c\u800c\u8fd0\u884c\u65f6\u591a\u6001\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u89e3\u6790\u3002\u7f16\u8bd1\u671f\u591a\u6001\u4e3b\u8981\u5305\u62ec\u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u548c\u6a21\u677f\uff0c\u800c\u8fd0\u884c\u65f6\u591a\u6001\u662f\u901a\u8fc7\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u7684\u3002</p>"},{"location":"C%2B%2B/%E5%AF%B9%E4%BA%8Enamespace%E7%9A%84%E7%90%86%E8%A7%A3/","title":"\u5bf9\u4e8enamespace\u7684\u7406\u89e3","text":"<p>namespace\u4e3a\u547d\u540d\u7a7a\u95f4\u3002 \u5bf9\u4e8eApollo\u8fd9\u79cd\u5927\u578b\u9879\u76ee\uff0cnamespace\u4e00\u822c\u90fd\u662f\u5d4c\u5957\u7684\u3002 \u90a3\u4e48\uff0c\u7528\u53d8\u91cf\u65f6\u7684\u539f\u5219\uff1a 1.\u5982\u679c\u4e24\u4e2a\u6587\u4ef6\u7684namespace\u76f8\u540c\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u52a0\u989d\u5916\u58f0\u660e\u3002\u5982\uff1a \u6587\u4ef6A\uff1a <pre><code>namespace apollo{\nnamespace module{\nnamespace planning{\n\u00a0 int a=3\uff1b\n}\n}\n}\n</code></pre></p> <p>\u6587\u4ef6B\uff08\u5f15\u5165\u4e86a\u7684\u5934\u6587\u4ef6\uff09\uff1a <pre><code>namespace apollo{\nnamespace module{\nnamespace planning{\n\u00a0cout&lt;&lt; a\uff1b\n}\n}\n}\n</code></pre></p> <p>\u6b64\u65f6\uff0c\u6587\u4ef6B\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u6587\u4ef6A\u4e2d\u7684\u53d8\u91cf\u7684\uff0c\u4e0d\u9700\u8981\u989d\u5916\u58f0\u660e\u3002\u56e0\u4e3a\u4ed6\u4eec\u5728\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u3002</p> <p>2.\u5982\u679c\u4e24\u4e2a\u6587\u4ef6\u7684namespace\u4e0d\u540c\uff0c\u6309\u7167\u5f00\u59cb\u51fa\u73b0\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fdb\u884c\u58f0\u660e\u3002\u5982\uff1a</p> <pre><code>\u6587\u4ef6A\uff1a\nnamespace apollo{\nnamespace module{\nnamespace prediction{\n\u00a0 int a=3\uff1b\n}\n}\n}\n\n\u6587\u4ef6B\uff1a\nnamespace apollo{\nnamespace module{\nnamespace planning{\n\n\u00a0cout&lt;&lt;  prediction::a\uff1b//\u672c\u6765\u5e94\u8be5\u58f0\u660eapollo::module::prediction::a\uff0c\u56e0\u4e3aapollo module\u8fd9\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u518d\u989d\u5916\u58f0\u660e\uff0c\u53ea\u9700\u8981\u4eceprediction\u5f00\u59cb\u58f0\u660e\u5c31\u597d\u3002\n\n}\n}\n}\n</code></pre> <p>\u518d\u6bd4\u5982\uff1a <pre><code>\u6587\u4ef6A\uff1a\nnamespace apollo{\nnamespace common{\n\u00a0 int a=3\uff1b\n}\n}\n\n\u6587\u4ef6B\uff1a\nnamespace apollo{\nnamespace module{\nnamespace planning{\n\n\u00a0cout&lt;&lt;common::a\uff1b//\u672c\u6765\u5e94\u8be5\u58f0\u660eapollo::common::a\uff0c\u56e0\u4e3aapollo\u8fd9\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u518d\u989d\u5916\u58f0\u660e\uff0c\u53ea\u9700\u8981\u4ececommon\u5f00\u59cb\u58f0\u660e\u5c31\u597d\u3002\n\n}\n}\n}\n</code></pre></p> <p>\u518d\u6bd4\u5982\uff1a <pre><code>\u6587\u4ef6A\uff1a\nnamespace apollo{\nnamespace\u00a0module{\nnamespace planning{\n\u00a0 int a=3\uff1b\n}\n}\n}\n\n\u6587\u4ef6B\uff1a\nnamespace apollo{\nnamespace common{\n\n\u00a0cout&lt;&lt;module::planning::a\uff1b//\u672c\u6765\u5e94\u8be5\u58f0\u660eapollo::module::planning::a\uff0c\u56e0\u4e3aapollo\u8fd9\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u518d\u989d\u5916\u58f0\u660e\uff0c\u53ea\u9700\u8981\u4ececommon\u5f00\u59cb\u58f0\u660e\u5c31\u597d\u3002\n\n}\n}\n</code></pre></p> <p>3.\u67e5\u627e\u547d\u540d\u7a7a\u95f4\u65f6\u662f\u5d4c\u5957\u67e5\u627e\u7684\uff0c\u6bd4\u59822.1\u4e2d\u5728namespace apollo{namespace module{namespace planning{\u9700\u8981\u627eprediction::a\uff0c\u5148\u627eapollo::prediction::a\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u627e  apollo::module::prediction::a\uff0c\u5982\u679c\u518d\u6ca1\u6709\u627eapollo::module::planning::prediction::a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>4.\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u6587\u4ef6A\uff1a namespace{ int a = 3; } \u6587\u4ef6B\uff1a \u4e3a\u4e86\u9632\u6b62\u8de8\u6587\u4ef6\u8c03\u7528\uff0c\u6587\u4ef6B\u662f\u8c03\u7528\u4e0d\u4e86\u6587\u4ef6a\u4e2d\u7684int a\u53d8\u91cf\u7684\u3002\u4f5c\u7528\u76f8\u5f53\u4e8estatic\uff0c\u6807\u51c6\u4e2d\u5efa\u8bae\u7528namespace \u66ff\u6362static</p>"},{"location":"C%2B%2B/%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C%E7%9A%84%E6%A6%82%E5%BF%B5/","title":"\u5e76\u53d1\u4e0e\u5e76\u884c\u7684\u6982\u5ff5","text":"<p>\u5e76\u53d1\uff08concurrency\uff09\u7684\u610f\u601d\u662f\u8bf4\uff0c\u8ba1\u7b97\u673a\u4f3c\u4e4e\uff08seemingly\uff09\u662f\u5728\u540c\u4e00\u65f6\u95f4\u505a\u7740\u5f88\u591a\u4e0d\u540c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u67d0\u53f0\u7535\u8111\u5982\u679c\u53ea\u6709\u4e00\u4e2aCPU\u6838\u5fc3\uff0c\u90a3\u4e48\u64cd\u4f5c\u7cfb\u7edf\u5c31\u4f1a\u5728\u5404\u7a0b\u5e8f\u4e4b\u95f4\u8fc5\u901f\u5207\u6362\uff0c\u4f7f\u5176\u90fd\u6709\u673a\u4f1a\u8fd0\u884c\u5728\u8fd9\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u9762\u3002\u8fd9\u79cd\u4ea4\u9519\u6267\u884c\u7a0b\u5e8f\u7684\u65b9\u5f0f\uff0c\u9020\u6210\u4e86\u4e00\u79cd\u5047\u8c61\uff0c\u4f7f\u6211\u4eec\u4ee5\u4e3a\u8fd9\u4e9b\u7a0b\u5e8f\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u3002</p> <p>\u5e76\u884c\uff08parallelism\uff09\u7684\u610f\u601d\u5219\u662f\u8bf4\uff0c\u8ba1\u7b97\u673a\u786e\u5b9e\uff08acutally\uff09\u662f\u5728\u540c\u4e00\u65f6\u95f4\u505a\u7740\u5f88\u591a\u4e0d\u540c\u7684\u4e8b\u3002\u5177\u5907\u591a\u4e2aCPU\u6838\u5fc3\u7684\u8ba1\u7b97\u673a\uff0c\u80fd\u591f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f\u3002\u5404\u7a0b\u5e8f\u4e2d\u7684\u6307\u4ee4\uff0c\u90fd\u5206\u522b\u8fd0\u884c\u5728\u6bcf\u4e2aCPU\u5185\u6838\u4e0a\u9762\uff0c\u4e8e\u662f\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u5c31\u80fd\u591f\u5728\u540c\u4e00\u65f6\u523b\u5411\u524d\u63a8\u8fdb\u3002</p>"},{"location":"C%2B%2B/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%EF%BC%9A%E4%BD%BF%E7%94%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%EF%BC%88%E5%85%88%E5%85%A5%E5%85%88%E5%87%BA%EF%BC%89%EF%BC%8C%E4%B8%8D%E6%96%AD%E5%90%91%E9%98%9F%E5%B0%BE%E5%8A%A0%E5%85%A5/","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff1a\u4f7f\u7528\u961f\u5217\u5b9e\u73b0\uff08\u5148\u5165\u5148\u51fa\uff09\uff0c\u4e0d\u65ad\u5411\u961f\u5c3e\u52a0\u5165","text":"<p>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff1a\u4f7f\u7528\u961f\u5217\u5b9e\u73b0\uff08\u5148\u5165\u5148\u51fa\uff09\uff0c\u4e0d\u65ad\u5411\u961f\u5c3e\u52a0\u5165 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff1a\u4f7f\u7528\u6808\u5b9e\u73b0\uff08\u5148\u5165\u540e\u51fa\uff09\uff0c\u9012\u5f52\u8c03\u7528</p>"},{"location":"C%2B%2B/%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88%E5%92%8C%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E3%80%81%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E5%92%8C%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E/","title":"\u6570\u7ec4\u6307\u9488\u548c\u6307\u9488\u6570\u7ec4\u3001\u51fd\u6570\u6307\u9488\u548c\u51fd\u6570\u58f0\u660e","text":""},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","title":"\u6c47\u7f16\u7684\u76f8\u5173\u77e5\u8bc6","text":"<p>\u4ec5\u9488\u5bf9x86\u67b6\u6784</p>"},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#32x86","title":"32\u4f4dx86\u5bc4\u5b58\u5668\uff1a","text":""},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#64x86","title":"64\u4f4dx86\u5bc4\u5b58\u5668\uff1a","text":"<pre><code>\u628a32\u4f4d\u7684e\u5168\u90e8\u6362\u6210r\uff0c\u6bd4\u5982rax\u3001rbx\u3002\n\u5176\u4e2drax\u4e13\u95e8\u7528\u6765\u7528\u505areturn\u7684\u503c\u3002\nrsp\u4e3a\u6808\u9876\u6307\u9488\uff1a8\u4e2a\u5b57\u8282\uff0c64\u4f4d\nrbp\u4e3a\u6808\u5e95\u6307\u9488\uff1a8\u4e2a\u5b57\u8282\uff0c64\u4f4d\n</code></pre>"},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#_1","title":"\u5feb\u901f\u5165\u95e8","text":"<p>\u8fd9\u7bc7\u535a\u5ba2\uff0c\u5feb\u901f\u5165\u95e8 https://www.cs.virginia.edu/~evans/cs216/guides/x86.html</p> <p>\u8c03\u7528\u51fd\u6570\u7528call  \u6807\u7b7e \u4ee3\u7801\u8df3\u8f6c\u7528 junmp \u6807\u7b7e</p> <p>\u6c47\u7f16\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u90fd\u53ef\u4ee5\u7528&lt;\u6807\u7b7e:&gt;\u6807\u8bb0\uff1a \u6bd4\u5982 my_tag: </p> <p>[addr]:\u8868\u793aaddr\u5730\u5740\u6307\u5411\u7684\u5185\u5bb9 \u6bd4\u5982[rax]:\u8868\u793arax\u5bc4\u5b58\u5668\u4e2d\u5b58\u7684\u662f\u4e00\u4e2a\u5730\u5740\uff0c[rax]\u8868\u793a\u8be5\u5730\u5740\u6307\u5411\u7684\u503c\u3002</p>"},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#_2","title":"\u5e38\u7528\u7684\u6307\u4ee4\uff1a","text":"<ul> <li>mov\u3001push\u3001pop\u3001lea\u3001add\u3001sub\u3001inc\\dec\u3001imul\u3001idiv\u3001and\u3001or\u3001xor\u3001not\u3001neg\u3001shl\uff08\u5de6\u79fb\u4f4d\uff09\u3001shr\uff08\u53f3\u79fb\u4f4d\uff09\u3001je\uff08\u7b49\u4e8e\u8df3\u8f6c\uff09\u3001jne\uff08\u4e0d\u7b49\u8df3\u8f6c\uff09\u3001jg\uff08\u5927\u4e8e\uff09\u3001jge\uff08\u5927\u4e8e\u7b49\u4e8e\uff09\u3001jl\uff08\u5c0f\u4e8e\uff09\u3001jle\uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09\u3001cmp\uff08\u6bd4\u8f83\uff0c\u901a\u5e38\u548c\u8df3\u8f6c\u8fde\u7528\uff09\u3001call\u3001ret</li> </ul>"},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#_3","title":"\u4e00\u4e9b\u60ef\u7528\u7684\u4ee3\u7801\uff1a","text":"<p> - \u53d8\u91cf\u540d+[rip]\u8868\u793a\u53d8\u91cf\u7684\u503c\uff0crip\u4e3a\u7a0b\u5e8f\u6307\u9488\uff0c\u6307\u793a\u5f53\u524d\u7a0b\u5e8f\u8fd0\u884c\u7684\u4f4d\u7f6e\u3002\u4e0a\u56fea[rip]\u4ee3\u88682 - \u51fd\u6570\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\uff1a <pre><code>push rbp\nmov rbp,rsp\n\ndo some thing\n\npop rbp\nret\n</code></pre> - \u51fd\u6570\u540d\u505a\u597d\u6807\u7b7e\uff1a\u5982\u4e0a\u56fe\u4e2dsqure()\u5c31\u662f\u6807\u7b7e - \u4e00\u822c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7ed3\u679c\u90fd\u5b58\u5728eax\u4e2d\u3002 - byte ptr\u3001word ptr\u3001dword ptr  - \u9759\u6001\u533a\u7684\u58f0\u660e\uff1aDB\uff08\u4e00\u4e2a\u5b57\u8282\uff09\u3001DW\uff08\u4e24\u4e2a\u5b57\u8282\uff09\u3001DD\uff08\u56db\u4e2a\u5b57\u8282\uff09 </p>"},{"location":"C%2B%2B/%E6%B1%87%E7%BC%96%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#_4","title":"\u6d6e\u70b9\u6570\u7684\u8868\u793a","text":"<p>float\u5728\u5185\u5b58\u4e2d\u4e2d32\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a </p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%81%E5%BC%95%E7%94%A8%E3%80%81%E6%8C%87%E9%92%88/","title":"\u8fd4\u56de\u503c\u3001\u5f15\u7528\u3001\u6307\u9488","text":""},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%81%E5%BC%95%E7%94%A8%E3%80%81%E6%8C%87%E9%92%88/#_1","title":"\u8fd4\u56de\u503c","text":"<p>\u5f53\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u65f6\u4e00\u5b9a\u8981\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u8f83\u5c0f\u7684\u7ed3\u6784\u4e5f\u53ef\u4ee5\u7528\u8fc7\u503c\u6765\u8fdb\u884c\u8fd4\u56de\u3002\u4e0d\u80fd\u8fd4\u56de\u5176\u5f15\u7528\u6216\u8005\u6307\u9488\u3002\u5bf9\u4e8e\u5360\u7528\u5185\u5b58\u8f83\u5927\u7684\u5c40\u90e8\u53d8\u91cf\uff0cC++\u6709\u8fd4\u56de\u503c\u4f18\u5316\u7684\u6280\u672f\u3002\u4e0d\u5fc5\u62c5\u5fc3\u65e0\u6548\u7684\u62f7\u8d1d\u3002</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u8fd4\u56de\u4e00\u4e9b\u7b80\u5355\u6570\u636e\u7c7b\u578b\u3002\u5982int\uff0cchar\uff0cfloat\u3002</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%81%E5%BC%95%E7%94%A8%E3%80%81%E6%8C%87%E9%92%88/#_2","title":"\u8fd4\u56de\u5f15\u7528","text":"<p>A&amp; a(){ return *this;} \u5c31\u751f\u6210\u4e86\u4e00\u4e2a\u56fa\u5b9a\u5730\u5740\u7684\u6307\u9488\uff0c\u5e76\u628a\u6307\u9488\u5e26\u7ed9\u4f60  </p> <p>\u4f46A a() { return *this;}\u4f1a\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u53d8\u91cf\uff0c\u5e76\u628a\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u7ed9\u4f60 \u8fd9\u6837\u5c31\u591a\u4e86\u4e00\u6b65\u64cd\u4f5c</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u8fd4\u56de\u8f83\u5927\u7684\u5168\u5c40\u53d8\u91cf\u6216\u8005\u8fd4\u56de\u5bf9\u8c61\u6210\u5458\uff0c\u907f\u514d\u590d\u5236\u3002</p> <pre><code>#include &lt;vector&gt;\nusing namespace std;\n\nvector&lt;int&gt;&amp; modifyVector(vector&lt;int&gt;&amp; vec) {\n    vec.push_back(10); // \u4fee\u6539vec\n    return vec;        // \u8fd4\u56de\u4fee\u6539\u540e\u7684vec\u7684\u5f15\u7528\n}\n\nint main() {\n    vector&lt;int&gt; myVec = {1, 2, 3};\n    vector&lt;int&gt;&amp; refVec = modifyVector(myVec);\n    // \u4f7f\u7528refVec\n    return 0;\n}\n</code></pre> <pre><code>class MyClass {\nprivate:\n    int value;\n\npublic:\n    MyClass(int val) : value(val) {}\n\n    // \u8fd4\u56de\u6210\u5458\u53d8\u91cf\u7684\u5f15\u7528\n    int&amp; getValue() {\n        return value;\n    }\n\n    // \u8bbe\u7f6e\u6210\u5458\u53d8\u91cf\u7684\u503c\n    void setValue(int val) {\n        value = val;\n    }\n};\n\nint main() {\n    MyClass obj(5);\n\n    // \u83b7\u53d6value\u7684\u5f15\u7528\n    int&amp; ref = obj.getValue();\n\n    // \u76f4\u63a5\u4fee\u6539\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\n    ref = 10;\n\n    // \u8f93\u51fa\u4fee\u6539\u540e\u7684value\n    std::cout &lt;&lt; \"New value: \" &lt;&lt; obj.getValue() &lt;&lt; std::endl;  // \u8f93\u51fa \"New value: 10\"\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%81%E5%BC%95%E7%94%A8%E3%80%81%E6%8C%87%E9%92%88/#const","title":"const\u5f15\u7528","text":"<p>\u4f7f\u7528\u5f15\u7528\u56fa\u7136\u80fd\u5728\u51fd\u6570\u8fd4\u56de\u65f6\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u8981\u8fd4\u56de\u4e00\u4e2a\u8f83\u5927\u7ed3\u6784\u7684\u4e34\u65f6\u53d8\u91cf\u5462?\u662f\u4e0d\u662f\u53ea\u80fd\u8fd4\u56de\u503c\u5462?</p> <p>\u663e\u7136\u7ed3\u679c\u5e76\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u5bf9\u5f15\u7528\u8fdb\u884c\u4fee\u9970\u4ece\u800c\u5ef6\u957f\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\uff0c\u6bd4\u5982\u4f7f\u7528<code>const Foo &amp;foo = f()</code>\u5c31\u662f\u6b63\u786e\u7684</p> <p>Only local const references prolong the lifespan</p> <p>\u8fd9\u91cc\u5f15\u7528\u4e0b\u5927\u4f6c\u535a\u5ba2\u4e0a\u603b\u7ed3\u7684\u4e24\u70b9</p> <ol> <li>\u5f15\u7528\u5fc5\u987b\u662f\u9759\u6001\u7684\uff0c\u4e5f\u5c31\u662f\u5fc5\u987b\u7528const\u6765\u4fee\u9970\u8fd9\u4e2a\u5f15\u7528\u3002\u8fd9\u662f\u56e0\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c5e\u4e8e\u53f3\u503c\uff0c\u4e5f\u5c31\u662f\uff08rvalue\uff09\u3002\u666e\u901a\u7684\u5f15\u7528\u662f\u5de6\u503c\u5f15\u7528\uff0c\u4e5f\u5c31\u662flvalue reference\u3002\u5de6\u503c\u5f15\u7528\u4e0d\u80fd\u6307\u5411\u53f3\u503c\u5f15\u7528\uff0c\u53ea\u6709const\u7684\u5de6\u503c\u5f15\u7528\u624d\u80fd\u7528\u6765\u6307\u5411\u53f3\u503c</li> <li>\u672c\u6765f()\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u4e34\u65f6\u7684\u53d8\u91cf\uff0c\u5728\u5b83\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5c31\u5e94\u8be5\u9500\u6bc1\u4e86\u3002\u53ef\u662f\u901a\u8fc7\u50cf\u8fd9\u6837const Foo&amp; foo = f();\uff0c\u628a\u4e34\u65f6\u7684\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u4e00\u4e2aconst\u5de6\u503c\u5f15\u7528\uff0cf()\u8fd4\u56de\u503c\u5e76\u4e0d\u4f1a\u7acb\u5373\u9500\u6bc1\u3002\u8fd9\u7b49\u4e8e\u662f\u5728const\u5f15\u7528\u7684\u4f5c\u7528\u57df\u5185\uff0c\u5ef6\u957f\u4e86f()\u8fd4\u56de\u503c\u7684\u5b58\u6d3b\u65f6\u95f4</li> </ol> <p>\u6240\u8c13\u53f3\u503c\u5c31\u662f\u7b49\u53f7\u53f3\u8fb9\u7684\u503c\uff0c\u4e00\u822c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6216\u8005\u662f\u660e\u786e\u7684\u6570\u503c\uff0c\u53f3\u503c\u53ea\u80fd\u5728\u7b49\u53f7\u53f3\u8fb9\uff0c\u5e76\u4e0d\u80fd\u4f5c\u4e3a\u5de6\u503c\u5e76\u88ab\u8d4b\u503c</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%81%E5%BC%95%E7%94%A8%E3%80%81%E6%8C%87%E9%92%88/#_3","title":"\u53f3\u503c\u5f15\u7528","text":"<p>\u53f3\u503c\u5f15\u7528\u662fC++11\u4e2d\u65b0\u52a0\u5165\u7684\u5185\u5bb9\uff0c\u662f\u4e00\u4e2a\u5c24\u4e3a\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5176\u4e3b\u662f\u8981\u7528\u6765\u89e3\u51b3C++98/03\u4e2d\u9047\u5230\u7684\u4e24\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u4e34\u65f6\u5bf9\u8c61\u975e\u5fc5\u8981\u7684\u6602\u8d35\u7684\u62f7\u8d1d\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\u5728\u6a21\u677f\u51fd\u6570\u4e2d\u5982\u4f55\u6309\u7167\u53c2\u6570\u7684\u5b9e\u9645\u7c7b\u578b\u8fdb\u884c\u8f6c\u53d1\u3002\u901a\u8fc7\u5f15\u5165\u53f3\u503c\u5f15\u7528\uff0c\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u6539\u8fdb\u4e86\u7a0b\u5e8f\u6027\u80fd</p> <p>\u76f8\u6bd4\u4e8e<code>&amp;</code>\u662f\u5bf9\u5de6\u503c\u8fdb\u884c\u7ed1\u5b9a\uff0c<code>&amp;&amp;</code>\u5c31\u662f\u5bf9\u53f3\u503c\u8fdb\u884c\u4e00\u4e2a\u7ed1\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b8c\u6210\u7ed1\u5b9a</p> <pre><code>// \u5de6\u503c\u5f15\u7528\nint i = 100;\nint &amp;a = i;\n\n// \u53f3\u503c\u5f15\u7528\nint &amp;&amp;b = 100;\n</code></pre> <p>\u53f3\u503c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u533f\u540d\u53d8\u91cf\uff0c\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u7684\u58f0\u660e\uff0c\u53f3\u503c\u53c8\u201c\u91cd\u83b7\u65b0\u751f\u201d\uff0c\u5176\u751f\u547d\u5468\u671f\u4e0e\u53f3\u503c\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4e00\u6837\u957f\uff0c\u53ea\u8981\u8be5\u53d8\u91cf\u8fd8\u6d3b\u7740\uff0c\u8be5\u53f3\u503c\u4e34\u65f6\u91cf\u5c06\u4f1a\u4e00\u76f4\u5b58\u6d3b\u4e0b\u53bb</p> <p>\u540c\u65f6\u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u770b\u4f5c\u662f\u52a0\u4e86const\u7684\u5de6\u503c\u5f15\u7528\uff0c\u5176\u81ea\u8eab\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u80fd\u591f\u88ab\u4efb\u610f\u4fee\u6539\uff0c\u800c\u5176\u672c\u8d28\u5374\u662f\u4e34\u65f6\u53d8\u91cf\u7684\u53f3\u503c\uff0c\u6240\u4ee5\u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\uff0c\u800c\u53f3\u503c\u5f15\u7528\u53bb\u4e0d\u80fd\u88ab\u53e6\u5916\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\u6240\u6307\u5411</p> <pre><code>int &amp;&amp;i = 100;\n\n// \u6b63\u786e\u505a\u6cd5\ni++;\nint tmp = 200; i = tmp;\n\nint &amp;left = i;\n\n// \u9519\u8bef\u505a\u6cd5\nint &amp;&amp;j = 200;\nj = i;\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%81%E5%BC%95%E7%94%A8%E3%80%81%E6%8C%87%E9%92%88/#_4","title":"\u8fd4\u56de\u6307\u9488","text":"<p>\u4f7f\u7528\u573a\u666f\uff1a\u5f53\u51fd\u6570\u9700\u8981\u8fd4\u56de\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u6216\u8005\u9700\u8981\u63d0\u4f9b\u5bf9\u5bf9\u8c61\u7684\u53ef\u9009\u8bbf\u95ee\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u8fd4\u56de\u7a7a\u6307\u9488\u4ee5\u8868\u793a\u67d0\u79cd\u6761\u4ef6\uff09\u65f6\uff0c\u4f7f\u7528\u6307\u9488(\u5f53\u9700\u8981\u8fd4\u56de\u6307\u9488\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u667a\u80fd\u6307\u9488)\u3002</p> <pre><code>class MyClass {\npublic:\n    MyClass() {}\n    void doSomething() {}\n};\n\nMyClass* createMyClassObject() {\n    MyClass* obj = new MyClass();\n    return obj;\n}\n\nint main() {\n    MyClass* myObj = createMyClassObject();\n    // \u4f7f\u7528myObj\n    myObj-&gt;doSomething();\n\n    delete myObj; // \u4e0d\u8981\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\n    return 0;\n}\n</code></pre> <p>\u4ee5\u4e0a\u4ee3\u7801\u6700\u597d\u7528\u667a\u80fd\u6307\u9488\u4ee3\u66ff\u3002 <pre><code>#include &lt;memory&gt;\n\nclass MyClass {\npublic:\n    MyClass() {}\n    void doSomething() {}\n};\n\nstd::unique_ptr&lt;MyClass&gt; createMyClassObject() {\n    return std::make_unique&lt;MyClass&gt;();\n}\n\nint main() {\n    std::unique_ptr&lt;MyClass&gt; myObj = createMyClassObject();\n    // \u4f7f\u7528myObj\n    myObj-&gt;doSomething();\n\n    // \u5f53myObj\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\u4f1a\u81ea\u52a8\u88ab\u9500\u6bc1\n    return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/","title":"\u8fd4\u56de\u503c\u4f18\u5316","text":"<pre><code>#include &lt;iostream&gt;\nclass Obj {\n\u00a0public:\n\u00a0 Obj() { \u00a0// \u6784\u9020\u51fd\u6570\n\u00a0 \u00a0 std::cout &lt;&lt; \"in Obj() \"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;&lt; \" \" &lt;&lt; this &lt;&lt; std::endl;\n\u00a0 }\n\u00a0 Obj(int n) {\n\u00a0 \u00a0 std::cout &lt;&lt; \"in Obj(int) \"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;&lt; \" \" &lt;&lt; this &lt;&lt; std::endl;\n\u00a0 }\n\u00a0 Obj(const Obj &amp;obj) { \u00a0// \u62f7\u8d1d\u6784\u9020\u51fd\u6570\n\u00a0 \u00a0 std::cout &lt;&lt; \"in Obj(const Obj &amp;obj) \" &lt;&lt; &amp;obj &lt;&lt; \" \" &lt;&lt; this &lt;&lt; std::endl;\n\u00a0 }\n\u00a0 Obj &amp;operator=(const Obj &amp;obj) { \u00a0// \u8d4b\u503c\u6784\u9020\u51fd\u6570\n\u00a0 \u00a0 std::cout &lt;&lt; \"in operator=(const Obj &amp;obj)\" &lt;&lt; std::endl;\n\u00a0 \u00a0 return *this;\n\u00a0 }\n\u00a0 ~Obj() { \u00a0// \u6790\u6784\u51fd\u6570\n\u00a0 \u00a0 std::cout &lt;&lt; \"in ~Obj() \" &lt;&lt; this &lt;&lt; std::endl;\n\u00a0 }\n\u00a0 int n;\n};\nObj fun() {\n\u00a0 // Obj obj;\n\u00a0 // do sth;\n\u00a0 // return obj;//\u5177\u540d\n\u00a0 return Obj();//\u975e\u5177\u540d\n}\nint main() {\n\u00a0 Obj obj = fun();\n\u00a0 std::cout &lt;&lt; \"&amp;obj is \" &lt;&lt; &amp;obj &lt;&lt; std::endl;\n\u00a0 return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_1","title":"\u6ca1\u6709\u4f18\u5316","text":"<pre><code>Obj fun() {\n\u00a0  Obj obj;//\u5177\u540d\n\u00a0  return obj;\n\n}\nint main() {\n\u00a0 Obj obj = fun();\n\u00a0 std::cout &lt;&lt; \"&amp;obj is \" &lt;&lt; &amp;obj &lt;&lt; std::endl;\n\u00a0 return 0;\n}\n</code></pre> <p>\u8c03\u7528\u7684Obj\u7c7b\u6210\u5458\u51fd\u6570\u7684\u987a\u5e8f\u5e94\u8be5\u4e3a\uff1a</p> <ol> <li>\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u751f\u6210\u5bf9\u8c61</li> <li>\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u751f\u6210\u4e34\u65f6\u5bf9\u8c61</li> <li>\u6790\u6784\u7b2c1\u6b65\u751f\u6210\u7684\u5bf9\u8c61</li> <li>\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5c06\u7b2c2\u6b65\u751f\u6210\u7684\u4e34\u65f6\u53d8\u91cf\u62f7\u8d1d\u5230main()\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u5bf9\u8c61obj\u4e2d</li> <li>\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e\u7b2c2\u90e8\u751f\u6210\u7684\u4e34\u65f6\u5bf9\u8c61</li> <li>\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u91ca\u653emain()\u51fd\u6570\u4e2d\u7684obj\u5c40\u90e8\u5bf9\u8c61</li> </ol> <p><pre><code>g++ -std=c++11 -fno-elide-constructors -g test.cc -o test &amp;&amp; ./test\n\nin Obj()  0x7ffee18a9a00 // \u5728fun()\u51fd\u6570\u4e2d\uff0c\u6784\u9020obj\u5bf9\u8c61\nin Obj(const Obj &amp;obj) 0x7ffee18a9a00  0x7ffee18a9a40 // \u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u521b\u5efa\u4e34\u65f6\u53d8\u91cf(fun()\u51fd\u6570\u5b9a\u4e49\u7684obj---&gt;\u4e34\u65f6\u5bf9\u8c61)\nin ~Obj() 0x7ffee18a9a00 // \u6790\u6784fun()\u51fd\u6570\u4e2d\u6784\u9020\u7684obj\u5bf9\u8c61(fun()\u51fd\u6570\u5b9a\u4e49\u7684obj)\nin Obj(const Obj &amp;obj) 0x7ffee18a9a40 0x7ffee18a9a30 // \u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6784\u5efaobj(main\u51fd\u6570\u4e2d\u7684)\u5bf9\u8c61(\u4e34\u65f6\u5bf9\u8c61---&gt;main()\u51fd\u6570\u5b9a\u4e49\u7684obj)\nin ~Obj() 0x7ffee18a9a40 // \u91ca\u653e\u4e34\u65f6\u5bf9\u8c61\n&amp;obj is 0x7ffee18a9a30 \nin ~Obj() 0x7ffee18a9a30 // \u91ca\u653emain()\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684obj\u5bf9\u8c61\n</code></pre> \u4e00\u5171\u8c03\u7528\u4e86\u4e00\u6b21\u6784\u9020\uff0c\u4e24\u6b21\u62f7\u8d1d\u6784\u9020\uff0c\u4e09\u6b21\u6790\u6784</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_2","title":"\u6709\u4f18\u5316","text":"<p><pre><code>g++ -g -std=c++11 test.cc -o test &amp;&amp; ./test\n\nin Obj()  0x7ffd6fb15240\n&amp;obj is 0x7ffd6fb15240\nin ~Obj() 0x7ffd6fb15240\n</code></pre> \u4e00\u5171\u8c03\u7528\u4e86\u4e00\u6b21\u6784\u9020\u4e00\u6b21\u6790\u6784</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_3","title":"\u539f\u7406","text":"<p>RVO(Return Value Optimization)\u8fd4\u56de\u503c\u4f18\u5316\uff0c\u6216\u8005NRVO\uff0c\u53c8\u540d\u5177\u540d\u8fd4\u56de\u503c\u4f18\u5316(Named Return Value Optimization)\uff0c\u4f1a\u628a\u539f\u6765fun\u91cc\u8fb9\u7684\u6784\u9020\u884c\u4e3a\u653e\u5230main\u4e2d\u8fdb\u884c\u6784\u9020\u3002 <pre><code>void fun(Obj &amp;_obj) {\n  Obj obj(1);\n  _obj.Obj::Obj(obj); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\n  return;\n}\n\nint main() {\n  Obj obj; // \u4ec5\u5b9a\u4e49\u4e0d\u6784\u9020\n  fun(obj);\n  return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_4","title":"\u4e0d\u80fd\u4f18\u5316\u7684\u51e0\u79cd\u60c5\u51b5","text":""},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_5","title":"\u6839\u636e\u4e0d\u540c\u6761\u4ef6\u8fd4\u56de\u4e0d\u540c\u53d8\u91cf","text":"<pre><code>Obj fun(bool flag) {\n  Obj o1;\n  Obj o2;\n  if (flag) {\n    return o1;\n  }\n  return o2;\n}\n\nint main() {\n  Obj obj = fun(true);\n  return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_6","title":"\u8fd4\u56de\u5168\u5c40\u53d8\u91cf","text":"<p>\u5f53\u8fd4\u56de\u7684\u5bf9\u8c61\u4e0d\u662f\u5728\u51fd\u6570\u5185\u521b\u5efa\u7684\u65f6\u5019\uff0c\u662f\u65e0\u6cd5\u6267\u884c\u8fd4\u56de\u503c\u4f18\u5316\u7684\u3002</p> <pre><code>Obj g_obj;\n\nObj fun() {\n  return g_obj;\n}\n\nint main() {\n  Obj obj = fun();\n  std::cout &lt;&lt; &amp;obj &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_7","title":"\u8fd4\u56de\u51fd\u6570\u53c2\u6570","text":"<p>\u4e0e\u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u7c7b\u4f3c\uff0c\u5f53\u8fd4\u56de\u7684\u5bf9\u8c61\u4e0d\u662f\u5728\u51fd\u6570\u5185\u521b\u5efa\u7684\u65f6\u5019\uff0c\u662f\u65e0\u6cd5\u6267\u884c\u8fd4\u56de\u503c\u4f18\u5316\u7684\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>Obj fun(Obj obj) {\n  return obj;\n}\n\nint main() {\n  Obj o;\n  Obj obj = fun(o);\n  std::cout &lt;&lt; \"in main \" &lt;&lt; &amp;obj &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <p>\u7f16\u8bd1\u5e76\u8fd0\u884c\u4e4b\u540e\uff0c\u8f93\u51fa\uff1a</p> <pre><code>in Obj() 0x7ffdbb43da00\nin Obj(const Obj &amp;obj) 0x7ffdbb43da00 0x7ffdbb43da10\nin Obj(const Obj &amp;obj) 0x7ffdbb43da10 0x7ffdbb43d9f0\nin ~Obj() 0x7ffdbb43da10\nin main 0x7ffdbb43d9f0\nin ~Obj() 0x7ffdbb43d9f0\nin ~Obj() 0x7ffdbb43da00\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_8","title":"\u8fd4\u56de\u6210\u5458\u53d8\u91cf","text":"<p>\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u662f\u672a\u5177\u540d\u53d8\u91cf\uff0c\u4e5f\u4e0d\u80fdRVO\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>struct Wraper {\n   Obj obj;\n };\n\nObj fun() {\n  return Wraper().obj;\n}\n\nint main() {\n  Obj obj = fun();\n  std::cout &lt;&lt; &amp;obj &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <p>\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>in Obj()  0x7ffed7f85290 // \u6784\u9020Wraper\u4e2d\u7684obj\u5bf9\u8c61\nin Obj(const Obj &amp;obj) 0x7ffed7f85290 0x7ffed7f852c0 // \u901a\u8fc7\u62f7\u8d1d\u8d4b\u503c\u7ed9main\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\nin ~Obj() 0x7ffed7f85290 // \u6790\u6784Wraper\u4e2d\u7684obj\u5bf9\u8c61\n0x7ffed7f852c0\nin ~Obj() 0x7ffed7f852c0 // \u6790\u6784main\u4e2d\u7684\u5c40\u90e8\u5bf9\u8c61\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#move","title":"\u4f7f\u7528move","text":"<p>\u5728\u8fd4\u56de\u503c\u4e0a\u8c03\u7528std::move()\u8fdb\u884c\u8fd4\u56de\u662f\u4e00\u79cd\u9519\u8bef\u7684\u65b9\u5f0f\u3002\u5b83\u4f1a\u5c1d\u8bd5\u5f3a\u5236\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4f46\u8fd9\u6837\u4f1a\u5bfc\u81f4RVO\u5931\u6548\u3002\u56e0\u4e3a\u5373\u4f7f\u6ca1\u6709\u663e\u793a\u8c03\u7528std::move()\uff0c\u7f16\u8bd1\u5668\u4f18\u5316\u4e2d\u4e5f\u4f1a\u6267\u884cmove\u64cd\u4f5c\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>Obj fun() {\n  Obj obj;\n  return std::move(obj);\n}\n\nint main() {\n  Obj obj = fun();\n  return 0;\n}\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b\uff1a</p> <pre><code>in Obj()  0x7ffe7d4d1720\nin Obj(const Obj &amp;&amp;obj)//\u589e\u52a0\u4e86\u4e00\u6b21\nin ~Obj() 0x7ffe7d4d1720\n0x7ffe7d4d1750\nin ~Obj() 0x7ffe7d4d1750\n</code></pre> <p>\u4ece\u4e0a\u9762\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0e\u4e0d\u4f7f\u7528std::move()\u8fd4\u56de\u76f8\u6bd4\uff0c\u4f7f\u7528std::move()\u8fd4\u56de\u589e\u52a0\u4e86\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u8c03\u7528\u548c\u4e00\u6b21\u6790\u6784\u8c03\u7528\u3002</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#return-movex","title":"return move(x)","text":"<p>\u5927\u591a\u6570\u65f6\u5019\u6ca1\u6709\u610f\u4e49\uff0c\u4f46\u6709\u7684\u65f6\u5019\u4f1a\u6709\u610f\u4e49\u3002</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_9","title":"\u6ca1\u610f\u4e49\u7684","text":"<pre><code>#include&lt;iostream&gt;\n\nstruct X{\n    X() { puts(\"X()\"); }\n    X(const X&amp;) { puts(\"X(const X&amp;)\"); }\n    X(X&amp;&amp;)noexcept { puts(\"X(X&amp;&amp;)\"); }\n    ~X() { puts(\"~X()\"); }\n};\n\nX f(){\n    X x;\n    return std::move(x);\n}\n\nint main(){\n    X x = f();\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>X()\nX(X&amp;&amp;)\n~X()\n~X()\n</code></pre> <p>\u53ef\u4ee5\u8bf4\u6beb\u65e0\u610f\u4e49\uff0c\u751a\u81f3\u5f71\u54cd<code>NRVO</code>\u4f18\u5316\uff08\u5728\u5f53\u524d\u8bed\u5883\uff0c\u5373\u4f7f\u4e0d<code>std::move</code>\uff0c<code>return</code> <code>x</code>\uff0c\u91cd\u8f7d\u51b3\u8bae\u4e00\u6837\u4f1a\u9009\u62e9\u5230\u79fb\u52a8\u6784\u9020\u3002\u8fd9\u91cc\u7684<code>x</code>\u662f\u9690\u5f0f\u53ef\u79fb\u52a8\u5b9e\u4f53\uff09\u3002</p> <pre><code>#include&lt;iostream&gt;\n\nstruct X{\n    X() { puts(\"X()\"); }\n    X(const X&amp;) { puts(\"X(const X&amp;)\"); }\n    X(X&amp;&amp;)noexcept { puts(\"X(X&amp;&amp;)\"); }\n    ~X() { puts(\"~X()\"); }\n};\n\nX f(){\n    X x;\n    return x;\n}\n\nint main(){\n    X x = f();\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>X()\n~X()\n</code></pre> <p>\u4ee5\u4e0a\u53bb\u9664\u4e86<code>std::move</code>\uff0c\u7f16\u8bd1\u5668\u5f97\u4ee5\u6b63\u5e38<code>NRVO</code>\u4f18\u5316\uff0c\u4f18\u5316\u4e86\u79fb\u52a8\u6784\u9020\u7684\u5f00\u9500 \u3002</p> <p>\u5982\u679c\u7981\u7528\u4e86<code>NRVO</code>\uff0c\u90a3\u4e48\u8fd0\u884c\u7ed3\u679c\u5176\u5b9e\u548c\u4e0a\u9762\u7684\u662f\u4e00\u6837\u7684\u3002\u00a0<code>gcc</code>\u00a0\u52a0\u4e0a\u00a0<code>-fno-elide-constructors</code>\u9009\u9879\u5373\u53ef\u3002</p> <p>\u5982\u679c\u4ee5\u4e0a\u7528\u6cd5\u53ea\u80fd\u8bf4\u6beb\u65e0\u610f\u4e49\uff0c\u53ef\u80fd\u5f71\u54cd\u6027\u80fd\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u4ec0\u4e48\u9519\u8bef\u548c\u95ee\u9898\u3002\u90a3\u4e48\u4e0b\u9762\u6211\u8bf4\u7684\u5c31\u662f\u771f\u6b63\u5177\u5907\u5404\u79cd\u5371\u5bb3\u7684\u4e86\u3002</p> <p><pre><code>X&amp;&amp; f(){\n    X x;\n    return std::move(x);\n}\n</code></pre> \u5f15\u7528\u4e86\u5c40\u90e8\u7684\u5bf9\u8c61\uff0c\u51fd\u6570\u4f5c\u7528\u57df\u7ed3\u675f\uff0c\u8fd4\u56de\u7684\u5f15\u7528\u662f\u60ac\u5782\u7684\uff0c\u5df2\u7136<code>ub</code>\u4e86\u3002</p>"},{"location":"C%2B%2B/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/#_10","title":"\u6709\u610f\u4e49\u7684","text":"<pre><code>#include&lt;iostream&gt;\n\nstruct X{\n    X() { puts(\"X()\"); }\n    X(const X&amp;) { puts(\"X(const X&amp;)\"); }\n    X(X&amp;&amp;)noexcept { puts(\"X(X&amp;&amp;)\"); }\n    ~X() { puts(\"~X()\"); }\n};\n\nstruct Test{\n    X x;//\u6570\u636e\u6210\u5458 \u53ef\u4ee5return move\n    X f(){\n        return std::move(x);//\u6570\u636e\u6210\u5458\u4e0d\u662f\u9690\u5f0f\u53ef\u79fb\u52a8\u5b9e\u4f53,\u5982\u679c\u4e0dstd::move\uff0c\u76f4\u63a5return x\uff0c\u91cd\u8f7d\u51b3\u8bae\u4e0d\u4f1a\u9009\u62e9\u79fb\u52a8\u6784\u9020\u3002\n    }\n    X f2() {\n        return x;\n    }\n};\n\nint main(){\n    Test t;\n    puts(\"---------\");\n    t.f();\n    puts(\"---------\");\n    t.f2();\n    puts(\"---------\");\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>X()\n---------\nX(X&amp;&amp;)\n~X()\n---------\nX(const X&amp;)\n~X()\n---------\n~X()\n</code></pre> <p>\u6570\u636e\u6210\u5458\u4e0d\u662f\u9690\u5f0f\u53ef\u79fb\u52a8\u5b9e\u4f53,\u5982\u679c\u4e0d\u00a0<code>std::move</code>\uff0c\u800c\u662f\u76f4\u63a5\u00a0<code>return x</code>\uff0c\u91cd\u8f7d\u51b3\u8bae\u4e0d\u4f1a\u9009\u62e9\u79fb\u52a8\u6784\u9020\u3002</p> <p>\u6216\u8005\u81f3\u5c11\u9700\u8981\u7a0d\u5fae\u63d0\u4e00\u4e0b</p> <pre><code>X foo() {\n  X x\n  return x\n}\n</code></pre> <p>\u548c</p> <pre><code>class Y {\n  X x\n  X foo() {\n    return x\n  }\n}\n</code></pre> <p>\u662f\u5b8c\u5168\u4e0d\u4e00\u6837\u7684\u3002</p>"},{"location":"C%2B%2B/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88/","title":"\u8fed\u4ee3\u5668\u5931\u6548","text":"<p>\u8fed\u4ee3\u5668\u7684\u5931\u6548\u95ee\u9898\uff1a\u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\u5f71\u54cd\u4e86\u5143\u7d20\u7684\u5b58\u653e\u4f4d\u7f6e\uff0c\u79f0\u4e3a\u8fed\u4ee3\u5668\u5931\u6548\u3002</p> <p>\u5931\u6548\u60c5\u51b5\uff1a</p> <ul> <li>\u5f53\u5bb9\u5668\u8c03\u7528<code>erase()</code>\u65b9\u6cd5\u540e\uff0c\u5f53\u524d\u4f4d\u7f6e\u5230\u5bb9\u5668\u672b\u5c3e\u5143\u7d20\u7684\u6240\u6709\u8fed\u4ee3\u5668\u5168\u90e8\u5931\u6548\u3002</li> <li>\u5f53\u5bb9\u5668\u8c03\u7528<code>insert()</code>\u65b9\u6cd5\u540e\uff0c\u5f53\u524d\u4f4d\u7f6e\u5230\u5bb9\u5668\u672b\u5c3e\u5143\u7d20\u7684\u6240\u6709\u8fed\u4ee3\u5668\u5168\u90e8\u5931\u6548\u3002</li> <li>\u5982\u679c\u5bb9\u5668\u6269\u5bb9\uff0c\u5728\u5176\u4ed6\u5730\u65b9\u91cd\u65b0\u53c8\u5f00\u8f9f\u4e86\u4e00\u5757\u5185\u5b58\u3002\u539f\u6765\u5bb9\u5668\u5e95\u5c42\u7684\u5185\u5b58\u4e0a\u6240\u4fdd\u5b58\u7684\u8fed\u4ee3\u5668\u5168\u90fd\u5931\u6548\u4e86\u3002</li> </ul>"},{"location":"C%2B%2B/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88/#1-vector-deque","title":"1 \u5e8f\u5217\u5f0f\u5bb9\u5668\uff08\u5982 vector, deque\uff09","text":"<pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n\n    vector&lt;int&gt; q{ 1,2,3,4,5,6 };\n    // \u5728\u8fd9\u91cc\u60f3\u628a\u5927\u4e8e2\u7684\u5143\u7d20\u90fd\u5220\u9664\n    for (auto it = q.begin(); it != q.end(); it++) {\n        if (*it &gt; 2)\n            q.erase(it); // \u8fd9\u91cc\u5c31\u4f1a\u53d1\u751f\u8fed\u4ee3\u5668\u5931\u6548\n    }\n    // \u6253\u5370\u7ed3\u679c\n    for (auto it = q.begin(); it != q.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u4f7f\u7528 VS2019 \u8fd0\u884c\u4ec0\u4e48\u4e5f\u6ca1\u6253\u5370\u5c31\u9000\u51fa\u4e86\u8fdb\u7a0b\u3002\u8c03\u8bd5\u53d1\u73b0\u5728 vector \u6e90\u7801\u5185\u7684<code>_Vector_const_iterator&amp; operator++()</code>\u5f15\u53d1\u4e86\u5f02\u5e38\uff1a\u8bfb\u53d6\u8bbf\u95ee\u6743\u9650\u51b2\u7a81\uff0c\u8868\u660e\u8fed\u4ee3\u5668\u5728\u6267\u884c<code>++</code>\u64cd\u4f5c\u65f6\u62a5\u9519\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5931\u6548\u7684\u8fed\u4ee3\u5668\u4e0d\u80fd\u518d\u8fdb\u884c\u81ea\u589e\u8fd0\u7b97\u4e86\u3002</p> </li> <li> <p>\u4f7f\u7528gcc\u7f16\u8bd1\uff1a\u8f93\u51fa1 2 4 6 \uff08\u56e0\u4e3agcc\u4f1a\u9ed8\u8ba4earse\u540eit\u81ea\u8eab++\uff0c\u7b49\u4ef7\u4e8eit=q.erase(it)\uff09\uff0c\u867d\u7136\u4e0d\u62a5\u9519\uff0c\u4f46\u662f\u8f93\u51fa\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002</p> </li> </ul> <p>\u8fed\u4ee3\u5668\u5931\u6548\u7684\u539f\u56e0\u662f\uff1a\u56e0\u4e3a vetor\u3001deque \u4f7f\u7528\u4e86\u8fde\u7eed\u5206\u914d\u7684\u5185\u5b58\uff0c<code>erase</code>\u64cd\u4f5c\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u5bfc\u81f4\u540e\u9762\u6240\u6709\u7684\u5143\u7d20\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e9b\u5143\u7d20\u7684\u5730\u5740\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6240\u4ee5\u5f53\u524d\u4f4d\u7f6e\u5230\u5bb9\u5668\u672b\u5c3e\u5143\u7d20\u7684\u6240\u6709\u8fed\u4ee3\u5668\u5168\u90e8\u5931\u6548\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\u5229\u7528<code>erase</code>\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6709\u6548\u7684 iterator\uff08for\u4e0d\u5199\u7b2c\u4e09\u4e2a\u6761\u4ef6\uff09\uff0c\u6240\u4ee5\u4ee3\u7801\u505a\u5982\u4e0b\u4fee\u6539\u5373\u53ef\uff1a <pre><code>// \u5728\u8fd9\u91cc\u60f3\u628a\u5927\u4e8e2\u7684\u5143\u7d20\u90fd\u5220\u9664\nfor(auto it=q.begin();it!=q.end();)\n{\n    if(*it&gt;2)\n    {\n        it=q.erase(it); // \u8fd9\u91cc\u4f1a\u8fd4\u56de\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u518d\u81ea\u52a0\u4e86\n        //gcc\u4e2d\u4e5f\u53ef\u4ee5q.erase(it);\uff0c\u56e0\u4e3a\u4f1a\u81ea\u52a8it++\uff0cmsvc\u4e0d\u53ef\u4ee5\n    }\n    else\n    {\n        it++;\n    }\n}\n</code></pre></p> <p>\u4e0b\u5217\u4ee3\u7801\u53ea\u5728gcc\u53ef\u884c\uff0c\u56e0\u4e3aq.erase(it); \u7b49\u4ef7\u4e8eit=q.erase(it)\uff0c\u5728gcc\u4e2d <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main() {\n\u00a0 vector&lt;int&gt; q{1, 2, 3, 4, 5, 6};\n\u00a0 // \u5728\u8fd9\u91cc\u60f3\u628a\u5927\u4e8e2\u7684\u5143\u7d20\u90fd\u5220\u9664\n\u00a0 for (auto it = q.begin(); it != q.end();) {\n\u00a0 \u00a0 if (*it &gt; 2) {\n\u00a0 \u00a0 \u00a0 q.erase(it); \n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 ++it;\n\u00a0 \u00a0 }\n\u00a0 }\n\u00a0 // \u6253\u5370\u7ed3\u679c\n\u00a0 for (auto it = q.begin(); it != q.end(); it++) {\n\u00a0 \u00a0 cout &lt;&lt; *it &lt;&lt; \" \";\n\u00a0 }\n\u00a0 cout &lt;&lt; endl;\n\u00a0 return 0;\n\n}\n</code></pre></p>"},{"location":"C%2B%2B/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88/#2","title":"2 \u94fe\u8868\u5f0f\u5bb9\u5668","text":"<p>\u5bf9\u4e8e\u94fe\u8868\u5f0f\u5bb9\u5668(\u5982 list)\uff0c\u5220\u9664\u5f53\u524d\u7684 iterator\uff0c\u4ec5\u4ec5\u4f1a\u4f7f\u5f53\u524d\u7684 iterator \u5931\u6548\uff0c\u8fd9\u662f\u56e0\u4e3a list \u4e4b\u7c7b\u7684\u5bb9\u5668\uff0c\u4f7f\u7528\u4e86\u94fe\u8868\u6765\u5b9e\u73b0\uff0c\u63d2\u5165\u3001\u5220\u9664\u4e00\u4e2a\u7ed3\u70b9\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u7ed3\u70b9\u9020\u6210\u5f71\u54cd\u3002\u53ea\u8981\u5728 erase \u65f6\uff0c\u9012\u589e\u5f53\u524d iterator \u5373\u53ef\uff0c\u5e76\u4e14 erase \u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6709\u6548\u7684 iterator\u3002</p> <p>\u65b9\u5f0f\u4e00\uff1a\u9012\u589e\u5f53\u524d iterator</p> <pre><code>for (iter = cont.begin(); it != cont.end();)\n{\n   (*iter)-&gt;doSomething();\n   if (shouldDelete(*iter))\n      cont.erase(iter++);//\u7b49\u4ef7\u4e8eiter = cont.erase(iter);\uff0c\u628a\u5f53\u524d\u7684\u8fed\u4ee3\u5668\u5220\u6389\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\n   else\n      iter++;\n}\n</code></pre> <p>\u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7 erase \u83b7\u5f97\u4e0b\u4e00\u4e2a\u6709\u6548\u7684 iterator\uff08\u63a8\u8350\uff09</p> <pre><code>for (iter = cont.begin(); iter != cont.end();)\n{\n   (*it)-&gt;doSomething();\n   if (shouldDelete(*iter))\n      iter = cont.erase(iter);  //erase\u5220\u9664\u5143\u7d20\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u8fed\u4ee3\u5668\n   else\n      ++iter;\n}\n</code></pre>"},{"location":"C%2B%2B/%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88/#3","title":"3 \u5173\u8054\u5f0f\u5bb9\u5668","text":"<p>\u5bf9\u4e8e\u5173\u8054\u5bb9\u5668(\u5982 map, set,multimap,multiset)\uff0c\u5220\u9664\u5f53\u524d\u7684 iterator\uff0c\u4ec5\u4ec5\u4f1a\u4f7f\u5f53\u524d\u7684 iterator \u5931\u6548\uff0c\u53ea\u8981\u5728 erase \u65f6\uff0c\u9012\u589e\u5f53\u524d iterator \u5373\u53ef\u3002\u8fd9\u662f\u56e0\u4e3a map \u4e4b\u7c7b\u7684\u5bb9\u5668\uff0c\u4f7f\u7528\u4e86\u7ea2\u9ed1\u6811\u6765\u5b9e\u73b0\uff0c\u63d2\u5165\u3001\u5220\u9664\u4e00\u4e2a\u7ed3\u70b9\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u7ed3\u70b9\u9020\u6210\u5f71\u54cd\u3002erase \u8fed\u4ee3\u5668\u53ea\u662f\u88ab\u5220\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u4f46\u662f\u8fd4\u56de\u503c\u4e3a void\uff0c\u6240\u4ee5\u8981\u91c7\u7528<code>erase(iter++)</code>\u7684\u65b9\u5f0f\u5220\u9664\u8fed\u4ee3\u5668\u3002</p> <pre><code>for (iter = cont.begin(); it != cont.end();)\n{\n   (*iter)-&gt;doSomething();\n   if (shouldDelete(*iter))\n      cont.erase(iter++);\n   else\n      ++iter;\n}\n\n//\u6d4b\u8bd5\u9519\u8bef\u7684Map\u5220\u9664\u5143\u7d20\nvoid mapTest()\n{\n    map&lt;int, string&gt; dataMap;\n\n\n    for (int i = 0; i &lt; 100; i++)\n    {\n           string strValue = \"Hello, World\";\n\n            stringstream ss;\n            ss&lt;&lt;i;\n            string tmpStrCount;\n            ss&gt;&gt;tmpStrCount;\n            strValue += tmpStrCount;\n            dataMap.insert(make_pair(i, strValue));\n    }\n\n    cout&lt;&lt;\"MAP\u5143\u7d20\u5185\u5bb9\u4e3a\uff1a\"&lt;&lt;endl;\n     map&lt;int, string&gt;::iterator iter;\n    for (iter = dataMap.begin(); iter != dataMap.end(); iter++)\n    {\n            int nKey = iter-&gt;first;\n            string strValue = iter-&gt;second;\n            cout&lt;&lt;strValue&lt;&lt;endl;\n    }\n\n    cout&lt;&lt;\"\u5185\u5bb9\u5f00\u59cb\u5220\u9664\uff1a\"&lt;&lt;endl;\n    //\u5220\u9664\u64cd\u4f5c\u5f15\u53d1\u8fed\u4ee3\u5668\u5931\u6548\n    for (iter = dataMap.begin(); iter != dataMap.end();iter++)\n    {\n            int nKey = iter-&gt;first;\n            string strValue = iter-&gt;second;\n\n           if (nKey % 2  0)\n           {\n                dataMap.erase(iter);    //\u9519\u8bef\n\n           }\n           /* cout&lt;&lt;iter-&gt;second&lt;&lt;endl;*/\n    }\n}\n</code></pre> <p>dataMap.erase(iter);    //\u9519\u8bef \u89e3\u6790\uff1a<code>dataMap.erase(iter)</code>\u4e4b\u540e\uff0citer \u5c31\u5df2\u7ecf\u5931\u6548\u4e86\uff0c\u6240\u4ee5 iter \u65e0\u6cd5\u81ea\u589e\uff0c\u5373<code>iter++</code>\u5c31\u4f1a\u51fabug\u3002\u89e3\u51b3\u65b9\u6848\uff0c\u5c31\u662f\u5728 iter \u5931\u6548\u4e4b\u524d\uff0c\u5148\u81ea\u589e\u3002</p> <pre><code>void mapTest()\n{\n    map&lt;int, string&gt; dataMap;\n\n\n    for (int i = 0; i &lt; 100; i++)\n    {\n           string strValue = \"Hello, World\";\n\n            stringstream ss;\n            ss&lt;&lt;i;\n            string tmpStrCount;\n            ss&gt;&gt;tmpStrCount;\n            strValue += tmpStrCount;\n            dataMap.insert(make_pair(i, strValue));\n    }\n\n    cout&lt;&lt;\"MAP\u5143\u7d20\u5185\u5bb9\u4e3a\uff1a\"&lt;&lt;endl;\n    map&lt;int, string&gt;::iterator iter;\n    for (iter = dataMap.begin(); iter != dataMap.end(); iter++)\n    {\n            int nKey = iter-&gt;first;\n            string strValue = iter-&gt;second;\n            cout&lt;&lt;strValue&lt;&lt;endl;\n    }\n\n    cout&lt;&lt;\"\u5185\u5bb9\u5f00\u59cb\u5220\u9664\uff1a\"&lt;&lt;endl;\n    for (iter = dataMap.begin(); iter != dataMap.end();)\n    {\n            int nKey = iter-&gt;first;\n            string strValue = iter-&gt;second;\n\n           if (nKey % 2  0)\n           {\n                dataMap.erase(iter++);//\u6b63\u786e\n                auto a = iter;\n\n           }\n           else {\n               iter ++;\n           }\n    }\n}\n</code></pre> <p>\u89e3\u6790\uff1a<code>dataMap.erase(iter++);</code>\u8fd9\u53e5\u8bdd\u5206\u4e09\u6b65\u8d70\uff0c\u5148\u628a iter \u4f20\u503c\u5230 erase \u91cc\u9762\uff0c\u7136\u540e iter \u81ea\u589e\uff0c\u7136\u540e\u6267\u884c erase\uff0c\u6240\u4ee5 iter \u5728\u5931\u6548\u524d\u5df2\u7ecf\u81ea\u589e\u4e86\u3002</p> <p>map \u662f\u5173\u8054\u5bb9\u5668\uff0c\u4ee5\u7ea2\u9ed1\u6811\u6216\u8005\u5e73\u8861\u4e8c\u53c9\u6811\u7ec4\u7ec7\u6570\u636e\uff0c\u867d\u7136\u5220\u9664\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u6574\u68f5\u6811\u4e5f\u4f1a\u8c03\u6574\uff0c\u4ee5\u7b26\u5408\u7ea2\u9ed1\u6811\u6216\u8005\u4e8c\u53c9\u6811\u7684\u89c4\u8303\uff0c\u4f46\u662f\u5355\u4e2a\u8282\u70b9\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u6ca1\u6709\u53d8\u5316\uff0c\u53d8\u5316\u7684\u662f\u5404\u8282\u70b9\u4e4b\u95f4\u7684\u6307\u5411\u5173\u7cfb\u3002</p> <p>\u6240\u4ee5\u5728 map \u4e2d\u4e3a\u4e86\u9632\u6b62\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u5728\u6709\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u5e38\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <pre><code>for (iter = dataMap.begin(); iter != dataMap.end(); )\n{\n         int nKey = iter-&gt;first;\n         string strValue = iter-&gt;second;\n\n         if (nKey % 2  0)\n         {\n            map&lt;int, string&gt;::iterator tmpIter = iter;\n            iter++;\n            dataMap.erase(tmpIter);\n               //dataMap.erase(iter++) \u8fd9\u6837\u4e5f\u884c\n         } else {\n             iter++;\n         }\n}\n</code></pre>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01_stack/","title":"Stack","text":"<p>Stacks and queues are dynamic sets in which the element removed from the set by <code>Delete</code> operation is prespecified.</p> <p>In a <code>stack</code>, the element deleted from the set is the most recently inserted: the stack implements a <code>last-in, first-out</code> or <code>LIFO</code>, policy.</p> <p></p> <p>The <code>Insert</code> operation on a stack is often called <code>Push</code>, and the <code>Delete</code> operation, which does not take an element, is often called <code>Pop</code>. These names are allusions to physical stacks, such as the spring-loaded stacks of plates used in cafeteriass. The order in which plates are popped from the stack is the reverse of the order in which they were pushed onto the stack, since only the top plate is accessible.</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01_stack/#problems","title":"Problems","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01_stack/#implementation","title":"Implementation","text":"<p>This kind of problems mainly contains use other data structures of:</p> <ul> <li>array</li> <li>linked list</li> <li>queue</li> </ul> <p>to implement a <code>stack</code> class.</p> <ul> <li>155. Min Stack</li> <li>225. Implement Stack using Queues</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01_stack/#syntax-parsing","title":"Syntax Parsing","text":"<p>This kind of problems are mainly about the few elements at the end of lists, for example:</p> <ul> <li>Paretheses matching, which delete the parentheses matched;</li> <li>Path finding, which delete the elements at the back if <code>..</code> occurs.</li> </ul> <p>problems:</p> <ul> <li>20. Valid Parentheses</li> <li>71. Simplify Path</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01_stack/#expression-evaluation","title":"Expression Evaluation","text":"<p>The tytical problem of this is the calculator. We usually solve this with two stacks:</p> <ul> <li><code>number</code> stack, which records all numbers to be calculated\uff1b</li> <li><code>operator</code> stack, which stores operators(<code>(, ), +, -, *, /</code>) in increasing grade, <code>(, )</code> is 0, <code>+, -</code> is 1, <code>*, /</code> is 2.</li> </ul> <p>The general frame is: <pre><code>stack&lt;string&gt; ops;\nstack&lt;int&gt; nums;\nint i = 0;\nwhile (i &lt; str.size()) {\n  if (is_left_parenth) {\n    // push to ops\n    ++i;\n  } else if (is_right_parenth) {\n    // calculate numbers and operators util ops.top() is left parenth\n    // ops.pop()\n    ++i\n  } else if (is_number) {\n    // get the whole number\n    // push the number to number stack\n    ++i\n  } else if (is_operator) {\n    // if curr_op &lt;= ops.top()\n    // calculate the operators\n    // push curr_op to operator stack\n    ++i\n  }\n}\n</code></pre></p> <ul> <li>150. Evaluate Reverse Polish Notation</li> <li>224. Basic Calculator</li> <li>227. Basic Calculator II</li> <li>772. Basic Calculator III</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01_stack/#monotonous-stack","title":"Monotonous Stack","text":"<p>Monotonous stack make sure that all elements from bottom to top are in increasing or decreasing order. To do so, use the loop:</p> <pre><code>stack&lt;int&gt; ss{};\nfor (auto n : nums) {\n  while (!ss.empty() &amp;&amp; n &lt;= ss.top()) ss.pop();\n  ss.push(n);\n}\n</code></pre> <p>Sometimes we want to choose <code>n</code> number form a list, the relative order of the digits from the list should be preserved and make the new number with the length of <code>n</code> maximum.</p> <p>This could also be created with monotonous stack:</p> <pre><code>int drop = arr.size() - n;\nstack&lt;int&gt; ss{};\nfor (auto n : nums) {\n  while (drop &amp;&amp; !ss.empty() &amp;&amp; ss.top() &lt;= n) { ss.pop(); --drop; }\n  ss.push(n);\n}\nwhile (ss.size() &gt; n) ss.pop();\n</code></pre> <ul> <li>42. Trapping Rain Water</li> <li>84. Largest Rectangle in Histogram</li> <li>321. Create Maximum Number</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02_queue/","title":"Queue","text":"<p>In computer science, a queue is a collection of entities that are maintained in a sequence and can be modified by the addition of entities at one end of the sequence and the removal of entities from the other end of the sequence. By convention, the end of the sequence at which elements are added is called the back, tail, or rear of the queue, and the end at which elements are removed is called the head or front of the queue, anologously to the words used when people line up to wait for goods or services.</p> <p></p> <p>The operations of a queue make it a <code>first-in-first-out(FIFO)</code> data structure. Common implementations of queue are:</p> <ul> <li>circular buffers</li> <li>linked lists</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02_queue/#problems","title":"Problems","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02_queue/#implementation","title":"Implementation","text":"<ul> <li>232. Implement Queue Using Stack</li> <li>346. Moving Average from Data Stream</li> <li>622. Design Circular Queue</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02_queue/#breadth-first-search","title":"Breadth First Search","text":"<p>A common use of BFS is to find the shortest path, in other words, the minimum steps from start state to the target state. If the problem is about states transforming and we can traverse all states step by step, we can use DFS to find the answer.</p> <p>The general pattern for BFS is:</p> <pre><code>queue&lt;Node&gt; q{};\nq.push(start_node);\nwhile (!q.empty()) {\n  auto node = q.front();\n  q.pop();\n\n  for (auto n : node.next_nodes()) {\n    q.push_back(n);\n  }\n}\n</code></pre> <p>And if we want to count how many times (steps) the state transformation happens, we should use deque and add the counter:</p> <pre><code>deque&lt;Node&gt; q{};\nq.push_back(start_node);\nint step = 0;\nwhile (!q.empty()) {\n  auto size = q.size();\n  while (size--) {\n    auto node = q.front();\n    q.pop_front();\n\n    for (auto n : node.next_nodes()) {\n      q.push_back(n);\n    }\n  }\n  ++step;\n}\n</code></pre> <p>And more often, we do not want to visit a state twice(because the state is viisted and there is no need to do it again), we can choose which node can enqueue:</p> <pre><code>deque&lt;Node&gt; q{};\nq.push_back(start_node);\nunordered_set&lt;Node&gt; visited{};\nvisited.insert(start_node);\nint step = 0;\nwhile (!q.empty()) {\n  auto size = q.size();\n  while (size--) {\n    auto node = q.front();\n    q.pop_front();\n\n    for (auto n : node.next_nodes()) {\n      if (visited.count(n)) continue;\n      visited.insert(n);\n      q.push_back(n);\n    }\n  }\n  ++step;\n}\n</code></pre> <ul> <li>Walls and Gates</li> <li>Number of Islands</li> <li>Open the Lock</li> <li>Sliding Window Maximum</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02_queue/#reference","title":"Reference","text":"<ul> <li>LeetBook Queue and Stack</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/","title":"Linked List","text":"<p>A <code>linked list</code> is a data structure in which the objects are arranged in a linear order. Unlike an array, however, in which the linear order is determined by the array indeces, the order in a linked list is determined by a pointer in each object. Linked lists provide a simple, flexible representation for dynamic sets, supporting (though not necessaryily efficiently) all the operations.</p> <p>Each record of a linked list is often called an <code>node</code>.</p> <p>The field of each node that contains the address of the next node is usually called the <code>next link</code> or <code>next pointer</code>. The remaining fields are known as the <code>data</code>.</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#types","title":"Types","text":"<p>Generally, there are two kinds of linked list:</p> <ul> <li>singly linked list</li> <li>Doubly linked list</li> </ul> <p>The operation complexities are:</p> Insert/Delete Check/Modify O(1) O(n)"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#singly-linked-list","title":"Singly Linked List","text":"<p>Singly linked lists contain nodes which have a data field as well as <code>next</code>, which points to the next node in line of nodes.</p> <pre><code>struct Node {\n  int val{0};\n  Node* next{nullptr};\n};\n</code></pre>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#doubly-linked-list","title":"Doubly Linked List","text":"<p>In a doubly linked list, each node contains, besides the next-node link, as second link field pointing to the <code>previous</code> node in the sequence.</p> <pre><code>struct Node {\n  int val{0};\n  Node* prev{nullptr};\n  Node* next{nullptr};\n};\n</code></pre>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#problems","title":"Problems","text":"<p>The problems about linked list are generally easy, but it may take much attention to care about:</p> <ul> <li>check the if pointer of linked list is valid</li> <li>check if the node is correct while traveling the linked list</li> <li>sometimes it will simplify the code if we add a dump node at the head or tail of linked list.</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#implementation","title":"Implementation","text":"<p>Implementation involves operations of delete and add:</p> <ul> <li>for singly linked list</li> </ul> <pre><code>// Add after node\nauto next = new Node{val, node-&gt;next};\nnode-&gt;next = next;\n\n// Delete the node behind\nnode-&gt;next = node-&gt;next-&gt;next;\n</code></pre> <ul> <li>for doubly linked list</li> </ul> <pre><code>// Add after node\nauto next = new Node{val, node, node-&gt;next};\nnext-&gt;prev-&gt;next = next;\nnext-&gt;next-&gt;prev = next;\n\n// Delete the node behind\nnode-&gt;next-&gt;next-&gt;prev = node;\nnode-&gt;next = node-&gt;next-&gt;next;\n</code></pre> <ul> <li>Design Linked List</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#reverse-linked-list","title":"Reverse Linked List","text":"<p>This problem often works as the intermediate step in other more complex problems.</p> <p>The main idea is to put the node to the head while traversing all the nodes.</p> <pre><code>auto node = head-&gt;next;\n    head-&gt;next = nullptr;\n    while (node) {\n      auto tmp = node-&gt;next;\n      node-&gt;next = head;\n      head = node;\n      node = tmp;\n    }\n</code></pre> <ul> <li>Reverse Linked List</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#double-pointer","title":"Double Pointer","text":"<p>The typical usage of double pointers is to check if the linked list is circular and the entry of loop. In this skill we have two pointers:</p> <ul> <li>slow pointer, which goes one step once;</li> <li>faster pointer, which goes two steps once.</li> </ul> <pre><code>auto slow = head;\nauto fast = head-&gt;next;\nwhile (fast &amp;&amp; fast-&gt;next) {\n  slow = slow-&gt;next;\n  fast = fast-&gt;next-&gt;next;\n}\n</code></pre> <p>If two pointers meet at the same node, the linked list is circular.</p> <p>In other situations, double pointers of slow and fast can divide the linked into two equal parts, because fast pointer goes twice of the slow, and when fast stops at the tail, the slow stops at the middle.</p> <ul> <li>Linked List Cycle</li> <li>Linked List Cycle II</li> <li>Intersection of Two Linked List</li> <li>Remove Nth Node from End of List</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/03_linked_list/#other","title":"Other","text":"<ul> <li>Flateen a Multilevel Doubly Linked List</li> <li>Copy List with Random Pointer</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/045_kd_tree/","title":"K-d Tree","text":"<p>A k-d tree(short for k-dimension tree) is a space-partitioning data structure for organizing points in a k-dimensional space. k-d trees are a useful data structure for several applications, such as searches involving a multidimensional search key (e.g. range searches and nearest neighbor searches). k-d trees are a special case of binary space partitioning trees.</p> <p>k-d trees are not suitable, however, for efficiently finding the nearest neighbor in high dimensional spaces. As a general rule, if the dimensionality is <code>k</code>, the number of point in the data is <code>N</code>, should be:</p> \\[ N \\gg 2^k \\] <p>Otherwise, when k-d trees are used with high-dimensional data, most of the points in the tree will be evaluated and the efficiency is no better than exhaustive search, and other methods such as approximate nearest-neighbor are used instead.</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;array&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;functional&gt;\n\n/// @class the KdTree Implementation\ntemplate&lt;typename T, size_t D&gt;\nclass KdTree {\n public:\n  using Point = std::array&lt;T, D&gt;;\n\n private:\n  /// @struct Kdtree node defination\n  struct Node {\n    Point point{};\n    Node* left{nullptr};\n    Node* right{nullptr};\n  };\n\n  /// @struct Less compare operator for two points \n  struct NodeComp {\n    size_t index{0};\n\n    bool operator()(const Point&amp; a, const Point&amp; b) {\n      return a[index] &lt; b[index];\n    }\n  };\n\n  /// Build the tree with a list of points recursively\n  /// @return root of the tree\n  Node* build_tree(\n      std::vector&lt;Point&gt;&amp; pts, size_t begin, size_t end, size_t dim) {\n    if (begin &gt;= end) return nullptr;\n\n    size_t mid = begin + (end - begin) / 2;\n    auto it = pts.begin();\n    std::nth_element(it + begin, it + mid, it + end, NodeComp{.index = dim});\n    dim = ++dim % D;\n\n    return new Node{pts[mid], build_tree(pts, begin, mid, dim),\n                              build_tree(pts, mid + 1, end, dim)};\n  }\n\n  /// Calculate the square distance of two points\n  /// @return squre distance\n  double sqr_dis(const Point&amp; p1, const Point&amp; p2) {\n    double ans{0};\n    for (size_t i = 0; i &lt; D; ++i) ans += (p1[i] - p2[i]) * (p1[i] - p2[i]);\n    return ans;\n  }\n\n  /// Get the nearest point and distance by the given point\n  void nearest(const Node* root, const Point&amp; tar, size_t dim, Point&amp; best,\n               double&amp; min_dis) {\n    if (!root) return;\n\n    const double d = sqr_dis(root-&gt;point, tar);\n    if (d &lt; min_dis) {\n      min_dis = d;\n      best = root-&gt;point;\n    }\n\n    const double dx = root-&gt;point[dim] - tar[dim];\n    dim = ++dim % D;\n\n    nearest(dx &gt; 0 ? root-&gt;left : root-&gt;right, tar, dim, best, min_dis);\n    if (dx * dx &gt; min_dis) return;\n    nearest(dx &gt; 0 ? root-&gt;right : root-&gt;left, tar, dim, best, min_dis);\n  }\n\n public:\n  /// Copy control\n  KdTree(const KdTree&amp;) = delete;\n  KdTree&amp; operator=(const KdTree&amp;) = delete;\n  KdTree(KdTree&amp;&amp;) = delete;\n  KdTree&amp; operator=(KdTree&amp;&amp;) = delete;\n\n  ~KdTree() {\n    std::function&lt;void(Node*)&gt; f = [&amp;f](Node* root) {\n      if (!root) return;\n      f(root-&gt;left);\n      f(root-&gt;right);\n      delete root;\n      root = nullptr;\n      return;\n    };\n\n    f(root);\n  }\n\n  /// Constructor with a list of points\n  KdTree(std::vector&lt;Point&gt; pts) {\n    root = build_tree(pts, 0, pts.size(), 0);\n  }\n\n  /// Get the nearest point and distance with given point\n  /// @return point and distance of the nearest\n  std::pair&lt;Point, double&gt; Nearest(const Point&amp; tar) {\n    if (!root) return {};\n\n    double min_dis{std::numeric_limits&lt;double&gt;::max()};\n    Point ans{};\n    nearest(root, tar, 0, ans, min_dis);\n\n    return {ans, std::sqrt(min_dis)};\n  }\n\n private:\n  Node* root{nullptr};\n};\n\n/// Test code\nint main() {\n  std::vector&lt;std::array&lt;double, 2&gt;&gt; pts{\n      {2, 3}, {5, 4}, {9, 6}, {4, 7}, {8, 1}, {7, 2}};\n  KdTree&lt;double, 2&gt; kdt{pts};\n\n  auto [pt, dis] = kdt.Nearest({9, 2});\n  std::cout &lt;&lt; \"nearest: (\" &lt;&lt; pt[0] &lt;&lt; \", \" &lt;&lt; pt[1] &lt;&lt; \") in \" &lt;&lt; dis\n            &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/045_kd_tree/#reference","title":"Reference","text":"<ul> <li>K-d Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/","title":"Tree","text":"<p>A <code>tree</code> is a widely used abstract data type that simulate a hierarchical tree structure, with a root value and subtrees of children with a paarent node, represented as a set of linked nodes. Some nodes are:</p> <p></p> <ul> <li><code>node</code>: a structure wich may contain a value or condition, or represent a separate data structure.</li> <li><code>child node</code>: each node in a tree has zero or more child node, which are below it in the tree.</li> <li><code>parent node</code>: a node has a child is called the child's parent node(or <code>superior</code>).</li> <li><code>acestor node</code>: a node's parent's parent, a node has at most one parent but possibly many ancestor nodes.</li> <li><code>sibling nodes</code>: child nodes with the same paarent are  sibling nodes.</li> <li><code>root node</code>: the tomost node in a tree.</li> <li><code>branch nodes</code>: any node of a tree that has child nodes.</li> <li><code>leaf nodes</code>: any node that does not have child nodes.</li> <li><code>height</code> of a node: the length of the longest downward path to a leaf from that node.</li> <li><code>depth</code> of a node: the length of the path to root.</li> </ul> <p>The general solutions for tree often involves with recursion, a function which calls itself. We can use the following steps to define the recursive function:</p> <ol> <li>Consider the return value;</li> <li>Consider the parameter list;</li> <li>Consider the terminal condition;</li> <li>Consider the level logic.</li> </ol>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#binary-tree","title":"Binary Tree","text":"<p><code>Binary Tree</code> is a kind of <code>tree</code> that each node has at most two children, which are refered to as the <code>left child</code> and <code>right child</code>.</p> <p></p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#traversal","title":"Traversal","text":"<p>There are mainly two methods to traversal a binary tree:</p> <ol> <li>Depth First Search(BFS), and according to the order we visited the parent node, BFS can be divided into:<ol> <li><code>pre-order traversal</code>: first visiting parent node, and then left and right child;</li> <li><code>in-order traversal</code>: first visiting left child, and then parent node, and then right child;</li> <li><code>post-order traversal</code>: first visiting left and right child, and then parent node.</li> </ol> </li> <li>Bread First Search(BFS), which visits the tree layer by layer.</li> </ol> <p>The general code for DFS is:</p> <pre><code>void dfs(TreeNode* root) {\n  if (!root) return;\n\n  // visit root-&gt;val here, pre-order\n  dfs(root-&gt;left);\n  // visit root-&gt;val here, in-order\n  dfs(root-&gt;right);\n  // visit root-&gt;val here, post-order\n}\n</code></pre> <ul> <li>Binary Tree Preorder Traversal</li> <li>Binary Tree Inorder Traversal</li> <li>Binary Tree Postorder Traversal</li> </ul> <p>And for BFS:</p> <pre><code>void bfs(TreeNode* root) {\n  if (!root) return;\n\n  deque&lt;TreeNode*&gt; q{};\n  q.push_back(root);\n\n  while (!q.empty()) {\n    auto size = q.size();\n    while (size--) {  // visit each layer\n      auto node = q.front();\n      q.pop_front();\n\n      if (node-&gt;left) q.push_back(node-&gt;left);\n      if (node-&gt;right) q.push_back(node-&gt;right);\n    }\n  }\n}\n</code></pre> <ul> <li>Binary Tree Level Order Traversal</li> </ul> <p>There are other types of traversal, but all can be solved with above methods.</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#priorities","title":"Priorities","text":"<p>Sometimes we want to get the priority of a tree, like:</p> <ul> <li>Symmetric/Same</li> <li>Maximum/Minimum depth</li> <li>Balance</li> <li>Number of nodes</li> <li>Sum of the path from root to leaf node</li> <li>Common ancestor</li> </ul> <p>Problems:</p> <ul> <li>Symmetric Tree</li> <li>Maximum Depth of Binary Tree</li> <li>Minimum Depth of Binary Tree</li> <li>Count Complete Tree Nodes</li> <li>Balanced Binary Tree</li> <li>Binary Tree Paths</li> <li>Lowest Common Ancestor of a Binary Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#modify-and-construct","title":"Modify and Construct","text":"<ul> <li>Invert Binary Tree</li> <li>Constract Binary Tree from Inorder and Postorder Traversal</li> <li>Serialize and Deserialize Binary Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#binary-search-tree","title":"Binary Search Tree","text":"<p>Binary Search Tree(BST) is a binary tree has the priority:</p> <p>Each branch node stores a key greater than all the keys in left subtree and less than those in its right substree.</p> <p>The order of nodes in a BST means that each comparison skips about half of the remaining tree, so the whole lookup takes \\(log(N)\\) time.</p> <p>For BST problems, you can convert a BST to a sorted array by inorder traversal. Or, you can also use an extral pointer pointing to node visited last time in inorder traversal to get the left node in an sorted array.</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#priority","title":"Priority","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#search","title":"Search","text":"<ul> <li>Search in a Binary Search Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#check","title":"Check","text":"<ul> <li>Validate Binary Search Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#application","title":"Application","text":"<ul> <li>Minimum Absolute difference in BST</li> <li>Find Mode in Binary Search Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#construct-and-modify","title":"Construct and Modify","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#construct","title":"Construct","text":"<ul> <li>Convert Sorted Array to Binary Search Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#insert","title":"Insert","text":"<ul> <li>Insert into a Binary Search Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#delete","title":"Delete","text":"<ul> <li>Delete Node in a BST</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/04_tree/#trim","title":"Trim","text":"<ul> <li>Trim a Binary Search Tree</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/","title":"Hash Table","text":"<p>A <code>hash table</code> is a data structure that implements an associative array abstract data type, a structure that can map <code>keys</code> to <code>values</code>.</p> <p></p> <p>A <code>hash table</code> use a <code>hash function</code> to compute an index of <code>buckets</code> with <code>keys</code> to store desired <code>values</code>.</p> <p>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ an imperfect hash function, which might cause <code>hash collisions</code> where the hash function generate the same index for more than one key. The resolution of collision may contain:</p> <ul> <li><code>seperate chaining</code>, if collision occers, we store both elements in the same bucket;</li> </ul> <p></p> <ul> <li><code>linear probing</code>, when collision occers, we look for a new empty bucket to store the element.</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/#problems","title":"Problems","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/#implementation","title":"Implementation","text":"<p>For the implementation of hash table, we can simply use a vector of linked list with the size of prime number. When addition, we just attach a new element at the end of linked list(bucket); and for deletion, we can swap the position of element to be deleted with the last element and then delete the last element.</p> <ul> <li>Design Hashset</li> <li>Design Hashmap</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/#duplication-detectionhash-set","title":"Duplication Detection(Hash Set)","text":"<p>We can use the hashset to check if an element have been visited while traversaling.</p> <ul> <li>Contains Duplicate</li> <li>Single Number</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/#associating-keys-with-more-informationhash-map","title":"Associating Keys with more Information(Hash Map)","text":"<p>We can use hashmap to create connections between keys and information about keys. For example, connecting the value and its index in an array.</p> <ul> <li>Two Sum</li> <li>Minimum Index Sum of Two Lists</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/#grouping-elements-with-keyshash-map","title":"Grouping Elements with Keys(Hash Map)","text":"<p>We can also group all elements with the same identity.</p> <ul> <li>First Unique Charactor in a String</li> <li>Intersection of Two arrays II</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/05_hash/#designing-key-to-use-hash","title":"Designing Key to Use Hash","text":"<p>Sometimes we want to use the hash table to deal with problems, but the key of elements is not as simple as int, string, etc.</p> <p>The general variants are:</p> <ol> <li>Sorted string, if the order of charactors is not important;</li> <li>Offset of each element;</li> <li>Serialized string, if the element is a tree;</li> <li>Row or Coloumn index, if you are dealing with matrix.</li> </ol> <p>Problems:</p> <ul> <li>Group Anagrams</li> <li>Group Shifted Strings</li> <li>Valid Sudoku</li> <li>Find Duplicate Subtrees</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/06_array/","title":"Array","text":"<p>In computer science, an <code>array data structure</code>, or simply an <code>array</code>, is a data structure consisting of a cllection of elements(values or variables), each identified by at least one <code>array index</code> or <code>key</code>. An array is stored such that the position of each element can be computed from its index tuple by a mathematical formula. The simplest type of data structure is linear array, also called one-dimensional array. We can also use an array to store another array, which is called the 2-dimensional array.</p> <p>Arrays are among the oldest and most important data structures, and are used by almost every program. They are also used to implement many other data structures, such as lists and strings. They effectively exploit the addressing logic of computers. In most modern computers and many external storage device, the memory is one-dimensional array of words, whose indices are their addresses. Processors, especially vector processors, are often optimized for array operations.</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/06_array/#operations","title":"Operations","text":"<p>The operations ant their time complexities of array are:</p> <ul> <li>Read an element by its index, \\(O(1)\\);</li> <li>Look up an element, \\(O(N)\\);</li> <li>Insert an element, \\(O(1)\\) for back, \\(O(N)\\) for random;</li> <li>Delete an element, \\(O(1)\\) for back, \\(O(N)\\) for random.</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/06_array/#problems","title":"Problems","text":"<p>Generally speaking, the problems about array are simple, but it may need more complex methods like:</p> <ul> <li>doubly pointer;</li> <li>dynamic programming;</li> <li>greedy;</li> <li>dfs;</li> <li>bfs;</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/075_lru/","title":"LRU(Latest Recently Used) Cache","text":"<p>Least Recently Used(LRU) is a common caching strategy. It defines the policy to evict elements from the cache to make room for new elements when the cache is full, meaning it discards the least recently used items first.</p> <pre><code>class LRUCache {\n  struct Node {\n    int key{0};\n    int val{0};\n    Node* prev{nullptr};\n    Node* next{nullptr};\n  };\n\n  Node* head{new Node{}};\n  Node* tail{new Node{.prev = head}};\n  int cap{0};\n  unordered_map&lt;int, Node*&gt; k_n{};\n\n  void to_head(Node* node) {\n    if (node-&gt;prev) node-&gt;prev-&gt;next = node-&gt;next;\n    if (node-&gt;next) node-&gt;next-&gt;prev = node-&gt;prev;\n    node-&gt;prev = head;\n    node-&gt;next = head-&gt;next;\n    node-&gt;prev-&gt;next = node;\n    node-&gt;next-&gt;prev = node;\n  }\n\n  void trim_tail() {\n    k_n.erase(tail-&gt;prev-&gt;key);\n    auto died = tail-&gt;prev;\n    tail-&gt;prev-&gt;prev-&gt;next = tail;\n    tail-&gt;prev = tail-&gt;prev-&gt;prev;\n    delete died;\n  }\n\n public:\n  LRUCache(int capacity) : cap{capacity} {\n    head-&gt;next = tail;\n  } \n  ~LRUCache() { delete head; delete tail; }\n\n  int get(int key) {\n    if (!k_n.count(key)) return -1;\n    to_head(k_n[key]);\n    return k_n[key]-&gt;val;\n  }\n\n  void put(int key, int value) {\n    if (!k_n.count(key)) k_n[key] = new Node{key, value};\n    to_head(k_n[key]);\n    k_n[key]-&gt;val = value;\n    if (k_n.size() &gt; cap) trim_tail();\n  }\n};\n</code></pre>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/076_lfu/","title":"LFU","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/","title":"String","text":"<p>A <code>string</code> is traditionally a sequence of charactors, either as a literal constant or as some kind of variable. The storage of string can be:</p> <ul> <li>an array of <code>char</code> with the end of <code>\\0</code>, which is the <code>C</code>-style string;</li> <li>the stl <code>string</code> container, whose length is changable;</li> <li>literal constant(some charactors enclosed by <code>\"\"</code>).</li> </ul> <p>Some definiations:</p> <ul> <li>Prefix: a string <code>s</code> is said to be a prefix of <code>t</code> if there exists a string <code>u</code> such that <code>t = su</code>;</li> <li>Proper prefix: if <code>u</code> is nonempty, <code>s</code> is said to be a <code>proper prefix</code> of <code>t</code>;</li> <li>Suffix: a string <code>s</code> is said to be a prefix of <code>t</code> if there exists a string <code>u</code> such that <code>t = us</code>;</li> <li>Proper suffix: if <code>u</code> is nonempty, <code>s</code> is said to be a <code>proper prefix</code> of <code>t</code>;</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#pattern-matching","title":"Pattern Matching","text":"<p>This probelm is defined as:</p> <p>Given strings <code>s</code> and <code>t</code>, find the position that <code>t</code> appears in <code>s</code> for the first time. <code>t</code> is called the <code>pattern</code>.</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#brute-force","title":"Brute Force","text":"<p>The basic method is to enumerate the start position of substring in pattern, and check if it's true;</p> <pre><code>for (int i = 0; i &lt; m; ++i) {\n  bool is_sub{true};\n  for (int j = 0; j &lt; n; ++j) {\n    if (pattern[i + j] == substr[j]) continue;\n    is_sum = false;\n    break;\n  }\n  if (is_sub) return i;\n}\n\nreturn -1;\n</code></pre> <p>The time complexity is \\(O(mn)\\), which costs a lot;</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#knuth-morris-prattkmp","title":"Knuth-Morris-Pratt(KMP)","text":"<p>The disadvantage of BF is that every time comparing the <code>s</code> and <code>t</code> we have to return to the start of substring if failed, which wastes much time.</p> <p>If the repeated string appears in substring, we can jump over the same prefix of the string and check the first different charactor when mismatching occurs. Where comes the <code>next</code> array:</p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#next-array","title":"<code>next</code> Array","text":"<p>Generally speaking, <code>next</code> is an array that <code>next[i]</code> represents the length of the longest common proper prefix of two string:</p> <ol> <li>prefix of string <code>s[0:i - 1]</code>;</li> <li>suffix of string <code>s[0:i - 1]</code>;</li> </ol> <p>where <code>s</code> is the given substring.</p> <p></p> <p>We let <code>next[0] = -1</code> because <code>s[0:-1]</code> has no proper prefix. And at the position <code>i</code> we fill the result of <code>next[i + 1]</code>, so the terminate condition is <code>i &lt; n - 1</code>.</p> <pre><code>int i = 0;  // for main loop\nint j = next[0] = -1;  // for common part of prefix and suffix\nwhile (i &lt; n - 1) {  // n is the length of s, i &lt; n - 1 to ensure index safety\n  if (j &lt; 0 || s[i] == s[j]) {  // matching\n    next[++i] = ++j;\n  } else {\n    j = next[j];  // not matching, go to first different position\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#main-process","title":"Main Process","text":"<p>The main process is the same with how we get the <code>next</code> array:</p> <pre><code>int i = 0, j = 0;\nwhile (i &lt; m) {\n  if (j &lt; 0 || t[i] == s[j]) {\n    ++i; ++j;\n  } else {\n    j = next[j];\n  }\n  if (j == n) return i - n;\n}\n\nreturn -1;\n</code></pre> <p>The time complexity of KMP is \\(O(m + n)\\).</p> <p>Problems:</p> <ul> <li>implement-strstr</li> <li>longest-happy-prefix</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#substring","title":"Substring","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/07_string/#prefixes-and-suffixes","title":"Prefixes and Suffixes","text":""},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/08_trie/","title":"Trie","text":"<p>In computer science, a <code>trie</code>, also called <code>digital tree</code> or <code>prefix tree</code>, is a type of <code>k-ary search tree</code>, a tree data structure used for locating specific keys from within as set. These keys are most often strings, with links between nodes defined not by the entire key, but by individual characters.  Unlike a binary search tree, nodes in the trie do not store their associated key, Instead, a node's position in the trie defines the key with which it is associated.</p> <p></p>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/08_trie/#implementation","title":"Implementation","text":"<p>An implementation of trie can be:</p> <pre><code>class Trie {\n  struct Node {\n    bool is_word{false};\n    vector&lt;Node*&gt; child{};\n    Node() : child(26, nullptr) {};\n  };\n  Node* root{new Node{}};\n public:\n  void insert(const string&amp; word) {\n    auto node = root;\n    for (auto c : word) {\n      if (!node-&gt;child[c - 'a']) node-&gt;child[c - 'a'] = new Node{};\n      node = node-&gt;child[c - 'a'];\n    }\n    node-&gt;is_word = true;\n  }\n\n  bool search(const string&amp; word) {\n    auto node = root;\n    for (auto c : word) {\n      if (!node-&gt;child[c - 'a']) return false;\n      node = node-&gt;child[c - 'a'];\n    }\n    return node-&gt;is_word;\n  }\n\n  bool startsWith(const string&amp; prefix) {\n    auto node = root;\n    for (auto c : prefix) {\n      if (!node-&gt;child[c - 'a']) return false;\n      node = node-&gt;child[c - 'a'];\n    }\n    return true;\n  }\n};\n</code></pre> <ul> <li>Implement Trie Prefix Tree</li> <li>Map Sum Pairs</li> <li>Replace Words</li> <li>Design Search Autocomplete System</li> <li>Design Add and Search Words Data Structure</li> <li>Maximum Xor of Two Numbers in an Array</li> <li>Word Search II</li> <li>Word Squares</li> <li>Palindrome Pairs</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/09_union_find/","title":"Union-Find","text":"<p>A <code>union-find</code>, is a data structure that stores a collection of disjoint(non-overlapping) setting. Equivalently, it stores a partition of a set into disjoint subsets. It provides operations for adding new sets, merging sets and finding a representative member of a set.</p> <pre><code>class UnionFind {\n public:\n  Union(int n) : size(n - 1, 1), cnt{n} {\n    for (int i = 0; i &lt; n; ++i) parent.push_back(i);\n  }\n\n public:\n  int Find(int x) {\n    if (parent[x] != x) parent[x] = find(parent[x]);\n    return parent[x];\n  }\n\n  bool Union(int x, int y) {\n    int xx = find(x);\n    int yy = find(y);\n    if (xx == yy) return false;\n    if (size[xx] &gt; size[yy]) swap(xx, yy);\n    parent[xx] = yy;\n    size[yy] += size[xx];\n    cnt--;\n    return true;\n  }\n\n  int Count() { return cnt; }\n\n  bool Connect(int x, int y) { return find(x) == find(y); }\n\n private:\n  vector&lt;int&gt; parent{};\n  vector&lt;int&gt; size{};\n  int cnt{0};\n};\n</code></pre> <p>Problems:</p> <ul> <li>satisfiability-of-equality-equations</li> <li>number-of-provinces</li> <li>redundant-connection</li> <li>number-of-operations-to-make-network-connected</li> <li>number-of-provinces</li> <li>evaluate-division</li> <li>regions-cut-by-slashes</li> <li>swim-in-rising-water</li> <li>smallest-string-with-swaps</li> <li>most-stones-removed-with-same-row-or-column</li> <li>bricks-falling-when-hit</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/10_bit/","title":"Fenwick Tree","text":"<p>A <code>Fenwick tree</code> or <code>binary indexed tree</code> is a data structure that can efficiently update elements and calculate prefix sums in a table of numbers.</p> <p>When compared with a flat array of numbers, the Fenwick tree achieves a much better balance between two operations:</p> <ul> <li>element udpate;</li> <li>prefix sum calculattion.</li> </ul> <p>A flat array of <code>n</code> numbers can either store the elements or the prefix sums. Fenwick trees allow both operations above to be performed in \\(O(logn)\\) time. This is achieved by representing the numbers as a tree, where the value of each node is the sum of the numbers in that subtree.</p> Algorithm Time Complexity Space \\(O(n)\\) Search \\(O(logn)\\) Insert \\(O(logn)\\) Delete \\(O(logn)\\) <p>A Fenwick tree is most easily understood by considering a one-based array. Each element whose index <code>i</code> is a power of 2 contains the sum of the first <code>i</code> elements. Elements whose indices are the sum of two (distinct) powers of 2 contains the sum of the elements since the preceding power of 2. In general, each element contains the sum of the values since its parent in the tree, and that parent is found by clearing the least significant bit in the index.</p> <pre><code>class FenwickTree {\n public:\n  NumArray(vector&lt;int&gt;&amp; nums) : tree(nums.size() + 1, 0), arr{nums} {\n    for (int i = 0; i &lt; arr.size(); ++i) add(i + 1, arr[i]);\n  }\n\n  void update(int x, int val) {\n    add(x + 1, val - arr[x]);\n    arr[x] = val;\n  }\n\n  int sumRange(int l, int r) {\n    return query(r + 1) - query(l);\n  }\n\n private:\n  int query(int x) {\n    int ans = 0;\n    for (; x; x -= x &amp; -x) ans += tree[x];\n    return ans;\n  }\n\n  void add(int x, int v) {\n    for (; x &lt; tree.size(); x += x &amp; -x) tree[x] += v;\n  }\n\n  vector&lt;int&gt; tree{};\n  vector&lt;int&gt; arr{};\n};\n</code></pre> <ul> <li>range-sum-query-mutable</li> </ul>"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/11_segment_tree/","title":"Segment Tree","text":"<p>A <code>segment tree</code> is a data structure that allows answering range querying over an array effectively, while still being flexible enough to allow modifying the array. This includes finding the sum of consecutive array elements <code>a[l : r]</code>, or finding the minimum element in a such a range in \\(O(log n)\\) time. Between answering such queries, the Segment Tree allows modifying the array by replacing one element, or even changing the elements of a whole subsegment (e.g. assigning all elements <code>a[l : r]</code> to any value, or adding a value to all element in the sub segment).</p> <p>The root node of the segment tree is <code>1</code>, and for an array <code>a = {10, 11, 12, 13, 14}</code>, the segment tree will be like:</p> <p></p> <pre><code>/// Segment tree for range sum\nclass SegmentTree {\n public:\n  /// Reset data and change list to the size of 4n, where n is the size of array\n  SegmentTree(const vector&lt;int&gt;&amp; a) : d(4 * a.size(), 0), b(4 * a.size(), 0) {\n    build(0, a.size() - 1, 1, a);\n  }\n\n  /// Recursively build the tree\n  void build(int s, int e, int p, const vector&lt;int&gt;&amp; a) {\n    if (s == e) { d[p] = a[s]; return; }\n\n    int m = s + (e - s) / 2;  // mid of the range\n    build(s, m, p * 2, a)t\n    build(m + 1, e, p * 2 + 1, a);\n    d[p] = d[p * 2] + d[p * 2 + 1];\n  }\n\n  /// Pushdown the bias\n  void pushdown(int s, int e, int m, int p) {\n    if (!b[p]) return;\n    // update current node's left and right child's data and bias\n    // range [l, r] add a bias\n    d[p * 2] += (m - s + 1) * b[p], d[p * 2 + 1] += (e - m) * b[p];\n    b[p * 2] += b[p], b[p * 2 + 1] += b[p];\n    b[p] = 0;  // clear current node's bias\n  }\n\n  /// Update the range [l, r] to c in the tree d[p], which is the range [s, e]\n  void update(int l, int r, int c, int s, int e, int p) {\n    if (l &lt;= s &amp;&amp; e &lt;= r) {  // l &lt;= s &lt;= e &lt;= r\n      d[p] += (e - s + 1) * c;\n      b[p] = c;\n      return;\n    }\n\n    // range half to update\n    int m = s + (e - s) / 2;\n    pushdown(s, e, m, p);\n\n    if (l &lt;= m) update(l, r, c, s, m, p * 2);\n    if (r &gt; m) update(l, r, c, m + 1, e, p * 2 + 1);\n    d[p] = d[p * 2] + d[p * 2 + 1];\n  }\n\n  /// Query sum of range [l, r] in the tree d[p], which is the range [s, e]\n  int query(int l, int r, int s, int e, int p) {\n    if (l &lt;= s &amp;&amp; e &lt;= r) return d[p];\n\n    int m = s + (e - s) / 2, sum = 0;\n    pushdown(s, e, m, p);\n\n    if (l &lt;= m) sum += query(l, r, s, m, p * 2);\n    if (r &gt; m) sum += query(l, r, m + 1, e, p * 2 + 1);\n    return sum;\n  }\n\n private:\n  vector&lt;int&gt; d{};  // tree node data array\n  vector&lt;int&gt; b{};  // tree node bias array\n};\n\n/// Usage:\nVector&lt;int&gt; arr{11, 12, 13, 14, 15};\nSegmentTree st{arr};\nst.query(0, 2, 0, 4, 1);  // get sum of arr in range [0, 2], node 1 has range [0, 4]\nst.update(0, 3, 5, 0, 4, 1);  // add(update) 5 to array in range[0, 2]\n</code></pre> <ul> <li>range-sum-query-mutable</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/","title":"Algorithm Pattern","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#basic-algorithm","title":"Basic Algorithm","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#sort","title":"Sort","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#quick-sort","title":"Quick Sort","text":"<pre><code>void quick_sort(int a[], int l , int r) {\n  if (l &gt;= r) return;\n\n  int i = l - 1, j = r + 1, p = a[l + r &gt;&gt; 1];\n  while (i &lt; j) {\n    while (a[++i] &lt; p);\n    while (a[--j] &gt; p);\n    if (i &lt; j) swap(a[i], a[j]);\n  }\n  quick_sort(a, l, j);\n  quick_sort(a, j + 1, r);\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#merge-sort","title":"Merge Sort","text":"<pre><code>int tmp[N];\nvoid merge_sort(int a[], int l, int r) {\n  if (l &gt;= r) return;\n\n  int mid = l + r &gt;&gt; 1;\n  merge_sort(a, l, mid);\n  merge_sort(a, mid + 1, r);\n\n  int i = l, j = mid + 1, k = l;\n  while (i &lt;= mid &amp;&amp; j &lt;= r) tmp[k++] = a[i] &lt; a[j] ? a[i++] : a[j++];\n  while (i &lt;= mid) tmp[k++] = a[i++];\n  while (j &lt;= r) tmp[k++] = a[j++];\n\n  for (int k = l; k &lt;= r; ++k) a[k] = tmp[k];\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#serach","title":"Serach","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#binary-search","title":"Binary Search","text":"<pre><code>//           Left                             Right\n// |---------------------------| |------------------------------|\n//                   right end | | left end\n\n// Left end\n// Devide [l, r] to [l, mid] + [mid + 1, r], l locates at mid + 1\nint bs(int a[], int l, int r) {\n  while (l &lt; r) {\n    int mid = l + r &gt;&gt; 1;\n    if (resultl_is_in(mid)) {\n      r = mid;\n    } else {\n      l = mid + 1;\n    }\n  }\n  return l;\n}\n\n// Right end\n// Devide [l, r] to [l, mid - 1] + [mid, r], l locates at mid\nint bs(int a[], int l, int r) {\n  while (l &lt; r) {\n    // avoid the case [l, r] = [0, 1]\n    int mid = l + r + 1 &gt;&gt; 1;\n    if (is_result_in(mid)) {\n      l = mid;\n    } else {\n      r = mid - 1;\n    }\n  }\n  return l;\n}\n\n/// Float\nconstexpr double eps = 1e-6;\ndouble bs(double l, double r) {\n  while (r - l &gt; eps) {\n    double mid = (l + r) / 2;\n    if (Valid(mid)) {\n      r = mid;\n    } else {\n      l = mid;\n    }\n  }\n  return l;\n}\n</code></pre> <ul> <li>problem</li> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#expression","title":"Expression","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#addition","title":"Addition","text":"<pre><code>/// digits of A, B and C are in reverse order\nvector&lt;int&gt; add(vector&lt;int&gt;&amp; A, vector&lt;int&gt;&amp; B) {\n  if (A.size() &lt; B.size()) return add(B, A);\n\n  vector&lt;int&gt; C{};\n  int t{0};\n  for (int i = 0; i &lt; A.size(); ++i) {\n    t += A[i];\n    if (i &lt; B.size()) t += B[i];\n    C.push_back(t % 10);\n    t /= 10;\n  }\n  if (t) C.push_back(t);\n\n  return C;\n}\n</code></pre> <ul> <li>acwing</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#subtraction","title":"Subtraction","text":"<pre><code>/// digits of A, B and C are in reverse order\n/// and A is bigger than B\nvector&lt;int&gt; add(vector&lt;int&gt;&amp; A, vector&lt;int&gt;&amp; B) {\n  vector&lt;int&gt; C{};\n  for (int i = 0, t = 0; i &lt; A.size(); ++i) {\n    t = A[i] - t;\n    if (i &lt; B.size()) t -=B[i];\n    C.push_back((t + 10) % 10);\n    t = t &lt; 0 ? 1 : 0;\n  }\n  while (C.size() &gt; 1 &amp;&amp; C.back() == 0) C.pop_back();\n  return C;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#multiplication","title":"Multiplication","text":"<pre><code>/// digits of A and C are in reverse order\nvector&lt;int&gt; mul(vector&lt;int&gt;&amp; A, int b) {\n  vector&lt;int&gt; C{};\n  for (int i = 0, t = 0; i &lt; A.size() || t; ++i) {\n    if (i &lt; A.size()) t += A[i] * b;\n    C.push_back(t % 10);\n    t /= 10;\n  }\n  while (C.size() &gt; 1 &amp;&amp; C.back() == 0) c.pop_back();\n  return C;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#division","title":"Division","text":"<pre><code>/// digits of A and C are in reverse order\npair&lt;vector&lt;int&gt;, int&gt; div(vector&lt;int&gt;&amp; A, int b) {\n  vector&lt;int&gt; C{};\n  int r{0};\n  for (int i = A.size() - 1; i &gt;= 0; --i) {\n    r = r * 10 + A[i];\n    C.push_back(r / b);\n    r %= b;\n  }\n  reverse(C.begin(), C.end());\n  while (C.size() &gt; 1 &amp;&amp; C.back() == 0) C.pop_back();\n  return {C, r};\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#prefix","title":"Prefix","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#prefix-sum","title":"Prefix Sum","text":"<pre><code>for (int i = 1; i &lt;= n; ++i) p[i] = p[i - 1] + a[i - 1];\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#prefix-sum-2d","title":"Prefix Sum 2D","text":"<pre><code>for (int i = 1; i &lt;= n; ++i) for (int j = 1; j &lt;= m; ++j)\n    p[i][j] = a[i - 1][j - 1] + p[i][j - 1] + p[i - 1][j] - p[i - 1][j - 1];\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#prefix-diff","title":"Prefix Diff","text":"<pre><code>void insert(int p[], int l, int r, int c) {\n  p[l] += c;\n  p[r + 1] -= c;\n}\n\n/// get each element\nfor (int i = 1; i &lt;= n; ++i) p[i] += p[i - 1];\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#prefix-diff-2d","title":"Prefix Diff 2D","text":"<pre><code>void insert(int p[][N], int x1, int y1, int x2, int y2, int c) {\n  p[x1][y1] += c;\n  p[x2 + 1][y1] -= c;\n  p[x1][y2 + 1] -= c;\n  p[x2 + 1][y2 + 1] += c;\n}\n\n// Get each element\nfor (int i = 1; i &lt;= n; ++i) for (int j = 1; j &lt;= m; ++j)\n  b[i][j] += b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1];\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#bit-operator","title":"Bit Operator","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#k-bit","title":"K bit","text":"<pre><code>int kbit(int x, int k) { return x &gt;&gt; k &amp; 1; }\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#lowbit","title":"Lowbit","text":"<pre><code>int lowbit(int x) { return x &amp; -x; }\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#two-pointers","title":"Two Pointers","text":"<pre><code>/// 1 array\n/// nnnnnnnnnnnnnnnnnnnnnn\n///     ^          ^\n///     | j        | i    \n/// 2 array\n/// nnnnnnnnnnnnnnnnnnnnnn\n///     ^           \n///     | i               \n/// nnnnnnnnnnnnnnnnnnnnnn\n///                ^\n///                | j    \nfor (int i = 0, j = 0; i &lt; n; ++i) {\n  // add i here\n\n  while (j &lt; i &amp;&amp; check(i, j)) ++j;  // remove j\n\n  // record answer here\n}\n</code></pre> <ul> <li>problem</li> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#discrete","title":"Discrete","text":"<pre><code>vector&lt;int&gt; a{};  // to be discrete\nsort(a.begin(), a.end());\na.erase(unique(a.begin(), a.end()), a.end());\n\n// get index after discrete\nint find(int x) {\n  int l = 0, r = a.size() - 1;\n  while (l &lt; r) {\n    int mid = l + (r - l) / 2;\n    if (a[mid] &gt;= x) {\n      r = mid;\n    } else {\n      l = mid + 1;\n    }\n  }\n  return l;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#merge-range","title":"Merge Range","text":"<pre><code>using PII = pair&lt;int, int&gt;;\nvoid merge(vector&lt;PII&gt; &amp;segs) {\n  sort(segs.begin(), segs.end());\n\n  vector&lt;PII&gt; ans{};\n  for (auto [l, r] : segs) {\n    if (ans.emtpy() || ans.back().second &lt; l) {\n      ans.push_back({l, r});\n    } else {\n      ans.back().second = max(ans.back().second, r);\n    }\n  }\n\n  return ans;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#data-structure","title":"Data Structure","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#linked-list","title":"Linked List","text":"<pre><code>// head index , element, next element index, index to empty memory\nint head, e[N], ne[N], idx;\n\nvoid init() {\n  head = -1;\n  idx = 0;\n}\n\n// add a node with value of v to head\nvoid to_head(int v) {\n  e[idx] = v, ne[idx] = head, head = idx++;\n}\n\n// remove node after ith node\nvoid remove(int i) {\n  ne[i] = ne[ne[i]];\n}\n\n// insert a node with value of v after kth node\nvoid insert(int k, int v) {\n  e[idx] = v, ne[idx] = ne[k], ne[k] = idx++;\n}\n\n// traval the linked list\nfor (int i = head; i != -1; i = ne[i]) cout &lt;&lt; e[i];\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#double-linked-list","title":"Double Linked List","text":"<pre><code>int e[N], l[N], r[N], idx;\n\n// idx 0 for left node, idx 1 for right node\nvoid init() {\n  r[0] = 1, l[1] = 0;\n  idx = 2;\n}\n\n// insert a node at i's right\nvoid insert(int i, int v) {\n  e[idx] = v;\n  l[idx] = i, r[idx] = r[i];\n  l[r[i]] = idx, r[i] = idx++;\n}\n\n// remove i node\nvoid remove(int i) {\n  r[l[i]] = r[i];\n  l[r[i]] = l[i];\n}\n\n// travel\nfor (int i = 0; i != 1; i = r[i]) cout &lt;&lt; e[i];\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#stack","title":"Stack","text":"<pre><code>int stk[N], idx = 0;\n\nvoid push(int x) { stk[++idx] = x; }\nvoid pop() { --idx; }\nint top() { return stk[idx]; }\nbool empty() { return idx == 0; }\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#queue","title":"Queue","text":"<pre><code>/// loop\nint q[N], h = 0, t = 0;\n\nvoid push(int x) { q[++t % N] = x; }\nvoid pop() { h = ++h % N; }\nvoid front() { return q[h]; }\nbool empty() { return h == t; }\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#monotonous-stack","title":"Monotonous stack","text":"<pre><code>int stk[N], t = 0;\n\nfor (auto n : a) {\n  while (t &amp;&amp; stk[t] &gt;= n) --t;\n  stk[++t] = n;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#monotonous-queue","title":"Monotonous queue","text":"<pre><code>/// h for head of queue, t for tail of queue, k for window size\n/// nnnnnnnnnnnnnnnnnnnnnn\n///     ^          ^\n///     | h        | t    \nint a[N], q[N];\n\nfor (int i = 0; i &lt; n; ++i) {\n  if (h &lt;= t &amp;&amp; i - q[h] + 1 &gt; k) ++h;\n  while (h &lt;=t &amp;&amp; a[q[t]] &gt;= a[i]) --t;\n  q[++t] = i;\n  /// Check min value of the window\n  printf(\"min value %d\", a[q[h]]);\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#kmp","title":"KMP","text":"<pre><code>char s[N], p[M], ne[N];\n\nfor (int i = 2, j = 0; i &lt;= m; ++i) {\n  while (j &amp;&amp; p[j + 1] != p[i]) j = ne[j];\n  if (p[j + 1] == p[i]) ++j;\n  ne[i] = j;\n}\n\nfor (int i = 1, j = 0; i &lt;= n; ++i) {\n  while (j &amp;&amp; p[j + 1] != s[i]) j = ne[j];\n  if (p[j + 1] == s[i]) ++j;\n  if (j == m) {\n    /// do something\n    j = ne[j];\n  }\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#trie","title":"Trie","text":"<pre><code>int son[N][26], cnt[N], idx;\n\nvoid insert(char str[]) {\n  int p = 0;\n  for (int i = 0; str[i]; ++i) {\n    int u = str[i] - 'a';\n    if (!son[p][u]) son[p][u] = ++idx;\n    p = son[p][u];\n  }\n  ++cnt[p];\n}\n\n/// return count of the str\nint query(char str[]) {\n  int p = 0;\n  for (int i = 0; str[i]; ++i) {\n    int u = str[i] - 'a';\n    if (!son[p][u]) return 0;\n    p = son[p][u];\n  }\n\n  return cnt[p];\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#union","title":"Union","text":"<pre><code>/// origin Union, p for parent\nint p[N]\n\n// find parent\nint find(int x) {\n  if (p[x] != x) p[x] = find(p[x]);\n  return p[x];\n}\n\n// init\nfor (int i = 1; i &lt;= n; ++i) p[i] = i;\n\n// merge\np[find(a)] = find(b);\n\n/// Union with size\nint p[N], size[N];\n\n// find parent\nint find(int x) {\n  if (p[x] != x) p[x] = find(p[x]);\n  return p[x];\n}\n\n// init\nfor (int i = 1; i &lt;= n; ++i) p[i] = i;\nfor (int i = 1; i &lt;= n; ++i) size[i] = 1;\n\n// merge\nsize[find(a)] += size[find(b)];  // this must execute first\np[find(a)] = find(b);\n</code></pre> <ul> <li>problem</li> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#heap","title":"Heap","text":"<pre><code>/// Minimum root heap\nint h[N], size;\n\nvoid down(int x) {\n  int u = x;\n  if (auto left = x * 2; left &lt;= size &amp;&amp; h[left] &lt; h[u]) u = left; \n  if (auto right = x * 2 + 1; right &lt;= size &amp;&amp; h[right ] &lt; h[u]) u = right; \n  if (u != x) {\n    swap(h[u], h[x]);\n    down(u);\n  }\n}\n\nvoid up(int x) {\n  while (x / 2 &amp;&amp; h[x / 2] &gt; h[x]) {\n    swap(h[x / 2], h[x]);\n    x &gt;&gt;= 1;\n  }\n}\n\n/// O(N) build heap\nfor (int i = n / 2; i; --i) down(i);\n\n/// Insert a number\nh[++size] = x; up(size);\n\n/// Get minimum\nhead[1];\n\n/// Remove minimum(root)\nswap(h[1], head[size--]); down(1);\n\n/// Remove kth element\nhead[k] = head[size--]; down(k); up(k);\n\n/// Modify kth element\nhead[k] = x; down(k); up(k);\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#hash-table","title":"Hash table","text":"<pre><code>/// Integar Hash\n\n/// Seperate chaining\nconstexpr int N = 1e5 + 10;  // first prime number after length(1e5)\nint h[N], e[N], ne[N], idx;  // h[n] for chain head ptr, e[n] for element, ne[n] for next ptr, idx for ptr\n\n// init\nmemset(h, -1, sizeof(h));\n\nvoid insert(int x) {\n  int k = (x % N + N) % N;  // key, range in [0, N - 1]\n  e[idx] = x;\n  ne[idx] = h[k];\n  h[k] = idx++;\n}\n\nbool find(int x) {\n  int k = (x % N + N) % N;\n  for (int i = h[k]; i != -1; i = ne[i]) if (e[i] == x) return true;\n  return false;\n}\n\n/// Open addressing\nconstexpr int N = 2e5 + 3;  // 2 or 3 times of the number range, first prime\nconstexpr int null = 0x3f3f3f3f;  // a number bigger not in range to represent the nullptr\nint h[N];\n\nmemset(h, 0x3f, sizeof(h));\n\nint find(int x) {  // return the idx x locates or should be inserted\n  int t = (x % N + N) % N;\n  while (h[t] != null &amp;&amp; h[t] != x) t %= ++t;\n  return t;\n}\nh[find(x)] = x;  // insert\nh[find(x)] == x;  // query \n</code></pre> <ul> <li>problem</li> </ul> <pre><code>/// string hash, to check if two substring on string are the same\nusing ULL = unsigned long long;  // number range [0, 2^64), overflow for mod\nconstexpr int N = 1e5 + 10, P = 131;  // P-base numeral system\nULL h[N], p[N];\n\n// init\np[0] = 1;\nfor (int i = 1; i &lt;= n; ++i) {\n  h[i] = h[i - 1] * P + str[i];  // h for hash\n  p[i] = p[i - 1] * P;  // p for P^i\n}\n\nULL get(int l, int r) {\n  return h[r] - h[l - 1] * p[r - l + 1];\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#graph","title":"Graph","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#storage-of-graph","title":"Storage of Graph","text":"<pre><code>/// adjecent matrix\ng[a][b];  // for the edge a -&gt; b\n\n/// adjecent list\nint h[N], e[N], ne[N], idx;\n\n// add edge a -&gt; b\nvoid add(int a, int b) {\n  e[idx] = b, ne[idx] = h[a], h[a] = idx++;\n}\n\n// init\nidx = 0;\nmemset(h, -1, sizeof(h));\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#dfs-of-graph","title":"DFS of graph","text":"<pre><code>int dfs(int u) {\n  st[u] = true;\n  for (int i = h[u]; i != -1; i = ne[i]) {\n    int j = e[i];\n    if (!st[j]) dfs(j);\n  }\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#bfs-of-graph","title":"BFS of graph","text":"<pre><code>queue&lt;int&gt; q{};\nst[1] = true;\nq.push(1);\n\nwhile (!q.empty()) {\n  int t = q.front();\n  q.pop();\n\n  for (int i = h[t]; i != -1; i = ne[i]) if (int j = e[i]; !st[j]) {\n    st[j] = true;\n    q.push(j);\n  }\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#toposort","title":"Toposort","text":"<pre><code>bool topsort() {\n  int hh = 0, tt = -1;\n  for (int i = 1; i &lt;= n; ++i) if (!d[i]) q[++tt] = i;\n\n  while (hh &lt;= tt) {\n    int t = q[hh++];\n    for (int i = h[t]; i != -1; i = ne[i]) {\n      if (int j = e[i]; --d[j] == 0) q[++tt] = j;\n    }\n  }\n\n  return tt == n - 1;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#shortest-pathsp","title":"Shortest Path(SP)","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#original-dijkstra","title":"Original Dijkstra","text":"<pre><code>/// for dense graph, node from 1 to n\nint g[N][N], dist[N];\nbool st[N];  // Store the node whose sp is determined\n\nint dijkstra(int u) {\n  memset(dist, 0x3f, sizeof(dist));\n  dist[u] = 0;\n\n  for (int i = 0; i &lt; n - 1; ++i) {\n    // find the node who's not in st but has minimum distance to u\n    int t = -1;\n    for (int j = 1; j &lt;= n; ++j) if (!st[j] &amp;&amp; (t == -1 || dist[j] &lt; dist[t]))\n      t = j;\n\n    // use t to update all other nodes' distance\n    for (int j = 1; j &lt;= n; ++j) dis[j] = std::min(dist[j], dist[t] + g[t][j]);\n\n    // put t to st\n    st[t] = true;\n  }\n\n  return dist[n] == INF ? -1 : dist[n];\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#heap-optimal-dijkstra","title":"Heap-optimal Dijkstra","text":"<pre><code>/// for sparse graph, node from 1 to n\nusing PII = piar&lt;int, int&gt;;\nint h[N], e[M], w[M], ne[M], idx;  // e for element, c for cost, ne for next\nmemset(h, -1, sizeof(h));\nvoid add(int x, int y, int z) {\n  e[idx] = y, w[idx] = z, ne[idx] = h[x], h[x] = idx++;\n}\n\nint dist[N];\nbool st[N];\n\nint dijkstra(int u) {\n  memset(dist, 0x3f, sizeof(dist));\n  dist[u] = 0;\n\n  priority_queue&lt;PII, vector&lt;int&gt;, greater&lt;PII&gt;&gt; pq{};\n  pq.push({0, u});\n\n  while (pq.size()) {\n    auto [dis, node] = pq.top();\n    pq.pop();\n\n    if (st[node]) continue;\n    st[node] = true;\n\n    for (int i = h[node]; i != -1; i = ne[i]) {\n      int next = e[i], cost = w[i];\n      if (dist[next] &gt; dist[node] + cost) {\n        dist[next] = dist[node] + cost;\n        pq.push({dist[next], next});\n      }\n    }\n  }\n\n  return dist[n] == INF ? -1 : dist[n];\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#bellman-ford","title":"Bellman-Ford","text":"<pre><code>int dist[N], back[N];\nstruct Edge { int a, b, w; } es[M];\n\nint bellman_ford(int u) {\n  memset(dist, 0x3f, sizeof(dist));\n  dist[u] = 0;\n\n  // relax k times, all sps within k edges are found\n  for (int i = 0; i &lt; k; ++i) {\n    memcpy(back, dist, sizeof(dist));\n    for (int j = 0; j &lt; m; ++j) {\n      auto [a, b, w] = es[j];\n      dist[b] = std::min(dist[b], back[a] + w);\n    }\n  }\n\n  return dist[n];\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#spfa","title":"spfa","text":"<pre><code>/// Shortest Path\nint h[N], w[N], e[N], ne[N], idx;\nvoid add(int a, int b, int c) {\n  w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++;\n}\nint dist[N];\nbool st[N];\n\nint spfa() {\n  memset(dist, 0x3f, sizeof(diat));\n  dist[0] = 0;\n  st[0] = true;\n\n  queue&lt;int&gt; q{};\n  q.push(0);\n\n  while (q.size()) {\n    auto t = q.front();\n    q.pop();\n\n    st[t] = false;\n\n    for (int i = h[t]; i != -1; i = ne[i]) {\n      int j = e[i];\n      if (dist[j] &gt; dist[t] + w[i]) {\n        dist[j] = dist[t] + w[i];\n        if (!st[j]) {\n          q.push(j);\n          st[j] = true;\n        }\n      }\n    }\n  }\n\n  return dist[n] = 0x3f3f3f3f ? -1 : dist[n];\n}\n</code></pre> <ul> <li>problem</li> </ul> <pre><code>/// Check negtive cycle\nint h[N], e[N], w[N], ne[N], idx;\nvoid add(int a, int b, int c) {\n  e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;\n}\n\nint dist[N], cnt[N];\nbool st[N];\n\nbool spfa() {\n  queue&lt;int&gt; q{};\n  for (int i = 1; i &lt;= n; ++i) {\n    st[i] = true;\n    q.push(i);\n  }\n\n  while (q.size()) {\n    auto t = q.front();\n    q.pop();\n\n    st[t] = false;\n\n    for (int i = h[i]; i != -1; i = ne[i]) {\n      int j = e[i];\n      if (dist[j] &gt; dist[t] + w[i]) {\n        dist[j] = dist[t] + w[i];\n        cnt[j] += cnt[t] + 1;\n        if (cnt[j] &gt;= n) return false;\n\n        if (!st[j]) {\n          q.push(j);\n          st[j] = true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#floyd","title":"Floyd","text":"<pre><code>/// init\nfor (int i = 1; i &lt;=n; ++i) {\n  for (int j = 1; j &lt;= n; ++j) {\n    dist[i][j] = i == j ? 0 : INF;\n  }\n}\n\n/// Floyd\nfor (int k = 1; k &lt;= n; ++k) {\n  for (int i = 1; i &lt;= n; ++i) {\n    for (int j = 1; j &lt;= n; ++j) {\n      dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n    }\n  }\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#minimum-spanning-tree","title":"Minimum Spanning Tree","text":"<p><code>Prim</code> for dense graph, <code>Kruskal</code> for sparse graph.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#prim","title":"Prim","text":"<pre><code>int g[N][N], dist[N];\nbool st[N];\n\nint prim() {\n  int ans = 0;\n  memset(dist, 0x3f, sizeof(dist));\n  for (int i = 0; i &lt; n; ++i) {\n    int t = -1;\n    for (int j = 1; j &lt;= n; ++j) if (!st[j] &amp;&amp; (t == -1 || dist[j] &lt; dist[t]))\n      t = j;\n\n    if (i &amp;&amp; dist[t] == INF) return INF;\n    if (i) ans += dist[t];\n\n    st[t] = true;\n    for (int j = 1; j &lt;= n; ++j) dist[j] = min(dist[j], g[t][j])\n  }\n\n  return ans;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#kruskal","title":"Kruskal","text":"<pre><code>int p[N];\nint find(int x) {\n  if (p[x] != x) p[x] = find(p[x]);\n  return p[x];\n}\n\nstruct Edge {\n  int a, b, w;\n  bool operator&lt;(const Edge&amp; rhs) const { return w &lt; rhs.w; }\n} edges[M];\n\nint kruskal() {\n  sort(edges, edges + m);\n\n  int ans = 0, cnt = 0;\n  for (int i = 0; i &lt; m; ++i) {\n    auto [a, b, w] = edges[i];\n    a = find(a), b = find(b);\n    if (a != b) {\n      p[a] = b;\n      and += w;\n      ++cnt;\n    }\n  }\n\n  return cnt &lt; n - 1 ? INF : ans;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#bipartite-graph","title":"Bipartite Graph","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#coloring-check-bipartite-graph","title":"Coloring (check bipartite graph)","text":"<pre><code>int color[N];  // -1 for uncolored, 0 for white, 1 for black\n\nbool dfs(int u, int c) {\n  color[u] = c;\n  for (int i = h[u]; i != -1; i = ne[i]) {\n    int j = e[i];\n    if (color[j] == -1 &amp;&amp; !dfs(j, !c)) return false;\n    if (color[j] == c) return false;\n  }\n\n  return true;\n}\n\nfor (int i = 1; i &lt;= n; ++i) if (!dfs(i, 0)) return false;\nreturn true;\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#maximum-bipartite-matchingmbm-hungarian","title":"Maximum Bipartite Matching(MBM), Hungarian","text":"<pre><code>int match[N];  // 0 for unmatched\nbool st[N];\n\nbool find(int x) {\n  for (int i = h[x]; i != -1; i = ne[i]) {\n    int j = e[i];\n    if (!st[j]) {\n      st[j] = true;\n      if (match[j] == 0 || find(match[j])) {\n        match[j] = x;\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nint ans = 0;\nfor (int i = 1; i &lt;= n1; ++i) {\n  memset(st, false, sizeof(st));\n  if (find(i)) ++ans;\n}\n</code></pre> <ul> <li>problem</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#dynamic-programingdp","title":"Dynamic Programing(DP)","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#knapsack-problem","title":"Knapsack Problem","text":"<ul> <li>01 package</li> <li>unbounded package</li> <li>bounded package</li> <li>bounded package(optimal)</li> <li>group package</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#linear-dp","title":"Linear Dp","text":"<ul> <li>Triangle</li> <li>Longest Increasing Subsequence(LIS)</li> <li>Longest Increasing Subsequence(optimal)</li> <li>Longest Common Subsequence(LCS)</li> <li>Edit Distance</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#range-dp","title":"Range Dp","text":"<ul> <li>Merge Stone</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#count-dp","title":"Count Dp","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#digital-statistic-dp","title":"Digital Statistic Dp","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#state-compress-dp","title":"State Compress Dp","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#tree-dp","title":"Tree Dp","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/00_pattern/#memory-search","title":"Memory Search","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/011_slding_window/","title":"Sliding Window","text":"<p>Sliding window can also be called <code>two pointers</code>, it use two pointers to define a sub-array of the origin array and keeps the <code>loop invariant</code> while steping on. The main idea behind the sliding window technique is to convert two nested loops into a single loop. And if the problem is to check something in a sub-array, sliding windwo may be applied.</p> <p>The process of sliding window is:</p> <ol> <li>define the range \\([left, right)\\) with <code>left</code> and <code>right</code> pointers;</li> <li>determine to iterate <code>left</code> or <code>right</code> boundary and extend the other boundary;</li> <li>keep the <code>invariant</code> in loop and collect the results.</li> </ol>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/011_slding_window/#fixed-size-window","title":"Fixed Size Window","text":"<p>Sometimes we have to find the minimum/maximum/average of a fixed-size window, here comes the technique that move left and right pointer equally. The general code is:</p> <pre><code>int m = arr.size(), l = 0, r = 0, sum = 0;\nwhile (r &lt; m) {\n  while (r &lt; m &amp;&amp; r - l &lt; size) sum += arr[r++];\n  // collect answers\n  sum -= arr[l++];\n}\n</code></pre> <ul> <li>Maximum Average Subarray I</li> <li>Grumpy Bookstore Owner</li> <li>Maximum Points You Can Obtain From Cards</li> <li>Maximum Number of Vowels in a Substring of Given Length</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/011_slding_window/#flexible-size-window","title":"Flexible Size Window","text":"<p>In some situations the window size is not fixed, for example, we want to find a window whose sum is less or equal a target, the number of elements is not fixed, that's where the flexible-size window works.</p> <p>The pattern is like:</p> <pre><code>int m = arr.size(), l = 0; r = 0;\nwhile (r &lt; m) {\n  window.add(arr[r++]);\n  while (is_invalid(window)) window.remove(arr[l++]);\n  // Collect the answers here\n}\n</code></pre> <ul> <li>Minimum Operations to Reduce X to Zero</li> <li>Minimum Window Substring</li> <li>Longest Repeating Character Replacement</li> <li>Minimum Number of K consecutive bit flips</li> <li>Minimum Window Subsequence</li> <li>Find K Length Substrings with No Repeated Characters</li> <li>Minimum Swaps to Group All 1s Together</li> <li>Diet Plan Performance</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/011_slding_window/#count-prolems-in-window","title":"Count Prolems in Window","text":"<p>Some problems also need the times of number or charactor's appearance, we can use an array or hash to store them.</p> <p>And if we want to count the number of elements in a range <code>[low, high]</code>, we can convert the problem to find the required elements less or equal to a number, and then return <code>less_or_equal(high) - less_or_equal(low - 1)</code>.</p> <ul> <li>Longest Substring with at most Two Distinct Characters</li> <li>Number of Subarrays with Bounded Maximum</li> <li>Subarrays with k Different Integers</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/011_slding_window/#other-properties-in-window","title":"Other Properties in Window","text":"<p>This class of problems needs not only sliding window, but also other data structures to get the required features effeciently.</p> <ul> <li>Sliding Window and Two Pointers</li> <li>Sliding Window Median</li> <li>Contains Duplicate III</li> <li>K Empty Slots</li> <li>Longest Continuous Subarray with Absolute Diff Less Than or Equal to Limit</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/013_two_pointer/","title":"Two Pointers","text":"<p><code>Two pointers</code> method is really an easy and effective technique for searching in an array or list.</p> <p>There are two kinds of usage:</p> <ol> <li>two pointers runs in same direction, one slower-runner and the other faster-runner, an example is to remove duplicates from a sorted array;</li> <li>two pointers runs in different direction, one from the begining while the other starts from the end, the example can be to reverse the characters in a string.</li> </ol> <p>Problems:</p> <ul> <li>Linked List Cycle</li> <li>Remove Nth Node From End of List</li> <li>Reverse String</li> <li>3 Sum Closet</li> <li>3 Sum</li> <li>4 Sum</li> <li>Container with Most Water</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/","title":"Binary Search","text":"<p>In computer science, <code>binary search</code>, also known as <code>half-interval search</code>, <code>logarithmic search</code>, or <code>binary chop</code>, is a search algorithm that finds the position of a target value within a sorted array. Binary search compares the target value to the middle element of the array. If they are not equal, the half in which the target cannot lie is eliminated and the search continues on the remaining half, again taking the middle element to compare the target value, and repeating this until the target value is found. If the search ends with the remaining half being empty, the target is not in the array.</p> <p>Binary search can be used to solve a wider range of problems, such as finding the next-smallest or next-largest element in the array relative to the target even if it is absent from the array.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#problems","title":"Problems","text":"<p>The binary search algorithm solves two kinds of problems:</p> <ol> <li>to check if a target element is in an array;</li> <li>to find the element that is bigger(less) than or equal to a target.</li> </ol> <p>And if you think deeper, you can use the method for second problem to solve first one. That is, to find the element \\(\\ge\\) the target and check if the element found is the target.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#code","title":"Code","text":"<p>The main idea of binary search algorithm is to divide the search range into two parts:</p> <ol> <li>Target must not exit part, which will not be considered in next search process;</li> <li>Target may exit part, which will be considered in next search process.</li> </ol> <p>There are two templates for the code, one for left end and one for right:</p> <pre><code>// Left end\n// Devide range [l, r] to [l, mid] and [mid + 1, r], and l locates at (mid + 1)\nint bs(int a[], int l, int r) {\n  while (l &lt; r) {\n    int mid = l + r &gt;&gt; 1;\n    if (resultl_is_in(mid)) {\n      r = mid;\n    } else {\n      l = mid + 1;\n    }\n  }\n  return l;\n}\n\n// Right end\n// Devide range [l, r] to [l, mid - 1] and [mid, r], and l locates at (mid)\nint bs(int a[], int l, int r) {\n  while (l &lt; r) {\n    // avoid the case [l, r] = [0, 1]\n    int mid = l + r + 1 &gt;&gt; 1;\n    if (is_result_in(mid)) {\n      l = mid;\n    } else {\n      r = mid - 1;\n    }\n  }\n  return l;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#complexity","title":"Complexity","text":"<p>In binary search process, algorithm half the search range every time, so for an array of length \\(N\\), the worst time complexity is \\(O(log(N))\\).</p> <p>The iteration version implementation costs \\(O(1)\\) space complexity. But for the recursive version, the space complexity is \\(O(log(N))\\).</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#practice","title":"Practice","text":"<p>There are many kinds of problems, but if the range of problem can be divided into two parts:</p> <ol> <li>Must not contain the target;</li> <li>May contain the target;</li> </ol> <p>it can be solved with binary search.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#binary-search-in-an-array","title":"Binary Search in an Array","text":"<ul> <li>704. Binary Search</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>33. Search in Rotated Sorted Array</li> <li>81. Search in Rotated Sorted Array II</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>300. Longest Increasing Subsequence</li> <li>275. H-Index II</li> <li>852. Peak Index in a Mountain Array</li> <li>1095. Find in Mountain Array</li> <li>4. Median of Two Sorted Arrays</li> <li>658. Find K Closest Elements</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#binary-search-in-a-range","title":"Binary Search in a Range","text":"<ul> <li>69. Sqrt(x)</li> <li>287. Find the Duplicate Number</li> <li>374. Guess Number Higher or Lower</li> <li>1300. Sum of Mutated Array Closest to Target</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#binary-search-with-implicit-relations","title":"Binary Search with Implicit Relations","text":"<ul> <li>410. Split Array Largest Sum</li> <li>875. Koko Eating Bananas</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1552. Magnetic Force Between Two Balls</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/01_bs/#reference","title":"Reference","text":"<ul> <li>Wikipedia binary search algorithm</li> <li>OI-Wiki binary</li> <li>Leetcode binary search solution</li> <li>Leetbook</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/","title":"Sort","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#assumption","title":"Assumption","text":"<p>To simplify matters, we will assume that the algorithms we describe will all be interchangeable:</p> <ol> <li>All array positions contain data to be sorted;</li> <li>The <code>N</code> is the number of elements passed to our sorting routines;</li> <li>the <code>&gt;</code> and <code>&lt;</code> operators exists, which can be used to place a consistant ordering on the input.</li> </ol> <p>Sorting under these conditions is known as comparision-based sorting.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#sort-with-on2-complexity","title":"Sort with O(n^2) Complexity","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#bubble-sort","title":"Bubble Sort","text":"<p>Bubblesort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order. The algorithm is a comparison sort, is named for the way smaller or larger elements \"bubble\" to the top of the list. Although the algorithm is simple, it is too slow and impractical for most problems even when compared to Insertionsort. Bubblesort can be practical if the input is in mostly sorted order with some out-of-order elements nearly in position.</p> <pre><code>template &lt;typename T&gt;\nvoid bubbleSort(vector&lt;T&gt;&amp; arr) {\n  int m = arr.size();\n  for (int i = 0; i &lt; m; ++i) {\n    for (int j = i + 1; j &lt; m; ++j) {\n      if (arr[j] &lt; arr[i]) swap(arr[j], arr[i]);\n    }\n  } \n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#selection-sort","title":"Selection Sort","text":"<p>The selection sort divides the input list into two parts: a sorted sublist of items which is built up from left to right at the front (left) of the list and a sublist of the remaining unsorted items that occupy the rest of the list.</p> <pre><code>void SelectionSort(vector&lt;int&gt;&amp; arr) {\n  int m = arr.size();\n  for (int i = 0; i &lt; m; ++i) {\n    int min_idx = i;\n    for (int j = i + 1; j &lt; m; ++j) if (arr[j] &lt; arr[min_idx]) min_idx = j;\n    swap(arr[i], arr[min_idx]);\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#insertion-sort","title":"Insertion Sort","text":"<p>One of the simplest sorting algorithms is the insertion sort. Insertion sort consists of N - 1 passes. For pass p = 1 through N - 1, insertion sort ensures that the elements in position 0 through p are in sorted order. Insertion sort makes use of the fact that elements in position 0 through p - 1 are already known to be in sorted order.</p> <pre><code>void InsertSort(vector&lt;int&gt;&amp; arr) {\n  int m = arr.size();\n  for (int i = 1; i &lt; m; ++i) {\n    int j = i;\n    while (j &amp;&amp; arr[j] &lt; arr[j - 1]) swap(arr[j - 1], arr[j--]);\n  }\n}\n</code></pre> <p>Becuase of the nested loops, each of which can take N iterations, insertion sort is \\(O(N^2)\\). Furthermore, this bound is tight, because input in reverse order can achieve this bound.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#sort-with-onlogn-complexity","title":"Sort with O(nlogn) Complexity","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#shell-sort","title":"Shell Sort","text":"<p>Shellsort, named after its inventor, Donald Shell, was one of the first algorithms to break the quadratic time barrier, althoungh it was not until several years after its initial discovery that a subquadratic time bound was proven. It works by comparing elements that are distant; the distance between comparisons decreases as the algorithm runs until the last phase, in which adjacent elements are compared. For this reason, Shellsort is sometimes referred to as diminishing increment sort. Shellsort uses a sequence, h1, h2,\u2026, ht, called increment sequence. Any increment sequence will do as long as h1 = 1, but some choices are better than others.</p> <p>A popular(but poor) choice for increment sequence is to use the sequence suggested by Shell:</p> \\[ h_t = [N / 2]$ and $h_k = [h_{k + 1} / 2] \\] <pre><code>void ShellSort(vector&lt;int&gt;&amp; arr) {\n  int m = arr.size();\n  for (int gap = m / 2; j; gap /= 2) {\n    for (int i = gap; i &lt; m; i += gap) {\n      int j = i;\n      while (j &gt;= gap &amp;&amp; nums[j] &lt; nums[j - gap]) {\n        swap(nums[j], nums[j - gap]);\n        j -= gap;\n      }\n    }\n  }\n}\n</code></pre> <p>The performance of Shellsort is quite acceptable in practice, even for N in the tens of thousands. The simplicity of the code makes it the algorithm of choice for sorting up to moderately large input.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#heap-sort","title":"Heap Sort","text":"<p>Priority queues can be used to sort in \\(O(NlogN)\\) time. The algorithm based on this idea is known as heapsort and gives the best Big-Oh running time we have seen so far. The basic strategy is to build a binary heap of N elements. This stage takes \\(O(N)\\) time. We then preform N deleteMin operations. The elements leave the heap smallest first, in sorted order. By recording these elements in a second array and then copying the array back, we sort N elements. Since each deleteMin takes \\(O(logN)\\) time, the total running time is \\(O(NlogN)\\).</p> <p>The main problem with this algorithm is that it uses an extra array. Thus, the memory requirement is doubled. This could be a problem in some instances. Notice that the extra time spent copying the second array back to the first is only \\(O(N)\\), so that this is not likely to affect the running time significantly. The problem is space.</p> <p>A clever way to avoid using a second array makes use of the fact that after each deleteMin, the heap shrinks by 1. Thus the cell that was last in the heap can be used to store the element that was just deleted.</p> <p>Using this strategy, after the last deleteMin the array will contain the elements in decreasing sorted order. If we want the elements in the more typical increasing sorted order, we can change the ordering property so that the parent has a larger elements than the child. Thus, we have a max-heap.</p> <pre><code>void percolateDown(vector&lt;int&gt; &amp;arr, int hole, int heap_size) {\n  int m = arr.size();\n  auto left_child = [](int x) { return x * 2 + 1; };\n  int tmp = arr[hole];\n  for (int child = getLeftChild(hole); child &lt; heap_size; child = getLeftChild(hole)) {\n    if (child != heap_size - 1 &amp;&amp; arr[child + 1] &gt; arr[child]) ++child;\n    if (tmp &gt;= arr[child]) break;\n    arr[hole] = arr[child];\n    hole = child;\n  }\n  arr[hole] = tmp;\n}\n\nvoid HeapSort(vector&lt;int&gt; &amp;arr) {\n  int m = arr.size();\n  // build heap\n  for (int i = m / 2; i &gt;= 0; --i) { percolateDown(arr, i, cnt); }\n  // delete max\n  for (int i = m - 1; i &gt;= 0; --i) {\n    swap(arr[0], arr[i]);\n    percolateDown(arr, 0, i);\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#merge-sort","title":"Merge Sort","text":"<p>Mergesort runs in \\(O(NlogN)\\) worse-case running time, and the number of comparisons used is nearly optimal. It is a fine example of a recursive algorithm.</p> <p>The fundamental operation in this algorithm is merging two sorted lists. Because the lists are sorted, this can be done in one pass through the input, if the output is put in a third list. The basic merging algorithm takes two input array A and B, an output array C, and three counters, Actr, Bctr, and Cctr, which are initially set to the beginning of their respective arrays. The smaller of A[Actr] and B[Bctr] is copied to the next entry in C, and the appropriate counters are advanced. When either input list is exhausted, the remainder of the other list is copied to C.</p> <pre><code>void MergeSort(vector&lt;int&gt;&amp; arr, vector&lt;int&gt;&amp; tmp, int left, int right) {\n  if (left &gt;= right) return;\n\n  int mid = left + (right - left) / 2;\n  MergeSort(arr, tmp, left, mid);\n  MergeSort(arr, tmp, mid + 1, right);\n\n  int l = left, r = mid + 1, i = left;\n  while (l &lt;= mid &amp;&amp; r &lt;= right) arr[i++] = arr[l] &lt; arr[r] ? tmp[l++] : tmp[r++];\n  while (l &lt;= mid) arr[i++] = tmp[l++];\n  while (r &lt;= right) arr[i++] = tmp[r++];\n  while (left &lt;= right) arr[left++] = tmp[left];\n}\n</code></pre> <p>Mergesort is a classic example of the techniques used to analyze recursive routines: We have to write a recurrence relation for the running time. We will assume that N is a power of 2 so that we always split into even halves. For N = 1, the time to mergesort is constant, which we will denote by 1. Otherwise, the time to mergesort N numbers is equal to the time to do two recursive mergesort of size N/2, plus the time to merge, which is linear:</p> \\[T(1) = 1\\] \\[T(N) = 2T(N/2) + N\\] <p>Although mergesort\u2019s running time is \\(O(NlogN)\\), it has the significant problem that merging two sorted lists uses linear extra memory. The additional work involved in copying to the temporary array and back, throughtout the algorithm, slows the sort considerably. This copying can be avoided by judiciously switching the roles of a and tmpArray at alternate levels of the recursion. The running time of mergesort, when compared with other \\(O(NlogN)\\) alternatives, depends heavily on the relative costs of comparing elements and moving elements in the array(and the temporary array). These costs are language dependent.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#quick-sort","title":"Quick Sort","text":"<p>As its name implies for C++, quicksort has historically been the fastest known generic sorting algorithm in practice. Its average running time is \\(O(NlogN)\\). It is very fast, mainly due to a very tight and highly optimized inner loop. It has \\(O(N^2)\\) worst-case performance, but this can be made exponentially unlikely with a little effort. By combining quicksort with heapsort, we can achieve quicksort\u2019s fast running time on almost all inputs, with heapsort\u2019s \\(O(NlogN)\\) worst-case running time. The quicksort algorithm is simple to understand and prove correct, although for many years it had the reputation of being an algorithm that could in theory be highly optimized but in practice was impossible to code correctly. Like mergesort, quicksort is a divide-and-conquer recursive algorithm.</p> <p>The classic quicksort algorithm to sort an array S consists of the following four easy steps:</p> <ol> <li>Pick any element v in S. This called the <code>pivot</code>;</li> <li>Partition S-{v}(the remaining elements in S) into two disjoint groups: \\(S_1 = {x \\in S - {v} | x \\le v}\\), and \\(S_x = {x \\in S - {v} | x \\ge v}\\);</li> <li>Return {quicksort(\\(S_1\\)) and quicksort(\\(S_2\\))}.</li> </ol> <pre><code>void QuickSort(vector&lt;int&gt;&amp; arr, int left, int right) {\n  if (left &gt;= right) return;\n  int l = left - 1, r = right + 1, p = arr[left + (right - left) / 2];\n  while (l &lt; r) {\n    while (arr[++l] &lt; p) {};\n    while (arr[--r] &gt; p) {};\n    if (l &lt; r) swap(arr[l], arr[r]);\n  }\n  QuickSort(arr, left, r);\n  QuickSort(arr, r + 1, right);\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#sort-with-on-complexity","title":"Sort with O(N) Complexity","text":"<p>\\(O(N)\\) sorting algorithms were exsiting for a long time, but they can only be used in special scenes.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#counting-sort","title":"Counting Sort","text":"<p><code>Counting sort</code> uses an extra array <code>cnt</code>, the ith element of <code>cnt</code> is the couting number of the ith element in origin array, and at last we set the element of origin array to its proper position according to <code>cnt</code>.</p> <p>The process is:</p> <ol> <li>Couting how many times each number in origin array occurs;</li> <li>Calculating the pre-sum of each number;</li> <li>Get the index of each number according to its times from pre-sum list.</li> </ol> <p></p> <pre><code>void CountingSort(vector&lt;int&gt;&amp; a) {\n  int low = *min_element(a.begin(), a.end());\n  int high = *max_element(a.begin(), a.end());\n\n  vector cnt(high - low + 1, 0);\n  for (auto n : a) cnt[n - low]++;\n\n  // start to end\n  // int sum = 0;\n  // for (auto&amp; n : cnt) tie(sum, n) = pair{sum + n, sum};\n\n  // auto tmp = a;\n  // for (auto n : tmp) a[cnt[n - low]++] = n;\n\n  // end to start\n  for (int i = 1; i &lt; cnt.size(); ++i) cnt[i] += cnt[i - 1];\n\n  auto tmp = a;\n  for (int i = cnt.size() - 1; i &gt;= 0; --i) a[--cnt[tmp[i]- low]] = tmp[i];\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#radix-sort","title":"Radix Sort","text":"<p><code>Radix sort</code> divides an element into k digit, and sort elements by its kth digit; after that, it does the same thing with \\((k-1), (k-2), /cdots, 0\\)th digit.</p> <p>The main process is:</p> <ol> <li>find the maximum element of the array;</li> <li>get the radix of each element;</li> <li>loop for <code>max_digit_length</code> times, and sort elements by their radix.</li> </ol> <p></p> <pre><code>void RadixSort(vector&lt;int&gt;&amp; a) {\n  // Get Max digital length\n  int mv = *max_element(a.begin(), a.end());\n  int ml = 0;\n  while (mv) {\n    ++ml;\n    mv /= 10;\n  }\n\n  int dev = 1;\n  auto tmp = a;\n  vector cnt(19, 0);\n  for (int i = 0; i &lt; ml; ++i) {\n    // digit count\n    for (auto n : a) {\n      int radix = n / dev % 10 + 9;\n      cnt[radix]++;\n    }\n\n    // counting sort\n    for (int j = 0; j &lt; 19; ++j) cnt[j] += cnt[j - 1];\n\n    // restore current digit result\n    for (int j = a.size() - 1; j &gt;= 0; --j) {\n      int radix = a[j] / dev % 10 + 9;\n      tmp[--cnt[radix]] = a[j];\n    }\n\n    a = tmp;\n    cnt = vector(19, 0);\n    dev *= 10;\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/02_sort/#bucket-sort","title":"Bucket Sort","text":"<p>The main process of <code>bucket sort</code> is:</p> <ol> <li>divide the array into <code>bucket_size</code> interval of range <code>bucket_len</code>, each interval is call a <code>bucket</code>;</li> <li>traversal the array, put all elements to buckets;</li> <li>sort every bucket;</li> <li>merge the numbers in all buckets in order.</li> </ol> <pre><code>void BucketSort(vector&lt;int&gt;&amp; a, int bucket_len) {\n  int low = *min_element(a.begin(), a.end());\n  int high = *max_element(a.begin(), a.end());\n  int bucket_cnt = (high - low) / bucket_len + 1;\n\n  vector buckets(bucket_cnt, vector&lt;int&gt;());\n  for (auto n : a) buckets[(n - a) / bucket_len] = n;\n  for (auto&amp; b : buckets) sort(b.begin(), b.end());\n\n  int i = 0;\n  for (auto&amp; b : buckets) for (auto n : b) a[i++] = n;\n}\n</code></pre> <ul> <li>Sort An Array</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/031_bt/","title":"Backtracking","text":"<p>Backtracking is a general algorithm for finding solutions to some computational problems, notably constraint satisfaction problems, that incrementally builds candidates to the solutions, and abandons a candidate(\"backtracks\") as soon as it determines that the candidate cannot possibly be complated to a valid solution.</p> <p>It is generally a <code>DFS</code> with proper <code>prune</code>. If current solution is not suitable, then backtrack and try other solutions. Thus, recursion is used in this approach.</p> <p>The consider process maybe:</p> <ol> <li>Draw a state space tree, where each node represents a state and all its possible sellections are its children;</li> <li>Determine the terminal condition;</li> <li>Determine if a pruning is necessary here;</li> <li>Make selection;</li> <li>Get into next layer;</li> <li>Revoke the selection and restore the scene.</li> </ol> <p>A pseudocode can be:</p> <pre><code>void Backtrack(State&amp; curr) {\n  if (is_terminal(curr) || is_prune(curr)) return;\n  next = set_state(curr);\n  Backtrack(next);\n  curr = reverse_state(next);\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/031_bt/#subsets-and-combinations","title":"Subsets and Combinations","text":"<p>Subset and combination problems are irrelevant with elements' order, so the problem can be described as: chosing at most <code>m</code> elements that meet the requirement from an array <code>arr</code>, where <code>m</code> is the length of <code>arr</code>. To prevent from choosing one element twice, only elements behind previous selection will be selected at each step.</p> <p>And for repeating elements, we sort them at the begining and then choose only one of them at each step.</p> <ul> <li>subsets</li> <li>subsets-ii</li> <li>combinations</li> <li>combination-sum</li> <li>combination-sum-ii</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/031_bt/#permutations","title":"Permutations","text":"<p>When we talk about permutation, the order matters here. Each step we chose an element from all the rest, so we have to remember all the elements we have chosen and select from the other.</p> <ul> <li>permutations</li> <li>permutations-ii</li> <li>zi-fu-chuan-de-pai-lie-lcof</li> <li>letter-case-permutation</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/031_bt/#searching","title":"Searching","text":"<ul> <li>sudoku-solver</li> <li>word-search</li> <li>eight-queens-lcci</li> <li>palindrome-partitioning</li> <li>binary-watch</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/03_search/","title":"Searching","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/03_search/#breadth-first-searchbfs","title":"Breadth-first Search(BFS)","text":"<p>BFS is an algorithm for traversing or searching tree or graph data structures. It starts at the tree root(or some arbitrary node of a graph, sometimes referred as a <code>search key</code>), and explores all of the neighbor nodes at the present depth prior to moving on to the nodes at the next depth level.</p> <p></p> <pre><code>void bfs(Graph&amp; graph, int start) {\n  deque&lt;int&gt; d{start};\n  unordered_set&lt;int&gt; visited{start};\n  while (!d.empty()) {\n    int node = d.front();\n    d.pop_front();\n    for (auto next : graph[node]) {\n      if (visited.count(next)) continue;\n      visited.insert(next);\n      d.push_back(next);\n    }\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/03_search/#0-1-bfs","title":"0-1 BFS","text":"<p><code>0-1 BFS</code> is to solve the graph shortest path(SP) problem that the weight of <code>edge</code> can only be <code>0</code> or <code>1</code>.</p> <p>We can solve this problem with Dijkstra or A star, but the time complexity may reach \\(O(E + VlogV)\\), where <code>E</code> is the number of edges and <code>V</code> is the number of vertices.</p> <p><code>0-1 BFS</code> can reduce the time complexity ot \\(O(E + V)\\), since it travals all the vertices and edges once.</p> <p>Similar to Dijikstra, we only put a vertex in the queue if it has been relaxed by a previous vertex (distance is reduced by travelling on this edge) and we also keep the queue sorted by distance from source at every point of time.</p> <p>Now, when we are at <code>u</code>, we know one thing for sure:</p> <p>travelling an edge <code>(u, v)</code> would make sure that <code>v</code> is either in the same level as <code>u</code> or at the next successive level.</p> <p>This is because the edge weights are 0 and 1. An edge weight of 0 would mean that they lie on the same level, whereas an edge weight of 1 means they lie on level below. We also know that during BFS our queue holds vertices of two successive levels at max. So, when we are at vertex <code>u</code>, our queue contains elements of level \\(L[u]\\) or \\(L[u] + 1\\). And we also know that for an edge <code>(u, v)</code>, \\(L[v]\\) is either \\(L[u]\\) or \\(L[u] + 1\\). Thus, if the vertex <code>v</code> is relaxed and has the same level, we can push it to the front of our queue and if it has the very next level, we can push it to the end of the queue. This helps us keep the queue sorted by level for the BFS to work properly.</p> <p>But, using a normal queue data structure, we cannot insert and keep it sorted in \\(O(1)\\). Using priority queue cost us \\(O(logN)\\) to keep it sorted. The problem with the normal queue is the absence of methods which helps us to perform all of these functions:</p> <ol> <li>Remove Top Element (To get vertex for BFS)</li> <li>Insert At the beginning (To push a vertex with same level)</li> <li>Insert At the end (To push a vertex on next level)</li> </ol> <p>Fortunately, all of these operations are supported by a double ended queue:</p> <pre><code>int zero_one_bfs(Graph g, int src, int tar) {\n  vector dis(g.size(), INT_MAX);\n  dis[src] = 0;\n\n  deque&lt;int&gt; dq{};\n  dq.push_back(src);\n\n  while(!dq.empty()) {\n    auto node = dq.front(); dq.pop_front();\n\n    for (auto next : g[node]) {\n      int c = cost(node, next);\n      if (dis[node] + c &lt; dis[next]) {\n        dis[next] = dis[node] + c;\n        if (c == 1) {\n          dq.push_back(next);\n        } else {\n          dq.push_front(next);\n        }\n      }\n    }\n  }\n\n  return dis[tar];\n}\n</code></pre> <p>Problems:</p> <ul> <li>minimum-cost-to-make-at-least-one-valid-path-in-a-grid</li> </ul> <p>Reference:</p> <ul> <li>codeforces 0-1 BFS</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/03_search/#depth-first-searchdfs","title":"Depth-first Search(DFS)","text":"<p>DFS is an algorithm for traversing or searching tree or graph data structure. The algorithm starts at the root node(selecting some arbitrary node as the root node in the case of a graph) and explores as far as possible along each branch before backtracking.</p> <p></p> <pre><code>void dfs(Graph&amp; graph, unordered_set&lt;int&gt;&amp; visited, int root) {\n  if (visited.count(root)) return;\n  for (auto next : graph[root]) {\n    dfs(graph, visited, next);\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/","title":"Dynamic Programming","text":"<p>Dynamic programming is both a mathematical optimization method and a computer programming method. In both contexts it refers to simplifying a complicated problem by breaking it down into simpler sub-problem in a recursive manner. While some decision problems cannot be taken apart this way, decisions that span several points in time do often break apart recursively. Likewise, in computer science, if a problem can be solved optimally by breaking it into sub-problems and then recursively finding the optimal solutions to the sub-problem, then it is said to have <code>optimal substructure</code>.</p> <p>If sub-problems can be nested recursively inside larger problems, so that dynamic programming methods are applicable, then there is a relation between the value of the larger problem and the values of the sub-problems.</p> <p>In general, a problem can be solved with dynamic programming if it has:</p> <ul> <li><code>optimal substructure</code>, which means the problem can be solved with one or finite sub-problems;</li> <li><code>repeated sub-problems</code>, which means that the sub-problems will be solved multiple times.</li> </ul> <p>The <code>optimal substructure</code> defines the relationship between origin problem and its sub-problems, and <code>repeated sub-problems</code> defines the relationship between sub-problems. If <code>optimal substructure</code> is not satisfied, we can not apply the <code>dp</code> method; if <code>repeated sub-problems</code> is not satisfied, we can apply <code>dp</code>, but it has no advange over <code>recursive</code> method.</p> <p>The general process of applying <code>dp</code> is:</p> <ol> <li>Define the state variable, this is the most flexible step, different state variables has different transmission functions.</li> <li>Define the transmission function, in this step we iterate all possible <code>selections</code> and get the state with one or more sub-states.</li> <li>Define the base case, this is necessary when we need more than one sub-problem solutions at the begining but they are not solved.</li> <li>Solve the problem by calculating the state value needed.</li> </ol>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#linear-dp","title":"Linear Dp","text":"<p>The main characteristic of <code>linear dp</code> is that the problem is related to its position. </p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#single-sequence","title":"Single Sequence","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#longest-increasing-subsequencelis","title":"Longest Increasing Subsequence(LIS)","text":"<p>Given an integer array <code>nums</code>, return the length of the longest strictly increasing subsequence.</p> <p>The typical solution for <code>LIS</code> is <code>dp</code>, we define:</p> <ol> <li><code>state</code> dp[i]: the length of LIS which ends with <code>nums[i]</code>;</li> <li><code>transform</code>: dp[i] = max(dp[j]) + 1, where \\(0 \\le j &lt; i\\) and \\(nums[j] &lt; nums[i]\\);</li> <li><code>base case</code>: dp[0] = 1</li> </ol> <p>And we have the function:</p> <pre><code>int Lis(vector&lt;int&gt;&amp; a) {\n  int m = a.size();\n  vector dp(m, 1);\n\n  for (int i = 1; i &lt; m; ++i) {\n    for (int j = 0; j &lt; i; ++j) {\n      if (a[j] &gt;= a[i]) continue;\n      dp[i] = max(dp[i], dp[j] + 1);\n    }\n  }\n\n  return *max_element(dp.begin(), dp.end());\n}\n</code></pre> <p>Complexity:</p> <ul> <li>Time complexity: \\(O(N^2)\\)</li> <li>Space complexity: \\(O(N)\\)</li> </ul> <p>The general greedy strategy is that we let the subsequence increasing as slowly as posible. So we define an array <code>d</code> to store the minimum last number of the subsequence of each lenth, <code>d[len]</code> stores the minimum last number of the subsequence of the length i. If current number is greater than <code>d[len]</code>, we increase the <code>len</code> and update <code>d[len + 1]</code> to current number; otherwise we use binary search to update <code>d[j]</code> with current number, where <code>dp[j] &gt;= current number</code>.</p> <pre><code>int Lis(vector&lt;int&gt;&amp; a) {\n  auto bs = [](auto&amp; d, int tar, int l, int r) {\n    while (l &lt; r) {\n      int mid = l + (r - l) / 2;\n      if (d[mid] &lt; tar) {\n        l = mid + 1;\n      } else {\n        r = mid;\n      }\n    }\n\n    return l;\n  };\n  int m = a.size();\n  vector d(m + 1, a[0]);\n  int len = 1;\n\n  for (int i = 1; i &lt; m; ++i) {\n    if (a[i] &gt; d[len]) {\n      d[++len] = a[i];\n    } else {\n      int j = bs(d, a[i], 1, len);\n      d[j] = a[i];\n    }\n  }\n\n  return len;\n}\n</code></pre> <p>Complexity:</p> <ul> <li>Time complexity: \\(O(NlogN)\\)</li> <li>Space complexity: \\(O(N)\\)</li> </ul> <p>Other similar problems:</p> <ul> <li>Longest Increasing Subsequence</li> <li>Number of Longest Increasing Subsequence</li> <li>Russian Doll Evelopes</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#maximum-sub-array-problems","title":"Maximum Sub Array Problems","text":"<p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p> <ul> <li>Maximum Subarray</li> <li>Maximum Product Subarray</li> <li>Maximum Sum Circular Subarray</li> <li>Max SubMatrix Lcci</li> <li>Max Sum of Rectangle No Larger Than K</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#single-sequence-that-not-continuouse-house-robber-problems","title":"Single Sequence that Not Continuouse -- House Robber Problems","text":"<p>When the sequence is not continuous, we need the information of more previous postions.</p> <ul> <li>House Robber</li> <li>House Robber II</li> <li>House Robber III</li> <li>Delete and Earn</li> <li>Pizza with 3n Slices</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#single-sequence-that-need-two-position","title":"Single Sequence that Need Two Position","text":"<p>Sometimes we need to consider two positions of subproblem, the state should be <code>dp[i][j]</code> to determine the two position <code>i j</code> of subproblems.</p> <ul> <li>Length of Longest Fibonacci Subsequence</li> <li>Longest Arithmetic Subsequence</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#single-sequence-with-another-dimenssion","title":"Single Sequence with Another Dimenssion","text":"<p>In addition to position, sometimes we need another variable, for example, the length/times/color. We generally write the state as <code>dp[i][k]</code>, where <code>i</code> for the position, <code>k</code> for the additional meanings.</p> <ul> <li>largest-sum-of-averages</li> <li>super-egg-drop</li> <li>paint-house</li> <li>paint-house-ii</li> <li>odd-even-jump</li> <li>frog-jump</li> <li>allocate-mailboxes</li> <li>toss-strange-coins</li> <li>split-array-largest-sum</li> <li>paint-house-iii</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#stock-series-problems","title":"Stock Series Problems","text":"<p>The general description for stock problems is:</p> <p>you're given an integer array of stock prices: <code>prices</code>, and you can complete at most <code>k</code> transactions.</p> <p>We define the state as: <code>dp[i][j][x]</code> means that <code>[0:i]</code> prices with <code>j</code> transactions and current state is <code>x</code>(0 or 1, 0 for empty, 1 for hold). And we define that a transaction including buying and selling.</p> <p>The code can be:</p> <pre><code>dp[0][0][1] = -ps[0];\nfor (int i = 1; i &lt; m; ++i) { dp[i][0][1] = max(dp[i - 1][0][1], -ps[i]); }\nfor (int i = 1; i &lt; m; ++i) {\n  for (int j = 1; j &lt;= k; ++j) {\n    dp[i][j][0] = max(dp[i - 1][j][0], dp[i - 1][j - 1][1] + ps[i]);\n    dp[i][j][1] = max(dp[i - 1][j][1], dp[i - 1][j][0] - ps[i]);\n  }\n}\n</code></pre> <ul> <li>best-time-to-buy-and-sell-stock</li> <li>best-time-to-buy-and-sell-stock-ii</li> <li>best-time-to-buy-and-sell-stock-iii</li> <li>best-time-to-buy-and-sell-stock-iv</li> <li>best-time-to-buy-and-sell-stock-with-cooldown</li> <li>best-time-to-buy-and-sell-stock-with-transaction-fee</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#package-series-problems","title":"Package Series Problems","text":"<p>Optimal Problems:</p> <ul> <li>coin-change</li> <li>ones-and-zeros</li> <li>last-stone-weight-ii</li> </ul> <p>Package Capacity Problems:</p> <ul> <li>partition-equal-subset-sum</li> </ul> <p>Combination Problems:</p> <ul> <li>combination-sum-iv</li> <li>target-sum</li> <li>coin-change-2</li> <li>profitable-schemes</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#other","title":"Other","text":"<ul> <li>Longest Valid Parentheses</li> <li>Arithmetic Slices</li> <li>Decode Ways</li> <li>Palindrome Partitioning ii</li> <li>Delete Operation for Two Strings</li> <li>Counting Bits</li> <li>Minimum Swaps to Make Sequences Increasing</li> <li>Minimum Number of Refueling Stops</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#double-sequences","title":"Double Sequences","text":"<p>In double sequence problems, we define <code>dp[i][j]</code> to represent the solution of <code>s1[0:i]</code> and <code>s2[0:j]</code>.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#longest-common-sequencelcs","title":"Longest Common Sequence(LCS)","text":"<p>Given two strings <code>text1</code> and <code>text2</code>, return the length of their longest common subsequence.</p> <ul> <li>longest-common-subsequence</li> <li>minimum-ascii-delete-sum-for-two-strings</li> <li>maximum-length-of-repeated-subarray</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#character-matching","title":"Character Matching","text":"<ul> <li>edit-distance</li> <li>wildcard-matching</li> <li>regular-expression-matching</li> <li>interleaving-string</li> <li>distinct-subsequences</li> <li>scramble-string</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#matrix","title":"Matrix","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#matrix-related-to-its-position","title":"Matrix Related to Its Position","text":"<p>In matrix problems, we use <code>dp[i][j]</code> to determine the solution of position <code>matrix[i][j]</code>, and the subproblem may relate to <code>dp[i - 1][j]</code>, <code>dp[i][j - 1]</code> and <code>dp[i - 1][j - 1]</code>.</p> <ul> <li>triangle</li> <li>minimum-path-sum</li> <li>dungeon-game</li> <li>maximal-square</li> <li>minimum-falling-path-sum</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#matrix-with-another-dimenssion","title":"Matrix with Another Dimenssion","text":"<p>Sometimes we also need another variable of subproblems where comes the state <code>dp[i][j][k]</code>.</p> <ul> <li>maximal-rectangle</li> <li>max-sum-of-rectangle-no-larger-than-k</li> <li>max-submatrix-lcci</li> <li>number-of-ways-of-cutting-a-pizza</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#other_1","title":"Other","text":"<ul> <li>2-keys-keyboard</li> <li>ugly-number-ii</li> <li>perfect-squares</li> <li>integer-break</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#prefix-sum","title":"Prefix Sum","text":"<p>Prefix sums are trivial to compute in sequential models of computation, by using the formula \\(y_{i} = y_{i - 1} + x_{i}\\) to compute each output value in sequence order. However, despite their ease of computation, prefix sums are a useful primitive in certain algorithms such as counting sort, and they form the basis of the scan higher-order function in functional programming languages. Prefix sums have also been much studied in parallel algorithms, both as a test problem to be solved and as a useful primitive to be used as a subroutine in other parallel algorithms.</p> <p>Abstractly, a prefix sum requires only a binary associative operator \\(\\oplus\\), making it useful for many applications from calculating well-separated pair decompositions of points to string processing.</p> <p>Mathematically, the operation of taking prefix sums can be generalized from finite to infinite sequences; in that context, a prefix sum is known as a partial sum of a series. Prefix summation or partial summation form linear operators on the vector spaces of finite or infinite sequences; their inverses are finite difference operators.</p> <p>There are two types of prefix sum, 1d and 2d:</p> <ul> <li>range-sum-query-immutable</li> <li>range-sum-query-2d-immutable</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#sum-of-a-range-or-area","title":"Sum of a Range or Area","text":"<ul> <li>matrix-block-sum</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#the-range-or-area-that-less-or-equal-a-target","title":"The Range or Area that Less or Equal a Target","text":"<ul> <li>maximum-size-subarray-sum-equals-k</li> <li>contiguous-array</li> <li>find-the-longest-substring-containing-vowels-in-even-counts</li> <li>subarray-sum-equals-k</li> <li>count-number-of-nice-subarrays</li> <li>continuous-subarray-sum</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#range-dp","title":"Range Dp","text":"<p>In range dynamic programming, the defination and transmission of state are all related to a range.</p> <p>The typical patterns of this problem is:</p> <pre><code>for (int len = 1; len &lt;= m; ++len) {\n  for (int i = 0; i + len - 1 &lt; m; ++i) {\n    int j = i + len - 1;\n\n    // dp[i][j] = ...\n  }\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#palindrome-problems","title":"Palindrome Problems","text":"<ul> <li>longest-palindromic-substring</li> <li>palindromic-substrings</li> <li>longest-palindromic-subsequence</li> <li>longest-chunked-palindrome-decomposition</li> <li>count-different-palindromic-subsequences</li> <li>minimum-insertion-steps-to-make-a-string-palindrome</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#reverse-order-problems","title":"Reverse Order Problems","text":"<ul> <li>burst-balloons</li> <li>remove-boxes</li> <li>minimum-score-triangulation-of-polygon</li> <li>strange-printer</li> <li>minimum-cost-to-merge-stones</li> <li>predict-the-winner</li> <li>encode-string-with-shortest-length</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/04_dp/#other_2","title":"Other","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/","title":"Bitwise","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#position-notation","title":"Position Notation","text":"<p><code>Position notation</code> usually denotes the extension to any base of the Huindu-Arabic number system (or decimal system). More generally, a positional system is a numeral system in which the contribution of a digit to the value of a number is the value of the digit muktiplied by a factor determined by the position of the digit.</p> <p></p> <p>For a x position notation number, the value is determined by the position of position of the digit and the radix. The 10 position number system(decimal) number 123.45 can be written as:</p> \\[ 123.45 = 1 \\times 10^2 + 2 \\times 10^1 + 3 \\times 10^0 + 4 \\times 10^{-1} + 5 \\times 10^{-2} \\] <p>8 position number system(Octal) number 720.5 can be written:</p> \\[ 720.5_{(8)} = 7 * 8^2 + 2 * 8^1 + 0 * 8^0 + 5 * 8^{-1} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#other-position-system-number-to-decimal-system-number","title":"Other Position System Number to Decimal System Number","text":"<p>Add all position digit weigted with the radix. For example:</p> \\[ 720.5_{(8)} = 7 * 8^2 + 2 * 8^1 + 0 * 8^0 + 5 * 8^{-1} = 464.625 \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#decimal-to-other-position-system","title":"Decimal to Other Position System","text":"<ol> <li>The remainder is stored in a variable when it is divided by 2;</li> <li>Divide the number by 2;</li> <li>Repeat these steps till the number is greater than zero;</li> <li>Combine all reminders in reversing order.</li> </ol>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#bit-and-operators","title":"Bit and Operators","text":"<p>Computer stores all numbers with binary system, and all calculations are implemented by bitwise operatons.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#and","title":"AND","text":"<p><code>AND</code>(\\(\\&amp;\\)) takes two equal-length binary representations and performs the logical AND operation on each pair of the corresponding bits. If both bits in the compared position are 1, the bit in the resulting binary representation is \\(1\\), other wise the result is \\(0\\).</p> x y result 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#or","title":"OR","text":"<p>A bitwise <code>OR</code> (\\(|\\)) is a binary operation that takes two bit patterns of equal length and performs the logical inclusive OR operation on each pair of corresponding bits. The result in each position is 0 if both bits are 0, while otherwise the result is 1.</p> x y result 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#xor","title":"XOR","text":"<p>A bitwise <code>XOR</code> (\\(\\oplus\\))is a binary operation that takes two bit patterns of equal length and performs the logical exclusive OR operation on each pair of corresponding bits. The result in each position is 1 if only one of the bits is 1, but will be 0 if both are 0 or both are 1. In this we perform the comparison of two bits, being 1 if the two bits are different, and 0 if they are the same. </p> x y result 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#not","title":"NOT","text":"<p>The bitwise <code>NOT</code>(\\(\\sim\\)), or complement, is a unary operation that performs logical negation on each bit, forming the ones' complement of the given binary value. Bits that are 0 become 1, and those that are 1 become 0.</p> x result 0 1 0 0"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#left-shift","title":"Left Shift","text":"<p>When shifting left(\\(&lt;&lt;\\)), the most-significant bit is lost, and a 0 bit is inserted on the other end.</p> \\[ 0010 &lt;&lt; 1 \\to 0100 \\] \\[ 0010 &lt;&lt; 2 \\to 1000 \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#right-shift","title":"Right shift","text":"<p>When shifting right(\\(&gt;&gt;\\)), the most-significant bit is lost, and a 0 bit is inserted on the other end.</p> \\[ 0010 &gt;&gt; 1 \\to 0001 \\] \\[ 0010 &gt;&gt; 2 \\to 0000 \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/055_bit/#bitwise-operation-properties","title":"Bitwise Operation Properties","text":"<ul> <li>Idempotent Law: \\(a \\&amp; a = a, a | a = a\\)</li> <li>Exchange Law: \\(a \\&amp; b = b \\&amp;a, a | b = b | a, a \\oplus b = b \\oplus a\\)</li> <li>Union Law: \\((a \\&amp; b) \\&amp; c = a \\&amp; (b \\&amp; c), (a | b) | c = a | (b | c), (a \\oplus b) \\oplus c = a \\oplus (b \\oplus c)\\)</li> <li>Distribution Law: \\((a \\&amp; b) | c = (a | c) \\&amp; (b | c), (a | b) \\&amp; c = (a \\&amp; c) | (b \\&amp; c), (a \\oplus b) \\&amp; c = (a \\&amp; c) \\oplus (b \\&amp; c)\\)</li> <li>De Morgan Law: \\(\\sim(a \\&amp; b) = (\\sim a) | (\\sim b), \\sim(a | b) = (\\sim a) \\&amp; (\\sim b)\\)</li> <li>Not Operation Property: \\(-1 = \\sim 0, -a = \\sim(a - 1)\\)</li> <li>And Operation Property: \\(a \\&amp; 0 = 0, a \\&amp; (-1) = a, a \\&amp; (\\sim a) = 0\\)</li> <li>Or Operation Property: \\(a | 0 = a, a | (\\sim a) = -1\\)</li> <li>Xor Operation Property: \\(a \\oplus 0 = a, a \\oplus a = 0\\)</li> </ul> <p>Other useful properties:</p> <ul> <li>Set the last \\(1\\) of the binary representation of \\(n\\) to \\(0\\): \\(n \\&amp; (n - 1)\\)</li> <li>Keep the last \\(1\\) of the binary representation of \\(n\\), and the rest of the \\(1\\)s become \\(0\\): \\(n \\&amp; (\\sim n)\\)</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/05_greedy/","title":"Greedy","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/","title":"Math","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#greatest-common-divisorgcd","title":"Greatest Common Divisor(GCD)","text":"<p>Greatest common divisor(GCD) of two positive integers is the largest positive integer that divides both numbers without remainder. It is useful for reducing fractions to be in its lowest terms.</p> <pre><code>int gcd(int x, inty) { return y ? gcd(y, x % y) : x; } ``` ## Least Common Multiple(LCM)\n\nLeast common multiple(LCM) of two integer is the smallest integer that is a multiple of both numbers.\n\n```C++\nint lcm(int x, int y) { return x / gcd(x, y) * y; }\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#josephus-problem","title":"Josephus Problem","text":"<p>People are standing in a circle wating to be executed. Counting begins at a special point in the circle and proceeds around the circle in a specified direction. After a specified number of people are skipped, the next person is executed. The procedure is repeated with the remaining people, starting with the next person, going in the same direction and skipping the same number of people, until only one person remains, and is freed.</p> <p>We define that:</p> <ul> <li><code>f(n, m)</code> returns the remaining people indexed from <code>0</code> in <code>n</code> people and skips each <code>m</code> people.</li> <li>if we know <code>f(n - 1, m) = x</code>, then at the <code>n</code> trip we start from index <code>x + 1</code> and skip <code>m</code> people and then return the answer: <code>f(n - 1, m) + m</code>. Now that people are in a circle, we can avoid overflow by <code>f(n, m) = (f(n - 1, m) + m) % n</code>.</li> <li>As for the base, if <code>n == 1</code>, result is <code>0</code>.</li> </ul> <pre><code>int josephus(int n, int m) {\n  return n == 1 ? 0 : (f(n - 1, m) + m) % n;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#probability","title":"Probability","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#conditional-probability","title":"Conditional Probability","text":"<p>The conditional probability of an event \\(A\\), given an event \\(B\\) with \\(P(B) &gt; 0\\), is defined by:</p> \\[ P(A|B) = \\frac{P(A \\cap B)} {P(B)} \\] \\[ P(A \\cap B) = P(B) * P(A|B) \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#multiplication-rule","title":"Multiplication Rule","text":"<p>Assuming that all of the conditioning events have positive probability, we have:</p> \\[ P(\\cap^{n}_{i = 1} A_{i}) = P(A_1) P(A_2 | A_1) P(A_3 | A_1 \\cap A_2) \\cdots P(A_n | \\cap^{n - 1}_{i = 1} A_{i}) \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#total-probability-theorem","title":"Total Probability Theorem","text":"<p>Let \\(A_1, \\cdots, A_n\\) be disjoint events that form a partition of the sample space (each possible outcome is included in one and only one of the events \\(A_1, \\cdots, A_n\\)) and assume that \\(P(A_i) &gt; 0\\), for all \\(i = 1, \\cdots, n\\). Then, for any event B, we have:</p> \\[ \\begin{align} P(B) &amp;= P(A_1 \\cap B) + \\cdots + P(A_n \\cap B) \\\\      &amp;= P(A_1)P(B|A_1) + \\cdots + P(A_n)P(B|A_n) \\\\ \\end{align} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#bayes-rule","title":"Bayes' Rule","text":"<p>Let \\(A_1, A_2, \\cdots, A_n\\) be disjoint events that form a partition of the sample space, and assume that \\(P(A_i) &gt; 0\\), for all \\(i\\). Then, for any event B such that \\(P(B) &gt; 0\\), we have:</p> \\[ \\begin{align} P(A_i | B) &amp;= \\frac{P(A_i) P(B | A_i)} {P(B)} \\\\            &amp;= \\frac{P(A_i) P(B | A_i)} {P(A_1)P(B|A_1) + \\cdots + P(A_n)P(B|A_n)} \\end{align} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#counting","title":"Counting","text":"<p>The <code>permutation</code> of n objects is:</p> \\[ n! \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#k-permutations","title":"K-Permutations","text":"<p>If we want to count the number of different ways that we can pick k out of n objects and arrange them in a sequence, the number of posibble sequences is called <code>k-permutations</code>:</p> \\[ \\begin{align} n(n - 1) \\cdots (n - k + 1) &amp;= \\frac{n(n - 1)\\cdots(n - k + 1)(n - k)\\cdots 2 \\times 1} {(n - k) \\cdots 2 \\times 1} \\\\                             &amp;= \\frac{n!}{(n - k)!} \\\\ \\end{align} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#k-combinations","title":"K-Combinations","text":"<p>A combination is a choice of k elements out of an n-element set without regard to order. Combination has no ordering of the selected elements.</p> \\[ \\binom{n}{k} = \\frac{n!} {k! (n - k)!} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#partition","title":"Partition","text":"<p>We have n distinct objects and we are given nonnegative integers \\(n_1, n_2, \\cdots, n_r\\), whose sum is equal to n. The n items are to be divided into r disjoint groups, with the ith group containing exactly \\(n_i\\) items. Partitions of n objects into r groups with ith group having \\(n_i\\) objects is called <code>multinomial coefficient</code>:</p> \\[ \\begin{align} \\binom{n}{n_1, n_2, \\cdots, n_r} &amp;= \\binom{n}{n_1} \\binom{n - n_1}{n_2} \\binom{n - n_1 - n_2}{n_3} \\cdots \\binom{n - n_1 - \\cdots - n_{r - 1}}{n_r} \\\\ &amp;= \\frac{n!}{n_1!(n - n_1)!} \\frac{(n - n_1)!}{n_2!(n - n_1 - n_2)!} \\cdots \\frac{(n - n_1 - \\cdots - n_{r - 1})!}{(n - n_1 - \\cdots - n_{r - 1} - n_r)!n_r!} \\\\ &amp;= \\frac{n!}{n_1!n_2!\\cdots n_r!} \\\\ \\end{align} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#expression","title":"Expression","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#addition","title":"Addition","text":"<pre><code>/// digits of A, B and C are in reverse order\nvector&lt;int&gt; add(vector&lt;int&gt;&amp; A, vector&lt;int&gt;&amp; B) {\n  if (A.size() &lt; B.size()) return add(B, A);\n\n  vector&lt;int&gt; C{};\n  int t{0};\n  for (int i = 0; i &lt; A.size(); ++i) {\n    t += A[i];\n    if (i &lt; B.size()) t += B[i];\n    C.push_back(t % 10);\n    t /= 10;\n  }\n  if (t) C.push_back(t);\n\n  return C;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#subtraction","title":"Subtraction","text":"<pre><code>/// digits of A, B and C are in reverse order\n/// and A is bigger than B\nvector&lt;int&gt; add(vector&lt;int&gt;&amp; A, vector&lt;int&gt;&amp; B) {\n  vector&lt;int&gt; C{};\n  for (int i = 0, t = 0; i &lt; A.size(); ++i) {\n    t = A[i] - t;\n    if (i &lt; B.size()) t -=B[i];\n    C.push_back((t + 10) % 10);\n    t = t &lt; 0 ? -1 : 0;\n  }\n  while (C.size() &gt; 1 &amp;&amp; C.back() == 0) C.pop_back();\n  return C;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#multiplication","title":"Multiplication","text":"<pre><code>/// digits of A and C are in reverse order\nvector&lt;int&gt; mul(vector&lt;int&gt;&amp; A, int b) {\n  vector&lt;int&gt; C{};\n  for (int i = 0, t = 0; i &lt; A.size() || t; ++i) {\n    if (i &lt; A.size()) t += A[i] * b;\n    C.push_back(t % 10);\n    t /= 10;\n  }\n  while (C.size() &gt; 1 &amp;&amp; C.back() == 0) c.pop_back();\n  return C;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/06_math/#division","title":"Division","text":"<pre><code>/// digits of A and C are in reverse order\npair&lt;vector&lt;int&gt;, int&gt; div(vector&lt;int&gt;&amp; A, int b) {\n  vector&lt;int&gt; C{};\n  int r{0};\n  for (int i = A.size() - 1; i &gt;= 0; --i) {\n    r = r * 10 + A[i];\n    C.push_back(r / b);\n    r %= 10;\n  }\n  reverse(C.begin(), C.end());\n  while (C.size() &gt; 1 &amp;&amp; C.back() == 0) C.pop_back();\n  return {C, r};\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/","title":"Geometry(2D)","text":"<p>To solve geometry problems in 2D with computers, we need some basic knowledge about geometry relationships and equations.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#notion","title":"Notion","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#point","title":"Point","text":"<p>In Cartesian Coordinate System, we use coordinates \\((x, y)\\) to represent a point, for example, \\((2, 3)\\), \\((-7, 0)\\).</p> <pre><code>struct Point {\n  double x{0.};\n  double y{0.};\n};\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#vector","title":"Vector","text":"<p>The representation of vector is like point, we use \\((x, y)\\) to represent a vector.</p> <pre><code>using Vector = Point;\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#line","title":"Line","text":"<p>There are many variant ways to write the equation of a line:</p> <ul> <li>Normal form: \\(ax + by + c = 0\\);</li> <li>Slope-intercept form: \\(y = kx + b\\);</li> <li>Intercept form: \\(\\frac{x}{a} + \\frac{y}{b} = 1\\);</li> </ul> <p>Consider that we just want to know where the line locates and how the line slopes, we can use the form of:</p> <ul> <li>a point on line and the unit vector of the line.</li> </ul> <pre><code>struct Line {\n  Point point{0., 0.};\n  Vector unit{0., 1.};\n};\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#line-segment","title":"Line Segment","text":"<p>We use two end points \\((x_1, y_1), (x_2, y_2)\\) of the line segment to represent it.</p> <pre><code>struct LineSegment {\n  Point start{0., 0.};\n  Point end{0., 0.};\n};\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#polygon","title":"Polygon","text":"<p>We record all vertices of the polygon to represent it.</p> <pre><code>struct Polygon {\n  vector&lt;Vector&gt; points{};\n};\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#curve","title":"Curve","text":"<p>Some special curves like Bezier curve and Bell curve, we use its analytical expressions to represent them. For simple curve like circle, we can use the central point and radius of the circle to represent it.</p> <pre><code>struct Circle {\n  Point center{0., 0.};\n  double radius{0.};\n};\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#basic-equations","title":"Basic Equations","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#triangle","title":"Triangle","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#law-of-sines","title":"Law of sines","text":"\\[ \\frac{a}{\\sin{A}} = \\frac{b}{\\sin{B}} = \\frac{c}{\\sin{C}} = 2R \\] <p>where:</p> <ul> <li>\\(a, b, c\\) are the lengths of the sides of a triangle;</li> <li>\\(A, B, C\\) are the opposite angle of \\(a, b, c\\);</li> <li>\\(R\\) is the radius of the triangle's circumcircle.</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#law-of-cosines","title":"Law of cosines","text":"\\[ a^2 = b^2 + c^2 - 2bc\\cos{A} \\] \\[ b^2 = a^2 + c^2 - 2ac\\cos{B} \\] \\[ c^2 = a^2 + b^2 - 2ab\\cos{C} \\]"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#vector_1","title":"Vector","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#addition-and-subtraction","title":"Addition and Subtraction","text":"<p>The sum of two vectors is a third vector, represented as the diagonal of the parallelogram constructed with the two original vectors as sides. As for subtraction, set the second vector coordinates with its opposite number and use the same equation.</p> <p></p> \\[ A(x_1, y_1) + B(x_2, y_2) = C(x_1 + x_2, y_1 + y_2) \\] <pre><code>Vector operator+(const Vector&amp; A, const Vector&amp; B) {\n  return Vector{A.x + B.x, A.y + B.y};\n}\n\nVector operator-(const Vector&amp; A, const Vector&amp; B) {\n  return Vector{A.x - B.x, A.y - B.y};\n}\n\nVector operator*(const Vector&amp; A, const double k) {\n  return Vector{A.x * k, A.y * k};\n}\n\nVector operator/(const Vector&amp; A, const double k) {\n  return Vector{A.x / k, A.y / k};\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#dot-production","title":"Dot Production","text":"<p>The dot product, also called the scalar product, is a scalar real number equal to the product of the lengths of vector \\(|\\vec{a}|\\) and \\(|\\vec{b}|\\) and the cosine of the angle \\(\\theta\\) between them:</p> \\[ \\vec{a} \\cdot \\vec{b} = |\\vec{a}||\\vec{b}|\\cos{\\theta}  \\] <p>We use dot product to:</p> <ul> <li>check if the two vectors are perpendicular: </li> </ul> \\[a \\cdot b = 0\\] <ul> <li>calculate the angle between two vectors:</li> </ul> \\[\\cos{\\theta} = \\frac{\\vec{a} \\cdot \\vec{b}}{|\\vec{a}||\\vec{b}|}\\] <p>The result of dot product is calculated as:</p> <pre><code>double operator*(const Vector&amp; A, const Vector&amp; B) {\n  return A.x * B.x + A.y * B.y;\n}\n\ndouble Length(const Vector&amp; A) {\n  return sqrt(A * A);\n}\n\ndouble Angle(const Vector&amp; A, const Vector&amp; B) {\n  return acos(A * B / Length(A) / Length(B));\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#cross-production","title":"Cross Production","text":"<p>The cross product, also called the vector product, is a third vector \\(\\vec{c}\\), perpendicular to the plane of the original vectors. The magnitude of \\(\\vec{c}\\) is equal to the product of the lengths of vectorss \\(\\vec{a}\\) and \\(\\vec{b}\\) and the sine of the angle \\(\\theta\\) between them:</p> \\[ |\\vec{c}| = |\\vec{a}||\\vec{b}|\\sin{\\theta} \\] <p>We can find the direction of cross product with right-hand rule: </p> <p>The cross product \\(\\vec{c} = \\vec{a} \\times \\vec{b}\\) (vertical, in purple) changes as the angle between the vector \\(\\vec{a}\\)(blue) and \\(\\vec{b}\\)(red) changes.  The cross product is:</p> <ul> <li>always orthogonal to both vectors;</li> <li>has magnitude \\(0\\) when the vectors are parallel;</li> <li>has maximum magnitude \\(|\\vec{a}||\\vec{b}|\\) when they are orthogonal.</li> </ul> <p></p> <p>The result of dot product is calculated as: <pre><code>double Cross(const Vector&amp; A, const Vector&amp; B) {\n  return A.x * B.y - A.y * B.x;\n}\n</code></pre></p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#rotation-of-vector","title":"Rotation of Vector","text":"<p>Let's say that we have a point \\((x_1, y_1)\\), which also defines the vector \\(\\vec{a_1}\\). The angle of \\(\\vec{a_1}\\) is \\(\\beta\\). The vector \\(\\vec{a_1}\\) has length \\(L\\). We rotate this vector anticlockwise around the origin by \\(\\alpha\\) degrees, the new vector \\(\\vec{a_2}\\) has coordinates \\((x_2, y_x)\\). The length \\(L\\) is not changed, so we have:</p> \\[ x_1 = L \\cos{\\beta} \\] <p>$$ y_1 = L \\sin{\\beta} $$ As we rotate \\((x_1, y_1)\\) by angle \\(\\beta\\) to get \\((x_2, y_2)\\), the new vector \\(\\vec{a_2}\\) has:</p> \\[ x_2 = L \\cos{(\\alpha + \\beta)} \\] \\[ y_2 = L \\sin{(\\alpha + \\beta)} \\] <p>Combine all these equations above we have:</p> \\[ \\begin{align} x_2  &amp; = L cos(\\alpha + \\beta) \\\\\\\\ &amp; = L (\\cos{\\alpha}\\cos{\\beta} - \\sin{\\alpha}\\sin{\\beta}) \\\\\\\\ &amp; = L \\cos{\\beta}\\cos{\\alpha} - L \\sin{\\beta}\\sin{\\alpha} \\\\\\\\ &amp; = x_1 \\cos{\\alpha} - y_1 \\sin{\\alpha} \\\\\\\\ \\end{align} \\] \\[ \\begin{align} y_2  &amp; = L sin(\\alpha + \\beta) \\\\\\\\ &amp; = L (\\sin{\\alpha}\\cos{\\beta} + \\cos{\\alpha}\\sin{\\beta}) \\\\\\\\ &amp; = L \\cos{\\beta}\\sin{\\alpha} + L \\sin{\\beta}\\cos{\\alpha} \\\\\\\\ &amp; = x_1 \\sin{\\alpha} + y_1 \\cos{\\alpha} \\\\\\\\ \\end{align} \\] <p>So the result of rotation of vector is: <pre><code>Vector Rotate(Vector A, double alpha) {\n  return Vector{A.x * cos(alpha) - A.y * sin(alpha),\n                A.x * sin(alpha) + A.y * cos(alpha)};\n}\n</code></pre></p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#basic-problems","title":"Basic Problems","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#area-of-triangle","title":"Area of Triangle","text":"<p>When we know the base and height, the area of triangle is:`</p> \\[ S = \\frac{1}{2} |AB| \\cdot h \\] <p>as we have:</p> \\[ |\\vec{AB} \\times \\vec{AC}| = |\\vec{AB}||\\vec{AC}|sin\\theta \\] <p>and</p> \\[ h = |\\vec{AC}|sin\\theta \\] <p>The area of triangle can be calculated:</p> \\[ S = \\frac{1}{2} |\\vec{AB} \\times \\vec{AC}|  \\] <pre><code>double TriangleArea(const Point&amp; A, const Point&amp; B, const Point&amp; C) {\n  return Cross(B - A, C - A) / 2;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#area-of-polygon","title":"Area of Polygon","text":"<p>We can divide a polygon to multiple triagnles and calculate the sum of their areas.</p> <pre><code>double PolygonArea(const Polygon&amp; poly) {\n  double res{0};\n  int m = poly.points.size();\n  for (int i = 1; i &lt; m - 1; ++i) {\n    res += Cross(poly.points[i] - poly.points[0], \n                 poly.points[i + 1], poly.points[0]);\n  }\n  return res / 2.;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#point-on-line-side","title":"Point on Line Side","text":"<p>We can use the cross product to check a point on wihch side of the line: if the cross product is </p> <ul> <li>\\(&gt; 0\\), point is on line left;</li> <li>\\(&lt; 0\\), point is on line right.</li> </ul> <pre><code>bool IsPointOnLineLeft(const Line&amp; L, const Point&amp; P) {\n  return Cross((P - L.point), L.unit) &gt; 0.;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#point-and-line-distance","title":"Point and Line Distance","text":"<p>The result of cross product is the area of parallelogram, we divide this by parallelogram's base to get height, which is the distance from point to line.</p> <pre><code>double DistanceFromPointToLine(const Point&amp; P, const Line&amp; L) {\n  Vector v1{L.unit - L.point};\n  Vector v2{P - L.point};\n  return fabs(Cross(v1, v2) / Length(v1));\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#point-and-line-segment-distance","title":"Point and Line Segment Distance","text":"<p>If the point is not in the rectangle of line segment, we should calculate the distance from point to nearest line segment point; otherwise we can use the line distance to get the result.</p> <pre><code>double DistanceFromPointToLineSegment(const Point&amp; P, const LineSegment&amp; L) {\n  Vector v1{L.end - L.start};\n  Vector v2{P - L.start};\n  Vector v3{P - L.end};\n  if (sign(v1 * v2) &lt; 0) return Length(v2);\n  if (sign(v1 * v3) &gt; 0) return Length(v3);\n  return fabs(Cross(v1, v2) / Length(v1));\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#point-on-line-segment","title":"Point on Line Segment","text":"<p>If a point is on line segment, it should meet:</p> <ul> <li>the point is on the line;</li> <li>the point is between two end points of line segment.</li> </ul> <pre><code>int Sign(double x) {\n  return x &lt; -1e-4 ? -1 : x &gt; 1e-4 ? 1 : 0;\n}\n\nbool IsPointOnSegment(const LineSegment&amp; L, const Point A) {\n  return Sign(Cross(L.start - A, L.end - A)) == 0 &amp;&amp;\n         Sign((L.start - A) * (L.end - A)) &lt;= 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#point-in-polygonpip","title":"Point in Polygon(PIP)","text":"<p>In computational geometry, the <code>point in polygon</code> problem asks whether a given point in the plane lies inside of a polygon. There are two methods to check if the point is in polygon:</p> <ul> <li>Ray casting</li> <li>Winding number</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#ray-casting-algorithm","title":"Ray casting algorithm","text":"<p>One simple way of finding whether the point is inside a simple polygon is to test how many times a ray, starting from the point in any fixed direction, intersects the edges of the polygon. If the ray intersects the polygon's edge:</p> <ul> <li><code>even number</code> times, the point is outside the polygon;</li> <li><code>odd number</code> times, the point is inside the polygon.</li> </ul> <p>There are some special cases we need to deal with:</p> <ol> <li>ray intersects the conves vertex(case 1), which should count once;</li> <li>ray intersects the concave vertex(case 2), which should not be counted;</li> <li>ray intersects the edge of polygon, which should not be counted.</li> </ol> <p>To simplify the logic, we think that a point is in a polygon if:</p> <ol> <li>the point is on the edge;</li> <li>the ray from point to long long right has intersetion with the edge.</li> </ol> <p>While calculating the intersection with the edge, we check:</p> <ol> <li>the point is between the edge in y direction: <code>p0.y - p.y != p1.y - p.y</code></li> <li>the intersection size: <code>p0.y &lt; p1.y ? cross_product &gt; 0 : cross_product &lt; 0</code></li> </ol> <pre><code>// Ray casting\nbool IsPointInPolygon(const Point&amp; p, cosnt Polygon&amp; poly) {\n  bool f{false};\n  auto p0 = poly.points.back();\n  for (auto p1 : poly.points) {\n    if (IsPointOnSegment(p, {p0, p1})) return true;\n    if ((p0.y &gt; p.y) != (p1.y &gt; p.y)) {\n      auto side = (p1 - p0).Cross(p - p0);\n      f ^= p0.y &lt; p1.y ? side &gt; 0 : side &lt; 0;\n    }\n    p0 = p1;\n  }\n  return f;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#winding-number-algorithm","title":"Winding Number Algorithm","text":"<p>Winding number algorithm links the point to all points of the polygon and calculate the sum of all the angles, if the angle is: </p> <ul> <li>\\(\\ne 0\\), the point is not in polygon;</li> <li>\\(= 0\\), the point is in polygon.</li> </ul> <pre><code>// Winding number\nbool IsPointInPolygon(const Point&amp; p, const Polygon&amp; poly) {\n  double accumulate_angle{0};\n  int m = poly.points.size();\n  for (int i = 0; i &lt; m; ++i) {\n    auto&amp; p1 = poly.points[i];\n    auto&amp; p2 = poly.points[(i + 1) % m];\n    if (IsPointOnSegment(p, {p1, p2})) return true;\n    accumulate_angle += acos((p1 - P) * (p2 - P) / Length(p1 - p) / Length(p2 - p));\n  }\n  return sign(accumulate_angle) == 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#line-segment-intersection","title":"Line Segment Intersection","text":"<p>There are three relationships between two line segments:</p> <ul> <li>no intersection;</li> <li>intersection;</li> <li>overlaps.</li> </ul> <p>And as for the intersection case, we can use following methods to calculate its intersection point:</p> <p></p> <p>We assume that the intersection point is \\(O\\), the area of the \\(\\triangle ABC\\) and \\(\\triangle ABD\\) can be calculated by:</p> \\[ S_{ABC} = \\frac{\\vec{AB} \\times \\vec{AC}} {2} \\] \\[ S_{ABD} = \\frac{\\vec{AB} \\times \\vec{AD}} {2} \\] <p>As we have known that \\(\\triangle ABC\\) and \\(\\triangle ABD\\) have the same base \\(AB\\):</p> \\[ \\frac{S_{ABC}} {S_{ABD}} = \\frac{\\frac{|AB| * |CN|}{2}}{\\frac{|AB| * |DM|}{2}} =  \\frac{|CN|} {|DM|} \\] <p>And according to triangle rules:</p> \\[ \\frac{|DM|}{|CN|} = \\frac{|DO|}{|CO|} \\] <p>Finally:</p> \\[ \\frac{|DO|}{|CO|} = \\frac{S_{ABD}}{S_{ABC}} \\] \\[ \\frac{|DO|}{|DC|} = \\frac{S_{ABD}}{S_{ABC} + S_{ABD}} = k \\] \\[ \\vec{DO} = k * \\vec{DC} \\] <pre><code>bool IsLineSegmentIntersection(const LineSegment&amp; L1, const LineSegment&amp; L2) {\n  return sign(Cross(L1.end - L1.start, L2.start - L1.start)) *\n             sign(Cross(L1.end - L1.start, L2.end - L1.start)) &lt; 0 &amp;&amp;\n         sign(Cross(L2.end - L2.start, L1.start - L2.start)) *\n             sign(Cross(L2.end - L2.start, L1.end - L2.start)) &lt; 0;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#convex-hull","title":"Convex Hull","text":"<p>The convex hull of a set of points is defined as the smallest convex polygon, that encloses all of the points in the set. Convex means that the polygon has no coner that is bent inwards.</p> <p>A usefull way to think about the convex hull is the rubber band analogy. Suppose the points in the set were nails, sticking out of a flat surface. Imaging now, what would happen if you took a rubber band and stretched it around the nails. Trying to contract back to its origin length, the rubber band would enclose the nails, touching the ones that stick out the furthest from the centre.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#andrews-monotone-chain-convex-hull-algorithm","title":"Andrew's monotone chain convex hull algorithm","text":"<p>Andrew's algorithm constructs the convex hull of a set of 2D points in \\(O(NlogN)\\) time.</p> <p>It does so by first sorting the points lexicographically (first by x-coordinate, and in case of a tie, by y-coordinate), and then constructing upper and lower hulls of the points in \\(O(n)\\) time.</p> <p></p> <p>The process is mainly:</p> <ol> <li>Sort the points by its x-coordinate, if the x-coordinate is equal, by y-coordinate;</li> <li>Start from the leftmost point, if the new point is higher(use <code>cross product</code>) than last point in stack, we pop the last; if not, we push the new point to stack. After this, we can get the upper hull.</li> <li>We remove all points used in upper hull, and do the same thing as step 2 in reverse order to get the lower hull.</li> <li>Return all points in upper and lower hull.</li> </ol> <pre><code>vector&lt;vector&lt;int&gt;&gt; andrew(const vector&lt;vector&lt;int&gt;&gt;&amp; pts) {\n    sort(pts.begin(), pts.end(), [](auto&amp; a , auto&amp; b) {\n      return a[0] == b[0] ? a[1] &lt; b[1] : a[0] &lt; b[0];\n    });\n    auto cross = [](auto&amp; p1, auto&amp; p2, auto&amp; p0) -&gt; int {\n      return (p1[0] - p0[0]) * (p2[1] - p0[1]) -\n             (p1[1] - p0[1]) * (p2[0] - p0[0]);\n    };\n\n    int m = pts.size();\n    vector&lt;int&gt; hull{};\n    vector&lt;bool&gt; v(m, true);\n    for (int i = 0; i &lt; m; ++i) {\n      while (hull.size() &gt;= 2 &amp;&amp; cross(pts[*hull.rbegin()], pts[i],\n                                       pts[*(hull.rbegin() + 1)]) &gt; 0) {\n        v[hull.back()] = false;\n        hull.pop_back();\n      }\n      hull.push_back(i);\n    }\n\n    int n = hull.size();\n    v[0] = false;\n    for (int i = m - 1; i &gt;= 0; --i) {\n      if (v[i]) continue;\n      while (hull.size() &gt;= 2 &amp;&amp; cross(pts[*hull.rbegin()], pts[i],\n                                       pts[*(hull.rbegin() + 1)]) &gt; 0) {\n        hull.pop_back();\n      }\n      hull.push_back(i);\n    }\n    hull.pop_back();\n\n    vector&lt;vector&lt;int&gt;&gt; ans{};\n    for (auto i : hull) ans.push_back(std::move(pts[i]));\n    return ans;\n  }\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/07_geometry/#reference","title":"Reference","text":"<ul> <li>Geometry</li> <li>Computer Geometry Tutorial</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/","title":"Graph","text":"<p>A <code>Graph</code> consists of:</p> <ul> <li><code>node</code>s(vertices) and</li> <li><code>edge</code>s which connecting these <code>node</code>s.</li> </ul> <p>Graphs are mathematical structures uesed to model pairwise relations between objects. </p> <p></p> <p>A distinction is made between:</p> <ul> <li><code>undirected graph</code>: where edges link two nodes symmetrically;</li> <li><code>directed graph</code>: where edges link two nodes asymmetrically.</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#topological-sorting","title":"Topological Sorting","text":"<p>A <code>topological sort</code> of a <code>directed graph</code> is a linear ordering of its vertices such that for every directed edge <code>uv</code> from vertex <code>u</code> to vertex <code>v</code>, <code>u</code> comes before <code>v</code> in the ordering.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#kahns-algorithm","title":"Kahn's Algorithm","text":"<p>The process is:</p> <ol> <li>we find a list of <code>start nodes</code> which have no incoming edges and insert them into a queue;</li> <li>we remove a node from queue and for each of next nodes, we decrease its indegrees, if next node's indegree is zero, we push it to the queue;</li> <li>loop step 1 and 2 until the queue is empty.</li> </ol> <pre><code>vector&lt;int&gt; TopoSort(const vector&lt;pair&lt;int, int&gt;&gt;&amp; edges, int n) {\n  unordered_map&lt;int, vector&lt;int&gt;&gt; graph{};\n  vector indeg(n, 0);\n  for (auto [f, t] : edges) { \n    graph[f].push_back(t);\n    indeg[t]++;\n  }\n\n  queue&lt;int&gt; q{};\n  for (int i = 0; i &lt; n; ++i) if (!indeg[i]) q.push(i);\n\n  vector&lt;int&gt; ans{};\n  while (!q.empty()) {\n    auto node = q.front(); q.pop();\n    ans.push_back(nodee);\n    for (auto next : graph[node]) if (!--indeg[next]) q.push(next);\n  }\n\n  return ans;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#shortest-pathsp","title":"Shortest Path(SP)","text":"<p>In graph theory, the <code>shortest path problem</code> is the problem of finding a path between two nodes in a graph such that the sum of the weights of its constituent edges is minimized. The mainly used algorihtms are:</p> <ul> <li>Floyd</li> <li>Bellman-Ford</li> <li>Dijkstra</li> </ul> Floyd Bellman-Ford Dijkstra Multiple-source Shortest Path Singole-source Shortest Path Single-source Shortest Path Not negtive cycle graph any graph Not negtive edge graph \\(O(N^3)\\) \\(O(NM)\\) \\(O(MlogM)\\)"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#floyd","title":"Floyd","text":"<p>Floyd algorithm compares all possible paths through the graph between each pair of vertices. <pre><code>vector&lt;vector&lt;int&gt;&gt; floyd(Graph&amp; graph, int node) {\n  auto m = graph.size();\n  vector distance(m + 1, vector&lt;int&gt;(m + 1, INT_MAX));\n  for (int i = 1; i &lt;= n; ++i) distance[i][i] = 0;\n  for (int k = 1; k &lt;= n; ++k) {\n    for (int i = 1; i &lt;= n; ++i) {\n      for (int j = 1; j &lt;= n; ++j) {\n        distance[i][j] = min(distance[i][j], distance[i][k] + graph[k][j]);\n      }\n    }\n  }\n\n  return distance;  // RVO\n}\n</code></pre></p> <ul> <li>network-delay-time</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#bellman-ford","title":"Bellman-Ford","text":"<p>Bellman-Ford is an algorithm that computes shortest paths from a single source node to all of the other nodes in a weighted digraph. It is capable of handling graphs in which some of the edge weights are negtive numbers. <pre><code>int bellman_ford(Graph&amp; graph, int src, int tar) {\n  queue&lt;int&gt; q{src};\n  vector distance(graph.size() + 1, INT_MAX);\n  distance[src] = 0;\n\n  auto relax = [&amp;](auto src, auto tar) -&gt; bool {\n    if (distance[src] + graph[src][tar] &gt; distance[tar]) return false;\n    distance[tar] = distance[src] + graph[src][tar];\n    return true;\n  };\n\n  while (!q.empty()) {\n    int node = q.top(); q.pop();\n    for (auto next : graph[node]) { if (relax(node, next)) q.push(next); }\n  }\n\n  return distance[tar];\n}\n</code></pre></p> <ul> <li>network-delay-time</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#dijkstra","title":"Dijkstra","text":"<p>Dijkstra is an algorithm that computes shortest paths from a single source node to all of the other nodes in a weighted digraph. It is not able to handle graphs in which some of the edge weights are negtive numbers.</p> <p></p> <pre><code>int dijkstra(Graph&amp; graph, int src, int tar) {\n  vector distance(graph.size() + 1, INT_MAX);\n  distance[src] = 0;\n\n  auto gt = [](auto&amp; a, auto&amp; b) { return a.second &gt; b.second; };\n  usint PII = pair&lt;int, int&gt;;\n  priority_queue&lt;PII, vector&lt;PII&gt;, decltype(gt)&gt; q(gt);\n\n  auto relax = [&amp;](auto src, auto tar) -&gt; bool {\n    if (distance[src] + graph[src][tar] &gt; distance[tar]) return false;\n    distance[tar] = distance[src] + graph[src][tar];\n    return true;\n  };\n\n  while (!q.empty()) {\n    auto [node, val] = q.top();\n    q.pop();\n\n    for (auto next : graph[node]) {\n      if (relax(node, next)) q.emplace_back(next, distance[next]);\n    }\n  }\n\n  return distance[tar];\n}\n</code></pre> <ul> <li>network-delay-time</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#k-shortest-pathksp","title":"K Shortest Path(KSP)","text":"<p>The <code>KSP</code> problem is a generalization of the <code>SP</code> problem in a given network. It asks not only about a shortest path but also about next \\(k - 1\\) shortest path (which may be longer than the shortest path). A variant of the problem is the loopless k shortest paths.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#a","title":"A*","text":"<pre><code>double a_star(Graph&lt;int&gt; graph, vector&lt;double&gt;&amp; h, int src,\n                           int tar, int k) {\n  int m = graph.GetVertexSize();\n  vector&lt;double&gt; g(m, 1e7);\n  g[src] = 0;\n\n  auto gt = [](auto&amp; a, auto&amp; b) -&gt; bool { return a.second &gt; b.second; };\n  using PID = pair&lt;int, double&gt;;\n  priority_queue&lt;PID, vector&lt;PID&gt;, decltype(gt)&gt; q(gt);\n  q.emplace(src, h[src]);\n\n  unordered_map&lt;int, int&gt; parent{};\n  int cnt{0};\n\n  while (!q.empty()) {\n    auto [node, f] = q.top();\n    q.pop();\n\n    if (node == tar) cnt++;\n    if (cnt == k) return g[node];\n\n    for (auto&amp; [from, to, cost]: graph.GetEdges(node)) {\n      g[to-&gt;id] = g[node] + cost;\n      q.emplace(to, g[to-&gt;id] + h[to-&gt;id]);\n    }\n  }\n\n  return -1;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#topological-sorting_1","title":"Topological Sorting","text":"<p>A topological sort of a directed graph is a linear ordering of its nodes such that for every directed edge \\((u, v)\\), \\(u\\) comes before \\(v\\) in the ordering.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#bfs","title":"BFS","text":"<pre><code>vector&lt;int&gt; res{};\nbool topo_sort(Graph&amp; graph, vector&lt;int&gt;&amp; in_degree) {\n  queue&lt;int&gt; q{};\n  for (int i = 0; i &lt; in_degree.size(); ++i) {\n    if (in_degree[i] == 0) q.push(i);\n  }\n\n  while (!q.empty()) {\n    int node = q.top();\n    q.pop();\n    res.push(node);\n    for (auto next : graph[node]) {\n      in_degree[next]--;\n      if (in_degree[next] == 0) q.push(next);\n    }\n  }\n\n  return res.size() == in_degree.size();\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#dfs","title":"DFS","text":"<pre><code>vector&lt;int&gt; color{};  // 0: white; 1: gray; 2: black\nvector&lt;int&gt; topo{};\n\nbool dfs(Graph&amp; graph, int node) {\n  color[node] = 1;\n  for (auto next : graph[node]) {\n    if (color[next] == 1) return false;\n    if (color[next] == 0 &amp;&amp; !dfs(graph, next)) return false;\n  }\n  color[node] = 2;\n  topo.push_back(node);\n  return true;\n}\n\nbool topo_sort(Graph&amp; graph) {\n  color.resize(graph.size(), 0);\n  topo.clear();\n\n  for (int i = 0; i &lt; graph.size(); ++i) {\n    if (color[i] == 0 &amp;&amp; !dfs(graph, i)) return false;\n  }\n  reverse(topo.begin(), topo.end());\n  return true;\n}\n</code></pre>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#minimum-spanning-treemst","title":"Minimum Spanning Tree(MST)","text":"<p>A minimum spanning tree(MST) is a subset of the edges of a connected, edge-weighted undirected graph that connects all the nodes together, without any cycles and with the minimum possible total edge weight. That is, it is a spanning tree whose sum of the edge weights is as small as possible. More generallly, any edge-weighted undirected graph(not neccessarily connected) has a minimum spanning forest, which is a union of the minimum spanning trees for its connected components.</p> <p></p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#kruskal","title":"Kruskal","text":"<p>Kruscal's algorithm finds a minimum spanning forest of an undirected edge-weighted graph. If the graph is connected, it finds a minimum spanning tree. For a disconnected graph, a minimum spanning forest is composed of a minimum spanning tree for each connected component. It is a greedy algorithm in graph theory as in each step it adds the next lowest-weight edge that will not form a cycle to the minimum spanning forest.</p> <p></p> <pre><code>class UnionFind {\n public:\n  Union(int n) : size(n - 1, 1), cnt{n} {\n    for (int i = 0; i &lt; n; ++i) parent.push_back(i);\n  }\n\n public:\n  int find(int x) {\n    if (parent[x] != x) parent[x] = find(parent[x]);\n    return parent[x];\n  }\n\n  bool unite(int x, int y) {\n    int xx = find(x);\n    int yy = find(y);\n    if (xx == yy) return false;\n    if (size[xx] &gt; size[yy]) swap(xx, yy);\n    parent[xx] = yy;\n    size[yy] += size[xx];\n    cnt--;\n    return true;\n  }\n\n  int count() const {\n    return cnt;\n  }\n\n private:\n  vector&lt;int&gt; parent{};\n  vector&lt;int&gt; size{};\n  int cnt{0};\n};\n\nstruct Edge{\n  int from{0};\n  int to{0};\n  int cost{0};\n};\n\n// n: node_num\nint kruskal(vector&lt;Edge&gt;&amp; edges, int n) {\n  UnionFind uf{n};\n  sort(edges.begin(), edges.end(), [](auto&amp; a, auto&amp; b) {\n    return a.cost &lt; b.cost;\n  });\n\n  int res{0};\n  for (auto [from, to, cost] : edges) {\n    if (uf.unite(from, to)) res += cost;\n  }\n\n  return uf.count() == 1 ? res : -1;\n}\n</code></pre> <ul> <li>min-cost-to-connect-all-points</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#prim","title":"Prim","text":"<p>Prim algorithm is a greedy algorithm that finds a minimum spanning tree for a weighted undirected graph. This means it finds a subset of the edges that forms a tree that includes every nodes, where the total weight of all the edges in the tree is minimized. The algorithm operates by building this tree one node at a time, from an arbitrary starting node, at each step adding the cheapest possible connection from the tree to another node.</p> <p></p> <ul> <li>min-cost-to-connect-all-points</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#strongly-connected-componentsscc","title":"Strongly Connected Components(SCC)","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#tarjan","title":"Tarjan","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#kosaraju","title":"Kosaraju","text":""},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#euler-graph","title":"Euler Graph","text":"<p>An <code>Eulerian trail</code> or <code>Euler walk</code> in an undirected graph is a path that uses each edge exactly once. If such a path exists, the graph is called <code>traversable</code> or <code>semi-eulerian</code>.</p> <p>An <code>Eulerian cycle</code>, <code>Eulerian circuit</code> or <code>Euler tour</code> in an undirected graph is a cycle that uses each edge exactly once. </p> <p>A graph that has an Eulerian trail but not an Eulerian circuit is called <code>semi-Eulerian</code>.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#properties","title":"Properties","text":"<ul> <li>An undirected graph has Eulerian cycle if and only if every vertex has even degree, and all of its vertices with nonzero degree belong to a single connected component.</li> <li>An undirected graph can be decomposed into edge-disjoint cycles if and only if all of its vertices have even degree. </li> <li>An undirected graph has an Eulerian cycle if and only if exactly zero or two vertices have odd degree.</li> <li>A directed graph has an Eulerian cycle if and only if every vertex has equal in degree and out degree, and all of its vertices with nonzero degree belong to a single strongly connected component.</li> <li>A directed graph has an Eulerian trail if and only if at most one vertex has (out-degree) \u2212 (in-degree) = 1, at most one vertex has (in-degree) \u2212 (out-degree) = 1, every other vertex has equal in-degree and out-degree, and all of its vertices with nonzero degree belong to a single connected component of the underlying undirected graph.</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#fleury","title":"Fleury","text":"<p>Fleury's algorithm is an elegant but inefficient algorithm, we don't use it in general.</p>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#hierholzer","title":"Hierholzer","text":"<p>Hierholzer's algorithm provides a different method for finding Euler cycles that is more efficient than Fleury's algorithm:</p> <ul> <li>Choose any starting vertex v, and follow a trail of edges from that vertex until returning to v. It is not possible to get stuck at any vertex other than v, because the even degree of all vertices ensures that, when the trail enters another vertex w there must be an unused edge leaving w. The tour formed in this way is a closed tour, but may not cover all the vertices and edges of the initial graph.</li> <li>As long as there exists a vertex u that belongs to the current tour but that has adjacent edges not part of the tour, start another trail from u, following unused edges until returning to u, and join the tour formed in this way to the previous tour.</li> <li>Since we assume the original graph is connected, repeating the previous step will exhaust all edges of the graph.</li> </ul> <pre><code>void Hierholzer(Graph&amp; graph, Node node) {\n  while (!graph[node].empty()) {\n    auto next = graph[node].back();\n    graph[node].pop_back();\n    Hierholzer(graph, next);\n  }\n}\n</code></pre> <p>Problems:</p> <ul> <li>Reconstruct Itinerary</li> <li>Cracking the Safe</li> <li>Valid Arrangement of Pairs</li> </ul>"},{"location":"C%2B%2B/%E7%AE%97%E6%B3%95/08_graph/#reference","title":"Reference","text":"<ul> <li>10 Graph Algorithms Visually Explained</li> <li>OI WIKI/Graph</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/","title":"Algorithm Analysis","text":"<p>An <code>algorithm</code> is a clearly specified set of simple instructions to be followed to solve a problem. The important step of algorithm analysis is to determine how much in the way of resource, such as time or spaces, the algorithm requires.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#general-rules","title":"General Rules","text":"<p>Since we are giving the running time in terms of <code>Big-Oh</code>, there are lots of shortcuts that can be taken without affecting the final answer.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#for-loops","title":"For Loops","text":"<p>The running time of a <code>for</code> loop is at most the running time of the statements inside the <code>for</code> loop times the number of iterations.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#nested-loops","title":"Nested Loops","text":"<p>The total running time of a statement inside a group of nested loops is the running time of the statement multiplied by the product of the sizes of all the loops.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#consecutive-statements","title":"Consecutive Statements","text":"<p>Just add them all. The maximum is the one that counts.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#ifelse","title":"If/else","text":"<p>The running of an <code>if/else</code> statement is never more than the running time of the larger of the running time of two statements.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#stratagy-of-analyzing-recursion","title":"Stratagy of Analyzing Recursion","text":"<p>If the recursion is really just a thinly veiled <code>for</code> loop, the analysis is usually trivial.</p> <p>If the recursion is properly used, it is difficult to convert the recursion into a simple loop structure. In this case, the analysis will involve a recurrence relation that needs to be solved.</p> <p>We firstly let \\(T(N)\\) be the running time for current function, and then running time involved with recursion is represented, for example: $$ T(N) = T(N - 1) + T(N - 2) $$ And then we can solve the equation and analysis the approximate running time.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#logarithms-in-the-running-time","title":"Logarithms in the Running Time","text":"<p>An algorithm is \\(O(N)\\) if it take constant time to cut the problem size by a fraction (which is usually \\(\\frac{1}{2}\\)). Otherwise, if constant time is required to merely reduce the problem by a constant amount(such as 1), the algorithm is \\(O(N)\\).</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/algorithm-analysis/#general-input-size-and-maximum-time-complexity","title":"General Input Size and Maximum Time Complexity","text":"Input Size(N) Worst Accepted Algorithm Algorithm Type \\(&lt; 10\\) \\(O(N!)\\) Permutation \\(&lt; 15\\) \\(O(2^N)\\) Combination \\(&lt; 50\\) \\(O(N^4)\\) DP \\(&lt; 200\\) \\(O(N^3)\\) DP \\(&lt; 1000\\) \\(O(N^2)\\) DP \\(&lt; 10^6\\) \\(O(N)\\) or \\(O(N\\log(N))\\) DP, Greedy, Heap, Divide&amp;Conquer \\(&lt; 10^8\\) \\(O(log(N))\\) or \\(O(1)\\) Binary Search, Math"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/","title":"Design Patterns","text":"<p>Design patterns are typical solutions to commonly occurring problems in software design. They are likely pre-made blueprints that you can customize to solve a recurring design problem in your code.</p> <p>You can't just find a pattern and copy it into your problem, as the way you can with off-the-shelf functions or libraries. The pattern is not a specific piece of code, but a general concept for solving a particular problem. You can follow the pattern details and implement a solution that suits the realities of your own problem.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#benefits","title":"Benefits","text":"<p>Why should we spend time learning design patterns?</p> <ul> <li>Design patterns are a toolkit of <code>tried and tested solutions</code> to common problems in software design. Even if you never encounter those problems, knowing patterns is still useful because it teaches you how to solve all sorts of problems using principles of object-oriented design.</li> <li>Design patterns define a common language that you and your teammates can use to communicate more efficiently. You can say \"just use a Singleton for that\", and everyone will understand the idea behind your suggestion. No need to explain what a singleton is if you know the pattern and its name.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#classification-of-patterns","title":"Classification of Patterns","text":"<p>Design patterns differ by their complexity, level of detail and scale of applicability to the entire system being designed. </p> <p>The most basic and low-level patterns are often called <code>idioms</code>. They usually apply only to a single programming language.</p> <p>The most universal and high-level patterns are architectural patterns. Developers can implement these patterns in virtually any language. Unlike other patterns, they can be used to design the architecture of an entire application.</p> <p>In addition, all patterns can be categorized by their <code>intent</code>, we cover three main groups of patterns:</p> <ul> <li><code>Creational patterns</code>, provide object creation mechanisms that increase flexibility and reuse of existing code.</li> <li><code>Structural patterns</code>, explain how to assemble objects and classes into large structures, while keeping the structures flexible and efficient.</li> <li><code>Behavioral patterns</code>, take care of effective communication and the assignment of responsibilities between objects.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#creational-pattern","title":"Creational Pattern","text":"<p>Creational patterns provide various object creation mechanisms, which increase flexibility and reuse of existing code.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#factory-method","title":"Factory Method","text":"<p><code>Factory Method</code> is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclass to alter the type of objects that will be created.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure","title":"Structure","text":"<ul> <li>The <code>Product</code> declares the interface, which is common to all objects that can be produced by the creator and its subclasses.</li> <li><code>Concrete Products</code> are different implementations of the product interface.</li> <li>The <code>Creator</code> class declares the factory method that returns new product objects. It\u2019s important that the return type of this method matches the product interface. You can declare the factory method as abstract to force all subclasses to implement their own versions of the method. As an alternative, the base factory method can return some default product type. Note, despite its name, product creation is not the primary responsibility of the creator. Usually, the creator class already has some core business logic related to products. The factory method helps to decouple this logic from the concrete product classes. Here is an analogy: a large software development company can have a training department for programmers. However, the primary function of the company as a whole is still writing code, not producing programmers.</li> <li><code>Concrete Creators</code> override the base factory method so it returns a different type of product. Note that the factory method doesn\u2019t have to create new instances all the time. It can also return existing objects from a cache, an object pool, or another source.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage","title":"Advantage","text":"<ul> <li>You avoid tight coupling between the creator and the concrete products.</li> <li><code>Single Responsiblity Principle</code>. You can move the product creation code into one place in the program, making the code easier to support.</li> <li><code>Open/Close Principle</code>. You can introduce new types of products into the program without breaking existing client code.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage","title":"Disadvantage","text":"<ul> <li>The code may become more complicated since you need to introduce a lot of new subclasses to implement the pattern. The best case scenario is when you're introducing the pattern into an existing hierarchy of creator classes.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#abstract-factory","title":"Abstract Factory","text":"<p>Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_1","title":"Structure","text":"<ul> <li><code>Abstract Products</code> declare interfaces for a set of distinct but related products which make up a product family.</li> <li><code>Concrete Products</code> are various implementations of abstract products, grouped by variants. Each abstract product (chair/sofa) must be implemented in all given variants (Victorian/Modern).</li> <li>The <code>Abstract Factory</code> interface declares a set of methods for creating each of the abstract products.</li> <li><code>Concrete Factories</code> implement creation methods of the abstract factory. Each concrete factory corresponds to a specific variant of products and creates only those product variants.</li> <li>Although concrete factories instantiate concrete products, signatures of their creation methods must return corresponding abstract products. This way the client code that uses a factory doesn\u2019t get coupled to the specific variant of the product it gets from a factory. The Client can work with any concrete factory/product variant, as long as it communicates with their objects via abstract interfaces.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_1","title":"Advantage","text":"<ul> <li>You can be sure that the products you're getting from a factory are compatible with each other.</li> <li>You avoid tight coupling between the creator and the concrete products.</li> <li><code>Single Responsiblity Principle</code>. You can move the product creation code into one place in the program, making the code easier to support.</li> <li><code>Open/Close Principle</code>. You can introduce new types of products into the program without breaking existing client code.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_1","title":"Disadvantage","text":"<ul> <li>The code may become more complicated since you need to introduce a lot of new subclasses to implement the pattern. The best case scenario is when you're introducing the pattern into an existing hierarchy of creator classes.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#builder","title":"Builder","text":"<p>Builder is a creational design pattern that lets you construct complex objects step by step. The pattern allows you to produce different types and representations of an object using the same construction.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_2","title":"Structure","text":"<ul> <li>The <code>Builder</code> interface declares product construction steps that are common to all types of builders.</li> <li><code>Concrete Builders</code> provide different implementations of the construction steps. Concrete builders may produce products that don\u2019t follow the common interface.</li> <li><code>Products</code> are resulting objects. Products constructed by different builders don\u2019t have to belong to the same class hierarchy or interface.</li> <li>The <code>Director</code> class defines the order in which to call construction steps, so you can create and reuse specific configurations of products.</li> <li>The <code>Client</code> must associate one of the builder objects with the director. Usually, it\u2019s done just once, via parameters of the director\u2019s constructor. Then the director uses that builder object for all further construction. However, there\u2019s an alternative approach for when the client passes the builder object to the production method of the director. In this case, you can use a different builder each time you produce something with the director.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_2","title":"Advantage","text":"<ul> <li>You can construct objects step-by-step, defer construction steps or run steps recursively.</li> <li>You can reuse the same construction code when building various representations of products.</li> <li><code>Single Responsibility Principle</code>. You can isolate complex construction code from the business logic of the product.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_2","title":"Disadvantage","text":"<ul> <li>The overall complexity of the code increases since the pattern requires creating multiple new classes.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#prototype","title":"Prototype","text":"<p>Prototype is a creational design pattern that lets you copy existing objects without making your code dependent on their classes.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_3","title":"Structure","text":"<ul> <li>The <code>Prototype</code> interface declares the cloning methods. In most cases, it\u2019s a single <code>clone</code> method.</li> <li>The <code>Concrete Prototype</code> class implements the cloning method. In addition to copying the original object\u2019s data to the clone, this method may also handle some edge cases of the cloning process related to cloning linked objects, untangling recursive dependencies, etc.</li> <li>The <code>Client</code> can produce a copy of any object that follows the prototype interface.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_3","title":"Advantage","text":"<ul> <li>You can clone objects without coupling to their concrete classes.</li> <li>You can get rid of repeated initialization code in favor of cloning pre-built prototypes.</li> <li>You can produce complex objects more conveniently.</li> <li>You get an alternative to inheritance when dealing with configuration presets for complex objects.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_3","title":"Disadvantage","text":"<ul> <li>Cloning complex objects that have circular references might be very tricky.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#singleton","title":"Singleton","text":"<p>Signleton is a creational design pattern that lets you ensure a class has only one instance, while providing a global access point to this instance.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_4","title":"Structure","text":"<ul> <li>The <code>Singleton</code> class declares the static method <code>getInstance</code> that returns the same instance of its own class. The Singleton's constructor should be hidden from the client code. Calling the <code>getInstance</code> method should be the only way of getting the Singleton object.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_4","title":"Advantage","text":"<ul> <li>You can be sure that a class has only a single instance.</li> <li>You gain a global access point to that instance.</li> <li>The singleton object is initialized only when it's requested for the first time.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_4","title":"Disadvantage","text":"<ul> <li>Violates the <code>Single Responsibility Principle</code>. The pattern solves two problems at the time.</li> <li>The Singleton pattern can mask bad design, for instance, when components of the program know too much about each other.</li> <li>The pattern requires special treatment in a multithreaded environment so that multiple threads won't create a singleton object several times.</li> <li>It may be difficult to unit test the client code of the Singleton because many test frameworks rely on inheritance when producing mock objects. Since the constructor of the singleton class is private and override static methods is impossible in most languages, you will need to think of a creative way to mock the singleton. Or just don't write the tests. Or don't use the Singleton pattern.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structural-pattern","title":"Structural Pattern","text":"<p>Structural patterns explain how to assemble objects and classes into larger structures while keeping these structures flexible and efficient.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#adapter","title":"Adapter","text":"<p>Adapter allows objects with incompatible interfaces to collaborate.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#strucure","title":"Strucure","text":"<ul> <li>The <code>Client</code> is a class that contains the existing business logic of the program.</li> <li>The <code>Client Interface</code> describes a protocol that other classes must follow to be able to collaborate with the client code.</li> <li>The <code>Service</code> is some useful class (usually 3<sup>rd</sup>-party or legacy). The client can\u2019t use this class directly because it has an incompatible interface.</li> <li>The <code>Adapter</code> is a class that's able to work with both the client and the service: it implements the client interface, while wrapping the service object. The adapter receives calls from the client via the adapter interface and translates them into calls to the wrapped service object in a format it can understand.</li> <li>The client code doesn\u2019t get coupled to the concrete adapter class as long as it works with the adapter via the client interface. Thanks to this, you can introduce new types of adapters into the program without breaking the existing client code. This can be useful when the interface of the service class gets changed or replaced: you can just create a new adapter class without changing the client code.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_5","title":"Advantage","text":"<ul> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_5","title":"Disadvantage","text":"<ul> <li>The overall complexity of the code increases becuase you need to introduce a set of new interfaces and classes. Sometimes it's simpler just to change the service class so that it matches the rest of your code.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#bridge","title":"Bridge","text":"<p>Bridge lets you split a large class or a set of closely related classes into two separate hierarchies: abstraction and implementation, which can be developed independently of each other.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_5","title":"Structure","text":"<ul> <li>The <code>Abstraction</code> provides high-level control logic. It relies on the implementation object to do the actual low-level work.</li> <li>The <code>Implementation</code> declares the interface that\u2019s common for all concrete implementations. An abstraction can only communicate with an implementation object via methods that are declared here. The abstraction may list the same methods as the implementation, but usually the abstraction declares some complex behaviors that rely on a wide variety of primitive operations declared by the implementation.</li> <li><code>Concrete Implementations</code> contain platform-specific code.</li> <li><code>Refined Abstractions</code> provide variants of control logic. Like their parent, they work with different implementations via the general implementation interface.</li> <li>Usually, the <code>Client</code> is only interested in working with the abstraction. However, it\u2019s the client\u2019s job to link the abstraction object with one of the implementation objects.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_6","title":"Advantage","text":"<ul> <li>You can create platform-independent classes and apps.</li> <li>The client code works with high-level abstractions. It isn't exposed to the platform details.</li> <li><code>Open/Close Principle</code>.</li> <li><code>Single Responsibility Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_6","title":"Disadvantage","text":"<ul> <li>You might make the code more complicated by applying the pattern to a highly cohesive class.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#composite","title":"Composite","text":"<p>Composite lets you compose objects into tree structures and then work with these structures as if they were individual objects.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_6","title":"Structure","text":"<ul> <li>The <code>Component</code> interface describes operations that are common to both simple and complex elements of the tree.</li> <li>The <code>Leaf</code> is a basic element of a tree that doesn\u2019t have sub-elements. Usually, leaf components end up doing most of the real work, since they don\u2019t have anyone to delegate the work to.</li> <li>The <code>Container</code> (aka composite) is an element that has sub-elements: leaves or other containers. A container doesn\u2019t know the concrete classes of its children. It works with all sub-elements only via the component interface. Upon receiving a request, a container delegates the work to its sub-elements, processes intermediate results and then returns the final result to the client.</li> <li>The <code>Client</code> works with all elements through the component interface. As a result, the client can work in the same way with both simple or complex elements of the tree.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_7","title":"Advantage","text":"<ul> <li>You can work with complex tree structures more conveniently: use polymorphism and recursion to your advantage.</li> <li><code>Open/Close Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_7","title":"Disadvantage","text":"<ul> <li>It might be difficult to provide a common interface for classes whose functionality differs too much. In certain scenarios, you'd need to overgeneralize the component interface, making it harder to comprehend.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#decratorwrapper","title":"Decrator(Wrapper)","text":"<p>Decorator lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behavior.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_7","title":"Structure","text":"<ul> <li>The <code>Component</code> declares the common interface for both wrappers and wrapped objects.</li> <li><code>Concrete Component</code> is a class of objects being wrapped. It defines the basic behavior, which can be altered by decorators.</li> <li>The <code>Base Decorator</code> class has a field for referencing a wrapped object. The field\u2019s type should be declared as the component interface so it can contain both concrete components and decorators. The base decorator delegates all operations to the wrapped object.</li> <li><code>Concrete Decorators</code> define extra behaviors that can be added to components dynamically. Concrete decorators override methods of the base decorator and execute their behavior either before or after calling the parent method.</li> <li>The <code>Client</code> can wrap components in multiple layers of decorators, as long as it works with all objects via the component interface.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_8","title":"Advantage","text":"<ul> <li>You can extand an object's behavior without making a new subclass.</li> <li>You can add or remove resonsibilities from an object at runtime.</li> <li>You can combine several behaviors by wrapping an object into multiple decorates.</li> <li><code>Single Responsibility Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_8","title":"Disadvantage","text":"<ul> <li>It's hard to remove a specific wrapper from the wrapper stack.</li> <li>It's hard to implement a decorator in such a way that its behavior doesn't depend on the order in the decorators stack.</li> <li>The initial configuration code of layers might look pretty ugly.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#facade","title":"Facade","text":"<p>Facade provides a simplified interface to a library, a framework, or any other complex set of classes.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_8","title":"Structure","text":"<ul> <li>The <code>Facade</code> provides convenient access to a particular part of the subsystem\u2019s functionality. It knows where to direct the client\u2019s request and how to operate all the moving parts. </li> <li>An <code>Additional Facade</code> class can be created to prevent polluting a single facade with unrelated features that might make it yet another complex structure. Additional facades can be used by both clients and other facades.</li> <li>The <code>Complex Subsystem</code> consists of dozens of various objects. To make them all do something meaningful, you have to dive deep into the subsystem\u2019s implementation details, such as initializing objects in the correct order and supplying them with data in the proper format. Subsystem classes aren\u2019t aware of the facade\u2019s existence. They operate within the system and work with each other directly.</li> <li>The <code>Client</code> uses the facade instead of calling the subsystem objects directly.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_9","title":"Advantage","text":"<ul> <li>You can isolate your code from the complexity of a subsystem.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_9","title":"Disadvantage","text":"<ul> <li>A facade can become a god object coupled to all classes of an app.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#flyweight","title":"Flyweight","text":"<p>Flyweight lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects instead of keeping all of the data in each objects.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_9","title":"Structure","text":"<ul> <li>The Flyweight pattern is merely an optimization. Before applying it, make sure your program does have the RAM consumption problem related to having a massive number of similar objects in memory at the same time. Make sure that this problem can\u2019t be solved in any other meaningful way.</li> <li>The <code>Flyweight</code> class contains the portion of the original object\u2019s state that can be shared between multiple objects. The same flyweight object can be used in many different contexts. The state stored inside a flyweight is called intrinsic. The state passed to the flyweight\u2019s methods is called extrinsic.</li> <li>The <code>Context class</code> contains the extrinsic state, unique across all original objects. When a context is paired with one of the flyweight objects, it represents the full state of the original object.</li> <li>Usually, the behavior of the original object remains in the flyweight class. In this case, whoever calls a flyweight\u2019s method must also pass appropriate bits of the extrinsic state into the method\u2019s parameters. On the other hand, the behavior can be moved to the context class, which would use the linked flyweight merely as a data object.</li> <li>The <code>Client</code> calculates or stores the extrinsic state of flyweights. From the client\u2019s perspective, a flyweight is a template object which can be configured at runtime by passing some contextual data into parameters of its methods.</li> <li>The <code>Flyweight Factory</code> manages a pool of existing flyweights. With the factory, clients don\u2019t create flyweights directly. Instead, they call the factory, passing it bits of the intrinsic state of the desired flyweight. The factory looks over previously created flyweights and either returns an existing one that matches search criteria or creates a new one if nothing is found.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_10","title":"Advantage","text":"<ul> <li>You can save lots of RAM, assuming your program has tons of similar objects.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_10","title":"Disadvantage","text":"<ul> <li>You might be trading RAM over CPU cycles when some of the context data needs to be recalculated each time somebody calls a flyweight method.</li> <li>The code becomes more complicated. New team members will always be wondering why the state of an entity was separated in such a way.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#proxy","title":"Proxy","text":"<p>Proxy lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something either before or after the request gets through to the original object.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_10","title":"Structure","text":"<ul> <li>The <code>Service Interface</code> declares the interface of the Service. The proxy must follow this interface to be able to disguise itself as a service object.</li> <li>The <code>Service</code> is a class that provides some useful business logic.</li> <li>The <code>Proxy</code> class has a reference field that points to a service object. After the proxy finishes its processing (e.g., lazy initialization, logging, access control, caching, etc.), it passes the request to the service object. Usually, proxies manage the full lifecycle of their service objects.</li> <li>The <code>Client</code> should work with both services and proxies via the same interface. This way you can pass a proxy into any code that expects a service object.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_11","title":"Advantage","text":"<ul> <li>You can control the service object without clients knowing about it.</li> <li>You can manage the lifecycle of the service object when clients don't care about it.</li> <li>The proxy works even if the service object isn't ready or is not available.</li> <li><code>Open/Close Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_11","title":"Disadvantage","text":"<ul> <li>The code may become more complicated since you need to introduce a lot of new classes.</li> <li>The response from the service might get delayed.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#behavioral-pattern","title":"Behavioral Pattern","text":""},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#chain-of-responsibility","title":"Chain of Responsibility","text":"<p>Chain of Responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_11","title":"Structure","text":"<ul> <li>The <code>Handler</code> declares the interface, common for all concrete handlers. It usually contains just a single method for handling requests, but sometimes it may also have another method for setting the next handler on the chain.</li> <li>The <code>Base Handler</code> is an optional class where you can put the boilerplate code that\u2019s common to all handler classes. Usually, this class defines a field for storing a reference to the next handler. The clients can build a chain by passing a handler to the constructor or setter of the previous handler. The class may also implement the default handling behavior: it can pass execution to the next handler after checking for its existence.</li> <li><code>Concrete Handlers</code> contain the actual code for processing requests. Upon receiving a request, each handler must decide whether to process it and, additionally, whether to pass it along the chain. Handlers are usually self-contained and immutable, accepting all necessary data just once via the constructor.</li> <li>The <code>Client</code> may compose chains just once or compose them dynamically, depending on the application\u2019s logic. Note that a request can be sent to any handler in the chain\u2014it doesn\u2019t have to be the first one.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_12","title":"Advantage","text":"<ul> <li>You can control the order of request handling.</li> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_12","title":"Disadvantage","text":"<ul> <li>Some requets may end up unhandled.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#command","title":"Command","text":"<p>Command turns a request into a stand-alone object that contains all information about the request. This transformation lets you parameterize methods with different requests. This transformation lets you parameterize methods with different requests, delay or queue a request's execution, and support undoable operation.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_12","title":"Structure","text":"<ul> <li>The <code>Sender</code> class (aka invoker) is responsible for initiating requests. This class must have a field for storing a reference to a command object. The sender triggers that command instead of sending the request directly to the receiver. Note that the sender isn\u2019t responsible for creating the command object. Usually, it gets a pre-created command from the client via the constructor.</li> <li>The <code>Command</code> interface usually declares just a single method for executing the command.</li> <li><code>Concrete Commands</code> implement various kinds of requests. A concrete command isn\u2019t supposed to perform the work on its own, but rather to pass the call to one of the business logic objects. However, for the sake of simplifying the code, these classes can be merged. Parameters required to execute a method on a receiving object can be declared as fields in the concrete command. You can make command objects immutable by only allowing the initialization of these fields via the constructor.</li> <li>The <code>Receiver</code> class contains some business logic. Almost any object may act as a receiver. Most commands only handle the details of how a request is passed to the receiver, while the receiver itself does the actual work.</li> <li>The <code>Client</code> creates and configures concrete command objects. The client must pass all of the request parameters, including a receiver instance, into the command\u2019s constructor. After that, the resulting command may be associated with one or multiple senders.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_13","title":"Advantage","text":"<ul> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> <li>You can implement undo/redo.</li> <li>You can implement deferred execution of operation.</li> <li>You can assemble a set of simple commands into a complex one.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_13","title":"Disadvantage","text":"<ul> <li>The code may become more complicated since you're introducing a whole new layer between senders and receivers.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#iterator","title":"Iterator","text":"<p>Iterator lets you traverse elements of a collection without exposing its underlying representation(list, stack, tree, etc.).</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_13","title":"Structure","text":"<ul> <li>The <code>Iterator</code> interface declares the operations required for traversing a collection: fetching the next element, retrieving the current position, restarting iteration, etc.</li> <li><code>Concrete Iterators</code> implement specific algorithms for traversing a collection. The iterator object should track the traversal progress on its own. This allows several iterators to traverse the same collection independently of each other.</li> <li>The <code>Collection</code> interface declares one or multiple methods for getting iterators compatible with the collection. Note that the return type of the methods must be declared as the iterator interface so that the concrete collections can return various kinds of iterators.</li> <li><code>Concrete Collections</code> return new instances of a particular concrete iterator class each time the client requests one. You might be wondering, where\u2019s the rest of the collection\u2019s code? Don\u2019t worry, it should be in the same class. It\u2019s just that these details aren\u2019t crucial to the actual pattern, so we\u2019re omitting them.</li> <li>The <code>Client</code> works with both collections and iterators via their interfaces. This way the client isn\u2019t coupled to concrete classes, allowing you to use various collections and iterators with the same client code. Typically, clients don\u2019t create iterators on their own, but instead get them from collections. Yet, in certain cases, the client can create one directly; for example, when the client defines its own special iterator.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_14","title":"Advantage","text":"<ul> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> <li>You can iterate over the same collection in parallel because each iterator object contains its own iteration state.</li> <li>For the same reason, you can delay an iteration and continue it when needed.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_14","title":"Disadvantage","text":"<ul> <li>Applying the pattern can be overkill if your app only works with simple collections.</li> <li>Using an iterator may be less efficient than going through elements of some specialized collections directly.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#mediator","title":"Mediator","text":"<p>Mediator lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_14","title":"Structure","text":"<ul> <li><code>Components</code> are various classes that contain some business logic. Each component has a reference to a mediator, declared with the type of the mediator interface. The component isn\u2019t aware of the actual class of the mediator, so you can reuse the component in other programs by linking it to a different mediator.</li> <li>The <code>Mediator</code> interface declares methods of communication with components, which usually include just a single notification method. Components may pass any context as arguments of this method, including their own objects, but only in such a way that no coupling occurs between a receiving component and the sender\u2019s class.</li> <li><code>Concrete Mediators</code> encapsulate relations between various components. Concrete mediators often keep references to all components they manage and sometimes even manage their lifecycle.</li> <li><code>Components</code> must not be aware of other components. If something important happens within or to a component, it must only notify the mediator. When the mediator receives the notification, it can easily identify the sender, which might be just enough to decide what component should be triggered in return. From a component\u2019s perspective, it all looks like a total black box. The sender doesn\u2019t know who\u2019ll end up handling its request, and the receiver doesn\u2019t know who sent the request in the first place.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_15","title":"Advantage","text":"<ul> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> <li>You can reduce coupling between various components of a program.</li> <li>You can reuse individual components more easily.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_15","title":"Disadvantage","text":"<ul> <li>Over time a mediator can evolve into a <code>God Object</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#memento","title":"Memento","text":"<p>Memento lets you save and restore the previous state of an object without revealing the detail of its implementation.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_15","title":"Structure","text":"<ul> <li>The <code>Originator</code> class can produce snapshots of its own state, as well as restore its state from snapshots when needed.</li> <li>The <code>Memento</code> is a value object that acts as a snapshot of the originator\u2019s state. It\u2019s a common practice to make the memento immutable and pass it the data only once, via the constructor.</li> <li>The <code>Caretaker</code> knows not only \u201cwhen\u201d and \u201cwhy\u201d to capture the originator\u2019s state, but also when the state should be restored. A caretaker can keep track of the originator\u2019s history by storing a stack of mementos. When the originator has to travel back in history, the caretaker fetches the topmost memento from the stack and passes it to the originator\u2019s restoration method.</li> <li>In this implementation, the memento class is nested inside the originator. This lets the originator access the fields and methods of the memento, even though they\u2019re declared private. On the other hand, the caretaker has very limited access to the memento\u2019s fields and methods, which lets it store mementos in a stack but not tamper with their state.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_16","title":"Advantage","text":"<ul> <li>You can reduce snapshots of the object's state without violating its encapsulation.</li> <li>You can simplify the originator's code by letting the caretaker maintain the history of the originator's state.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_16","title":"Disadvantage","text":"<ul> <li>The app might consume lots of RAM if clients create mementos too often.</li> <li>Catetaker's should track the originator's lifecycle to be able to destroy obsolete mementos.</li> <li>Most dynamic programming languages, such as PHP, Python, and JavaScript, can't guarantee that the state within the memento stays untouched.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#observer","title":"Observer","text":"<p>Observer lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they're observing. </p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_16","title":"Structure","text":"<ul> <li>The <code>Publisher</code> issues events of interest to other objects. These events occur when the publisher changes its state or executes some behaviors. Publishers contain a subscription infrastructure that lets new subscribers join and current subscribers leave the list.</li> <li>When a new event happens, the publisher goes over the subscription list and calls the notification method declared in the subscriber interface on each subscriber object.</li> <li>The <code>Subscriber</code> interface declares the notification interface. In most cases, it consists of a single <code>update</code> method. The method may have several parameters that let the publisher pass some event details along with the update.</li> <li><code>Concrete Subscribers</code> perform some actions in response to notifications issued by the publisher. All of these classes must implement the same interface so the publisher isn\u2019t coupled to concrete classes.</li> <li>Usually, subscribers need some contextual information to handle the update correctly. For this reason, publishers often pass some context data as arguments of the notification method. The publisher can pass itself as an argument, letting subscriber fetch any required data directly.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_17","title":"Advantage","text":"<ul> <li><code>Open/Close Principle</code>.</li> <li>You can establish relations between objects at run time.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_17","title":"Disadvantage","text":"<ul> <li>Subscribers are notified in random order.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#state","title":"State","text":"<p>State lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_17","title":"Structure","text":"<ul> <li><code>Context</code> stores a reference to one of the concrete state objects and delegates to it all state-specific work. The context communicates with the state object via the state interface. The context exposes a setter for passing it a new state object.</li> <li>The <code>State</code> interface declares the state-specific methods. These methods should make sense for all concrete states because you don\u2019t want some of your states to have useless methods that will never be called.</li> <li><code>Concrete States</code> provide their own implementations for the state-specific methods. To avoid duplication of similar code across multiple states, you may provide intermediate abstract classes that encapsulate some common behavior. State objects may store a backreference to the context object. Through this reference, the state can fetch any required info from the context object, as well as initiate state transitions.</li> <li>Both context and concrete states can set the next state of the context and perform the actual state transition by replacing the state object linked to the context.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_18","title":"Advantage","text":"<ul> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> <li>Simplify the code of the context by eliminating the code of the context by eliminating bulky state machine conditionals.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_18","title":"Disadvantage","text":"<ul> <li>Applying the pattern can be overkill if a state mechine has only a few states or rarely changes.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#strategy","title":"Strategy","text":"<p>Strategy lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_18","title":"Structure","text":"<ul> <li>The <code>Context</code> maintains a reference to one of the concrete strategies and communicates with this object only via the strategy interface.</li> <li>The <code>Strategy</code> interface is common to all concrete strategies. It declares a method the context uses to execute a strategy.</li> <li><code>Concrete Strategies</code> implement different variations of an algorithm the context uses.</li> <li>The context calls the execution method on the linked strategy object each time it needs to run the algorithm. The context doesn\u2019t know what type of strategy it works with or how the algorithm is executed.</li> <li>The <code>Client</code> creates a specific strategy object and passes it to the context. The context exposes a setter which lets clients replace the strategy associated with the context at runtime.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_19","title":"Advantage","text":"<ul> <li>You can swap algorithms used inside an object at runtime.</li> <li>You can isolate the implementation details of an algorithm from the code that uses it.</li> <li>You can replace inheritance with composition.</li> <li><code>Open/Close Principle</code>.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_19","title":"Disadvantage","text":"<ul> <li>If you only have a couple of algorithms and they rarely change, there's no real reason to overcomplicate the program with new classes and interfaces that come along with the pattern.</li> <li>Clients must be aware of the differences between strategies to be able to select a proper one.</li> <li>A lot of modern programming languages have functional type support that lets you implement different versions of an algorithm inside a set of anonymous functions. Then you could use these functions exactly as you'd have used the strategy objects, but without bloating your code with extra classes and interfaces.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#template-method","title":"Template Method","text":"<p>Template Method defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_19","title":"Structure","text":"<ul> <li>The <code>Abstract Class</code> declares methods that act as steps of an algorithm, as well as the actual template method which calls these methods in a specific order. The steps may either be declared <code>abstract</code> or have some default implementation.</li> <li><code>Concrete Classes</code> can override all of the steps, but not the template method itself.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_20","title":"Advantage","text":"<ul> <li>You can let clients override only certain parts of a large algorithm, making them less affected by changes that happen to other parts of the algorithm.</li> <li>You can pull the duplicate code into a superclass.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_20","title":"Disadvantage","text":"<ul> <li>Some clients may be limited by the provided skeleton of an algorithm.</li> <li>You might violate the <code>Liskov Substitution Principle</code> by supperessing a default step implementation via a super calss.</li> <li>Template methods tend to be harder to maintain the more steps they have.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#visitor","title":"Visitor","text":"<p>Visitor lets you separate algorithms from the objects on which they operate.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#structure_20","title":"Structure","text":"<ul> <li>The <code>Visitor</code> interface declares a set of visiting methods that can take concrete elements of an object structure as arguments. These methods may have the same names if the program is written in a language that supports overloading, but the type of their parameters must be different.</li> <li>Each <code>Concrete Visitor</code> implements several versions of the same behaviors, tailored for different concrete element classes.</li> <li>The <code>Element</code> interface declares a method for \u201caccepting\u201d visitors. This method should have one parameter declared with the type of the visitor interface.</li> <li>Each <code>Concrete Element</code> must implement the acceptance method. The purpose of this method is to redirect the call to the proper visitor\u2019s method corresponding to the current element class. Be aware that even if a base element class implements this method, all subclasses must still override this method in their own classes and call the appropriate method on the visitor object.</li> <li>The <code>Client</code> usually represents a collection or some other complex object (for example, a Composite tree). Usually, clients aren\u2019t aware of all the concrete element classes because they work with objects from that collection via some abstract interface.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#advantage_21","title":"Advantage","text":"<ul> <li><code>Single Responsibility Principle</code>.</li> <li><code>Open/Close Principle</code>.</li> <li>A visitor object can accumulate some useful information while working with various objects. This might be hady when you want to traverse some complex object structure, such as an object tree, and apply the visitor to each object of this structure.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#disadvantage_21","title":"Disadvantage","text":"<ul> <li>You need to update all visitors each time a class gets added or removed from the element hierarchy.</li> <li>Visitors might lack the necessary access to the private fields and methods of the elements that they're supposed to work with.</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/design_patterns/#reference","title":"Reference","text":"<ul> <li>Design Patterns</li> </ul>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/","title":"The 10 Object-Oriented-Principles(OOP)","text":"<p>The Object-Oriented Design Principles are the core of OOP programming, and we programmer should pay more attention to them. It's important to learn the basics of Object-Oriented Programming like <code>Abstraction</code>, <code>Encapsulation</code>, <code>Polymorphism</code> and <code>Inheritance</code>, and meanwhile, it's equally important to know object-oriented design principles.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#1-dont-repeat-yourselfdry","title":"1. Don't Repeat Yourself(DRY)","text":"<p>This means don't write duplicated code, you can use <code>abstraction</code> to abstract common things in one place. If you have a block of code in more than two places, make it a separate method; if you use a hard-coded value more than one time, make them <code>public constant</code>. The benefit of this principle is in maintenance.</p> <p>It's important not to abuse it, duplication is not for code, but for functionality.</p> <p>Just don't combine any code that looks alike but not related.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#2-encapsulate-what-changes","title":"2. Encapsulate What Changes","text":"<p>There is only one thing which is constant in software field and that is \"Change\". So encapsulate the code you expect or suspect to be changed in the future.</p> <p>The benefit of this principle is that it's easy to test and maintain proper encapsulated code.</p> <p>The <code>Factory Design Pattern</code> is one example of this principle which encapsulates object creation code and provides flexibility to introduce a new product later with no impact on existing code.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#3-open-close-principleocp","title":"3. Open Close Principle(OCP)","text":"<p>Classes, methods or functions should be <code>open</code> for extension(new functionality) and <code>close</code> for modification. This prevents someone from changing already tried and tested code.</p> <p>The benefit of this principle is that tested code will not be touched so that they won't break.</p> <p>If you just add a new function, your code should be tested and not affect the existing code, that's the goal of this principle.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#4-single-responsibilty-principlesrp","title":"4. Single Responsibilty Principle(SRP)","text":"<p>As for this pinciple, there should not be more than one reason for a class to change, or a class should always handle single functionality.</p> <p>The benefit is that it reduces coupling between the individual component of the software and code.</p> <p>For example, if you put more than one functionality in one class, this will introduce coupling between two functionality. And enven if you change one functionality there is a chance you broke coupled functionality, which requires another round of testing to avoid any surprise on the production environment.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#5-dependency-injection-or-inversion-principle","title":"5. Dependency Injection or Inversion Principle","text":"<p>The beauty of this design principle is that any class which is injected by framework is easy to test with the mock object ans easier to maintain because object creation code is centralized in the framework and client code is not littered with that.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#6-favor-composition-over-inheritance","title":"6. Favor Composition over Inheritance","text":"<p>There are two general ways to reuse the code you have already written: <code>inheritance</code> and <code>composition</code>, both have their own advantage and disadvantage. But, in general, you should always favor composition over inheritance, if possible.</p> <p>Composition is the lot more flexible than inheritance.</p> <p>Composition alllows changing the behavior of a class at run-time by setting property during run-time and by using <code>interface</code> to compose a class we use <code>polymorphism</code> which provides flexibility to replace with better implementation any time.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#7-liskov-substitution-principlelsp","title":"7. Liskov Substitution Principle(LSP)","text":"<p>Subtypes must be substitutable for supertype, so that methods or functions which use superclass can work with the object of subclass without any issue.</p> <p>If a class has more functionality than subcalss, subclass might not support some of the functionality, this does violate LSP.</p> <p>In order to follow LSP, derived class or subclass must enhance functionality, but not reduce them.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#8-interface-segregation-principleisp","title":"8. Interface Segregation Principle(ISP)","text":"<p>A client should not implement an interface if it doesn't use that. This happens mostly when one interface contains more than one functionality, and the client only need one functionality.</p> <p>The benefit is, single functionality means less method to implement</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#9-programming-for-interface-not-implementation","title":"9. Programming for Interface not Implementation","text":"<p>A programmer should always program for the <code>interface</code> and not for <code>implementation</code>, this will lead to flexible code which can work with any new implementation of the interface.</p>"},{"location":"C%2B%2B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/oop10/#10-delegation-principle","title":"10. Delegation Principle","text":"<p>Don't do all stuff by yourself, delegate it to the respective class.</p> <p>The key benefit of this principle is no duplication of code and pretty easy to modify behavior.</p>"},{"location":"ROS/ROS-neotic%E4%B8%AD%E4%BD%BF%E7%94%A8conda%E7%8E%AF%E5%A2%83%E7%9A%84%E6%96%B9%E6%B3%95/","title":"ROS neotic\u4e2d\u4f7f\u7528conda\u73af\u5883\u7684\u65b9\u6cd5","text":"<ol> <li> <p>\u5728ROS\u4e2d\uff0c\u5982\u679c\u6ca1\u6709conda\u73af\u5883\uff0c\u4e00\u822c\u8c03\u7528\u7684\u662fusr/bin/python</p> </li> <li> <p>\u5982\u679c\u60f3\u5728ROS\u4e2d\u4f7f\u7528conda\uff0c\u4e00\u822c\u8981\u5148\u4e0b\u8f7dROS\u518d\u4e0b\u8f7dconda\uff0c\u7136\u540e\u5728~/.bashrc\u4e2dconda deactivate\u3002\u5728\u4e0b\u8f7dconda\u4e4b\u540e\uff0c\u7ec8\u7aef\u4e2dwhich python\u7684\u4f4d\u7f6e\u4f1a\u968f\u7740conda\u7684\u865a\u62df\u73af\u5883\u800c\u53d1\u751f\u6539\u53d8\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> </li> </ol> <p></p> <ol> <li>ros\u7f16\u8bd1\u7684\u65f6\u5019\u53ef\u4ee5\u6307\u5b9apython\u89e3\u91ca\u5668\u7684\u8def\u5f84catkin_make DPYTHON_EXECUTABLE=/home/zhanjun/anaconda3/envs/carla/bin/python3</li> </ol> <p>\uff08\u4e00\u822c\u7ec8\u7aef\u4e2d\u5982\u679c\u6fc0\u6d3b\u4e86conda\u73af\u5883\uff0ccatkin\u4f1a\u81ea\u52a8\u8bc6\u522b\uff0c\u7136\u540e\u7528\u5f53\u524d\u865a\u62df\u73af\u5883\u7684\u89e3\u91ca\u5668,\u5982\u4e0b\u56fe\u6240\u793a\uff09</p> <p>base\u73af\u5883\u4e0b\uff0cPYTHON_EXECUTABLE\u662fbase\u7684python </p> <p>\u6ca1\u6709conda\u73af\u5883\u4e0b\uff0cPYTHON_EXECUTABLE\u662fubuntu\u81ea\u5df1\u7684python </p> <p>python\u6587\u4ef6\u4e2d\u7684\u811a\u672c#~ /usr/bin/env python\u4f1a\u88ab\u8986\u76d6</p> <p></p> <ol> <li>conda\u4e2d\u8981\u4f7f\u7528ros\u5982\u679c\u62a5\u627e\u4e0d\u5230python3-empy\u7684\u9519\u8bef\uff08\u4e00\u822cubuntu\u81ea\u5e26\u7684/usr/bin/python3\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e00\u822c\u662fconda\u865a\u62df\u73af\u5883\u5c11\u5305\uff09\uff0c\u6267\u884c\u4e0b\u8fb9\u7684\u5b89\u88c5conda install -c conda-forge empy\uff08\u6216\u8005 pip install empy\uff0c\u4f46\u662f\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\uff0c\u4e0d\u80fd\u91cd\u590d\u5b89\u88c5\uff09\u3002</li> </ol> <p>\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u7684conda\u73af\u5883\uff0c\u6700\u597dpython\u7248\u672c\u6307\u5b9a\u4e3a3.7\uff0c\u7136\u540e\u8fd8\u9700\u8981pip install rospkg\uff0cpip install catkin-tools</p> <p>\u5982\u679c\u62a5\u9519\u627e\u4e0d\u5230catkin_make ,pip install catkin_make</p> <p></p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/","title":"ROS1\u6559\u7a0b","text":"<p>\u8d75\u865a\u5de6\u6559\u7a0b</p> <ul> <li>ros1\u81ea\u5e26\u4e86\u4e00\u4e9b\u5de5\u5177\u6bd4\u5982catkin_create_pkg\u3001catkin_make</li> <li>\u540c\u65f6\u4e5f\u53ef\u4ee5\u7528catkin tools\u7684\u4e00\u4e9b\u5de5\u5177\u5b8c\u6210\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982 catkin create pkg\u3001catkin build</li> </ul>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#1-ros1","title":"1 ROS1\u7684\u529f\u80fd\u5305\u521b\u5efa","text":"<p>\u540c\u6837\u9700\u8981ros_ws/src\u6587\u4ef6\u5939\uff0c\u5728src\u4e0b\u521b\u5efa\u529f\u80fd\u5305</p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#11roscatkin_create_pkg","title":"1.1\u7528ros\u81ea\u5e26\u7684catkin_create_pkg","text":"<p>\u547d\u4ee4\uff1a <pre><code># catkin_create_pkg &lt;package_name&gt; [depend1] [depend2] [depend3]\ncatkin_create_pkg beginner_tutorials std_msgs rospy roscpp\n</code></pre></p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#12catkin_tools","title":"1.2\u7528catkin_tools","text":"<p>catkin create pkg \u547d\u4ee4\uff1a <pre><code># catkin_create_pkg &lt;package_name&gt; [depend1] [depend2] [depend3]\ncatkin create pkg beginner_tutorials --catkin-deps std_msgs rospy roscpp\n</code></pre></p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#2","title":"2 \u529f\u80fd\u5305\u7684\u67e5\u770b","text":"<p>\u547d\u4ee4\uff1a <pre><code>rospkg list\n</code></pre></p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#3","title":"3 \u529f\u80fd\u5305\u7684\u6784\u5efa","text":""},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#31catkin_make","title":"3.1\u4f7f\u7528catkin_make","text":"<pre><code>catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=Yes -DCMAKE_BUILD_TYPE=Debug/Release\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#32catkin_tools","title":"3.2\u4f7f\u7528catkin_tools","text":"<p>\u5b89\u88c5\uff1a <pre><code>sudo apt-get install python-catkin-tools\n</code></pre> \u7f16\u8bd1\u6240\u6709\u8282\u70b9(\u53ea\u8981\u5728\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u4efb\u4f55\u4e00\u7ea7\u76ee\u5f55\u90fd\u80fd\u7528\uff0c\u5b83\u4f1a\u81ea\u52a8\u5411\u4e0a\u641c\u7d22\u5de5\u4f5c\u7a7a\u95f4)\uff1a <pre><code>catkin config --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug\ncatkin build\n</code></pre></p> <p>\u5355\u72ec\u7f16\u8bd1\u4e00\u4e2a\u5305 <pre><code>catkin build package_name\n</code></pre></p> <p>\u6e05\u7406\u6240\u6709\u5305\u7684\u7f16\u8bd1 <pre><code>catkin clean\n</code></pre></p> <p>\u6e05\u9664\u67d0\u4e00\u4e2a\u5305\u7684\u7f16\u8bd1 <pre><code>catkin clean package_name\n</code></pre></p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#4-cppros","title":"4 Cpp\u7f16\u5199ros\u8282\u70b9","text":""},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#1","title":"1.\u53d1\u5e03\u65b9","text":"<pre><code>/*\n    \u9700\u6c42: \u5b9e\u73b0\u57fa\u672c\u7684\u8bdd\u9898\u901a\u4fe1\uff0c\u4e00\u65b9\u53d1\u5e03\u6570\u636e\uff0c\u4e00\u65b9\u63a5\u6536\u6570\u636e\uff0c\n         \u5b9e\u73b0\u7684\u5173\u952e\u70b9:\n         1.\u53d1\u9001\u65b9\n         2.\u63a5\u6536\u65b9\n         3.\u6570\u636e(\u6b64\u5904\u4e3a\u666e\u901a\u6587\u672c)\n\n         PS: \u4e8c\u8005\u9700\u8981\u8bbe\u7f6e\u76f8\u540c\u7684\u8bdd\u9898\n\n\n    \u6d88\u606f\u53d1\u5e03\u65b9:\n        \u5faa\u73af\u53d1\u5e03\u4fe1\u606f:HelloWorld \u540e\u7f00\u6570\u5b57\u7f16\u53f7\n\n    \u5b9e\u73b0\u6d41\u7a0b:\n        1.\u5305\u542b\u5934\u6587\u4ef6 \n        2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n        3.\u5b9e\u4f8b\u5316 ROS \u53e5\u67c4\n        4.\u5b9e\u4f8b\u5316 \u53d1\u5e03\u8005 \u5bf9\u8c61\n        5.\u7ec4\u7ec7\u88ab\u53d1\u5e03\u7684\u6570\u636e\uff0c\u5e76\u7f16\u5199\u903b\u8f91\u53d1\u5e03\u6570\u636e\n\n*/\n// 1.\u5305\u542b\u5934\u6587\u4ef6 \n#include \"ros/ros.h\"\n#include \"std_msgs/String.h\" //\u666e\u901a\u6587\u672c\u7c7b\u578b\u7684\u6d88\u606f\n#include &lt;sstream&gt;\n\nint main(int argc, char  *argv[])\n{   \n    //\u8bbe\u7f6e\u7f16\u7801\n    setlocale(LC_ALL,\"\");\n\n    //2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n    // \u53c2\u65701\u548c\u53c2\u65702 \u540e\u671f\u4e3a\u8282\u70b9\u4f20\u503c\u4f1a\u4f7f\u7528\n    // \u53c2\u65703 \u662f\u8282\u70b9\u540d\u79f0\uff0c\u662f\u4e00\u4e2a\u6807\u8bc6\u7b26\uff0c\u9700\u8981\u4fdd\u8bc1\u8fd0\u884c\u540e\uff0c\u5728 ROS \u7f51\u7edc\u62d3\u6251\u4e2d\u552f\u4e00\n    ros::init(argc,argv,\"talker\");\n    //3.\u5b9e\u4f8b\u5316 ROS \u53e5\u67c4\n    ros::NodeHandle nh;//\u8be5\u7c7b\u5c01\u88c5\u4e86 ROS \u4e2d\u7684\u4e00\u4e9b\u5e38\u7528\u529f\u80fd\n\n    //4.\u5b9e\u4f8b\u5316 \u53d1\u5e03\u8005 \u5bf9\u8c61\n    //\u6cdb\u578b: \u53d1\u5e03\u7684\u6d88\u606f\u7c7b\u578b\n    //\u53c2\u65701: \u8981\u53d1\u5e03\u5230\u7684\u8bdd\u9898\n    //\u53c2\u65702: \u961f\u5217\u4e2d\u6700\u5927\u4fdd\u5b58\u7684\u6d88\u606f\u6570\uff0c\u8d85\u51fa\u6b64\u9600\u503c\u65f6\uff0c\u5148\u8fdb\u7684\u5148\u9500\u6bc1(\u65f6\u95f4\u65e9\u7684\u5148\u9500\u6bc1)\n    ros::Publisher pub = nh.advertise&lt;std_msgs::String&gt;(\"chatter\",10);\n\n    //5.\u7ec4\u7ec7\u88ab\u53d1\u5e03\u7684\u6570\u636e\uff0c\u5e76\u7f16\u5199\u903b\u8f91\u53d1\u5e03\u6570\u636e\n    //\u6570\u636e(\u52a8\u6001\u7ec4\u7ec7)\n    std_msgs::String msg;\n    // msg.data = \"\u4f60\u597d\u554a\uff01\uff01\uff01\";\n    std::string msg_front = \"Hello \u4f60\u597d\uff01\"; //\u6d88\u606f\u524d\u7f00\n    int count = 0; //\u6d88\u606f\u8ba1\u6570\u5668\n\n    //\u903b\u8f91(\u4e00\u79d210\u6b21)\n    ros::Rate r(1);\n\n    //\u8282\u70b9\u4e0d\u6b7b\n    while (ros::ok())\n    {\n        //\u4f7f\u7528 stringstream \u62fc\u63a5\u5b57\u7b26\u4e32\u4e0e\u7f16\u53f7\n        std::stringstream ss;\n        ss &lt;&lt; msg_front &lt;&lt; count;\n        msg.data = ss.str();\n        //\u53d1\u5e03\u6d88\u606f\n        pub.publish(msg);\n        //\u52a0\u5165\u8c03\u8bd5\uff0c\u6253\u5370\u53d1\u9001\u7684\u6d88\u606f\n        ROS_INFO(\"\u53d1\u9001\u7684\u6d88\u606f:%s\",msg.data.c_str());\n\n        //\u6839\u636e\u524d\u9762\u5236\u5b9a\u7684\u53d1\u9001\u8d2b\u9891\u7387\u81ea\u52a8\u4f11\u7720 \u4f11\u7720\u65f6\u95f4 = 1/\u9891\u7387\uff1b\n        r.sleep();\n        count++;//\u5faa\u73af\u7ed3\u675f\u524d\uff0c\u8ba9 count \u81ea\u589e\n        //\u6682\u65e0\u5e94\u7528\n        ros::spinOnce();\n    }\n\n\n    return 0;\n}\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#2_1","title":"2.\u8ba2\u9605\u65b9","text":"<pre><code>/*\n    \u9700\u6c42: \u5b9e\u73b0\u57fa\u672c\u7684\u8bdd\u9898\u901a\u4fe1\uff0c\u4e00\u65b9\u53d1\u5e03\u6570\u636e\uff0c\u4e00\u65b9\u63a5\u6536\u6570\u636e\uff0c\n         \u5b9e\u73b0\u7684\u5173\u952e\u70b9:\n         1.\u53d1\u9001\u65b9\n         2.\u63a5\u6536\u65b9\n         3.\u6570\u636e(\u6b64\u5904\u4e3a\u666e\u901a\u6587\u672c)\n\n\n    \u6d88\u606f\u8ba2\u9605\u65b9:\n        \u8ba2\u9605\u8bdd\u9898\u5e76\u6253\u5370\u63a5\u6536\u5230\u7684\u6d88\u606f\n\n    \u5b9e\u73b0\u6d41\u7a0b:\n        1.\u5305\u542b\u5934\u6587\u4ef6 \n        2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n        3.\u5b9e\u4f8b\u5316 ROS \u53e5\u67c4\n        4.\u5b9e\u4f8b\u5316 \u8ba2\u9605\u8005 \u5bf9\u8c61\n        5.\u5904\u7406\u8ba2\u9605\u7684\u6d88\u606f(\u56de\u8c03\u51fd\u6570)\n        6.\u8bbe\u7f6e\u5faa\u73af\u8c03\u7528\u56de\u8c03\u51fd\u6570\n\n*/\n// 1.\u5305\u542b\u5934\u6587\u4ef6 \n#include \"ros/ros.h\"\n#include \"std_msgs/String.h\"\n\nvoid doMsg(const std_msgs::String::ConstPtr&amp; msg_p){\n    ROS_INFO(\"\u6211\u542c\u89c1:%s\",msg_p-&gt;data.c_str());\n    // ROS_INFO(\"\u6211\u542c\u89c1:%s\",(*msg_p).data.c_str());\n}\nint main(int argc, char  *argv[])\n{\n    setlocale(LC_ALL,\"\");\n    //2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n    ros::init(argc,argv,\"listener\");\n    //3.\u5b9e\u4f8b\u5316 ROS \u53e5\u67c4\n    ros::NodeHandle nh;\n\n    //4.\u5b9e\u4f8b\u5316 \u8ba2\u9605\u8005 \u5bf9\u8c61\n    ros::Subscriber sub = nh.subscribe&lt;std_msgs::String&gt;(\"chatter\",10,doMsg);\n    //5.\u5904\u7406\u8ba2\u9605\u7684\u6d88\u606f(\u56de\u8c03\u51fd\u6570)\n\n    //     6.\u8bbe\u7f6e\u5faa\u73af\u8c03\u7528\u56de\u8c03\u51fd\u6570\n    ros::spin();//\u5faa\u73af\u8bfb\u53d6\u63a5\u6536\u7684\u6570\u636e\uff0c\u5e76\u8c03\u7528\u56de\u8c03\u51fd\u6570\u5904\u7406\n\n    return 0;\n}\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#3-cmakeliststxt","title":"3.\u914d\u7f6e CMakeLists.txt","text":"<pre><code>add_executable(Hello_pub\n  src/Hello_pub.cpp\n)\nadd_executable(Hello_sub\n  src/Hello_sub.cpp\n)\n\ntarget_link_libraries(Hello_pub\n  ${catkin_LIBRARIES}\n)\ntarget_link_libraries(Hello_sub\n  ${catkin_LIBRARIES}\n)\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#5-pythonros","title":"5 python\u7f16\u5199ros\u8282\u70b9","text":""},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#1_1","title":"1.\u53d1\u5e03\u65b9","text":"<pre><code>#! /usr/bin/env python\n\"\"\"\n    \u9700\u6c42: \u5b9e\u73b0\u57fa\u672c\u7684\u8bdd\u9898\u901a\u4fe1\uff0c\u4e00\u65b9\u53d1\u5e03\u6570\u636e\uff0c\u4e00\u65b9\u63a5\u6536\u6570\u636e\uff0c\n         \u5b9e\u73b0\u7684\u5173\u952e\u70b9:\n         1.\u53d1\u9001\u65b9\n         2.\u63a5\u6536\u65b9\n         3.\u6570\u636e(\u6b64\u5904\u4e3a\u666e\u901a\u6587\u672c)\n\n         PS: \u4e8c\u8005\u9700\u8981\u8bbe\u7f6e\u76f8\u540c\u7684\u8bdd\u9898\n\n\n    \u6d88\u606f\u53d1\u5e03\u65b9:\n        \u5faa\u73af\u53d1\u5e03\u4fe1\u606f:HelloWorld \u540e\u7f00\u6570\u5b57\u7f16\u53f7\n\n    \u5b9e\u73b0\u6d41\u7a0b:\n        1.\u5bfc\u5305 \n        2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n        3.\u5b9e\u4f8b\u5316 \u53d1\u5e03\u8005 \u5bf9\u8c61\n        4.\u7ec4\u7ec7\u88ab\u53d1\u5e03\u7684\u6570\u636e\uff0c\u5e76\u7f16\u5199\u903b\u8f91\u53d1\u5e03\u6570\u636e\n\n\n\"\"\"\n#1.\u5bfc\u5305 \nimport rospy\nfrom std_msgs.msg import String\n\nif __name__  \"__main__\":\n    #2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n    rospy.init_node(\"talker_p\")\n    #3.\u5b9e\u4f8b\u5316 \u53d1\u5e03\u8005 \u5bf9\u8c61\n    pub = rospy.Publisher(\"chatter\",String,queue_size=10)\n    #4.\u7ec4\u7ec7\u88ab\u53d1\u5e03\u7684\u6570\u636e\uff0c\u5e76\u7f16\u5199\u903b\u8f91\u53d1\u5e03\u6570\u636e\n    msg = String()  #\u521b\u5efa msg \u5bf9\u8c61\n    msg_front = \"hello \u4f60\u597d\"\n    count = 0  #\u8ba1\u6570\u5668 \n    # \u8bbe\u7f6e\u5faa\u73af\u9891\u7387\n    rate = rospy.Rate(1)\n    while not rospy.is_shutdown():\n\n        #\u62fc\u63a5\u5b57\u7b26\u4e32\n        msg.data = msg_front + str(count)\n\n        pub.publish(msg)\n        rate.sleep()\n        rospy.loginfo(\"\u5199\u51fa\u7684\u6570\u636e:%s\",msg.data)\n        count += 1\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#2_2","title":"2.\u8ba2\u9605\u65b9","text":"<pre><code>#! /usr/bin/env python\n\"\"\"\n    \u9700\u6c42: \u5b9e\u73b0\u57fa\u672c\u7684\u8bdd\u9898\u901a\u4fe1\uff0c\u4e00\u65b9\u53d1\u5e03\u6570\u636e\uff0c\u4e00\u65b9\u63a5\u6536\u6570\u636e\uff0c\n         \u5b9e\u73b0\u7684\u5173\u952e\u70b9:\n         1.\u53d1\u9001\u65b9\n         2.\u63a5\u6536\u65b9\n         3.\u6570\u636e(\u6b64\u5904\u4e3a\u666e\u901a\u6587\u672c)\n\n\n    \u6d88\u606f\u8ba2\u9605\u65b9:\n        \u8ba2\u9605\u8bdd\u9898\u5e76\u6253\u5370\u63a5\u6536\u5230\u7684\u6d88\u606f\n\n    \u5b9e\u73b0\u6d41\u7a0b:\n        1.\u5bfc\u5305 \n        2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n        3.\u5b9e\u4f8b\u5316 \u8ba2\u9605\u8005 \u5bf9\u8c61\n        4.\u5904\u7406\u8ba2\u9605\u7684\u6d88\u606f(\u56de\u8c03\u51fd\u6570)\n        5.\u8bbe\u7f6e\u5faa\u73af\u8c03\u7528\u56de\u8c03\u51fd\u6570\n\n\n\n\"\"\"\n#1.\u5bfc\u5305 \nimport rospy\nfrom std_msgs.msg import String\n\ndef doMsg(msg):\n    rospy.loginfo(\"I heard:%s\",msg.data)\n\nif __name__  \"__main__\":\n    #2.\u521d\u59cb\u5316 ROS \u8282\u70b9:\u547d\u540d(\u552f\u4e00)\n    rospy.init_node(\"listener_p\")\n    #3.\u5b9e\u4f8b\u5316 \u8ba2\u9605\u8005 \u5bf9\u8c61\n    sub = rospy.Subscriber(\"chatter\",String,doMsg,queue_size=10)\n    #4.\u5904\u7406\u8ba2\u9605\u7684\u6d88\u606f(\u56de\u8c03\u51fd\u6570)\n    #5.\u8bbe\u7f6e\u5faa\u73af\u8c03\u7528\u56de\u8c03\u51fd\u6570\n    rospy.spin()\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#3_1","title":"3.\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650","text":"<p>\u7ec8\u7aef\u4e0b\u8fdb\u5165 scripts \u6267\u884c:<code>chmod +x *.py</code></p>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#4-cmakeliststxt","title":"4.\u914d\u7f6e CMakeLists.txt","text":"<pre><code>catkin_install_python(PROGRAMS\n  scripts/talker_p.py\n  scripts/listener_p.py\n  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n)\n</code></pre>"},{"location":"ROS/ROS1%E6%95%99%E7%A8%8B/#6-launch","title":"6 launch\u6587\u4ef6\u7684\u7f16\u5199","text":"<ol> <li> <p>\u9009\u5b9a\u529f\u80fd\u5305\u53f3\u51fb ---&gt; \u6dfb\u52a0 launch \u6587\u4ef6\u5939</p> </li> <li> <p>\u9009\u5b9a launch \u6587\u4ef6\u5939\u53f3\u51fb ---&gt; \u6dfb\u52a0 launch \u6587\u4ef6</p> </li> <li> <p>\u7f16\u8f91 launch \u6587\u4ef6\u5185\u5bb9</p> <pre><code>&lt;launch&gt;\n    &lt;node pkg=\"helloworld\" type=\"demo_hello\" name=\"hello\" output=\"screen\" /&gt;\n    &lt;node pkg=\"turtlesim\" type=\"turtlesim_node\" name=\"t1\"/&gt;\n    &lt;node pkg=\"turtlesim\" type=\"turtle_teleop_key\" name=\"key1\" /&gt;\n&lt;/launch&gt;\n</code></pre> <ul> <li> <p>node ---&gt; \u5305\u542b\u7684\u67d0\u4e2a\u8282\u70b9</p> </li> <li> <p>pkg -----&gt; \u529f\u80fd\u5305</p> </li> <li> <p>type ----&gt; \u88ab\u8fd0\u884c\u7684\u8282\u70b9\u6587\u4ef6</p> </li> <li> <p>name \u2192 \u4e3a\u8282\u70b9\u547d\u540d</p> </li> <li> <p>output-&gt; \u8bbe\u7f6e\u65e5\u5fd7\u7684\u8f93\u51fa\u76ee\u6807</p> </li> </ul> </li> <li> <p>\u8fd0\u884c launch \u6587\u4ef6</p> <p><code>roslaunch \u5305\u540d launch\u6587\u4ef6\u540d</code></p> </li> <li> <p>\u8fd0\u884c\u7ed3\u679c: \u4e00\u6b21\u6027\u542f\u52a8\u4e86\u591a\u4e2a\u8282\u70b9</p> </li> </ol> <p>launch\u4e2d\u7684\u6807\u7b7e\uff1anode\u3001include\uff08\u5305\u542b\u5176\u4ed6launch\u6587\u4ef6\uff09\u3001param\uff08\u53c2\u6570\uff09\u3001rosparam\uff08\u4eceyaml\u6587\u4ef6\u5bfc\u5165\u7684\u53c2\u6570\uff09\u3001arg\uff08\u52a8\u6001\u4f20\u53c2\uff0c\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u589e\u5f3alaunch\u6587\u4ef6\u7684\u7075\u6d3b\u6027\uff09</p> <p>include <pre><code>## hello_movebase.launch\n&lt;launch&gt;\n\u00a0 \u00a0 &lt;!-- \u542f\u52a8\u4eff\u771f\u73af\u5883\u52a0\u8f7d\u5c0f\u8f66 --&gt;\n\u00a0 \u00a0 &lt;include file=\"$(find hello_navigation)/launch/myAGV.launch\" /&gt;\n\u00a0 \u00a0 &lt;!-- \u542f\u52a8map_server --&gt;\n\u00a0 \u00a0 &lt;include file=\"$(find hello_navigation)/launch/params_mapserver.launch\" /&gt;\n\u00a0 \u00a0 &lt;!-- \u542f\u52a8AMCL --&gt;\n\u00a0 \u00a0 &lt;include file=\"$(find hello_navigation)/launch/params_amcl.launch\" /&gt;\n\u00a0 \u00a0 &lt;!-- \u6ce8\u610fmap_server\u548cAMCL\u53ef\u4ee5\u88ab\u52a8\u6001\u7684slam\u6240\u5b9e\u65f6\u4ee3\u66ff\uff0c\u53ef\u4ee5\u5bf9\u6bd4\u4e00\u4e0bhello_dynamicslam.launch\u548c\u672c\u6587\u4ef6--&gt;\n\u00a0 \u00a0 &lt;!-- \u542f\u52a8movebase --&gt;\n\u00a0 \u00a0 &lt;include file=\"$(find hello_navigation)/launch/params_movebase.launch\" /&gt;\n&lt;/launch&gt;\n</code></pre></p> <p>node\u3001rosparam: <pre><code>## params_movebase.launch\n&lt;launch&gt;\n\u00a0 \u00a0 &lt;node pkg=\"move_base\" type=\"move_base\" respawn=\"false\" name=\"move_base\" output=\"screen\" clear_params=\"true\"&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;rosparam file=\"$(find hello_navigation)/config/costmap_common_params.yaml\" command=\"load\" ns=\"global_costmap\" /&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;rosparam file=\"$(find hello_navigation)/config/costmap_common_params.yaml\" command=\"load\" ns=\"local_costmap\" /&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;rosparam file=\"$(find hello_navigation)/config/local_costmap_params.yaml\" command=\"load\" /&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;rosparam file=\"$(find hello_navigation)/config/global_costmap_params.yaml\" command=\"load\" /&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;rosparam file=\"$(find hello_navigation)/config/teb_local_planner_params.yaml\" command=\"load\" /&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"base_local_planner\" value=\"teb_local_planner/TebLocalPlannerROS\" /&gt;\n\u00a0 \u00a0 &lt;/node&gt;\n&lt;/launch&gt;\n</code></pre></p> <p>param <pre><code>## params_amcl.launch\n&lt;launch&gt;\n\u00a0 \u00a0 &lt;node pkg=\"amcl\" type=\"amcl\" name=\"amcl\" output=\"screen\"&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;!-- Publish scans from best pose at a max of 10 Hz --&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_model_type\" value=\"diff\"/&gt;&lt;!-- \u91cc\u7a0b\u8ba1\u6a21\u5f0f\u4e3a\u5dee\u5206 --&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_alpha5\" value=\"0.1\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"transform_tolerance\" value=\"0.2\" /&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"gui_publish_rate\" value=\"10.0\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_max_beams\" value=\"30\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"min_particles\" value=\"500\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"max_particles\" value=\"5000\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"kld_err\" value=\"0.05\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"kld_z\" value=\"0.99\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_alpha1\" value=\"0.2\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_alpha2\" value=\"0.2\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;!-- translation std dev, m --&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_alpha3\" value=\"0.8\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_alpha4\" value=\"0.2\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_z_hit\" value=\"0.5\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_z_short\" value=\"0.05\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_z_max\" value=\"0.05\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_z_rand\" value=\"0.5\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_sigma_hit\" value=\"0.2\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_lambda_short\" value=\"0.1\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_lambda_short\" value=\"0.1\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_model_type\" value=\"likelihood_field\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;!-- &lt;param name=\"laser_model_type\" value=\"beam\"/&gt; --&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"laser_likelihood_max_dist\" value=\"2.0\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"update_min_d\" value=\"0.2\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"update_min_a\" value=\"0.5\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"odom_frame_id\" value=\"odom\"/&gt;&lt;!-- \u91cc\u7a0b\u8ba1\u5750\u6807\u7cfb --&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"base_frame_id\" value=\"base_coordinate\"/&gt;&lt;!-- \u6dfb\u52a0\u673a\u5668\u4eba\u57fa\u5750\u6807\u7cfb --&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"global_frame_id\" value=\"map\"/&gt;&lt;!-- \u6dfb\u52a0\u5730\u56fe\u5750\u6807\u7cfb --&gt;  \n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"resample_interval\" value=\"1\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"transform_tolerance\" value=\"0.1\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"recovery_alpha_slow\" value=\"0.0\"/&gt;\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;param name=\"recovery_alpha_fast\" value=\"0.0\"/&gt;\n\u00a0 \u00a0 &lt;/node&gt;\n&lt;/launch&gt;\n</code></pre></p> <p>arg:</p> <pre><code>&lt;launch&gt;\n\u00a0 \u00a0 &lt;!-- \u8bbe\u7f6e\u5730\u56fe\u7684\u914d\u7f6e\u6587\u4ef6 --&gt;\n\u00a0 \u00a0 &lt;arg name=\"map\" default=\"hello_map.yaml\" /&gt;\n\u00a0 \u00a0 &lt;!-- \u8fd0\u884c\u5730\u56fe\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u52a0\u8f7d\u8bbe\u7f6e\u7684\u5730\u56fe--&gt;\n\u00a0 \u00a0 &lt;node name=\"map_server\" pkg=\"map_server\" type=\"map_server\" args=\"$(find hello_navigation)/map/$(arg map)\"/&gt;\n&lt;/launch&gt;\n</code></pre>"},{"location":"ROS/ROS2%E4%B8%8EROS1%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"ROS2\u4e0eROS1\u7684\u533a\u522b","text":"<p>https://blog.csdn.net/qq_16539009/article/details/124060944</p> <p>https://blog.csdn.net/qq_16539009/article/details/124043163?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-124043163-blog-124060944.235%5Ev38%5Epc_relevant_sort_base3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-124043163-blog-124060944.235%5Ev38%5Epc_relevant_sort_base3&amp;utm_relevant_index=9</p> <p>\u4e0b\u9762\u6587\u7ae0\u53c2\u8003\u6587\u732e\u53c8\u5f88\u6709\u6559\u7a0b\uff1a https://blog.csdn.net/baidu_35692628/article/details/130794383?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-130794383-blog-124043163.235<sup>v38</sup>pc_relevant_sort_base3&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4</p> <p>ROS\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u7684\u8bbe\u5b9a\u548cROS1\u57fa\u672c\u4e00\u81f4\uff0c~\u8868\u793a\u79c1\u6709\uff0c/\u8868\u793a\u5168\u5c40\u3002 private nodehandles in ros 2 - ROS Answers: Open Source Q&amp;A Forum --- ROS 2 \u4e2d\u7684\u79c1\u6709\u8282\u70b9\u53e5\u67c4 - ROS Answers\uff1a Open Source Q&amp;A Forum</p> <p></p> <p>\u5b98\u65b9\u6587\u6863 Migration guide from ROS 1 \u2014 ROS 2 Documentation: Humble documentation</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/","title":"ROS2\u6559\u7a0b","text":"<p>\u5c0f\u9c7c\u6559\u7a0b</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#1-ros2","title":"1 ROS2\u7684\u529f\u80fd\u5305\u521b\u5efa","text":"<p>\u540c\u6837\u9700\u8981ros_ws/src\u6587\u4ef6\u5939\uff0c\u5728src\u4e0b\u521b\u5efa\u529f\u80fd\u5305</p> <p>\u4e09\u79cd\u65b9\u5f0f\u521b\u5efa\u529f\u80fd\u5305\uff1a</p> <ul> <li>ament_python\uff0c\u9002\u7528\u4e8epython\u7a0b\u5e8f</li> <li>cmake\uff0c\u9002\u7528\u4e8eC++</li> <li>ament_cmake\uff0c\u9002\u7528\u4e8eC++\u7a0b\u5e8f,\u662fcmake\u7684\u589e\u5f3a\u7248</li> </ul> <p>\u547d\u4ee4\uff1a <pre><code>ros2 pkg create &lt;package-name&gt;  --build-type  {cmake,ament_cmake,ament_python}  --dependencies &lt;\u4f9d\u8d56\u540d\u5b57&gt;\n</code></pre></p> <p>\u5728ros2\u4e2d\uff0cpython\u5305\u7684setup.py\u5bf9\u5e94\u4e8ecmake\u7684cmakelists.txt\uff0c\u5728ros1\u4e2dpython\u4e0d\u9700\u8981setup.py,\u800c\u662f\u4f7f\u7528cmakelist.txt\u7684install</p> <p>\u5728ros2\u4e2d\uff0claunch\u6587\u4ef6\u4e0d\u518d\u662fxml\uff0c\u800c\u662f.launch.py\u7684python\u6587\u4ef6\uff0c\u66f4\u52a0\u7075\u6d3b</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#2","title":"2\u529f\u80fd\u5305\u7684\u67e5\u770b","text":"<p>2.\u5217\u51fa\u53ef\u6267\u884c\u6587\u4ef6</p> <p>\u5217\u51fa\u6240\u6709</p> <pre><code>ros2 pkg executables\n</code></pre> <p>\u5217\u51fa<code>turtlesim</code>\u529f\u80fd\u5305\u7684\u6240\u6709\u53ef\u6267\u884c\u6587\u4ef6</p> <pre><code>ros2 pkg executables turtlesim\n</code></pre> <p></p> <p>\u5217\u51fa\u6240\u6709\u7684\u5305</p> <pre><code>ros2 pkg list\n</code></pre> <p>\u8f93\u51fa\u67d0\u4e2a\u5305\u6240\u5728\u8def\u5f84\u7684\u524d\u7f00</p> <pre><code>ros2 pkg prefix  &lt;package-name&gt;\n</code></pre> <p>\u6bd4\u5982\u5c0f\u4e4c\u9f9f</p> <pre><code>ros2 pkg prefix turtlesim\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#3","title":"3 \u529f\u80fd\u5305\u7684\u6784\u5efa","text":"<p>\u5b89\u88c5 colcon <pre><code>sudo apt-get install python3-colcon-common-extensions\n</code></pre> \u6784\u5efa\u547d\u4ee4colcon build</p> <p>\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u5728<code>src</code>\u540c\u7ea7\u76ee\u5f55\u6211\u4eec\u5e94\u8be5\u4f1a\u770b\u5230\u00a0<code>build</code>\u00a0\u3001\u00a0<code>install</code>\u00a0\u548c\u00a0<code>log</code>\u00a0\u76ee\u5f55:</p> <p><pre><code>\u251c\u2500\u2500 build\n\u251c\u2500\u2500 install\n\u251c\u2500\u2500 log\n\u2514\u2500\u2500 src\n</code></pre> - <code>build</code>\u00a0\u76ee\u5f55\u5b58\u50a8\u7684\u662f\u4e2d\u95f4\u6587\u4ef6\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5305\uff0c\u5c06\u521b\u5efa\u4e00\u4e2a\u5b50\u6587\u4ef6\u5939\uff0c\u5728\u5176\u4e2d\u8c03\u7528\u4f8b\u5982CMake - <code>install</code>\u00a0\u76ee\u5f55\u662f\u6bcf\u4e2a\u8f6f\u4ef6\u5305\u5c06\u5b89\u88c5\u5230\u7684\u4f4d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5305\u90fd\u5c06\u5b89\u88c5\u5230\u5355\u72ec\u7684\u5b50\u76ee\u5f55\u4e2d\u3002 - <code>log</code>\u00a0\u76ee\u5f55\u5305\u542b\u6709\u5173\u6bcf\u4e2acolcon\u8c03\u7528\u7684\u5404\u79cd\u65e5\u5fd7\u4fe1\u606f\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#_1","title":"\u53ea\u7f16\u8bd1\u4e00\u4e2a\u5305","text":"<pre><code>colcon build --packages-select YOUR_PKG_NAME \n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#_2","title":"\u4e0d\u7f16\u8bd1\u6d4b\u8bd5\u5355\u5143","text":"<pre><code>colcon build --packages-select YOUR_PKG_NAME  --cmake-args -DBUILD_TESTING=0\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#_3","title":"\u8fd0\u884c\u7f16\u8bd1\u7684\u5305\u7684\u6d4b\u8bd5","text":"<pre><code>colcon test\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#srcinstall","title":"\u5141\u8bb8\u901a\u8fc7\u66f4\u6539src\u4e0b\u7684\u90e8\u5206\u6587\u4ef6\u6765\u6539\u53d8install\uff08\u91cd\u8981\uff09","text":"<p>\u6bcf\u6b21\u8c03\u6574 python \u811a\u672c\u65f6\u90fd\u4e0d\u5fc5\u91cd\u65b0build\u4e86</p> <pre><code>colcon build --symlink-install\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#4-cppros2","title":"4 CPP\u7f16\u5199ROS2\u8282\u70b9(\u9762\u5411\u8fc7\u7a0b\u7248\u672c)","text":"<p>\u6ce8\u610f\uff1a\u53ea\u6709\u5728ros2\u4e2d\u624d\u6709\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u5199\u4ee3\u7801\u7684\u65b9\u6cd5\uff0c\uff08\u7ee7\u627fNode\u7c7b\uff09</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#1","title":"1.\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u548c\u529f\u80fd\u5305","text":""},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#11","title":"1.1 \u5de5\u4f5c\u7a7a\u95f4","text":"<p>\u5de5\u4f5c\u7a7a\u95f4\u5c31\u662f\u6587\u4ef6\u5939\uff0c\u6240\u4ee5\u5f88\u7b80\u5355\u3002</p> <pre><code>cd d2lros2/chapt2/\nmkdir -p chapt2_ws/src/\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#12-example_cpp","title":"1.2 \u521b\u5efaexample_cpp\u529f\u80fd\u5305","text":"<p>\u521b\u5efaexample_cpp\u529f\u80fd\u5305\uff0c\u4f7f\u7528ament-cmake\u4f5c\u4e3a\u7f16\u8bd1\u7c7b\u578b\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0rclcpp\u4f9d\u8d56\u3002</p> <pre><code>cd chapt2_ws/src\nros2 pkg create example_cpp --build-type ament_cmake --dependencies rclcpp\n</code></pre> <p>\u5927\u5bb6\u53ef\u4ee5\u624b\u5199\u4e00\u4e0b\u8fd9\u4e2a\u4ee3\u7801\uff0c\u611f\u53d7\u4e00\u4e0b\u3002\u73b0\u5728\u5c0f\u9c7c\u6765\u8bb2\u4e00\u8bb2\u8fd9\u6761\u547d\u4ee4\u7684\u542b\u4e49\u548c\u53c2\u6570\u3002</p> <ul> <li>pkg create \u662f\u521b\u5efa\u5305\u7684\u610f\u601d</li> <li>--build-type \u7528\u6765\u6307\u5b9a\u8be5\u5305\u7684\u7f16\u8bd1\u7c7b\u578b\uff0c\u4e00\u5171\u6709\u4e09\u4e2a\u53ef\u9009\u9879<code>ament_python</code>\u3001<code>ament_cmake</code>\u3001<code>cmake</code></li> <li>--dependencies \u6307\u7684\u662f\u8fd9\u4e2a\u529f\u80fd\u5305\u7684\u4f9d\u8d56\uff0c\u8fd9\u91cc\u5c0f\u9c7c\u7ed9\u4e86\u4e00\u4e2aros2\u7684python\u5ba2\u6237\u7aef\u63a5\u53e3<code>rclpy</code></li> </ul> <p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8fdb\u5165<code>chapt2_ws/src</code>\u8fd0\u884c\u4e0a\u9762\u7684\u6307\u4ee4\uff0c\u521b\u5efa\u5b8c\u6210\u540e\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>.\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 example_cpp\n        \u251c\u2500\u2500 CMakeLists.txt\n        \u251c\u2500\u2500 include\n        \u2502   \u2514\u2500\u2500 example_cpp\n        \u251c\u2500\u2500 package.xml\n        \u2514\u2500\u2500 src\n\n5 directories, 2 files\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#2_1","title":"2.\u521b\u5efa\u8282\u70b9","text":"<p>\u63a5\u7740\u6211\u4eec\u5728<code>example_cpp/src</code>\u4e0b\u521b\u5efa\u4e00\u4e2a<code>node_01.cpp</code>\u6587\u4ef6\uff0c\u521b\u5efa\u5b8c\u6210\u540e\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#3_1","title":"3.\u7f16\u5199\u4ee3\u7801","text":""},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#31","title":"3.1 \u7f16\u5199\u4ee3\u7801","text":"<p>\u7ee7\u7eed\u8ddf\u7740\u5c0f\u9c7c\u4e00\u8d77\u8f93\u5165\u4ee3\u7801\uff0c\u8f93\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u8fb9\u8f93\u8fb9\u7406\u89e3\u3002</p> <pre><code>#include \"rclcpp/rclcpp.hpp\"\n\n\nint main(int argc, char **argv)\n{\n    /* \u521d\u59cb\u5316rclcpp  */\n    rclcpp::init(argc, argv);\n    /*\u4ea7\u751f\u4e00\u4e2anode_01\u7684\u8282\u70b9*/\n    auto node = std::make_shared&lt;rclcpp::Node&gt;(\"node_01\");\n    // \u6253\u5370\u4e00\u53e5\u81ea\u6211\u4ecb\u7ecd\n    RCLCPP_INFO(node-&gt;get_logger(), \"node_01\u8282\u70b9\u5df2\u7ecf\u542f\u52a8.\");\n    /* \u8fd0\u884c\u8282\u70b9\uff0c\u5e76\u68c0\u6d4b\u9000\u51fa\u4fe1\u53f7 Ctrl+C*/\n    rclcpp::spin(node);\n    /* \u505c\u6b62\u8fd0\u884c */\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#32-cmakelists","title":"3.2 \u4fee\u6539CmakeLists","text":"<p>\u5728<code>node_01.cpp</code>\u4e2d\u8f93\u5165\u4e0a\u9762\u7684\u5185\u5bb9\u540e\uff0c\u8fd8\u9700\u8981\u4fee\u6539\u4e00\u4e0bCMakeLists.txt\u3002\u5c06\u5176\u6dfb\u52a0\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528<code>install</code>\u6307\u4ee4\u5c06\u5176\u5b89\u88c5\u5230<code>install</code>\u76ee\u5f55\u3002</p> <p>\u5728CmakeLists.txt\u6700\u540e\u4e00\u884c\u52a0\u5165\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u3002</p> <pre><code>add_executable(node_01 src/node_01.cpp)\nament_target_dependencies(node_01 rclcpp)\n</code></pre> <p>\u6dfb\u52a0\u8fd9\u4e24\u884c\u4ee3\u7801\u7684\u76ee\u7684\u662f\u8ba9\u7f16\u8bd1\u5668\u7f16\u8bd1node_01\u8fd9\u4e2a\u6587\u4ef6\uff0c\u63a5\u7740\u5728\u4e0a\u9762\u4e24\u884c\u4ee3\u7801\u4e0b\u9762\u6dfb\u52a0\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>install(TARGETS\n  node_01\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#4","title":"4.\u7f16\u8bd1\u8fd0\u884c\u8282\u70b9","text":"<p>\u5728<code>chapt2_ws</code>\u4e0b\u4f9d\u6b21\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#41","title":"4.1 \u7f16\u8bd1\u8282\u70b9","text":"<pre><code>colcon build\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#42-source","title":"4.2 source\u73af\u5883","text":"<pre><code>source install/setup.bash\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#43","title":"4.3 \u8fd0\u884c\u8282\u70b9","text":"<pre><code>ros2 run example_cpp node_01\n</code></pre> <p>\u4e0d\u51fa\u610f\u5916\uff0c\u4f60\u53ef\u4ee5\u770b\u5230</p> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#5","title":"5.\u6d4b\u8bd5","text":"<p>\u5f53\u8282\u70b9\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u53ef\u4ee5\u518d\u5c1d\u8bd5\u4f7f\u7528<code>ros2 node list</code> \u6307\u4ee4\u6765\u67e5\u770b\u73b0\u6709\u7684\u8282\u70b9\u3002\u8fd9\u4e2a\u65f6\u5019\u4f60\u5e94\u8be5\u80fd\u770b\u5230\uff1a</p> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#6","title":"6.\u603b\u7ed3","text":"<p>\u81f3\u6b64\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86\u5982\u4f55\u7f16\u5199\u4e00\u4e2aC++\u7248\u672c\u7684ros2\u8282\u70b9\u4e86\uff0c\u4f46\u662f\u8fd9\u4ec5\u4ec5\u662f\u7f16\u5199ROS2\u8282\u70b9\u65b9\u5f0f\u4e4b\u4e00\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5c0f\u9c7c\u66f4\u63a8\u8350\u4f60\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u7f16\u5199\u8282\u70b9\uff0c\u5728\u8fdb\u9636\u7bc7\u5c0f\u9c7c\u5c06\u4f1a\u5411\u4f60\u5c55\u793a\u5176\u5199\u6cd5\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#5-pythonros2","title":"5 python\u7f16\u5199ros2\u8282\u70b9\uff08\u9762\u5411\u8fc7\u7a0b\u7248\u672c\uff09","text":""},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#1python","title":"1.\u521b\u5efapython\u529f\u80fd\u5305","text":"<p>\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u53eb\u505a<code>example_py</code>\u00a0python\u7248\u672c\u7684\u529f\u80fd\u5305\u3002</p> <pre><code>cd chapt2/chapt2_ws/src/\nros2 pkg create example_py  --build-type ament_python --dependencies rclpy\n</code></pre> <p>\u521b\u5efa\u5b8c\u6210\u540e\u7684\u76ee\u5f55\u7ed3\u6784</p> <pre><code>.\n\u251c\u2500\u2500 example_py\n\u2502   \u2514\u2500\u2500 __init__.py\n\u251c\u2500\u2500 package.xml\n\u251c\u2500\u2500 resource\n\u2502   \u2514\u2500\u2500 example_py\n\u251c\u2500\u2500 setup.cfg\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 test\n    \u251c\u2500\u2500 test_copyright.py\n    \u251c\u2500\u2500 test_flake8.py\n    \u2514\u2500\u2500 test_pep257.py\n\n3 directories, 8 files\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#2_2","title":"2.\u7f16\u5199\u7a0b\u5e8f","text":"<p>\u7f16\u5199ROS2\u8282\u70b9\u7684\u4e00\u822c\u6b65\u9aa4</p> <pre><code>1. \u5bfc\u5165\u5e93\u6587\u4ef6\n2. \u521d\u59cb\u5316\u5ba2\u6237\u7aef\u5e93\n3. \u65b0\u5efa\u8282\u70b9\n4. spin\u5faa\u73af\u8282\u70b9\n5. \u5173\u95ed\u5ba2\u6237\u7aef\u5e93\n</code></pre> <p>\u5728<code>example_py</code>\u4e0b\u521b\u5efa<code>node_02.py</code>\u63a5\u7740\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\u3002\u8ddf\u7740\u5c0f\u9c7c\u4e00\u8d77\u8fb9\u7406\u89e3\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u6ce8\u91ca\u4e0d\u7528\u8f93\u3002</p> <pre><code>import rclpy\nfrom rclpy.node import Node\n\ndef main(args=None):\n    \"\"\"\n    ros2\u8fd0\u884c\u8be5\u8282\u70b9\u7684\u5165\u53e3\u51fd\u6570\n    \u7f16\u5199ROS2\u8282\u70b9\u7684\u4e00\u822c\u6b65\u9aa4\n    1. \u5bfc\u5165\u5e93\u6587\u4ef6\n    2. \u521d\u59cb\u5316\u5ba2\u6237\u7aef\u5e93\n    3. \u65b0\u5efa\u8282\u70b9\u5bf9\u8c61\n    4. spin\u5faa\u73af\u8282\u70b9\n    5. \u5173\u95ed\u5ba2\u6237\u7aef\u5e93\n    \"\"\"\n    rclpy.init(args=args) # \u521d\u59cb\u5316rclpy\n    node = Node(\"node_02\")  # \u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\n    node.get_logger().info(\"\u5927\u5bb6\u597d\uff0c\u6211\u662fnode_02.\")\n    rclpy.spin(node) # \u4fdd\u6301\u8282\u70b9\u8fd0\u884c\uff0c\u68c0\u6d4b\u662f\u5426\u6536\u5230\u9000\u51fa\u6307\u4ee4\uff08Ctrl+C\uff09\n    rclpy.shutdown() # \u5173\u95edrclpy\n</code></pre> <p>\u4ee3\u7801\u7f16\u5199\u5b8c\u6210\u7528Crtl+S\u8fdb\u884c\u4fdd\u5b58\u3002\u63a5\u7740\u4fee\u6539<code>setup.py</code>\u3002</p> <pre><code>    entry_points={\n        'console_scripts': [\n            \"node_02 = example_py.node_02:main\"\n        ],\n    },\n)\n</code></pre> <p><code>setup.py</code>\u8fd9\u6bb5\u914d\u7f6e\u662f\u58f0\u660e\u4e00\u4e2aROS2\u7684\u8282\u70b9\uff0c\u58f0\u660e\u540e\u4f7f\u7528<code>colcon build</code>\u624d\u80fd\u68c0\u6d4b\u5230\uff0c\u4ece\u800c\u5c06\u5176\u6dfb\u52a0\u5230<code>install</code>\u76ee\u5f55\u4e0b\u3002</p> <p>\u5b8c\u6210\u4e0a\u9762\u7684\u5de5\u4f5c\u540e\uff0c\u5c31\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c\u4e86\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#3_2","title":"3.\u7f16\u8bd1\u8fd0\u884c\u8282\u70b9","text":"<p>\u6253\u5f00vscode\u7ec8\u7aef\uff0c\u8fdb\u5165<code>town_ws</code></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#31_1","title":"3.1 \u7f16\u8bd1\u8282\u70b9","text":"<pre><code>cd chapt2/chapt2_ws/\ncolcon build\n</code></pre> <pre><code>--- stderr: example_py                   \n/usr/lib/python3/dist-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.\n  warnings.warn(\n---\n</code></pre> <p>\u5982\u679c\u5728\u7f16\u8bd1\u4e2d\u770b\u5230\u4e0a\u8ff0\u9519\u8bef\u6ca1\u5173\u7cfb\uff0c\u4e0d\u5f71\u54cd\u4f7f\u7528\uff0cros2\u5b98\u65b9\u6b63\u5728\u4fee\u590d\u3002 \u9519\u8bef\u539f\u56e0\u662fsetuptools\u7248\u672c\u592a\u9ad8\u9020\u6210\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u6307\u4ee4\u53ef\u4ee5\u8fdb\u884c\u7248\u672c\u7684\u56de\u9000\u3002</p> <pre><code>sudo pip install setuptools58.2.0 --upgrade\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#32-source","title":"3.2 source\u73af\u5883","text":"<pre><code>source install/setup.bash\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#33","title":"3.3 \u8fd0\u884c\u8282\u70b9","text":"<pre><code>ros2 run example_py node_02\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#4_1","title":"4.\u6d4b\u8bd5","text":"<p>\u5f53\u8282\u70b9\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u53ef\u4ee5\u518d\u5c1d\u8bd5\u4f7f\u7528<code>ros2 node list</code> \u6307\u4ee4\u6765\u67e5\u770b\u73b0\u6709\u7684\u8282\u70b9\u3002\u8fd9\u4e2a\u65f6\u5019\u4f60\u5e94\u8be5\u80fd\u770b\u5230\uff1a</p> <p></p> <p>\u8fd9\u8bf4\u660e\u4f60\u7684\u8282\u70b9\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u4e86\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#5_1","title":"5.\u603b\u7ed3","text":"<p>\u672c\u8282\u6211\u4eec\u5b66\u4e60\u4e86\u4f7f\u7528Python\u5728\u5de5\u4f5c\u7a7a\u95f4\u7684\u529f\u80fd\u5305\u91cc\u7f16\u5199\u4e00\u4e2a\u8282\u70b9\uff0c\u4ee3\u7801\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u591a\u4e86\u4e00\u4e9b\u914d\u7f6e\u3002</p> <p>\u5f53\u7136\u9664\u4e86\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u7f16\u5199\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd8\u6709\u5176\u4ed6\u65b9\u5f0f\uff0c\u5c0f\u9c7c\u5c06\u5176\u653e\u5230\u4e86\u8fdb\u9636\u7bc7\u6765\u8bb2\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#6-cppros2","title":"6 CPP\u7f16\u5199ROS2\u8282\u70b9(\u9762\u5411\u5bf9\u8c61\u7248\u672c)","text":"<p>\u5728<code>d2lros2/chapt2/chapt2_ws/src/example_cpp/src</code>\u4e0b\u65b0\u5efa<code>node_03.cpp</code>\uff0c\u63a5\u7740\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>#include \"rclcpp/rclcpp.hpp\"\n\n/*\n    \u521b\u5efa\u4e00\u4e2a\u7c7b\u8282\u70b9\uff0c\u540d\u5b57\u53eb\u505aNode03,\u7ee7\u627f\u81eaNode.\n*/\nclass Node03 : public rclcpp::Node\n{\n\npublic:\n    // \u6784\u9020\u51fd\u6570,\u6709\u4e00\u4e2a\u53c2\u6570\u4e3a\u8282\u70b9\u540d\u79f0\n    Node03(std::string name) : Node(name)\n    {\n        // \u6253\u5370\u4e00\u53e5\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u5927\u5bb6\u597d\uff0c\u6211\u662f%s.\",name.c_str());\n    }\n\nprivate:\n\n};\n\nint main(int argc, char **argv)\n{\n    rclcpp::init(argc, argv);\n    /*\u4ea7\u751f\u4e00\u4e2anode_03\u7684\u8282\u70b9*/\n    auto node = std::make_shared&lt;Node03&gt;(\"node_03\");\n    /* \u8fd0\u884c\u8282\u70b9\uff0c\u5e76\u68c0\u6d4b\u9000\u51fa\u4fe1\u53f7*/\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre> <p>\u63a5\u7740\u4fee\u6539<code>CMakeLists.txt</code>\uff0c\u6dfb\u52a0\u4e0b\u65b9\u4ee3\u7801\u3002</p> <pre><code>add_executable(node_03 src/node_03.cpp)\nament_target_dependencies(node_03 rclcpp)\n\ninstall(TARGETS\n  node_03\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u63a5\u7740\u5373\u53ef\u81ea\u884c\u7f16\u8bd1\u6d4b\u8bd5</p> <pre><code>colcon build --packages-select example_cpp\nsource install/setup.bash\nros2 run example_cpp node_03\n</code></pre> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#7-pythonros2","title":"7 python\u7f16\u5199ros2\u8282\u70b9\uff08\u9762\u5411\u5bf9\u8c61\u7248\u672c\uff09","text":"<p>\u5728<code>d2lros2/d2lros2/chapt2/chapt2_ws/src/example_py/example_py</code>\u4e0b\u65b0\u5efa<code>node_04.py</code>\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801</p> <pre><code>#!/usr/bin/env python3\nimport rclpy\nfrom rclpy.node import Node\n\n\nclass Node04(Node):\n    \"\"\"\n    \u521b\u5efa\u4e00\u4e2aNode04\u8282\u70b9\uff0c\u5e76\u5728\u521d\u59cb\u5316\u65f6\u8f93\u51fa\u4e00\u4e2a\u8bdd\n    \"\"\"\n    def __init__(self,name):\n        super().__init__(name)\n        self.get_logger().info(\"\u5927\u5bb6\u597d\uff0c\u6211\u662f%s!\" % name)\n\n\ndef main(args=None):\n    rclpy.init(args=args) # \u521d\u59cb\u5316rclpy\n    node = Node04(\"node_04\")  # \u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\n    rclpy.spin(node) # \u4fdd\u6301\u8282\u70b9\u8fd0\u884c\uff0c\u68c0\u6d4b\u662f\u5426\u6536\u5230\u9000\u51fa\u6307\u4ee4\uff08Ctrl+C\uff09\n    rclpy.shutdown() # \u5173\u95edrclpy\n</code></pre> <p>\u63a5\u7740\u4fee\u6539<code>setup.py</code></p> <pre><code>    entry_points={\n        'console_scripts': [\n            \"node_02 = example_py.node_02:main\",\n            \"node_04 = example_py.node_04:main\"\n        ],\n    },\n</code></pre> <p>\u6ce8\u610f\u683c\u5f0f\u548c\u7ed3\u5c3e\u7684<code>,</code>\u7b26\u53f7\uff0c<code>console_scripts</code>\u662f\u4e2a\u6570\u7ec4\u3002</p> <p>\u7f16\u8bd1\u6d4b\u8bd5</p> <pre><code>colcon build --packages-select example_py\nsource install/setup.bash\nros2 run example_py node_04\n</code></pre> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#8-launch","title":"8 launch\u6587\u4ef6\u7684\u7f16\u5199","text":"<p>\u901a\u8fc7\u5b9e\u4f8b\u5b66\u4e60ros2\u7684launch</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#1launch","title":"1.Launch\u542f\u52a8\u5de5\u5177\u4ecb\u7ecd","text":""},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#11_1","title":"1.1 \u95ee\u9898\u63cf\u8ff0","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u673a\u5668\u4eba\u7cfb\u7edf\u6765\u8bf4\uff0c\u5f80\u5f80\u7531\u5f88\u591a\u4e2a\u4e0d\u540c\u529f\u80fd\u7684\u8282\u70b9\u7ec4\u6210\uff0c\u542f\u52a8\u4e00\u4e2a\u673a\u5668\u4eba\u7cfb\u7edf\u65f6\u5f80\u5f80\u9700\u8981\u542f\u52a8\u591a\u4e2a\u8282\u70b9\uff0c\u540c\u65f6\u6839\u636e\u5e94\u7528\u573a\u666f\u548c\u673a\u5668\u4eba\u7684\u4e0d\u540c\uff0c\u6bcf\u4e2a\u8282\u70b9\u8fd8\u4f1a\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u9879\u3002</p> <p>\u5982\u679c\u6bcf\u4e2a\u8282\u70b9\u6211\u4eec\u90fd\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u6572<code>ros2 run</code>\u6307\u4ee4\u5e76\u5199\u4e00\u5806\u53c2\u6570\uff0c\u8fd9\u662f\u591a\u4e48\u6d6a\u8d39\u751f\u547d\u4e14\u4ee4\u4eba\u7edd\u671b\u7684\u4e8b\u60c5\u3002</p> <p>\u9664\u4e86\u542f\u52a8\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u4e00\u4e2a\u4e2a\u5173\u95ed\u4e5f\u662f\u5f88\u96be\u53d7\u7684\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#12","title":"1.2 \u89e3\u51b3\u65b9\u6848","text":"<p>\u53ef\u4e0d\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u811a\u672c\u7684\u6587\u4ef6\u6765\u7ba1\u7406\u8282\u70b9\u7684\u542f\u52a8\u5462\uff1f</p> <p>ROS2\u8bbe\u8ba1\u65f6\u5c31\u4e3a\u6211\u4eec\u60f3\u597d\u4e86\uff0c\u4e3a\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u8bed\u6cd5\u548c\u89c4\u5219\u7684\u6587\u4ef6\u6765\u5e2e\u52a9\u6211\u4eec\u7ec4\u7ec7\u8282\u70b9\u7684\u542f\u52a8\uff0c\u8fd9\u4e2a\u6b66\u5668\u5c31\u53eblaunch\u6587\u4ef6\u3002</p> <p>launch\u6587\u4ef6\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u542f\u52a8\u548c\u914d\u7f6e\u591a\u4e2a\u5305\u542b ROS 2 \u8282\u70b9\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> <p>\u5728ROS1\u4e2dlaunch\u6587\u4ef6\u53ea\u6709\u4e00\u79cd\u683c\u5f0f\u4ee5.launch\u7ed3\u5c3e\u7684xml\u6587\u6863\uff0c\u4e0d\u719f\u6089\u7684\u540c\u5b66\u5199\u8d77\u6765\u88abxml\u8bed\u6cd5\u6298\u78e8\u7684\u6b7b\u53bb\u6d3b\u6765\u3002\u4e0d\u8fc7\u5728ROS2\u4e2d\u4e0d\u8981\u62c5\u5fc3\uff0c\u56e0\u4e3a\u5728ROS2\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u4ee3\u7801\u6765\u7f16\u5199launch\u6587\u4ef6</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#2ros2launch","title":"2.\u7f16\u5199\u7b2c\u4e00\u4e2aROS2\u7684launch\u6587\u4ef6","text":""},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#21-launch","title":"2.1 \u4e09\u79cd\u7f16\u5199launch\u6587\u4ef6\u7684\u65b9\u6cd5","text":"<p>ROS2\u7684launch\u6587\u4ef6\u6709\u4e09\u79cd\u683c\u5f0f\uff0cpython\u3001xml\u3001yaml\u3002\u5176\u4e2dROS2\u5b98\u65b9\u63a8\u8350\u7684\u65f6python\u65b9\u5f0f\u7f16\u5199launch\u6587\u4ef6\u3002 \u539f\u56e0\u5728\u4e8e\uff0c\u76f8\u8f83\u4e8eXML\u548cYAML\uff0cPython\u662f\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\uff0c\u66f4\u52a0\u7684\u7075\u6d3b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528Python\u7684\u5f88\u591a\u5e93\u6765\u505a\u4e00\u4e9b\u5176\u4ed6\u5de5\u4f5c\uff08\u6bd4\u5982\u521b\u5efa\u4e00\u4e9b\u521d\u59cb\u5316\u7684\u76ee\u5f55\u7b49\uff09\u3002</p> <p>\u9664\u4e86\u7075\u6d3b\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u662fros2/launch\uff08\u4e00\u822claunch\u5171\u529f\u80fd\uff09\u548cros2/launch_ros\uff08ROS 2 launch\u7684\u7279\u6027\uff09\u662f\u7528 Python \u7f16\u5199\u7684\uff0c\u6211\u4eec\u4f7f\u7528python\u7f16\u5199launch\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528 XML \u548c YAML \u4e2d\u4e0d\u80fd\u7528\u7684launch\u529f\u80fd\u3002 \u8981\u8bf4\u4f7f\u7528python\u7248\u672c\u7684launch\u6709\u4ec0\u4e48\u574f\u5904\uff0c\u90a3\u5c31\u662f\u5199\u8d77\u6765\u6bd4yaml\u8981\u5197\u4f59</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#22-pythonlaunch","title":"2.2 \u4f7f\u7528Python\u7f16\u5199Launch","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u7f16\u5199\u4e00\u4e2alaunch\u6587\u4ef6\uff0c\u6700\u540e\u4f7f\u7528launch\u6307\u4ee4\uff0c\u540c\u65f6\u542f\u52a8\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u8282\u70b9\u3002</p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#221-launch","title":"2.2.1 \u521b\u5efa\u529f\u80fd\u5305\u548claunch\u6587\u4ef6","text":"<p>\u521b\u5efa\u6587\u4ef6\u5939\u548c\u529f\u80fd\u5305\uff0c\u63a5\u7740touch\u4e00\u4e2alaunch\u6587\u4ef6\uff0c\u540e\u7f00\u4e3a<code>.py</code>\u3002</p> <pre><code>mkdir -p chapt4/chapt4_ws/src\ncd chapt4/chapt4_ws/src\nros2 pkg create robot_startup --build-type ament_cmake --destination-directory src\nmkdir -p src/robot_startup/launch\ntouch src/robot_startup/launch/example_action.launch.py\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#222","title":"2.2.2 \u542f\u52a8\u591a\u4e2a\u8282\u70b9\u7684\u793a\u4f8b","text":"<p>\u6211\u4eec\u9700\u8981\u5bfc\u5165\u4e24\u4e2a\u5e93\uff0c\u4e00\u4e2a\u53eb\u505aLaunchDescription\uff0c\u7528\u4e8e\u5bf9launch\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u63cf\u8ff0\uff0c\u4e00\u4e2a\u662fNode\uff0c\u7528\u4e8e\u58f0\u660e\u8282\u70b9\u6240\u5728\u7684\u4f4d\u7f6e\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u8981\u5b9a\u4e00\u4e2a\u540d\u5b57\u53eb\u505a<code>generate_launch_description</code>\u7684\u51fd\u6570\uff0cROS2\u4f1a\u5bf9\u8be5\u51fd\u6570\u540d\u5b57\u505a\u8bc6\u522b\u3002</p> <pre><code># \u5bfc\u5165\u5e93\nfrom launch import LaunchDescription\nfrom launch_ros.actions import Node\n\ndef generate_launch_description():\n    \"\"\"launch\u5185\u5bb9\u63cf\u8ff0\u51fd\u6570\uff0c\u7531ros2 launch \u626b\u63cf\u8c03\u7528\"\"\"\n    action_robot_01 = Node(\n        package=\"example_action_rclcpp\",\n        executable=\"action_robot_01\"\n    )\n    action_control_01 = Node(\n        package=\"example_action_rclcpp\",\n        executable=\"action_control_01\"\n    )\n    # \u521b\u5efaLaunchDescription\u5bf9\u8c61launch_description,\u7528\u4e8e\u63cf\u8ff0launch\u6587\u4ef6\n    launch_description = LaunchDescription(\n        [action_robot_01, action_control_01])\n    # \u8fd4\u56de\u8ba9ROS2\u6839\u636elaunch\u63cf\u8ff0\u6267\u884c\u8282\u70b9\n    return launch_description\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#223-launch","title":"2.2.3 \u5c06launch\u6587\u4ef6\u62f7\u8d1d\u5230\u5b89\u88c5\u76ee\u5f55","text":"<p>\u5982\u679c\u4f60\u7f16\u5199\u5b8c\u6210\u540e\u76f4\u63a5\u7f16\u8bd1\u4f60\u4f1a\u53d1\u73b0install\u76ee\u5f55\u4e0b\u6839\u672c\u6ca1\u6709\u4f60\u7f16\u5199\u7684launch\u6587\u4ef6\uff0c\u540e\u7eedlaunch\u81ea\u7136\u4e5f\u627e\u4e0d\u5230\u8fd9\u4e2alaunch\u6587\u4ef6\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u7528\u7684\u662f<code>ament_cmake</code>\u7c7b\u578b\u529f\u80fd\u5305\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u4f7f\u7528cmake\u547d\u4ee4\u8fdb\u884c\u6587\u4ef6\u7684\u62f7\u8d1d</p> <pre><code>install(DIRECTORY launch\n  DESTINATION share/${PROJECT_NAME})\n</code></pre> <p>\u5982\u679c\u662f<code>ament_python</code>\u529f\u80fd\u5305\u7248\uff0c\u9700\u8981\u4fee\u6539setup.py</p> <pre><code>from setuptools import setup\nfrom glob import glob\nimport os\n\nsetup(\n    name=package_name,\n    version='0.0.0',\n    packages=[package_name],\n    data_files=[\n        ('share/ament_index/resource_index/packages',\n            ['resource/' + package_name]),\n        ('share/' + package_name, ['package.xml']),\n        (os.path.join('share', package_name, 'launch'), glob('launch/*.launch.py')),\n    ],\n    },\n)\n</code></pre>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#224","title":"2.2.4 \u7f16\u8bd1\u6d4b\u8bd5","text":"<p>\u4f7f\u7528colcon\u6307\u4ee4\u7f16\u8bd1\u6211\u4eec\u7684\u7a0b\u5e8f</p> <pre><code>colcon build\n</code></pre> <p>\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u5728<code>chapt5/chapt5_ws/install/robot_startup/share/robot_startup/launch</code>\u76ee\u5f55\u4e0b\u4f60\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230\u88abcmake\u62f7\u8d1d\u8fc7\u53bb\u7684launch\u6587\u4ef6\u4e86\u3002</p> <p>\u63a5\u7740\u8fd0\u884c`</p> <pre><code># source \u7b2c\u56db\u7ae0\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u8fd9\u6837\u624d\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u4e0d\u4fe1\u4f60\u53ef\u4ee5\u4e0dsource\u8bd5\u8bd5\nsource ../../chapt4/chapt4_ws/install/setup.bash\nsource install/setup.bash\nros2 launch robot_startup example_action.launch.py\n# \u65b0\u7ec8\u7aef\nros2 node list #\u5373\u53ef\u770b\u5230\u4e24\u4e2a\u8282\u70b9\n</code></pre> <p></p>"},{"location":"ROS/ROS2%E6%95%99%E7%A8%8B/#3_3","title":"3 \u6dfb\u52a0\u53c2\u6570&amp;\u4fee\u6539\u547d\u540d\u7a7a\u95f4","text":"<p>\u63a5\u7740\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528launch\u8fd0\u884c\u53c2\u6570\u8282\u70b9\uff0c\u5e76\u901a\u8fc7launch\u4f20\u9012\u53c2\u6570\uff0c\u548c\u7ed9\u8282\u70b9\u4ee5\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u3002</p> <p>\u65b0\u5efa<code>chapt5/chapt5_ws/src/robot_startup/launch/example_param_rclcpp.launch.py</code>\u3002</p> <p>\u7f16\u5199\u5185\u5bb9\u5982\u4e0b</p> <pre><code># \u5bfc\u5165\u5e93\nfrom launch import LaunchDescription\nfrom launch_ros.actions import Node\n\ndef generate_launch_description():\n    \"\"\"launch\u5185\u5bb9\u63cf\u8ff0\u51fd\u6570\uff0c\u7531ros2 launch \u626b\u63cf\u8c03\u7528\"\"\"\n    parameters_basic1 = Node(\n        package=\"example_parameters_rclcpp\",\n        namespace=\"rclcpp\",\n        executable=\"parameters_basic\",\n        parameters=[{'rcl_log_level': 40}]\n    )\n    parameters_basic2 = Node(\n        package=\"example_parameters_rclpy\",\n        namespace=\"rclpy\",\n        executable=\"parameters_basic\",\n        parameters=[{'rcl_log_level': 50}]\n    )\n    # \u521b\u5efaLaunchDescription\u5bf9\u8c61launch_description,\u7528\u4e8e\u63cf\u8ff0launch\u6587\u4ef6\n    launch_description = LaunchDescription(\n        [parameters_basic1, parameters_basic2])\n    # \u8fd4\u56de\u8ba9ROS2\u6839\u636elaunch\u63cf\u8ff0\u6267\u884c\u8282\u70b9\n    return launch_description\n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5</p> <pre><code># source \u7b2c\u56db\u7ae0\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u8fd9\u6837\u624d\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u4e0d\u4fe1\u4f60\u53ef\u4ee5\u4e0dsource\u8bd5\u8bd5\nsource ../../chapt4/chapt4_ws/install/setup.bash\nsource install/setup.bash\nros2 launch robot_startup example_param_rclcpp.launch.py\n# \u65b0\u7ec8\u7aef\nros2 node list #\u5373\u53ef\u770b\u5230\u4e24\u4e2a\u8282\u70b9\n</code></pre> <p></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84action%E9%80%9A%E4%BF%A1/","title":"ROS\u4e2d\u7684action\u901a\u4fe1","text":"<p>action\u901a\u4fe1</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84action%E9%80%9A%E4%BF%A1/#1","title":"1 \u6982\u8ff0","text":"<p>action\u901a\u4fe1\u548cservice\u901a\u4fe1\u7c7b\u4f3c\uff0c\u5176\u5b9e\u73b0\u6a21\u578b\u4e5f\u5305\u542b\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u4f46\u662fserver\u7aef\u53ef\u4ee5\u5b9e\u65f6\u5411client\u53cd\u9988\u5904\u7406\u8fdb\u5ea6\uff0c\u9002\u7528\u4e8eserver\u5904\u7406\u65f6\u95f4\u8f83\u957f\u7684\u573a\u666f\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84action%E9%80%9A%E4%BF%A1/#2","title":"2 \u6d88\u606f\u683c\u5f0f","text":"<p>XXX.action</p> <p>action \u6587\u4ef6\u5185\u5bb9\u7ec4\u6210\u5206\u4e3a\u4e09\u90e8\u5206:\u8bf7\u6c42\u76ee\u6807\u503c\u3001\u6700\u7ec8\u54cd\u5e94\u7ed3\u679c\u3001\u8fde\u7eed\u53cd\u9988\uff0c\u4e09\u8005\u4e4b\u95f4\u4f7f\u7528<code>---</code>\u5206\u5272\u793a\u4f8b\u5185\u5bb9\u5982\u4e0b:</p> <pre><code>#\u76ee\u6807\u503c\nint32 num\n---\n#\u6700\u7ec8\u7ed3\u679c\nint32 result\n---\n#\u8fde\u7eed\u53cd\u9988\nfloat64 progress_bar\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84action%E9%80%9A%E4%BF%A1/#3-action","title":"3 \u7f16\u8bd1action\u6d88\u606f\uff0c\u751f\u6210\u5934\u6587\u4ef6","text":"<p>CMakeLists.txt</p> <pre><code>find_package\n(catkin REQUIRED COMPONENTS\n  roscpp\n  rospy\n  std_msgs\n  actionlib\n  actionlib_msgs\n)\n</code></pre> <pre><code>add_action_files(\n  FILES\n  AddInts.action\n)\n</code></pre> <pre><code>generate_messages(\n  DEPENDENCIES\n  std_msgs\n  actionlib_msgs\n)\n</code></pre> <pre><code>catkin_package(\n\n##  INCLUDE_DIRS include\n##  LIBRARIES demo04_action\n\n CATKIN_DEPENDS roscpp rospy std_msgs actionlib actionlib_msgs\n\n##  DEPENDS system_lib\n\n)\n</code></pre> <p>\u7f16\u8bd1\u540e\u4f1a\u751f\u6210\u4e00\u4e9b\u4e2d\u95f4\u6587\u4ef6\u3002</p> <p>msg\u6587\u4ef6(.../\u5de5\u4f5c\u7a7a\u95f4/devel/share/\u5305\u540d/msg/xxx.msg):</p> <p>C++ \u8c03\u7528\u7684\u6587\u4ef6(.../\u5de5\u4f5c\u7a7a\u95f4/devel/include/\u5305\u540d/xxx.h):</p> <p>Python \u8c03\u7528\u7684\u6587\u4ef6(.../\u5de5\u4f5c\u7a7a\u95f4/devel/lib/python3/dist-packages/\u5305\u540d/msg/xxx.py):</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84action%E9%80%9A%E4%BF%A1/#4-server","title":"4 server\u7aef\u5b9e\u73b0","text":"<pre><code>#include \"ros/ros.h\"\n#include \"actionlib/server/simple_action_server.h\"\n#include \"demo01_action/AddIntsAction.h\"\n/*  \n    \u9700\u6c42:\n        \u521b\u5efa\u4e24\u4e2aROS\u8282\u70b9\uff0c\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\uff0c\n        \u5ba2\u6237\u7aef\u53ef\u4ee5\u5411\u670d\u52a1\u5668\u53d1\u9001\u76ee\u6807\u6570\u636eN\uff08\u4e00\u4e2a\u6574\u578b\u6570\u636e\uff09\n        \u670d\u52a1\u5668\u4f1a\u8ba1\u7b971\u5230N\u4e4b\u95f4\u6240\u6709\u6574\u6570\u7684\u548c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5faa\u73af\u7d2f\u52a0\u7684\u8fc7\u7a0b\uff0c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\n        \u8fd9\u662f\u57fa\u4e8e\u8bf7\u6c42\u54cd\u5e94\u6a21\u5f0f\u7684\uff0c\n        \u53c8\u5df2\u77e5\u670d\u52a1\u5668\u4ece\u63a5\u6536\u5230\u8bf7\u6c42\u5230\u4ea7\u751f\u54cd\u5e94\u662f\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u6bcf\u7d2f\u52a0\u4e00\u6b21\u8017\u65f60.1s\uff0c\n        \u4e3a\u4e86\u826f\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u9700\u8981\u670d\u52a1\u5668\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\n        \u6bcf\u7d2f\u52a0\u4e00\u6b21\uff0c\u5c31\u7ed9\u5ba2\u6237\u7aef\u54cd\u5e94\u4e00\u6b21\u767e\u5206\u6bd4\u683c\u5f0f\u7684\u6267\u884c\u8fdb\u5ea6\uff0c\u4f7f\u7528action\u5b9e\u73b0\u3002\n\n    \u6d41\u7a0b:\n        1.\u5305\u542b\u5934\u6587\u4ef6;\n        2.\u521d\u59cb\u5316ROS\u8282\u70b9;\n        3.\u521b\u5efaNodeHandle;\n        4.\u521b\u5efaaction\u670d\u52a1\u5bf9\u8c61;\n        5.\u5904\u7406\u8bf7\u6c42,\u4ea7\u751f\u53cd\u9988\u4e0e\u54cd\u5e94;\n        6.spin().\n\n*/\n\ntypedef actionlib::SimpleActionServer&lt;demo01_action::AddIntsAction&gt; Server;\n\n\nvoid cb(const demo01_action::AddIntsGoalConstPtr &amp;goal,Server* server){\n    //\u83b7\u53d6\u76ee\u6807\u503c\n    int num = goal-&gt;num;\n    ROS_INFO(\"\u76ee\u6807\u503c:%d\",num);\n    //\u7d2f\u52a0\u5e76\u54cd\u5e94\u8fde\u7eed\u53cd\u9988\n    int result = 0;\n    demo01_action::AddIntsFeedback feedback;//\u8fde\u7eed\u53cd\u9988\n    ros::Rate rate(10);//\u901a\u8fc7\u9891\u7387\u8bbe\u7f6e\u4f11\u7720\u65f6\u95f4\n    for (int i = 1; i &lt;= num; i++)\n    {\n        result += i;\n        //\u7ec4\u7ec7\u8fde\u7eed\u6570\u636e\u5e76\u53d1\u5e03\n        feedback.progress_bar = i / (double)num;\n        server-&gt;publishFeedback(feedback);\n        rate.sleep();\n    }\n    //\u8bbe\u7f6e\u6700\u7ec8\u7ed3\u679c\n    demo01_action::AddIntsResult r;\n    r.result = result;\n    server-&gt;setSucceeded(r);\n    ROS_INFO(\"\u6700\u7ec8\u7ed3\u679c:%d\",r.result);\n}\n\nint main(int argc, char *argv[])\n{\n    setlocale(LC_ALL,\"\");\n    ROS_INFO(\"action\u670d\u52a1\u7aef\u5b9e\u73b0\");\n    // 2.\u521d\u59cb\u5316ROS\u8282\u70b9;\n    ros::init(argc,argv,\"AddInts_server\");\n    // 3.\u521b\u5efaNodeHandle;\n    ros::NodeHandle nh;\n    // 4.\u521b\u5efaaction\u670d\u52a1\u5bf9\u8c61;\n    /*SimpleActionServer(ros::NodeHandle n, \n                        std::string name, \n                        boost::function&lt;void (const demo01_action::AddIntsGoalConstPtr &amp;)&gt; execute_callback, \n                        bool auto_start)\n    */\n    // actionlib::SimpleActionServer&lt;demo01_action::AddIntsAction&gt; server(....);\n    Server server(nh,\"addInts\",boost::bind(&amp;cb,_1,&amp;server),false);\n    server.start();\n    // 5.\u5904\u7406\u8bf7\u6c42,\u4ea7\u751f\u53cd\u9988\u4e0e\u54cd\u5e94;\n\n    // 6.spin().   \n    ros::spin();\n    return 0;\n}\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84action%E9%80%9A%E4%BF%A1/#5-clinet","title":"5 clinet\u7aef","text":"<pre><code>#include \"ros/ros.h\"\n#include \"actionlib/client/simple_action_client.h\"\n#include \"demo01_action/AddIntsAction.h\"\n\n/*  \n    \u9700\u6c42:\n        \u521b\u5efa\u4e24\u4e2aROS\u8282\u70b9\uff0c\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\uff0c\n        \u5ba2\u6237\u7aef\u53ef\u4ee5\u5411\u670d\u52a1\u5668\u53d1\u9001\u76ee\u6807\u6570\u636eN\uff08\u4e00\u4e2a\u6574\u578b\u6570\u636e\uff09\n        \u670d\u52a1\u5668\u4f1a\u8ba1\u7b971\u5230N\u4e4b\u95f4\u6240\u6709\u6574\u6570\u7684\u548c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5faa\u73af\u7d2f\u52a0\u7684\u8fc7\u7a0b\uff0c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\n        \u8fd9\u662f\u57fa\u4e8e\u8bf7\u6c42\u54cd\u5e94\u6a21\u5f0f\u7684\uff0c\n        \u53c8\u5df2\u77e5\u670d\u52a1\u5668\u4ece\u63a5\u6536\u5230\u8bf7\u6c42\u5230\u4ea7\u751f\u54cd\u5e94\u662f\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u6bcf\u7d2f\u52a0\u4e00\u6b21\u8017\u65f60.1s\uff0c\n        \u4e3a\u4e86\u826f\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u9700\u8981\u670d\u52a1\u5668\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\n        \u6bcf\u7d2f\u52a0\u4e00\u6b21\uff0c\u5c31\u7ed9\u5ba2\u6237\u7aef\u54cd\u5e94\u4e00\u6b21\u767e\u5206\u6bd4\u683c\u5f0f\u7684\u6267\u884c\u8fdb\u5ea6\uff0c\u4f7f\u7528action\u5b9e\u73b0\u3002\n\n    \u6d41\u7a0b:\n        1.\u5305\u542b\u5934\u6587\u4ef6;\n        2.\u521d\u59cb\u5316ROS\u8282\u70b9;\n        3.\u521b\u5efaNodeHandle;\n        4.\u521b\u5efaaction\u5ba2\u6237\u7aef\u5bf9\u8c61;\n        5.\u53d1\u9001\u76ee\u6807\uff0c\u5904\u7406\u53cd\u9988\u4ee5\u53ca\u6700\u7ec8\u7ed3\u679c;\n        6.spin().\n\n*/\ntypedef actionlib::SimpleActionClient&lt;demo01_action::AddIntsAction&gt; Client;\n\n\n//\u5904\u7406\u6700\u7ec8\u7ed3\u679c\nvoid done_cb(const actionlib::SimpleClientGoalState &amp;state, const demo01_action::AddIntsResultConstPtr &amp;result){\n    if (state.state_  state.SUCCEEDED)\n    {\n        ROS_INFO(\"\u6700\u7ec8\u7ed3\u679c:%d\",result-&gt;result);\n    } else {\n        ROS_INFO(\"\u4efb\u52a1\u5931\u8d25\uff01\");\n    }\n\n}\n//\u670d\u52a1\u5df2\u7ecf\u6fc0\u6d3b\nvoid active_cb(){\n    ROS_INFO(\"\u670d\u52a1\u5df2\u7ecf\u88ab\u6fc0\u6d3b....\");\n}\n//\u5904\u7406\u8fde\u7eed\u53cd\u9988\nvoid  feedback_cb(const demo01_action::AddIntsFeedbackConstPtr &amp;feedback){\n    ROS_INFO(\"\u5f53\u524d\u8fdb\u5ea6:%.2f\",feedback-&gt;progress_bar);\n}\n\n\nint main(int argc, char *argv[])\n{\n    setlocale(LC_ALL,\"\");\n    // 2.\u521d\u59cb\u5316ROS\u8282\u70b9;\n    ros::init(argc,argv,\"AddInts_client\");\n    // 3.\u521b\u5efaNodeHandle;\n    ros::NodeHandle nh;\n    // 4.\u521b\u5efaaction\u5ba2\u6237\u7aef\u5bf9\u8c61;\n    // SimpleActionClient(ros::NodeHandle &amp; n, const std::string &amp; name, bool spin_thread = true)\n    // actionlib::SimpleActionClient&lt;demo01_action::AddIntsAction&gt; client(nh,\"addInts\");\n    Client client(nh,\"addInts\",true);\n    //\u7b49\u5f85\u670d\u52a1\u542f\u52a8\n    client.waitForServer();\n    // 5.\u53d1\u9001\u76ee\u6807\uff0c\u5904\u7406\u53cd\u9988\u4ee5\u53ca\u6700\u7ec8\u7ed3\u679c;\n    /*  \n        void sendGoal(const demo01_action::AddIntsGoal &amp;goal, \n            boost::function&lt;void (const actionlib::SimpleClientGoalState &amp;state, const demo01_action::AddIntsResultConstPtr &amp;result)&gt; done_cb, \n            boost::function&lt;void ()&gt; active_cb, \n            boost::function&lt;void (const demo01_action::AddIntsFeedbackConstPtr &amp;feedback)&gt; feedback_cb)\n\n    */\n    demo01_action::AddIntsGoal goal;\n    goal.num = 10;\n\n    client.sendGoal(goal,&amp;done_cb,&amp;active_cb,&amp;feedback_cb);\n    // 6.spin().\n    ros::spin();\n    return 0;\n}\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84spin%28%29%E5%92%8Cspinonce%28%29/","title":"ROS\u4e2d\u7684spin()\u548cspinonce()","text":"<p>spin\u4f7f\u7528</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84spin%28%29%E5%92%8Cspinonce%28%29/#1","title":"1 \u6982\u8ff0","text":"<p>spinonce()\u6e05\u7a7a\u5f53\u524d\u56de\u8c03\u51fd\u6570\u961f\u5217\uff0cspin()\u662fspinonce()\u7684\u5faa\u73af\u8c03\u7528\u3002</p> <p>\u65e0\u8bba\u662fspin()\u8fd8\u662fspinOnce()\u90fd\u662f\u7528\u4e8e\u5904\u7406\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u91cc\u7684\u56de\u8c03\u51fd\u6570\u662f\u6307\u6ce8\u518c\u5728ros\u9ed8\u8ba4callbackQueue\u7684\u56de\u8c03\u51fd\u6570\u3002\u5728spin()\u4e2d\uff0c\u5c06\u5b83\u770b\u6210\u4e00\u4e2a\u5faa\u73af\uff0c\u5c31\u662f\u5728\u4e0d\u65ad\u5728\u5faa\u73af\u4e2d\u5904\u7406\u6240\u6709\u6ce8\u518c\u7684\u56de\u8c03\u51fd\u6570\u3002\u800cspinOnce()\u5219\u662f\u6bcf\u4e00\u6b21\u6267\u884c\u7684\u65f6\u5019\u5904\u7406\u4e00\u6b21\u5168\u90e8\u56de\u8c03\u51fd\u6570\uff08\u56de\u8c03\u51fd\u6570\u6570\u91cf=\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6570\u636e\u6570\u91cf\uff09\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84spin%28%29%E5%92%8Cspinonce%28%29/#2","title":"2 \u5e38\u89c1\u7528\u6cd5","text":"<pre><code>ros::init(argc, argv, \"my_node\");\nros::NodeHandle nh;\nros::Subscriber sub = nh.subscribe(...);\n...\nros::spin();\n</code></pre> <p>spinonce\u4e3b\u52a8\u6e05\u7a7a\u56de\u8c03\u51fd\u6570\u5e8f\u5217\uff0c\u53ef\u4ee5\u4e3b\u52a8\u8bbe\u7f6e\u6e05\u7a7a\u7684\u65f6\u95f4 <pre><code>ros::Rate r(10); // 10 hz\nwhile (should_continue)\n{\n  ... do some work, publish some messages, etc. ...\n  ros::spinOnce();\n  r.sleep();\n}\n</code></pre></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84spin%28%29%E5%92%8Cspinonce%28%29/#3","title":"3 \u5185\u90e8\u7ec6\u8282","text":"<p>\u4e00\u6b21 ros::spinOnce()\u4f1a\u6e05\u7a7a\u5f53\u524d\u56de\u8c03\u51fd\u6570\u961f\u5217\uff0c\u6267\u884c\u4e00\u6b21spinonce()\uff0c\u4f1a\u4f9d\u6b21\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709\u56de\u8c03\u51fd\u6570\uff08\u56de\u8c03\u51fd\u6570\u6570\u91cf=\u5f53\u524d\u6240\u6709\u8ba2\u9605\u8005\u6d88\u606f\u961f\u5217\u7f13\u5b58\u7684\u6d88\u606f\u6570\u4e4b\u548c\uff09\u3002\u6bd4\u5982\u6709\u4e24\u4e2a\u8ba2\u9605\u8005\uff0c\u5728\u6267\u884cspinonce\u65f6\uff0c\u8ba2\u9605\u80051\u7684\u6d88\u606f\u961f\u5217\u67093\u4e2a\u6d88\u606f\uff0c\u8ba2\u9605\u80052\u6d88\u606f\u961f\u5217\u4e2d\u67095\u6d88\u606f\uff0c\u90a3\u4e48\u4f1a\u4f9d\u6b21\u6267\u884c8\u4e2a\u56de\u8c03\u51fd\u6570\u3002 \u5728\u4f9d\u6b21\u6267\u884c\u6bcf\u4e2a\u56de\u8c03\u51fd\u6570\u65f6\uff0c\u4f1a\u5c06\uff08\u6700\u65b0\u7684\uff09\u6d88\u606f\u961f\u5217\u4e2d\u7684\u961f\u9996\u6d88\u606f\u4f20\u5165\u5230\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a talker.cpp <pre><code>//talker node\n/*\n * @Descripttion: \n * @version: \n * @Author: wjh \n * @Date: 2021-06-26 10:45:46\n * @LastEditors: Wen JiaHao\n * @LastEditTime: 2021-12-06 15:33:24\n */\n#include \"ros/ros.h\"\n#include \"std_msgs/String.h\"\n#include \"beginner_tutorials/AddTwoInts.h\"\n#include &lt;ros/console.h&gt;\n#include &lt;sstream&gt;\n\nint main(int argc, char **argv)\n{\n  ros::init(argc, argv, \"talker\");\n  ros::NodeHandle n;\n  ros::Publisher chatter_pub = n.advertise&lt;std_msgs::String&gt;(\"chatter1\", 10);\n  ros::Publisher chatter_pub2 = n.advertise&lt;std_msgs::String&gt;(\"chatter2\", 10);\n  printf(\"cesh222i-------------\\n\");\n  ros::Rate loop_rate(1);/*\u6bcf\u79d2\u53d1\u4e00\u6b21\u6570\u636e*/\n  int count = 0;\n  while (ros::ok())\n  {\n    std_msgs::String msg;\n    std::stringstream ss;\n    std::stringstream ss2;\n    ss &lt;&lt; \"hello world chatter1: \" &lt;&lt; count;\n    ss2 &lt;&lt; \"hello world chatter2: \" &lt;&lt; count;\n    msg.data = ss.str();\n    chatter_pub.publish(msg);\n    msg.data = ss2.str();\n    chatter_pub2.publish(msg);\n    ros::spinOnce();\n    loop_rate.sleep();\n    ++count;\n  }\n</code></pre></p> <p>lisenter.cpp <pre><code>#include \"std_msgs/String.h\"\n#include \"beginner_tutorials/AddTwoInts.h\"\n#include &lt;pthread.h&gt;\nusing namespace std;\n\nint ccount=0;\nros::ServiceClient liftAutoClient;\n\nvoid chatterCallback1(const std_msgs::String::ConstPtr&amp; msg)\n{\n  ROS_INFO(\"I heard: [%s]\", msg-&gt;data.c_str());\n  ccount++;\n  sleep(5);\n}\n\nvoid chatterCallback2(const std_msgs::String::ConstPtr&amp; msg)\n{\n  ROS_INFO(\"I heard: [%s]\", msg-&gt;data.c_str());\n}\n\nint main(int argc, char **argv)\n{\n  ros::init(argc, argv, \"listener\");\n  ros::NodeHandle n;\n  pthread_t idpccount;\n  liftAutoClient=n.serviceClient&lt;beginner_tutorials::AddTwoInts&gt;(\"Add\");\n  //pthread_create(&amp;idpccount, NULL, pPrint, NULL);\n  ros::Subscriber sub = n.subscribe(\"chatter2\", 10, chatterCallback1);\n  ros::Subscriber sub2 = n.subscribe(\"chatter1\", 10, chatterCallback2);\n  sleep(5);//\u542f\u52a8\u540e\u7b49\u5f855\u79d2\n  printf(\"after 5 s\\n\");\n  ros::spinOnce();//\u6267\u884c\u4e00\u6b21\u56de\u8c03\uff0c\u4f60\u8ba4\u4e3a\u662f\u8fde\u7eed5\u4e2a\u6d88\u606f\uff0c\u5b9e\u9645\u56e0\u4e3a\u6bcf\u6b21\u5904\u7406\u65f6\u95f4\u4e3a5\u79d2\uff0c\u540e\u9762\u51e0\u6b21\u7684\u6d88\u606f\u88ab\u6324\u51fa\u4e86\u7f13\u51b2\u533a\uff0c\u8bfb\u5230\u7684\u4e0d\u662f\u6700\u5f00\u59cb\u7684\u6570\u636e\u3002\n  printf(\"hello\\n\");\n  return 0;\n}\n</code></pre></p> <p>\u81ea\u540e\u7ed3\u679c\uff1a <pre><code>wjh@wjh_honor:~/catkin_ws$ rosrun beginner_tutorials listener \nafter 5 s\n[ INFO] [1639467223.128549614]: I heard: [hello world chatter1: 3]\n[ INFO] [1639467223.128777020]: I heard: [hello world chatter2: 3]\n[ INFO] [1639467228.129120414]: I heard: [hello world chatter1: 4]\n[ INFO] [1639467228.129264989]: I heard: [hello world chatter2: 4]\n[ INFO] [1639467233.129756292]: I heard: [hello world chatter1: 8]\n[ INFO] [1639467233.129906551]: I heard: [hello world chatter2: 8]\n[ INFO] [1639467238.130446465]: I heard: [hello world chatter1: 13]\n[ INFO] [1639467238.130619063]: I heard: [hello world chatter2: 13]\n[ INFO] [1639467243.131248178]: I heard: [hello world chatter1: 18]\n[ INFO] [1639467243.131403797]: I heard: [hello world chatter2: 18]\nhello\nwjh@wjh_honor:~/catkin_ws$ \n</code></pre></p> <p>\u4f11\u77205\u79d2\u540e\u6267\u884clisten\u8282\u70b9\u7684spinOnce\u65f6\uff0csub1\u548csub2\u63a5\u6536\u7f13\u51b2\u533a\u6bcf\u4e2a\u7f13\u5b58\u4e865\u4e2a\u6570\u636e \uff087-&gt;6-&gt;5-&gt;4-&gt;3\uff09\uff0c\u56e0\u6b64\u4f1a\u6267\u884c10\u6b21\u6d88\u606f\u56de\u8c03\u51fd\u6570\u3002</p> <p>\u53e6\u5916\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u8ba1\u6570\u503c\u4e0d\u662f\u671f\u671b\u76843\uff0c4\uff0c5\uff0c6\uff0c7\uff0c\u56e0\u4e3a\u6bcf\u6b21\u6253\u5370\u8017\u65f65s\uff0c\u56de\u8c03\u51fd\u6570\u4f1a\u53d6\u6700\u65b0\u7684\u6d88\u606f\u961f\u5217\u7684\u961f\u9996\u3002\u56de\u8c032\u6253\u53703-&gt;\u56de\u8c031\u6253\u53703\uff08\u987a\u5e8f\u4e0d\u5b9a\uff09\uff0c5s\u540e\uff0c\u6d88\u606f\u961f\u5217\u53d8\u4e3a\u4e86\uff1a \uff0812-&gt;11-&gt;10-&gt;9-&gt;8-&gt;7-&gt;6-&gt;5-&gt;4\uff09 \u56de\u8c032\u6253\u53704-&gt;\u56de\u8c031\u6253\u53704\uff08\u987a\u5e8f\u4e0d\u5b9a\uff09\uff0c5s\u540e\uff0c\u6d88\u606f\u961f\u5217\u53d8\u4e3a\u4e86\uff1a \uff0817-&gt;16-&gt;15-&gt;14-&gt;13-&gt;12-&gt;11-&gt;10-&gt;9-&gt;8-&gt;7-&gt;6-&gt;5\uff09\u7531\u4e8e\u961f\u5217\u957f\u5ea6\u4e3a10\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u961f\u5217\u4e3a \uff0817-&gt;16-&gt;15-&gt;14-&gt;13-&gt;12-&gt;11-&gt;10-&gt;9-&gt;8\uff09 \u6240\u4ee5\u7b2c\u4e09\u6b21\u6253\u5370\u65f6\uff0c\u7f13\u51b2\u533a\u7684\u6570\u636e5\uff0c6\uff0c7\u5df2\u7ecf\u88ab\u6324\u51fa\u961f\u5217\u629b\u5f03\u4e86\u3002 \u6b64\u65f6\u56de\u8c032\u6253\u53708-&gt;\u56de\u8c031\u6253\u53708\uff08\u987a\u5e8f\u4e0d\u5b9a\uff09</p> <p>sleep(5)\u65f6\uff0c\u6d88\u606f\u961f\u5217\u67095\u4e2a\u6d88\u606f\uff0c\u4f46\u662f\u6bcf\u4e2a\u6d88\u606f\u56de\u8c03\u6267\u884c\u65f6\u95f4\u4e5f\u662f5\u79d2\uff0c\u56e0\u6b64\u4e0b\u4e00\u6b21\u6267\u884c\u56de\u8c03\u7684\u6d88\u606f\u53ef\u80fd\u65e9\u5df2\u4e0d\u662f\u5f53\u521d\u7684\u6d88\u606f\u3002\u6240\u4ee5\u4e4b\u540e\u8bbe\u8ba1\u6d88\u606f\u63a5\u6536\u65f6\uff0c\u8017\u65f6\u7684\u64cd\u4f5c\u4e0d\u8981\u653e\u5728\u56de\u8c03\u51fd\u6570\u91cc\u3002</p> <p>\u540c\u7406\u5f53\u961f\u5217\u6ee1\u65f6\uff0c\u90a3\u4e48\u4e00\u6b21spinonce\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u6570\u91cf\u4e3a20\u3002 \u5982\u679c\u5ef6\u8fdf\u5f88\u4f4e\uff0c\u961f\u5217\u6ca1\u6709\u963b\u585e\uff0c\u56de\u8c03\u51fd\u6570\u6267\u884c\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u90a3\u4e48\u961f\u5217\u5e94\u8be5\u53ea\u4fdd\u75591\u4e2a\u6570\u636e\uff0c\u90a3\u4e48\u4e00\u6b21spinonce\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u6570\u91cf\u4e3a2\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/","title":"ROS\u4e2d\u7684\u4e00\u4e9b\u5751","text":"<ol> <li> <p>ros\u4e2d\u7f3a\u5c11\u5305\uff0c\u7528apt\u5b89\u88c5\u65f6\uff0c\u63d0\u793a\u627e\u4e0d\u5230\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u52a0\u4e0a\u7248\u672c\uff0c\u6bd4\u5982 <code>apt-get install -q -y ros-noetic-cv-bridge</code></p> </li> <li> <p>ros\u914d\u7f6evscode\u73af\u5883 <pre><code>catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=1\n</code></pre></p> </li> </ol> <p>c_cpp_properties.json <pre><code>\"compileCommands\": \"${workspaceFolder}/build/compile_commands.json\"\n</code></pre></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E8%8A%82%E7%82%B9%E5%90%8D%E7%A7%B0/","title":"ROS\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u548c\u8282\u70b9\u540d\u79f0","text":"<p>\u5728ros\u4e2d\uff1a cmakelists.txt\u548cpackage.xml\u662f\u7528\u6765\u58f0\u660e\u5305\u540d\u79f0\u7684\u3002</p> <p>\u5728cpp\u6587\u4ef6\u4e2d\u7684main\u51fd\u6570\u4e2d\uff0cros::init(argc, argv, \"node_name\")\u662f\u7528\u6765\u58f0\u660e\u8282\u70b9\u540d\u79f0\u7684\u3002\u7279\u522b\u5730\uff0c\u8be5\u51fd\u6570\u8981\u6c42node_name\u4e0d\u80fd\u5e26\u6709\u547d\u540d\u7a7a\u95f4namespace\uff0c\u4e5f\u5c31\u662f\u4e0d\u80fd\u53d6/nodename/namespace\u8fd9\u79cd\u540d\u5b57\u3002\u8fd9\u79cd\u8282\u70b9\u521d\u59cb\u5316\u65b9\u6cd5\u4e00\u822c\u4e0eNodeHandle\u53e5\u67c4\u4e00\u8d77\u4f7f\u7528\u3002</p> <p>\u5728cpp\u6587\u4ef6\u4e2d\u7684main\u51fd\u6570\u4e2d\uff0cros::NodeHandle node_handle(\u201c~\u201d)\u662f\u7528\u6765\u58f0\u540d\u8be5\u8282\u70b9\u7684\u547d\u540d\u7a7a\u95f4\u7684\u3002\u4e00\u822cNodeHandle\u7d27\u8ddfros::init\u5b9a\u4e49\u3002</p> <pre><code># \u521d\u59cb\u5316\u4e00\u4e2aNodeHandle\uff1a\nros::NodeHandle nh;\n# \u521d\u59cb\u5316\u4e00\u4e2aNodeHandle\uff0c\u6307\u5b9a\u5168\u5c40\u7a7a\u95f4/global\nros::NodeHandle nh(\"/global\");\n# \u521d\u59cb\u5316\u4e00\u4e2aNodeHandle\uff0c\u6307\u5b9a\u666e\u901a\u7a7a\u95f4normal\nros::NodeHandle nh(\"normal\")\n# \u521d\u59cb\u5316\u4e00\u4e2aNodeHandle\uff0c\u6307\u5b9a\u79c1\u6709\u7a7a\u95f4private\nros::NodeHandle nh(\"~private\")\n</code></pre> <p>\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff1a <pre><code># \u5047\u8bbenode\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u4e3a/ns\uff0c\u4f7f\u7528\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\nros::init(argv, argc, \"node_name\")\nros::NodeHandle nh(\"/global\")\n# \u6b64\u65f6\u4f7f\u7528nh\u521b\u5efa\u540d\u5b57\u4e3amy_topic\u7684\u8bdd\u9898\nnh.advertise&lt;...&gt;(\"my_topic\")\n# \u5b9e\u9645\u8bdd\u9898\u7684\u540d\u5b57\u4e3a /global/my_topic\n# \u6b64\u65f6nh\u8bbe\u7f6e\u7684\u5404\u79cd\u4e1c\u897f\u540d\u5b57\u90fd\u4e0enode name\u548cnode namespace\u65e0\u5173\n</code></pre></p> <p>\u76f8\u5bf9\u547d\u540d\u7a7a\u95f4\uff08\u9ed8\u8ba4ns\u4e3a\u5168\u5c40\u547d\u540d\u7a7a\u95f4/\uff09\uff1a <pre><code># \u5047\u8bbenode\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u4e3a/ns\uff0c\u4f7f\u7528\u666e\u901a\u547d\u540d\u7a7a\u95f4\uff0c\nros::init(argv, argc, \"node_name\")\nros::NodeHandle nh(\"normal\")\n# \u6b64\u65f6\u4f7f\u7528nh\u521b\u5efa\u540d\u5b57\u4e3amy_topic\u7684\u8bdd\u9898\nnh.advertise&lt;...&gt;(\"my_topic\")\n# \u5b9e\u9645\u8bdd\u9898\u7684\u540d\u5b57\u4e3a /ns/normal/my_topic\n# \u6b64\u65f6nh\u8bbe\u7f6e\u7684\u5404\u79cd\u4e1c\u897f\u540d\u5b57\u90fd\u4e0enode name\u65e0\u5173\uff0c\u4f46\u4e0enode\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u6709\u5173\n</code></pre></p> <p>\u79c1\u6709\u547d\u540d\u7a7a\u95f4\uff1a <pre><code># \u5047\u8bbenode\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u4e3a/ns\uff0c\u4f7f\u7528\u79c1\u6709\u547d\u540d\u7a7a\u95f4\uff0c\nros::init(argv, argc, \"node_name\")\nros::NodeHandle nh(\"~private\")\n# \u6b64\u65f6\u4f7f\u7528nh\u521b\u5efa\u540d\u5b57\u4e3amy_topic\u7684\u8bdd\u9898\nnh.advertise&lt;...&gt;(\"my_topic\")\n# \u5b9e\u9645\u8bdd\u9898\u7684\u540d\u5b57\u4e3a /ns/node_name/private/my_topic\n# \u6b64\u65f6nh\u8bbe\u7f6e\u7684\u5404\u79cd\u4e1c\u897f\u540d\u5b57\u4e0enode name\u548cns\u76f8\u5173\n</code></pre></p> <p><pre><code># \u4e00\u3001\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\nros::NodeHandle nh;\n# \u7b49\u4ef7\u4e8e \n# \u4e8c\u3001\u4f7f\u7528\u666e\u901a\u547d\u540d\u7a7a\u95f4 \"\"\nros::NodeHandle nh(\"\");\n# \u53e5\u67c4\u4e00\u548c\u4e8c\u7684\u547d\u540d\u7a7a\u95f4\u4e3a /node_namespace/\n\n# \u4e09\u3001\u4f7f\u7528\u79c1\u6709\u547d\u540d\u7a7a\u95f4 \"~\"\nros::NodeHandle nh(\"~\")\n# \u53e5\u67c4\u4e09\u7684\u547d\u540d\u7a7a\u95f4\u4e3a /node_namespace/node_name/\n</code></pre> https://blog.csdn.net/qq_41035283/article/details/120679237</p> <p>\u6ce8\u610f\uff1a\u5982\u679ctopic\u4e2d\u76f4\u63a5\u4f7f\u7528\u4e86\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u90a3\u4e48\uff0c\u6b64\u65f6\u4e0d\u7ba1\u53e5\u67c4\u662f\u5426\u79c1\u6709\u5316\uff0c\u53d1\u5e03\u7684\u8bdd\u9898\u90fd\u662f\u5168\u5c40\u7684 /person_info <pre><code>ros::Publisher person_info_pub = n.advertise&lt;learning_topic::Person&gt;(\"/person_info\", 10);\n//\u5b9e\u9645\u8bdd\u9898\u7684\u540d\u5b57\u4e3a /person_info\n</code></pre></p> <p>\u8865\u5145demo <pre><code>// launch \u6587\u4ef6\u4e2d ns\"node_namespace\"\nros::init(argc, argv, \"node_name\"); // node name\nros::NodeHandle n; //n \u547d\u540d\u7a7a\u95f4\u4e3a/node_namespace\nros::NodeHandle n1(\"sub\"); // n1\u547d\u540d\u7a7a\u95f4\u4e3a/node_namespace/sub\nros::NodeHandle n2(n1,\"sub2\");// n2\u547d\u540d\u7a7a\u95f4\u4e3a/node_namespace/sub/sub2\nros::NodeHandle pn1(\"~\"); //pn1 \u547d\u540d\u7a7a\u95f4\u4e3a/node_namespace/node_name\nros::NodeHandle pn2(\"~sub\"); //pn2 \u547d\u540d\u7a7a\u95f4\u4e3a/node_namespace/node_name/sub\nros::NodeHandle pn3(\"~/sub\"); //pn3 \u547d\u540d\u7a7a\u95f4\u4e3a/node_namespace/node_name/sub\nros::NodeHandle gn(\"/global\"); // gn \u547d\u540d\u7a7a\u95f4\u4e3a/global\n</code></pre></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E8%8A%82%E7%82%B9%E5%90%8D%E7%A7%B0/#1","title":"1. \u6982\u8ff0","text":"<p>ros\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u53ea\u8981\u5206\u4e3a\u4e09\u7c7b\uff1a\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u3001\u76f8\u5bf9\u547d\u540d\u7a7a\u95f4\u3001\u79c1\u6709\u547d\u540d\u7a7a\u95f4\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684topic</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E8%8A%82%E7%82%B9%E5%90%8D%E7%A7%B0/#2","title":"2.\u5168\u5c40\u540d\u79f0","text":"<p>\u4ee5\u201c/\u201d\u5f00\u5934\u7684\u8282\u70b9\u540d \u8bdd\u9898\u540d\u8868\u793a\u5176\u5c5e\u4e8e\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u88ab\u79f0\u4e3a\u5168\u5c40\u540d\u79f0\uff0c\u5728\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u5177\u6709\u7edd\u5bf9\u7684\u610f\u5473</p> <p>\u4f8b\u5982 /turtlesim /turtle1/cmd_vel /A/B/C/D/E</p> <p>\u5f53\u4ee5\u5168\u5c40\u540d\u79f0\u8ba2\u9605\u4e00\u4e2atopic\u7684\u65f6\u5019\uff0c\u8282\u70b9\u53ea\u4f1a\u5bfb\u627e\u8fd9\u4e2a\u5168\u5c40\u540d\u79f0\uff0c\u6bd4\u5982\u4f60\u8ba2\u9605\u4e86/A/cmd_vel\uff0c\u8282\u70b9\u4e0d\u4f1a\u63a5\u6536 /cmd_vel\u6216\u8005/B/cmd_vel\u6216\u8005/X/A/cmd_vel</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E8%8A%82%E7%82%B9%E5%90%8D%E7%A7%B0/#3","title":"3. \u76f8\u5bf9\u540d\u79f0","text":"<p>\u76f8\u5bf9\u540d\u79f0\u6ca1\u6709\u201c/\u201d</p> <p>\u4f8b\u5982 turtlesim turtle1/cmd_vel A/B/C/D/E</p> <p>ROS\u4f1a\u4e3a\u76f8\u5bf9\u540d\u79f0\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u7684\u547d\u540d\u7a7a\u95f4(\u9ed8\u8ba4\u4e3a\u201c/\u201d)\uff0c\u4f46\u4f60\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8282\u70b9\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4\u3002\u4e3b\u8981\u6709\u547d\u4ee4\u884c\u548claunch\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <p>1.\u547d\u4ee4\u884c\u65b9\u5f0f\uff1a     \u5927\u90e8\u5206ROS\u7a0b\u5e8f\u63a5\u53d7\u53eb__ns\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u6b64\u53c2\u6570\u5c06\u4e3a\u7a0b\u5e8f\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4\u3002     \u4f8b\u5982\uff1arosrun turtlesim turtlesim_node __ns:=/my     turtlesim\u53d8\u4e3a/my/turtlesim</p> <p>2.\u4e00\u822c\u5728launch\u6587\u4ef6\u91cc\u4f7f\u7528\u547d\u540d\u7a7a\u95f4 <pre><code>&lt;launch&gt;\n    &lt;group ns=\"ABC\"&gt;\n    &lt;include file=\"$(find velodyne_pointcloud)/launch/32e_points.launch\"&gt;\n    &lt;/include&gt;\n    &lt;/group&gt;\n&lt;/launch&gt;\n</code></pre></p> <p>\u8fd9\u91cc\u5c31\u5c06\u6574\u4e2alaunch\u91cc\u7684\u8282\u70b9\u90fd\u5e26\u4e0a\u4e86\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4/ABC(\u5305\u62ec\u8ba2\u9605\u7684\u8282\u70b9)</p> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0 \uff11\uff0e\u5f53\u6709\u5f88\u591a\u5c42\u547d\u540d\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u5199\u8fd9\u4e9b\u8bdd\u9898\u540d\u4f1a\u8ba9\u4f60\u5f88\u96be\u53d7\uff0c\u6bd4\u5982/a/b/c/d/e/cmd_vel\uff0c\u4f60\u53ef\u80fd\u82b1\u8d39\u5927\u628a\u7684\u65f6\u95f4\u7528\u6765\u5199\u540d\u79f0\uff0c\u5e76\u4e14\u5bb9\u6613\u5bfc\u81f4\u5931\u8bef\u3002\u8fd9\u65f6\u5019\uff0c\u4e00\u4e2a\u597d\u7684\u9009\u62e9\u662f\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0\u3002 \uff12\uff0e\u65b9\u4fbf\u79fb\u690d\uff0c\u5f53\u4f60\u79fb\u690d\u522b\u4eba\u7684\u8282\u70b9\u5230\u4f60\u7684\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5982\u679c\u522b\u4eba\u4f7f\u7528\u7684\u90fd\u662f\u5168\u5c40\u540d\u79f0\uff0c\u4f60\u4e0d\u5f97\u4e0d\u5728\u5176\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\u6765\u9632\u6b62\u8282\u70b9\u53d1\u751f\u540d\u79f0\u51b2\u7a81\u3002\u5982\u679c\u522b\u4eba\u4f7f\u7528\u7684\u662f\u76f8\u5bf9\u540d\u79f0\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u6765\u5feb\u901f\u7684\u79fb\u690d\uff0c\u4e5f\u6709\u6709\u5229\u4e8e\u7cfb\u7edf\u7ed3\u6784\u7684\u6e05\u6670\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E8%8A%82%E7%82%B9%E5%90%8D%E7%A7%B0/#4","title":"4. \u79c1\u6709\u540d\u79f0","text":"<p>\u79c1\u6709\u540d\u79f0\u4ee5\u4e00\u4e2a\u6ce2\u6d6a\u5b57\u7b26\uff08\u201c\uff5e\u201d\uff09\u5f00\u5934 \u79c1\u6709\u540d\u79f0\u4e5f\u4e0d\u80fd\u591f\u5b8c\u5168\u786e\u5b9a\u5b83\u4eec\u81ea\u8eab\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u548c\u76f8\u5bf9\u540d\u79f0\u7684\u533a\u522b\u662f\uff1a\u79c1\u6709\u540d\u79f0\u4f7f\u7528\u7684\u4e0d\u662f\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u662f\u7528\u5b83\u4eec\u7684\u8282\u70b9\u540d\u79f0\u4f5c\u4e3a\u547d\u540d\u7a7a\u95f4</p> <p>\u4f8b\u5982 <pre><code>ros::init(argc, argv, \"name\");//\u58f0\u660enode name\nros::NodeHandle nh(\"~\");   //\u521b\u9020\u53e5\u67c4\u7684\u65f6\u5019\u6307\u660e\u4e86\u5176\u547d\u540d\u7a7a\u95f4\u4e3a**\u79c1\u6709\u547d\u540d\u7a7a\u95f4**\nros::Subscriber sub = nh.subscribe(\"topic\", ...);  //\u8ba2\u9605\u7684\u8bdd\u9898\u662f name/topic\nros::Publisher  pub = nh.advertise(\"topic\", ...);  //\u53d1\u5e03\u7684\u8bdd\u9898\u662f nmae/topic\n</code></pre></p> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u79c1\u6709\u540d\u79f0 \u6bcf\u4e2a\u8282\u70b9\u5185\u90e8\u90fd\u6709\u4e00\u4e9b\u8d44\u6e90\uff0c\u8fd9\u4e9b\u8d44\u6e90\u53ea\u4e0e\u672c\u8282\u70b9\u76f8\u5173\uff0c\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u8282\u70b9\u6253\u4ea4\u9053\uff0c\u8fd9\u65f6\u5019\u4e3a\u4e86\u5b89\u5168\u6211\u4eec\u4f7f\u7528\u79c1\u6709\u540d\u79f0\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/","title":"ROS\u4e2d\u7684\u63d2\u4ef6\u7ba1\u7406","text":"<p>\u63d2\u4ef6\u7ba1\u7406</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#1","title":"1 \u6982\u8ff0","text":"<p>pluginlib\u662f\u4e00\u4e2ac++\u5e93\uff0c \u7528\u6765\u4ece\u4e00\u4e2aROS\u529f\u80fd\u5305\u4e2d\u52a0\u8f7d\u548c\u5378\u8f7d\u63d2\u4ef6(plugin)\u3002\u63d2\u4ef6\u662f\u6307\u4ece\u8fd0\u884c\u65f6\u5e93\u4e2d\u52a8\u6001\u52a0\u8f7d\u7684\u7c7b\u3002\u901a\u8fc7\u4f7f\u7528Pluginlib\uff0c\u4e0d\u5fc5\u5c06\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u663e\u5f0f\u5730\u94fe\u63a5\u5230\u5305\u542b\u67d0\u4e2a\u7c7b\u7684\u5e93\uff0cPluginlib\u53ef\u4ee5\u968f\u65f6\u6253\u5f00\u5305\u542b\u7c7b\u7684\u5e93\uff0c\u800c\u4e0d\u9700\u8981\u5e94\u7528\u7a0b\u5e8f\u4e8b\u5148\u77e5\u9053\u5305\u542b\u7c7b\u5b9a\u4e49\u7684\u5e93\u6216\u8005\u5934\u6587\u4ef6\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#2","title":"2 \u4f7f\u7528\u65b9\u5f0f","text":"<p>\u9700\u6c42:</p> <p>\u4ee5\u63d2\u4ef6\u7684\u65b9\u5f0f\u5b9e\u73b0\u6b63\u591a\u8fb9\u5f62\u7684\u76f8\u5173\u8ba1\u7b97\u3002</p> <p>\u5b9e\u73b0\u6d41\u7a0b:</p> <ol> <li> <p>\u51c6\u5907\uff1b</p> </li> <li> <p>\u521b\u5efa\u57fa\u7c7b\uff1b</p> </li> <li> <p>\u521b\u5efa\u63d2\u4ef6\u7c7b\uff1b</p> </li> <li> <p>\u6ce8\u518c\u63d2\u4ef6;</p> </li> <li> <p>\u6784\u5efa\u63d2\u4ef6\u5e93;</p> </li> <li> <p>\u4f7f\u63d2\u4ef6\u53ef\u7528\u4e8eROS\u5de5\u5177\u94fe;</p> <ul> <li> <p>\u914d\u7f6exml</p> </li> <li> <p>\u5bfc\u51fa\u63d2\u4ef6</p> </li> </ul> </li> <li> <p>\u4f7f\u7528\u63d2\u4ef6;</p> </li> <li> <p>\u6267\u884c\u3002</p> </li> </ol>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#21","title":"2.1 \u521b\u5efa\u57fa\u7c7b","text":"<p>\u5728 xxx/include/xxx\u4e0b\u65b0\u5efaC++\u5934\u6587\u4ef6: polygon_base.h\uff0c\u6240\u6709\u7684\u63d2\u4ef6\u7c7b\u90fd\u9700\u8981\u7ee7\u627f\u6b64\u57fa\u7c7b\uff0c\u5185\u5bb9\u5982\u4e0b:</p> <p><pre><code>#ifndef XXX_POLYGON_BASE_H_\n#define XXX_POLYGON_BASE_H_\n\nnamespace polygon_base\n{\n  class RegularPolygon\n  {\n    public:\n      virtual void initialize(double side_length) = 0;\n      virtual double area() = 0;\n      virtual ~RegularPolygon(){}\n\n    protected:\n      RegularPolygon(){}\n  };\n};\n#endif\n</code></pre> PS:\u57fa\u7c7b\u5fc5\u987b\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u5173\u4e8e\u591a\u8fb9\u5f62\u7684\u8fb9\u957f\u6ca1\u6709\u901a\u8fc7\u6784\u9020\u51fd\u6570\u800c\u662f\u901a\u8fc7\u5355\u72ec\u7f16\u5199\u7684initialize\u51fd\u6570\u4f20\u53c2\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#22","title":"2.2 \u521b\u5efa\u63d2\u4ef6\u7c7b","text":"<p>\u5728 xxx/include/xxx\u4e0b\u65b0\u5efaC++\u5934\u6587\u4ef6:polygon_plugins.h\uff0c\u5185\u5bb9\u5982\u4e0b: <pre><code>#ifndef XXX_POLYGON_PLUGINS_H_\n#define XXX_POLYGON_PLUGINS_H_\n#include &lt;xxx/polygon_base.h&gt;\n#include &lt;cmath&gt;\n\nnamespace polygon_plugins\n{\n  class Triangle : public polygon_base::RegularPolygon\n  {\n    public:\n      Triangle(){}\n\n      void initialize(double side_length)\n      {\n        side_length_ = side_length;\n      }\n\n      double area()\n      {\n        return 0.5 * side_length_ * getHeight();\n      }\n\n      double getHeight()\n      {\n        return sqrt((side_length_ * side_length_) - ((side_length_ / 2) * (side_length_ / 2)));\n      }\n\n    private:\n      double side_length_;\n  };\n\n  class Square : public polygon_base::RegularPolygon\n  {\n    public:\n      Square(){}\n\n      void initialize(double side_length)\n      {\n        side_length_ = side_length;\n      }\n\n      double area()\n      {\n        return side_length_ * side_length_;\n      }\n\n    private:\n      double side_length_;\n\n  };\n};\n#endif\n</code></pre></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#23","title":"2.3 \u6ce8\u518c\u63d2\u4ef6","text":"<p>\u5728 src \u76ee\u5f55\u4e0b\u65b0\u5efa polygon_plugins.cpp \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b:</p> <pre><code>//pluginlib \u5b8f\uff0c\u53ef\u4ee5\u6ce8\u518c\u63d2\u4ef6\u7c7b\n#include &lt;pluginlib/class_list_macros.h&gt;\n#include &lt;xxx/polygon_base.h&gt;\n#include &lt;xxx/polygon_plugins.h&gt;\n\n//\u53c2\u65701:\u884d\u751f\u7c7b \u53c2\u65702:\u57fa\u7c7b\nPLUGINLIB_EXPORT_CLASS(polygon_plugins::Triangle, polygon_base::RegularPolygon)\nPLUGINLIB_EXPORT_CLASS(polygon_plugins::Square, polygon_base::RegularPolygon)\n</code></pre> <p>\u8be5\u6587\u4ef6\u4f1a\u5c06\u4e24\u4e2a\u884d\u751f\u7c7b\u6ce8\u518c\u4e3a\u63d2\u4ef6\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#24","title":"2.4 \u6784\u5efa\u63d2\u4ef6\u5e93","text":"<pre><code>include_directories(include)\nadd_library(polygon_plugins src/polygon_plugins.cpp)\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#25-xml","title":"2.5 \u914d\u7f6exml","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa\u6587\u4ef6:polygon_plugins.xml,\u5185\u5bb9\u5982\u4e0b:</p> <pre><code>&lt;!-- \u63d2\u4ef6\u5e93\u7684\u76f8\u5bf9\u8def\u5f84 --&gt;\n&lt;library path=\"lib/libpolygon_plugins\"&gt;\n  &lt;!-- type=\"\u63d2\u4ef6\u7c7b\" base_class_type=\"\u57fa\u7c7b\" --&gt;\n  &lt;class type=\"polygon_plugins::Triangle\" base_class_type=\"polygon_base::RegularPolygon\"&gt;\n    &lt;!-- \u63cf\u8ff0\u4fe1\u606f --&gt;\n    &lt;description&gt;This is a triangle plugin.&lt;/description&gt;\n  &lt;/class&gt;\n  &lt;class type=\"polygon_plugins::Square\" base_class_type=\"polygon_base::RegularPolygon\"&gt;\n    &lt;description&gt;This is a square plugin.&lt;/description&gt;\n  &lt;/class&gt;\n&lt;/library&gt;\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#26","title":"2.6\u5bfc\u51fa\u63d2\u4ef6","text":"<p>package.xml\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u5185\u5bb9\u5982\u4e0b:</p> <pre><code>&lt;export&gt;\n  &lt;xxx plugin=\"${prefix}/polygon_plugins.xml\" /&gt;\n&lt;/export&gt;\n</code></pre> <p>\u6807\u7b7e\u7684\u540d\u79f0\u5e94\u4e0e\u57fa\u7c7b\u6240\u5c5e\u7684\u529f\u80fd\u5305\u540d\u79f0\u4e00\u81f4\uff0cplugin\u5c5e\u6027\u503c\u4e3a\u4e0a\u4e00\u6b65\u4e2d\u521b\u5efa\u7684xml\u6587\u4ef6\u3002</p> <p>\u7f16\u8bd1\u540e\uff0c\u53ef\u4ee5\u8c03\u7528<code>rospack plugins --attrib=plugin xxx</code>\u547d\u4ee4\u67e5\u770b\u914d\u7f6e\u662f\u5426\u6b63\u5e38\uff0c\u5982\u65e0\u5f02\u5e38\uff0c\u4f1a\u8fd4\u56de .xml \u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u63d2\u4ef6\u5df2\u7ecf\u6b63\u786e\u7684\u96c6\u6210\u5230\u4e86ROS\u5de5\u5177\u94fe\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#27","title":"2.7 \u4f7f\u7528\u63d2\u4ef6","text":"<p>src \u4e0b\u65b0\u5efac++\u6587\u4ef6:polygon_loader.cpp\uff0c\u5185\u5bb9\u5982\u4e0b:</p> <pre><code>//\u7c7b\u52a0\u8f7d\u5668\u76f8\u5173\u7684\u5934\u6587\u4ef6\n#include &lt;pluginlib/class_loader.h&gt;\n#include &lt;xxx/polygon_base.h&gt;\n\nint main(int argc, char** argv)\n{\n  //\u7c7b\u52a0\u8f7d\u5668 -- \u53c2\u65701:\u57fa\u7c7b\u529f\u80fd\u5305\u540d\u79f0 \u53c2\u65702:\u57fa\u7c7b\u5168\u9650\u5b9a\u540d\u79f0\n  pluginlib::ClassLoader&lt;polygon_base::RegularPolygon&gt; poly_loader(\"xxx\", \"polygon_base::RegularPolygon\");\n\n  try\n  {\n    //\u521b\u5efa\u63d2\u4ef6\u7c7b\u5b9e\u4f8b -- \u53c2\u6570:\u63d2\u4ef6\u7c7b\u5168\u9650\u5b9a\u540d\u79f0\n    boost::shared_ptr&lt;polygon_base::RegularPolygon&gt; triangle = poly_loader.createInstance(\"polygon_plugins::Triangle\");\n    triangle-&gt;initialize(10.0);\n\n    boost::shared_ptr&lt;polygon_base::RegularPolygon&gt; square = poly_loader.createInstance(\"polygon_plugins::Square\");\n    square-&gt;initialize(10.0);\n\n    ROS_INFO(\"Triangle area: %.2f\", triangle-&gt;area());\n    ROS_INFO(\"Square area: %.2f\", square-&gt;area());\n  }\n  catch(pluginlib::PluginlibException&amp; ex)\n  {\n    ROS_ERROR(\"The plugin failed to load for some reason. Error: %s\", ex.what());\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/#28","title":"2.8 \u6267\u884c","text":"<p>\u4fee\u6539CMakeLists.txt\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b:</p> <pre><code>add_executable(polygon_loader src/polygon_loader.cpp)\ntarget_link_libraries(polygon_loader ${catkin_LIBRARIES})\n</code></pre> <p>\u7f16\u8bd1\u7136\u540e\u6267\u884c:polygon_loader\uff0c\u7ed3\u679c\u5982\u4e0b:</p> <pre><code>[ INFO] [WallTime: 1279658450.869089666]: Triangle area: 43.30\n[ INFO] [WallTime: 1279658450.869138007]: Square area: 100.00\n</code></pre>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%97%B6%E9%97%B4%E6%A6%82%E5%BF%B5/","title":"ROS\u4e2d\u7684\u65f6\u95f4\u6982\u5ff5","text":"<p>\u5728rviz\u4e2d\u53ef\u4ee5\u770b\u5230ros\u4e2d\u76f8\u5173\u7684\u65f6\u95f4\u6982\u5ff5\u4e00\u5171\u6709\u56db\u4e2a\uff1a ROS Time\uff1aROS\u4e2d\u7684\u4eff\u771f\u65f6\u95f4\uff0c\u5982\u679c\u8ba1\u7b97\u91cf\u5c0f\uff0c\u4f1a\u8d70\u7684\u975e\u5e38\u5feb\uff0c\u5b83\u662f\u5f53\u524d\u65f6\u95f4\u5230ROSmaster\u542f\u52a8\u7684\u4eff\u771f\u65f6\u95f4\u5dee\u3002\u4ed6\u7684\u65f6\u95f4\u4e0erviz\u5f00\u542f\u4e0e\u5426\u65e0\u5173\u3002 ROS Elapsed\uff1arviz\u5f00\u542f\u7684\u65f6\u95f4\u5230\u5f53\u524d\u65f6\u95f4\u7684ROS\u4e16\u754c\u7684\u65f6\u95f4\u5dee Wall Time\uff1a\u7cfb\u7edf\u65f6\u95f4 Wall Elapsed\uff1arviz\u5f00\u542f\u7684\u65f6\u95f4\u5230\u5f53\u524d\u65f6\u95f4\u7684\u7cfb\u7edf\u65f6\u95f4\u5dee</p> <p>\u603b\u7ed3\uff1aWall Elapsed\u548cROS Elapsed\u548crviz\u5f00\u542f\u7684\u65f6\u95f4\u6709\u5173\uff0cROS Time\u548cWall Time\u4e00\u4e2a\u662f\u4eff\u771f\u65f6\u95f4\uff0c\u4e00\u4e2a\u662f\u7cfb\u7edf\u65f6\u95f4 </p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/","title":"ROS\u4e2d\u7684\u6784\u5efa\u5de5\u5177","text":""},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#1","title":"1\u6784\u5efa\u5de5\u5177\u5206\u7c7b","text":""},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#11-catkin_makeros1","title":"1.1 catkin_make(ros1)","text":"<p>\u6700\u65e9\u7684\u6784\u5efa\u5de5\u5177\uff0c\u8be5\u6784\u5efa\u5de5\u5177\u4ec5\u8c03\u7528CMake\u4e00\u6b21\uff0c\u5e76\u4f7f\u7528CMake\u7684\u51fd\u6570 add_subdirectory()\u5728\u5355\u4e00\u73af\u5883\u4e2d\u5904\u7406\u6240\u6709\u8f6f\u4ef6\u5305\u3002\u4f46\u8be5\u65b9\u6cd5\u4e5f\u6709\u660e\u663e\u7684\u7f3a\u70b9\u3002\u5f52\u56e0\u4e8e\u5355\u4e00\u73af\u5883\uff0c\u6240\u6709\u8f6f\u4ef6\u5305\u4e2d\u7684\u6240\u6709\u51fd\u6570\u540d\u79f0\u3001\u76ee\u6807\u548c\u6d4b\u8bd5\u90fd\u5171\u4eab\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u5f53\u8f6f\u4ef6\u5305\u7684\u89c4\u6a21\u66f4\u5927\u65f6\u5f88\u5bb9\u6613\u5bfc\u81f4\u51b2\u7a81\u3002</p> <p>\u6784\u5efa\u5de5\u5177catkin_make \u652f\u6301\u4ee5\u4e0b\u8f6f\u4ef6\u5305\u7684\u6784\u5efa\uff1a \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684 ROS 1 catkin\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#12-catkin_make_isolatedros1","title":"1.2 catkin_make_isolated(ros1)","text":"<p>\u6784\u5efa\u5de5\u5177catkin_make_isolated\u4e5f\u662f\u7531\u5305\u542bROS 1\u6784\u5efa\u7cfb\u7edf\u7684ROS\u8f6f\u4ef6\u5305catkin\u63d0\u4f9b\u7684\u3002\u8be5\u6784\u5efa\u5de5\u5177\u662f\u5728catkin_make\u4e4b\u540e\u5f00\u53d1\u7684\uff0c\u7528\u4e8e\u89e3\u51b3\u5728\u5355\u4e00CMake\u73af\u5883\u4e2d\u6784\u5efa\u591a\u4e2a\u8f6f\u4ef6\u5305\u6240\u6d89\u53ca\u7684\u95ee\u9898\u3002</p> <p>\u8be5\u6784\u5efa\u5de5\u5177\u4ec5\u652f\u6301\u57fa\u4e8eCMake\u7684\u8f6f\u4ef6\u5305\uff0c\u5e76\u4f7f\u7528CMake\u8f6f\u4ef6\u5305\u901a\u7528\u7684\u547d\u4ee4\u5e8f\u5217\u6309\u7167\u62d3\u6251\u987a\u5e8f\u6784\u5efa\u6bcf\u4e2a\u8f6f\u4ef6\u5305\uff0c\u5176\u547d\u4ee4\u987a\u5e8f\u4e3a\uff1acmake\u3001make\u3001make install\u3002</p> <p>\u76f8\u5bf9\u4e8ecatkin_make\u6765\u8bf4\uff0c\u4e0d\u518d\u5171\u4eab\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u5404\u4e2a\u5305\u76f8\u4e92\u9694\u79bb\uff0c\u4f1a\u591a\u6b21\u8c03\u7528cmake\u547d\u4ee4\uff0c\u6bcf\u4e2a\u8f6f\u4ef6\u5305\u4e00\u6b21\u3002 \u867d\u7136\u6bcf\u4e2a\u8f6f\u4ef6\u5305\u90fd\u53ef\u4ee5\u5e76\u884c\u5316\u5176\u76ee\u6807\u7684\u6784\u5efa\uff0c\u4f46\u5373\u4f7f\u5b83\u4eec\u4e0d\u5b58\u5728\u76f8\u4e92\uff08\u9012\u5f52\uff09\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e5f\u4f1a\u6309\u987a\u5e8f\u5904\u7406\u5404\u4e2a\u8f6f\u4ef6\u5305\u3002\u6784\u5efa\u901f\u5ea6\u8f83\u6162\u3002</p> <p>\u6784\u5efa\u5de5\u5177catkin_make_isolated\u652f\u6301\u4ee5\u4e0b\u8f6f\u4ef6\u5305\u7684\u6784\u5efa\uff1a \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684 ROS 1 catkin\u8f6f\u4ef6\u5305\u3002 \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684\u7eafCMake\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#13-catkin_toolsros1","title":"1.3 catkin_tools(ros1)","text":"<p>\u6784\u5efa\u5de5\u5177catkin_tools\u662f\u7531\u7528\u4e8e\u6784\u5efaROS 1\u8f6f\u4ef6\u5305\u7684\u72ec\u7acbPython\u8f6f\u4ef6\u5305\u63d0\u4f9b\u7684\u3002\u8be5\u6784\u5efa\u5de5\u5177\u662f\u5728catkin_make / catkin_make_isolated\u4e4b\u540e\u5f00\u53d1\u7684\uff0c\u7528\u4e8e\u5e76\u884c\u6784\u5efa\u591a\u4e2a\u8f6f\u4ef6\u5305\u5e76\u63d0\u4f9b\u663e\u8457\u7684\u53ef\u7528\u6027\u6539\u8fdb\u3002\u8be5\u6784\u5efa\u5de5\u5177\u652f\u6301\u6784\u5efaCMake\u8f6f\u4ef6\u5305\u5e76\u4e14\u5355\u72ec\u6784\u5efa\u8fd9\u4e9b\u8f6f\u4ef6\u5305\uff0c\u4ee5\u53ca\u652f\u6301\u8de8\u8f6f\u4ef6\u5305\u5e76\u884c\u5904\u7406\u8fc7\u7a0b\u3002</p> <p>\u4f7f\u7528\u65b9\u5f0f\u4e3acatkin build\uff0c\u8be5\u6784\u5efa\u65b9\u5f0f\u540c\u65f6\u5177\u67091.1\u548c1.2\u7684\u4f18\u70b9</p> <p>\u6784\u5efa\u5de5\u5177catkin_tools \u652f\u6301\u4ee5\u4e0b\u8f6f\u4ef6\u5305\u7684\u6784\u5efa\uff1a \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684ROS 1 catkin\u8f6f\u4ef6\u5305\u3002 \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684\u7eafCMake\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#14-ament_toolsros2","title":"1.4 ament_tools(ros2) \u5df2\u5f03\u7528","text":"<p>\u6784\u5efa\u5de5\u5177ament_tools\u662f\u7531\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u7528\u4e8e\u6784\u5efaROS 2\u8f6f\u4ef6\u5305\u7684Python 3\u8f6f\u4ef6\u5305\u63d0\u4f9b\u7684\u3002\u8be5\u6784\u5efa\u5de5\u5177\u662f\u4e3a\u5f15\u5bfcROS 2\u9879\u76ee\u800c\u5f00\u53d1\u7684\uff0c\u56e0\u6b64\u4ec5\u9488\u5bf9Python 3\u4e14\u9002\u7528\u4e8eLinux\u3001MacOS\u548cWindows\u3002 - \u9664\u4e86\u652f\u6301CMake\u8f6f\u4ef6\u5305\u6784\u5efa\u4e4b\u5916\uff0c\u8be5\u6784\u5efa\u5de5\u5177\u8fd8\u652f\u6301Python\u8f6f\u4ef6\u5305\u7684\u6784\u5efa\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u65e0\u663e\u5f0f\u8f6f\u4ef6\u5305\u6e05\u5355\u7684\u60c5\u51b5\u4e0b\u63a8\u65ad\u5176\u5143\u4fe1\u606f\uff08\u4f8b\u5982\u7528\u4e8e\u6784\u5efaFastRTPS\u8f6f\u4ef6\u5305\uff09\u3002 - \u50cf catkin_make_isolated \u548c catkin_tools\u4e00\u6837\uff0c\u8be5\u6784\u5efa\u5de5\u5177\u4f1a\u6267\u884c\u201c\u9694\u79bb\u201d\u6784\u5efa\uff08\u6bcf\u4e2a\u8f6f\u4ef6\u5305\u9700\u8981\u4e00\u6b21CMake\u8c03\u7528\uff09\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u5bf9\u76f8\u4e92\u6ca1\u6709\uff08\u9012\u5f52\uff09\u4f9d\u8d56\u5173\u7cfb\u7684\u8f6f\u4ef6\u5305\u8fdb\u884c\u5e76\u884c\u6784\u5efa\uff08\u50cfcatkin_tools\u4e00\u6837\uff09\u3002\u867d\u7136\u8be5\u6784\u5efa\u5de5\u5177\u6bd4catkin_tools\u8986\u76d6\u4e86\u66f4\u591a\u7684\u6784\u5efa\u7cfb\u7edf\u548c\u5e73\u53f0\uff0c\u4f46\u5b83\u6ca1\u6709catkin_tools\u6784\u5efa\u5de5\u5177\u6240\u62e5\u6709\u7684\u4efb\u4f55\u53ef\u7528\u6027\u529f\u80fd\uff0c\u5982\u914d\u7f6e\u6587\u4ef6\u3001\u8f93\u51fa\u5904\u7406\u7b49\u3002</p> <p>\u6784\u5efa\u5de5\u5177ament_tools\u652f\u6301\u4ee5\u4e0b\u8f6f\u4ef6\u5305\u7684\u6784\u5efa\uff1a \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684 ROS 2 ament_cmake\u8f6f\u4ef6\u5305\uff08\u4ec5\u652f\u6301\u683c\u5f0f 2\uff09\u3002 \u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684\u7eafCMake\u8f6f\u4ef6\u5305\u3002</p> <p>\u25cf \u6ca1\u6709\u6e05\u5355\u6587\u4ef6\u7684\u7eafCMake\u8f6f\u4ef6\u5305\uff08\u4eceCMake\u6587\u4ef6\u4e2d\u63d0\u53d6\u8f6f\u4ef6\u5305\u540d\u79f0\u548c\u4f9d\u8d56\u5305\uff09\u3002</p> <p>\u25cf \u5e26\u6709package.xml\u6587\u4ef6\u7684Python\u8f6f\u4ef6\u5305\u3002 \u25cf \u6ca1\u6709\u6e05\u5355\u6587\u4ef6\u7684Python\u8f6f\u4ef6\u5305\uff08\u4ecesetup.py\u6587\u4ef6\u4e2d\u63d0\u53d6\u8f6f\u4ef6\u5305\u540d\u79f0\u548c\u4f9d\u8d56\u5305\uff09\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#12-colconros2","title":"1.2 colcon(ros2)","text":"<p>colcon\u662f\u4e3aROS 2\u5f00\u53d1\u7684\u65b0\u6784\u5efa\u5de5\u5177\uff0c\u4e0ecatkin_tools\u7c7b\u4f3c\uff0c\u4f46\u76ee\u524d\u53ef\u7528\u6027\u529f\u80fd\u8f83\u5c11\uff0c\u4f46\u80fd\u591f\u5728\u6240\u6709\u4e3b\u8981\u5e73\u53f0\uff08Linux\u3001macOS\u3001Windows\uff09\u4e0a\u6784\u5efa\u4efb\u4f55\u7c7b\u578b\u7684\u8f6f\u4ef6\u5305\uff08catkin\u3001ament\u3001CMake\u3001Python setuptools\u3001gradle\u3001bazel\u3001cargo\u7b49</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#2colcon","title":"2.Colcon\u4f7f\u7528\u8fdb\u9636","text":"<p>\u57fa\u7840\u7bc7\u4e2d\u5c0f\u9c7c\u5e26\u4f60\u7528gcc\u7f16\u8bd1\u4e86ROS2\u8282\u70b9\u3002\u5bf9\u4f60\u6765\u8bf4\uff0c\u4f7f\u7528CMake\uff08GCC\u6216Makefile\uff09\u548c Python Setup\u6253\u5305\u5de5\u5177\u4f9d\u7136\u53ef\u4ee5\u5b8c\u6210ROS2\u4ee3\u7801\u7684\u7f16\u8bd1\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981Colcon\u5462\uff1f</p> <p>\u5e26\u7740\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6765\u8fdb\u4e00\u6b65\u7684\u5b66\u4e60Colcon\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#1ros","title":"1.ROS\u751f\u6001\u4e2d\u7684\u6784\u5efa\u7cfb\u7edf\u548c\u6784\u5efa\u5de5\u5177","text":""},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#11","title":"1.1 \u6784\u5efa\u7cfb\u7edf\u4e0e\u6784\u5efa\u5de5\u5177(\u6784\u5efa\u5de5\u5177\u8c03\u7528\u6784\u5efa\u7cfb\u7edf)","text":"<p>\u4e24\u8005\u7684\u533a\u5206\u70b9\u5728\u4e8e\u9488\u5bf9\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u6784\u5efa\u7cfb\u7edf\u4e4b\u9488\u5bf9\u4e00\u4e2a\u5355\u72ec\u7684\u5305\u8fdb\u884c\u6784\u5efa\uff0c\u800c\u6784\u5efa\u5de5\u5177\u91cd\u70b9\u5728\u4e8e\u6309\u7167\u4f9d\u8d56\u5173\u7cfb\u4f9d\u6b21\u8c03\u7528\u6784\u5efa\u7cfb\u7edf\u5b8c\u6210\u4e00\u7cfb\u5217\u529f\u80fd\u5305\u7684\u6784\u5efa\u3002</p> <p>ROS\u4e2d\u7528\u5230\u7684\u6784\u5efa\u7cfb\u7edf\uff1a<code>CMake</code>\u3001<code>ament_cmake</code>\u3001<code>catkin</code>\u3001<code>Python setuptools</code>\u3002</p> <p>ROS\u4e2d\u7528\u5230\u7684\u6784\u5efa\u5de5\u5177\uff1a<code>colcon</code>\u3001<code>catkin_make</code>\u3001<code>catkin_make_isolated</code>\u3001<code>catkin_tools</code>\u3002</p> <p>\u5f88\u660e\u663ecolcon\u4f5c\u4e3a\u6784\u5efa\u5de5\u5177\uff0c\u901a\u8fc7\u8c03\u7528<code>CMake</code>\u3001<code>Python setuptools</code>\u5b8c\u6210\u6784\u5efa\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#12","title":"1.2 \u5e38\u89c1\u6784\u5efa\u7cfb\u7edf","text":""},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#121-cmake","title":"1.2.1 CMake","text":"<p>CMake\u00a0\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u6784\u5efa\u7cfb\u7edf\u751f\u6210\u5668\u3002\u9879\u76ee\u4f7f\u7528\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u6587\u4ef6\u6307\u5b9a\u5176\u751f\u6210\u8fc7\u7a0b\u3002\u7528\u6237\u901a\u8fc7\u4f7f\u7528CMake\u4e3a\u5176\u5e73\u53f0\u4e0a\u7684\u672c\u673a\u5de5\u5177\u751f\u6210\u6784\u5efa\u7cfb\u7edf\u6765\u6784\u5efa\u9879\u76ee\u3002</p> <p>\u901a\u5e38\u7528\u6cd5\u6709\uff1a<code>cmake</code>\u3001<code>make</code>\u3001<code>make intsall</code></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#122-python-setuptools","title":"1.2.2 Python setuptools","text":"<p><code>setuptools</code>\u662fPython\u5305\u7684\u6253\u5305\u5e38\u7528\u5de5\u5177\u3002Python \u5305\u4f7f\u7528\u6587\u4ef6\u6765\u63cf\u8ff0\u4f9d\u8d56\u9879\uff0c\u4ee5\u53ca\u5982\u4f55\u6784\u5efa\u548c\u5b89\u88c5\u5185\u5bb9\u3002\u5728ROS2\u4e2d\uff0c\u529f\u80fd\u5305\u53ef\u4ee5\u662f\u201c\u666e\u901a\u201dPython\u5305\uff0c\u800c\u5728ROS1\u4e2d\uff0c\u4efb\u4f55Python\u529f\u80fd\u90fd\u662f\u4eceCMake\u6587\u4ef6\u89e6\u53d1setup.py\u8fdb\u884c\u6253\u5305\u3002</p> <p>\u901a\u5e38\u7684\u7528\u6cd5\u6709\uff1a<code>python setup.py</code></p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#123-catkin","title":"1.2.3 catkin","text":"<p>catkin\u57fa\u4e8eCMake\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u7ec4\u65b9\u4fbf\u7684\u51fd\u6570\uff0c\u4f7f\u7f16\u5199CMake\u5305\u66f4\u5bb9\u6613\u3002\u5b83\u81ea\u52a8\u751f\u6210 CMake \u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca pkg \u914d\u7f6e\u6587\u4ef6\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u6ce8\u518c\u4e0d\u540c\u7c7b\u578b\u6d4b\u8bd5\u7684\u51fd\u6570\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#13","title":"1.3 \u5e38\u89c1\u6784\u5efa\u5de5\u5177","text":""},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#131-catkin_make","title":"1.3.1 catkin_make","text":"<p>\u8be5\u5de5\u5177\u4ec5\u8c03\u7528 CMake \u4e00\u6b21\uff0c\u5e76\u4f7f\u7528 CMake \u7684\u51fd\u6570\u5728\u5355\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u5904\u7406\u6240\u6709\u5305\u3002\u867d\u7136\u8fd9\u662f\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6240\u6709\u5305\u4e2d\u7684\u6240\u6709\u76ee\u6807\u90fd\u53ef\u4ee5\u5e76\u884c\u5316\uff0c\u4f46\u5b83\u5177\u6709\u660e\u663e\u7684\u7f3a\u70b9\u3002\u7531\u4e8e\u6240\u6709\u51fd\u6570\u540d\u79f0\u3001\u76ee\u6807\u548c\u6d4b\u8bd5\u90fd\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u5e76\u4e14\u89c4\u6a21\u66f4\u5927\uff0c\u8fd9\u5f88\u5bb9\u6613\u5bfc\u81f4\u51b2\u7a81\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#132-colcon","title":"1.3.2 colcon","text":"<p>colcon\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u6539\u8fdb\u6784\u5efa\uff0c\u6d4b\u8bd5\u548c\u4f7f\u7528\u591a\u4e2a\u8f6f\u4ef6\u5305\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u5b83\u81ea\u52a8\u5316\u4e86\u6d41\u7a0b\uff0c\u5904\u7406\u4e86\u8ba2\u8d2d\u5e76\u8bbe\u7f6e\u4e86\u4f7f\u7528\u8f6f\u4ef6\u5305\u7684\u73af\u5883\u3002</p> <p>colcon \u6587\u6863</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#133-ament_tools","title":"1.3.3 ament_tools","text":"<p><code>ament_tools</code>\u7531\u7528\u4e8e\u6784\u5efa ROS 2 \u5305\u7684\u72ec\u7acb Python 3 \u5305\u63d0\u4f9b\u3002\u5b83\u662f\u4e3a\u5f15\u5bfcROS 2\u9879\u76ee\u800c\u5f00\u53d1\u7684\uff0c\u56e0\u6b64\u4ec5\u9488\u5bf9Python 3\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728Linux\uff0cMacOS\u548cWindows\u4e0a\u8fd0\u884c\u3002</p> <p><code>ament_tools</code>\u652f\u6301\u6784\u5efa\u4ee5\u4e0b\u8f6f\u4ef6\u5305\uff1a</p> <ul> <li>\u5e26\u6709<code>package.xml</code>\u6587\u4ef6\u7684 ROS 2 \u5305\u3002</li> <li>\u5e26\u6709<code>package.xml</code>\u666e\u901a\u7684 CMake \u5305\u3002</li> <li>\u6ca1\u6709\u6e05\u5355\u6587\u4ef6\u7684\u666e\u901a CMake \u5305\uff08\u4ece CMake \u6587\u4ef6\u4e2d\u63d0\u53d6\u5305\u540d\u79f0\u548c\u4f9d\u8d56\u9879\uff09\u3002</li> <li>\u5e26\u6709<code>package.xml</code>\u6587\u4ef6\u7684 Python \u5305\u3002</li> <li>\u6ca1\u6709\u6e05\u5355\u6587\u4ef6\u7684 Python \u5305\uff08\u4ece<code>setup.py</code>\u6587\u4ef6\u4e2d\u63d0\u53d6\u5305\u540d\u79f0\u548c\u4f9d\u8d56\u9879\uff09\u3002</li> </ul>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#2colcon_1","title":"2.Colcon\u6784\u5efa\u8fdb\u9636","text":"<p>\u6211\u4eec\u5e73\u65f6\u7528\u7684\u6700\u591a\u7684\u573a\u666f\u662f\u7f16\u8bd1\u529f\u80fd\u5305\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c0f\u9c7c\u91cd\u70b9\u4ecb\u7ecdbuild\u65f6\u5019\u7684\u4e00\u4e9b\u53c2\u6570\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#21-build","title":"2.1 build\u53c2\u6570","text":""},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#210","title":"2.1.0 \u6784\u5efa\u6307\u4ee4","text":"<ul> <li><code>--packages-select</code>\u00a0\uff0c\u4ec5\u751f\u6210\u5355\u4e2a\u5305\uff08\u6216\u9009\u5b9a\u7684\u5305\uff09\u3002</li> <li><code>--packages-up-to</code>\uff0c\u6784\u5efa\u9009\u5b9a\u7684\u5305\uff0c\u5305\u62ec\u5176\u4f9d\u8d56\u9879\u3002</li> <li><code>--packages-above</code>\uff0c\u6574\u4e2a\u5de5\u4f5c\u533a\uff0c\u7136\u540e\u5bf9\u5176\u4e2d\u4e00\u4e2a\u5305\u8fdb\u884c\u4e86\u66f4\u6539\u3002\u6b64\u6307\u4ee4\u5c06\u91cd\u6784\u6b64\u5305\u4ee5\u53ca\uff08\u9012\u5f52\u5730\uff09\u4f9d\u8d56\u4e8e\u6b64\u5305\u7684\u6240\u6709\u5305\u3002</li> </ul>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#211","title":"2.1.1.\u6307\u5b9a\u6784\u5efa\u540e\u5b89\u88c5\u7684\u76ee\u5f55","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u00a0<code>--build-base</code>\u53c2\u6570\u548c<code>--install-base</code>\uff0c\u6307\u5b9a\u6784\u5efa\u76ee\u5f55\u548c\u5b89\u88c5\u76ee\u5f55\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#212","title":"2.1.2.\u5408\u5e76\u6784\u5efa\u76ee\u5f55","text":"<p><code>--merge-install</code>\uff0c\u4f7f\u7528 \u4f5c\u4e3a\u6240\u6709\u8f6f\u4ef6\u5305\u7684\u5b89\u88c5\u524d\u7f00\uff0c\u800c\u4e0d\u662f\u5b89\u88c5\u57fa\u4e2d\u7684\u8f6f\u4ef6\u5305\u7279\u5b9a\u5b50\u76ee\u5f55\u3002--install-base</p> <p>\u5982\u679c\u6ca1\u6709\u6b64\u9009\u9879\uff0c\u6bcf\u4e2a\u5305\u90fd\u5c06\u63d0\u4f9b\u81ea\u5df1\u7684\u73af\u5883\u53d8\u91cf\u8def\u5f84\uff0c\u4ece\u800c\u5bfc\u81f4\u975e\u5e38\u957f\u7684\u73af\u5883\u53d8\u91cf\u503c\u3002</p> <p>\u4f7f\u7528\u6b64\u9009\u9879\u65f6\uff0c\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u7684\u5927\u591a\u6570\u8def\u5f84\u5c06\u76f8\u540c\uff0c\u4ece\u800c\u5bfc\u81f4\u73af\u5883\u53d8\u91cf\u503c\u66f4\u77ed\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#213","title":"2.1.3.\u7b26\u53f7\u94fe\u63a5\u5b89\u88c5","text":"<p>\u542f\u7528<code>--symlink-install</code>\u540e\u5c06\u4e0d\u4f1a\u628a\u6587\u62f7\u8d1d\u5230install\u76ee\u5f55\uff0c\u800c\u662f\u901a\u8fc7\u521b\u5efa\u7b26\u53f7\u94fe\u63a5\u7684\u65b9\u5f0f\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#214","title":"2.1.4.\u9519\u8bef\u65f6\u7ee7\u7eed\u5b89\u88c5","text":"<p>\u542f\u7528<code>--continue-on-error</code>\uff0c\u5f53\u53d1\u751f\u9519\u8bef\u7684\u65f6\u5019\u7ee7\u7eed\u8fdb\u884c\u7f16\u8bd1\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#215-cmake","title":"2.1.5 CMake\u53c2\u6570","text":"<p><code>--cmake-args</code>\uff0c\u5c06\u4efb\u610f\u53c2\u6570\u4f20\u9012\u7ed9CMake\u3002\u4e0e\u5176\u4ed6\u9009\u9879\u5339\u914d\u7684\u53c2\u6570\u5fc5\u987b\u4ee5\u7a7a\u683c\u4e3a\u524d\u7f00\u3002</p>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#216","title":"2.1.6 \u63a7\u5236\u6784\u5efa\u7ebf\u7a0b","text":"<ul> <li> <p><code>--executor EXECUTOR</code>\uff0c\u7528\u4e8e\u5904\u7406\u6240\u6709\u4f5c\u4e1a\u7684\u6267\u884c\u7a0b\u5e8f\u3002\u9ed8\u8ba4\u503c\u662f\u6839\u636e\u6240\u6709\u53ef\u7528\u6267\u884c\u7a0b\u5e8f\u6269\u5c55\u7684\u4f18\u5148\u7ea7\u9009\u62e9\u7684\u3002\u8981\u67e5\u770b\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u8c03\u7528 colcon extensions colcon_core.executor --verbose`\u3002</p> <ul> <li> <p><code>sequential</code>\u00a0[<code>colcon-core</code>]</p> <p>\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u5305\u3002</p> </li> <li> <p><code>parallel</code>\u00a0[<code>colcon-parallel-executor</code>]</p> <p>\u5904\u7406\u591a\u4e2a\u4f5c\u4e1a\u5e73\u884c.</p> </li> </ul> </li> <li> <p>--parallel-workers NUMBER</p> <ul> <li>\u8981\u5e76\u884c\u5904\u7406\u7684\u6700\u5927\u4f5c\u4e1a\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a\u00a0os.cpu_count()\u00a0\u7ed9\u51fa\u7684\u903b\u8f91 CPU \u5185\u6838\u6570\u3002</li> </ul> </li> </ul>"},{"location":"ROS/ROS%E4%B8%AD%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/#217","title":"2.1.7 \u5f00\u542f\u6784\u5efa\u65e5\u5fd7","text":"<p>\u4f7f\u7528<code>--log-level</code>\u53ef\u4ee5\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\uff0c\u6bd4\u5982<code>--log-level info</code>\u3002</p>"},{"location":"ROS/ROS%E5%BB%BA%E5%9B%BE/","title":"ROS\u5efa\u56fe","text":"<p>\u8f6f\u4ef6\u5305\uff1a https://github.com/6-robot/wpr_simulation </p>"},{"location":"ROS/ROS%E5%BB%BA%E5%9B%BE/#1","title":"1\u57fa\u672c\u6982\u5ff5","text":"<p>\u6fc0\u5149\u96f7\u8fbeslam\u7684\u5b9a\u4f4d\u662f\u901a\u8fc7\u8f93\u51famap\u5230base_footprint\u7684tf\u6765\u5b9e\u73b0\u7684\u3002 </p> <p>\u91cc\u7a0b\u8ba1\u8f93\u51fa\u7684\u662fodom\u5230base_footprint\u7684tf\uff0c\u539f\u7406\u4e0aodom\u5750\u6807\u7cfb\u5e94\u8be5\u662f\u548cmap\u5750\u6807\u7cfb\u91cd\u5408\u7684\uff0c\u662f\u4e00\u4e2a\u5b9a\u503c\u3002\u4f46\u662f\u7531\u4e8eodom\u548cbase_footprint\u5982\u679c\u90fd\u56fa\u5b9a\u65e0\u6cd5\u8868\u793a\u7d2f\u8ba1\u8bef\u5dee\uff0c\u4e00\u822c\u662f\u628aodom\u4f5c\u4e3a\u52a8\u7684\u5750\u6807\u3002map\u5230odom\u5c31\u8868\u793aodom\u7684\u7d2f\u8ba1\u8bef\u5dee\u3002  </p> <p>Map: \u5168\u5c40\u5750\u6807\u7cfb\u3002 odom: \u539f\u70b9\u4f4d\u4e8e\u521d\u59cb\u4f4d\u7f6e\u7684\u5750\u6807\u7cfb\uff0c \u5750\u6807\u8f74\u4e0emap\u5750\u6807\u7cfb\u5e73\u884c\u3002 Base_foot_print: \u539f\u70b9\u4f4d\u4e8e\u673a\u5668\u4eba\u4e0a\u7684\u5750\u6807\u7cfb\uff0c \u5750\u6807\u8f74\u4e0emap\u5750\u6807\u7cfb\u5e73\u884c\u3002 bask_link: \u539f\u70b9\u4f4d\u4e8e\u673a\u5668\u4eba\u4e0a\u7684\u5750\u6807\u7cfb\uff0c \u5750\u6807\u8f74\u4f1a\u968f\u7740\u673a\u5668\u4eba\u65cb\u8f6c\u800c\u65cb\u8f6c\u3002 \u56e0\u6b64\uff0c \u4ecemap \u5230odom, \u8868\u793a\u5efa\u56fe\u7684\u4f4d\u7f6e\uff0c \u4eceodom \u5230base_footprint\u8868\u793a\u673a\u5668\u4eba\u7684\u5e73\u79fb\u53d8\u6362\uff0c \u4ecebase_footprint \u5230base_link \u8868\u793a\u673a\u5668\u4eba\u7684\u65cb\u8f6c\u53d8\u6362\u3002 gmapping \u7b97\u6cd5\u4f1a\u5728\u4ecemap \u5230odom \u4e2d\u63d2\u5165\u4e00\u5b9a\u7684\u503c\u6765\u77eb\u6b63odom\u7684\u8bef\u5dee\uff0c \u91cc\u7a0b\u8ba1\u5e94\u8be5\u8f93\u51fa\u7684\u662f\u4eceodom\u5230base_link\uff08\u5305\u62ec\u65cb\u8f6c\u548c\u5e73\u79fb\uff09\u7684tf</p>"},{"location":"ROS/ROS%E5%BB%BA%E5%9B%BE/#2-tf","title":"2 tf\u5173\u7cfb","text":""},{"location":"ROS/ROS%E5%BB%BA%E5%9B%BE/#3-gmapping","title":"3 gmapping\u7684\u8f93\u5165\u8f93\u51fa","text":""},{"location":"ROS/ROS%E5%BB%BA%E5%9B%BE/#4","title":"4\u91cc\u7a0b\u8ba1\u7c7b\u578b","text":"<p>\u8f6e\u5f0f\u91cc\u7a0b\u8ba1\u3001\u89c6\u89c9\u91cc\u7a0b\u8ba1\u3001GPS\u91cc\u7a0b\u8ba1\u3002</p> <p>\u91cc\u7a0b\u8ba1\u7684\u5de5\u4f5c\u65b9\u5f0f\u57fa\u672c\u4e0a\u53ef\u4ee5\u770b\u505a\u662f\u5dee\u901f\u9a71\u52a8\u7684\u9006\u3002\u5dee\u901f\u9a71\u52a8\u662f\u7ed9\u5b9a\u5c0f\u8f66\u8fd0\u52a8\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u6765\u89e3\u7b97\u5de6\u53f3\u8f6e\u7684\u8f6c\u901f\uff0c \u91cc\u7a0b\u8ba1\u5219\u662f\u6839\u636e\u5de6\u53f3\u8f6e\u7684\u8f6c\u901f\u6765\u4f30\u8ba1\u5c0f\u8f66\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3002\u6b64\u5916\uff0c\u91cc\u7a0b\u8ba1\u8fd8\u9700\u8981\u5bf9\u5c0f\u8f66\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u8fdb\u884c\u79ef\u5206\uff0c\u4ece\u800c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c97\u7565\u7684\u5b9a\u4f4d\u3002 \u7531\u4e8e\u6d4b\u91cf\u8bef\u5dee\uff0c\u4ee5\u53ca\u8bf8\u5982\u8f6e\u5b50\u6253\u6ed1\u8fd9\u6837\u7684\u672a\u5efa\u6a21\u56e0\u7d20\u7684\u5b58\u5728\uff0c\u4f7f\u7528\u91cc\u7a0b\u8ba1\u6765\u4f30\u8ba1\u4f4d\u59ff\u662f\u5f88\u4e0d\u51c6\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u8bef\u5dee\u5c06\u968f\u7740\u79ef\u5206\u7684\u4f5c\u7528\u800c\u4e0d\u65ad\u7d2f\u52a0\u3002</p> <p>\u4e00\u822c\u7684\u5c0f\u8f66\u91cc\u91cc\u7a0b\u8ba1\u53ef\u4ee5\u7528\u6bcf\u4e00\u65f6\u523b\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u7684\u53cd\u9988\u503c\u6765\u6784\u5efa\u91cc\u7a0b\u8ba1\u7684\u6d88\u606f\u683c\u5f0f\uff08\u4e00\u822c\u9700\u8981\u81ea\u5df1\u5199\u4e00\u4e2a\u91cc\u7a0b\u8ba1\u8282\u70b9\u6765\u53d1\u9001odom\u5230base_link\u7684tf\u53d8\u6362\u548c\u53d1\u5e03odom\u6d88\u606f\uff09\u3002 </p> <p></p> <p></p>"},{"location":"ROS/ROS%E5%BB%BA%E5%9B%BE/#5","title":"5\u624b\u5199\u91cc\u7a0b\u8ba1\u4ee3\u7801","text":"<p>\u5982\u679c\u8f66\u4e0a\u6ca1\u6709\u7ebf\u7a0b\u7684\u91cc\u7a0b\u8ba1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c0f\u8f66\u5b9e\u65f6\u53cd\u9988\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u7ed3\u5408\u91c7\u6837\u65f6\u95f4\u624b\u5199\u4e00\u4e2a\u91cc\u7a0b\u8ba1\u3002\u9700\u8981\u5b9e\u73b0tf\u7684\u53d1\u5e03\u548codom\u6d88\u606f\u7684\u53d1\u5e03\u4e24\u90e8\u5206\u3002  <pre><code>// \u901f\u5ea6/\u4f4d\u7f6e\u7ed3\u6784\u4f53\ntypedef struct __Vel_Pos_Data_\n{\n    float X;\n    float Y;\n    float Z;\n} Vel_Pos_Data;\n\nVel_Pos_Data Robot_Pos; // \u673a\u5668\u4eba\u7684\u4f4d\u7f6e\nVel_Pos_Data Robot_Vel; // \u673a\u5668\u4eba\u7684\u901f\u5ea6\nfloat sampling_time;           // \u91c7\u6837\u65f6\u95f4\ndouble _time_now, _time_last;\n\n/**************************************\nFunction: \u53d1\u5e03\u91cc\u7a0b\u8ba1\u76f8\u5173\u4fe1\u606f\n***************************************/\nvoid Publish_Odom()\n{\n    _time_now = nodeHandle-&gt;get_clock()-&gt;now().seconds();\n    sampling_time = _time_now - _time_last;\n    Robot_Pos.X += (Robot_Vel.X * cos(Robot_Pos.Z) - Robot_Vel.Y * sin(Robot_Pos.Z)) * sampling_time; // \u8ba1\u7b97x\u65b9\u5411\u7684\u4f4d\u79fb\n    Robot_Pos.Y += (Robot_Vel.X * sin(Robot_Pos.Z) + Robot_Vel.Y * cos(Robot_Pos.Z)) * sampling_time; // \u8ba1\u7b97y\u65b9\u5411\u7684\u4f4d\u79fb\uff0c\n    Robot_Pos.Z += Robot_Vel.Z * sampling_time * 0.75;                                            // 0.75\u662f\u7528\u6765\u7ea0\u6b63\u504f\u5dee\uff0c\u9700\u8981\u901a\u8fc7\u91cc\u7a0b\u8ba1\u6821\u51c6\u6b65\u9aa4\u6765\u83b7\u53d6\u8be5\u503c\n\n    tf2::Quaternion quaternion;\n    quaternion.setRPY(0.0, 0.0, Robot_Pos.Z);\n    geometry_msgs::msg::Quaternion odom_quat = tf2::toMsg(quaternion);\n\n    auto odom = std::make_unique&lt;nav_msgs::msg::Odometry&gt;();\n    odom-&gt;header.stamp = nodeHandle-&gt;get_clock()-&gt;now(); // \u5f53\u524d\u65f6\u95f4\n    odom-&gt;header.frame_id = \"wheel_odom\";\n    odom-&gt;pose.pose.position.x = Robot_Pos.X; // \u4f4d\u7f6e\n    odom-&gt;pose.pose.position.y = Robot_Pos.Y;\n    odom-&gt;pose.pose.position.z = 0;\n    odom-&gt;pose.pose.orientation = odom_quat;\n    // \u8bbe\u7f6e\u901f\u5ea6\n    odom-&gt;child_frame_id = \"base_link\";\n    odom-&gt;twist.twist.linear.x = Robot_Vel.X;  // X\u65b9\u5411\u524d\u8fdb\u901f\u5ea6\n    odom-&gt;twist.twist.linear.y = Robot_Vel.Y;  // y\u65b9\u5411\u524d\u8fdb\u901f\u5ea6\n    odom-&gt;twist.twist.angular.z = Robot_Vel.Z; // \u89d2\u901f\u5ea6\n\n    // first, we'll publish the transform over tf\n    geometry_msgs::msg::TransformStamped odom_trans;\n    odom_trans.header.stamp = odom-&gt;header.stamp;\n    odom_trans.header.frame_id = \"wheel_odom\";\n    odom_trans.child_frame_id = \"base_link\";\n    odom_trans.transform.translation.x = Robot_Pos.X;\n    odom_trans.transform.translation.y = Robot_Pos.Y;\n    odom_trans.transform.translation.z = 0;\n    odom_trans.transform.rotation = odom_quat;\n    odom_publisher-&gt;publish(std::move(odom)); // \u53d1\u5e03\u8fd9\u4e2a\u8bdd\u9898 \u6d88\u606f\u7c7b\u578b\u662fnav_msgs::msg::Odometry\n\n\n    odom_broadcaster-&gt;sendTransform(odom_trans);\n    // send the transform\n\n    _time_last = _time_now; // \u8bb0\u5f55\u65f6\u95f4\n}\n</code></pre></p>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/","title":"ROS\u7684launch\u6587\u4ef6","text":"<p>launch\u6587\u4ef6</p>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#1-rosparam-yaml","title":"1. rosparam \u52a0\u8f7dyaml\u5b9a\u4e49\u7684\u53c2\u6570","text":""},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2param","title":"2.param\u6807\u7b7e\u6765\u8bbe\u7f6e\u53c2\u6570","text":"<ul> <li> <p>\u5982\u679crosparam\u6807\u7b7e\u548cparam\u6807\u7b7e\u5728node\u6807\u7b7e\u4e0b\uff0c\u90a3\u4e48\u53c2\u6570\u662f\u79c1\u6709\u547d\u540d\u7a7a\u95f4\uff1anode_name/parma_name</p> </li> <li> <p>\u5982\u679crosparam\u6807\u7b7e\u548cparam\u6807\u7b7e\u5728node\u6807\u7b7e\u5916\uff0c\u90a3\u4e48\u53c2\u6570\u662f\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff1a/parma_name</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#3-node","title":"3 node\u6807\u7b7e","text":"<p><code>&lt;node&gt;</code>\u6807\u7b7e\u7528\u4e8e\u6307\u5b9a ROS \u8282\u70b9\uff0c\u662f\u6700\u5e38\u89c1\u7684\u6807\u7b7e\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f: roslaunch \u547d\u4ee4\u4e0d\u80fd\u4fdd\u8bc1\u6309\u7167 node \u7684\u58f0\u660e\u987a\u5e8f\u6765\u542f\u52a8\u8282\u70b9(\u8282\u70b9\u7684\u542f\u52a8\u662f\u591a\u8fdb\u7a0b\u7684)</p>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#1","title":"1.\u5c5e\u6027","text":"<ul> <li> <p>pkg=\"\u5305\u540d\"</p> <p>\u8282\u70b9\u6240\u5c5e\u7684\u5305</p> </li> <li> <p>type=\"nodeType\"</p> <p>\u8282\u70b9\u7c7b\u578b(\u4e0e\u4e4b\u76f8\u540c\u540d\u79f0\u7684\u53ef\u6267\u884c\u6587\u4ef6)</p> </li> <li> <p>name=\"nodeName\"</p> <p>\u8282\u70b9\u540d\u79f0(\u5728 ROS \u7f51\u7edc\u62d3\u6251\u4e2d\u8282\u70b9\u7684\u540d\u79f0)</p> </li> <li> <p>args=\"xxx xxx xxx\" (\u53ef\u9009)</p> <p>\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u8282\u70b9</p> </li> <li> <p>machine=\"\u673a\u5668\u540d\"</p> <p>\u5728\u6307\u5b9a\u673a\u5668\u4e0a\u542f\u52a8\u8282\u70b9</p> </li> <li> <p>respawn=\"true | false\" (\u53ef\u9009)</p> <p>\u5982\u679c\u8282\u70b9\u9000\u51fa\uff0c\u662f\u5426\u81ea\u52a8\u91cd\u542f</p> </li> <li> <p>respawn_delay=\" N\" (\u53ef\u9009)</p> <p>\u5982\u679c respawn \u4e3a true, \u90a3\u4e48\u5ef6\u8fdf N \u79d2\u540e\u542f\u52a8\u8282\u70b9</p> </li> <li> <p>required=\"true | false\" (\u53ef\u9009)</p> <p>\u8be5\u8282\u70b9\u662f\u5426\u5fc5\u987b\uff0c\u5982\u679c\u4e3a true,\u90a3\u4e48\u5982\u679c\u8be5\u8282\u70b9\u9000\u51fa\uff0c\u5c06\u6740\u6b7b\u6574\u4e2a roslaunch</p> </li> <li> <p>ns=\"xxx\" (\u53ef\u9009)</p> <p>\u5728\u6307\u5b9a\u547d\u540d\u7a7a\u95f4 xxx \u4e2d\u542f\u52a8\u8282\u70b9</p> </li> <li> <p>clear_params=\"true | false\" (\u53ef\u9009)</p> <p>\u5728\u542f\u52a8\u524d\uff0c\u5220\u9664\u8282\u70b9\u7684\u79c1\u6709\u7a7a\u95f4\u7684\u6240\u6709\u53c2\u6570</p> </li> <li> <p>output=\"log | screen\" (\u53ef\u9009)</p> <p>\u65e5\u5fd7\u53d1\u9001\u76ee\u6807\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a log \u65e5\u5fd7\u6587\u4ef6\uff0c\u6216 screen \u5c4f\u5e55,\u9ed8\u8ba4\u662f log</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2","title":"2.\u5b50\u7ea7\u6807\u7b7e","text":"<ul> <li> <p>env \u73af\u5883\u53d8\u91cf\u8bbe\u7f6e</p> </li> <li> <p>remap \u91cd\u6620\u5c04\u8bdd\u9898\u540d\u79f0\uff08 from=\"xxx\"\u539f\u59cb\u8bdd\u9898\u540d\u79f0 to=\"yyy\"\u76ee\u6807\u540d\u79f0\uff09</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2_1","title":"2.\u5b50\u7ea7\u6807\u7b7e","text":"<ul> <li> <p>\u65e0</p> </li> <li> <p>rosparam \u53c2\u6570\u8bbe\u7f6e\uff08yaml\u6587\u4ef6\uff0c\u79c1\u6709\u547d\u540d\u7a7a\u95f4\uff09</p> </li> <li> <p>param \u53c2\u6570\u8bbe\u7f6e\uff08\u975eyaml\u6587\u4ef6\uff0c\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff09</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#4-include","title":"4 include\u6807\u7b7e","text":"<p><code>include</code>\u6807\u7b7e\u7528\u4e8e\u5c06\u53e6\u4e00\u4e2a xml \u683c\u5f0f\u7684 launch \u6587\u4ef6\u5bfc\u5165\u5230\u5f53\u524d\u6587\u4ef6</p>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#1_1","title":"1.\u5c5e\u6027","text":"<ul> <li> <p>file=\"$(find \u5305\u540d)/xxx/xxx.launch\"</p> <p>\u8981\u5305\u542b\u7684\u6587\u4ef6\u8def\u5f84</p> </li> <li> <p>ns=\"xxx\" (\u53ef\u9009)</p> <p>\u5728\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u5bfc\u5165\u6587\u4ef6</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2_2","title":"2.\u5b50\u7ea7\u6807\u7b7e","text":"<ul> <li> <p>env \u73af\u5883\u53d8\u91cf\u8bbe\u7f6e</p> </li> <li> <p>arg \u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u88ab\u5305\u542b\u7684\u6587\u4ef6</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#5-group","title":"5 group\u6807\u7b7e","text":"<p><code>&lt;group&gt;</code>\u6807\u7b7e\u53ef\u4ee5\u5bf9\u8282\u70b9\u5206\u7ec4\uff0c\u5177\u6709 ns \u5c5e\u6027\uff0c\u53ef\u4ee5\u8ba9\u8282\u70b9\u5f52\u5c5e\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4</p>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#1_2","title":"1.\u5c5e\u6027","text":"<ul> <li> <p>ns=\"\u540d\u79f0\u7a7a\u95f4\" (\u53ef\u9009)</p> </li> <li> <p>clear_params=\"true | false\" (\u53ef\u9009)</p> <p>\u542f\u52a8\u524d\uff0c\u662f\u5426\u5220\u9664\u7ec4\u540d\u79f0\u7a7a\u95f4\u7684\u6240\u6709\u53c2\u6570(\u614e\u7528....\u6b64\u529f\u80fd\u5371\u9669)</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2_3","title":"2.\u5b50\u7ea7\u6807\u7b7e","text":"<ul> <li>\u9664\u4e86launch \u6807\u7b7e\u5916\u7684\u5176\u4ed6\u6807\u7b7e</li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#6-arg","title":"6 arg\u6807\u7b7e","text":""},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#1_3","title":"1.\u5c5e\u6027","text":"<ul> <li> <p>name=\"\u53c2\u6570\u540d\u79f0\"</p> </li> <li> <p>default=\"\u9ed8\u8ba4\u503c\" (\u53ef\u9009)</p> </li> <li> <p>value=\"\u6570\u503c\" (\u53ef\u9009)</p> <p>\u4e0d\u53ef\u4ee5\u4e0e default \u5e76\u5b58</p> </li> <li> <p>doc=\"\u63cf\u8ff0\"</p> <p>\u53c2\u6570\u8bf4\u660e</p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2_4","title":"2.\u5b50\u7ea7\u6807\u7b7e","text":"<ul> <li>\u65e0</li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#3","title":"3.\u793a\u4f8b","text":"<ul> <li> <p>launch\u6587\u4ef6\u4f20\u53c2\u8bed\u6cd5\u5b9e\u73b0,hello.lcaunch</p> <pre><code>&lt;launch&gt;\n    &lt;arg name=\"xxx\" /&gt;\n    &lt;param name=\"param\" value=\"$(arg xxx)\" /&gt;\n&lt;/launch&gt;\n</code></pre> </li> <li> <p>\u547d\u4ee4\u884c\u8c03\u7528launch\u4f20\u53c2 <pre><code>roslaunch hello.launch xxx:=\u503c\n</code></pre></p> </li> </ul>"},{"location":"ROS/ROS%E7%9A%84launch%E6%96%87%E4%BB%B6/#2-nodehandle","title":"2. \u901a\u8fc7nodehandle\u6765\u8bfb\u53d6\u53c2\u6570","text":"<p> param()\u51fd\u6570\u4ece\u53c2\u6570\u670d\u52a1\u5668\u53d6\u53c2\u6570\u503c\u7ed9\u53d8\u91cfparam_val\u3002\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u5c06\u9ed8\u8ba4\u503c\u8d4b\u7ed9\u53d8\u91cf\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u548cgetParam()\u51fd\u6570\u7c7b\u4f3c\uff0c\u533a\u522b\u662fparam()\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u503c\u3002</p> <p></p>"},{"location":"ROS/ROS%E7%9A%84%E5%8F%82%E6%95%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"ROS\u7684\u53c2\u6570\u670d\u52a1\u5668","text":"<p>\u53c2\u6570\u670d\u52a1\u5668</p>"},{"location":"ROS/ROS%E7%9A%84%E5%8F%82%E6%95%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/#1-launchyaml","title":"1. \u901a\u8fc7launch\u6765\u52a0\u8f7dyaml\u5b9a\u4e49\u7684\u53c2\u6570","text":""},{"location":"ROS/ROS%E7%9A%84%E5%8F%82%E6%95%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/#2-nodehandle","title":"2. \u901a\u8fc7nodehandle\u6765\u8bfb\u53d6\u53c2\u6570","text":"<p> param()\u51fd\u6570\u4ece\u53c2\u6570\u670d\u52a1\u5668\u53d6\u53c2\u6570\u503c\u7ed9\u53d8\u91cfparam_val\u3002\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u5c06\u9ed8\u8ba4\u503c\u8d4b\u7ed9\u53d8\u91cf\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u548cgetParam()\u51fd\u6570\u7c7b\u4f3c\uff0c\u533a\u522b\u662fparam()\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u503c\u3002</p> <p></p>"},{"location":"ROS/ros%E4%B8%AD%E6%98%BE%E7%A4%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%A9%E4%BD%93%E5%BD%A2%E7%8A%B6/","title":"Ros\u4e2d\u663e\u793a\u81ea\u5b9a\u4e49\u7269\u4f53\u5f62\u72b6","text":"<p>\u8d44\u6e90\u7f51\u7ad9:https://www.cgtrader.com</p> <p>rviz\u4e2d\u53ef\u4ee5\u7ed9marker\u9644\u52a0mesh\u6587\u4ef6\uff0c\u8ba9rviz\u663e\u793a\u3002\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u60f3\u663e\u793adae\u6587\u4ef6\u539f\u6765\u7684\u989c\u8272\uff0cmarker.mesh_use_embedded_materials = true;\u8fd9\u6bb5\u4ee3\u7801\u4e00\u5b9a\u8981\u52a0\u4e0a\u3002 <pre><code>#include &lt;ros/ros.h&gt;\n#include &lt;visualization_msgs/Marker.h&gt;\n#include \"tf/transform_datatypes.h\"\n\nint main(int argc, char** argv) {\n  ros::init(argc, argv, \"car_model_node\");\n  ros::NodeHandle n;\n  ros::Publisher marker_pub =\n      n.advertise&lt;visualization_msgs::Marker&gt;(\"visualization_marker\", 1);\n\n  visualization_msgs::Marker marker;\n  marker.header.frame_id = \"map\";\n  marker.header.stamp = ros::Time::now();\n\n  marker.ns = \"basic_shapes\";\n  marker.id = 0;\n\n  marker.type = visualization_msgs::Marker::MESH_RESOURCE;\n  marker.action = visualization_msgs::Marker::MODIFY;\n\n  geometry_msgs::Pose pose;\n  pose.position.x = 0.0;\n  pose.position.y = 0.0;\n  pose.position.z = 0.0;\n\n  tf::Quaternion q;\n  q = tf::createQuaternionFromRPY(0.0, 0.0, 0.0);\n  pose.orientation.x = q.x();\n  pose.orientation.y = q.y();\n  pose.orientation.z = q.z();\n  pose.orientation.w = q.w();\n  marker.pose = pose;\n\n  tf::Quaternion q1(0.0, -0.7071, -0.7071, 0.0);\n  quaternionTFToMsg(tf::Quaternion(pose.orientation.x, pose.orientation.y,\n                                   pose.orientation.z, pose.orientation.w) *\n                        q1,\n                    marker.pose.orientation);\n\n  marker.scale.x = 1.0;\n  marker.scale.y = 1.0;\n  marker.scale.z = 1.0;\n\n  // marker.color.r = 1.0;\n  // marker.color.g = 1.0;\n  // marker.color.b = 1.0;\n  marker.color.a = 1.0;\n  marker.mesh_use_embedded_materials = true;\n\n  marker.mesh_resource = \"package://car_model/meshes/bmw_x5.dae\";\n\n  while (ros::ok()) {\n    marker_pub.publish(marker);\n    ros::spinOnce();\n  }\n}\n</code></pre></p> <pre><code>cmake_minimum_required(VERSION 3.0.2)\nproject(car_model)\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON) \nfind_package(catkin REQUIRED COMPONENTS\n  roscpp\n  rospy\n  std_msgs\n  visualization_msgs\n  tf\n)\n\ncatkin_package(\n INCLUDE_DIRS include\n CATKIN_DEPENDS roscpp rospy std_msgs visualization_msgs tf\n)\n\ninclude_directories(\n  ${catkin_INCLUDE_DIRS}\n)\n\nadd_executable(car_model_node src/main.cpp)\ntarget_link_libraries(car_model_node ${catkin_LIBRARIES})\n</code></pre> <p>package.xml <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;package format=\"2\"&gt;\n  &lt;name&gt;car_model&lt;/name&gt;\n  &lt;version&gt;0.0.0&lt;/version&gt;\n  &lt;description&gt;The car_model package&lt;/description&gt;\n\n  &lt;maintainer email=\"hanshuo@todo.todo\"&gt;hanshuo&lt;/maintainer&gt;\n\n  &lt;license&gt;TODO&lt;/license&gt;\n\n  &lt;buildtool_depend&gt;catkin&lt;/buildtool_depend&gt;\n  &lt;build_depend&gt;roscpp&lt;/build_depend&gt;\n  &lt;build_depend&gt;rospy&lt;/build_depend&gt;\n  &lt;build_depend&gt;std_msgs&lt;/build_depend&gt;\n  &lt;build_depend&gt;visualization_msgs&lt;/build_depend&gt;\n  &lt;build_depend&gt;tf&lt;/build_depend&gt;\n  &lt;build_export_depend&gt;visualization_msgs&lt;/build_export_depend&gt;\n  &lt;build_export_depend&gt;roscpp&lt;/build_export_depend&gt;\n  &lt;build_export_depend&gt;rospy&lt;/build_export_depend&gt;\n  &lt;build_export_depend&gt;std_msgs&lt;/build_export_depend&gt;\n  &lt;exec_depend&gt;roscpp&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;rospy&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;std_msgs&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;tf&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;visualization_msgs&lt;/exec_depend&gt;\n\n\n  &lt;!-- The export tag contains other, unspecified, tags --&gt;\n  &lt;export&gt;\n    &lt;!-- Other tools can request additional information be placed here --&gt;\n\n  &lt;/export&gt;\n&lt;/package&gt;\n</code></pre></p>"},{"location":"linux/kill%E5%91%BD%E4%BB%A4/","title":"Kill\u547d\u4ee4","text":"<p>kill\u547d\u4ee4\u9664\u4e86\u53ef\u4ee5\u6740\u6b7b\u8fdb\u7a0b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u7684\u7528\u9014\uff0c\u5177\u4f53\u53ef\u4ee5\u7528kill -l\u67e5\u770b\u6240\u6709\u529f\u80fd\u3002\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u5b9e\u7528\u7684\u53c2\u6570 - 1 (HUP)\uff1a\u91cd\u65b0\u52a0\u8f7d\u8fdb\u7a0b\u3002 - 9 (KILL)\uff1a\u6740\u6b7b\u4e00\u4e2a\u8fdb\u7a0b\u3002 - 15 (TERM)\uff1a\u6b63\u5e38\u505c\u6b62\u4e00\u4e2a\u8fdb\u7a0b\u3002</p> <ul> <li> <p>\u6740\u6b7b\u8fdb\u7a0b\uff1a kill 12345</p> </li> <li> <p>\u5f3a\u5236\u6740\u6b7b\u8fdb\u7a0b kill -KILL 12345 \u540c kill -9 12345</p> </li> <li> <p>\u91cd\u65b0\u52a0\u8f7d\u8fdb\u7a0b kill -HUP 12345</p> </li> </ul>"},{"location":"linux/linux%20apt%E5%AE%89%E8%A3%85%E6%97%B6%E5%8C%85%E7%9A%84%E5%90%8E%E7%BC%80libxxx-dev/","title":"Linux apt\u5b89\u88c5\u65f6\u5305\u7684\u540e\u7f00libxxx dev","text":""},{"location":"linux/linux%20apt%E5%AE%89%E8%A3%85%E6%97%B6%E5%8C%85%E7%9A%84%E5%90%8E%E7%BC%80libxxx-dev/#1","title":"1\u540e\u7f00","text":"<ul> <li>libxxx\uff1a\u53ea\u4f1a\u5b89\u88c5libxxx.so.x.x\u7684\u52a8\u6001\u5e93</li> <li>libxxx-dev\u540e\u7f00\uff08develope\uff09\uff1a\u5305\u542b\u4e86\u5e93\u7684\u63a5\u53e3\uff08.h\u6587\u4ef6\u5373\u5934\u6587\u4ef6\uff09\u548c\u9759\u6001\u5e93\u4ee5\u53ca\u52a8\u6001\u5e93\uff0c\u5982\u679c\u7f16\u8bd1\u9700\u8981\u7528\u5230\u8be5\u5e93\uff0c\u90a3\u4e48\u9700\u8981\u5b89\u88c5dev\u7248\u672c\u3002devel\u5305\u542b\u666e\u901a\u5305\uff0c\u4f46\u6bd4\u666e\u901a\u5305\u591a\u4e86\u5934\u6587\u4ef6\u3002 \u5728\u7f16\u8bd1\u4e00\u4e2a\u7528 C \u8bed\u8a00\u7f16\u5199\u7684 Python \u6269\u5c55\u6a21\u5757\u65f6\uff0c\u91cc\u9762\u4f1a\u6709\u00a0<code>#include&lt;Python.h&gt;</code>\u00a0\u8fd9\u6837\u7684\u8bed\u53e5\uff0c\u56e0\u6b64\u9700\u8981\u5148\u5b89\u88c5\u00a0<code>python-dev</code>\u00a0or\u00a0<code>python-devel</code>\u00a0\u5f00\u53d1\u5305</li> <li>libxxx-dbg\u540e\u7f00\uff08debug\uff09\uff1a\u5305\u542b\u8c03\u8bd5\u7b26\u53f7\uff0c\u901a\u5e38\u4ec5\u4f9b\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u8be5\u8f6f\u4ef6\u6216\u8c03\u8bd5\u8f6f\u4ef6\u7684\u4eba\u5458\u4f7f\u7528\u3002</li> <li>libxxx-utils\u540e\u7f00\uff08utility\uff09\uff1a\u901a\u5e38\u63d0\u4f9b\u4e00\u4e9b\u989d\u5916\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002 \u5b83\u53ef\u80fd\u4f1a\u5c06\u7528\u6237\u66b4\u9732\u7ed9\u5185\u90e8\u529f\u80fd\u6216\u4ec5\u63d0\u4f9bCLI\u3002</li> </ul>"},{"location":"linux/linux%20apt%E5%AE%89%E8%A3%85%E6%97%B6%E5%8C%85%E7%9A%84%E5%90%8E%E7%BC%80libxxx-dev/#2","title":"2\u4e0d\u5e26\u540e\u7f00","text":"<p>\u5982\u679c\u5b89\u88c5\u5e93\u6ca1\u6709-dev\u540e\u7f00\uff0c\u90a3\u4e48\u53ea\u4f1a\u5b89\u88c5.so.x.x\u52a8\u6001\u5e93</p>"},{"location":"linux/linux-systemctl%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86/","title":"Linux systemctl\u547d\u4ee4\u5408\u96c6","text":"<p>(2\u6761\u6d88\u606f) Ubuntu20.04\u67e5\u770b\u5f00\u673a\u81ea\u542f\u52a8\u53ca\u5176\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f(\u8bbe\u7f6erc.local)_ubuntu\u67e5\u770b\u5f00\u673a\u542f\u52a8\u9879_\u5c0f\u767d\u3001\u7476\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p></p>"},{"location":"linux/linux%E4%B8%8B%E8%AF%BB%E5%86%99%E4%B8%B2%E5%8F%A3/","title":"Linux\u4e0b\u8bfb\u5199\u4e32\u53e3","text":""},{"location":"linux/linux%E4%B8%8B%E8%AF%BB%E5%86%99%E4%B8%B2%E5%8F%A3/#python","title":"python","text":"<p>\u4f7f\u7528serial\u5e93 https://www.bilibili.com/video/BV1sG4y1e7Jf/</p>"},{"location":"linux/linux%E4%B8%8B%E8%AF%BB%E5%86%99%E4%B8%B2%E5%8F%A3/#c","title":"c","text":"<p>\u76f4\u63a5\u8bfb\u5199/dev/ttyUSB \u6216\u8005/dev/ttyS https://blog.csdn.net/AAA375/article/details/100096490</p>"},{"location":"linux/linux%E4%B8%AD%E5%8A%A8%E6%80%81%E5%BA%93/","title":"Linux\u4e2d\u52a8\u6001\u5e93","text":"<p>\u6211\u4eec\u5728linux\u4e0b\u5f00\u53d1\u9879\u76ee\uff0c\u6709\u65f6\u4f1a\u5bf9\u5916\u63d0\u4f9b\u52a8\u6001\u5e93\uff0c\u50cf***.so.1.0.0\u8fd9\u6837\u5b50\u7684\u6587\u4ef6\uff0c\u53e6\u5916\u63d0\u4f9b\u76f8\u5e94\u7684\u5934\u6587\u4ef6\u3002\u7528\u6237\u62ff\u5230\u52a8\u6001\u5e93\u548c\u5934\u6587\u4ef6\u8bf4\u660e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u5e93\u91cc\u7684function\u3002</p> <p>\u90a3\u968f\u4e4b\u800c\u6765\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u52a8\u6001\u5e93\u7684\u5347\u7ea7\u95ee\u9898\uff0c\u6211\u4eec\u7684\u52a8\u6001\u5e93\u66f4\u6539\u4e86\u4e00\u4e2abug\uff0c\u5347\u7ea7\u4e86\u4e00\u4e2a\u7248\u672c\uff0c\u90a3\u4f7f\u7528\u6211\u4eec\u52a8\u6001\u5e93\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u5417\uff1f\u8fd0\u884c\u65f6\u4f1a\u4ea7\u751f\u5f02\u5e38\u5417\uff1flinux\u4e0b\u662f\u600e\u4e48\u89c4\u8303\u8fd9\u4e9b\u5185\u5bb9\u7684\u5450\uff1f</p> <p>\u5927\u5bb6\u4e00\u5b9a\u542c\u8bf4\u8fc7windows\u4e0b\u7684dll hell\u3002</p> <p>Linux\u4e2d\u7684.so\u6587\u4ef6 \u662f\u52a8\u6001\u94fe\u63a5\u7684\u4ea7\u7269\u00a0 \u5171\u4eab\u5e93\u7406\u89e3\u4e3a\u63d0\u4f9b\u5404\u79cd\u529f\u80fd\u51fd\u6570\u7684\u96c6\u5408\uff0c\u5bf9\u5916\u63d0\u4f9b\u6807\u51c6\u7684\u63a5\u53e3 Linux\u4e2d\u547d\u540d\u7cfb\u7edf\u4e2d\u5171\u4eab\u5e93\u7684\u89c4\u5219</p> <p> </p> <p>**\u4e3b\u7248\u672c\u53f7\uff1a\u4e0d\u540c\u7684\u7248\u672c\u53f7\u4e4b\u95f4\u4e0d\u517c\u5bb9 \u6b21\u7248\u672c\u53f7\uff1a\u589e\u91cf\u5347\u7ea7 \u5411\u540e\u517c\u5bb9 \u53d1\u884c\u7248\u672c\u53f7\uff1a\u5bf9\u5e94\u6b21\u7248\u672c\u7684\u9519\u8bef\u4fee\u6b63\u548c\u6027\u80fd\u63d0\u5347\uff0c\u4e0d\u5f71\u54cd\u517c\u5bb9\u6027  </p> <p>\u4e0b\u9762\u8bf4\u8bf4linux\u4e0b\u52a8\u6001\u5e93\u7684\u547d\u540d\u89c4\u8303\u3002</p> <p>\u4e3a\u65b9\u4fbf\u7ba1\u7406\u4f9d\u8d56\u5173\u7cfb\uff0c\u521b\u5efa\u6216\u90e8\u7f72\u5171\u4eab\u5e93\u65f6\uff0c\u5fc5\u987b\u9075\u5faa\u7edf\u4e00\u7ea6\u5b9a\u7684\u89c4\u5219\u624d\u884c\uff0c\u5176\u4e2d\u5305\u62ec\u52a8\u6001\u5e93\u7684\u547d\u540d\u89c4\u5219\u53ca\u5176\u90e8\u7f72\u65b9\u5f0f\u3002</p> <p>\u5171\u4eab\u5e93\u547d\u540d\u7ea6\u5b9a</p> <ol> <li> <p>\u6bcf\u4e2a\u52a8\u6001\u5e93\u6709\u4e00\u4e2a\u5305\u542b\u4e86\u771f\u6b63\u7684\u5e93\u4ee3\u7801\u7684\u6587\u4ef6\u540d\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u5e93\u7684\u00a0realname\u00a0\uff0c\u547d\u540d\u683c\u5f0f\u901a\u5e38\u4e3alibxxx.so.x.y.z\uff0c\u5176\u4e2dso\u540e\u7f00\u4e2d\u7684x\u4e3a\u4e3b\u7248\u672c\u53f7\uff0cy\u4e3a\u526f\u7248\u672c\u53f7\uff0cz\u4e3a\u53d1\u884c\u7248\u672c\u53f7\u3002\u4f8b\u5982\uff0c\u6211\u7684linux\u7cfb\u7edf\u673a\u5668\u4e0azlib\u5171\u4eab\u5e93\u7684realname\u4e3alibz.so.1.2.8\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u542b\u6709\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u52a8\u6001\u5e93\u90fd\u6709\u4e00\u4e2a\u4ee5\u201dlib\u201d\u4e3a\u524d\u7f00\u4e14\u4ee5 \u201d.so.x\u201d\u4e3a\u7ed3\u5c3e\u7684\u88ab\u79f0\u4e3a\u00a0so name\u7684\u7279\u5b9a\u540d\u79f0\uff0c\u5176\u4e2dx\u4e3a\u4e3b\u7248\u672c\u53f7\uff0csoname\u547d\u540d\u683c\u5f0f\u901a\u5e38\u4e3alibxxx.so.x(\u53bb\u6389\u526f\u7248\u672c\u53f7\u548c\u53d1\u884c\u7248\u672c\u53f7)\u3002\u4f8b\u5982\uff0c\u6211\u7684linux\u7cfb\u7edf\u673a\u5668\u4e0azlib\u5171\u4eab\u5e93\u7684soname\u4e3alibz.so.1\u3002\u8fd9\u4e2asoname\u5305\u542b\u4e86\u52a8\u6001\u5e93\u7684\u4e3b\u7248\u672c\u53f7\uff0c\u8fd9\u4e2adoname\u4e00\u822c\u4f1a\u5305\u542b\u5728\u5e93\u4ee3\u7801\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528 readelf -d \u8bfb\u53d6\u51fa\u6765\uff0c\u4f7f\u7528\u8fd9\u4e2a\u52a8\u6001\u5e93\u7684\u7a0b\u5e8f\u7684\u4e8c\u8fdb\u5236ELF\u7684\u5934\u6587\u4ef6\u4e2d\u5305\u542b\u6709\u8fd9\u4e2a\u52a8\u6001\u5e93\u7684soname\u3002\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u6309\u7167\u8fd9\u4e2a\u540d\u79f0\u53bb\u627e\u771f\u6b63\u7684\u5e93\u6587\u4ef6\u3002\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u5171\u4eab\u5e93\u6240\u5728\u7684\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u8ddfSO-NAME\u76f8\u540c\u7684\u5e76\u4e14\u6307\u5411\u5b83\u7684\u8f6f\u8fde\u63a5(Symbol Link)\u3002  \u8fd9\u4e2a\u8f6f\u8fde\u63a5\u4f1a\u6307\u5411\u76ee\u5f55\u4e2d\u4e3b\u7248\u672c\u53f7\u76f8\u540c\u3001\u6b21\u7248\u672c\u53f7\u548c\u53d1\u5e03\u7248\u672c\u53f7\u6700\u65b0\u7684\u5171\u4eab\u5e93\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bd4\u5982\u76ee\u5f55\u4e2d\u6709\u4e24\u4e2a\u5171\u4eab\u5e93\u7248\u672c\u5206\u522b\u4e3a\uff1a/lib/libtest.so.3.8.2\u548c/lib/libtest.so.3.7.5,\u4e48\u8f6f\u8fde\u63a5/lib/libtest.so.3\u6307\u5411/lib/libtest.so.3.8.2\u3002</p> </li> <li> <p>\u6b64\u5916\uff0c\u7f16\u8bd1\u94fe\u4f9d\u8d56\u4e86\u5171\u4eab\u5e93\u7684\u5e94\u7528\u6a21\u5757\u65f6\uff0c\u94fe\u63a5\u5668\u53ea\u8ba4\u4e0d\u5e26\u4efb\u4f55\u7248\u672c\u53f7\u7684\u5171\u4eab\u5e93\u540d\uff0c\u00a0\u53ef\u4ee5\u5c06\u5e93\u540d\u79f0\u4f5c\u201d\u00a0linker name\u3002\u4e5f\u5c31\u662f\u505a\u8f6f\u8fde\u63a5\u3002\u4f8b\u5982\uff0c\u6211\u7684linux\u7cfb\u7edf\u673a\u5668\u4e0azlib\u5171\u4eab\u5e93\u7684linkername\u4e3alibz.so\u3002\u4e5f\u5373\uff0c\u94fe\u63a5\u4f7f\u7528\u4e86\u52a8\u6001\u5e93\u7684\u7a0b\u5e8f\u65f6\u67e5\u627e\u7684\u52a8\u6001\u5e93\u540d\u79f0\u3002\u4f8b\u5982\uff1agcc -o test test.o -lz , \u94fe\u63a5\u65f6\u5c31\u4f1a\u627elibz.so \u3002\u82e5\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u94fe\u63a5\u5668\u5c31\u62a5\u9519\u3002</p> </li> <li> <p>Linux\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5177\u2014\u2014ldconfig\uff0c\u5f53\u7cfb\u7edf\u4e2d\u5b89\u88c5\u6216\u66f4\u65b0\u4e00\u4e2a\u5171\u4eab\u5e93\u65f6\uff0c\u9700\u8981\u8fd0\u884c\u8fd9\u4e2a\u5de5\u5177\uff0c\u5b83\u4f1a\u904d\u5386\u9ed8\u8ba4\u6240\u6709\u5171\u4eab\u5e93\u76ee\u5f55\uff0c\u6bd4\u5982/lib\uff0c/usr/lib\u7b49\uff0c\u7136\u540e\u66f4\u65b0\u6240\u6709\u7684\u8f6f\u94fe\u63a5\uff0c\u4f7f\u5979\u4eec\u6307\u5411\u6700\u65b0\u5171\u4eab\u5e93\u3002 \u5f53\u6211\u4eec\u5728\u7f16\u8bd1\u5668\u91cc\u4f7f\u7528\u5171\u4eab\u5e93\u7684\u65f6\u5019\uff0c\u5982\u7528GCC\u7684\u201c-l\u201d\u53c2\u6570\u94fe\u63a5\u5171\u4eab\u5e93libtXXX.so.3.8.1\uff0c\u53ea\u9700\u8981\u5728\u7f16\u8bd1\u5668\u547d\u4ee4\u884c\u6307\u5b9a -l XXX \u5373\u53ef\uff0c\u7701\u7565\u4e86\u524d\u7f00\u548c\u7248\u672c\u4fe1\u606f\u3002</p> </li> </ol>"},{"location":"linux/linux%E4%B8%AD%E7%9A%84%E9%80%9A%E4%BF%A1/","title":"Linux\u4e2d\u7684\u901a\u4fe1","text":"<p>socket\u901a\u4fe1\u5927\u6cd5\u597d socket = socket.socket(family, type[, protocal])</p> <ol> <li>family\u4ee3\u8868\u5730\u5740\u5bb6\u65cf\uff0c\u4e00\u822c\u4e3aAF_UNIX\uff0cAF_INET\u548cAF_INET6\u3002AF_UNIX\u7528\u4e8e\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u8fdb\u7a0b\u901a\u4fe1\uff0cAF_INET\u7528\u4e8eIPV4\u534f\u8bae\u7684TCP\u548cUDP\uff0cAF_INET6\u7528\u4e8eIPV6\u534f\u8bae\uff1b</li> <li>type\u4ee3\u8868\u5957\u63a5\u5b57\u7c7b\u578b\uff0c\u4e00\u822c\u4e3aSOCK_STREAM\uff0cSOCK_DGRAM\u548cSOCK_RAW\u3002SOCK_STREAM\u4e3a\u6d41\u5f0f\u5957\u63a5\u5b57\uff0c\u7528\u4e8eTCP\u901a\u4fe1\uff0cSOCK_DGRAM\u4e3a\u6570\u636e\u62a5\u5f0f\u5957\u63a5\u5b57\uff0c\u7528\u4e8eUDP\u901a\u4fe1\uff0cSOCK_RAW\u4e3a\u539f\u59cb\u5957\u63a5\u5b57\uff0c\u53ef\u4ee5\u7528\u4e8e\u5904\u7406ICMP\u3001IGMP\u7b49\u7f51\u7edc\u62a5\u6587\uff0c\u8fd9\u662f\u666e\u901a\u5957\u63a5\u5b57\u65e0\u6cd5\u5904\u7406\u7684;</li> <li>protocal\u4ee3\u8868\u534f\u8bae\u7f16\u53f7\uff0c\u9ed8\u8ba4\u4e3a0\u3002</li> </ol>"},{"location":"linux/linux%E4%B8%AD%E7%9A%84%E9%80%9A%E4%BF%A1/#1","title":"1.\u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<ol> <li>\u5bf9\u4e8e\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u53ef\u4ee5\u4f7f\u7528python socket\u5305\uff0c\u539f\u7406\u548c\u540c\u4e00\u5c40\u57df\u7f51\u4e0b\u4e24\u53f0\u7535\u8111\u7684python\u901a\u4fe1\u7c7b\u4f3c\uff0c\u4f46\u662f\u628aip\u5730\u5740\u8bbe\u7f6e\u4e3a\"\"\u6216\u8005localhost\u5c31\u53ef\u4ee5\u4e86\uff0c\u7c7b\u578b\u9009\u62e9socket.AF_INET 2.linux\u4e0b\u8fd8\u53ef\u4ee5\u4f7f\u7528socket\u4e2d\u7684socket.AF_UNIX\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1</li> </ol> <p>\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0</p>"},{"location":"linux/linux%E4%B8%AD%E7%9A%84%E9%80%9A%E4%BF%A1/#2python","title":"2.\u540c\u4e00\u5c40\u57df\u7f51\u4e0b\u4e24\u53f0\u7535\u8111\u7684python\u901a\u4fe1","text":"<p>\u7c7b\u578b\u9009\u62e9socket.AF_INET</p> <p>\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0</p>"},{"location":"linux/linux%E4%B8%AD%E7%9A%84%E9%80%9A%E4%BF%A1/#3python","title":"3.\u516c\u7f51\u4e0b\u4e24\u53f0\u7535\u8111\u7684python\u901a\u4fe1","text":"<p>\u5b9e\u73b0\u5c40\u57df\u7f51\u5230\u5e7f\u57df\u7f51\u7684\u901a\u4fe1\uff0c\u9996\u5148\u9700\u8981\u4e00\u53f0\u8fde\u7f51\u7684\u672c\u5730\u8ba1\u7b97\u673a\u548c\u4e00\u4e2a\u670d\u52a1\u5668\uff08\u6bd4\u5982\u8d2d\u4e70\u7684\u963f\u91cc\u4e91\u670d\u52a1\u5668\uff0c\u5fc5\u987b\u662f\u8fde\u63a5\u82f1\u7279\u7f51\u7684\uff09\u3002\u53ea\u8981\u672c\u5730\u7684\u8ba1\u7b97\u673a\u80fdping\u901a\u670d\u52a1\u5668\u7684IP\u5c31\u884c\u4e86\uff08\u670d\u52a1\u5668\u662f\u65e0\u6cd5ping\u901a\u672c\u5730\u7684\u8ba1\u7b97\u673a\u7684\uff0c\u539f\u56e0\u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\uff09\u3002</p> <p>\u7531\u4e8e\u5c40\u57df\u7f51\u548c\u5e7f\u57df\u7f51\u53ea\u80fd\u5efa\u7acb\u5355\u5411\u8fde\u63a5\u7684socket\u901a\u4fe1\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u80fd\u5c06\u670d\u52a1\u5668\u4f5c\u4e3a\u670d\u52a1\u7aef\u6765\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u670d\u52a1\u5668\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u5728\u670d\u52a1\u5668\u4e0a\u65b0\u5efa\u4e00\u4e2aserver.py\u6587\u4ef6\uff08\u548c\u5c40\u57df\u7f51\u4e4b\u95f4\u901a\u4fe1\u7684\u670d\u52a1\u7aefserver.py\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u53ea\u662f\u7ed1\u5b9a\u7684IP\u4e3a\u670d\u52a1\u5668\u81ea\u5df1\u7684IP<code>server.bind(('192.168.27.238', 6688))</code>\u6539\u4e3a<code>server.bind(('220.181.111.188', 6688))</code>220.181.111.188\u662f\u767e\u5ea6\u7684IP\uff0c\u6539\u4e3a\u4f60\u7684\u670d\u52a1\u5668IP\uff09\uff0c\u7136\u540e\u5728\u672c\u673a\u5efa\u4e00\u4e2aclient.py\u6587\u4ef6\uff0c\u5185\u5bb9\u548c\u5c40\u57df\u7f51\u4e4b\u95f4\u901a\u4fe1\u7684client.py\u4e00\u81f4\uff0c\u53ea\u662f\u8fde\u63a5\u7684IP\u6539\u4e3a\u670d\u52a1\u5668\u7684IP\uff08<code>client.connect(('192.168.27.238', 6688))</code>\u6539\u4e3a<code>client.connect(('220.181.111.188', 6688))</code>\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5197\u4f59\u7684\u8d34\u4ee3\u7801\u4e86\uff09</p> <p>\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0</p>"},{"location":"linux/linux%E4%BF%AE%E6%94%B9%E8%AF%AD%E8%A8%80/","title":"Linux\u4fee\u6539\u8bed\u8a00","text":"<p>\u82f1\u6587 \u4fee\u6539/etc/default/locale\u6587\u4ef6 sudo vim /etc/default/locale</p> <p>\u6539\u4e3a\uff1a LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US:en\"</p> <p>\u4e2d\u6587\u6539\u4e3a\uff1a LANG=\"zh_CN.UTF-8\" LANGUAGE=\"zh_CN:zh\"</p>"},{"location":"linux/linux%E5%AE%89%E8%A3%85%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/","title":"Linux\u5b89\u88c5\u663e\u5361\u9a71\u52a8","text":"<p>linux\u5728\u5b89\u88c5\u7cfb\u7edf\u5f00\u673a\u65f6\u7ecf\u5e38\u4f1a\u9047\u5230\u9ed1\u5c4f\u7684\u60c5\u51b5\uff0c\u4e3b\u8981\u662f\u56e0\u4e3alinux\u5f00\u6e90\u663e\u5361\u9a71\u52a8\uff0c\u4ee5\u4e0b\u662f\u89e3\u51b3\u65b9\u6848\uff1a 1.\u9996\u5148\u786e\u5b9a\u8fdb\u5165\u7cfb\u7edf\u7684\u5f15\u5bfc\u662fefi\u5f15\u5bfc\u8fd8\u662flegacy\u5f15\u5bfc</p> <p>2.\u5982\u679c\u662flegacy\u5f15\u5bfc      \u91cd\u542f\u540e\u4e0d\u65ad\u6309e\uff0c\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f \u9009\u62e9\u8bed\u8a00\uff0c\u7136\u540e\u9009\u62e9\u5b89\u88c5ubuntu\uff0c\u6309f6\uff0c\u627e\u5230nomodeset\uff0c\u5173\u95ed\u5c31\u53ef\u4ee5\u4e86  </p> <p>3.\u5982\u679cuefi\u5f15\u5bfc </p> <p></p> <p>\u91cd\u542f\uff0c\u7136\u540e\u6309e\uff0c\u6dfb\u52a0nomodeset\uff0c\u7136\u540e\u6309f10\u4fdd\u5b58\u3002 </p> <p></p> <p>4.\u5982\u679c\u542f\u52a8\u540e\u9ed1\u5c4f \u540c\u6837\u5728\u542f\u52a8\u754c\u9762\u6309e\uff0c\u627e\u5230linux\u7684\u90a3\u4e00\u9879\u3002\u6dfb\u52a0nomodeset\uff0c\u7136\u540e\u6309f10\u4fdd\u5b58\u3002 </p> <p>\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a\u89c6\u9891 https://www.bilibili.com/video/BV1wY411p7mU?p=2&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40</p>"},{"location":"linux/linux%E5%AE%89%E8%A3%85%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/#linux","title":"linux\u5b89\u88c5\u663e\u5361\u9a71\u52a8\u6709\u4e24\u5927\u9014\u5f84\uff1a","text":""},{"location":"linux/linux%E5%AE%89%E8%A3%85%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/#1-ubuntu","title":"1. \u4eceubuntu\u8f6f\u4ef6\u4e2d\u5fc3\u8fdb\u884c\u9009\u62e9","text":""},{"location":"linux/linux%E5%AE%89%E8%A3%85%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/#2nvidia","title":"2.\u81ea\u5df1\u5728nvidia\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u5b89\u88c5","text":"<pre><code>1.\u9996\u5148\u5173\u95edbios\u7684security boot\uff0c\u4e0d\u7136\u5b89\u88c5\u663e\u5361\u9a71\u52a8\u4f1a\u51fa\u73b0\u7b7e\u540d\u8ba4\u8bc1\u3002\n2.\u5728\u8be5\u7f51\u7ad9\u4e0b\u4e0b\u8f7d\u4e0b\u5361\u9a71\u52a8\uff0c\u9009\u62e9\u9002\u5408\u81ea\u5df1\u7248\u672c\u7684\u663e\u5361\u9a71\u52a8\nhttps://www.nvidia.cn/Download/index.aspx?lang=cn\n3.\u4e0b\u8f7d\u663e\u5361\u9a71\u52a8\uff0c\u7136\u540e sudo bash  xxxx.run\n</code></pre>"},{"location":"linux/linux%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/","title":"Linux\u5f00\u673a\u81ea\u542f\u52a8\u7684\u65b9\u6cd5","text":"<p>\u53c2\u8003\u4e0b\u8fb9\u8fd9\u7bc7\u6587\u7ae0 https://blog.csdn.net/hualinger/article/details/125321966</p>"},{"location":"linux/linux%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/#rclocal","title":"\u4e00\u3001rc.local\u6587\u4ef6\u4e2d\u6dfb\u52a0\u81ea\u542f\u52a8\u547d\u4ee4","text":"<p>\u7f16\u8f91\"/etc/rc.local\"**\uff0c\u6dfb\u52a0\u5b8c\u4fdd\u5b58\u540e\u8bbe\u7f6erc.local\u53ef\u6267\u884c\u6743\u9650</p>"},{"location":"linux/linux%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/#etcinitd","title":"\u4e8c\u3001\u5728/etc/init.d\u76ee\u5f55\u4e0b\u6dfb\u52a0\u81ea\u542f\u52a8\u811a\u672c","text":""},{"location":"linux/linux%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/#linux","title":"\u4e09\u3001\u5236\u4f5cLinux\u670d\u52a1\u5e76\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f\u52a8","text":""},{"location":"linux/linux%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81/","title":"Linux\u65e0\u6cd5\u83b7\u5f97\u9501","text":""},{"location":"linux/linux%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81/#_1","title":"\u65b9\u6848\u4e00","text":"<p>\u5f3a\u5236\u89e3\u9501\uff08\u6bd4\u8f83\u66b4\u529b\uff09</p> <pre><code>sudo rm /var/lib/apt/lists/lock\n</code></pre>"},{"location":"linux/linux%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81/#_2","title":"\u65b9\u6848\u4e8c","text":"<p>ps aux \u5217\u51fa\u5f53\u524d\u8fdb\u7a0b\u5217\u8868 \u627e\u5230 apt-get \u90a3\u4e2a\u88ablock\u4f4f\u7684\u8fdb\u7a0b\u8bb0\u4e0bPID\uff0csudo kill PID \u5373\u53ef\uff0c\u56e0\u4e3alinux\u53ea\u5141\u8bb8\u5f00\u4e00\u4e2aapt-get\uff0c\u5f53\u7136apt-get\u548c\u65b0\u7acb\u5f97\u4e5f\u662f\u53ea\u80fd\u540c\u65f6\u5f00\u4e00\u4e2a\uff0c\u5177\u4f53\u547d\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>1.\u5217\u51fa\u5f53\u524d\u8fdb\u7a0b\u5217\u8868 \nps -aux | grep apt-get\n\n2.\u627e\u5230\u6700\u540e\u4e00\u5217\u4ee5apt-get \u5f00\u5934\u7684\u8fdb\u7a0b,\u7136\u540esudo kill PID\nsudo kill PID\n</code></pre>"},{"location":"linux/linux%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/","title":"Linux\u7ec8\u7aef\u8fde\u63a5\u7f51\u7edc","text":"<p>\u4e3b\u8981\u4f7f\u7528\u7684\u5de5\u5177\u4e3anetplan tips\uff1a \u91cd\u542f\u7f51\u7edc\uff1a sudo service network-manager restart \u6216\u8005 sudo systemctl restart NetworkManager.service</p> <p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff1a \u5728root\u7528\u6237\u4e0b\u4f7f\u7528 nmtui\u547d\u4ee4\uff08\u4e0d\u5728root\u7528\u6237\u4e0b\u4f1a\u914d\u7f6e\u5931\u8d25\uff09</p> <p>\u5982\u679c\u6ca1\u6709\u8981sudo apt install network-manager\uff08ubuntu\u662f\u9884\u88c5\u7684\uff09</p> <p>\u5982\u679c\u5b9e\u5728\u4e0d\u884c\uff08\u6ca1\u6709nmtui\u53ef\u7528\uff09\uff1a\u90a3\u4e48\u9700\u8981\u6309\u4ee5\u4e0b\u6b65\u9aa4</p>"},{"location":"linux/linux%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/#1","title":"\u6b65\u9aa4 1\uff1a\u786e\u5b9a\u4f60\u7684\u65e0\u7ebf\u7f51\u7edc\u63a5\u53e3\u540d\u79f0","text":"<p>ifconfg -a \u4e00\u822cwifi\u4f1a\u8baewlan0\u7684\u540d\u79f0\u51fa\u73b0</p>"},{"location":"linux/linux%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/#2-netplan-wifi","title":"\u6b65\u9aa4 2\uff1a\u7f16\u8f91 Netplan \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 wifi \u63a5\u53e3\u8be6\u7ec6\u4fe1\u606f","text":"<p>Netplan \u914d\u7f6e\u6587\u4ef6\u5728\u00a0<code>/etc/netplan</code>\u00a0\u76ee\u5f55\u4e0b\u3002\u5982\u679c\u4f60\u67e5\u770b\u8fd9\u4e2a\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u7c7b\u4f3c\u00a0<code>01-network-manager-all.yml</code>\u00a0\u6216\u00a0<code>50-cloud-init.yaml</code>\u00a0\u7b49\u6587\u4ef6\u3002  \u5982\u679c\u662f Ubuntu \u670d\u52a1\u5668\uff0c\u4f60\u5e94\u8be5\u6709\u00a0<code>50-cloud-init.yaml</code>\u00a0\u6587\u4ef6\u3002\u5982\u679c\u662f\u684c\u9762\u8ba1\u7b97\u673a\uff0c\u5e94\u8be5\u662f\u00a0<code>01-network-manager-all.yml</code>\u00a0\u6587\u4ef6\u3002</p> <p>Linux \u684c\u9762\u8ba1\u7b97\u673a\u7684 Network Manager \u5141\u8bb8\u4f60\u9009\u62e9\u4e00\u4e2a\u65e0\u7ebf\u7f51\u7edc\u3002\u4f60\u53ef\u4ee5\u5728\u5b83\u7684\u914d\u7f6e\u4e2d\u786c\u7f16\u7801\u5199\u5165 WiFi \u63a5\u5165\u70b9\u3002\u8fd9\u53ef\u4ee5\u5728\u81ea\u52a8\u6389\u7ebf\u7684\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u6302\u8d77\uff09\u65f6\u5e2e\u52a9\u5230\u4f60\u3002</p> <p>\u4e0d\u7ba1\u662f\u54ea\u4e2a\u6587\u4ef6\uff0c\u90fd\u53ef\u4ee5\u6253\u5f00\u7f16\u8f91\u3002\u6211\u5e0c\u671b\u4f60\u5bf9 Nano \u7f16\u8f91\u5668\u6709\u4e00\u70b9\u719f\u6089\uff0c\u56e0\u4e3a Ubuntu \u9884\u88c5\u4e86\u5b83\u3002</p> <p>\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6  1.  <code>wifis:</code> 2.  <code>wlan0:</code> 3.  <code>dhcp4: true</code> 4.  <code>optional: true</code> 5.  <code>access-points:</code> 6.  <code>\"SSID_name\":</code> 7.  <code>password: \"WiFi_password\"</code></p> <p></p>"},{"location":"linux/linux%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/#3","title":"\u6b65\u9aa4 3\uff1a\u4f7f\u914d\u7f6e\u751f\u6548","text":"<ol> <li><code>sudo netplan generate</code></li> <li><code>sudo netplan apply</code></li> </ol> <p>\u5982\u679c\u62a5\u9519\uff1a </p> <p>\u5426\u5219\u91cd\u542f</p>"},{"location":"linux/linux%E8%AE%BE%E5%A4%87%E6%A0%91/","title":"Linux\u8bbe\u5907\u6811","text":""},{"location":"linux/linux%E8%AE%BE%E5%A4%87%E6%A0%91/#_1","title":"\u4e3b\u8981\u4f5c\u7528","text":"<ol> <li>\u4f7fLinux\u5185\u6838\u548c\u786c\u4ef6\u80fd\u591f\u89e3\u8026\u3002\uff08\u5728linux\u5185\u68382.6\u4e4b\u524d\uff0clinux\u4e2d\u8bbe\u5907\u7684\u4fe1\u606f\u7684\u4e00\u4e9b\u9a71\u52a8\u8981\u7f16\u8bd1\u8fdb\u5185\u6838\uff0c\u8fd9\u5bfc\u81f4\u4e0d\u540c\u7684\u5f00\u53d1\u677f\u7684linux\u5185\u6838\u90fd\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u4ee5\u9002\u5e94\u5f00\u53d1\u677f\u4e2d\u7684\u786c\u4ef6\u3002\u5f15\u5165\u8bbe\u5907\u6811\u4e4b\u540e\uff0c\u5185\u6838\u53ef\u4ee5\u5355\u72ec\u7f16\u8bd1\uff0c\u786c\u4ef6\u8bbe\u5907\u7528\u8bbe\u5907\u6811\uff08dts\u6587\u4ef6\uff09\u6765\u63cf\u8ff0\uff0c\u5e76\u7528dtc\u5de5\u5177\u5355\u72ec\u7f16\u8bd1\uff0c\u5e76\u7f16\u8bd1\u51fadtb\u6587\u4ef6\u3002\u8fd9\u6837\u5728\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019\uff0c\u518d\u53bb\u52a0\u8f7ddtb\u6587\u4ef6\uff0c\u4ece\u800c\u5b9e\u73b0\u5185\u6838\u548c\u786c\u4ef6\u7684\u89e3\u8026\uff09</li> <li>https://zhuanlan.zhihu.com/p/476561682</li> </ol> <p>https://www.bilibili.com/video/BV1t3411M7kn/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40</p>"},{"location":"linux/on-my-zsh%E4%B8%BB%E9%A2%98%E6%8E%A8%E8%8D%90/","title":"On my zsh\u4e3b\u9898\u63a8\u8350","text":"<p>\u53ea\u63a8\u8350rkj-repos</p> <p>\u5728\u8fd9\u4e2a\u4e3b\u9898\u4e2d\uff0c\u4f1a\u6709\u4e00\u4e2a\u547d\u4ee4\u72b6\u6001\u7801\u7684\u6982\u5ff5 https://blog.csdn.net/wlovh1989/article/details/51113488</p> <p>0                   \u547d\u4ee4\u6210\u529f\u7ed3\u675f 1                    \u901a\u7528\u672a\u77e5\u9519\u8bef 2                    \u8bef\u7528shell\u547d\u4ee4 126               \u547d\u4ee4\u4e0d\u53ef\u6267\u884c 127               \u6ca1\u627e\u5230\u547d\u4ee4 128               \u65e0\u6548\u9000\u51fa\u53c2\u6570 128+x          Linux \u4fe1\u53f7x\u7684\u4e25\u91cd\u9519\u8bef 130            Linux \u4fe1\u53f72 \u7684\u4e25\u91cd\u9519\u8bef\uff0c\u5373\u547d\u4ee4\u901a\u8fc7SIGINT\uff08Ctrl\uff0b\uff23\uff09\u7ec8\u6b62 255               \u9000\u51fa\u72b6\u6001\u7801\u8d8a\u754c</p> <p>\u6bd4\u5982127\u4ee3\u8868\u6ca1\u6709\u627e\u5230\u547d\u4ee4 </p>"},{"location":"linux/source%E3%80%81bash%E3%80%81sh%E3%80%81.%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"Source\u3001bash\u3001sh\u3001.\u7684\u533a\u522b","text":"<p>Linux \u4e00\u4e2ashell\u547d\u4ee4\u7a97\u53e3\uff0c\u5c31\u662fLinux\u7cfb\u7edf\u7684\u4e00\u4e2ashell\u8fdb\u7a0b\uff0c\u5982\u679c\u6253\u5f00\u547d\u4ee4\u7a97\u53e3\u5c31\u662f\u591a\u4e2ashell\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u7684\u73af\u5883\uff0c\u6bd4\u5982\u4f7f\u7528env\u547d\u4ee4\u67e5\u770b\u5230\u7684\u5c31\u662f\u5f53\u524d\u7a97\u53e3\u8fdb\u7a0b\u7684\u73af\u5883\u53d8\u91cf\u3002\u5728\u8fd9\u4e2a\u7a97\u53e3\u4e0b\u901a\u8fc7\u547d\u4ee4\u8fd0\u884c\u8d77\u6765\u7684\u7a0b\u5e8f\uff08\u6bd4\u5982\u4e00\u4e9bLinux\u547d\u4ee4\uff0c\u5982ls\u547d\u4ee4\u6216./ext_file \u547d\u4ee4\uff0c\u547d\u4ee4\u5373\u7a0b\u5e8f\uff09\uff0c\u5c31\u662f\u8be5shell\u7a97\u53e3\u8fdb\u7a0b\u7684\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684\u73af\u5883\uff0c\u5373\u7ee7\u627fenv\u73af\u5883\u53d8\u91cf\uff08\u975eexport\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u7ee7\u627f\uff09\u3002</p> <p>test.sh <pre><code>#\u52a0\u4e00\u4e2a\u73af\u5883\u53d8\u91cftest\uff0c\u8d4b\u503c666\nexport test=666 \n#\u67e5\u770b\u4e00\u4e0b\u6b64\u65f6shell\u8fdb\u7a0b\u7684\u73af\u5883\u53d8\u91cf\nenv\n</code></pre></p>"},{"location":"linux/source%E3%80%81bash%E3%80%81sh%E3%80%81.%E7%9A%84%E5%8C%BA%E5%88%AB/#1-source","title":"1 source","text":"<p>source\u662f\u5728\u5f53\u524d\u8fdb\u7a0b\uff08\u7ec8\u7aef\uff09\u4e0b\u6267\u884c\u811a\u672c\u3002source test.sh \u7b49\u4ef7\u4e8e\u00a0 . test.sh</p> <p>\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u65f6\uff0c\u5e76\u975e\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0ctest.sh\u5185\u5bb9\u662f\u5728\u5f53\u524d\u7684shell\u8fdb\u7a0b\u6267\u884c,\u5373\u4f1a\u5728\u5f53\u524d\u8fdb\u7a0b\u751f\u6548\uff0c\u6267\u884c\u4e4b\u540e\uff0ctest.sh\u4e2denv\u547d\u4ee4\u663e\u793a\u7684\u662f\u5f53\u524d\u8fdb\u7a0b\u8fdb\u7a0b\u7684\u73af\u5883\u53d8\u91cf\uff0c\u786e\u5b9e\u6dfb\u52a0\u4e86 test=666\u3002</p> <p>\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165env\uff0c\u8fd8\u662f\u6709test\u73af\u5883\u53d8\u91cf\uff0c\u8fd9\u662f\u56e0\u4e3a\u662f\u5728\u5f53\u524d\u8fdb\u7a0b\u4e0b\u521b\u5efa\u7684\u3002</p> <p>\u7528\u9014\uff1a\u7ed9\u5f53\u524d\u547d\u4ee4\u7a97\u53e3\u8fdb\u7a0b\uff0c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff0c\u6bd4\u5982Make\u7684\u7f16\u8bd1\u73af\u5883\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u4e00\u4e2a\u4e00\u4e2a\u53d8\u91cf\u6dfb\u52a0\uff0c\u9ebb\u70e6\uff0c\u4e00\u822c\u90fd\u5199\u5728\u4e00\u4e2axxx.sh\u6587\u4ef6\u4e2d\uff0c\u901a\u8fc7 source xxx.sh\u7edf\u4e00\u6dfb\u52a0\u3002xxx.sh\u4e0d\u9700\u8981\u6709\u201d\u6267\u884c\u6743\u9650\u201d</p>"},{"location":"linux/source%E3%80%81bash%E3%80%81sh%E3%80%81.%E7%9A%84%E5%8C%BA%E5%88%AB/#2-shbash","title":"2 ./\u3001sh\u3001bash","text":"<p>\u8fd9\u4e09\u4e2a\u547d\u4ee4\u90fd\u662f\u65b0\u5f00\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4\u3002\uff08\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u662f\u7236\u8fdb\u7a0b\u770b\u4e0d\u5230\u5b50\u8fdb\u7a0b\u7684\u73af\u5883\u53d8\u91cf\uff09</p> <p>\u5982\u679c\u6211\u76f4\u63a5\u8fd0\u884c./test.sh\uff08\u9700\u8981\u6709\u53ef\u6267\u884c\u6743\u9650\uff09\uff0c\u9996\u5148\u4f60\u4f1a\u67e5\u627e\u811a\u672c\u7b2c\u4e00\u884c\u662f\u5426\u6307\u5b9a\u4e86\u89e3\u91ca\u5668\uff0c\u5982\u679c\u6ca1\u6307\u5b9a\uff0c\u90a3\u4e48\u5c31\u7528\u5f53\u524d\u7cfb\u7edf\u9ed8\u8ba4\u7684shell(\u5927\u591a\u6570linux\u9ed8\u8ba4\u662fbash)\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u89e3\u91ca\u5668\uff0c\u90a3\u4e48\u5c31\u5c06\u8be5\u811a\u672c\u4ea4\u7ed9\u6307\u5b9a\u7684\u89e3\u91ca\u5668.\u6bd4\u5982</p> <pre><code>#!/usr/bin/python\n#!/usr/bin/bash\n</code></pre> <p>\u6267\u884c./test.sh\u8fd9\u4e2a\u547d\u4ee4\u65f6\uff08\u5148\u7528unset test\u5220\u9664\u73af\u5883\u53d8\u91cf\uff09\uff0c\u4f1a\u57fa\u4e8e\u5f53\u524d\u7a97\u53e3shell\u8fdb\u7a0b\uff0c\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0ctest.sh\u5185\u5bb9\u662f\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u5e76\u751f\u6548\uff0ctest.sh\u4e2d\u7684env\u547d\u4ee4\u663e\u793a\u7684\u662f\u5b50\u8fdb\u7a0b\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5b50\u8fdb\u7a0b\u4e2d\u786e\u5b9e\u6dfb\u52a0\u4e86test=666\u3002</p> <p>\u4f46\u6b64\u65f6\u518d\u7528\u547d\u4ee4env\u67e5\u770b\u73af\u5883\u53d8\u91cf\uff08\u6b64\u65f6\u662f\u7236\u8fdb\u7a0b\uff09\uff0c\u91cc\u8fb9\u6ca1\u6709test=666\u53d8\u91cf </p> <p>sh \u3001bash\u547d\u4ee4\u4e0e./ \u4e00\u6837\uff0c\u90fd\u662f\u521b\u5efa\u5b50\u8fdb\u7a0b\u3002\u53ea\u4e0d\u8fc7\u8fd9\u4e24\u4e2a\u4e13\u7528\u4e8e\u6267\u884csh\u811a\u672c\uff0c\u800c./\u547d\u4ee4\u53ef\u7528\u4e8e\u6240\u6709\u53ef\u6267\u884c\u6587\u4ef6\uff08sh\u3001bin\u6587\u4ef6\uff09</p>"},{"location":"linux/ubuntu-setup/","title":"Ubuntu setup","text":""},{"location":"linux/ubuntu-setup/#0-su","title":"0 \u8bbe\u7f6esu\u5bc6\u7801","text":"<pre><code>1.\u8f93\u5165sudo passwd\u547d\u4ee4\uff0c\u7136\u540e\u4f1a\u63d0\u793a\u8f93\u5165\u5f53\u524d\u7528\u6237\u7684\u5bc6\u7801\u3002\u00a0\n2.\u6309enter\u952e\uff0c\u7ec8\u7aef\u4f1a\u63d0\u793a\u8f93\u5165\u65b0\u7684\u5bc6\u7801\u5e76\u786e\u8ba4\uff0c\u6b64\u65f6\u7684\u5bc6\u7801\u5c31\u662f\u65b0\u7684root\u5bc6\u7801\u3002\u00a0\n3.\u4fee\u6539\u5b8c\u6bd5\u4ee5\u540e\uff0c\u5728\u6267\u884csu root\u547d\u4ee4\uff0c\u6b64\u65f6\u8f93\u5165\u65b0\u7684root\u5bc6\u7801\u5373\u53ef\n</code></pre> <p>\u914d\u7f6e\u663e\u5361\u9a71\u52a8</p>"},{"location":"linux/ubuntu-setup/#1","title":"1 \u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\uff1a","text":"<p>1.neofetch\uff1a\u7ec8\u7aef\u7cfb\u7edf\u4fe1\u606f\u6c47\u603b 2.btop\uff1a\u4ee3\u66fftop\uff0c\u53ef\u4ee5\u67e5\u770b\u6e29\u5ea6 3.tweak\uff1a\u7528\u6765\u9501\u5b9a\u5927\u5199\u952e\u76d8\uff0c\u73a9\u88c5\u5b8c\u540e\u4e2d\u6587\u540d\u53ef\u80fd\u53eb \u4f18\u5316 4.\u65b0\u7acb\u5f97synaptic\u00a0 \u00a0 \u00a0sudo apt install\u00a0synaptic\uff1a\u7528\u6765\u53ef\u89c6\u5316apt\u5b89\u88c5\u5305\u7684gui\u754c\u9762 5.snap\uff1aubuntu\u4e0b\u53e6\u4e00\u4e2a\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5982\u679capt install\u627e\u4e0d\u5230\u53ef\u4ee5\u7528snap install 6.\u65e0\u9053\u8bcd\u5178 7.checkinstall\uff1a\u7528\u6765\u628amake install\u7684\u4e1c\u897f\u8f6c\u6210apt\u7ba1\u7406  8.\u5b89\u88c5GParted\u5de5\u5177\uff08\u6269\u5bb9\uff0c\u5206\u533a\uff09 sudo apt install gparted \u5206\u533a \u6269\u5bb9</p> <p>9.\u5b89\u88c5wps\uff0c\u5b89\u88c5\u7f3a\u5931\u5b57\u4f53</p> <pre><code>git clone https://github.com/IamDH4/ttf-wps-fonts.git &amp;&amp; cd ttf-wps-fonts\nsudo sh install.sh\n</code></pre> <p>10\u5b89\u88c5rofi\u542f\u52a8\u5668\u5e76\u914d\u7f6e\u5feb\u6377\u6307\u4ee4 11 \u5b89\u88c5flameshot\u5e76\u914d\u7f6e\u5feb\u6377\u6307\u4ee4 12 \u5b89\u88c5\u684c\u9762\u6269\u5c55</p> <ol> <li><code>sudo apt install gnome-tweak-tool</code></li> <li><code>sudo apt install chrome-gnome-shell</code></li> <li><code>sudo apt install gnome-shell-extensions</code></li> <li>\u641c\u7d22extension,\u6253\u5f00\u6269\u5c55- GNOME Shell Extensions Website</li> </ol> <p>13 \u81ea\u5e26\u7684\u4e00\u4e9b\u8f6f\u4ef6     1. pdf \u9605\u8bfb\u5668\uff1aevince\uff08\u5efa\u8bae\u6362\u6210okular\uff09     2. \u6587\u4ef6\u7ba1\u7406\u5668\uff1anautilus \uff08\u5efa\u8bae\u6362\u6210ranger\uff09     3. \u89c6\u9891\u64ad\u653e\u5668\uff1a\u5efa\u8bae\u6362\u6210vlc     4. </p>"},{"location":"linux/ubuntu-setup/#2-sshx","title":"2 \u914d\u7f6essh\u4ee5\u53cax","text":"<p>8.\u5b89\u88c5ssh\u5e76\u914d\u7f6e\u5f00\u673a\u542f\u52a8\uff1a sudo  apt-get  install openssh-server sudo /etc/init.d/ssh start sudo systemctl enable ssh</p> <p>\u6ce8\u610f\uff0cssh\u9ed8\u8ba4\u7684\u7aef\u53e3\u662f22\uff0c\u53ef\u4ee5\u66f4\u6539\u7aef\u53e3\uff0c\u66f4\u6539\u540e\u5148stop\uff0c \u7136\u540estart\u5c31\u53ef\u4ee5\u4e86\u3002\u6539\u914d\u7f6e\u5728/etc/ssh/sshd_config\u4e0b\uff0c\u5982\u4e0b\u6240\u793a\u3002 1. xjj@xjj-desktop:~$ vi /etc/ssh/sshd_config 2. # Package generated configuration file 3. # See the sshd(8) manpage\u00a0for\u00a0details 4. # What ports, IPs and protocols we listen\u00a0for 5. Port\u00a022</p> <p>\u5982X11\u65e0\u6cd5\u901a\u8fc7ssh\u8f6c\u53d1\uff1a</p> <p>\u5148\u5220\u9664~/.Xauthority \uff0c\u7136\u540e cd /etc/ssh/sshd_config</p> <p>\u4fee\u6539\u5982\u4e0b <pre><code>X11Forwarding yes\nX11DisplayOffset 10\nX11UseLocalhost yes\n</code></pre></p> <p>\u7136\u540e systemctl restart sshd</p> <p>\u5728winodws\u7684mobaxterm\u4e0a\u8bbe\u7f6ex11server\u3002offset\u6539\u4e3a10  9.\u5b89\u88c5\u914d\u7f6ecpolar\u5185\u7f51\u7a7f\u900f\uff1a\u4f7f\u7528\u5916\u7f51\u53ef\u4ee5ssh\u5230\u670d\u52a1\u5668\uff08\u4e0d\u7136\u53ea\u80fd\u5728\u540c\u4e00\u5c40\u57df\u7f51\u4e0bssh\uff09</p> <p>\u5185\u7f51\u7a7f\u900f</p> <p>curl  -L https://www.cpolar.com/static/downloads/install-release-cpolar.sh |  sudo  bash</p>"},{"location":"linux/ubuntu-setup/#3-gnome","title":"3 \u5f00\u542f/\u5173\u95ed gnome\u52a8\u753b","text":"<p>10.\u5173\u95ed\u52a8\u753b gsettings set org.gnome.desktop.interface enable-animations false \u91cd\u65b0\u5f00\u542f\u52a8\u753b gsettings set org.gnome.desktop.interface enable-animations true</p>"},{"location":"linux/ubuntu-setup/#4","title":"4 \u89e3\u51b3\u4e2d\u6587\u5b57\u4f53\u663e\u793a\u4e0d\u6b63\u5e38","text":""},{"location":"linux/ubuntu-setup/#41","title":"4.1 \u4fee\u6539\u5b57\u4f53\u4e3a\u82f1\u6587","text":"<p>\u4fee\u6539\u5b57\u4f53\uff1a \u4fee\u6539/etc/default/locale\u6587\u4ef6 sudo vim /etc/default/locale</p> <p>\u6539\u4e3a\uff1a LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US:en\"</p> <p>\u4e2d\u6587\u6539\u4e3a\uff1a LANG=\"zh_CN.UTF-8\" LANGUAGE=\"zh_CN:zh\"</p>"},{"location":"linux/ubuntu-setup/#42","title":"4.2\u89e3\u51b3\u82f1\u6587\u5b57\u4f53\u4e0b\u4e2d\u6587\u663e\u793a\u4e0d\u6b63\u5e38","text":"<p>\u5f53\u7cfb\u7edf\u4f7f\u7528\u7684\u662f\u82f1\u6587\u73af\u5883\u65f6\uff0cUbuntu\u9ed8\u8ba4\u91c7\u7528\u7684\u5b57\u4f53Noto Sans CJK\u4f18\u5148\u663e\u793a\u65e5\u6587\u6c49\u5b57\uff0c\u8fd9\u4e00\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6/etc/fonts/conf.avail/64-language-selector-prefer.conf\u6587\u5b57\u987a\u5e8f\u6765\u4fee\u590d. <pre><code>su\ncd /etc/fonts/conf.avail/\nvi 64-language-selector-prefer.conf\n\nJP \uff0d\u65e5\u6587  \nKR \uff0d \u97e9\u6587  \nSC \uff0d \u7b80\u4f53\u4e2d\u6587  \nTC \uff0d \u7e41\u4f53\u4e2d\u6587  \n\u4fee\u6539\u4e0a\u9762\u7684\u6587\u4ef6\uff0c\u5c06\u987a\u5e8f\u6539\u6210SC TC JP KR\uff0c\u5982\u4e0b\uff1a\n\n\n1 &lt;?xml version=\"1.0\"?&gt;                                                       \n2 &lt;!DOCTYPE fontconfig SYSTEM \"fonts.dtd\"&gt;\n3 &lt;fontconfig&gt;\n4     &lt;alias&gt;\n5         &lt;family&gt;sans-serif&lt;/family&gt;\n6         &lt;prefer&gt;\n7             &lt;family&gt;Noto Sans CJK SC&lt;/family&gt;\n8             &lt;family&gt;Noto Sans CJK TC&lt;/family&gt;\n9             &lt;family&gt;Noto Sans CJK JP&lt;/family&gt;\n10             &lt;family&gt;Noto Sans CJK KR&lt;/family&gt;\n11             &lt;family&gt;Noto Sans CJK HK&lt;/family&gt;\n12             &lt;family&gt;Lohit Devanagari&lt;/family&gt;\n13         &lt;/prefer&gt;\n14     &lt;/alias&gt;\n15     &lt;alias&gt;\n16         &lt;family&gt;serif&lt;/family&gt;\n17         &lt;prefer&gt;\n18             &lt;family&gt;Noto Serif CJK SC&lt;/family&gt;\n19             &lt;family&gt;Noto Serif CJK TC&lt;/family&gt;\n20             &lt;family&gt;Noto Serif CJK JP&lt;/family&gt;\n21             &lt;family&gt;Noto Serif CJK KR&lt;/family&gt;\n22             &lt;family&gt;Lohit Devanagari&lt;/family&gt;\n23         &lt;/prefer&gt;\n24     &lt;/alias&gt;\n 25     &lt;alias&gt;\n 26         &lt;family&gt;monospace&lt;/family&gt;\n 27         &lt;prefer&gt;\n 28             &lt;family&gt;Noto Sans Mono CJK SC&lt;/family&gt;\n 29             &lt;family&gt;Noto Sans Mono CJK TC&lt;/family&gt;\n 30             &lt;family&gt;Noto Sans Mono CJK JP&lt;/family&gt;\n 31             &lt;family&gt;Noto Sans Mono CJK KR&lt;/family&gt;\n 32             &lt;family&gt;Noto Sans Mono CJK HK&lt;/family&gt;\n 33         &lt;/prefer&gt;\n 34     &lt;/alias&gt;\n 35 &lt;/fontconfig&gt;   \n</code></pre></p>"},{"location":"linux/ubuntu-setup/#5-swap","title":"5 \u914d\u7f6eswap\u7a7a\u95f4","text":"<p><pre><code># \u5c06\u73b0\u6709swap\u79fb\u52a8\u5230\u4e3b\u5185\u5b58\uff0c\u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\nsudo swapoff -a\n\n# \u521b\u5efa\u65b0\u7684swap\u6587\u4ef6\uff0cbs\u00d7count=\u6700\u540e\u751f\u6210\u7684swap\u5927\u5c0f\uff0c\u8fd9\u91cc\u8bbe\u7f6e32G\nsudo dd if=/dev/zero of=/swapfile bs=1G count=32\n\n# \u8bbe\u7f6e\u6743\u9650\nsudo chmod 0600 /swapfile\n\n# \u8bbe\u7f6eswap\nsudo mkswap /swapfile\n\n# \u6253\u5f00swap\nsudo swapon /swapfile\n\n# \u68c0\u67e5\u8bbe\u7f6e\u662f\u5426\u6709\u6548\nbtop\n\n# \u8bbe\u7f6e\u6c38\u4e45\u6709\u6548\nsudo gedit /etc/fstab\n# \u5728\u672b\u5c3e\u884c\u52a0\u4e0a \n# /swapfile swap swap sw 0 0\n</code></pre> \u5237\u65b0swap\u5206\u533a</p> <pre><code>sudo swapoff -a\nsudo swapon-a\n</code></pre>"},{"location":"linux/ubuntu-setup/#6","title":"6 \u914d\u7f6e\u8f93\u5165\u6cd5","text":"<p>\u4f7f\u7528ibus\u6846\u67b6</p>"},{"location":"linux/ubuntu-setup/#61","title":"6.1 \u5b89\u88c5\u4e2d\u6587\u8bed\u8a00\u5305","text":"<p>\u5b89\u88c5\u4e2d\u6587\u8bed\u8a00\u5305\u662f\u4e3a\u4e86\u8ba9Input Sources\u91cc\u9762\u51fa\u73b0Chinese\u8fd9\u4e00\u9879\u3002</p> <p></p> <p>\u9009\u62e9\u201cManage Installed Languages\u201d\uff0c\u201cInstall/Remove Languages\u201d\uff0c\u201cChinese(Simplified)\u201d\uff0c\u201cApply\u201d\u3002</p>"},{"location":"linux/ubuntu-setup/#62-ibus","title":"6.2 \u5b89\u88c5ibus\u8f93\u5165\u6cd5","text":"<p>\u7136\u540e\u53ef\u4ee5\u5b89\u88c5ibus\u4e2d\u6587\u8f93\u5165\u6cd5\u4e86\u3002</p> <p>\u5b89\u88c5ibus\u6846\u67b6\u3002</p> <pre><code>sudo apt-get install ibus ibus-clutter ibus-gtk ibus-gtk3 ibus-qt4\n</code></pre> <p>\u5207\u6362\u5230ibus\u6846\u67b6\u3002</p> <pre><code>im-config -s ibus\n</code></pre> <p>\u5b89\u88c5\u62fc\u97f3\u5f15\u64ce\u3002</p> <pre><code>sudo apt-get install ibus-pinyin\n</code></pre>"},{"location":"linux/ubuntu-setup/#63-ibus","title":"6.3 \u6dfb\u52a0ibus\u4e2d\u6587\u8f93\u5165\u6cd5","text":"<p>\u628aibus\u8f93\u5165\u6cd5\u6dfb\u52a0\u5230\u8f93\u5165\u6cd5\u680f\u3002</p> <p>\u73b0\u5728Input Source\u91cc\u9762\u5c31\u6709Chinese\u4e86\uff0c\u70b9\u8fdb\u53bb\u3002</p> <p></p> <p>\u9009\u62e9Chinese(Intelligent Pinyin)\u3002</p> <p></p> <p>\u53f3\u4e0a\u89d2\u9009\u62e9Chinese(Intelligent Pinyin)\uff0c\u4e2d\u82f1\u6587\u5207\u6362\u65b9\u5f0f\u5c31\u662fshift\uff0cPreferences\u91cc\u9762\u53ef\u4ee5\u9009\u62e97\u4e2a\u9009\u62e9\u9879\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u4f7f\u7528ibus\u4e2d\u6587\u8f93\u5165\u6cd5\u5566\u3002</p> <p></p>"},{"location":"linux/ubuntu-setup/#7zsh","title":"7\u5b89\u88c5zsh","text":""},{"location":"linux/ubuntu-setup/#71","title":"7.1\uff1a\u68c0\u67e5","text":"<pre><code>cat /etc/shells   \n</code></pre>"},{"location":"linux/ubuntu-setup/#72zsh","title":"7.2\u3001\u5b89\u88c5zsh","text":"<pre><code>sudo apt install zsh #\u5b89\u88c5zsh\n\nchsh -s /bin/zsh #\u5c06zsh\u8bbe\u7f6e\u6210\u9ed8\u8ba4shell\uff08\u4e0d\u8bbe\u7f6e\u7684\u8bdd\u542f\u52a8zsh\u53ea\u6709\u76f4\u63a5zsh\u547d\u4ee4\u5373\u53ef\uff09\n</code></pre>"},{"location":"linux/ubuntu-setup/#73oh-my-zsh","title":"7.3\u3001\u5b89\u88c5oh-my-zsh","text":"<pre><code># 1. \u901a\u8fc7 curl\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n# 2. \u901a\u8fc7 wget\nsh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n# 3. \u901a\u8fc7 git\ncd ~\ngit clone https://github.com/ohmyzsh/ohmyzsh ohmyzsh\ncd ~/ohmyzsh/tools\nsh install.sh\n</code></pre>"},{"location":"linux/ubuntu-setup/#74","title":"7.4\u3001\u5b89\u88c5\u63d2\u4ef6","text":"<p>\u56e0\u4e3a\u6211\u4e5f\u662f\u521a\u73a9\uff0c\u4e5f\u5c31\u4e0b\u8f7d\u4e86\u51e0\u4e2a\u5b98\u65b9\u63a8\u8350\u7684\u63d2\u4ef6\u6bd4\u5982\uff1a</p> <pre><code>cd ~/.oh-my-zsh/custom/plugins\n#zsh-autosuggestions \u547d\u4ee4\u884c\u547d\u4ee4\u952e\u5165\u65f6\u7684\u5386\u53f2\u547d\u4ee4\u5efa\u8bae\ngit clone https://github.com/zsh-users/zsh-autosuggestions zsh-autosuggestions\n#zsh-syntax-highlighting \u547d\u4ee4\u884c\u8bed\u6cd5\u9ad8\u4eae\u63d2\u4ef6\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting zsh-syntax-highlighting\n</code></pre>"},{"location":"linux/ubuntu-setup/#75zshrc","title":"7.5\u3001\u914d\u7f6e\u6587\u4ef6~/.zshrc:","text":"<p>\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u76f4\u63a5\u590d\u5236\u66ff\u6362\u539f\u6765\u7684.zshrc\u5373\u53ef\u3002</p> <pre><code>ZSH_THEME=\"rkj-repos\" #\u6211\u76ee\u524d\u4f7f\u7528\u7684\u6a21\u5f0f\n# \u914d\u7f6e\u8981\u4f7f\u7528\u7684\u63d2\u4ef6\nplugins=(\n        git\n        extract\n        zsh-autosuggestions\n        zsh-syntax-highlighting\n)\n</code></pre>"},{"location":"linux/ubuntu-setup/#8-vscode","title":"8. \u914d\u7f6evscode","text":"<pre><code>{\n    \"security.workspace.trust.untrustedFiles\": \"open\",\n    \"code-runner.runInTerminal\": true,\n    \"workbench.editorAssociations\": {\n        \"*.ipynb\": \"jupyter-notebook\"\n    },\n    \"notebook.cellToolbarLocation\": {\n        \"default\": \"right\",\n        \"jupyter-notebook\": \"left\"\n    },\n    \"debug.onTaskErrors\": \"debugAnyway\",\n    \"cmake.configureOnOpen\": false,\n    \"markdown-preview-enhanced.previewTheme\": \"atom-light.css\",\n    \"explorer.confirmDelete\": false,\n    \"workbench.iconTheme\": \"vscode-icons\",\n    \"git.enableSmartCommit\": true,\n    \"remote.SSH.remotePlatform\": {\n        \"thicvhs\": \"linux\",\n        \"hans\": \"linux\",\n        \"hangqi\": \"linux\",\n        \"Debug\": \"linux\",\n        \"tiaobanA100\": \"linux\",\n        \"qihang\": \"linux\",\n        \"tiaoban3090/4090\": \"linux\",\n        \"DebugA100\": \"linux\",\n        \"Debug4090\": \"linux\",\n        \"Debug4090MCT\": \"linux\",\n        \"mutiGPU\": \"linux\"\n    },\n    \"git.ignoreLegacyWarning\": true,\n    \"terminal.integrated.inheritEnv\": false,\n    \"vsicons.dontShowNewVersionMessage\": true,\n    \"update.mode\": \"manual\",\n    \"notebook.lineNumbers\": \"on\",\n    \"EnglishChineseDictionary.enableHover\": true,\n    \"[cpp]\": {\n        \"editor.defaultFormatter\": \"ms-vscode.cpptools\"\n    },\n    \"editor.inlineSuggest.enabled\": true,\n    \"github.copilot.enable\": {\n        \"*\": true,\n        \"plaintext\": false,\n        \"markdown\": false,\n        \"scminput\": false,\n        \"yaml\": true\n    },\n    \"C_Cpp.clang_format_fallbackStyle\": \"Google\",\n    \"clang-format.fallbackStyle\": \"Google\",\n    \"git.confirmSync\": false,\n    \"clang-format.executable\": \"/usr/bin/clang-format\",\n    \"clang-format.language.cpp.fallbackStyle\": \"Google\",\n    \"clang-format.language.cpp.style\": \"Google\",\n    \"editor.minimap.enabled\": false,\n    \"editor.fontSize\": 15,\n    \"cmake.generator\": \"Unix Makefiles\",\n    \"vim.handleKeys\": {\n        \"&lt;C-a&gt;\": false,\n        \"&lt;C-f&gt;\": false,\n        \"&lt;C-x&gt;\": false,\n        \"&lt;C-c&gt;\": false,\n        \"&lt;C-z&gt;\": false,\n        \"&lt;C-v&gt;\": false,\n        \"&lt;C-[&gt;\": false,\n        \"&lt;C-]&gt;\": false,\n        \"&lt;C-s&gt;\": false,\n        \"&lt;C-b&gt;\": false,\n        \"&lt;C-/&gt;\": false,\n        \"&lt;C-w&gt;\": false,\n        \"&lt;C-shift+f&gt;\": false\n    },\n    \"vim.insertModeKeyBindings\": [\n        {\n            \"before\": [\n                \"&lt;c-h&gt;\"\n            ],\n            \"after\": [\n                \"&lt;left&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-l&gt;\"\n            ],\n            \"after\": [\n                \"&lt;right&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-j&gt;\"\n            ],\n            \"after\": [\n                \"&lt;down&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-k&gt;\"\n            ],\n            \"after\": [\n                \"&lt;up&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-u&gt;\"\n            ],\n            \"after\": [\n                \"&lt;esc&gt;\",\n                \"b\",\n                \"i\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-d&gt;\"\n            ],\n            \"after\": [\n                \"&lt;esc&gt;\",\n                \"e\",\n                \"a\"\n            ]\n        }\n    ],\n    \"[python]\": {\n        \"editor.formatOnType\": true,\n        \"editor.defaultFormatter\": \"ms-python.black-formatter\"\n    },\n    \"editor.fontLigatures\": false,\n    \"terminal.integrated.fontFamily\": \"monospace\",\n    \"editor.rulers\": [\n        80\n    ],\n    \"C_Cpp.clang_format_style\": \"Google\",\n    \"C_Cpp.default.cppStandard\": \"gnu++17\",\n    \"python.languageServer\": \"Default\",\n    \"python.formatting.provider\": \"black\",\n    \"python.analysis.extraPaths\": [\n        \"/home/thicv/carla/carla-ros/src/ros_compatibility/src\",\n        \"/home/thicv/carla/carla-ros/src/carla_common/src\",\n        \"/home/thicv/Downloads/test/waymo-open-dataset/src\",\n        \"/home/thicv/Downloads/test/waymo-open-dataset/src/py_protos\"\n    ],\n    \"cmake.automaticReconfigure\": false,\n    \"cmake.autoSelectActiveFolder\": false,\n    \"cmake.configureOnEdit\": false,\n    \"C_Cpp.inlayHints.parameterNames.enabled\": true,\n    \"grunt.autoDetect\": \"on\",\n    \"gulp.autoDetect\": \"on\",\n    \"jake.autoDetect\": \"on\",\n    \"cmake.buildTask\": true,\n    \"extensions.ignoreRecommendations\": true,\n    \"github.copilot.advanced\": {},\n    \"workbench.startupEditor\": \"none\",\n    \"terminal.integrated.commandsToSkipShell\": [\n        \"language-julia.interrupt\"\n    ],\n    \"julia.symbolCacheDownload\": true,\n    \"julia.enableTelemetry\": true,\n    \"julia.executablePath\": \"/home/thicv/miniconda3/envs/julia_test/bin/julia\",\n    \"latex-workshop.bibtex-format.tab\": \"tab\",\n    \"latex-workshop.latex.autoBuild.run\": \"never\",\n    \"latex-workshop.latex.autoBuild.cleanAndRetry.enabled\": false,\n    \"latex-workshop.latex.autoClean.run\": \"onBuilt\",\n    \"latex-workshop.latex.recipe.default\": \"lastUsed\",\n    \"latex-workshop.view.pdf.internal.synctex.keybinding\": \"double-click\",\n    \"latex-workshop.latex.tools\": [\n        {\n            \"name\": \"xelatex\",\n            \"command\": \"xelatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"-pdf\",\n                \"%DOCFILE%\"\n            ]\n        },\n        {\n            \"name\": \"bibtex\",\n            \"command\": \"biber\",\n            \"args\": [\n                \"%DOCFILE%\"\n            ]\n        },\n        {\n            \"name\": \"pdflatex\",\n            \"command\": \"pdflatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"%DOC%\"\n            ]\n        }\n    ],\n    \"latex-workshop.latex.recipes\": [\n        {\n            \"name\": \"pdftex \u7b80\u5355\u7f16\u8bd1\",\n            \"tools\": [\n                \"pdflatex\"\n            ]\n        },\n        {\n            \"name\": \"XeLaTeX \u7b80\u5355\u7f16\u8bd1\",\n            \"tools\": [\n                \"xelatex\"\n            ]\n        },\n        {\n            \"name\": \"xe-&gt;bib-&gt;xe-&gt;xe \u590d\u6742\u7f16\u8bd1\",\n            \"tools\": [\n                \"xelatex\",\n                \"bibtex\",\n                \"xelatex\",\n                \"xelatex\"\n            ]\n        },\n        {\n            \"name\": \"pdflatex -&gt; bibtex -&gt; pdflatex*2\",\n            \"tools\": [\n                \"pdflatex\",\n                \"bibtex\",\n                \"pdflatex\",\n                \"pdflatex\"\n            ]\n        }\n    ],\n    \"latex-workshop.latex.clean.fileTypes\": [\n        \"*.aux\",\n        \"*.bbl\",\n        \"*.blg\",\n        \"*.idx\",\n        \"*.ind\",\n        \"*.lof\",\n        \"*.lot\",\n        \"*.out\",\n        \"*.toc\",\n        \"*.acn\",\n        \"*.acr\",\n        \"*.alg\",\n        \"*.glg\",\n        \"*.glo\",\n        \"*.gls\",\n        \"*.ist\",\n        \"*.fls\",\n        \"*.log\",\n        \"*.fdb_latexmk\",\n        \"*.bcf\",\n        \"*.run.xml\"\n    ],\n    \"editor.inlayHints.enabled\": \"offUnlessPressed\",\n    \"cmake.showOptionsMovedNotification\": false,\n    \"python.autoComplete.extraPaths\": [\n        \"/home/thicv/Downloads/test/waymo-open-dataset/src/\"\n    ],\n    \"terminal.integrated.profiles.linux\": {\n        \"bash\": {\n            \"path\": \"bash\",\n            \"icon\": \"terminal-bash\"\n        },\n        \"zsh\": {\n            \"path\": \"zsh\"\n        },\n        \"fish\": {\n            \"path\": \"fish\"\n        },\n        \"tmux\": {\n            \"path\": \"tmux\",\n            \"icon\": \"terminal-tmux\"\n        },\n        \"pwsh\": {\n            \"path\": \"pwsh\",\n            \"icon\": \"terminal-powershell\"\n        }\n    },\n    \"editor.accessibilitySupport\": \"off\",\n    \"terminal.integrated.enableMultiLinePasteWarning\": false,\n    \"workbench.editor.wrapTabs\": true,\n    \"terminal.integrated.scrollback\": 20000,\n    \"terminal.integrated.persistentSessionScrollback\": 1000,\n    \"python.analysis.cacheLSPData\": true,\n    \"gitlens.hovers.currentLine.over\": \"line\",\n    \"python.analysis.packageIndexDepths\": [\n        {\n            \"name\": \"sklearn\",\n            \"depth\": 2\n        },\n        {\n            \"name\": \"matplotlib\",\n            \"depth\": 2\n        },\n        {\n            \"name\": \"scipy\",\n            \"depth\": 2\n        },\n        {\n            \"name\": \"django\",\n            \"depth\": 2\n        },\n        {\n            \"name\": \"flask\",\n            \"depth\": 2\n        },\n        {\n            \"name\": \"fastapi\",\n            \"depth\": 2\n        }\n    ],\n    \"github.copilot.chat.experimental.temporalContext.enabled\": true,\n    \"cursor.cpp.disabledLanguages\": [\n        \"plaintext\",\n        \"markdown\",\n        \"scminput\"\n    ],\n    \"workbench.colorTheme\": \"Default Dark+\",\n    \"workbench.editor.editorActionsLocation\": \"titleBar\",\n    \"workbench.activityBar.orientation\": \"vertical\",\n    \"editor.tokenColorCustomizations\": {\n        \"textMateRules\": [\n            {\n                \"scope\": [\n                    \"variable.parameter\"\n                ],\n                \"settings\": {\n                    // \"foreground\":\"#ff0000\",\n                    \"fontStyle\": \"italic\"\n                }\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"linux/ubuntu-setup/#9-ubuntuwifiip","title":"9 ubuntu\u914d\u7f6ewifi\u9759\u6001ip","text":"<p>\u7f51\u5173\u548c\u5730\u5740\u8981\u4fdd\u6301\u4e00\u81f4</p> <p>192.</p> <p></p> <p></p> <p>sudo lshw -c network | grep serial  \u67e5\u770bMAC\u5730\u5740</p> <p>ifconfig  \u67e5\u770b\u5f53\u524d\u7f51\u5361</p> <p>cat /sys/class/net/ens33/address  \u67e5\u770bens33\u7f51\u5361\u7684MAC\u5730\u5740</p> <p>ip addr  \u67e5\u770b\u6240\u6709IP\u4fe1\u606f</p> <p>sudo vim /etc/netplay/00-installer-config.yaml  \u914d\u7f6e\u7f51\u5361\u4fe1\u606f</p> <p>netstat -rn  \u67e5\u770b\u8def\u7531</p>"},{"location":"linux/ubuntu-setup/#10-vim","title":"10 \u914d\u7f6eVim","text":"<p>sudo apt install vim-gtk <pre><code>if &amp;term =~ \"xterm\"\n    \" INSERT mode\n    let &amp;t_SI = \"\\&lt;Esc&gt;[6 q\" . \"\\&lt;Esc&gt;]12;white\\x7\"\n    \" REPLACE mode\n    let &amp;t_SR = \"\\&lt;Esc&gt;[3 q\" . \"\\&lt;Esc&gt;]12;black\\x7\"\n    \" NORMAL mode\n    let &amp;t_EI = \"\\&lt;Esc&gt;[2 q\" . \"\\&lt;Esc&gt;]12;white\\x7\"\nendif\nset nu\nset mouse=a\nset clipboard=unnamedplus\n</code></pre></p>"},{"location":"linux/ubuntu-setup/#_1","title":"\u540c\u6b65\u526a\u5207\u677f\u548c\u533f\u540d\u5bc4\u5b58\u5668","text":"<p>\u4ee5\u4e0b\u914d\u7f6e\u53ef\u4ee5\u8ba9\u4e3b\u9009\u533a\u5bc4\u5b58\u5668\u00a0<code>\"*</code>\u00a0\u548c\u533f\u540d\u5bc4\u5b58\u5668\u00a0<code>\"\"</code>\u00a0\u4fdd\u6301\u540c\u6b65\uff08\u5373\u5171\u4eab\u526a\u5207\u677f\uff09\uff0c \u4e00\u822c\u9002\u7528\u4e8e Windows \u548c MacOS\uff0cLinux \u4e0b\u7684\u8868\u73b0\u662f\u5171\u4eab X11 \u526a\u5207\u677f\u3001PRIMARY \u9009\u533a\uff08\u9f20\u6807\u4e2d\u952e\u7c98\u8d34\uff09\u3002</p> <p>Vim \u6709 48 \u4e2a\u5bc4\u5b58\u5668\uff0c<code>y</code>,\u00a0<code>d</code>,\u00a0<code>p</code>\u00a0\u7b49\u547d\u4ee4\u4e00\u822c\u4f7f\u7528\u533f\u540d\u5bc4\u5b58\u5668\u00a0<code>\"\"</code>\uff0c \u652f\u6301\u526a\u5207\u677f\u7684 Vim \u4f1a\u652f\u6301\u989d\u5916\u7684\u9009\u533a\u5bc4\u5b58\u5668\u00a0<code>\"*</code>\u00a0\u548c\u00a0<code>\"+</code>\u3002 \u66f4\u591a Vim \u5bc4\u5b58\u5668\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1aVim \u5bc4\u5b58\u5668\u5b8c\u5168\u624b\u518c\u3002</p> <p><code>\"*</code>\u00a0\u548c\u00a0<code>\"+</code>\u00a0\u5728 Mac \u548c Windows \u4e2d\uff0c\u90fd\u662f\u6307\u7cfb\u7edf\u526a\u5207\u677f\uff08clipboard\uff09\uff0c\u4f8b\u5982\u00a0<code>\"*yy</code>\u00a0\u5373\u53ef\u590d\u5236\u5f53\u524d\u884c\u5230\u526a\u5207\u677f\u3002 \u5176\u4ed6\u7a0b\u5e8f\u4e2d\u590d\u5236\u7684\u5185\u5bb9\u4e5f\u4f1a\u88ab\u5b58\u50a8\u5230\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u3002 \u5728 X11 \u7cfb\u7edf\u4e2d\uff08\u7edd\u5927\u591a\u6570\u5e26\u6709\u684c\u9762\u73af\u5883\u7684 Linux \u53d1\u884c\u7248\uff09\uff0c\u4e8c\u8005\u662f\u6709\u533a\u522b\u7684\uff1a</p> <ul> <li><code>\"*</code>\u00a0\u6307 X11 \u4e2d\u7684 PRIMARY \u9009\u533a\uff0c\u5373\u9f20\u6807\u9009\u4e2d\u533a\u57df\u3002\u5728\u684c\u9762\u7cfb\u7edf\u4e2d\u53ef\u6309\u9f20\u6807\u4e2d\u952e\u7c98\u8d34\u3002</li> <li><code>\"+</code>\u00a0\u6307 X11 \u4e2d\u7684 CLIPBOARD \u9009\u533a\uff0c\u5373\u7cfb\u7edf\u526a\u5207\u677f\u3002\u5728\u684c\u9762\u7cfb\u7edf\u4e2d\u53ef\u6309 Ctrl+V \u7c98\u8d34\u3002</li> </ul> <p>\u4e0a\u8ff0\u54ea\u4e2a\u5bc4\u5b58\u5668\u5bf9\u5e94\u4e8e\u4f60\u7684\u526a\u5207\u677f\u548c Linux \u53d1\u884c\u7248\u6709\u5173\uff0c\u5728\u914d\u7f6e Vim \u524d\u53ef\u4ee5\u6d4b\u8bd5\u4e00\u4e0b\u3002 \u6bd4\u5982\u7528 Vim \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5728 normal \u6a21\u5f0f\u4e0b\uff08\u8fdb\u5165 Vim \u540e\u9ed8\u8ba4\u7684\u6a21\u5f0f\uff09\u952e\u5165\u00a0<code>gg\"*yG</code>\uff0c \u6765\u628a\u5f53\u524d\u6587\u4ef6\u5185\u5bb9\u62f7\u8d1d\u5230\u00a0<code>\"*</code>\u00a0\u5bc4\u5b58\u5668\u3002\u952e\u5165\u00a0<code>gg\"+yG</code>\u00a0\u62f7\u8d1d\u5230\u00a0<code>\"+</code>\u00a0\u5bc4\u5b58\u5668\u3002</p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4f60\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u62f7\u8d1d\u7c98\u8d34\u5185\u5bb9\u4e86\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5e0c\u671b\u901a\u8fc7 Vim \u914d\u7f6e\uff0c \u8ba9\u533f\u540d\u5bc4\u5b58\u5668\u548c\u7cfb\u7edf\u526a\u5207\u677f\u540c\u6b65\u3002</p>"},{"location":"linux/ubuntu-setup/#_2","title":"\u540c\u6b65\u526a\u5207\u677f\u548c\u533f\u540d\u5bc4\u5b58\u5668","text":"<p>\u4ee5\u4e0b\u914d\u7f6e\u53ef\u4ee5\u8ba9\u4e3b\u9009\u533a\u5bc4\u5b58\u5668\u00a0<code>\"*</code>\u00a0\u548c\u533f\u540d\u5bc4\u5b58\u5668\u00a0<code>\"\"</code>\u00a0\u4fdd\u6301\u540c\u6b65\uff08\u5373\u5171\u4eab\u526a\u5207\u677f\uff09\uff0c \u4e00\u822c\u9002\u7528\u4e8e Windows \u548c MacOS\uff0cLinux \u4e0b\u7684\u8868\u73b0\u662f\u5171\u4eab X11 \u526a\u5207\u677f\u3001PRIMARY \u9009\u533a\uff08\u9f20\u6807\u4e2d\u952e\u7c98\u8d34\uff09\u3002</p> <pre><code>set clipboard=unnamed\n</code></pre> <p>Vim 7.3.74 \u53ca\u4ee5\u4e0a\u652f\u6301\u4e86 unnamedplus\uff1a</p> <pre><code>set clipboard=unnamedplus\n</code></pre> <p>\u5373\u8ba9\u526a\u5207\u677f\u5bc4\u5b58\u5668\u00a0<code>\"+</code>\u00a0\u548c\u533f\u540d\u5bc4\u5b58\u5668\u00a0<code>\"\"</code>\u00a0\u4fdd\u6301\u540c\u6b65\uff0c Linux \u4e0b\u4e00\u822c\u5bf9\u5e94\u4e8e\u684c\u9762\u7cfb\u7edf\u7684\u526a\u5207\u677f\uff0c\u6bd4\u5982 GNOME \u7684\u7cfb\u7edf\u526a\u5207\u677f\u3001\u4ee5\u53ca SECONDARY \u9009\u533a\uff08Ctrl+V \u7c98\u8d34\uff09\u3002</p>"},{"location":"linux/ubuntu-setup/#11","title":"11 \u914d\u7f6e\u684c\u9762","text":""},{"location":"linux/ubuntu_wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/","title":"Ubuntu wsl\u7684\u4e00\u4e9b\u5751","text":""},{"location":"linux/ubuntu_wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#wslusrsudo","title":"wsl\u4e2d\u7531\u4e8e\u6743\u9650\u95ee\u9898\uff0c\u4e4b\u524d\u4fee\u6539\u4e86usr\u76ee\u5f55\u7684\u6743\u9650\uff0c\u5bfc\u81f4sudo\u4e0d\u80fd\u7528\u4e86\uff0c\u89e3\u51b3\u65b9\u6848\u5982\u4e0b","text":"<p>\u5728 windows power shell\u4e2d <pre><code>ubuntu1804.exe config --default-user root\n\nchown root:root /usr/bin/sudo\nchmod 4755 /usr/bin/sudo\nchown root /usr/lib/sudo/sudoers.so\n\nubuntu1804.exe config --default-user hanshuo\n</code></pre></p>"},{"location":"linux/ubuntu_wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#windowswsl2","title":"windows\u5b89\u88c5wsl2\u7684\u6559\u7a0b","text":"<p>https://zhuanlan.zhihu.com/p/356397851</p> <p>\u5982\u4f55\u5728windows 11\u4e2d\u5b89\u88c5WSLG(WSL2) - guojikun - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>wsl2\u53ef\u89c6\u5316</p> <pre><code>export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2&gt;/dev/null):0\n</code></pre>"},{"location":"linux/ubuntu_wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#wsl2","title":"wsl2\u8bbf\u95ee\u5916\u7f51\uff1a","text":"<p>1.\u9996\u5148\u4fdd\u8bc1wsl\u80fd\u8bbf\u95ee\u672c\u673aip https://blog.csdn.net/nick_young_qu/article/details/113709768  2.\u8c03\u6574socket\u4ee3\u7406 </p> <p><pre><code>host_ip=$(cat /etc/resolv.conf |grep \"nameserver\" |cut -f 2 -d \" \")\n#export ALL_PROXY=\"http://$host_ip:10810\"\nexport http_proxy=socks5://$host_ip:10810\nexport https_proxy=socks5://$host_ip:10810\n</code></pre> \u5982\u679c\u9047\u5230\u4e86socket\u62a5\u9519\uff0c\u53ef\u4ee5\u6682\u65f6\u5148\u53d6\u6d88\u4ee3\u7406 <pre><code>unset http_proxy\nunset https_proxy\n</code></pre></p>"},{"location":"linux/ubuntu_wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#_1","title":"\u7ec8\u6781\u5927\u6cd5","text":"<p>\u53d6\u6d88\u5168\u90e8\u4ee3\u7406\uff1a     unset http_proxy     unset HTTP_PROXY     unset https_proxy     unset HTTPS_PROXY     git config --global --unset http.proxy     git config --global --unset https.proxy</p> <p>\u5728windows\u4e2dC:\\Users\\hanshuo.wslconfig\u4e2d\u8986\u76d6\u4ee5\u4e0b\u5185\u5bb9</p> <p>[experimental] autoMemoryReclaim=gradual  # gradual  | dropcache | disabled networkingMode=mirrored dnsTunneling=true firewall=false autoProxy=true</p>"},{"location":"linux/ubuntu_wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/#cmake","title":"cmake\u5347\u7ea7\uff1a","text":"<p>https://blog.csdn.net/qingkong8978/article/details/106432949</p>"},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/","title":"Ubuntu\u4e0b\u8f6f\u4ef6\u591a\u4e2a\u7248\u672c\u7684\u7edf\u4e00\u7ba1\u7406","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#1","title":"1 \u6982\u8ff0","text":"<p>ubuntu\u4e0b\u53ef\u4ee5\u501f\u52a9update-alternatives\u5de5\u5177\u6765\u7ba1\u7406\u8f6f\u8fde\u63a5\uff08\u4e5f\u5c31\u662f\u5b9e\u73b0\u8f6f\u4ef6\u5404\u4e2a\u7248\u672c\u7684\u7ba1\u7406\uff09 \u67e5\u770bgcc/g++\u8f6f\u94fe\u63a5\u6307\u5411</p> <p>\u4ece\u4e0b\u56fe\u53ef\u770b\u51fa\u76ee\u524d\u7684gcc\u4e0d\u662f\u901a\u8fc7update-alternatives\u7ba1\u7406\u7684  \u5411\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684alternatives\u7ec4 <pre><code>--install &lt;link&gt; &lt;name&gt; &lt;path&gt; &lt;priority&gt;\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 40\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 40\n</code></pre></p> <p>\u6ce8\uff1a\u6700\u540e\u90a3\u4e2a\u6570\u5b57\u4ee3\u8868\u4f18\u5148\u7ea7\uff0c\u9ed8\u8ba4\u9009\u4f18\u5148\u7ea7\u9ad8\u7684</p> <p>\u67e5\u770bgcc/g++\u8f6f\u94fe\u63a5\u6307\u5411 gcc\u8f6f\u94fe\u63a5\u53d8\u6210\u4e86/etc/alternatives/gcc  \u67e5\u770b/etc/alternatives/gcc\u8f6f\u94fe\u63a5\u6307\u5411\uff0c\u53d1\u73b0\u53c8\u94fe\u63a5\u56de/usr/bin/gcc-6\u4e86\uff0c\u6240\u4ee5\u7531\u6b64\u53ef\u770b\u51faupdate-alternatives\u4e3a\u4e86\u7ba1\u7406\u65b9\u4fbf\u589e\u52a0\u4e86\u4e00\u5c42\u8f6f\u94fe\u63a5 </p>"},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#name-display","title":"\u663e\u793a\u547d\u4ee4<code>&lt;name&gt;</code>\u7684\u4fe1\u606f\u53ca\u76ee\u6807\u6587\u4ef6--display \\","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#-config","title":"\u914d\u7f6e\u547d\u4ee4\u7684\u7248\u672c  --config \\","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#namepath","title":"\u79fb\u9664\u7cfb\u7edf\u4e2d\u6ce8\u518c\u7684\u67d0\u4e2a<code>&lt;name&gt;</code>\u7684\u67d0\u4e2a\u8f6f\u4ef6\u7248\u672c<code>&lt;path&gt;</code> <p>--remove \\ \\ <ul> <li><code>sudo update-alternatives --remove gcc /usr/bin/gcc-5</code></li> </ul>","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#2-gcc","title":"2 gcc\u4e2a\u7248\u672c\u7684\u7ba1\u7406","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#21-gcc","title":"2.1 \u9996\u5148\u67e5\u770b\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86\u54ea\u4e9bgcc\u7248\u672c <p><code>ls /usr/bin/gcc*</code></p> <p><pre><code>/usr/bin/gcc    /usr/bin/gcc-ar    /usr/bin/gcc-nm    /usr/bin/gcc-ranlib /usr/bin/gcc-5 /usr/bin/gcc-ar-5  /usr/bin/gcc-nm-5  /usr/bin/gcc-ranlib-5 /usr/bin/gcc-7  /usr/bin/gcc-ar-7 /usr/bin/gcc-nm-7  /usr/bin/gcc-ranlib-7\n</code></pre> \u53ef\u4ee5\u770b\u51fa\u6211\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86\u4e24\u4e2agcc\u7248\u672c\uff0c\u4e00\u4e2a\u662fgcc-5\u7684\u7248\u672c\uff0c\u4e00\u4e2a\u662fgcc-7\u7684\u7248\u672c \u5982\u679c\u6211\u60f3\u5b89\u88c5\u67d0\u4e2a\u7248\u672c\u7684gcc\uff0c\u53ef\u4ee5\u7528<code>sudo apt install gcc-version</code>\u5b89\u88c5\uff0c\u6bd4\u5982\u8bf4\u6211\u60f3\u5b89\u88c5gcc-6\uff0c\u5219\u547d\u4ee4\u4e3a<code>sudo apt install gcc-6</code></p>","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#22-update-alternatives","title":"2.2 \u7136\u540e\u7528update-alternatives\u5de5\u5177\u6765\u7ba1\u7406\u7248\u672c <p>update-alternatives: --install &lt;\u94fe\u63a5&gt; &lt;\u540d\u79f0&gt; &lt;\u8def\u5f84&gt; &lt;\u4f18\u5148\u7ea7&gt; \u53ef\u4ee5\u628a\u5f53\u524d\u7248\u672c\u52a0\u5165\u5230update-alternatives\u5de5\u5177\u7684\u7ba1\u7406\u8303\u56f4 \u5982\uff1a <pre><code>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 2\n</code></pre> \u6ce8\u610f&lt;\u540d\u79f0&gt;\u8868\u793a\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u540d\u5b57\uff0c\u4e4b\u540e--config\u540e\u8fb9\u63a5\u7684\u5c31\u662f\u540d\u79f0</p>","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#23","title":"2.3 \u5207\u6362\u7248\u672c <p>\u4f7f\u7528 <pre><code>sudo update-alternatives --config gcc\n</code></pre> \u6253\u5f00gcc\u7684\u8bbe\u7f6e\u9879\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u8f93\u5165<code>\u9009\u62e9</code>\u4e0b\u9762\u7684\u7f16\u53f7\uff0c\u56de\u8f66\u5373\u53ef\u5207\u6362\u5230\u6307\u5b9a\u7684gcc\u7248\u672c</p>","text":""},{"location":"linux/ubuntu%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86/#3cmake","title":"3.cmake\u591a\u7248\u672c\u7ba1\u7406","text":"<pre><code>update-alternatives --install /usr/bin/cmake cmake ~/develop_tools/cmake-3.15.6-linux-x86_64/bin/cmake 3 \nupdate-alternatives --install /usr/bin/cmake cmake ~/develop_tools/cmake-3.12.1-linux-x86_64/bin/cmake 2 \nupdate-alternatives --install /usr/bin/cmake cmake ~/usr/bin/cmake-3.5.1 1\n</code></pre> <p>\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u9009\u62e9\u6240\u9700\u7684cmake\u7248\u672c</p> <pre><code>update-alternatives --config cmake\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/","title":"ubuntu\u5b89\u88c5DWM\u7684\u4e00\u4e9b\u914d\u7f6e","text":"<p>dwm\u4e2a\u4eba\u684c\u9762\u7f8e\u5316\u6559\u7a0b</p> <p>\u8c01\u518d\u8bf4linux\u56fe\u5f62\u754c\u9762\u4e0d\u70ab\u9177\u5c31\u62cd\u4ed6\u8138\u4e0a\uff0c\u6301\u7eed\u4f7f\u7528\u66f4\u65b0\u4e86\u51e0\u5e74\u7684dwm\u6709\u591a\u5e05(\u89e3\u8bf4\u7248)</p> <p>ubuntu\u5b89\u88c5dwm</p> <p>dwm \u7f8e\u5316 - masimaro - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>dwm\u7f8e\u5316CSDN</p> <p>dwm\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\uff1aconfig.def.h\u548cconfig.h\u7684\u533a\u522b\uff1a</p> <pre><code>1.config.h\u662f\u7f16\u8bd1\u65f6\u5b9e\u9645\u7528\u7684\u914d\u7f6e\uff0c\u5982\u679cconfig.h\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u7cfb\u7edf\u4f1a\u4ececonfig.def.h\u590d\u5236\u4e00\u4efdconfig.h\uff0c\u5e76\u53c2\u4e0e\u7f16\u8bd1\u3002\n2.config.def.h\u662f\u9ed8\u8ba4\u914d\u7f6e\uff0c\u7528\u6237\u4e0d\u8981\u81ea\u884c\u4fee\u6539\u3002\u8865\u4e01\u4f1a\u6253\u5230config.def.h\u4e0b\uff0c\u5f53\u7136\u5982\u679c\u81ea\u5df1\u628aconfig.def.h\u5220\u4e86\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u6253\u5230config.h\u4e0b\u3002THW CW\u5927\u4f6c\u5efa\u8bae\u5220\u6389config.def.h\uff0c\u53ea\u7ef4\u62a4config.h,\u4f46\u662f\u8881\u5e05\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\uff0c\u8881\u5e05\u5efa\u8bae\u7528git\u6765\u7ba1\u7406\u8865\u4e01\uff0c\u5177\u4f53\u601d\u8def\u5982\u4e0b\uff1a\n    1. \u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u4e3b\u5206\u652f\uff0c\u4fdd\u6301suckless\u6700\u539f\u59cb\u7684\u914d\u7f6e\uff0c\u4e5f\u5c31\u662fconfig.def.h\uff0c\u5220\u9664config.h\n    2. \u5148\u521b\u5efa\u4e00\u4e2amyconfig\u7684\u5206\u652f\u6765\u4fdd\u5b58\u81ea\u5df1\u7684config\uff08\u4f7f\u81ea\u5df1\u4e4b\u524d\u4fee\u6539\u7684config.h\u80fd\u591f\u4fdd\u5b58\u4e0b\u6765\uff09git branch myconfig \uff0cgit checkout myconfig\uff0c cp config.h config.def.h\uff0c\u7136\u540e\u53ef\u4ee5\u5220\u9664config.h\u5e76git add .\n    3. \u6bcf\u5f53\u60f3\u6253\u4e00\u4e2a\u8865\u4e01xxx\u65f6\uff0c\u5148git branch xxx\u5206\u652f\uff0c\u7136\u540egit checkout xxx\uff0c\u7136\u540e patch &lt; xxx.diff\n    4. \u7136\u540egit chekout master \uff0cgit merge xxx -m \u201cxxx\u8865\u4e01\u201d\u8fdb\u884c\u5408\u5e76\u3002\n\u8881\u5e05\u8fd9\u4e2a\u601d\u8def\u53ef\u4ee5\u5229\u7528git\u6765\u89e3\u51b3\u51b2\u7a81\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u601d\u8def\u3002\n</code></pre> <p>dwm\u4e2d\u7684\u8865\u4e01\uff1a.diff\u683c\u5f0f\uff0c\u8fd9\u4e2a\u6587\u4ef6\u63cf\u8ff0\u4e86\u5bf9\u4e8econfig.def.h\uff0c\u8981\u5220\u9664\u90a3\u4e9b\u884c\uff0c\u589e\u52a0\u54ea\u4e9b\u884c\u3002</p> <p>\u6253\u8865\u4e01\uff1apathch &lt; ***.diff</p> <p>\u5220\u9664\uff1apathch -R &lt; ***.diff</p> <p>\u6253\u8865\u4e01\u7684\u6559\u7a0b\uff08the cw\uff09 (# \u3010\u6781\u7b80\u4e3b\u4e49\u3011\u6253\u9020Linux\u4e0b\u7cbe\u5de7\u5f3a\u5927\u7684\u7ec8\u7aef\uff1aSimple Terminal \uff08st\uff09 \u2014\u2014 \u3010Suckless\u7684\u6781\u7b80\u4e3b\u4e4901\u3011</p> <p>\u8881\u5e05\u7684\u6559\u7a0b</p> <p></p> <p></p> <p></p>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#0gnome","title":"0.\u5378\u8f7dgnome","text":"<pre><code>sudo apt remove gnome-shell\nsudo apt remove gnome\nsudo apt autoremove\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#1xorgxinit","title":"1.\u4f9d\u8d56(xorg,xinit)","text":"<pre><code>sudo apt install xserver-xorg x11-xserver-utils\nsudo apt install libxft-dev libxcursor-dev libxrandr-dev libxinerama-dev gcc make xinit\nsudo add-apt-repository ppa:aslatter/ppa\nsudo apt install alacritty \n (\u53ef\u4ee5\u901a\u8fc7ctrl + \u548cctrl -\u6765\u63a7\u5236\u5b57\u4f53\u5927\u5c0f\uff0c\u9700\u8981\u5728dwm/config.h\u4e2d\u5c06st\u6362\u6210\u8fd9\u4e2aalacritty)\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#2dwm","title":"2.\u5b89\u88c5dwm","text":"<pre><code>mkdir ~/dwm_tool(\u4e3b\u8981\u88c5\u6240\u6709\u8ddfdwm\u76f8\u5173\u7684\u6587\u4ef6\u5939)\ncd dwm_tool\ngit clone https://git.suckless.org/dwm\ncd dwm\nsudo make clean install\n\n\ntouch ~/.xinitrc\nvim ~/.xinitrc\nexec dwm\n\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7startx\u8fdb\u5165dwm\u4e86\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#2slstatusxsetrootthecw","title":"2.\u5b89\u88c5slstatus\uff1a\u5143\u5e05\uff08\u4e5f\u53ef\u4ee5\u7528xsetroot\u4ee3\u66ff\uff1athecw\uff09","text":"<pre><code>cd ~/dwm_tool\ngit clone https://git.suckless.org/slstatus\ncd slstatus\nsudo make clean install\n\u53ef\u4ee5\u5148\u6d4b\u8bd5\u4e00\u4e0bslstatus\u80fd\u5426\u8fd0\u884c\nvim ~/.xinitrc\n\u5728exec dwm\u4e0a\u8fb9\u589e\u52a0\u4e00\u884c\nslstatus &amp;\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#3-stalacritty-alt-shift-enter","title":"3. \u5b89\u88c5st\uff08\u4e5f\u53ef\u4ee5\u5b89\u88c5alacritty\uff09,\u5feb\u6377\u952e alt shift enter","text":"<pre><code>cd ~/dwm_tool\ngit clone https://git.suckless.org/st\ncd st\nsudo make clean install\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#4dmenurofi-alt-p","title":"4.\u5b89\u88c5dmenu\uff08\u4e5f\u53ef\u4ee5\u5b89\u88c5rofi\uff0c\u4ed6\u4eec\u90fd\u662f\u542f\u52a8\u5668\uff09\u5feb\u6377\u952e alt p","text":"<pre><code>cd ~/dwm_tool\ngit clone https://git.suckless.org/dmenu\ncd dmenu\nsudo make clean install\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#4ranger","title":"4.\u5b89\u88c5ranger\uff08\u6587\u4ef6\u7ba1\u7406\u5668\uff09","text":"<pre><code>sudo apt install ranger\n</code></pre> <p>\u5b89\u88c5\u5b57\u4f53\uff1anerd font</p>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#3","title":"3.\u5b89\u88c5\u540e\u7684\u7b80\u5355\u914d\u7f6e","text":"<p>https://zhuanlan.zhihu.com/p/408552473</p>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#2xinitrc","title":"2.\u5b89\u88c5\u4e2d\u6587\u8f93\u5165\u6cd5\uff08\u52a0\u5165~/.xinitrc\uff09","text":""},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#3xrandrxinitrc","title":"3.\u8bbe\u7f6e\u5206\u8fa8\u7387:xrandr\uff08\u52a0\u5165~/.xinitrc\uff09","text":""},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#4fehxinitrc","title":"4.\u8bbe\u7f6e\u58c1\u7eb8:feh\uff08\u52a0\u5165~/.xinitrc\uff09","text":""},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#_1","title":"\u7cfb\u7edf\u97f3\u91cf\u8c03\u8282","text":"<pre><code>sudo apt install alsa-utils\n\u4f7f\u7528\uff1aamixer\ncd ~/dwm\n</code></pre> <p>\u4fee\u6539config.h </p>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#_2","title":"\u5c4f\u5e55\u4eae\u5ea6\u8c03\u8282","text":"<pre><code>sudo apt install light\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#_3","title":"\u4e00\u4e9b\u91cd\u8981\u7684\u914d\u4ef6\uff1a","text":"<pre><code>picom\uff1a\u80fd\u591f\u5b9e\u73b0\u7ec8\u7aef\u7684\u534a\u900f\u660e\u6548\u679c\nxrandr\uff1a\u66f4\u6539\u5206\u8fa8\u7387\nfeh\uff1a\u4fee\u6539\u58c1\u7eb8\uff1b\u4e5f\u53ef\u4ee5\u7528 nitrogen\nrofi\uff1a\u4e00\u4e2a\u542f\u52a8\u5668\uff08\u6bd4dmenu\u597d\u7528\uff09\nalacritty\uff1a\u7ec8\u7aef\uff08\u6bd4st\u7ec8\u7aef\u597d\u7528\uff09\uff0c\u652f\u6301\u653e\u5927\u7f29\u5c0f\u5b57\u4f53\nranger\uff1a\u4e00\u4e2a\u7ec8\u7aef\u6587\u4ef6\u7ba1\u7406\u5668\nalsa\uff1a\u58f0\u97f3\u7ba1\u7406\uff08\u589e\u5927\u7f29\u5c0f\uff09\n</code></pre>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85DWM%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/#_4","title":"\u4e00\u4e9b\u91cd\u8981\u7684\u63d2\u4ef6","text":"<pre><code>alpha\uff1a\u72b6\u6001\u680f\u534a\u900f\u660e\nautostart\uff1a\u542f\u52a8dwm\u65f6\u81ea\u52a8\u542f\u52a8\u7684\u811a\u672c\nbarpadding\uff1a\u7ec8\u7aef\u4e4b\u95f4\u6709\u4e00\u4e2a\u95f4\u9694\nuselessgap\uff1a\n</code></pre> <p>\u81ea\u542f\u52a8\u7684\u4e00\u4e9b\u5b9e\u4f8b\uff1a 1. \u8bbe\u7f6e\u5206\u8fa8\u7387 2. \u53f3\u4e0b\u89d2\u72b6\u6001\u680f 3. \u81ea\u52a8\u66f4\u6362\u58c1\u7eb8 4. \u7a97\u53e3\u6e32\u67d3\u5668 5.  </p>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85ompl%E7%9A%84%E5%9D%91/","title":"Ubuntu\u5b89\u88c5ompl\u7684\u5751","text":"<p>ubuntu 18 \u5b89\u88c5ompl\u65f6\u4e0d\u8981\u5b89\u88c51.6.0\uff0c\u8981\u5b89\u88c51.5.0 \u56e0\u4e3a1.6.0\u9700\u8981cmake 3.16\u4ee5\u4e0a\uff0c\u800cUbuntu18\u6700\u591a\u652f\u63013.10</p> <p>\u53c2\u8003\u65b9\u6cd52 https://blog.csdn.net/qq_18376583/article/details/127129778</p> <p>Index of /sites/distfiles.macports.org/ompl (mirrorservice.org)</p> <p>\u4e0b\u8f7dompl-1.5.0.tar.gz</p> <p>tar zxf ompl-1.5.0.tar.gz</p> <p>\u5b89\u88c5\u4f9d\u8d56\u7684\u5e93\uff1a</p> <p>apt-get -y install g++ cmake libboost-serialization-dev libboost-filesystem-dev libboost-system-dev libboost-program-options-dev libboost-test-dev libeigen3-dev libode-devlibyaml-cpp-dev</p> <p>install_python_binding_dependencies\uff1a</p> <p>apt-get -y install python3-dev python3-pip libboost-python-dev libboost-numpy-dev python3-numpy</p> <p>install_app_dependencies:</p> <p>sudo apt-get -y install python3-pyqt5.qtopengl\u00a0\u00a0freeglut3-dev libassimp-dev python3-opengl python3-flask python3-celery libccd-dev</p> <p>sudo pip3 install -vU PyOpenGL-accelerate sudo apt-get -y install libfcl-dev</p> <p>mkdir -p build/Release cd build/Release</p> <p>cmake ../.. -DPYTHON_EXEC=/usr/bin/python${PYTHONV}</p> <p>make -j 1 sudo make install</p>"},{"location":"linux/ubuntu%E5%AE%89%E8%A3%85%E6%96%B0%E5%AD%97%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/","title":"Ubuntu\u5b89\u88c5\u65b0\u5b57\u4f53\u7684\u65b9\u6cd5","text":"<p>\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0</p> <p>ubuntu\u91cc\u65b0\u88c5\u7684terminator\u91cc\uff0c\u5b57\u4f53\u5b9e\u5728\u662f\u4e0d\u5fcd\u76f4\u89c6\u3002\u5c24\u5176\u662f\u5b57\u6bcdi\uff0c\u8ddf\u522b\u7684\u5b57\u6bcd\u6324\u5728\u4e00\u8d77\uff0c\u6839\u672c\u5c31\u770b\u4e0d\u6e05\u695a\u3002\u6240\u4ee5\u7279\u610f\u4e0b\u8f7d\u4e86\u4e00\u4e2a\u82f9\u679c\u7684Monaco\u5b57\u4f53\u6765\u4ee3\u66ff\u3002 linux\u7cfb\u7edf\u7684\u5b57\u4f53\u6587\u4ef6\u653e\u5728/usr/share/fonts/\u76ee\u5f55 \u4ee5\u53ca\u7528\u6237\u7684/.fonts\u548c/.local/share/fonts\u76ee\u5f55\u4e0b\uff0c \u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u7cfb\u7edf\u6240\u7528\u7528\u6237\u5171\u4eab\uff0c\u5c06\u5b57\u4f53\u5b89\u88c5\u5230\u8fd9\u4e2a\u76ee\u5f55\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff1b \u540e\u9762\u4e24\u4e2a\u4f4d\u7f6e\u5219\u4e3a\u5f53\u524d\u767b\u9646\u7528\u6237\u6240\u6709,\u5b89\u88c5\u5b57\u4f53\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e0d\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u3002</p> <p>1.\u5b89\u88c5\u5230 /usr/share/fonts/</p> <p>wget https://github.com/fangwentong/dotfiles/raw/master/ubuntu-gui/fonts/Monaco.ttf sudo mkdir -p /usr/share/fonts/custom sudo mv Monaco.ttf /usr/share/fonts/custom sudo chmod 744 /usr/share/fonts/custom/Monaco.ttf</p> <p>sudo mkfontscale (\u652f\u6301\u5b57\u4f53\u653e\u5927\u7f29\u5c0f) #\u751f\u6210\u6838\u5fc3\u5b57\u4f53\u4fe1\u606f sudo mkfontdir\uff08\u652f\u6301\u5b57\u4f53\u52a0\u7c97\uff09 sudo fc-cache -fv\uff08\u66f4\u65b0\u5b57\u4f53\uff09</p> <p>2.\u5b89\u88c5\u5230 ~/.fonts/ (\u5b89\u88c5\u5230 ~/.local/share/fonts \u539f\u7406\u76f8\u540c) wget https://github.com/fangwentong/dotfiles/blob/ubuntu/fonts/Monaco.ttf?raw=true mkdir -p ~/.fonts mv Monaco.ttf ~/.fonts fc-cache -vf  #\u5237\u65b0\u7cfb\u7edf\u5b57\u4f53\u7f13\u5b58</p>"},{"location":"linux/ubuntu%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip/","title":"Ubuntu\u914d\u7f6e\u9759\u6001ip","text":"<p>\u914d\u7f6e\u9759\u6001ip</p>"},{"location":"linux/ubuntu%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip/#ip","title":"\u67e5\u770bip\u5730\u5740\uff0c\u7f51\u5173\uff0c\u63a9\u7801","text":"<p><pre><code>wheeltec@wheeltec:~$ ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: dummy0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether b6:f0:d6:29:0e:d9 brd ff:ff:ff:ff:ff:ff\n3: eth0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000\n    link/ether 00:e0:4c:68:01:fd brd ff:ff:ff:ff:ff:ff\n4: l4tbr0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether 5e:ce:9b:44:0b:e5 brd ff:ff:ff:ff:ff:ff\n5: rndis0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast master l4tbr0 state DOWN group default qlen 1000\n    link/ether 5e:ce:9b:44:0b:e5 brd ff:ff:ff:ff:ff:ff\n6: usb0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast master l4tbr0 state DOWN group default qlen 1000\n    link/ether 5e:ce:9b:44:0b:e7 brd ff:ff:ff:ff:ff:ff\n7: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 34:13:e8:5e:70:31 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.109/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 \n       valid_lft 7104sec preferred_lft 7104sec\n    inet6 fe80::1290:cc31:d44e:f537/64 scope link noprefixroute \n       valid_lft forever preferred_lft forever\n</code></pre> inet 192.168.1.109/24 brd 192.168.1.255 scope global dynamic noprefixroute \u8868\u793aip\u5730\u5740\u662f192.168.1.109\uff0cdynamic\u8868\u793a\u662f\u52a8\u6001ip</p> <pre><code>wheeltec@wheeltec:~$ route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.1.1     0.0.0.0         UG    600    0        0 wlan0\n169.254.0.0     0.0.0.0         255.255.0.0     U     1000   0        0 wlan0\n192.168.1.0     0.0.0.0         255.255.255.0   U     600    0        0 wlan0\n</code></pre> <pre><code>IP\u5730\u5740 192.168.1.109\n\u5b50\u7f51\u63a9\u7801netmask 255.255.255.0\n\u7f51\u5173Gateway192.168.1.1\n\u8fd9\u662f\u6211\u7684\u7f51\u7edc\u53c2\u6570\uff0c\u5927\u5bb6\u7684\u4f1a\u6709\u70b9\u4e0d\u540c\n</code></pre>"},{"location":"linux/ubuntu%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip/#ip_1","title":"\u8bbe\u7f6e\u9759\u6001ip","text":"<ul> <li>\u70b9\u51fbnano\u684c\u9762\u4e0a\u89d2\u7684\u7f51\u7edc\u56fe\u6807</li> <li>\u9009\u62e9\u201cEdit Connections\u201d</li> <li>\u53cc\u51fb\u81ea\u5df1\u8fde\u63a5\u7684WIFI\uff0c\u70b9\u51fbIPV4 Settings\uff0c\u9009\u62e9Add</li> <li>\u586b\u5165ip\u5730\u5740\uff0c\u5b50\u7f51\u63a9\u7801\u548c\u7f51\u5173\uff0c\u4fdd\u5b58</li> </ul> <p>\u91cd\u542f\uff0c\u8bbe\u7f6e\u7684\u9759\u6001ip\u624d\u4f1a\u751f\u6548</p>"},{"location":"linux/ubuntu%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip/#_1","title":"\u9a8c\u8bc1","text":"<pre><code>wheeltec@wheeltec:~$ ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: dummy0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether 52:d1:a4:70:1a:28 brd ff:ff:ff:ff:ff:ff\n3: eth0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000\n    link/ether 00:e0:4c:68:01:fd brd ff:ff:ff:ff:ff:ff\n4: l4tbr0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether 5e:ce:9b:44:0b:e5 brd ff:ff:ff:ff:ff:ff\n5: rndis0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast master l4tbr0 state DOWN group default qlen 1000\n    link/ether 5e:ce:9b:44:0b:e5 brd ff:ff:ff:ff:ff:ff\n6: usb0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast master l4tbr0 state DOWN group default qlen 1000\n    link/ether 5e:ce:9b:44:0b:e7 brd ff:ff:ff:ff:ff:ff\n7: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 34:13:e8:5e:70:31 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.109/24 brd 192.168.1.255 scope global noprefixroute wlan0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::61c8:3ecc:e895:4556/64 scope link noprefixroute \n       valid_lft forever preferred_lft forever\n</code></pre> <p>inet 192.168.1.109/24 brd 192.168.1.255 scope global noprefixroute wlan0 valid_lft forever preferred_lft forever ip\u5730\u5740\u4e3a192.168.1.109,\u6ca1\u6709dynamic\uff0c\u662f\u9759\u6001ip</p>"},{"location":"linux/vim%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%9D%91/","title":"Vim\u4e2d\u7684\u4e00\u4e9b\u5c0f\u5751","text":"<ul> <li>ctrl+s\u540e\u5c4f\u5e55\u9501\u5b9a\u4e86\uff0c\u8fd9\u65f6\u53ea\u8981ctrl+q\u5373\u53ef\u9000\u51fa</li> <li>ctrl+z\u9000\u51fa\u4e86vim\uff0c\u518d\u6b21\u6253\u5f00\u65f6\u4f1a\u6709swap\uff0c\u8fd9\u662f\u56e0\u4e3actrl+z\u5728\u540e\u53f0\u6302\u8d77\u4e86vim\uff0c\u8fd9\u65f6\u5148\u9000\u51fa\uff0c\u7136\u540ejobs\u547d\u4ee4\u67e5\u770b\u4e00\u4e0bvim\u662f\u5426\u5728\u540e\u53f0\uff0c\u7136\u540efg %vim\u8fdb\u5165\u540e\u53f0\u7684vim</li> </ul>"},{"location":"linux/x11%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/","title":"X11\u65e0\u6cd5\u663e\u793a\u7684\u95ee\u9898","text":"<p>\u5148\u5220\u9664~/.Xauthority \uff0c\u7136\u540e cd /etc/ssh/sshd_config</p> <p>\u4fee\u6539\u5982\u4e0b <pre><code>X11Forwarding yes\nX11DisplayOffset 10\nX11UseLocalhost yes\n</code></pre></p> <p>\u7136\u540e systemctl restart sshd</p>"},{"location":"linux/%E7%BB%88%E7%AB%AF%E5%BF%AB%E6%8D%B7%E9%94%AE/","title":"\u7ec8\u7aef\u5feb\u6377\u952e","text":"<pre><code>\u5149\u6807\u5feb\u901f\u79fb\u52a8\n- ctrl + a\uff1a\u5149\u6807\u56de\u5230\u8f93\u5165\u7684\u547d\u4ee4\u9996\u90e8\u00a0 \uff08\u5bf9\u5e94Home\u952e\uff09\n- ctrl + e\uff1a\u5149\u6807\u56de\u5230\u8f93\u5165\u7684\u547d\u4ee4\u5c3e\u90e8\u00a0 \uff08\u5bf9\u5e94End\u952e\uff09\n- ctrl + \u5de6(\u6216\u8005alt+b) \uff1a\u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd\n- ctrl + \u53f3(\u6216\u8005alt+f) \uff1a\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd\n- \n- ctrl + b\uff1a\u5149\u6807\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u00a0 \u00a0 \uff08\u5bf9\u5e94\u65b9\u5411\u952e\u2190\uff09\n- ctrl + f \uff1a\u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\u00a0 \u00a0 \uff08\u5bf9\u5e94\u65b9\u5411\u952e\u2192\uff09\n\n\u6e05\u5c4f\n- ctrl + u\uff1a\u5220\u9664\u8f93\u5165\u7684\u6574\u6761\u547d\u4ee4\n- ctrl + l \u6216 clear\uff1a\u6e05\u5c4f\n\n\u653e\u5927\u7f29\u5c0f\n- ctrl + + :\u653e\u5927\n- ctrl + - \uff1a\u7f29\u5c0f\n</code></pre>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/","title":"\u7f16\u7801\u65b9\u5f0f","text":"<p>\u7f16\u7801\u662f\u628a\u5b57\u7b26\u8f6c\u6210\u8ba1\u7b97\u673a\u201c\u8ba4\u8bc6\"\u7684\u4e8c\u8fdb\u5236</p> <p>\u5e38\u89c1\u7684\u4e00\u4e9b\u5b57\u7b26\u7f16\u7801\u65b9\u5f0f\uff1a - ASCII - Unicode - UTF-8 - GBK - GB2312</p>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/#1ascii","title":"1.ASCII\u7801","text":"<p>\u8fd9\u662f\u7f8e\u56fd\u572819\u4e16\u7eaa60\u5e74\u4ee3\u7684\u65f6\u5019\u4e3a\u4e86\u5efa\u7acb\u82f1\u6587\u5b57\u7b26\u548c\u4e8c\u8fdb\u5236\u7684\u5173\u7cfb\u65f6\u5236\u5b9a\u7684\u7f16\u7801\u89c4\u8303\uff0c\u5b83\u80fd\u8868\u793a128\u4e2a\u5b57\u7b26\uff0c\u5176\u4e2d\u5305\u62ec\u82f1\u6587\u5b57\u7b26\u3001\u963f\u62c9\u4f2f\u6570\u5b57\u3001\u897f\u6587\u5b57\u7b26\u4ee5\u53ca32\u4e2a\u63a7\u5236\u5b57\u7b26\u3002\u5b83\u7528\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\u5177\u4f53\u7684\u5b57\u7b26\uff0c\u4f46\u5b83\u53ea\u7528\u540e7\u4f4d\u6765\u8868\u793a\u5b57\u7b26\uff082^7=128\uff09\uff0c\u6700\u524d\u9762\u7684\u4e00\u4f4d\u7edf\u4e00\u89c4\u5b9a\u4e3a0\u3002</p>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/#2ascii","title":"2.\u6269\u5c55\u7684ASCII\u7801","text":"<p>\u539f\u672c\u7684ASCII\u7801\u5bf9\u4e8e\u82f1\u6587\u8bed\u8a00\u7684\u56fd\u5bb6\u662f\u591f\u7528\u4e86\uff0c\u4f46\u662f\u6b27\u6d32\u56fd\u5bb6\u7684\u4e00\u4e9b\u8bed\u8a00\u4f1a\u6709\u62fc\u97f3\uff0c\u8fd9\u65f67\u4e2a\u5b57\u8282\u5c31\u4e0d\u591f\u7528\u4e86\u3002\u56e0\u6b64\u4e00\u4e9b\u6b27\u6d32\u56fd\u5bb6\u5c31\u51b3\u5b9a\uff0c\u5229\u7528\u5b57\u8282\u4e2d\u95f2\u7f6e\u7684\u6700\u9ad8\u4f4d\u7f16\u5165\u65b0\u7684\u7b26\u53f7\u3002\u6bd4\u5982\uff0c\u6cd5\u8bed\u4e2d\u7684\u00e9\u7684\u7f16\u7801\u4e3a130\uff08\u4e8c\u8fdb\u523610000010\uff09\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u8fd9\u4e9b\u6b27\u6d32\u56fd\u5bb6\u4f7f \u7528\u7684\u7f16\u7801\u4f53\u7cfb\uff0c\u53ef\u4ee5\u8868\u793a\u6700\u591a256\u4e2a\u7b26\u53f7\u3002\u4f46\u8fd9\u65f6\u95ee\u9898\u4e5f\u51fa\u73b0\u4e86\uff1a\u4e0d\u540c\u7684\u56fd\u5bb6\u6709\u4e0d\u540c\u7684\u5b57\u6bcd\uff0c\u56e0\u6b64\uff0c\u54ea\u6015\u5b83\u4eec\u90fd\u4f7f\u7528256\u4e2a\u7b26\u53f7\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u4ee3\u8868\u7684\u5b57\u6bcd\u5374\u4e0d\u4e00\u6837\u3002\u6bd4\u5982\uff0c130\u5728\u6cd5\u8bed\u7f16\u7801 \u4e2d\u4ee3\u8868\u4e86\u00e9\uff0c\u5728\u5e0c\u4f2f\u6765\u8bed\u7f16\u7801\u4e2d\u5374\u4ee3\u8868\u4e86\u5b57\u6bcdGimel (\u05d2)\uff0c\u5728\u4fc4\u8bed\u7f16\u7801\u4e2d\u53c8\u4f1a\u4ee3\u8868\u53e6\u4e00\u4e2a\u7b26\u53f7\u3002\u4f46\u662f\u4e0d\u7ba1\u600e\u6837\uff0c\u6240\u6709\u8fd9\u4e9b\u7f16\u7801\u65b9\u5f0f\u4e2d\uff0c0\u2014127\u8868\u793a\u7684\u7b26\u53f7\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u4e00\u6837\u7684\u53ea\u662f128\u2014255\u7684\u8fd9\u4e00\u6bb5\u3002\u8fd9\u4e2a\u95ee\u9898\u5c31\u76f4\u63a5\u4fc3\u4f7f\u4e86Unicode\u7f16\u7801\u7684\u4ea7\u751f\u3002</p>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/#3unicode","title":"3.Unicode\u7b26\u53f7\u96c6","text":"<p>\u6b63\u5982\u4e0a\u4e00\u8282\u6240\u8bf4\uff0c\u4e16\u754c\u4e0a\u5b58\u5728\u7740\u591a\u79cd\u7f16\u7801\u65b9\u5f0f\uff0c\u540c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u5b57\u53ef\u4ee5\u88ab\u89e3\u91ca\u6210\u4e0d\u540c\u7684\u7b26\u53f7\u3002\u56e0\u6b64\uff0c\u8981\u60f3\u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5c31\u5fc5\u987b\u77e5\u9053\u5b83\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u5426\u5219\u7528\u9519\u8bef\u7684\u7f16\u7801\u65b9\u5f0f\u89e3\u8bfb\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e71\u7801\u3002\u4e3a\u4ec0\u4e48\u7535\u5b50\u90ae\u4ef6\u5e38\u5e38\u51fa\u73b0\u4e71\u7801\uff1f\u5c31\u662f\u56e0\u4e3a\u53d1\u4fe1\u4eba\u548c\u6536\u4fe1\u4eba\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002\u800cUnicode\u5c31\u662f\u8fd9\u6837\u4e00\u79cd\u7f16\u7801\uff1a\u5b83\u5305\u542b\u4e86\u4e16\u754c\u4e0a\u6240\u6709\u7684\u7b26\u53f7\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u7b26\u53f7\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u6bd4\u5982\uff0cU+0639\u8868\u793a\u963f\u62c9\u4f2f\u5b57\u6bcdAin\uff0cU+0041\u8868\u793a\u82f1\u8bed\u7684\u5927\u5199\u5b57\u6bcdA\uff0cU+4E25\u8868\u793a\u6c49\u5b57\u201c\u4e25\u201d\u3002\u5177\u4f53\u7684\u7b26\u53f7\u5bf9\u5e94\u8868\uff0c\u53ef\u4ee5\u67e5\u8be2unicode.org\uff0c\u6216\u8005\u4e13\u95e8\u7684\u6c49\u5b57\u5bf9\u5e94\u8868\u00a0\u3002\u5f88\u591a\u4eba\u90fd\u8bf4Unicode\u7f16\u7801\uff0c\u4f46\u5176\u5b9eUnicode\u662f\u4e00\u4e2a\u7b26\u53f7\u96c6\uff08\u4e16\u754c\u4e0a\u6240\u6709\u7b26\u53f7\u7684\u7b26\u53f7\u96c6\uff09\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7801\u65b9\u5f0f\u3002</p> <p>\u4f46\u662f\u6b63\u56e0\u4e3aUnicode\u5305\u542b\u4e86\u6240\u6709\u7684\u5b57\u7b26\uff0c\u800c\u6709\u4e9b\u56fd\u5bb6\u7684\u5b57\u7b26\u7528\u4e00\u4e2a\u5b57\u8282\u4fbf\u53ef\u4ee5\u8868\u793a\uff0c\u800c\u6709\u4e9b\u56fd\u5bb6\u7684\u5b57\u7b26\u8981\u7528\u591a\u4e2a\u5b57\u8282\u624d\u80fd\u8868\u793a\u51fa\u6765\u3002\u5373\u4ea7\u751f\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a - \u7b2c\u4e00\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u90a3\u8ba1\u7b97\u673a\u600e\u4e48\u77e5\u9053\u8fd9\u4e24\u4e2a\u5b57\u8282\u662f\u8868\u793a\u4e00\u4e2a\u6c49\u5b57\u5462\uff1f\u8fd8\u662f\u8868\u793a\u4e24\u4e2a\u82f1\u6587\u5b57\u6bcd\u5462\uff1f - \u7b2c\u4e8c\uff0c\u56e0\u4e3a\u4e0d\u540c\u5b57\u7b26\u9700\u8981\u7684\u5b58\u50a8\u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u5982\u679cUnicode\u89c4\u5b9a\u75282\u4e2a\u5b57\u8282\u5b58\u50a8\u5b57\u7b26\uff0c\u90a3\u4e48\u82f1\u6587\u5b57\u7b26\u5b58\u50a8\u65f6\u524d\u97621\u4e2a\u5b57\u8282\u90fd\u662f0\uff0c\u8fd9\u5c31\u5927\u5927\u6d6a\u8d39\u4e86\u5b58\u50a8\u7a7a\u95f4\u3002</p> <p>\u4e0a\u9762\u4e24\u4e2a\u95ee\u9898\u9020\u6210\u7684\u7ed3\u679c\u662f\uff1a - 1\uff09\u51fa\u73b0\u4e86unicode\u7684\u591a\u79cd\u5b58\u50a8\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u8bb8\u591a\u79cd\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u53ef\u4ee5\u7528\u6765\u8868\u793aunicode\u3002 - 2\uff09unicode\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u65e0\u6cd5\u63a8\u5e7f\uff0c\u76f4\u5230\u4e92\u8054\u7f51\u7684\u51fa\u73b0\u3002</p>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/#4utf-8","title":"4.UTF-8","text":"<p>\u4e92\u8054\u7f51\u7684\u666e\u53ca\uff0c\u5f3a\u70c8\u8981\u6c42\u51fa\u73b0\u4e00\u79cd\u7edf\u4e00\u7684\u7f16\u7801\u65b9\u5f0f\u3002UTF-8\u5c31\u662f\u5728\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u5e7f\u7684\u4e00\u79cdunicode\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u5176\u4ed6\u5b9e\u73b0\u65b9\u5f0f\u8fd8\u5305\u62ecUTF-16\u548cUTF-32\uff0c\u4e0d\u8fc7\u5728\u4e92\u8054\u7f51\u4e0a\u57fa\u672c\u4e0d\u7528\u3002\u91cd\u590d\u4e00\u904d\uff0c\u8fd9\u91cc\u7684\u5173\u7cfb\u662f\uff0cUTF-8\u662fUnicode\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e4b\u4e00\u3002</p> <p>UTF-8\u6700\u5927\u7684\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u662f\u5b83\u662f\u4e00\u79cd\u53d8\u957f\u7684\u7f16\u7801\u65b9\u5f0f\u3002\u5b83\u53ef\u4ee5\u4f7f\u75281~4\u4e2a\u5b57\u8282\u8868\u793a\u4e00\u4e2a\u7b26\u53f7\uff0c\u6839\u636e\u4e0d\u540c\u7684\u7b26\u53f7\u800c\u53d8\u5316\u5b57\u8282\u957f\u5ea6\u3002  \u82f1\u6587\u4e00\u822c\u4e3a1\u4e2a\u5b57\u7b26\uff0c\u4e2d\u6587\u4e00\u822c\u4e3a3\u4e2a\u5b57\u7b26\u3002</p> <p>UTF-8\u7684\u7f16\u7801\u89c4\u5219\u5f88\u7b80\u5355\uff0c\u53ea\u6709\u4e24\u6761\uff1a  </p> <p>1\uff09\u5bf9\u4e8e\u5355\u5b57\u8282\u7684\u7b26\u53f7\uff0c\u5b57\u8282\u7684\u7b2c\u4e00\u4f4d\u8bbe\u4e3a0\uff0c\u540e\u97627\u4f4d\u4e3a\u8fd9\u4e2a\u7b26\u53f7\u7684unicode\u7801\u3002\u56e0\u6b64\u5bf9\u4e8e\u82f1\u8bed\u5b57\u6bcd\uff0cUTF-8\u7f16\u7801\u548cASCII\u7801\u662f\u76f8\u540c\u7684\u3002  </p> <p>2\uff09\u5bf9\u4e8en\u5b57\u8282\u7684\u7b26\u53f7\uff08n&gt;1\uff09\uff0c\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u524dn\u4f4d\u90fd\u8bbe\u4e3a1\uff0c\u7b2cn+1\u4f4d\u8bbe\u4e3a0\uff0c\u540e\u9762\u5b57\u8282\u7684\u524d\u4e24\u4f4d\u4e00\u5f8b\u8bbe\u4e3a10\u3002\u5269\u4e0b\u7684\u6ca1\u6709\u63d0\u53ca\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5168\u90e8\u4e3a\u8fd9\u4e2a\u7b26\u53f7\u7684unicode\u7801\u3002  </p>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/#5-gbkgb2312gb18030","title":"5. GBK/GB2312/GB18030","text":"<p>GBK\u548cGB2312\u90fd\u662f\u9488\u5bf9\u7b80\u4f53\u5b57\u7684\u7f16\u7801\uff0c\u53ea\u662fGB2312\u53ea\u652f\u6301\u516d\u5343\u591a\u4e2a\u6c49\u5b57\u7684\u7f16\u7801\uff0c\u800cGBK\u652f\u63011\u4e07\u591a\u4e2a\u6c49\u5b57\u7f16\u7801\u3002\u800cGB18030\u662f\u7528\u4e8e\u7e41\u4f53\u5b57\u7684\u7f16\u7801\u3002\u6c49\u5b57\u5b58\u50a8\u65f6\u90fd\u4f7f\u7528\u4e24\u4e2a\u5b57\u8282\u6765\u50a8\u5b58\u3002</p>"},{"location":"linux/%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/#6","title":"6 \u603b\u7ed3","text":"<p>ASCII\u7f16\u7801\uff1a\u7528\u6765\u8868\u793a\u82f1\u6587\uff0c\u5b83\u4f7f\u75281\u4e2a\u5b57\u8282\u8868\u793a\uff0c\u5176\u4e2d\u7b2c\u4e00\u4f4d\u89c4\u5b9a\u4e3a0\uff0c\u5176\u4ed67\u4f4d\u5b58\u50a8\u6570\u636e\uff0c\u4e00\u5171\u53ef\u4ee5\u8868\u793a128\u4e2a\u5b57\u7b26\u3002</p> <p>\u62d3\u5c55ASCII\u7f16\u7801\uff1a\u7528\u4e8e\u8868\u793a\u66f4\u591a\u7684\u6b27\u6d32\u6587\u5b57\uff0c\u75288\u4e2a\u4f4d\u5b58\u50a8\u6570\u636e\uff0c\u4e00\u5171\u53ef\u4ee5\u8868\u793a256\u4e2a\u5b57\u7b26</p> <p>GBK/GB2312/GB18030\uff1a\u8868\u793a\u6c49\u5b57\u3002GBK/GB2312\u8868\u793a\u7b80\u4f53\u4e2d\u6587\uff0cGB18030\u8868\u793a\u7e41\u4f53\u4e2d\u6587\u3002</p> <p>Unicode\u7f16\u7801\uff1a\u5305\u542b\u4e16\u754c\u4e0a\u6240\u6709\u7684\u5b57\u7b26\uff0c\u662f\u4e00\u4e2a\u5b57\u7b26\u96c6\u3002</p> <p>UTF-8\uff1a\u662fUnicode\u5b57\u7b26\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e4b\u4e00\uff0c\u5b83\u4f7f\u75281-4\u4e2a\u5b57\u7b26\u8868\u793a\u4e00\u4e2a\u7b26\u53f7\uff0c\u6839\u636e\u4e0d\u540c\u7684\u7b26\u53f7\u800c\u53d8\u5316\u5b57\u8282\u957f\u5ea6\u3002</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/","title":"\u914d\u7f6ev2raya","text":""},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#15","title":"1.5\u7248\u672c","text":""},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#github15v2raya-deb","title":"github\u5b98\u7f51\u4e0b\u8f7d1.5\u7248\u672c\u4ee5\u4e0b\u7684v2raya deb\u5305","text":"<p>https://github.com/v2rayA/v2rayA/releases/tag/v1.5.0</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#v2ray-core","title":"\u4e0b\u8f7dv2ray-core","text":"<pre><code>wget https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh\nsudo bash ./install-release.sh --version v4.45.0\n</code></pre>"},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#_1","title":"\u914d\u7f6e\u5f00\u673a\u542f\u52a8","text":"<pre><code>sudo systemctl enable v2raya\nsudo systemctl start v2raya\n</code></pre>"},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#_2","title":"\u6700\u65b0\u7248\u672c","text":""},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#v2ray-core50","title":"\u4e0b\u8f7dv2ray-core\uff085.0\u4ee5\u4e0a\u7248\u672c\uff09","text":"<pre><code>wget https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh\nsudo bash ./install-release.sh --version v5.10.1\n</code></pre>"},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#v2raya","title":"\u4e0b\u8f7dv2raya\uff08\u6700\u65b0\u7248\u672c\uff09","text":"<p>github release</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEv2raya/#_3","title":"\u914d\u7f6e\u5f00\u673a\u542f\u52a8","text":"<pre><code>sudo systemctl enable v2raya\nsudo systemctl start v2raya\n</code></pre>"},{"location":"linux/%E9%9C%80%E8%A6%81%E7%89%A2%E8%AE%B0%E7%9A%84bug/","title":"\u9700\u8981\u7262\u8bb0\u7684bug","text":"<ol> <li>linux\u8868\u793a\u7edd\u5bf9\u8def\u5f84\u65f6\uff0c\u524d\u8fb9\u4e00\u5b9a\u8981\u52a0/\uff0c\u6bd4\u5982/usr/bin/cd\uff0c\u5982\u679c\u4e0d\u52a0/\uff0c\u9ed8\u8ba4\u662f\u76f8\u5bf9\u8def\u5f84</li> <li>linux\u8868\u793a\u8def\u5f84\u4e3a\u6b63\u659c\u6760/\uff0cwindows\u4e00\u822c\u4e3a\u53cd\u659c\u6760\\\uff0c\u4e14\u4e00\u822c\u9700\u8981\u8f6c\u4e49\uff0c\u4e5f\u5c31\u662f\\\u8868\u793a\u3002linux\u4e3a\u201c\u4e0a\u5c71\u201d\uff0cwindows\u4e3a\u201c\u4e0b\u5c71\u201d\u3002</li> </ol>"},{"location":"python/python%E4%B8%AD%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0/","title":"Python\u4e2d\u51fd\u6570\u7684\u53c2\u6570","text":""},{"location":"python/python%E4%B8%AD%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0/#1python","title":"1.python\u51fd\u6570\u53c2\u6570\u4e2d/\u548c*\u7684\u610f\u601d","text":"<p>\u7b80\u5355\u6765\u8bf4\u9664\u524d\u4f4d\u7f6e\uff0c\u661f\u540e\u5173\u952e</p> <ul> <li>/ \u7b26\u53f7\u4e4b\u524d\u7684\u6240\u6709\u53c2\u6570\uff0c\u90fd\u5fc5\u987b\u4ee5\u4f4d\u7f6e\u53c2\u6570\u7a7f\u53c2\uff0c\u4e0d\u53ef\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u4f20\u53c2</li> <li>* \u7b26\u53f7\u4e4b\u540e\u7684\u6240\u6709\u53c2\u6570\uff0c\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u65b9\u5f0f\u4f20\u53c2\uff0c\u4e0d\u5f97\u4ee5\u4f4d\u7f6e\u65b9\u5f0f\u4f20\u53c2</li> </ul>"},{"location":"python/python%E4%B8%AD%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0/#2python","title":"2.python\u6587\u6863\u4e2d[]\u7684\u610f\u601d","text":"<p>Python \u6587\u6863\u4e2d\u51fd\u6570\u4e2d\u7684\u65b9\u62ec\u53f7</p> <p></p>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/","title":"Python\u4e2d\u5e38\u7528\u7684\u4f18\u5316\u5e93","text":""},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#1","title":"1\u4f20\u7edf\u7684\u8fd0\u7b79\u4f18\u5316","text":""},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#11","title":"1.1\u6846\u67b6\u5de5\u5177\uff1a","text":"<ul> <li> <p>CVXPY\uff1a\u4f7f\u7528Python\u8fdb\u884c\u51f8\u4f18\u5316\uff0c\u53ef\u7528\u4e8e\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u89c4\u5212\uff0c\u534a\u6b63\u5b9a\u89c4\u5212\u3001\u6df7\u5408\u6574\u6570\u89c4\u5212\u7b49\u95ee\u9898\u3002\uff08\u7c7b\u4f3c\u4e8ecasadi\uff0c\u672c\u8eab\u662f\u4e00\u4e2a\u6846\u67b6\uff0c\u53ef\u4ee5\u8c03\u7528\u5176\u4ed6\u6c42\u89e3\u5668\uff09\u3002CVXPY \u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684 python \u4f18\u5316\u5de5\u5177\u63a5\u53e3\uff0c\u5b83\u672c\u8eab\u5e76\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u6c42\u89e3\u5668\uff0c\u90fd\u662f\u6839\u636e\u95ee\u9898\u7c7b\u578b\u8c03\u7528\u76f8\u5e94\u7684\u5916\u90e8\u6c42\u89e3\u5668\u00a010\uff0c\u7136\u540e\u89e3\u6790\u7ed3\u679c\u3002\u5bf9\u4e8e\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u53ef\u4ee5\u8c03\u7528\u5916\u90e8\u7684 CBC, GLPK, CPLEX, GUROBI, MOSEK \u7b49\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u9700\u8981\u8c03\u7528 CBC \u65f6\uff0c\u5fc5\u987b\u5148\u5b89\u88c5\u5176\u5b98\u65b9 python \u63a5\u53e3 CyLP\uff1b\u5f53\u9700\u8981\u8c03\u7528 CPLEX \u65f6\u4e5f\u9700\u8981\u5148\u5b89\u88c5\u5176\u5b98\u65b9 python \u63a5\u53e3\u3002   \u751a\u81f3cvxpy\u53ef\u4ee5\u55f2\u7528cvxopt\u7684\u6c42\u89e3\u5668\u3002</p> </li> <li> <p>CVXOPT \uff1aCVXOPT \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u51f8\u4f18\u5316\u5de5\u5177\u5305\uff0c\u5e76\u81ea\u5e26\u6709\u7ebf\u6027\u89c4\u5212\u6c42\u89e3\u5668\uff0c\u4f46\u6548\u7387\u4e0d\u662f\u5f88\u9ad8\u3002\u4f46\u5b83\u53ef\u4ee5\u8c03\u7528\u5916\u90e8\u6c42\u89e3\u5668\u00a08\uff0c\u5305\u62ec\u00a0GLPK,\u00a0MOSEK\u00a0\u548c\u00a0DSDP\u3002</p> </li> <li> <p>Pyomo\uff1aPython\u5efa\u6a21\u8bed\u8a00\uff0c\u53ef\u7528\u4e8e\u7ebf\u6027\u89c4\u5212\uff0c\u975e\u7ebf\u6027\u89c4\u5212\uff0c\u6df7\u5408\u6574\u6570\u89c4\u5212\u7b49\u95ee\u9898\u3002</p> </li> <li>casadi</li> <li>PuLP\uff1a\u7ebf\u6027\u89c4\u5212\u5e93\uff0c\u4f7f\u7528Python\u8bed\u8a00\u7f16\u5199\uff0c\u7b80\u5355\u6613\u7528\u3002PulP \u4e5f\u53ef\u4ee5\u8c03\u7528 CBC, GLPK, CPLEX, GUROBI \u7b49\u5916\u90e8\u7ebf\u6027\u89c4\u5212\u6c42\u89e3\u5668\u3002\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b83\u7684\u5b98\u65b9\u6587\u6863\u00a012</li> </ul>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#12","title":"1.2\u6c42\u89e3\u5668","text":""},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#1_1","title":"\uff081\uff09\u5f00\u6e90","text":"<ul> <li>osqp\uff1a\u4e8c\u6b21\u89c4\u5212\u5e93</li> <li>nlopt\uff1a\u975e\u7ebf\u6027\u89c4\u5212\u5e93</li> <li>scipy.optimize\uff1aSciPy\u4e2d\u7684\u4f18\u5316\u6a21\u5757\uff0c\u5305\u62ec\u7ebf\u6027\u89c4\u5212\u548c\u975e\u7ebf\u6027\u89c4\u5212\u7b49\u7b97\u6cd5\u3002</li> <li>Optuna\uff1a\u7528\u4e8e\u8d85\u53c2\u6570\u4f18\u5316\u7684\u5e93\uff0c\u53ef\u7528\u4e8e\u81ea\u52a8\u5316\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8c03\u53c2\u3002</li> <li>SCIP\uff1a\u975e\u5546\u7528\u4f18\u5316\u8f6f\u4ef6\uff0c\u53ef\u7528\u4e8e\u89e3\u51b3\u7ebf\u6027\u89c4\u5212\u3001\u6df7\u5408\u6574\u6570\u89c4\u5212\u7b49\u95ee\u9898\u3002</li> <li>PySCIPOpt\uff1aPython\u754c\u9762\u7684SCIP\u4f18\u5316\u5668\uff0c\u53ef\u7528\u4e8e\u6df7\u5408\u6574\u6570\u89c4\u5212\u3001\u4e8c\u6b21\u89c4\u5212\u7b49\u95ee\u9898\u3002</li> <li>OR-Tools\uff1aGoogle\u51fa\u54c1\u7684\u4f18\u5316\u5e93\uff0c\u53ef\u7528\u4e8e\u7ebf\u6027\u89c4\u5212\u3001\u6574\u6570\u4f18\u5316\u3001\u7ea6\u675f\u4f18\u5316\u3001\u8f66\u8f86\u8def\u5f84\u89c4\u5212\u7b49\u95ee\u9898\u3002</li> <li>DEAP\uff1a\u8fdb\u5316\u7b97\u6cd5\u5e93\uff0c\u53ef\u7528\u4e8e\u4f18\u5316\u95ee\u9898\uff0c\u5982\u9057\u4f20\u7b97\u6cd5\u3001\u7c92\u5b50\u7fa4\u7b97\u6cd5\u7b49\u3002</li> <li>Platypus\uff1aPython\u6846\u67b6\uff0c\u7528\u4e8e\u591a\u76ee\u6807\u4f18\u5316\u95ee\u9898\uff0c\u53ef\u7528\u4e8e\u9057\u4f20\u7b97\u6cd5\u3001NSGA-II\u7b49\u3002</li> </ul>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#2","title":"\uff082\uff09\u5546\u7528","text":"<ul> <li>Gurobi\uff1a\u5546\u7528\u4f18\u5316\u8f6f\u4ef6\uff0c\u63d0\u4f9bPython API\u3002</li> <li>CPLEX\uff1a\u5546\u7528\u4f18\u5316\u8f6f\u4ef6\uff0c\u63d0\u4f9bPython API\uff0c\u53ef\u7528\u4e8e\u7ebf\u6027\u89c4\u5212\u3001\u6df7\u5408\u6574\u6570\u89c4\u5212\u7b49\u95ee\u9898\u3002\u3002</li> <li>MOSEK\uff1a\u5546\u7528\u4f18\u5316\u8f6f\u4ef6\uff0c\u53ef\u7528\u4e8e\u7ebf\u6027\u89c4\u5212\u3001\u4e8c\u6b21\u89c4\u5212\u3001\u6df7\u5408\u6574\u6570\u89c4\u5212\u7b49\u95ee\u9898\u3002</li> </ul>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#13","title":"1.3 \u6027\u80fd\u5bf9\u6bd4","text":"<ul> <li>GLPK \u5bf9\u4e8e\u53d8\u91cf\u89c4\u6a21\u5f88\u5927\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u6c42\u89e3\u901f\u5ea6\u975e\u5e38\u6162\u3002</li> <li>CPLEX \u6c42\u89e3\u5927\u89c4\u6a21\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684\u65b9\u6cd5\u5efa\u6a21\u65f6\u95f4\u975e\u5e38\u957f\u3002\u5b9e\u9645\u6d4b\u8bd5\uff0c\u5728\u53d8\u91cf\u89c4\u6a21\u4e3a 65536 \u65f6\uff0c\u5efa\u6a21\u82b1\u8d39 20s \u5de6\u53f3\uff0c\u6c42\u89e3\u82b1\u8d39\u4e0d\u5230 1s\u3002\u5f53\u4f7f\u7528 CVXPY \u8c03\u7528 CPLEX \u65f6\uff0c\u540c\u6837\u89c4\u6a21\u4e00\u5171\u82b1\u8d39 5s \u5de6\u53f3\uff0c\u63a8\u6d4b\u4e3b\u8981\u65f6\u95f4\u4e5f\u662f\u82b1\u8d39\u5728\u5efa\u6a21\u4e0a\u9762\u3002</li> <li>\u6bd4\u8f83 CVXPY \u8c03\u7528\u9ed8\u8ba4\u6c42\u89e3\u5668\uff0cCPLEX, GUROBI\uff0c\u53d1\u73b0\u901f\u5ea6\u5dee\u8ddd\u4e0d\u5927\uff0c\u76f8\u5bf9\u6765\u8bf4 GUROBI \u53ef\u80fd\u4f1a\u7a0d\u5fae\u597d\u4e00\u70b9\u3002</li> </ul>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96%E5%BA%93/#2scikit-opt","title":"2\u8fdb\u5316\u7b97\u6cd5\uff08\u5efa\u8bae\u7528scikit-opt\uff09","text":"<ul> <li>DEAP</li> <li>mealpy</li> <li>scikit-opt \uff08\u56fd\u4ea7\u826f\u5fc3\uff09</li> <li>Geatpy2\uff08\u56fd\u4ea7\u7528\u5fc3\uff09</li> <li>pygmo2</li> <li>pyswarms</li> <li>SciPy</li> </ul>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/","title":"Python\u4e2d\u5e38\u7528\u7684\u88c5\u9970\u5668","text":"<p>\u4ee3\u7801\u8fd0\u884c\u671f\u95f4\u52a8\u6001\u589e\u52a0\u529f\u80fd\u7684\u65b9\u5f0f\uff0c\u79f0\u4e4b\u4e3a\u201c\u88c5\u9970\u5668\u201d\uff08Decorator\uff09</p> <pre><code>def log(func):\n    def wrapper(*args, **kw):\n        print('call %s():' % func.__name__)\n        return func(*args, **kw)\n    return wrapper\n@log\ndef now():\n    print('2015-3-25')\n&gt;&gt;&gt; now()\ncall now():\n2015-3-25\n</code></pre>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#1-property","title":"1 @property","text":"<p>\u4fee\u9970\u65b9\u6cd5\uff0c\u4f7f\u65b9\u6cd5\u4f5c\u4e3a\u5c5e\u6027\u4f7f\u7528</p> <pre><code>&gt;&gt;&gt; class example(object):\n...     @property\n...     def example_method(self):\n...         return 123\n... \n&gt;&gt;&gt; test=example()\n&gt;&gt;&gt; test.example_method\n123\n&gt;&gt;&gt; test.example_method()\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'int' object is not callable\n</code></pre>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#2-attrsetter-setter","title":"2 @\\&lt;attr&gt;.setter\uff1a\u7528\u4e8e\u5c06\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\u6807\u8bb0\u4e3a\u5c5e\u6027\u7684\u4fee\u6539\u5668\u65b9\u6cd5\uff08\u5373 setter \u65b9\u6cd5\uff09\u3002","text":"<pre><code>class MyClass:\n    def __init__(self, value):\n        self._value = value\n\n    @classmethod\n    def class_method(cls):\n        # \u5728\u7c7b\u65b9\u6cd5\u4e2d\u8bbf\u95ee\u7c7b\u53d8\u91cf\n        print(cls.class_variable)\n\n    @staticmethod\n    def static_method():\n        # \u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4e0d\u80fd\u8bbf\u95ee\u7c7b\u6216\u5b9e\u4f8b\u53d8\u91cf\n        print(\"This is a static method\")\n\n    @property\n    def value(self):\n        # \u8bbf\u95ee\u5668\u65b9\u6cd5\uff0c\u83b7\u53d6\u503c\n        return self._value\n\n    @value.setter\n    def value(self, value):\n        # \u4fee\u6539\u5668\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u503c\n        self._value = value\n\nobj = MyClass(5)\nobj.value = 10  # \u8c03\u7528\u4fee\u6539\u5668\u65b9\u6cd5\nprint(obj.value)  # \u8c03\u7528\u8bbf\u95ee\u5668\u65b9\u6cd5\n</code></pre>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#3abstractmethod","title":"3@abstractmethod","text":"<p>\u62bd\u8c61\u65b9\u6cd5\u8868\u793a\u57fa\u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6ca1\u6709\u5b9e\u73b0\uff0c\u6240\u4ee5\u57fa\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u5b50\u7c7b\u5b9e\u73b0\u4e86\u8be5\u62bd\u8c61\u65b9\u6cd5\u624d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002</p> <pre><code>from abc import ABCMeta, abstractmethod\nclass Backbone(nn.Module, metaclass=ABCMeta):\n    def __init__(self):\n        super().__init__()\n\n    @abstractmethod\n    def forward(self):\n        pass\n\n    @property\n    def size_divisibility(self):\n        return 0\n</code></pre> <p>Python\u7684abc\u63d0\u4f9b\u4e86@abstractmethod\u88c5\u9970\u5668\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5\uff0c\u4e0b\u9762\u4ee5Python3\u7684abc\u6a21\u5757\u4e3e\u4f8b\u3002 @abstractmethod\uff1a \u89c1\u4e0b\u56fe\u7684\u4ee3\u7801\uff0c\u57fa\u7c7bFoo\u7684fun\u65b9\u6cd5\u88ab@abstractmethod\u88c5\u9970\u4e86\uff0c\u6240\u4ee5Foo\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff1b\u5b50\u7c7bSubA\u6ca1\u6709\u5b9e\u73b0\u57fa\u7c7b\u7684fun\u65b9\u6cd5\u4e5f\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff1b\u5b50\u7c7bSubB\u5b9e\u73b0\u4e86\u57fa\u7c7b\u7684\u62bd\u8c61\u65b9\u6cd5fun\u6240\u4ee5\u80fd\u5b9e\u4f8b\u5316\u3002 </p> <p>\u5b8c\u6574\u4ee3\u7801\uff1a \u5728Python3.4\u4e2d\uff0c\u58f0\u660e\u62bd\u8c61\u57fa\u7c7b\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u5b50\u7c7b\u8bddabc.ABC\uff1bPython3.0\u5230Python3.3\uff0c\u5fc5\u987b\u5728class\u8bed\u53e5\u4e2d\u4f7f\u7528metaclass=ABCMeta\uff1bPython2\u4e2d\u4f7f\u7528__metaclass__=ABCMeta</p> <p>Python3.4 \u5b9e\u73b0\u65b9\u6cd5\uff1a <pre><code>from abc import ABC, abstractmethod\nclass Foo(ABC):\n    @abstractmethod\n    def fun(self):\n        '''please Implemente in subclass'''\n\n\nclass SubFoo(Foo):\n    def fun(self):\n        print('fun in SubFoo')\n\na = SubFoo()\na.fun()\n</code></pre></p> <p>Python3.0\u5230Python3.3\u7684\u5b9e\u73b0\u65b9\u6cd5\uff1a <pre><code>from abc import abstractmethod, ABCMeta\n\nclass Bar(metaclass=ABCMeta):\n    @abstractmethod\n    def fun(self):\n        '''please Implemente in subclass'''\n\nclass SubBar(Bar):\n    def fun(self):\n        print('fun in SubBar')\nb = SubBar()\nb.fun()\n</code></pre></p>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#4-classmethod-staticmethoed","title":"4 @classmethod @staticmethoed","text":"<p>@staticmethod\u4e0d\u9700\u8981\u8868\u793a\u81ea\u8eab\u5bf9\u8c61\u7684self\u548c\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\uff0c\u5c31\u8ddf\u4f7f\u7528\u51fd\u6570\u4e00\u6837\u3002\u5176\u5b9e\uff0c\u9759\u6001\u65b9\u6cd5\u5c31\u662f\u666e\u901a\u7684\u51fd\u6570\uff0c\u53ea\u662f\u78b0\u5de7\u5728\u7c7b\u7684\u5b9a\u4e49\u4f53\u4e2d\uff0c\u800c\u4e0d\u662f\u5728\u6a21\u5757\u5c42\u5b9a\u4e49  </p> <p>@classmethod\u4e5f\u4e0d\u9700\u8981self\u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\u3002</p> <pre><code>&gt;&gt;&gt; class Demo:\n...    @classmethod\n...    def klassmeth(*args):\n...        return args\n...    @staticmethod\n...    def statmeth(*args):\n...        return args\n&gt;&gt;&gt; Demo.klassmeth() # \u65e0\u8bba\u662f\u5426\u4f20\u9012\u53c2\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u662fclass\u672c\u8eab\n(&lt;class '__main__.Demo'&gt;,) \n&gt;&gt;&gt; Demo.statmeth()\n()\n&gt;&gt;&gt; Demo.klassmeth('apple') # \u65e0\u8bba\u662f\u5426\u4f20\u9012\u53c2\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u662fclass\u672c\u8eab\n(&lt;class '__main__.Demo'&gt;, 'apple')\n&gt;&gt;&gt; Demo.statmeth('apple')\n('apple',)\n</code></pre> <p>example,</p> <pre><code>class A(object):\n    def foo(self, x):\n        print \"executing foo(%s, %s)\" % (self, x)\n\n    @classmethod\n    def class_foo(cls, x):\n        print \"executing class_foo(%s, %s)\" % (cls, x)\n\n    @staticmethod\n    def static_foo(x):\n        print \"executing static_foo(%s)\" % x    \n</code></pre>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#5-lru_cache","title":"5 @lru_cache \u57fa\u4e8e\u7f13\u5b58\u80fd\u591f\u52a0\u901f\u4ee3\u7801\u6027\u80fd\uff1a\u5c24\u5176\u662f\u9012\u5f52\u7ed3\u6784\uff1a","text":"<pre><code>@lru_cache\ndef factorial(n):\n    return n * factorial(n-1) if n else 1\n</code></pre>"},{"location":"python/python%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#6-jit-jitjust-in-time-compilation","title":"6 @jit jit\u5168\u79f0\u201cJust In Time compilation\u201d\uff0c\u4e5f\u80fd\u52a0\u901f\u4ee3\u7801\u8fd0\u884c\u901f\u5ea6\uff0c\u4f46\u662f\u901a\u5e38\u662f\u5bf9\u4e8e\u6570\u636e\u91cf\u5927\u7684\u8ba1\u7b97\u624d\u80fd\u663e\u793a\u4f18\u52bf\uff0c\u7b80\u5355\u7684\u8ba1\u7b97\u53ef\u80fd\u8fd8\u4f1a\u53d8\u6162\uff1a","text":"<pre><code>from numba import jit\nimport random\n\n@jit(nopython=True)\ndef monte_carlo_pi(nsamples):\n    acc = 0\n    for i in range(nsamples):\n        x = random.random()\n        y = random.random()\n        if (x ** 2 + y ** 2) &lt; 1.0:\n            acc += 1\n    return 4.0 * acc / nsamples\n</code></pre>"},{"location":"python/python%E4%B8%AD%E6%A8%A1%E5%9D%97%E7%9A%84%E6%90%9C%E7%B4%A2%E8%B7%AF%E5%BE%84/","title":"Python\u4e2d\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84","text":"<p>Python\u641c\u7d22\u6a21\u5757\u7684\u8def\u5f84\u662f\u7531\u56db\u90e8\u5206\u6784\u6210\u7684\uff1a</p> <ul> <li>\u7a0b\u5e8f\u7684\u4e3b\u76ee\u5f55\uff1a\u5f53\u524d\u6587\u4ef6\u7684\u76ee\u5f55</li> <li>PATHONPATH\u76ee\u5f55\uff1a\u5404\u79cdsite-package</li> <li>\u6807\u51c6\u94fe\u63a5\u5e93\u76ee\u5f55\uff1a</li> <li>. pth\u6587\u4ef6\u7684\u76ee\u5f55\uff1a \u589e\u52a0 .pth \u6587\u4ef6\uff1a\u5728\u00a0<code>/usr/local/lib/python3.5/site-packages</code>\u00a0\u4e0b\u6dfb\u52a0\u4e00\u4e2a\u6269\u5c55\u540d\u4e3a\u00a0<code>.pth</code>\u00a0\u7684\u914d\u7f6e\u6587\u4ef6\uff08\u4f8b\u5982\uff1a<code>extras.pth</code>\uff09\uff0c\u5185\u5bb9\u4e3a\u8981\u6dfb\u52a0\u7684\u8def\u5f84\uff1a <pre><code>/home/wang/workspace\n</code></pre></li> </ul> <p>\u8fd9\u56db\u90e8\u5206\u7684\u8def\u5f84\u90fd\u5b58\u50a8\u5728sys.path \u5217\u8868\u4e2d\u3002</p> <p>\u5982\u679c\u5728zshrc\u4e2dsource\u4e86 setup.zsh \u90a3\u4e48PYTHONPATH\u4e2d\u8fd8\u4f1a\u591a\u4e00\u4e9b\u8def\u5f84 ['/home/thicv/test',  '/home/thicv/frenet_carla_ros/devel/lib/python3/dist-packages', \uff08\u81ea\u5df1\u5de5\u4f5c\u7a7a\u95f4python\u5305\u8def\u5f84\uff0c\u4e00\u4e2apackage\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5305\uff09 '/opt/ros/noetic/lib/python3/dist-packages', \uff08\u539f\u59cbros\u7684python\u5305\u8def\u5f84\uff09 '/home/thicv/carla/CARLA_0.9.13/PythonAPI/carla', '/home/thicv/miniconda3/envs/sdweb/lib/python310.zip', '/home/thicv/miniconda3/envs/sdweb/lib/python3.10', '/home/thicv/miniconda3/envs/sdweb/lib/python3.10/lib-dynload', *'/home/thicv/miniconda3/envs/sdweb/lib/python3.10/site-packages'*]\uff08\u672c\u8eabpython\u7684\u5305\u8def\u5f84\uff09</p> <p></p> <p></p>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%B0%84/","title":"Python\u4e2d\u7684\u53cd\u5c04","text":"<ul> <li>\u53cd\u5c04\u7684\u6982\u5ff5\uff1a\u53cd\u5c04\u5c31\u662f\u901a\u8fc7\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\uff1a<ul> <li>\u5bfc\u5165\u6a21\u5757\u3001</li> <li>\u53bb\u6a21\u5757\u5bfb\u627e\u6307\u5b9a\u51fd\u6570\u3001\u5e76\u6267\u884c\u3002</li> <li>\u53bb\u5bf9\u8c61\uff08\u6a21\u5757\uff09\u4e2d\u64cd\u4f5c\uff08\u67e5\u627e/\u83b7\u53d6/\u5220\u9664/\u6dfb\u52a0\uff09\u6210\u5458</li> </ul> </li> <li>\u5b9e\u73b0\u65b9\u5f0f\uff1a <pre><code># 1. getattr()\u51fd\u6570\u662fPython\u81ea\u7701\u7684\u6838\u5fc3\u51fd\u6570\uff0c\u5177\u4f53\u4f7f\u7528\u5927\u4f53\u5982\u4e0b\uff1a\nclass A: \n    def __init__(self): \n        self.name = 'zhangjing'\n#self.age='24'\n    def method(self): \n        print\"method print\"\n\nInstance = A() \nprint getattr(Instance , 'name, 'not find') #\u5982\u679cInstance \u5bf9\u8c61\u4e2d\u6709\u5c5e\u6027name\u5219\u6253\u5370self.name\u7684\u503c\uff0c\u5426\u5219\u6253\u5370'not find'\nprint getattr(Instance , 'age', 'not find') #\u5982\u679cInstance \u5bf9\u8c61\u4e2d\u6709\u5c5e\u6027age\u5219\u6253\u5370self.age\u7684\u503c\uff0c\u5426\u5219\u6253\u5370'not find'\nprint getattr(a, 'method', 'default') #\u5982\u679c\u6709\u65b9\u6cd5method\uff0c\u5426\u5219\u6253\u5370\u5176\u5730\u5740\uff0c\u5426\u5219\u6253\u5370default \nprint getattr(a, 'method', 'default')() #\u5982\u679c\u6709\u65b9\u6cd5method\uff0c\u8fd0\u884c\u51fd\u6570\u5e76\u6253\u5370None\u5426\u5219\u6253\u5370default \n\n# 2. hasattr(object, name)\n\n# \u8bf4\u660e\uff1a\u5224\u65ad\u5bf9\u8c61object\u662f\u5426\u5305\u542b\u540d\u4e3aname\u7684\u7279\u6027\uff08hasattr\u662f\u901a\u8fc7\u8c03\u7528getattr(ojbect, name)\u662f\u5426\u629b\u51fa\u5f02\u5e38\u6765\u5b9e\u73b0\u7684\uff09\n\n# 3. setattr(object, name, value)\n\n\u8fd9\u662f\u76f8\u5bf9\u5e94\u7684getattr()\u3002\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61,\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u4efb\u610f\u503c\u3002\u5b57\u7b26\u4e32\u53ef\u80fd\u4f1a\u5217\u51fa\u4e00\u4e2a\u73b0\u6709\u7684\u5c5e\u6027\u6216\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u503c\u8d4b\u7ed9\u5c5e\u6027\u7684\u3002\u8be5\u5bf9\u8c61\u5141\u8bb8\u5b83\u63d0\u4f9b\u3002\u4f8b\u5982,setattr(x,\u201cfoobar\u201d,123)\u76f8\u5f53\u4e8ex.foobar = 123\u3002\n\n# 4. delattr(object, name)\n\n\u4e0esetattr()\u76f8\u5173\u7684\u4e00\u7ec4\u51fd\u6570\u3002\u53c2\u6570\u662f\u7531\u4e00\u4e2a\u5bf9\u8c61(\u8bb0\u4f4fpython\u4e2d\u4e00\u5207\u7686\u662f\u5bf9\u8c61)\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u3002string\u53c2\u6570\u5fc5\u987b\u662f\u5bf9\u8c61\u5c5e\u6027\u540d\u4e4b\u4e00\u3002\u8be5\u51fd\u6570\u5220\u9664\u8be5obj\u7684\u4e00\u4e2a\u7531string\u6307\u5b9a\u7684\u5c5e\u6027\u3002delattr(x, 'foobar')=del x.foobar\n</code></pre></li> </ul> <pre><code>r = hasattr(commons,xxx)\u5224\u65ad\u67d0\u4e2a\u51fd\u6570\u6216\u8005\u53d8\u91cf\u662f\u5426\u5b58\u5728 print(r)\nsetattr(commons,'age',18) \u7ed9commons\u6a21\u5757\u589e\u52a0\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfage = 18\uff0c\u521b\u5efa\u6210\u529f\u8fd4\u56denone setattr(config,'age',lambda a:a+1) //\u7ed9\u6a21\u5757\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\ndelattr(commons,'age')//\u5220\u9664\u6a21\u5757\u4e2d\u67d0\u4e2a\u53d8\u91cf\u6216\u8005\u51fd\u6570\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E6%8D%A2%E8%A1%8C/","title":"Python\u4e2d\u7684\u6362\u884c","text":""},{"location":"python/python%E4%B8%AD%E7%9A%84%E6%8D%A2%E8%A1%8C/#1","title":"1 \u6216\u8005\u4f7f\u7528\\ \u6216\u8005\u4f7f\u7528()","text":"<p>pep8\u89c4\u5b9a\u4e00\u884c\u6700\u591a\u4e0d\u8d85\u8fc779\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u5f53\u4e00\u884c\u4ee3\u7801\u8fc7\u957f\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u6362\u884c\uff0c\u53ef\u4ee5\u901a\u8fc7\\\u6765\u663e\u793a\u7684\u8868\u8fbe\u7eed\u884c\uff0c\u4e5f\u53ef\u4ee5\u7528()\u9690\u5f0f\u7684\u8868\u8fbe\u7eed\u884c\u3002python\u4f1a\u8ba4\u4e3a()\u4e4b\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u5728\u4e00\u884c</p> <pre><code>if (a  True and\n    b  False):\n</code></pre> <p>\u6216\u6709\u660e\u786e\u7684\u6362\u884c\u3002</p> <pre><code>if a  True and \\\n   b  False:\n</code></pre> <pre><code>a = ('1' + '2' + '3' +\n    '4' + '5')\n</code></pre> <p>\u4f7f\u7528\u663e\u5f0f\u6362\u884c\u53ef\u4ee5\u83b7\u5f97\u540c\u6837\u7684\u6548\u679c\u3002</p> <p><pre><code>a = '1' + '2' + '3' + \\\n    '4' + '5'\n</code></pre> \u540c\u6837\u5728\u51fd\u6570\u7684\u53c2\u6570\u4e5f\u662f\u5982\u6b64 <pre><code>class Rectangle(Blob):\n\n  def __init__(self, width, height,\n                color='black', emphasis=None, highlight=0):\n</code></pre></p> <p>\u4f7f\u7528()\u65f6\u53c8\u5206\u4e3a\u9690\u5f0f\u7eed\u884c\u548c\u60ac\u6302\u7eed\u884c\uff1a google\u63a8\u8350\u9690\u5f0f\u7eed\u822a \u9690\u5f0f\u7eed\u884c\uff1a\u5782\u76f4\u5bf9\u9f50\u4e8e\u5706\u62ec\u53f7\u3001\u65b9\u62ec\u53f7\u548c\u82b1\u62ec\u53f7\u3002 <pre><code>foo = long_function_name(var_one, var_two, \n                         var_three, var_four) # \u548c\u5de6\u4fa7\u7684\u5706\u62ec\u53f7\u5bf9\u9f50\n</code></pre> foo = long_function_name(var_one, var_two, var_three, var_four) # \u548c\u5de6\u4fa7\u7684\u5706\u62ec\u53f7\u5bf9\u9f50</p> <p>\u60ac\u6302\u7eed\u884c\uff1a\u7eed\u884c\u591a\u7f29\u8fdb\u4e00\u7ea7\u4ee5\u540c\u5176\u4ed6\u4ee3\u7801\u533a\u522b \u60ac\u6302\u7eed\u884c\u591a\u7f29\u8fdb\u4e86\u4e00\u7ea7\uff0c\u540c\u65f6\u7b2c\u4e00\u884c\u6ca1\u6709\u53c2\u6570</p> <pre><code>def long_function_name(\n        var_one, var_two, var_three,\n        var_four):\n     print(var_one)\n# \u60ac\u6302\u7f29\u8fdb\u9700\u8981\u591a\u7f29\u8fdb\u4e00\u7ea7 # \u533a\u522b\u4e8e\u4e0b\u9762\u7684\nfoo = long_function_name(\n    var_one, var_two, var_three, var_four)\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/","title":"Python\u4e2d\u7684\u88c5\u9970\u5668","text":""},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_1","title":"\u5b9e\u73b0\u539f\u7406","text":""},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_2","title":"\u7b80\u5355\u88c5\u9970\u5668","text":"<pre><code>def my_decorator(func):\n    def wrapper():\n        print(\"\u5728\u51fd\u6570\u6267\u884c\u524d\u505a\u4e00\u4e9b\u4e8b\u60c5\")\n        func()  # \u8c03\u7528\u88ab\u88c5\u9970\u7684\u51fd\u6570\n        print(\"\u5728\u51fd\u6570\u6267\u884c\u540e\u505a\u4e00\u4e9b\u4e8b\u60c5\")\n    return wrapper\n\n@my_decorator  #\u7b49\u4ef7\u4e8e say_hello = my_decorator(say_hello)\ndef say_hello():\n    print(\"Hello!\")\n\n\n\nsay_hello()\n\n## \u8f93\u51fa\n\u5728\u51fd\u6570\u6267\u884c\u524d\u505a\u4e00\u4e9b\u4e8b\u60c5\nHello!\n\u5728\u51fd\u6570\u6267\u884c\u540e\u505a\u4e00\u4e9b\u4e8b\u60c5\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_3","title":"\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668","text":"<pre><code>def repeat(num_times):  # \u5916\u5c42\u51fd\u6570\uff0c\u63a5\u53d7\u88c5\u9970\u5668\u7684\u53c2\u6570\n    def decorator(func):  # \u88c5\u9970\u5668\u51fd\u6570\uff0c\u63a5\u53d7\u88ab\u88c5\u9970\u7684\u51fd\u6570\n        def wrapper(*args, **kwargs):  # \u5185\u90e8\u51fd\u6570\uff0c\u8c03\u7528\u88ab\u88c5\u9970\u7684\u51fd\u6570\n            for _ in range(num_times):\n                result = func(*args, **kwargs)  # \u8c03\u7528\u88ab\u88c5\u9970\u7684\u51fd\u6570\n            return result\n        return wrapper  # \u8fd4\u56de\u5185\u90e8\u51fd\u6570\n    return decorator  # \u8fd4\u56de\u88c5\u9970\u5668\u51fd\u6570\n\n@repeat(num_times=3)  #  \u7b49\u4ef7\u4e8esay_hello = repeat(num_times=3)(say_hello)\ndef say_hello(name):\n    print(f\"Hello, {name}!\")\n\nsay_hello(\"Alice\")\n\n### \u8f93\u51fa\nHello, Alice!\nHello, Alice!\nHello, Alice!\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_4","title":"\u7c7b\u88c5\u9970\u5668","text":"<pre><code>class MyDecorator:\n    def __init__(self, func):  # \u63a5\u53d7\u88ab\u88c5\u9970\u7684\u51fd\u6570\n        self.func = func\n\n    def __call__(self, *args, **kwargs):  # \u8c03\u7528\u88ab\u88c5\u9970\u7684\u51fd\u6570\u65f6\u6267\u884c\n        print(\"\u5728\u51fd\u6570\u6267\u884c\u524d\u505a\u4e00\u4e9b\u4e8b\u60c5\")\n        result = self.func(*args, **kwargs)  # \u8c03\u7528\u88ab\u88c5\u9970\u7684\u51fd\u6570\n        print(\"\u5728\u51fd\u6570\u6267\u884c\u540e\u505a\u4e00\u4e9b\u4e8b\u60c5\")\n        return result\n\n@MyDecorator  # say_hello = MyDecorator(say_hello)\ndef say_hello(name):\n    print(f\"Hello, {name}!\")\n\nsay_hello(\"Bob\")\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/","title":"Python\u4e2d\u7684\u8fed\u4ee3\u5668\u4e0e\u751f\u6210\u5668","text":""},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/#1","title":"1.\u8fed\u4ee3\u5668\u7684\u51e0\u79cd\u65b9\u5f0f","text":""},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/#__iter____next____iter__self","title":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff1a\u7c7b\u4e2d\u5b9e\u73b0__iter__\u548c__next__\u65b9\u6cd5\uff0c\u5176\u4e2d__iter__\u8fd4\u56deself","text":"<pre><code>class MyIterator:\n    def __init__(self, start, end):\n        self.current = start\n        self.end = end\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.current &lt; self.end:\n            self.current += 1\n            return self.current - 1\n        else:\n            raise StopIteration\n\n# \u4f7f\u7528\nmy_iter = MyIterator(1, 5)\nfor num in my_iter:\n    print(num)\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/#_1","title":"\u8fd4\u56de\u5176\u4ed6\u8fed\u4ee3\u5668","text":"<pre><code># \u5b9a\u4e49\u4e00\u4e2a\u751f\u6210\u5668\u7c7b\nclass MyGenerator:\n    def __init__(self, start, end):\n        self.current = start\n        self.end = end\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.current &lt; self.end:\n            self.current += 1\n            return self.current - 1\n        else:\n            raise StopIteration\n\n# \u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u5176 __iter__ \u65b9\u6cd5\u8fd4\u56de MyGenerator \u7684\u5b9e\u4f8b\nclass MyIterable:\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\n    def __iter__(self):\n        # \u8fd4\u56de MyGenerator \u7684\u5b9e\u4f8b\n        return MyGenerator(self.start, self.end)\n\n# \u4f7f\u7528\nobj = MyIterable(1, 5)\nfor num in obj:\n    print(num)\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/#_2","title":"\u8fd4\u56de\u751f\u6210\u5668","text":"<pre><code># \u5b9a\u4e49\u4e24\u4e2a\u751f\u6210\u5668\u7c7b\nclass EvenGenerator:\n    def __init__(self, limit):\n        self.current = 0\n        self.limit = limit\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.current &lt; self.limit:\n            value = self.current\n            self.current += 2\n            return value\n        else:\n            raise StopIteration\n\nclass OddGenerator:\n    def __init__(self, limit):\n        self.current = 1\n        self.limit = limit\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.current &lt; self.limit:\n            value = self.current\n            self.current += 2\n            return value\n        else:\n            raise StopIteration\n\n# \u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u5176 __iter__ \u65b9\u6cd5\u52a8\u6001\u8fd4\u56de\u751f\u6210\u5668\u7c7b\u5b9e\u4f8b\nclass DynamicIterable:\n    def __init__(self, mode, limit):\n        self.mode = mode\n        self.limit = limit\n\n    def __iter__(self):\n        if self.mode == \"even\":\n            return EvenGenerator(self.limit)\n        elif self.mode == \"odd\":\n            return OddGenerator(self.limit)\n        else:\n            raise ValueError(\"Invalid mode\")\n\n# \u4f7f\u7528\neven_iter = DynamicIterable(\"even\", 10)\nprint(\"Even numbers:\")\nfor num in even_iter:\n    print(num)\n\nodd_iter = DynamicIterable(\"odd\", 10)\nprint(\"Odd numbers:\")\nfor num in odd_iter:\n    print(num)\n</code></pre>"},{"location":"python/python%E4%B8%AD%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/#_3","title":"\u8fd4\u56de\u751f\u6210\u5668","text":"<pre><code>class DynamicIterable:\n    def __init__(self, mode):\n        self.mode = mode\n\n    def __iter__(self):\n        if self.mode == \"even\":\n            return self.even_generator()\n        elif self.mode == \"odd\":\n            return self.odd_generator()\n        else:\n            return self.default_generator()\n\n    def even_generator(self):\n        for i in range(0, 10, 2):\n            yield i\n\n    def odd_generator(self):\n        for i in range(1, 10, 2):\n            yield i\n\n    def default_generator(self):\n        for i in range(10):\n            yield i\n\n# \u4f7f\u7528\neven_iter = DynamicIterable(\"even\")\nprint(\"Even numbers:\")\nfor num in even_iter:\n    print(num)\n\nodd_iter = DynamicIterable(\"odd\")\nprint(\"Odd numbers:\")\nfor num in odd_iter:\n    print(num)\n</code></pre>"},{"location":"python/python%E7%9A%84%E5%9D%91/","title":"Python\u7684\u5751","text":""},{"location":"python/python%E7%9A%84%E5%9D%91/#1-pythonpy__init__py","title":"1. python\u7684\u5305\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5305\u540d\uff08\u6587\u4ef6\u5939\u540d\uff09\u4e0d\u80fd\u548c\u5185\u90e8\u7684.py\u6587\u4ef6\u540d\u76f8\u540c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e00\u822c\u7528__init__.py\u6587\u4ef6\u653e\u5230\u6587\u4ef6\u5939\u4e0b\uff0c\u6765\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5305","text":""},{"location":"python/python%E7%9A%84%E5%9D%91/#2-pythonsysvscodepylance","title":"2. python\u4e2d\u53ef\u4ee5\u7528sys\u6765\u5f15\u5165\u5176\u4ed6\u5305\uff0c\u5bf9\u4e8e\u6ca1\u6709\u81ea\u52a8\u8865\u5168\u7684\u95ee\u9898\uff0c\u9700\u8981\u8c03vscode\u7684pylance\u63d2\u4ef6\u7684","text":""},{"location":"python/python%E7%9A%84%E5%9D%91/#3-pythontyping","title":"3. python\u4e2dtyping\u6a21\u5757\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u6a21\u5757","text":"<p>List\u548cTuple\u662f\u7ecf\u5e38\u7528\u7684\u4e24\u4e2a\u96c6\u5408\uff0c\u6b64\u5916\u8fd8\u6709Union </p>"},{"location":"python/python%E7%9A%84%E5%9D%91/#4-python","title":"4. python\u4e2d\u7684\u8def\u5f84\u5173\u7cfb\u5168\u89e3","text":""},{"location":"python/python%E7%9A%84%E5%9D%91/#41-pythonsyspathlistlistpythonlist","title":"4.1 python\u4e2d\u7684\u80fd\u591f\u8bfb\u5230\u7684\u73af\u5883\u53d8\u91cf\u90fd\u5b58\u5728sys.path\u8fd9\u4e2alist\u4e2d\uff0c\u8fd9\u4e2alist\u4f1a\u9ed8\u8ba4\u628apython\u6267\u884c\u7684\u4e3b\u6587\u4ef6\u6240\u5728\u8def\u5f84\u52a0\u5165\u8fdb\u53bb\uff0c\u4e14\u8be5list\u662f\u5168\u5c40\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5728\u4e3b\u6587\u4ef6\u8c03\u7528\u7684\u4efb\u4f55\u6587\u4ef6\u4e2d\u6253\u5370\uff0c\u90fd\u662f\u540c\u4e00\u4e2a\u503c\u3002","text":""},{"location":"python/python%E7%9A%84%E5%9D%91/#42-pythonaaaaadir_testdir_testpythonmainpyaaa1pyfrom-bb1dir_testmainpy","title":"4.2 python\u5728\u8fdb\u884c\u76f8\u5bf9\u5bfc\u5165\u65f6\uff0c.\u4ee3\u8868\u5f53\u524d\u6240\u5728\u6587\u4ef6\u7684\u8def\u5f84\uff08AAA\uff09\uff0c..\u4ee3\u8868\u4e0a\u4e00\u8def\u5f84(AA)\uff0c\u6ce8\u610f\u76f8\u5bf9\u5bfc\u5165\u6700\u9ad8\u5230\u9876\u7ea7\u5305\uff08\u5373dir_test\uff09\uff0c\u4e14\u4e0d\u5305\u542bdir_test\uff0c\u9876\u7ea7\u5305\u5c31\u662fpython\u4e3b\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u5373main.py\u6240\u5728\u7684\u8def\u5f84\u3002\u56e0\u6b64\u5728AAA1.py\u4e2dfrom ....B.B1\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a....\u4e3adir_test\u8def\u5f84\uff0c\u662fmain.py\u6240\u5728\u8def\u5f84\uff0c\u4e5f\u662f\u9876\u7ea7\u5305\u7684\u8def\u5f84\u3002","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bayes%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/","title":"Bayes\u7684\u4e00\u4e9b\u7406\u89e3","text":"<p>\u5bf9\u4e0eBayes\u6a21\u578b\u6765\u8bf4</p> <p>\u540e\u9a8c=\u5148\u9a8c*\u4f3c\u7136\u00a0 \u00a0\uff0c\u4f3c\u7136\u6982\u7387\u53ef\u4ee5\u62bd\u8c61\u6210\u662f\u4e00\u4e2a\u7279\u5f81\u63d0\u53d6\u7684\u8fc7\u7a0b\uff0c\u5373\u6bcf\u4e00\u7c7b\u7684\u6570\u636e\u7684\u7279\u5f81\u662f\u4ec0\u4e48\u6837\u7684 </p> <p>\u7ea2\u7ebf\u7684\u9519\u8bef\u7387\u6700\u5c0f\uff0c\u53d6\u7ea2\u7ebf\u65f6\u5c31\u53eb\u8d1d\u53f6\u65af\u5224\u522b\uff0c\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u91c7\u7528\u8d1d\u53f6\u65af\u6765\u5212\u5206\uff08\u5373\u7ea2\u7ebf\uff09\uff0c\u90a3\u4e48\u9519\u8bef\u7387\u4e3a\u5c0f\u5c71\u5cf0\uff0c\u5982\u679c\u91c7\u7528\u5176\u4ed6\u5206\u7c7b\u5668\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u9519\u8bef\u7387\u4e3a\u5c0f\u5c71\u5cf0\u52a0\u4e0a\u4e00\u5757\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u8d1d\u53f6\u65af\u5224\u522b\u6bd4\u522b\u7684\u5224\u522b\u5668\u9519\u8bef\u7387\u90fd\u8981\u4f4e\u3002</p> <p></p> <p>\u6837\u672c\u6bd4\u8f83\u5c11\u65f6\uff0c\u53ef\u4ee5\u5047\u8bbe\u4e00\u79cd\u5206\u5e03\uff08\u9ad8\u65af\u5206\u5e03\uff09\u6765\u751f\u6210\u4e00\u4e9b\u6570\u636e\uff0c\u589e\u52a0\u6570\u636e\u540e\u5728\u91c7\u7528\u4e00\u4e9b\u522b\u7684\u5224\u522b\u65b9\u6cd5</p> <p>bayes\u5224\u522b\u4e0e\u6700\u5c0f\u6b27\u5f0f\u5224\u522b\u5728bayes\u5047\u8bbe\u9ad8\u65af\u540c\u65b9\u5dee\u7684\uff0c\u5f62\u5f0f\u662f\u4e00\u6837\u7684\u3002\u5f53\u5148\u9a8c\u6982\u7387\u4e0d\u540c\u65f6\uff0c\u5224\u522b\u754c\u9762\u65b9\u5411\u4e0d\u53d8\uff0c\u4f46\u662f\u4f1a\u5411\u5148\u9a8c\u5927\u7684\u5730\u65b9\u504f\u79fb </p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/","title":"Bevformer","text":"<p>bevformer\u7684\u663e\u5b58\u6700\u5c11\u9700\u898124G\uff08\u8bba\u6587\u91cc\u7ed9\u51fa\u7684\u662f20G\uff09 bevformer\u662f\u7279\u5f81\u63d0\u53d6\uff0c\u6700\u540e\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u7279\u5f81\u56fe\u3002\u8fd9\u4e2a\u7279\u5f81\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\u7ed9\u5bf9\u5e94\u7684BEV 3D\u7684\u68c0\u6d4b\u5934\u53bb\u8f93\u51fa3D\u7684\u76ee\u6807\u6846\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#1","title":"1.\u8f93\u5165\u6570\u636e\u683c\u5f0f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#2","title":"2.\u53ef\u53d8\u6027\u6ce8\u610f\u529b\u673a\u5236","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#3","title":"3.\u6d41\u7a0b","text":"<p>\u5148\u65f6\u95f4attention\uff0c\u518d\u7a7a\u95f4attention\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u90fd\u662f\u4e00\u4e2a\u5411\u91cf\u3002\u6574\u4e2abev\u662f\u4e00\u4e2a\u7279\u5f81\u56fe\u3002 \u4e00\u822cbev\u683c\u5b50\u7684\u5927\u5c0f\u662f200\u00d7200\uff0c\u5206\u8fa8\u7387\u662f1m\uff0cbev\u7684\u4e2d\u5fc3\u662f\u81ea\u8f66\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#4","title":"4 \u8bad\u7ec3\u65f6\u95f4","text":"<p>BEVFormer Base \u6a21\u578b\u9700\u8981\u6bcf\u5f20 GPU \u4e0a 28G \u7684\u663e\u5b58\uff0c\u5728\u5355\u5f20 A100 \u4e0a\u8bad\u7ec3\u5b8c\u6210\uff0824 \u4e2a epoch\uff09\u9700\u8981\u5927\u7ea6 14 \u5929\u7684\u65f6\u95f4\uff0c\u5728 8 \u5f20 A100 \u4e0a\u8bad\u7ec3\u5b8c\u6210\u9700\u8981\u63a5\u8fd1 2 \u5929\u7684\u65f6\u95f4\u3002 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#5","title":"5 \u5b89\u88c5","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#1-mmdection3dcuda-home","title":"1 \u7f16\u8bd1mmdection3d\u627e\u4e0d\u5230cuda home","text":"<p>\u8bf4\u660e\u4e3b\u673a\u6ca1\u6709\u5b89\u88c5cuda\uff0c\u53bbcuda\u5b98\u7f51 \u5b89\u88c511.1 \u7248\u672c\uff08\u5355\u72ectorch\u662f\u4e0d\u9700\u8981\u5b89\u88c5cuda\u7684\uff0c\u56e0\u4e3atorch\u7684cuda\u7248\u672c\u5df2\u7ecf\u96c6\u6210\u597d\u4e86\u4e8c\u8fdb\u5236\u7684cuda\uff0c\u4f46\u662fmmdet3d\u9700\u8981cuda\u6765\u7f16\u8bd1\uff0c\u6240\u4ee5\u8fd8\u662f\u9700\u8981\u5b89\u88c5cuda\u7684\uff0c\u5f88\u5751\u7239\uff01\uff01\uff01\uff09\uff1a</p> <p>https://developer.nvidia.com/cuda-toolkit-archive</p> <p></p> <p>\u5b89\u88c5\u540e <pre><code>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\nexport PATH=$PATH:/usr/local/cuda/bin\nexport CUDA_HOME=/usr/local/cuda\n</code></pre></p> <p>\u591a\u7248\u672c\u5207\u6362\uff1a <pre><code># \u8f6f\u94fe\u63a5\u65b9\u5f0f\n$ ls -lh /usr/local\nlrwxrwxrwx  1 root root   19 Jul 15  2018 cuda -&gt; /usr/local/cuda-10.1/\ndrwxr-xr-x 19 root root 4.0K Jun  5  2019 cuda-10.0/\ndrwxr-xr-x 14 root root 4.0K Sep 21 22:54 cuda-10.1/\n......\n\n# \u9700\u8981\u5207\u6362\u7248\u672c\u65f6\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\n$ sudo rm -rf /usr/local/cuda\n$ sudo ln -s /usr/local/cuda-10.0 /usr/local/cuda\n</code></pre></p> <p>\u4e3a\u4e86\u786e\u8ba4\uff0c\u9700\u8981\u67e5\u770b\u4e00\u4e0b\u8f6f\u8fde\u63a5</p> <p></p> <pre><code>source ~/.zshrc\n</code></pre> <p>\u5176\u5b9e\u4e0d\u9700\u8981sudo ldconfig\uff1a </p> <p>LD_LIBRARY_PATH\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e/etc/ld.so.conf.d\uff0cldconfig\u547d\u4ee4\u53ea\u4f1a\u5f71\u54cdld.so.conf.d\uff0c\u4e0eLD_LIBRARY_PATH\u65e0\u5173\u3002 </p> <p>\u68c0\u9a8c\u5b89\u88c5\u7684\u7248\u672c\u662f\u5426\u6b63\u786e</p> <pre><code>nvcc -V\n</code></pre> <p>note:\u4e0d\u8981\u4ececonda\u4e2d\u5b89\u88c5cuda\uff0c\u4e0d\u7ba1\u9009\u4ec0\u4e48\u7248\u672c\uff0cconda\u90fd\u4f1a\u5b89\u88c512.4\u5f88\u5751</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#2_1","title":"2\u5305\u4f9d\u8d56\u95ee\u9898","text":"<p>\u4ece\u6e90\u7801\u7f16\u8bd1mmdection3d(0.17.1)\u65f6\u4f1a\u62a5\u9519\uff0c\u539f\u56e0\u662fmmdection\u91cc\u8fb9\u7684\u5e93\u5f88\u591a\u90fd\u6ca1\u6709\u6307\u5b9a\u7248\u672c\u3002</p> <p>\u4f9d\u6b21\u4f1a\u9047\u5230\uff1a</p> <p> pip install scikit-image==0.19.0</p> <p></p> <p>pip install networks == 2.2</p> <p></p> <p>pip install numba==0.48.0</p> <p>pip install nuscenes-devkit==1.1.10</p> <p>pip install numpy==1.19.5  :\u6838\u5fc3\u4fdd\u8bc1\uff0c\u6700\u540e\u7684\u7248\u672c\u4e00\u5b9a\u8981\u662f1.19.5</p> <p>pip install matplotlib==3.5.2</p> <p>pip install pandas==1.0.1</p> <p>pip install plyfile==0.7.3</p> <p>pip install typing-extensions==4.10.0</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Bevformer/#vscode","title":"vscode\u672c\u5730\u8c03\u8bd5","text":"<p>\u591a\u5361\uff1a</p> <p>VS Code \u8c03\u8bd5\u7a0b\u5e8f \u2014 mmengine 0.8.4 \u6587\u6863</p> <p>\u5355\u5361\uff1a \u627e\u5230train.py</p> <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Python \u8c03\u8bd5\u7a0b\u5e8f: \u5305\u542b\u53c2\u6570\u7684\u5f53\u524d\u6587\u4ef6\",\n            \"type\": \"debugpy\",\n            \"request\": \"launch\",\n            \"program\": \"/home/hanshuo/BEVFormer/tools/train.py\",\n            \"console\": \"integratedTerminal\",\n            \"args\": [\n                \"/home/hanshuo/BEVFormer/projects/configs/bevformer/bevformer_tiny.py\"\n            ]\n\n        }\n    ]\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/HMM%E7%9A%84%E4%B8%8D%E8%B6%B3%E5%92%8CCRF%E7%9A%84%E4%BC%98%E5%8A%BF/","title":"HMM\u7684\u4e0d\u8db3\u548cCRF\u7684\u4f18\u52bf","text":"<p>HMM\u9002\u7528\u4e8e\u6570\u636e\u91cf\u8f83\u5c11\u7684\u60c5\u5f62\uff0c\u53ef\u4ee5\u8111\u90e8\u4e00\u4e9b\u6570\u636e\u51fa\u6765\u3002\uff08\u8fd9\u662f\u56e0\u4e3aHMM\u5047\u8bbetansition probability\u548cemission probability\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff09</p> <p></p> <p>CRF\u4e5f\u5047\u8bbetansition probability\u548cemission probability\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6a21\u578b\u548cHMM\u4e00\u6837\uff0c\u4f46\u662f\u53ef\u4ee5\u89e3\u51b3HMM\u7684\u4e0a\u8ff0\u95ee\u9898</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Matlab%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3/","title":"Matlab\u7684\u5f00\u6e90\u66ff\u4ee3","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Matlab%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3/#1-scilabsimulinkxcos","title":"1. SCILAB(\u5305\u62ecsimulink\uff0cXcos)","text":"<p>SCILAB \u662f\u4e00\u6b3e\u4e0e MATLAB \u7c7b\u4f3c\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u5b9e\u73b0 MATLAB \u4e0a\u6240\u6709\u57fa\u672c\u7684\u529f\u80fd\uff0c\u5982\u79d1\u5b66\u8ba1\u7b97\u3001\u77e9\u9635\u5904\u7406\u53ca\u56fe\u5f62\u663e\u793a\u7b49\u3002</p> <p>\u7531\u4e8e SCILAB \u7684\u8bed\u6cd5\u4e0e MATLAB \u975e\u5e38\u63a5\u8fd1\uff0c\u719f\u6089 MATLAB \u7f16\u7a0b\u7684\u4eba\u5f88\u5feb\u5c31\u4f1a\u638c\u63e1 SCILAB \u7684\u4f7f\u7528\u3002\u6709\u610f\u601d\u7684\u662f\uff0cSCILAB \u63d0\u4f9b\u7684\u8bed\u8a00\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u81ea\u52a8\u5c06\u7528 MATLAB \u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a SCILAB \u8bed\u8a00\u3002\u76ee\u524d\uff0cSCILAB \u53ef\u5728 Linux\u3001Windows \u548c Mac OS \u5168 PC \u5e73\u53f0\u8fd0\u884c\u3002</p> <p>\u4f5c\u4e3a\u5f00\u653e\u6e90\u7801\u7684\u8f6f\u4ef6\uff0cSCILAB \u9075\u5faa GPL 2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u6e90\u4ee3\u7801\u3001\u7528\u6237\u624b\u518c\u53ca\u4e8c\u8fdb\u5236\u7684\u53ef\u6267\u884c\u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b98\u7f51\u514d\u8d39\u76f4\u63a5\u4e0b\u8f7d\u4f7f\u7528\u3002\u7528\u6237\u4e0d\u4ec5\u53ef\u4ee5\u5728 SCILAB \u7684\u8bb8\u53ef\u8bc1\u6761\u4ef6\u4e0b\u81ea\u7531\u4f7f\u7528\u8be5\u8f6f\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u9700\u8981\u4fee\u6539\u6e90\u4ee3\u7801\u3002</p> <p>\u66f4\u91cd\u8981\u7684\u662fSCILAB \u662f\u7531\u6cd5\u56fd\u56fd\u5bb6\u4fe1\u606f\u3001\u81ea\u52a8\u5316\u7814\u7a76\u9662\u7684\u79d1\u5b66\u5bb6\u4eec\u5f00\u53d1\u7684\u201c\u5f00\u653e\u6e90\u7801\u201d\u8f6f\u4ef6\uff0c\u548c\u7f8e\u56fd\u6ca1\u6709\u5173\u7cfb\uff01</p> <p>\u6b64\u5916\u6700\u5173\u952e\u7684\u662fSCILAB\u4e5f\u4e00\u4e2a\u6709\u7c7b\u4f3c MATLAB simulink\u7684\u5de5\u5177Xcos\uff01simulink\u80fd\u505a\u7684Xcos\u4e5f\u53ef\u4ee5\u5b8c\u6210\uff0c\u5e76\u4e14\u754c\u9762\u548c\u4f7f\u7528\u4e5f\u5f88\u7c7b\u4f3c\uff01\u5f88\u591a\u7f51\u53cb\u62c5\u5fc3\u7684simulink\u65e0\u6cd5\u66ff\u4ee3\u95ee\u9898\u8fce\u5203\u800c\u89e3\uff01 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Matlab%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3/#2-octavesimulink","title":"2. Octave\uff08\u6ca1\u6709simulink\uff09","text":"<p>\u5982\u679c\u5df2\u7ecf\u5bf9MATLAB\u8bed\u8a00\u975e\u5e38\u719f\u6089\uff0c\u6682\u65f6\u4e0d\u60f3\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u8bed\u8a00\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0bOctave\u3002Octave\u662fGNU\u9879\u76ee\u6210\u5458\u4e4b\u4e00\uff0c\u63d0\u4f9b\u4e86\u4e0eMATLAB\u8bed\u6cd5\u517c\u5bb9\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u79d1\u5b66\u8ba1\u7b97\u53ca\u6570\u503c\u5206\u6790\u7684\u5de5\u5177\u3002</p> <p>Octave \u662f\u4e00\u4e2a\u7c7b\u4f3c MATLAB \u548c Scilab \u7684\u6570\u5b66\u8f6f\u4ef6\u5305\uff0c\u53ef\u4ee5\u8fdb\u884c\u5404\u79cd\u8fd0\u7b97\uff0c\u7f16\u7a0b\u3002\u5b83\u8fd8\u6709\u4e30\u5bcc\u7684 C++ \u63a5\u53e3\u53ef\u4ee5\u8ba9\u7528\u6237\u7f16\u7a0b\u65f6\u8c03\u7528\u3002\u5176\u914d\u5957\u7684\u7ed8\u56fe\u5de5\u5177\u91c7\u7528\u00a0gnuplot\u00a0\u3002Octave \u7684\u4f7f\u7528\u4e5f\u662f\u57fa\u4e8e\u5b57\u7b26\u7ec8\u7aef\u6a21\u5f0f\u7684\uff0c\u5f53\u9700\u8981\u7ed8\u56fe\u65f6\uff0c\u5c06\u4f1a\u8c03\u7528 gnuplot \u8fdb\u884c\u6570\u636e\u7ed8\u56fe\uff0c\u5e76\u663e\u793a\u51fa\u6765\u3002</p> <p>Octave \u662f\u7528 C++ \u7f16\u5199\u7684\uff0c\u5b83\u5185\u5bb9\u4e30\u5bcc\u7684\u5e93\u4e5f\u53ef\u4ee5\u4f9b\u7528\u6237\u5728\u7f16\u5199\u8f6f\u4ef6\u65f6\u8c03\u7528\u3002Octave \u540c\u65f6\u8fd8\u652f\u6301 Fortran \u7b49\u7684\u8c03\u7528\uff0cGSL \u7ed1\u5b9a\u7b49\u3002\u53ef\u4ee5\u7531\u7528\u6237\u5b9a\u5236\u81ea\u5df1\u7684\u51fd\u6570\u3001\u5b50\u7a0b\u5e8f\u7b49\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Matlab%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3/#3simupypythonsimulink","title":"3.simupy\uff08python\u4e2d\u6a21\u4effsimulink\u7684\u5de5\u5177\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Obsidian%E9%85%8D%E7%BD%AE/","title":"Obsidian\u914d\u7f6e","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Obsidian%E9%85%8D%E7%BD%AE/#1","title":"1 \u63d2\u4ef6","text":"<ul> <li>remotely save\uff08\u7528\u6765\u540c\u6b65\u7b14\u8bb0\uff09\uff0c\u53ef\u4ee5\u7528GitHub\u4ee3\u66ff</li> <li>attachment name formating\uff1a\u7528\u6765\u91cd\u547d\u540d\u56fe\u7247\u540d\u79f0</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Obsidian%E9%85%8D%E7%BD%AE/#2","title":"2\u8bbe\u7f6e","text":"<p>\u4fdd\u8bc1\u56fe\u7247\u7684\u76f8\u5bf9\u8def\u5f84 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%EF%BC%88carla%EF%BC%89/","title":"Openpilot\u672c\u5730\u90e8\u7f72\uff08carla\uff09","text":"<p>\u53c2\u8003\u5b98\u65b9\u6587\u6863</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%EF%BC%88carla%EF%BC%89/#1","title":"1 \u6d4b\u8bd5\u7cfb\u7edf","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%EF%BC%88carla%EF%BC%89/#_1","title":"\u8f6f\u4ef6","text":"<ul> <li>ubuntu 20.04</li> <li>docker 24.0</li> <li>carla 0.9.13</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%EF%BC%88carla%EF%BC%89/#_2","title":"\u786c\u4ef6","text":"<ul> <li>i7-10700</li> <li>nvidia rtx2060</li> <li>500G\u56fa\u6001</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%EF%BC%88carla%EF%BC%89/#2","title":"2\u6b65\u9aa4","text":"<ol> <li> <p>openpilot clone\u5230\u672c\u5730 <pre><code>git clone https://github.com/commaai/openpilot.git --depth=1\ngit submodule update --init --recursive\n</code></pre></p> </li> <li> <p>\u5b89\u88c5\u5e76\u542f\u52a8carla0.9.13\u955c\u50cf\uff08\u53ef\u9009\uff0c\u53ef\u4ee5\u7528\u672c\u5730\u76840.9.13\uff09 <pre><code>\u8fdb\u5165\u5230openpilot\u76ee\u5f55\u4e0b\u7684your_openpilot_path/tools/sim\ncd your_openpilot_path/tools/sim\n./start_carla.sh\uff08\u7528\u8be5\u811a\u672c\u542f\u52a8\u7684carla\u662f\u4e0d\u663e\u793a\u754c\u9762\u7684\uff0c\u53ef\u4ee5\u7528nvidia-smi\u67e5\u770b\u663e\u5b58\u5224\u65ad\u662f\u5426\u542f\u52a8\u4e86calra\uff09\n</code></pre></p> </li> <li> <p>\u5b89\u88c5\u5e76\u542f\u52a8openpilot\u955c\u50cf\uff0c\u8fdb\u5165\u5230openpilot\u76ee\u5f55\u4e0b\u7684your_openpilot_path/tools/sim\uff08\u4e5f\u53ef\u4ee5\u7528\u672c\u5730\u7684openpilot\uff0c\u542f\u52a8./launch_openpilot.sh\u548c./bridge.py\uff09 <pre><code>cd your_openpilot_path/tools/sim\n./start_openpilot_docker.sh\uff08\u76f8\u5f53\u4e8e\u5728docker\u4e2d\u542f\u52a8\u4e86./launch_openpilot.sh\u548c./bridge.py\uff09\n</code></pre></p> </li> <li> <p>\u6b64\u65f6\u4f1a\u663e\u793aopenpilot\u7684\u754c\u9762\uff0c\u63092\u662f\u5f00\u542fopenpilot\uff0c\u63091\u662f\u589e\u52a0\u5de1\u822a\u901f\u5ea6\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\u3002</p> </li> </ol>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/","title":"Openpilot\u6a21\u578b\u89e3\u6790","text":"<p>openpilot\u6a21\u578b\u89e3\u6790 https://blog.csdn.net/CV_Autobot/article/details/129036228</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#_1","title":"\u6574\u4f53\u6d41\u7a0b","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#2","title":"2\u6d41\u7a0b\u8be6\u89e3","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#21","title":"2.1 \u56fe\u50cf\u91c7\u96c6","text":"<p> comma 3\u8bbe\u5907\u4e0a\u76842\u9897\u524d\u89c6\u6444\u50cf\u5934\uff0cFOV\u4e0d\u540c\uff0c1\u9897\u540e\u89c6\u6444\u50cf\u5934 \u524d\u540e\u7684\u4e24\u9897\u8d85\u5e7f\u89d2\u6444\u50cf\u5934\u578b\u53f7\u662f\u4e00\u6837\u7684\uff0cFOV\u90fd\u4e3a185\u5ea6\uff0c\u53ef\u4ee5\u5f62\u6210360\u5ea6\u73af\u89c6\u3002</p> <p></p> <p>\u540c\u4e00\u65f6\u523b\uff0c2\u9897\u524d\u89c6\u6444\u50cf\u5934\u62cd\u6444\u7684\u753b\u9762  \u540e\u89c6\u8d85\u5e7f\u89d2\u6444\u50cf\u5934\u62cd\u6444\u7684\u753b\u9762\uff0c\u4ee5\u53ca\u5bf9\u4ed6\u7684\u8bed\u4e49\u5206\u5272\u6807\u6ce8</p> <p>camerad\u4f1a\u4ee520 FPS\u7684\u9891\u7387\u4ece\u524d\u89c6\u6444\u50cf\u5934\u4e0d\u65ad\u91c7\u96c6\u56fe\u50cf\uff0c\u518d\u4f7f\u7528opencl\u628aRGB\u8f6c\u5316\u6210YUV420\u683c\u5f0f\uff0c\u518d\u901a\u8fc7VisionIPC\u7684\u5171\u4eab\u5185\u5b58\u673a\u5236\u628a\u56fe\u50cf\u9001\u5230\u6a21\u578b\u63a8\u7406\u6a21\u5757http://modeld.cc\u3002</p> <ul> <li> <p>\u4e24\u9897\u524d\u89c6\u6444\u50cf\u5934\uff0c\u5b83\u4eec\u7684FOV\u4e0d\u540c\uff0c\u4ece\u4e0d\u540c\u5c3a\u5ea6\u7ed9supercombo\u6a21\u578b\u63d0\u4f9b\u5185\u5bb9\u6765\u9884\u6d4b\u540e\u7eed\u7684\u8f68\u8ff9\u89c4\u5212\u548c\u8f66\u8eab\u59ff\u6001\u7b49\u4fe1\u606f\u3002</p> </li> <li> <p>\u4e00\u9897\u540e\u89c6\u8d85\u5e7f\u89d2\u6444\u50cf\u5934\uff0c\u76ee\u524d\u53ea\u7528\u6765\u76d1\u63a7\u53f8\u673a\u7684\u6ce8\u610f\u529b\u662f\u5426\u53ef\u4ee5\u968f\u65f6\u63a5\u7ba1\u8f66\u8f86\u63a7\u5236\uff0c\u4f46\u901a\u8fc7comma.ai\u4f17\u5305\u7684\u6807\u6ce8\u6570\u636e\u6765\u770b\uff0c\u672a\u6765\u53ef\u80fd\u4f1a\u4f7f\u7528\u5176\u62cd\u6444\u7684\u8f66\u7a97\u5916\u4fa7\u7684\u5185\u5bb9\u8f85\u52a9\u8f68\u8ff9\u89c4\u5212\uff0c\u5982\u589e\u52a0\u4e86\u5e76\u7ebf\u65f6\u5bf9\u4fa7\u540e\u65b9\u8f66\u8f86\u7684\u5224\u65ad\u3002</p> </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#22","title":"2.2 \u6a21\u578b\u5904\u7406","text":"<p>modeld\u8fdb\u7a0b\u5728\u8bfb\u53d6\u5230VisionIPC\u53d1\u6765\u7684\u65b0\u56fe\u50cf\u540e\uff0c\u4f1a\u4f7f\u7528\u76f8\u673a\u7684\u5916\u53c2\u3001\u5185\u53c2\u7b49\u4fe1\u606f\u5bf9\u56fe\u50cf\u8fdb\u884c\u77eb\u6b63\uff0c\u8fd8\u4f1a\u8fdb\u884c\u5f52\u4e00\u5316\u7b49\u6570\u636e\u5904\u7406\uff0c\u8fd9\u4e2a\u9884\u5904\u7406\u6d41\u7a0b\u6838\u5fc3\u90e8\u5206\u91c7\u7528opencl\u6765\u52a0\u901f\u3002 \u63a5\u4e0b\u6765\uff0c\u9884\u5904\u7406\u540e\u7684\u7ed3\u679c\u88ab\u9001\u5165supercombo\u6a21\u578b\u63a8\u7406\uff0c\u4ea7\u751f\u7684\u63a8\u7406\u7ed3\u679c\u4e2d\u4e0e\u540e\u7eed\u7684\u7eb5\u5411\u63a7\u5236\u6d41\u7a0b\u76f8\u5173\u7684\u90e8\u5206\u662f\uff1a - \u8f68\u8ff9\u89c4\u5212\u7684\u7ed3\u679cplans\uff0c\u5176\u4e2d\u6bcf\u6761\u8f68\u8ff9\u542b\u6709\u672a\u6765\u4e00\u6bb5\u65f6\u95f433\u4e2a\u8f68\u8ff9\u70b9\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u3001\u6a2a\u6446\u89d2\u3001\u6a2a\u6446\u89d2\u53d8\u5316\u7387\u7b49\u4fe1\u606f\u3002 - \u524d\u8f66\u4fe1\u606fleads\uff0c\u524d\u65b9\u82e5\u5e72\u8f66\u8f86\u7684\u76f8\u5bf9\u901f\u5ea6\u3001\u76f8\u5bf9\u8ddd\u79bb\u7b49\u4fe1\u606f\u3002\uff08\u540e\u7eed\u4f1a\u4e0e\u96f7\u8fbe\u6570\u636e\u8fdb\u884c\u878d\u5408\uff09 - \u8f66\u8f86\u59ff\u6001temporal_pose\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u81ea\u8f66\u7684\u901f\u5ea6\u548c\u6b27\u62c9\u89d2\u65cb\u8f6c\u901f\u5ea6\u7684\u4f30\u8ba1\u503c\uff0c\u4f5c\u7528\u548c\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7c7b\u4f3c\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#23","title":"2.3 \u96f7\u8fbe","text":"<p>openpilot\u5728\u7eb5\u5411\u63a7\u5236\u6d41\u7a0b\u4e2d\uff0c\u9700\u8981\u7528\u5230\u8f66\u8f7dACC\u96f7\u8fbe\u7684\u611f\u77e5\u4fe1\u606f\uff0c\u867d\u7136\u5176\u5c06\u6765\u7684\u76ee\u6807\u662f\u5b8c\u5168\u4f7f\u7528\u89c6\u89c9\u4fe1\u606f\u8fdb\u884c\u7aef\u5230\u7aef\u7684\u89c4\u5212\uff0c\u4f46\u76ee\u524d\u9636\u6bb5\u8fd8\u662f\u5c06\u539f\u8f66\u81ea\u5e26\u7684ACC\u96f7\u8fbe\u4fe1\u606f\u4e0e\u57fa\u4e8e\u89c6\u89c9\u5224\u65ad\u7684\u524d\u8f66\u4fe1\u606f\u8fdb\u884c\u4e86\u878d\u5408\u540e\u518d\u8fdb\u884c\u7eb5\u5411\u63a7\u5236\u3002</p> <p>openpilot\u9002\u914d\u7684\u6bcf\u79cd\u54c1\u724c\u8f66\u8f86\uff0c\u5728selfdrive/car/XXX/radar_interface.py\u6587\u4ef6\u4e2d\u5b9e\u73b0\u4e86\u8f66\u8f7dACC\u96f7\u8fbe\u6570\u636e\u7684\u83b7\u53d6\u51fd\u6570\u3002\u5982\u4e0b\u56fe\u5c55\u793a\u4e86\u201c\u73b0\u4ee3\u201d\u6c7d\u8f66\u7684\u5b9e\u73b0\uff0c\u628aCAN\u6d88\u606f\u5982\uff0c\u96f7\u8fbe\u7684\u65b9\u4f4d\u89d2(azimuth)\u3001\u76f8\u5bf9\u8ddd\u79bb\u3001\u76f8\u5bf9\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u539f\u59cb\u4fe1\u606f\uff0c\u5904\u7406\u6210\u7b26\u5408radard\u540e\u7eed\u8981\u6c42\u7684\u65b9\u5f0f\u3002\u65b9\u4f4d\u89d2\u4e0d\u518d\u88ab\u9700\u8981\uff0c\u800c\u662f\u8f6c\u6362\u6210\u4e86\u6a2a\u5411\u504f\u79fbyRel\uff0c\u8ddd\u79bb\u4e5f\u8f6c\u6362\u6210\u4e86\u7eb5\u5411\u8ddd\u79bbdRel\u3002\uff08\u5927\u90e8\u5206\u8f66\u7684ACC\u96f7\u8fbe\u4e0d\u63d0\u4f9b\u524d\u8f66\u7684\u52a0\u901f\u5ea6\u4fe1\u606faRel\uff0c\u9700\u8981\u540e\u7eed\u91c7\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u6765\u4f30\u8ba1\u524d\u8f66\u7684\u52a0\u901f\u5ea6\uff09</p> <p></p> <p>\u89e3\u6790ACC\u96f7\u8fbe\u7684CAN\u4fe1\u606f\uff0c\u8f6c\u6362\u6210radard\u540e\u7eed\u5904\u7406\u6240\u9700\u8981\u7684\u6570\u636e\u683c\u5f0f</p> <p>radard\u4e2d\u91c7\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u6765\u5904\u7406\u96f7\u8fbe\u8fd4\u56de\u7684\u6570\u636e\uff0c\u8fd9\u6837\u7b2c\u4e00\u4e2a\u597d\u5904\u662f\u6bd4\u53ea\u4f7f\u7528\u6d4b\u91cf\u503c\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u964d\u4f4e\u566a\u58f0\uff1b\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u5f88\u591a\u96f7\u8fbe\u65e0\u6cd5\u76f4\u63a5\u89c2\u6d4b\u524d\u8f66\u7684\u52a0\u901f\u5ea6\uff0c\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u7684\u72b6\u6001\u65b9\u7a0b\u7ed3\u5408\u5386\u53f2\u6570\u636e\u66f4\u597d\u7684\u4f30\u8ba1\u51fa\u5f53\u524d\u65f6\u523b\u7684\u524d\u8f66\u52a0\u901f\u5ea6\u3002</p> <p>\u8fd9\u91cc\u7684\u7cfb\u7edf\u7684\u7684\u72b6\u6001\u91cf\u662f[v, a]\uff0c\u89c2\u6d4b\u91cf\u662f[v]\u3002\u8fd9\u91cc\u7684\u7cfb\u7edf\u52a8\u6001\u662f\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u4f7f\u7528rednose\u91cc\u7684EKF\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5316\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\uff0c\u4e0b\u56fe\u662f\u6b64\u5904\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\u76f8\u5173\u53c2\u6570\u8bbe\u5b9a\u4ee3\u7801\uff0c\u5176\u4e2d\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u4e3aA\uff08\u5176\u4e2d\u5305\u542bdt\uff09\uff0c\u6d4b\u91cf\u65b9\u7a0b\u7684\u6d4b\u91cf\u77e9\u9635\u4e3aC\uff08\u90e8\u5206\u6587\u6863\u4e2d\u7528H\uff09\uff0c\u8fc7\u7a0b\u566a\u58f0\u534f\u65b9\u5deeQ\u662f[[10,0],[0, 100]]\uff0c\u6d4b\u91cf\u566a\u58f0\u7684\u534f\u65b9\u5deeR\u662f[[1e3, 0 ],[0, 1e3]]\uff0c\u4f30\u8ba1\u8bef\u5dee\u534f\u65b9\u5deeP\u4e3a[[1,0],[0,1]]\uff0c\u4e0d\u8fc7\u4ee3\u7801\u4e2d\u7684Q\u548cR\u662f\u7528\u6ce8\u91ca\u65b9\u5f0f\u5c55\u793a\u7684\uff08P\u751a\u81f3\u6ca1\u6709\u6ce8\u91ca\u7684\u63d0\u793a\uff0c\u4f46\u505a\u5b9e\u9a8c\u53ef\u5f97\u7ea6\u662f1\uff09\uff0c\u5b9e\u9645\u5e76\u6ca1\u6709\u5b9a\u4e49\uff0c\u800c\u662f\u63d0\u524d\u8ba1\u7b97\u4e86\u4e0d\u540cdt\u7684\u60c5\u51b5\uff0c\u5f62\u6210\u4e86K0/K1\u8868\u793a\u7684\u5361\u5c14\u66fc\u589e\u76ca\u3002</p> <p></p> <p>raderd\u4ee3\u7801\u4e2d\u5361\u5c14\u66fc\u6ee4\u6ce2\u53c2\u6570</p> <p>\u4ece\u5361\u5c14\u66fc\u6ee4\u6ce2\u4e2d\u76845\u4e2a\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c K,P \u4e24\u4e2a\u53c2\u6570\u867d\u7136\u4e5f\u968f\u6b65\u9aa4k\u4e0d\u65ad\u8fed\u4ee3\u6539\u53d8\uff0c\u4f46\u5374\u4e0e\u72b6\u6001 X \u7684\u53d6\u503c\u548c\u89c2\u6d4b Z \u7684\u53d6\u503c\u65e0\u5173\uff0c\u5361\u5c14\u66fc\u589e\u76ca\u00a0\u00a0\u968f\u7740\u4e0d\u65ad\u8fed\u4ee3\u5fc5\u7136\u9700\u8981\u6536\u655b\u5230\u7a33\u5b9a\u503c\u3002\u6240\u4ee5radard\u8fd9\u91cc\u7684\u5361\u5c14\u66fc\u589e\u76ca\u53c2\u6570K0/K1\uff0c\u4ee3\u8868dt\u4ece0.01s\u52300.2s\u65f6\u768420\u79cd\u4e0d\u540c\u7684dt\u60c5\u51b5\u4e0b\uff0c\u6536\u655b\u540e\u7684\u5361\u5c14\u66fc\u589e\u76ca\uff08\u5217\u5411\u91cf\uff09\u7684\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e8c\u884c\uff0c\u540e\u7eed\u7528\u63d2\u503c\u65b9\u5f0f\u6839\u636e\u5b9e\u9645\u8c03\u7528\u65f6\u96f7\u8fbe\u5904\u7406\u9891\u7387\u6c42\u5f97\u7684dt\u5f97\u5230\u66f4\u5339\u914d\u7684K\u3002\u4f8b\u5982\uff0c\u6709\u7684\u96f7\u8fbe\u91c7\u6837\u9891\u7387\u662f15HZ\uff0c\u5219\u9700\u8981\u7528dt=1/15s \u6765\u6c42\u63d2\u503c\u540e\u7684K\u3002</p> <p></p> <p>radar\u8fdb\u7a0b\u4f1a\u5c06\u6ee4\u6ce2\u540e\u7684\u96f7\u8fbe\u6570\u636e\u5148\u8fdb\u884c\u805a\u7c7b\uff0c\u7136\u540e\u518d\u4e0e\u6a21\u578b\u8fd4\u56de\u7684\u57fa\u4e8e\u89c6\u89c9\u611f\u77e5\u7684\u524d\u8f66\u6570\u636e\uff0c\u8fdb\u884c\u878d\u5408\uff0c\u6784\u9020\u6b64\u6a21\u5757\u7684\u8fd4\u56de\u503c\u3002\u5173\u952e\u51fd\u6570\u7684\u6ce8\u91ca\u5206\u6790\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>radard\u8fdb\u7a0b\u4e2d\uff0c\u901a\u8fc7get_lead\u51fd\u6570\uff0c\u878d\u5408\u4e24\u79cd\u6a21\u6001\u5f97\u5230\u7684\u524d\u8f66\u6570\u636e</p> <p>\u867d\u7136supercombo\u6a21\u578b\u7ed9\u51fa\u4e863\u4e2a\u4e0d\u540c\u65f6\u523b(0s, 2s, 4s)\u7684\u524d\u8f66\u4fe1\u606f\u9884\u6d4b\uff0c\u5355radard\u4e2d\u76ee\u524d\u53ea\u4f7f\u7528\u4e86\u524d\u4e24\u8005leads_v3[0]\u548cleads_v3[1]\u3002\u6700\u7ec8\u6784\u9020\u7684\u53d1\u7ed9\u5176\u4ed6\u6a21\u5757\u7684\u6d88\u606fradarState\u4e2d\uff0c\u5173\u952e\u6570\u636e\u662fleadOne\u548cleadTwo\uff0c\u5176\u4e2dleadOne\u8981\u8003\u8651\u4f4e\u901f\u8815\u884c\u65f6\uff0c\u89c6\u89c9\u611f\u77e5\u4e0d\u51c6\uff0c\u9700\u8981\u7528\u96f7\u8fbe\u611f\u77e5\u6570\u636e\u8986\u76d6\u3002\u7ec6\u8282\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>radard\u8fdb\u7a0b\u5c06\u6784\u9020\u8981pub\u51fa\u53bb\u7684radarState\u6d88\u606f</p> <p>\u4ece\u4ee3\u7801\u6d41\u7a0b\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u4e0d\u4f9d\u8d56ACC\u96f7\u8fbe\uff0c\u53ea\u4f9d\u8d56\u89c6\u89c9\u611f\u77e5\u9884\u6d4b\u51fa\u7684\u524d\u8f66\u6570\u636e\uff0c\u4f46\u76ee\u524d\u4ee3\u7801\u7ec6\u8282\u8fd8\u662f\u4f53\u73b0\u51fa\u96f7\u8fbe\u7684\u53ef\u9760\u5ea6/\u4f18\u5148\u7ea7\u6bd4\u89c6\u89c9\u8981\u66f4\u9ad8\u3002\u4e0d\u8fc7\u4ee3\u7801\u4e2d\u4e5f\u4f53\u73b0\u4e86\u4f7f\u7528\u89c6\u89c9\u611f\u77e5\u7ed3\u679c\u6765\u201c\u62d2\u7edd\u201d\u96f7\u8fbe\u611f\u77e5\u7ed3\u679c\u7684\u4f18\u5148\u7ea7\u4e5f\u975e\u5e38\u9ad8\uff0cget_lead\u51fd\u6570\u4e2d\uff0c\u82e5lead_msg&lt;0.5\uff0c\u5219\u4f1a\u62d2\u7edd\u6240\u6709\u96f7\u8fbe\u7684\u6570\u636e\uff0c\u4ea7\u751f\u201c\u65e0\u524d\u8f66\u201d\u7684\u6700\u7ec8\u8f93\u51fa\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#24","title":"2.4 \u89c4\u5212\uff08\u7eb5\u5411\uff09","text":"<p>selfdrive/controls/lib/longitudinal_planner.py \u4e2d\u7684LongitudinalPlanner\u7c7b\uff0c\u8d1f\u8d23\u5c06supercombo\u63a8\u7406\u8f93\u51fa\u7684\u89c4\u5212\uff0c\u7ed3\u5408\u878d\u5408\u540e\u7684\u96f7\u8fbe\u4fe1\u606f\uff0c\u7528MPC\u8fdb\u884c\u518d\u6b21\u4f18\u5316\uff0c\u4f7f\u901f\u5ea6\u6216\u52a0\u901f\u5ea6\u63a7\u5236\u66f4\u52a0\u5408\u7406\u548c\u8212\u9002\u3002</p> <p>\u6bcf\u5f53\u6a21\u578b\u63a8\u7406\u90e8\u5206\u7ed9\u51fa\u65b0\u7684\u8f68\u8ff9\u89c4\u5212\u8f93\u51fa\u540e(\u5468\u671f0.05s)\uff0cLongitudinalPlanner\u7684update\u548cpublish\u51fd\u6570\u4f1a\u4f9d\u6b21\u88ab\u8c03\u7528\uff0c\u5176\u8be6\u7ec6\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d\u7684parse_model\u51fd\u6570\uff0c\u4e00\u65b9\u9762\u5c06\u6a21\u578b\u8f93\u51fa\u8f6c\u6362\u6210\u4e86MPC\u9700\u8981\u7684\u6b65\u9aa4\u6570\uff0c\u53e6\u4e00\u65b9\u9762\u4fee\u6539\u4e86\u8f68\u8ff9\u91cc\u7684\u901f\u5ea6\uff0c\u9632\u6b62\u6a2a\u5411\u52a0\u901f\u5ea6\u8fc7\u5927\u5f71\u54cd\u8212\u9002\u548c\u5b89\u5168\u3002\u8be5\u901f\u5ea6\u4fee\u6b63\u662ftaco2\u5206\u652f\u76f8\u6bd4\u4e0emaster\u5206\u652f\u4e2d\u65b0\u589e\u7684\u5185\u5bb9\u3002</p> <p></p> <p>\u524d\u9762\u5c55\u793a\u7684\u4e3b\u8981\u662f\u7eb5\u5411\u89c4\u5212\u5668\u8f93\u5165\u8f93\u51fa\u7684\u90e8\u5206\uff0c\u5176\u4f18\u5316\u5de5\u4f5c\u7684\u6838\u5fc3\u662f\u4f7f\u7528\u4e86MPC\u6765\u5b8c\u6210\uff0c\u5176\u8be6\u7ec6\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p></p> <p>\u7ee7\u7eed</p> <p></p> <p>\u8fd9\u91cc\u7ec6\u8282\u6709\u70b9\u591a\uff0c\u603b\u7ed3\u4e00\u4e0b\u6574\u4e2a\u7eb5\u5411\u89c4\u5212\u7684\u4e00\u4e9b\u7279\u70b9\uff1a</p> <ul> <li>\u8003\u8651\u4e86\u6a2a\u5411\u52a0\u901f\u5ea6\u4e0d\u80fd\u8fc7\u5927\u7684\u60c5\u51b5\uff0c\u4f1a\u6839\u636e\u66f2\u7387\u8bbe\u7f6e\u901f\u5ea6\u4e0a\u9650\u3002</li> <li>\u867d\u7136\u4e0a\u6e38\u53ea\u7ed9\u4e86\u524d\u8f66\u7684\u5f53\u524d\u65f6\u523b\u7684\u8ddd\u79bb\uff0c\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\u7b49\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86\u542f\u53d1\u5f0f\u7684\u52a0\u901f\u5ea6\u8870\u51cf\u56e0\u5b50tau\u6765\u4f30\u8ba1\u524d\u8f66\u5728\u63a5\u4e0b\u676510s\u5185\u7684\u901f\u5ea6\u53d8\u5316\u60c5\u51b5\uff0c\u5e76\u4ee5\u6b64\u4f30\u8ba1\u51fa\u524d\u8f66\u672a\u6765\u7684\u591a\u4e2a\u65f6\u523b\u7684\u4fe1\u606f\u3002\u540e\u7eed\u7684\u5b89\u5168\u8f66\u8ddd\u8ba1\u7b97\uff0c\u4e5f\u4f9d\u8d56\u8fd9\u4e2a\u4f30\u8ba1\u3002</li> <li>\u6ca1\u6709\u524d\u8f66\u65f6\uff0c\u6784\u9020\u5047\u60f3\u524d\u8f66\u8ba9\u6574\u4e2a\u6d41\u7a0b\u66f4\u7b80\u5355</li> <li>\u4f7f\u7528\u9a7e\u9a76\u5458\u8bbe\u5b9a\u7684\u5de1\u822a\u901f\u5ea6\uff0c\u4f5c\u4e3a\u4e0a\u9650\u6765\u9650\u5236\u89c4\u5212\u7ed3\u679c\u5bfc\u51fa\u7684\u672a\u6765\u65f6\u523b\u7684\u7eb5\u5411\u4f4d\u79fb\u3002\u4f46\u6ca1\u6709\u628a\u5de1\u822a\u901f\u5ea6\u548c\u89c4\u5212\u901f\u5ea6\u76f4\u63a5\u505a\u8bef\u5dee\u7684\u4ee3\u4ef7\u8ba1\u7b97\u3002</li> <li>MPC\u4ee3\u4ef7\u8ba1\u7b97\u4e2d\uff0c\u4e24\u6b21\u4f18\u5316\u7ed3\u679c\u7684\u52a0\u901f\u5ea6\u5dee\u503c\u7684\u6743\u91cd\u662f\u6700\u5927\u7684\uff0c\u4e5f\u5c31\u662f\u5728\u4e0d\u8fdd\u53cdconstraint\u524d\u63d0\u4e0b\uff0c\u6700\u770b\u4e2d\u52a0\u901f\u5ea6\u7684\u5e73\u7a33\u3002</li> <li>\u4ece\u6700\u5c0f\u52a0\u901f\u5ea6\u7684\u8bbe\u5b9a\u503c(-3.5m/s^2)\u6765\u770b\uff0c\u65e0\u6cd5\u4ea7\u751f\u7d27\u6025\u60c5\u51b5\u4e0b\u7684\u5168\u529b\u5236\u52a8\u3002\u4e0d\u8fc7\u4ece\u6587\u6863\u770bopenpilot\u5e76\u4e0d\u5f71\u54cd\u539f\u8f66\u81ea\u5e26\u7684AEB\u529f\u80fd\u7684\u5de5\u4f5c\u3002\uff08\u67d0\u4e9b\u8f66\u578b\u7684AEB\u4e0d\u53d7\u5f71\u54cd\uff0c\u4f46\u67d0\u4e9b\u8f66\u578b\u4f1a\u88ab\u5f71\u54cd\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u770bopenpilot\u8f66\u8f86\u517c\u5bb9\u6027\u6587\u6863\uff09</li> <li>\u56e0\u4e3aACC\u96f7\u8fbe\u7684\u566a\u97f3\u5bfc\u81f4\u53ef\u80fd\u8bef\u62a5\uff0c\u6240\u4ee5\u9700\u8981\u8be5\u6a21\u5757\u8fde\u7eed3\u8f6e\u5224\u65ad\u4f1a\u4ea7\u751f\u78b0\u649e\uff0c\u624d\u4f1a\u89e6\u53d1FCW\u62a5\u8b66</li> <li>\u4ece\u5b89\u5168\u8ddf\u8f66\u8ddd\u79bb\u7684\u8ba1\u7b97\u516c\u5f0f\u6765\u770b\uff0c\u76ee\u524d\u7684\u8ddf\u8f66\u7b56\u7565\u6bd4\u8f83\u504f\u4fdd\u5b88\u3002</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Openpilot%E6%A8%A1%E5%9E%8B%E8%A7%A3%E6%9E%90/#25","title":"2.5 \u63a7\u5236","text":"<p>\u63a7\u5236\u8fdb\u7a0b selfdrive/controls/controlsd.py \u8d1f\u8d23\u6bd4\u8f83\u591a\u7684\u5185\u5bb9\uff0c\u5176\u4e2d\u5305\u62ec\u6a2a\u5411\u3001\u7eb5\u5411\u63a7\u5236\u53c2\u6570\u7684\u8fdb\u4e00\u6b65\u8ba1\u7b97\u548c\u5bf9\u66f4\u5e95\u5c42\u8f66\u8f86\u76f8\u5173\u53d1\u9001CAN\u547d\u4ee4\u90e8\u5206\u7684\u8c03\u7528\u3002</p> <p>\u5bf9\u4e8e\u7eb5\u5411\u63a7\u5236\uff0cconstrolsd\u4f1a\u8c03\u7528 selfdrive/controls/lib/longcontrol.py\u7684LongControl\u7c7b\u6765\u8fdb\u884c\uff0c\u5176\u5173\u952e\u90e8\u5206\u5982\u4e0b\uff1a  longcontrol.py</p> <p>\u4ece\u4e0a\u56fe\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0cLongControl\u91cd\u70b9\u8003\u8651\u4e86\u8f66\u8f86\u7684\u7eb5\u5411\u6267\u884c\u5668actuator\u7684\u5ef6\u8fdf\uff0c\u6839\u636e\u5176\u90e8\u5206\u8f66\u8f86\u76f8\u5173\u4ee3\u7801\u4e2d\u7684\u8bbe\u7f6e\u6765\u770b\u8fd9\u4e2a\u5ef6\u8fdf\u67090.15-0.5s\uff0c\u6240\u4ee5\u7b80\u5355\u7684\u628a\u89c4\u5212\u4e2d\u7684\u5f53\u524d\u65f6\u523b\u7684\u52a0\u901f\u5ea6a\u548cv\u4f5c\u4e3apid\u7684feedfoward\u548cerror\u662f\u4e0d\u592a\u597d\u7684\uff0c\u52a0\u901f\u548c\u5239\u8f66\u4f1a\u4e0d\u591f\u7075\u654f\uff0c\u8fd9\u91cc\u6839\u636e\u8f66\u8f86\u7c7b\u578b\u5177\u4f53\u7684\u5ef6\u8fdf\uff0c\u505a\u4e86\u8003\u8651\u957f\u8fdc\u65f6\u95f4\u7684\u76ee\u6807\u52a0\u901f\u5ea6\u548c\u76ee\u6807\u901f\u5ea6\u4fee\u6b63\uff0c\u76ee\u7684\u662f\u901a\u8fc7\u9884\u5148\u8003\u8651\u63d0\u524d\u91cf\u4f7f\u5f97\u6700\u7ec8\u6267\u884c\u540e\u7684\u7ed3\u679c\u4e0e\u89c4\u5212\u7684\u7ed3\u679c\u7684\u5ef6\u8fdf\u66f4\u5c0f\u3002 LongControl\u7684\u5b9e\u73b0\u4e2d\uff0c\u6709\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u6709off/starting/stopping/pid \u56db\u79cd\u72b6\u6001\uff0cpid\u72b6\u6001\u662f\u5927\u90e8\u5206\u6b63\u5e38\u884c\u4f7f\u65f6\u6240\u5904\u4e8e\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u4f1a\u7528PID\u65b9\u5f0f\u6765\u8ba1\u7b97\u52a0\u901f\u5ea6\u3002\u5904\u4e8eoff\u72b6\u6001\u4e0b\u65f6\uff0c\u52a0\u901f\u5ea6\u4f1a\u4f7f\u7528\u5e38\u65700\uff0c\u5904\u4e8e\u5176\u5b832\u79cd\u72b6\u6001\u4e0b\u65f6\uff0c\u52a0\u901f\u5ea6\u4f1a\u4f7f\u7528CarParameter\u91cc\u7684\u4e0d\u540c\u7684\u9884\u8bbe\u503c\u3002</p> <p>\u8fd9\u91cc\u8c03\u7528\u5230\u7684PID\u63a7\u5236\u5668\u4ee3\u7801\u5206\u6790\u5982\u4e0b\u56fe\uff1a  pid.py</p> <p>\u8be5PIDController\u7c7b\u91c7\u7528feedforward+pid\u673a\u5236\uff0c\u6240\u4ee5\u6709kf\u3001kp\u3001ki\u3001kd \u56db\u7ec4\u53c2\u6570\u3002\u5b83\u88abopenpilot\u7684\u591a\u4e2a\u5730\u65b9\u4f7f\u7528\u5230\uff0c\u5305\u62ec\u6a2a\u5411\u63a7\u5236\uff0c\u6240\u4ee5\u4ed6\u8003\u8651\u4e86override\u60c5\u51b5\uff0c\u5373\u7528\u6237\u5bf9\u65b9\u5411\u76d8\u65bd\u52a0\u7684\u626d\u77e9\u8d85\u8fc7\u4e86\u4e00\u5b9a\u9650\u5ea6\u65f6\u4f1a\u4f7foverride\u4e3atrue\uff0c\u6b64\u65f6PID\u4e0d\u80fd\u518d\u8fdb\u884c\u5bf9\u8bef\u5dee\u7684\u79ef\u5206\u7d2f\u79ef\uff0c\u9632\u6b62\u201c\u62a2\u593a\u201d\u65b9\u5411\u76d8\u3002</p> <p>\u4f7f\u7528PID\u8ba1\u7b97\u51fa\u9700\u8981\u53d1\u7ed9\u8f66\u8f86\u7684\u6267\u884c\u5668\u7684\u52a0\u901f\u5ea6\u540e\uff0ccontrolsd\u4f1a\u628aLongControl\u7ed9\u51fa\u7684\u52a0\u901f\u7b49\u8f66\u8f86\u63a7\u5236\uff0c\u8c03\u7528\u6bcf\u4e2a\u8f66\u578b\u72ec\u7acb\u7684\u63a7\u5236\u5b9e\u73b0\u4ee3\u7801\uff0cselfdrive/car/XXXX/carcontroller.py\uff0c\u5982\u4e0b\u56fe\u662f\u73b0\u4ee3\u6c7d\u8f66\u7684\u5b9e\u73b0\uff0c\u4f1a\u6839\u636eaccel\u751f\u6210CAN\u547d\u4ee4\u5e76\u53d1\u9001\u7ed9\u6267\u884c\u5668\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u76f4\u63a5\u4ea7\u751f\u6cb9\u95e8\u548c\u5239\u8f66\u63a7\u5236\u7684CAN\u547d\u4ee4\uff0c\u800c\u662f\u8ba1\u7b97\u51fa\u53d1\u7ed9ACC\u63a7\u5236\u5668\u7684CAN\u547d\u4ee4\uff0c\u7531\u5b83\u518d\u53bb\u64cd\u4f5c\u6cb9\u95e8\u548c\u5239\u8f66\u3002</p> <p></p> <p>hyundai\u73b0\u4ee3\u6c7d\u8f66\u7684\u8f66\u8f86\u63a7\u5236\u5b9e\u73b0</p> <p>controlsd\u5728\u5728\u6bcf\u8f6e\u5faa\u73af\u7ed3\u5c3e\u7684publish_logs\u51fd\u6570\u4e2d\uff0c\u4e00\u65b9\u9762\u751f\u6210\u8be5\u6a21\u5757\u65e5\u5fd7\u8fdb\u884c\u8bb0\u5f55\uff0c\u4e00\u65b9\u9762\u6784\u9020CAN\u547d\u4ee4\u548c\u548csendcan\u6d88\u606f\u3002</p> <p></p> <p>controlsd.py\u8c03\u7528CI.apply\u6784\u9020CAN\u547d\u4ee4\uff0c\u518d\u7528sendcan\u6d88\u606fpublish\u51fa\u53bb</p> <p>boardd\u8fdb\u7a0b\u8d1f\u8d23\u63a5\u6536\u548c\u53d1\u9001CAN\u6d88\u606f\u3002</p> <p> boardd.cc\u4e2d\u7684CAN\u6d88\u606f\u53d1\u9001\u7ebf\u7a0b\uff0c\u8bfb\u53d6sendcan\u6d88\u606f\u5e76\u53d1\u9001</p> <p>\u6587\u4e2d\u7684\u66f4\u591a\u6ce8\u91ca\u4ee3\u7801\u653e\u5230\u4e86GitHub\u4e0a apache2046/openpilot \u4e0a</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Prescan%E3%80%81carsim%E3%80%81simulink%E8%81%94%E5%90%88%E4%BB%BF%E7%9C%9F/","title":"Prescan\u3001carsim\u3001simulink\u8054\u5408\u4eff\u771f","text":"<p>Prescan\u3001carsim\u3001simulink\u8054\u5408\u4eff\u771f</p> <p>**\u00a0\u00a0 \u00a0*\u00a0\u00a0 \u00a0 by \u97e9\u7855 2021.10.21*</p> <p>\u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u4e09\u8005\u8054\u5408\u4eff\u771f 1.prescan\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u81ea\u52a8\u9a7e\u9a76\u573a\u666f\u7684\u642d\u5efa\uff08\u5176\u4e2d\u6709\u4e30\u5bcc\u7684\u4f20\u611f\u5668\u4e0e\u9a7e\u9a76\u573a\u666f\uff09 2.carsim\u7684\u8f66\u8f86\u52a8\u529b\u5b66\u6a21\u578b\u5f88\u7cbe\u786e\uff0c\u800cprescan\u4e2d\u63d0\u4f9b\u7684\u8f66\u8f86\u52a8\u529b\u5b66\u6a21\u578b\u4e0d\u591f\u7cbe\u786e</p> <p>\u4e00\u3001\u51c6\u5907\u5de5\u4f5c</p> <p>\u7248\u672c\u9009\u62e9\uff1amatlab2020a\u6216\u8005b\uff08\u6211\u7684\u662fb\uff09\uff0cprescan8.5\uff0ccarsim2019.1\uff08\u6ce8\u610f\uff0c\u4e00\u5b9a\u662f2019.1\uff0c2019.0\u662f\u4e0d\u884c\u7684\uff0c\u6211\u5728\u8fd9\u91cc\u82b1\u4e86\u5f88\u5927\u529f\u592b\uff0c\u624d\u53d1\u73b0\u662fcarsim\u7248\u672c\u95ee\u9898\uff09\u3002prescan\u548ccarsim\u90fd\u662f\u8981\u7834\u89e3\u7684\uff0c\u6559\u7a0b\u53ef\u4ee5\u5728\u7f51\u4e0a\u627e\u5230\u3002</p> <p>\u4e8c\u3001carsim\u8bbe\u7f6e\uff08\u524d\u9762\u6709\u4e00\u5c0f\u90e8\u5206prescan\uff09 \u2460\u6253\u5f00prescan,\u9009\u62e9open experiment </p> <p>\u2461\u9009\u62e9DemoTemplates</p> <p> \u2462\u9009\u62e9carsim3d </p> <p>\u2463\u6253\u5f00prescan\u7684carsimdemo </p> <p>\u2464\u6253\u5f00\u540e\u754c\u9762\u5982\u56fe\u6240\u793a</p> <p></p> <p>\u2465\u6253\u5f00carsim\uff0c\u5728File\u4e0b\u9009\u62e9import parsfile\uff08\u5176\u5b9e\u5c31\u662f\u52a0\u8f7dprescan\u63d0\u4f9b\u7684carp\u6587\u4ef6\uff09\uff0ccpar\u6587\u4ef6\u4e00\u822c\u5728\u76ee\u5f55\uff1aC:\\Users\\Public\\Documents\\Experiments\\DemoTemplates\\Demo_PreScanCarSim3D\uff08\u5982\u679c\u4f60\u628aprescan\u7684\u6570\u636e\u5e93\u4e0b\u8f7d\u5230\u4e86\u522b\u7684\u5730\u65b9\uff0c\u5c31\u5728\u522b\u7684\u76ee\u5f55\u4e0b\u627e\uff0c\u603b\u4e4b\u8981\u627e\u5230carsim3D.cpar\u6587\u4ef6\uff09</p> <p></p> <p></p> <p>\u2466\u6253\u5f00cpar\u540e\u8fdb\u884c\u5982\u4e0b\u8bbe\u7f6e\uff08\u547d\u540d\u53ef\u4ee5\u968f\u4fbf\uff09\uff1a </p> <p>\u2467\u4e00\u76f4\u4e0b\u4e00\u6b65\uff0c\u7b49\u6587\u4ef6\u52a0\u8f7d\u5b8c\u5c31\u597d\u4e86\uff0c\u52a0\u8f7d\u5b8c\u6210\u540e\uff0ccarsim\u53d8\u4e3a\u4e0b\u9762\u8fd9\u6837\uff0c\u53ef\u4ee5\u770b\u5230\u51fa\u73b0\u4e86carsim_vehicledynamics\u7684\u6a21\u578b </p> <p>\u2468\u70b9\u51fbsend to simulink\uff0c\u770b\u770bcarsim_vehicledynamics\u662f\u5426\u80fd\u5728simulink\u91cc\u8dd1\u8d77\u6765\uff0c\u8fd9\u91cc\u4f1a\u51fa\u73b0\u5404\u79cd\u5404\u6837\u7684\u9519\u8bef\uff0c\u4e5f\u662f\u6700\u82b1\u65f6\u95f4\u7684\uff08\u6bd4\u5982\u627e\u4e0d\u5230\u6c42\u89e3\u5668\uff1a\u6c42\u89e3\u5668\u4e00\u822c\u5728carsim_prog\u6587\u4ef6\u5939\u4e0b\u7684program\u6587\u4ef6\u5939\u91cc\u3002\u6bd4\u5982matlba\u91cc\u6ca1\u6709\u5c06carsim\u6c42\u89e3\u5668\u6587\u4ef6\u5939\u548ccarsim_data\u6587\u4ef6\u5939\u4e0b\u7684Extension\u4e0b\u7684simulink\u6587\u4ef6\u5939\u52a0\u5165\u3002\u6bd4\u5982carsim\u6c42\u89e3\u5668\u8981\u8bbe\u7f6e\u621064\u4f4d\uff09\uff0c\u4f1a\u51fa\u73b0\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u6839\u636ematlab\u7684\u63d0\u793a\u6162\u6162\u7684debug</p> <p></p> <p>\u2469\u8bbe\u7f6ecarsim\u4ea7\u751fsimfile\u7684\u8def\u5f84\uff0c\u6700\u597d\u653e\u5728Extensions\\Simulink\u4e0b\uff1a\u6bd4\u5982\u6211\u81ea\u5df1\u653e\u5728\u4e86D:\\carsim2019.1\\CarSim2019.1_Data\\Extensions\\Simulink</p> <p>\u5982\u679c\u51fa\u73b0\u4e86\u4e0b\u5217\u754c\u9762\uff0c\u5219\u8bf4\u660ecarsim\u7684\u914d\u7f6e\u5168\u90e8\u5b8c\u6210</p> <p></p> <p>\u4e09\u3001prescan\u8bbe\u7f6e</p> <p>\u2460\u627f\u63a5\u4e8c\u7684\u6b65\u9aa4\uff0c\u6253\u5f00prescan\u4e2d\u7684\u4e3b\u8f66\u5965\u8feaA8\uff0c\u8fdb\u884c\u8bbe\u7f6e\uff08\u4e00\u5b9a\u8981\u662f\u5965\u8feaA8\uff0c\u56e0\u4e3aprescan\u5c31\u53ea\u63d0\u4f9b\u4e86\u5965\u8feaA8\u7684\u63a5\u53e3\uff09\uff0c\u70b9\u5f00Object configuration</p> <p></p> <p>\u2461\u627e\u5230prescan\u4e2d\u7684\u8f66\u8f86\u52a8\u529b\u5b66\u6a21\u5757\uff0c\u9009\u62e9\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u52a8\u529b\u5b66\u6a21\u578b\uff0c\u8def\u5f84\u8bbe\u7f6e\u4e3acarsim\u4e2d\u52a8\u529b\u5b66mdl\u7684\u8def\u5f84\uff0c\u6211\u7684\u4e3aD:\\carsim2019.1\\CarSim2019.1_Data\\Extensions\\Simulink\\CarSim_VehicleDynamics.mdl</p> <p></p> <p>\u2462\u70b9\u51fbbuild\u8fdb\u884c\u7f16\u8bd1\uff0c\u7136\u540e\u53d1\u9001\u5230simulink </p> <p>\u2463\u5728matlab\u4e2d\u627e\u5230carsim3d\u7684xls\u6a21\u578b\uff0c\u6253\u5f00\u540eregenerate\u4e00\u4e0b </p> <p>\u2464\u7136\u540e\u5c31\u53ef\u4ee5\u5728simulink\u6109\u5feb\u7684run\u4e86 </p> <p>\u2465\u6211\u4eec\u70b9\u5f00carsim_vehicle\u8fd9\u4e2a\u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cprescan\u4e2d\u7684\u52a8\u529b\u5b66\u6a21\u578b\u5df2\u7ecf\u66ff\u6362\u4e3a\u4e86carsim\u7684\u52a8\u529b\u5b66\u6a21\u578b\uff08\u6ce8\u610f\uff1a\u5982\u679c\u62a5\u9519\u4e3a\u627e\u4e0d\u5230simfile\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u70b9\u5f00carsim\u6a21\u578b\uff0c\u5c06simfile\u6587\u4ef6\u7684\u8def\u5f84\u8bbe\u7f6e\u4e3a\u6211\u4eec\u4e4b\u524d\u5728carsim\u4e2d\u8bbe\u7f6e\u7684\u4ea7\u751fsimfile\u7684\u8def\u5f84\uff0c\u6211\u7684\u4e3aD:\\carsim2019.1\\CarSim2019.1_Data\\Extensions\\Simulink\\simfile.sim\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2d\u7b2c\u2469\u6b65\u6240\u63d0\u5230\u7684\u8def\u5f84\uff09</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/RL%E4%B8%AD%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E5%AF%B9%E7%BB%93%E6%9E%9C%E7%9A%84%E5%BD%B1%E5%93%8D/","title":"RL\u4e2d\u7f51\u7edc\u7ed3\u6784\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd","text":"<p>\u5148\u8bf4\u7ed3\u8bba\uff1a\u76f8\u4f3c\u7c7b\u578b\u7684\u7f51\u7edc\u7ed3\u6784\u5f71\u54cd\u4e0d\u5927\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u7ed3\u6784\u5f71\u54cd\u8f83\u5927\u3002\u5168\u8fde\u63a5\u5c42\uff08MLP\uff09\u548c\u5377\u79ef\uff08CNN\uff09\u3001\u6ce8\u610f\u529b\u673a\u5236\uff08Tansformer\uff09\u5c5e\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u81ea\u7136\u76f8\u5dee\u5f88\u5927\uff0c\u5b83\u4eec\u7528\u4e8e\u4e0d\u540c\u7684\u8f93\u5165\u72b6\u6001\u7c7b\u578b\u3002</p> <p>\u5bf9\u4e8e\u7528\u56fe\u50cf\u4f5c\u4e3a\u72b6\u6001\u8f93\u5165\uff0c\u4f60\u53ea\u80fd\u7528CNN\u6216Transformer\u6765\u62bd\u53d6\u7279\u5f81\uff0c\u4ece\u800c\u4f7factor\u7f51\u7edc\u548ccritic\u7f51\u7edc\u8bad\u7ec3\u5730\u8f83\u597d\uff0c\u5168\u8fde\u63a5\u5c42\u51e0\u4e4e\u4e0d\u80fd\u5904\u7406\u56fe\u50cf\u8f93\u5165\uff0c\u9664\u975e\u662f\u7b80\u5355\u56fe\u50cf\u3002</p> <p>\u5bf9\u4e8e\u7528\u4eff\u771f\u5668\u5e95\u90e8\u62ff\u5230\u7684\u6d4b\u91cf\u6570\u636e\u4f5c\u4e3a\u72b6\u6001\u8f93\u5165\uff0c\u7528MLP\u8db3\u77e3\uff0c\u8fd9\u79cd\u60c5\u51b5\u4f60\u53cd\u800c\u4e0d\u80fd\u7528CNN\u548cTransformer\u3002</p> <p>\u5bf9\u4e8e\u7528\u65f6\u95f4\u5e8f\u5217\u76f8\u5173\u7684\u6570\u636e\u4f5c\u4e3a\u72b6\u6001\u8f93\u5165\uff0c\u90a3\u4f60\u53ef\u80fd\u9700\u8981LSTM\u7f51\u7edc\u3002</p> <p>\u6211\u81ea\u5df1\u5728\u505a\u673a\u5668\u4eba\u5f3a\u5316\u5b66\u4e60\u5b9e\u9a8c\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u5982\u679c\u7528MLP\u4e0d\u80fd\u6536\u655b\uff0c\u7528DenseNet\u540c\u6837\u4e5f\u4e0d\u80fd\u6536\u655b\uff0c\u91c7\u7528\u5bc6\u96c6\u8fde\u63a5\u7684DenseNet\u548cMLP\u5177\u6709\u76f8\u4f3c\u7684\u7ed3\u6784\uff0c\u867d\u7136DenseNet\u8868\u5f81\u80fd\u529b\u4f1a\u7a0d\u5f3a\u70b9\uff0c\u4f46\u662f\u4e0d\u6536\u655b\u7684\u95ee\u9898\u4e0d\u5728\u4e8e\u7f51\u7edc\u7ed3\u6784\u3002</p> <p>\u5f53\u7136\uff0c\u4ee5\u4e0a\u8ba8\u8bba\u7684\u524d\u63d0\u662f\u4f60\u7684\u7f51\u7edc\u8db3\u591f\u62df\u5408\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u4f60\u7528\u5355\u9690\u5c42\u7684MLP\u4e0d\u6536\u655b\uff0c\u7528\u4e09\u9690\u5c42\u7684MLP\u6536\u655b\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5355\u9690\u5c42MLP\u7684\u8868\u5f81\u80fd\u529b\u592a\u5f31\uff0c\u4e0d\u8db3\u4ee5\u62df\u5408\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/RNN%20vs.%20Structured%20Learning/","title":"RNN vs. Structured Learning","text":"<p>Structured Learning \u662f\u4f20\u7edf\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\uff1aHMM CRF</p> <p>Structured Perceptron/SVM</p> <p>RNN\u662f\u6df1\u5ea6\u5b66\u4e60\u7684\u65b9\u6cd5</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/T-SNE%20dimension%20reduction/","title":"T SNE dimension reduction","text":"<p>T-SNE is a method that can visual the high dimension in the low dimension T-SNE use the t-distribution</p> <p>The difference between T-SNE and SEN is that T-SNE use the t-distribution but the SNE use the Gaussion distribution</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/","title":"Transformer\u7684\u7406\u89e3\u4e0e\u5b9e\u8df5","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#1-transformer","title":"1. transformer\u7684\u521d\u59cb\u7406\u89e3","text":"<p>\u77e5\u4e4e Tansformer\u7b80\u8981\u4ecb\u7ecd_\u54d4\u54e9\u54d4\u54e9_bilibili </p> <p> </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#2-tansformer","title":"2. tansformer\u7684\u4ee3\u7801\u7b80\u5316\u5b9e\u8df5","text":"<p>\u77e5\u4e4e</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#3embedding","title":"3.\u5173\u4e8eembedding\u7684\u7406\u89e3","text":"<p>\u77e5\u4e4e</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#4bep","title":"4.\u5173\u4e8ebep\u7b97\u6cd5\u7684\u7406\u89e3","text":"<p>\u77e5\u4e4e</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#5transformer","title":"5.transformer\u8f68\u8ff9\u9884\u6d4b\u7684\u4e00\u4e9b\u9879\u76ee\uff08\u90fd\u6709\u4ee3\u7801\uff09","text":"<p>\u8f68\u8ff9\u9884\u6d4b\u6559\u7a0b https://blog.csdn.net/BIT_csy/article/details/129971757</p> <p>\u884c\u4eba\u8f68\u8ff9\u9884\u6d4b Spatio-Temporal Graph Transformer Networks for Pedestrian Trajectory Prediction</p> <p>Transformer Networks for Trajectory Forecasting</p> <p>\u5546\u6c64\u7684\u8f68\u8ff9\u9884\u6d4b  \"Multimodal Motion Prediction with Stacked Transformers\": official code implementation and project page)</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#6attentionself-attention","title":"6.attention\u548cself-attention\u7684\u533a\u522b\uff1a","text":"<p>attention\u548cself-attention\u90fd\u5305\u62ecq\u3001k\u3001v\uff0c\u4f46\u662f\u81ea\u6ce8\u610f\u529b\u4e0d\u9700\u8981\u5916\u90e8\u4fe1\u606f\uff0c\u76f4\u63a5\u8ba1\u7b97\u540c\u5c42\u7279\u5f81\u7684\u4ea4\u4e92\u5173\u7cfb\uff0c\u6bd4\u5982\u8f93\u5165\u4e00\u4e2a\u53e5\u5b50\u5c31\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e2a\u53e5\u5b50\u4e2d\u7684\u5355\u8bcd\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u5373Q\u3001K\u3001V\u4e09\u4e2a\u77e9\u9635\u90fd\u662f\u7531\u53e5\u5b50\u672c\u8eab\u4ea7\u751f\u7684\uff1b\u4f20\u7edf\u7684\u6ce8\u610f\u529b\u5219\u7528\u5176\u4ed6\u4e1c\u897f\u4f5c\u4e3aquery\uff0c\u5982RNN\u4e2d\u4f7f\u7528\u7684\u6ce8\u610f\u529b\u5c31\u662f\u628a\u524d\u4e00\u4e2a\u65f6\u95f4\u7684\u8f93\u51fa\u4f5c\u4e3aquery\u548c\u5f53\u524d\u7684\u8f93\u5165\u8ba1\u7b97\u76f8\u5173\u6027\uff08\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u524d\u9762\u7684\u8f93\u5165\u4ea7\u751f\u7684\u5386\u53f2\u4fe1\u606f\u548c\u5f53\u524d\u7684\u8f93\u5165\u8fdb\u884c\u52a0\u6743\uff0c\u5224\u65ad\u54ea\u4e9b\u4fe1\u606f\u66f4\u91cd\u8981\uff09</p> <p>Attention(Query, Source)\uff0c\u7a81\u7136\u5192\u51fa\u4e2aSource\uff0cSource\u662f\u4ec0\u4e48\uff1f Scoure =Q.K</p> <p> </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#7-encoder-decoder","title":"7. encoder-decoder\u6a21\u578b","text":"<p>Attention\u673a\u5236 Encoder-Decoder\u6846\u67b6\u7b80\u8981\u8bb2\u89e3_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u51ac\u4e8e\u535a\u5ba2</p> <p></p> <p>\u4e0d\u52a0\u5165attention\u65f6\u7684ec\u6a21\u578b\uff08RNN\u3001LSTM\uff09\uff1a\u6ce8\u610f\u4e2d\u95f4\u5c42c\u662f\u5b9a\u957f\u7684\u5411\u91cf\uff0c\u4e0d\u7ba1\u8f93\u5165\u662f\u591a\u957f </p> <p>\u52a0\u5165attention\u540e\u7684\u6a21\u578b\uff08RNN\u3001LSTM\u7b49\uff09\uff1a\u6ce8\u610f\u4e0d\u662fself attention\uff0c\u6240\u4ee5q\u662f\u7531decoder\u8fc7\u6765\u7684\uff0c\u8fd9\u65f6c\u4e0d\u518d\u662f\u5b9a\u957f\u7684\u5411\u91cf\uff0c\u800c\u662f\u591a\u4e2a\u5411\u91cf\u7ec4\u6210\u7684\u5e8f\u5217</p> <p>\u4e0b\u56fe\u4e2dencoder\u662f\u53cc\u5411rnn\uff0cdecoder\u662frnn\uff0c\u5bf9\u5e94\u662f\u7684\u56fe8.1\u4e2d\u7684\u666e\u901a\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u952e\u503c\u5bf9\u6a21\u5f0f\u3002\u76f8\u5f53\u4e8e\u5728decoder\u4e2d\u9884\u6d4b\\(t_{j+2}\\)\u65f6\uff0c\u7528\\(t_{j+1}\\)\u548c\u524d\u8fb9encoder\u51fa\u6765\u7684\u503c\u505aattention\u52a0\u6743\uff0c\u770b\u770b\u66f4\u5173\u6ce8\u90a3\u4e2a\u4e00\u4e2aencoder\u7684\u5411\u91cf\u3002 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#8-berttransformernlp","title":"8. bert\u5c31\u662f\u53ea\u6709\u7f16\u7801\u5668\u7684transformer\uff0c\u662fNLP\u7684\u9884\u8bad\u7ec3\u6a21\u578b","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#9transformermask","title":"9.transformer\u4e2d\u7684mask\u673a\u5236","text":"<p>\u51ac\u4e8e\u535a\u5ba2</p> <p>\u72d7\u4e2d\u8d64\u5154</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#10-berttransformer","title":"10. BERT\u548cTransformer\u7684\u533a\u522b","text":"<p>\u76f8\u540c\u70b9\uff1a\u4ed6\u4eec\u90fd\u91c7\u7528\u4e86\u4e24\u9636\u6bb5\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u5148\u9884\u8bad\u7ec3\uff0c\u5728fine tune</p> <p>\u4e0d\u540c\u70b9\uff1a BERT\u7528\u5230\u4e86transformer\u7684encoder\u67b6\u6784\uff08\u6ca1\u6709\u6587\u672c\u751f\u6210\u7684\u80fd\u529b\uff09 GPT\u7528\u7684\u662fdecoder\u67b6\u6784\uff0c\u6709\u6587\u672c\u751f\u6210\u7684\u80fd\u529b\uff08\u5f97\u76ca\u4e8emask attention\uff09</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/Transformer%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E8%B7%B5/#11","title":"11.\u5927\u6a21\u578b\u7684\u53d1\u5c55","text":"<p>\u4ece\u90a3\u7bc7\u300aAttention is All You Need\u300b\u5f00\u59cb\uff0c\u57fa\u4e8e\u8fd9\u7bc7\u7531\u8c37\u6b4c\u673a\u5668\u7ffb\u8bd1\u56e2\u961f\u63d0\u51fa\u7684\u7531\u591a\u7ec4 Encoder\u3001Decoder \u6784\u6210\u7684\u673a\u5668\u7ffb\u8bd1\u6a21\u578b Transformer \u5f00\u59cb\uff0c\u5927\u6a21\u578b\u7684\u53d1\u5c55\u5927\u81f4\u8d70\u4e0a\u4e86\u4e24\u6761\u8def\uff0c</p> <p>\u4e00\u6761\u8def\u662f\u820d\u5f03 Decoder \u90e8\u5206\uff0c\u4ec5\u4ec5\u4f7f\u7528 Encoder \u4f5c\u4e3a\u7f16\u7801\u5668\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5176\u6700\u51fa\u540d\u7684\u4ee3\u8868\u5c31\u662f Bert \u5bb6\u65cf\u8fd9\u4e9b\u6a21\u578b\u5f00\u59cb\u5c1d\u8bd5\u201c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u201d\u7684\u65b9\u5f0f\u6765\u66f4\u597d\u7684\u5229\u7528\u76f8\u8f83\u5176\u4ed6\u6570\u636e\u800c\u8a00\u66f4\u5bb9\u6613\u83b7\u5f97\u7684\u5927\u89c4\u6a21\u7684\u81ea\u7136\u8bed\u8a00\u6570\u636e\uff0c**\u800c\u201c\u65e0\u76d1\u7763\u201d\u7684\u65b9\u5f0f\u5c31\u662f Masked Language Model\uff08MLM\uff09\uff0c\u901a\u8fc7\u8ba9 Mask \u6389\u53e5\u5b50\u4e2d\u7684\u90e8\u5206\u5355\u8bcd\uff0c\u8ba9\u6a21\u578b\u53bb\u5b66\u4e60\u4f7f\u7528\u4e0a\u4e0b\u6587\u53bb\u9884\u6d4b\u88ab Mask \u6389\u7684\u5355\u8bcd\u7684\u80fd\u529b\u3002\u5728\u00a0Bert\u00a0\u95ee\u4e16\u4e4b\u521d\uff0c\u5728 NLP \u9886\u57df\u4e5f\u7b97\u662f\u4e00\u9897\u70b8\u5f39\uff0c\u540c\u65f6\u5728\u8bb8\u591a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7684\u5e38\u89c1\u4efb\u52a1\u5982\u60c5\u611f\u5206\u6790\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7b49\u4e2d\u90fd\u5237\u5230\u4e86 SOTA\uff0cBert \u5bb6\u65cf\u7684\u51fa\u8272\u4ee3\u8868\u9664\u4e86\u8c37\u6b4c\u63d0\u51fa\u7684 Bert \u3001ALBert\u4e4b\u5916\uff0c\u8fd8\u6709\u767e\u5ea6\u7684 ERNIE\u3001Meta \u7684 RoBERTa\u3001\u5fae\u8f6f\u7684DeBERTa\u7b49\u7b49\u3002</p> <p>\u53ef\u60dc\u7684\u662f\uff0cBert \u7684\u8fdb\u8def\u6ca1\u80fd\u7a81\u7834 Scale Law\uff0c\u800c\u8fd9\u4e00\u70b9\u5219\u7531\u5f53\u4e0b\u5927\u6a21\u578b\u7684\u4e3b\u529b\u519b\uff0c\u5373\u5927\u6a21\u578b\u53d1\u5c55\u7684\u53e6\u4e00\u6761\u8def\uff0c\u901a\u8fc7\u820d\u5f03 Encoder \u90e8\u5206\u800c\u57fa\u4e8e Decoder \u90e8\u5206\u7684 GPT \u5bb6\u65cf\u771f\u6b63\u505a\u5230\u4e86\u3002GPT\u00a0\u5bb6\u65cf\u7684\u6210\u529f\u6765\u6e90\u4e8e\u4e00\u4e2a\u7814\u7a76\u4eba\u5458\u60ca\u5f02\u7684\u53d1\u73b0\uff1a\u201c\u6269\u5927\u8bed\u8a00\u6a21\u578b\u7684\u89c4\u6a21\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u96f6\u6837\u672c\uff08zero-shot\uff09\u4e0e\u5c0f\u6837\u672c\uff08few-shot\uff09\u5b66\u4e60\u7684\u80fd\u529b\u201d\uff0c\u8fd9\u4e00\u70b9\u4e0e\u57fa\u4e8e\u5fae\u8c03\u7684 Bert \u5bb6\u65cf\u6709\u5f88\u5927\u7684\u533a\u522b\uff0c\u4e5f\u662f\u5f53\u4e0b\u5927\u89c4\u6a21\u8bed\u8a00\u6a21\u578b\u795e\u5947\u80fd\u529b\u7684\u6765\u6e90\u3002GPT \u5bb6\u65cf\u57fa\u4e8e\u7ed9\u5b9a\u524d\u9762\u5355\u8bcd\u5e8f\u5217\u9884\u6d4b\u4e0b\u4e00\u4e2a\u5355\u8bcd\u6765\u8fdb\u884c\u8bad\u7ec3\uff0c\u56e0\u6b64 GPT \u6700\u521d\u4ec5\u4ec5\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6587\u672c\u751f\u6210\u6a21\u578b\u800c\u51fa\u73b0\u7684\uff0c\u800c GPT-3 \u7684\u51fa\u73b0\u5219\u662f GPT \u5bb6\u65cf\u547d\u8fd0\u7684\u8f6c\u6298\u70b9\uff0cGPT-3 \u7b2c\u4e00\u6b21\u5411\u4eba\u4eec\u5c55\u793a\u4e86\u5927\u6a21\u578b\u5e26\u6765\u7684\u8d85\u8d8a\u6587\u672c\u751f\u6210\u672c\u8eab\u7684\u795e\u5947\u80fd\u529b\uff0c\u663e\u793a\u4e86\u8fd9\u4e9b\u81ea\u56de\u5f52\u8bed\u8a00\u6a21\u578b\u7684\u4f18\u8d8a\u6027\u3002\u800c\u4ece GPT-3 \u5f00\u59cb\uff0c\u5f53\u4e0b\u7684 ChatGPT\u3001GPT-4\u3001Bard \u4ee5\u53ca PaLM\u3001LLaMA \u767e\u82b1\u9f50\u653e\u767e\u5bb6\u4e89\u9e23\uff0c\u5e26\u6765\u4e86\u5f53\u4e0b\u7684\u5927\u6a21\u578b\u76db\u4e16\u3002</p> <p>\u4ece\u5408\u5e76\u8fd9\u5bb6\u8c31\u6811\u7684\u4e24\u652f\uff0c\u53ef\u4ee5\u770b\u5230\u65e9\u671f\u7684 Word2Vec\u3001FastText\uff0c\u518d\u5230\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u65e9\u671f\u63a2\u7d22 ELMo\u3001ULFMiT \uff0c\u518d\u5230 Bert \u6a2a\u7a7a\u51fa\u4e16\u7ea2\u6781\u4e00\u65f6\uff0c\u5230 GPT \u5bb6\u65cf\u9ed8\u9ed8\u8015\u8018\u76f4\u5230 GPT-3 \u60ca\u8273\u767b\u573a\uff0cChatGPT \u4e00\u98de\u51b2\u5929\uff0c\u6280\u672f\u7684\u8fed\u4ee3\u4e4b\u5916\u4e5f\u53ef\u4ee5\u770b\u5230 OpenAI \u9ed8\u9ed8\u575a\u6301\u81ea\u5df1\u7684\u6280\u672f\u8def\u5f84\u6700\u7ec8\u6210\u4e3a\u76ee\u524d LLMs \u65e0\u53ef\u4e89\u8bae\u7684\u9886\u5bfc\u8005\uff0c\u770b\u5230 Google \u5bf9\u6574\u4e2a Encoder-Decoder \u6a21\u578b\u67b6\u6784\u505a\u51fa\u7684\u91cd\u5927\u7406\u8bba\u8d21\u732e\uff0c\u770b\u5230 Meta \u5bf9\u5927\u6a21\u578b\u5f00\u6e90\u4e8b\u4e1a\u7684\u6301\u7eed\u6177\u6168\u7684\u53c2\u4e0e\uff0c\u5f53\u7136\u4e5f\u770b\u5230\u4ece GPT-3 \u4e4b\u540e LLMs \u9010\u6e10\u8d8b\u5411\u4e8e\u201c\u95ed\u201d\u6e90\u7684\u8d8b\u52bf\uff0c\u672a\u6765\u5f88\u6709\u53ef\u80fd\u5927\u90e8\u5206\u7814\u7a76\u4e0d\u5f97\u4e0d\u53d8\u6210 API-Based \u7684\u7814\u7a76\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/apollo%E9%A2%84%E6%B5%8B%E8%A7%84%E5%88%92%E6%8E%A7%E5%88%B6/","title":"Apollo\u9884\u6d4b\u89c4\u5212\u63a7\u5236","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/appimage%E5%88%9B%E5%BB%BA%E5%9B%BE%E6%A0%87/","title":"Appimage\u521b\u5efa\u56fe\u6807","text":"<p>\u6709\u7684\u65f6\u5019Linux\u7684\u4e00\u4e9b\u8f6f\u4ef6\u662f\u4e0d\u5e26\u684c\u9762\u56fe\u6807\u7684\uff0c\u53ef\u80fd\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f46\u662f\u4e60\u60ef\u4e86GUI\u754c\u9762\u7684\u8bdd\u5c31\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u56fe\u6807\u6765\u52a0\u5feb\u6548\u7387\u4e86\u3002</p> <p>\u9996\u5148\u660e\u767d\u56fe\u6807\u5c55\u793a\u7684\u4e00\u4e9b\u539f\u7406\uff1a</p> <ul> <li>\u5e94\u7528\u8981\u80fd\u5c55\u793a\u76f8\u5e94\u7684\u56fe\u6807\u9700\u8981\u6709\u00a0<code>.desktop</code>\u00a0\u7684\u6587\u4ef6</li> <li>\u6240\u6709\u7684\u56fe\u6807\u6587\u4ef6\u5e94\u8be5\u653e\u5728\u00a0<code>/usr/share/applications</code>\u00a0\u6587\u4ef6\u5939\u4e0b\u624d\u80fd\u751f\u6548</li> <li>AppImage\u6587\u4ef6\u8fd0\u884c\u7684\u672c\u8d28\u662f\u5c06AppImage\u6587\u4ef6\u89e3\u538b\u5230<code>/tmp</code>\u00a0\u4e0b\u8fd0\u884c\uff0c\u800c\u5728\u8fd9\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939\u4e0b\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5230\u8be5\u8f6f\u4ef6\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u4e86<code>desktop</code>\u00a0\u6587\u4ef6\u548c<code>icon</code>\u00a0\u6587\u4ef6\u3002     \u8fd0\u884cAppImage\u6587\u4ef6\u7684\u65f6\u5019\u53ef\u4ee5\u67e5\u770b\u5230\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\u5982\u4e0b\u56fe\uff1a</li> </ul> <p></p> <p>\u770b\u5b8c\u539f\u7406\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684\u5c31\u662f\u53bb\u5199\u4e00\u4e2adesktop\u6587\u4ef6\uff0c\u7531\u4e8e\u5c1d\u8bd5\u8fc7\u76f4\u63a5\u5c06/tmp\u6587\u4ef6\u5939\u91cc\u7684desktop\u6587\u4ef6\u76f4\u63a5\u62f7\u8d1d\u51fa\u6765\u5931\u8d25\u4e86\uff08\u4f46\u662f\u53ef\u4ee5\u67e5\u770b\uff0c\u6240\u4ee5\u53ef\u4ee5\u590d\u5236\u5185\u5bb9\uff09\uff0c\u6240\u4ee5\u53ea\u80fd\u624b\u5199\u4e86\u4e00\u4e2a\u4e86\u3002</p> <p>\u8fd9\u4e2axxx.desktop\u6587\u4ef6\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u521b\u5efa\uff0c\u6700\u540e\u632a\u5230<code>/usr/share/Applications</code>\u00a0\u91cc\u9762\u5373\u53ef</p> <p>[Desktop Entry] Type=Application       # \u57fa\u672c\u56fa\u5b9a\u8fd9\u4e48\u5199 Name=\\(AppName          # \u5c55\u793a\u7684\u540d\u5b57 Exec=\\)AppImagePath     # AppImage\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84 Icon=\\(AppIconPath      # \u56fe\u6807\u7684\u8def\u5f84 Keywords=\\)AppCorrelate # \u63cf\u8ff0App\u7684\u5173\u952e\u8bcd[\u53ef\u9009\u7684]</p> <p>\u4ee5\u4e0a\u53ea\u6709<code>Name</code>\u00a0\u3001<code>Icon</code>\u00a0\u3001<code>Exec</code>\u00a0\u662f\u5fc5\u987b\u5f97\u6709\u7684\uff0c\u751a\u81f3\u53ef\u4ee5\u53ea\u6709<code>Exec</code></p> <p>\u6700\u540e\u5c06\u00a0<code>xxx.desktop</code>\u00a0\u6587\u4ef6\u632a\u5230\u5bf9\u5e94\u6587\u4ef6\u5939\u4e2d\uff1a<code>sudo mv xxx.desktop /usr/share/Applications/</code></p> <p>\u6b64\u65f6\u518d\u53bb\u67e5\u770b\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5219\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u5e94\u7528\u7684\u56fe\u6807\u4e86</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/","title":"Carla\u7b14\u8bb0","text":"<p>Carla\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u6ce8\u610f\u70b9</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#1ros_manual_controlroscv-bradge","title":"1.ros_manual_control\u4e00\u7247\u9ed1\u7684\u539f\u56e0\u53ef\u662f\u662fros\u7684cv bradge\u7684\u95ee\u9898","text":"<p>https://blog.csdn.net/qq_38606680/article/details/129118491 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#2-carlazshrcbashrc","title":"2 carla\u5b89\u88c5\u540e\u5728zshrc\u6216\u8005bashrc\u4e2d\u8bbe\u7f6e\u5982\u4e0b\u53d8\u91cf","text":"<pre><code>#miniconda\nPATH=$PATH:/home/thicv/miniconda3/bin\nexport CARLA_ROOT=/home/thicv/carla/CARLA_0.9.13 \nexport SCENARIO_RUNNER_ROOT=/home/thicv/scenario_runner-0.9.13\nPYTHONPATH=$PYTHONPATH:${CARLA_ROOT}/PythonAPI/carla\nPYTHONPATH=$PYTHONPATH:${CARLA_ROOT}/PythonAPI/carla/agents\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#3-carlapygamemanual_controlobjectsjson","title":"3 carla\u7684pygame\u7684manual_control\u5982\u679c\u8fd8\u662f\u9ed1\u5c4f\uff0c\u53ef\u80fd\u662f\u56e0\u4e3aobjects.json\u4e2d\u6ca1\u6709\u914d\u7f6e\u597d\u4f20\u611f\u5668","text":"<p>\u6700\u5c11\u9700\u8981\u4e0b\u5217\u4e09\u4e2a\u4f20\u611f\u5668\uff0cpygame\u624d\u4f1a\u6709\u663e\u793a\u753b\u9762 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#4-carla_ros_bridge","title":"4 carla_ros_bridge\u7684\u540c\u6b65\u6a21\u5f0f\u6709\u4e24\u4e2a","text":"<p>synchronous mode\u662fcarla\u4e2dclient\u548cserver\u7684\u540c\u6b65\u3002 synchronous mode wait for control command\u662f\u9700\u8981\u6709\u4e00\u4e2a\u63a7\u5236\u6307\u4ee4\u4f20\u8fc7\u6765\uff0ccarla\u624d\u4f1a\u66f4\u65b0\u4e00\u6b65\u3002\u8fd9\u4e2a\u66f4\u7cbe\u786e</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#5-carla","title":"5 carla\u6e90\u7801\u7f16\u8bd1","text":"<p>\u73af\u5883\uff1aubuntu20.04\u3001UE4\uff08carla\u7248\u672c\uff09\u3001carla0.9.14</p> <p>\u6ce8\u610f\uff1aUE4\u4e00\u5b9a\u8981\u7528carla\u7279\u4f9b\u7248\u672c\uff0c\u4e0d\u7136make launch\u65f6\u4f1a\u62a5\u9519\uff08\u57280.9.12\u7684carla\u90fd\u4f7f\u7528carla\u7279\u4f9b\u7248\u7684UE4\uff09</p> <p>\u5982\u679cclang\u627e\u4e0d\u5230\u5934\u6587\u4ef6\uff0c\u9700\u8981\u88c5\u4e00\u4e0blibstdc++-13-dev\u3002 \u5176\u4ed6\u7684\u6309\u7167\u5b98\u7f51\u4e00\u6b65\u4e00\u6b65\u8d70\u5c31\u884c\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#carla","title":"\u5f3a\u5316\u5b66\u4e60carla\u73af\u5883","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#1carla-gympygamecarla_envpy531","title":"1.carla-gym\u9047\u5230pygame\u5361\u6b7b\u7684\u60c5\u51b5\uff0c\u5728carla_env.py\u7684531\u884c","text":"<pre><code>    pygame.display.flip()\n    for enent in pygame.event.get():\n      if enent.type == pygame.QUIT:\n        pygame.quit()\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/carla%E7%AC%94%E8%AE%B0/#carla-gym","title":"\u4e0d\u7528carla-gym\u73af\u5883","text":"<p>https://github.com/hs867785578/CARLA-SB3-RL-Training-Environment</p> <p>\u53c2\u6570\u8bbe\u7f6e activate_spectator=True</p> <pre><code>        if start_carla:\n            # if \"CARLA_ROOT\" not in os.environ:\n            #     raise Exception(\"${CARLA_ROOT} has not been set!\")\n            carla_path = r\"D:\\\\carla\\\\CARLA_0.9.13\\\\WindowsNoEditor\\\\CarlaUE4.exe\"\n            launch_command = [carla_path]\n            launch_command += ['-quality_level=Low']\n            launch_command += ['-benchmark']\n            launch_command += [\"-fps=%i\" % fps]\n            launch_command += ['-RenderOffScreen']\n            launch_command += ['-prefernvidia']\n            launch_command += [f'-carla-world-port={port}']\n            print(\"Running command:\")\n            print(\" \".join(launch_command))\n            self.carla_process = subprocess.Popen(launch_command, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)\n            print(\"Waiting for CARLA to initialize\\n\")\n\n            # ./CarlaUE4.sh -quality_level=Low -benchmark -fps=15 -RenderOffScreen\n            time.sleep(5)\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","title":"Cmake\u4f7f\u7528\u7b14\u8bb0","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#1-b-buildmkdir-build-cd-buld-cmake-build-build-make-cmake-make","title":"1 \u4f7f\u7528-B build\uff08\u76f8\u5f53\u4e8e\u4e4b\u524dmkdir build &amp;&amp; cd buld &amp;&amp;cmake ..\uff09 \u548c --build build (\u76f8\u5f53\u4e8emake)\u6765\u66ff\u6362 cmake .. \u548cmake","text":"<p>\u4e5f\u5c31\u662f\u8bf4\u73b0\u4ee3cmake\u7f16\u8bd1\u9700\u8981\u53ea\u9700\u8981\u4e24\u6b65\uff0c\u4e0d\u9700\u8981\u518d\u521b\u5efa\u6587\u4ef6\u5939\u8df3\u8f6c - \u7b2c\u4e00\u6b65\u662f cmake -B build\uff0c\u79f0\u4e3a\u914d\u7f6e\u9636\u6bb5\uff08configure\uff09\uff0c\u8fd9\u65f6\u53ea\u68c0\u6d4b\u73af\u5883\u5e76\u751f\u6210\u6784\u5efa\u89c4\u5219\uff0c\u5e76\u5728 build \u76ee\u5f55\u4e0b\u751f\u6210\u672c\u5730\u6784\u5efa\u7cfb\u7edf\u80fd\u8bc6\u522b\u7684\u9879\u76ee\u6587\u4ef6\uff08Makefile \u6216\u662f .sln\uff09 - \u7b2c\u4e8c\u6b65\u662f cmake --build build\uff0c\u79f0\u4e3a\u6784\u5efa\u9636\u6bb5\uff08build\uff09\uff0c\u8fd9\u65f6\u624d\u5b9e\u9645\u8c03\u7528\u7f16\u8bd1\u5668\u6765\u7f16\u8bd1\u4ee3\u7801</p> <p>\u4e0b\u56fe\u4e2d 345\u884c\u5bf9\u5e9412 6\u884c\u5bf9\u5e9413 78\u884c\u5bf9\u5e9414 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#2","title":"2 \u547d\u4ee4\u884c\u901f\u8bb0","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#-d-configure","title":"-D \u9009\u9879\uff1a\u6307\u5b9a\u914d\u7f6e\u53d8\u91cf\uff08\u53c8\u79f0\u7f13\u5b58\u53d8\u91cf\uff09\uff0c\u5728configure\u9636\u6bb5\u4f7f\u7528","text":"<pre><code>cmake -B build -DCMAKE_INSTALL_PREFIX=/opt/openvdb-8.0\n\u2191\u8bbe\u7f6e\u5b89\u88c5\u8def\u5f84\u4e3a /opt/openvdb-8.0\uff08\u4f1a\u5b89\u88c5\u5230 /opt/openvdb-8.0/lib/libopenvdb.so\uff09\n\ncmake -B build -DCMAKE_BUILD_TYPE=Release\n\u2191\u8bbe\u7f6e\u6784\u5efa\u6a21\u5f0f\u4e3a\u53d1\u5e03\u6a21\u5f0f\uff08\u5f00\u542f\u5168\u90e8\u4f18\u5316\uff09\n\ncmake -B build   \u2190\u7b2c\u4e8c\u6b21\u914d\u7f6e\u65f6\u6ca1\u6709 -D \u53c2\u6570\uff0c\u4f46\u662f\u4e4b\u524d\u7684 -D \u8bbe\u7f6e\u7684\u53d8\u91cf\u90fd\u4f1a\u88ab\u4fdd\u7559\n\uff08\u6b64\u65f6\u7f13\u5b58\u91cc\u4ecd\u6709\u4f60\u4e4b\u524d\u5b9a\u4e49\u7684 CMAKE_BUILD_TYPE \u548c CMAKE_INSTALL_PREFIX\uff09\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#-g","title":"-G \u9009\u9879\uff1a\u6307\u5b9a\u8981\u7528\u7684\u751f\u6210\u5668","text":"<p>CMake \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4ece CMakeLists.txt \u751f\u6210\u4e0d\u540c\u7c7b\u578b\u7684\u6784\u5efa\u7cfb\u7edf\uff08\u6bd4\u5982 Linux \u7684 make\uff0cWindows \u7684 MSBuild\uff09\uff0c\u4ece\u800c\u8ba9\u6784\u5efa\u89c4\u5219\u53ef\u4ee5\u53ea\u5199\u4e00\u4efd\uff0c\u8de8\u5e73\u53f0\u4f7f\u7528\u3002</p> <p>\u8fc7\u53bb\u7684\u8f6f\u4ef6\uff08\u4f8b\u5982 TBB\uff09\u8981\u8de8\u5e73\u53f0\uff0c\u53ea\u597d Makefile \u7684\u6784\u5efa\u89c4\u5219\u5199\u4e00\u4efd\uff0cMSBuild \u4e5f\u5199\u4e00\u4efd\u3002 \u73b0\u5728\u53ea\u9700\u8981\u5199\u4e00\u6b21 CMakeLists.txt\uff0c\u4ed6\u4f1a\u89c6\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u751f\u6210\u4e0d\u540c\u6784\u5efa\u7cfb\u7edf\u7684\u89c4\u5219\u6587\u4ef6\u3002 \u548c\u64cd\u4f5c\u7cfb\u7edf\u7ed1\u5b9a\u7684\u6784\u5efa\u7cfb\u7edf\uff08make\u3001MSBuild\uff09\u79f0\u4e3a\u672c\u5730\u6784\u5efa\u7cfb\u7edf\uff08native buildsystem\uff09\u3002 \u8d1f\u8d23\u4ece CMakeLists.txt \u751f\u6210\u672c\u5730\u6784\u5efa\u7cfb\u7edf\u6784\u5efa\u89c4\u5219\u6587\u4ef6\u7684\uff0c\u79f0\u4e3a\u751f\u6210\u5668\uff08generator\uff09\u3002 eg\uff1a</p> <ul> <li>Linux \u7cfb\u7edf\u4e0a\u7684 CMake \u9ed8\u8ba4\u7528\u662f Unix Makefiles \u751f\u6210\u5668\uff1b</li> <li>Windows \u7cfb\u7edf\u9ed8\u8ba4\u662f Visual Studio 2019 \u751f\u6210\u5668\uff1b</li> <li>MacOS \u7cfb\u7edf\u9ed8\u8ba4\u662f Xcode \u751f\u6210\u5668\u3002 \u53ef\u4ee5\u7528 -G \u53c2\u6570\u6539\u7528\u522b\u7684\u751f\u6210\u5668\uff0c</li> </ul> <p>\u4f8b\u5982 cmake -GNinja \u4f1a\u751f\u6210 Ninja \u8fd9\u4e2a\u6784\u5efa\u7cfb\u7edf\u7684\u6784\u5efa\u89c4\u5219\u3002Ninja \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\uff0c\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u7cfb\u7edf\uff0cLinux\u3001Windows\u3001MacOS \u4e0a\u90fd\u53ef\u4ee5\u7528\u3002 Ninja \u53ef\u4ee5\u4ece\u5305\u7ba1\u7406\u5668\u91cc\u5b89\u88c5\uff0c\u6ca1\u6709\u5305\u7ba1\u7406\u5668\u7684 Windows \u53ef\u4ee5\u7528 Python \u7684\u5305\u7ba1\u7406\u5668\u5b89\u88c5\uff1a pip install ninja CMake \u4e5f\u53ef\u4ee5\u901a\u8fc7 pip install cmake \u5b89\u88c5</p> <p>\u4e8b\u5b9e\u4e0a\uff0cMSBuild \u662f\u5355\u6838\u5fc3\u7684\u6784\u5efa\u7cfb\u7edf\uff0cMakefile \u867d\u7136\u591a\u6838\u5fc3\u4f46\u56e0\u5386\u53f2\u517c\u5bb9\u539f\u56e0\u6548\u7387\u4e00\u822c\u3002 \u800c Ninja \u5219\u662f\u4e13\u4e3a\u6027\u80fd\u4f18\u5316\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u4ed6\u548c CMake \u7ed3\u5408\u90fd\u662f\u884c\u4e1a\u6807\u51c6\u4e86\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#ninja-makefile","title":"Ninja \u548c Makefile \u7b80\u5355\u7684\u5bf9\u6bd4","text":"<p>\u6027\u80fd\u4e0a\uff1aNinja &gt; Makefile &gt; MSBuild Makefile \u542f\u52a8\u65f6\u4f1a\u628a\u6bcf\u4e2a\u6587\u4ef6\u90fd\u68c0\u6d4b\u4e00\u904d\uff0c\u6d6a\u8d39\u5f88\u591a\u65f6\u95f4\u3002 \u7279\u522b\u662f\u6709\u5f88\u591a\u6587\u4ef6\uff0c\u4f46\u662f\u5b9e\u9645\u9700\u8981\u6784\u5efa\u7684\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\uff0c\u4ece\u800c\u662f I/O Bound \u7684\u65f6\u5019\uff0cNinja \u7684\u901f\u5ea6\u63d0\u5347\u5c31\u5f88\u660e\u663e\u3002 \u7136\u800c\u67d0\u4e9b\u4e13\u5229\u516c\u53f8\u7684 CUDA toolkit \u5728 Windows \u4e0a\u53ea\u5141\u8bb8\u7528 MSBuild \u6784\u5efa\uff0c\u4e0d\u80fd\u7528 Ninja</p> <p>-E: CMake\u547d\u4ee4\u884c\u6a21\u5f0f\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#3-target","title":"3 \u5584\u7528target","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#4","title":"4 \u5e38\u7528\u53d8\u91cf","text":"<p>CMAKE_BUILD_TYPE \u662f CMake \u4e2d\u4e00\u4e2a\u7279\u6b8a\u7684\u53d8\u91cf\uff0c\u7528\u4e8e\u63a7\u5236\u6784\u5efa\u7c7b\u578b\uff0c\u4ed6\u7684\u503c\u53ef\u4ee5\u662f\uff1a <pre><code>Debug \u8c03\u8bd5\u6a21\u5f0f\uff0c\u5b8c\u5168\u4e0d\u4f18\u5316\uff0c\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u65b9\u4fbf\u8c03\u8bd5\u7a0b\u5e8f\nRelease \u53d1\u5e03\u6a21\u5f0f\uff0c\u4f18\u5316\u7a0b\u5ea6\u6700\u9ad8\uff0c\u6027\u80fd\u6700\u4f73\uff0c\u4f46\u662f\u7f16\u8bd1\u6bd4 Debug \u6162\nMinSizeRel \u6700\u5c0f\u4f53\u79ef\u53d1\u5e03\uff0c\u751f\u6210\u7684\u6587\u4ef6\u6bd4 Release \u66f4\u5c0f\uff0c\u4e0d\u5b8c\u5168\u4f18\u5316\uff0c\u51cf\u5c11\u4e8c\u8fdb\u5236\u4f53\u79ef\nRelWithDebInfo \u5e26\u8c03\u8bd5\u4fe1\u606f\u53d1\u5e03\uff0c\u751f\u6210\u7684\u6587\u4ef6\u6bd4 Release \u66f4\u5927\uff0c\u56e0\u4e3a\u5e26\u6709\u8c03\u8bd5\u7684\u7b26\u53f7\u4fe1\u606f\n</code></pre></p> <p>CMAKE_CURRENT_SOURCE_DIR \u8868\u793a\u5f53\u524d\u6e90\u7801\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982 ~/hellocmake CMAKE_CURRENT_BINARY_DIR \u8868\u793a\u5f53\u524d\u8f93\u51fa\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982 ~/hellocmake/build</p> <p>CMAKE_SOURCE_DIR \u8868\u793a\u6700\u4e3a\u5916\u5c42 CMakeLists.txt \u7684\u6e90\u7801\u6839\u76ee\u5f55\u3002 CMAKE_BINARY_DIR\uff1a\u6839\u9879\u76ee\u8f93\u51fa\u8def\u5f84\uff08\u5b58\u653emain.exe\u7684\u5730\u65b9\uff09</p> <p>PROJECT_SOURCE_DIR\uff1a\u5f53\u524d\u9879\u76ee\u6e90\u7801\u8def\u5f84\uff08\u5b58\u653emain.cpp\u7684\u5730\u65b9\uff09 PROJECT_BINARY_DIR\uff1a\u5f53\u524d\u9879\u76ee\u8f93\u51fa\u8def\u5f84\uff08\u5b58\u653emain.exe\u7684\u5730\u65b9\uff09</p> <p>\u5982\u679c\u6709\u5f88\u591a\u9879\u76eeproject\uff0c\u5219\u53ef\u4ee5\u7528\u7c7b\u4f3chellocmake_SOURCE_DIR\u7b49\u8fd9\u6837\u7684\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u4e0eproject\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002 </p> <p>\u5b50\u6a21\u5757\u91cc\u4e5f\u53ef\u4ee5\u7528 project \u547d\u4ee4\uff0c\u5c06\u5f53\u524d\u76ee\u5f55\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5b50\u9879\u76ee,\u8fd9\u6837\u4e00\u6765 PROJECT_SOURCE_DIR \u5c31\u4f1a\u662f\u5b50\u6a21\u5757\u7684\u6e90\u7801\u76ee\u5f55\u800c\u4e0d\u662f\u5916\u5c42\u4e86\u3002\u8fd9\u65f6\u5019 CMake \u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u5b50\u6a21\u5757\u662f\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\uff0c\u4f1a\u989d\u5916\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u3002\u4ed6\u7684\u6784\u5efa\u76ee\u5f55 PROJECT_BINARY_DIR \u4e5f\u4f1a\u53d8\u6210 build/&lt;\u6e90\u7801\u76f8\u5bf9\u8def\u5f84&gt;\u3002</p> <p>project(\u9879\u76ee\u540d LANGUAGES CXX) \u6307\u5b9a\u4e86\u8be5\u9879\u76ee\u4f7f\u7528\u4e86\u54ea\u4e9b\u7f16\u7a0b\u8bed\u8a00\u3002 CMAKE_CXX_STANDARD \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u8981\u7528\u7684 C++ \u6807\u51c6\u3002     \u6bd4\u5982\u9700\u8981 C++17 \u90a3\u5c31\u8bbe\u4e3a 17\uff0c\u9700\u8981 C++23 \u5c31\u8bbe\u4e3a 23\u3002\u6ce8\u610f\u4e0d\u8981\u7528-std=c++17\u6765\u8bbe\u7f6e\u6807\u51c6\uff0c\u56e0\u4e3a\u4ed6\u53ea\u9002\u7528\u4e8elinux\u3002 CMAKE_CXX_STANDARD_REQUIRED \u662f BOOL \u7c7b\u578b\uff0c\u53ef\u4ee5\u4e3a ON \u6216 OFF\uff0c\u9ed8\u8ba4 OFF\u3002     \u4ed6\u8868\u793a\u662f\u5426\u4e00\u5b9a\u8981\u652f\u6301\u4f60\u6307\u5b9a\u7684 C++ \u6807\u51c6\uff1a\u5982\u679c\u4e3a OFF \u5219 CMake \u68c0\u6d4b\u5230\u7f16\u8bd1\u5668\u4e0d\u652f\u6301 C++17 \u65f6\u4e0d\u62a5\u9519\uff0c\u800c\u662f\u9ed8\u9ed8\u8c03\u4f4e\u5230 C++14 \u7ed9\u4f60\u7528\uff1b\u4e3a ON \u5219\u53d1\u73b0\u4e0d\u652f\u6301\u62a5\u9519\uff0c\u66f4\u5b89\u5168\u3002 CMAKE_CXX_EXTENSIONS \u4e5f\u662f BOOL \u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a ON\u3002     \u8bbe\u4e3a ON \u8868\u793a\u542f\u7528 GCC \u7279\u6709\u7684\u4e00\u4e9b\u6269\u5c55\u529f\u80fd\uff1bOFF \u5219\u5173\u95ed GCC \u7684\u6269\u5c55\u529f\u80fd\uff0c\u53ea\u4f7f\u7528\u6807\u51c6\u7684 C++\u3002     g++ -std=c++17\uff0c     g++ -std=gun++17\uff0cgcc\u5939\u5e26\u4e86\u4e00\u4e9b\u79c1\u8d27\uff0c\u82e5\u53ea\u7528gcc\u7684\u8bdd\uff0c\u5e76\u4f7f\u7528\u5176\u7279\u6027\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u4e3aON </p> <p>\u53ef\u4ee5\u7528set_target_properties \u4e3a\u6bcf\u4e2a\u9879\u76ee\u5f53\u90fd\u8bbe\u7f6e\u7f16\u8bd1\u7684\u5c5e\u6027\uff0c\u4f1a\u8986\u76d6\u6389\u4e0a\u8ff0\u7684\u5168\u5c40\u5c5e\u6027</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#5-find_library","title":"5 find_library","text":"<p>\u4e0efind_package\u4e0d\u540c\uff0cfind_library\u66f4\u9002\u7528\u4e8e\u6ca1\u6709\u63d0\u4f9bcmake\u914d\u7f6e\u6587\u4ef6\u7684\u4e00\u4e9b\u5e93\uff0c\u6bd4\u5982apt\u5b89\u88c5\u7684golg\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/git%E4%BD%BF%E7%94%A8/","title":"Git\u4f7f\u7528","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/git%E4%BD%BF%E7%94%A8/#1","title":"1 \u5173\u4e8e\u5b50\u6a21\u5757","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/git%E4%BD%BF%E7%94%A8/#11","title":"1.1 \u5982\u679c\u4e0b\u8f7d\u5b8c\u4e4b\u540e\u6ca1\u6709\u5b50\u6a21\u5757","text":"<pre><code>git submodule update --init --recursive\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/git%E4%BD%BF%E7%94%A8/#12-clone","title":"1.2 clone\u9636\u6bb5\u5c31\u628a\u5b50\u6a21\u5757\u4e0b\u8f7d\u8fc7\u6765","text":"<pre><code>git clone --recursive https://github.com/caffe2/caffe2\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/ilqr%E5%92%8Cddp%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%BA%E5%88%AB/","title":"Ilqr\u548cddp\u7684\u6700\u5927\u533a\u522b","text":"<p>\u9996\u5148\u4e24\u8005\u90fd\u662f\u9002\u7528\u4e8e\u975e\u7ebf\u6027\u6a21\u578b\u7684\uff0ccost\u4e5f\u662f\u975e\u7ebf\u6027\u7684</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/ilqr%E5%92%8Cddp%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%BA%E5%88%AB/#ilqr","title":"ILQR","text":"<p>iLQR\u662f\u5c06\u6a21\u578b\u4e00\u9636\u7ebf\u6027\u5316\uff0ccost function \u4e8c\u9636\u6cf0\u52d2\u8fd1\u4f3c\uff0c\u7136\u540e\u5229\u7528LQR\u6c42\u6781\u503c\uff0c\u5728\u65b0\u6781\u503c\u7684\u6761\u4ef6\u4e0b\uff0c \u518d\u6b21\u5c06\u73af\u5883\u4e00\u9636\u7ebf\u6027\u5316\uff0ccost function \u4e8c\u9636\u6cf0\u52d2\u8fd1\u4f3c\uff0c\u6c42\u6781\u503c\uff0c\u6307\u5bfc\u635f\u5931\u51fd\u6570\u6536\u655b\uff1b</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/ilqr%E5%92%8Cddp%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%BA%E5%88%AB/#ddp","title":"DDP","text":"<p>DDP\u662f\u5c06\u6a21\u578b\u4e8c\u9636\u7ebf\u6027\u5316\uff0ccost function \u4e8c\u9636\u6cf0\u52d2\u8fd1\u4f3c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/intersection%20_%E5%8D%81%E5%AD%97%E8%B7%AF%E5%8F%A3/","title":"Intersection  \u5341\u5b57\u8def\u53e3","text":"<p>intersection :\u5341\u5b57\u8def\u53e3 </p> <p></p> <p></p> <p></p> <p> V2X</p> <p>C-ITS:\u534f\u540c\u9a7e\u9a76\u667a\u80fd\u4ea4\u901a\u7cfb\u7edf Platoon\u00a0control</p> <p></p> <p>Hierarchical Optimal Coordination Framework for Connected and Automated Vehicles in Multiple Intersections</p> <p>\u8f66\u8def\u901a\u4fe1 \u8f66\u8def\u534f\u540c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/julia%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/","title":"Julia\u7684\u5305\u7ba1\u7406","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/julia%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/#1condajulia","title":"1\u4f7f\u7528conda\u7ba1\u7406julia\u7248\u672c","text":"<pre><code>\u521b\u5efa\u73af\u5883\uff1aconda create -n julia1.7\n\u6fc0\u6d3b\u73af\u5883\uff1a source activate &amp;&amp; conda activate julia1.7\n\u5b89\u88c5\u7279\u5b9a\u7248\u672c\u7684julia\uff1a conda install -c conda-forge julia=1.7\n\u5b89\u88c5\u5b8c\u6210\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/julia%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/#julia","title":"\u4f7f\u7528julia","text":"<pre><code>\u67e5\u770bjulia\u7684\u4f4d\u7f6e\uff1awhich julia\n\u6fc0\u6d3bjulia\uff1ajulia\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/julia%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/#julia_1","title":"julia\u5305\u7ba1\u7406","text":"<pre><code>Pkg.add\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/kernel%20PCA/","title":"kernel PCA","text":"<p>The result of kernel PCA can be seen as follows</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/logistic%20regression%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%81%E8%A7%A3/","title":"Logistic regression\u7684\u4e00\u4e9b\u89c1\u89e3","text":"<p>logistic regression \u5176\u5b9e\u89e3\u51b3\u7684\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898(\u4e0d\u662f\u56de\u5f52\u95ee\u9898)\uff0c\u4e4b\u6240\u4ee5\u53eb\u903b\u8f91\u56de\u5f52\u662f\u6709\u4e00\u4e9b\u5386\u53f2\u539f\u56e0\u5b58\u5728\u7684\uff0c\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u5c31\u662f\uff0clogistic regression\u7684\u8f93\u51fa\u5176\u5b9e\u662f0-1\u7684\u8fde\u7eed\u503c\uff0c\uff08\u7ebf\u6027\u65b9\u7a0b+sigmoid\uff09\u901a\u8fc7\u6bd4\u8f83\u8f93\u51fa\u4e0e0.5\u7684\u5927\u5c0f\u6765\u8fdb\u884c\u5206\u7c7b\u3002</p> <p>\u800csoftmax\u7528\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\u65f6\uff0c\u4fdd\u8bc1\u7684\u8f93\u51fa\u4e4b\u548c\u4e3a1\uff0c\u5f53\u65f6\u53ef\u80fd\u67093\u30015\u30017....\u4e2a\u8f93\u51fa\uff0c\u8fd9\u53ef\u4ee5\u770b\u4f5c\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u6211\u4eec\u9009\u51fa\u6700\u5927\u503c\u5373\u4e3a\u7ed9\u51fa\u7684\u9884\u6d4b\u7c7b\u522b\uff08\u7c7b\u6bd4logistic regression\uff0clogistic regression\u7684\u8f93\u51fa\u662f\u4e24\u7ef4\uff0c\u53ea\u80fd\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u4e24\u4e2a\u8f93\u51fa\u540c\u6837\u53ef\u4ee5\u770b\u4f5c\u4e24\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff09</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/mardown%E8%BF%9B%E9%98%B6/","title":"Mardown\u8fdb\u9636","text":"<p>\u5feb\u6377\u952e:</p> <pre><code>\u9ad8\u4eae\uff1actrl+h\n\u52a0\u7c97\uff1actrl+b\n\u503e\u659c\uff1actrl+i\n\u5220\u9664\u7ebf\uff1actrl+d\n\u4ee3\u529e\u4e8b\u9879\uff1actrl+l\n\u4ee3\u7801\uff1a ``` code  ```\n\u8868\u683c\uff1a|aaa|aaa|aaa|\n        |:---|---:|---|      \uff1a\u4ee3\u8868\u5bf9\u9f50\n        |asd|asd|asd|\n\u7f29\u8fdb\uff1atab\n\u70b9\u6392\u5217\uff1a- \n\u5e8f\u53f7\u6392\u5217\uff1a 1. \n\u94fe\u63a5\uff1a[\u6807\u9898](\u7f51\u5740)\n\u5206\u5272\u7ebf\uff1a***\n\u989c\u8272\uff1a&lt;font color=red&gt;   &lt;/font&gt;\n\u6587\u672c\uff1a`asd`\n\u884c\u5185\u516c\u5f0f\uff1a $\u516c\u5f0f$\n\u884c\u95f4\u516c\u5f0f:  $$ \u516c\u5f0f $$\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/","title":"Numpy\u4e2d\u7684\u4e58\u6cd5\uff08\u5bf9\u6570\u7ec4\u548c\u77e9\u9635\uff09","text":"<p>\u6570\u7ec4\uff1anp.array \u77e9\u9635\uff1anp.mat</p> <p>numpy\u4e2d\u8868\u793a\u4e58\u6cd5\u6709 * \u3001dot ()\u3001multiply()\u3001matmul()\u3001@</p> <p>np.matmul()\u51fd\u6570\u540c @\u7b26\u53f7  \u5927\u90e8\u5206\u60c5\u51b5\u4e0bnp.matmul()\u540cnp.dot()\u51fd\u6570\uff0c\u4f46\u662f\u4e5f\u6709\u533a\u522b\uff1a</p> <p>\u8003\u86512\u7ef4\u4ee5\u4e0aarray\uff1a matmul()\u548cnp.dot() </p> <p> </p> <p>\u603b\u7ed3\uff0c\uff1a 1. \u6570\u7ec4\u4e58\u6cd5\u9ed8\u8ba4\u7684\u662f\u70b9\u4e58\uff0c\u77e9\u9635\u9ed8\u8ba4\u7684\u662f\u77e9\u9635\u4e58\u6cd5\uff0c\u6df7\u5408\u5728\u4e00\u8d77\u9ed8\u8ba4\u7684\u662f\u77e9\u9635\u4e58\u6cd5\uff0c 2. multiply\u8f6c\u5316\u4e3a\u5bf9\u5e94\u5143\u7d20\u7684\u4e58\u79ef\uff0c 3. dot\uff08d,f\uff09\u4f1a\u8f6c\u5316\u4e3a\u77e9\u9635\u7684\u4e58\u79ef\uff0c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#1-npmultiply","title":"1 np.multiply()\u51fd\u6570\uff0c\u77e9\u9635\u548c\u6570\u7ec4\u90fd\u662f\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58","text":"<pre><code>\u6570\u7ec4\u548c\u77e9\u9635\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\uff0c\u8f93\u51fa\u4e0e\u76f8\u4e58\u6570\u7ec4/\u77e9\u9635\u7684\u5927\u5c0f\u4e00\u81f4\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#11","title":"1.1 \u6570\u7ec4\u573a\u666f","text":"<pre><code>import numpy as np\n\na = np.array([[1, 2],\n             [3,4]])\nb = np.array([[5, 6],\n              [7, 8]])\nc = np.multiply(a, b)\nprint (c)\n\u8f93\u51fa\uff1a\n[[ 5 12]   #\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\n [21 32]]\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#12","title":"1.2\u77e9\u9635\u573a\u666f","text":"<pre><code>a = np.array([[1, 2],\n             [3,4]])\na = np.mat(a)\nb = np.array([[5, 6],\n              [7, 8]])\nb = np.mat(b)\nc = np.multiply(a, b)\nprint (c)\n\u8f93\u51fa\uff1a\n[[ 5 12]  #\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\n [21 32]]\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#2-npdot","title":"2 np.dot()\u51fd\u6570\uff0c\u77e9\u9635\u548c\u6570\u7ec4\u90fd\u662f\u77e9\u9635\u76f8\u4e58","text":"<pre><code>\u5bf9\u4e8e\u79e9\u4e3a1\u7684\u6570\u7ec4\uff0c\u6267\u884c\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\uff0c\u7136\u540e\u518d\u76f8\u52a0\n\n\u5bf9\u4e8e\u79e9\u4e0d\u4e3a1\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6267\u884c\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#21","title":"2.1\u6570\u7ec4\u573a\u666f","text":"<p>2.1.1\u6570\u7ec4\u79e9\u4e3a1</p> <pre><code>a = np.array([1,2])\nb = np.array([3,4])\nc = np.dot(a,b)\nprint (c)\n\u8f93\u51fa\uff1a\n11    #\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u518d\u6c42\u548c\n</code></pre> <p>2.1.2\u6570\u7ec4\u79e9\u4e0d\u4e3a1</p> <pre><code>a = np.array([[1, 2],\n             [3,4]])\nb = np.array([[5, 6],\n              [7, 8]])\nc = np.dot(a, b)\nprint (c)\n\u8f93\u51fa\uff1a\n[[19 22]    #\u6570\u7ec4\u6267\u884c\u77e9\u9635\u76f8\u4e58\u8fd0\u7b97\n [43 50]]\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#22","title":"2.2\u77e9\u9635\u573a\u666f","text":"<pre><code>a = np.array([[1, 2],\n             [3,4]])\na = np.mat(a)\nb = np.array([[5, 6],\n              [7, 8]])\nb = np.mat(b)\nc = np.dot(a, b)\nprint (c)\n\u8f93\u51fa\uff1a\n[[19 22]    #\u6267\u884c\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\n [43 50]]\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#3","title":"3\uff08*\uff09\u8fd0\u7b97\uff0c\u6570\u7ec4\u9010\u5143\u7d20\u76f8\u4e58\uff0c\u77e9\u9635\u4e3a\u77e9\u9635\u76f8\u4e58","text":"<pre><code>\u5bf9\u6570\u7ec4\u6267\u884c\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\n\n\u5bf9\u77e9\u9635\u6267\u884c\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#31","title":"3.1\u6570\u7ec4\u573a\u666f","text":"<pre><code>a = np.array([[1, 2],\n             [3,4]])\nb = np.array([[5, 6],\n              [7, 8]])\nc = a * b\nprint (c)\n\u8f93\u51fa\uff1a\n[[ 5 12]    #\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\n [21 32]]\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#32","title":"3.2\u77e9\u9635\u573a\u666f","text":"<pre><code>a = np.array([[1, 2],\n             [3,4]])\na = np.mat(a)\nb = np.array([[5, 6],\n              [7, 8]])\nb = np.mat(b)\nc = a * b\nprint (c)\n\u8f93\u51fa\uff1a\n[[19 22]    #\u6267\u884c\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\n [43 50]]\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/numpy%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95%EF%BC%88%E5%AF%B9%E6%95%B0%E7%BB%84%E5%92%8C%E7%9F%A9%E9%98%B5%EF%BC%89/#4-npmatmul-npdot","title":"4 np.matmul()\u51fd\u6570\u540c @\u7b26\u53f7 \u540cnp.dot","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/nuplan%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/","title":"Nuplan\u6570\u636e\u96c6\u7684\u4f7f\u7528","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/nuplan%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/#1","title":"1  \u4e0b\u8f7d\u6570\u636e\u96c6","text":"<p>\u5148\u767b\u5f55\uff1a</p> <p>\u6700\u5c11\u4e0b\u8f7d\u4e24\u4e2a\u6570\u636e\u96c6\uff1amap\u548cmini split </p> <p>\u5728home\u4e0b\u65b0\u5efa\u6587\u4ef6\u5939nuplan/dataset/maps\u548cnuplan/dataset/nuplan-v1.1/splits/mini </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/nuplan%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/#2","title":"2 \u4e0b\u8f7d\u5f00\u53d1\u5de5\u5177\u7bb1","text":"<pre><code>cd /home\ngit clone https://github.com/motional/nuplan-devkit.git\ncd nuplan-devkit\n#\u521b\u5efaconda\u73af\u5883\uff08\u8bb0\u5f97\u628arequirements_torch.txt\u4e2d\u7684torch\u7248\u672c\u6362\u62101.13.0+cu116\uff0ctorhvision0.14.0+cu116\uff09\u4e0d\u7136\u8bad\u7ec3\u4f1a\u62a5\u9519\nconda env create -f environment.yml\nconda activate nuplan\n#\u5b89\u88c5\u5de5\u5177\u5305\ncd ~/nuplan-devkit\npip install -e .\n</code></pre> <p>\u73af\u5883\u53d8\u91cf\uff1a export NUPLAN_DATA_ROOT=\"\\(HOME/nuplan/dataset\" export NUPLAN_MAPS_ROOT=\"\\)HOME/nuplan/dataset/maps\" export NUPLAN_EXP_ROOT=\"\\(HOME/nuplan/exp\" export NUPLAN_DB_FILES=\"\\)HOME/nuplan/datase/nuplan-v1.1/splits/mini\"</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/nuplan%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/#3-jupyter","title":"3 \u8fd0\u884cjupyter\u6559\u7a0b","text":"<p>\u5728\u8fd0\u884cnuplan_framework.ipynb\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0oom\u7684\u73b0\u8c61\uff08\u6700\u597d\u7528btop\u76d1\u63a7\u4e00\u4e0b\uff09\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/nuplan%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/#31swapoom","title":"3.1\u6269\u5c55swap\u5206\u533a\u6765\u89e3\u51b3oom","text":"<p>\u6700\u76f4\u63a5\u7684\u89e3\u51b3\u529e\u6cd5\uff1a\u589e\u52a0swap\u5206\u533a\u5927\u5c0f\uff0c\u5982\u679c\u539f\u6709\u5185\u5b58\u662f16G\uff0c\u90a3\u4e48swap\u5206\u533a\u8bbe\u7f6e\u4e3a32G</p> <p>nuplan\u6700\u9ad8\u53ef\u80fd\u4f1a\u5360\u752827G\u5185\u5b58</p> <p><pre><code># \u5c06\u73b0\u6709swap\u79fb\u52a8\u5230\u4e3b\u5185\u5b58\uff0c\u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\nsudo swapoff -a\n\n# \u521b\u5efa\u65b0\u7684swap\u6587\u4ef6\uff0cbs\u00d7count=\u6700\u540e\u751f\u6210\u7684swap\u5927\u5c0f\uff0c\u8fd9\u91cc\u8bbe\u7f6e32G\nsudo dd if=/dev/zero of=/swapfile bs=1G count=32\n\n# \u8bbe\u7f6e\u6743\u9650\nsudo chmod 0600 /swapfile\n\n# \u8bbe\u7f6eswap\nsudo mkswap /swapfile\n\n# \u6253\u5f00swap\nsudo swapon /swapfile\n\n# \u68c0\u67e5\u8bbe\u7f6e\u662f\u5426\u6709\u6548\nbtop\n\n# \u8bbe\u7f6e\u6c38\u4e45\u6709\u6548\nsudo gedit /etc/fstab\n# \u5728\u672b\u5c3e\u884c\u52a0\u4e0a \n# /swapfile swap swap sw 0 0\n</code></pre> \u5237\u65b0swap\u5206\u533a</p> <pre><code>sudo swapoff -a\nsudo swapon-a\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/nuplan%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/#32-ray","title":"3.2 \u901a\u8fc7\u4e0d\u9002\u7528ray\u6765\u89e3\u51b3\uff08\u6ca1\u7ecf\u8fc7\u8bd5\u9a8c\u3001\u53ea\u662f\u7406\u8bba\u4e0a\u7684\uff09","text":"<p>'worker=single_machine_thread_pool',    'worker.use_process_pool=true', https://github.com/motional/nuplan-devkit/issues/237</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/occupancy%20network/","title":"Occupancy network","text":"<p>1.TPVFormer  2302 https://github.com/wzzheng/TPVFormer \u8bad\u7ec3\u8d44\u6e90\uff1a</p> <p>8\u5f20A100\uff0cbatchsize 8\uff0c\u8bad\u7ec324\u4e2aepochs\u3002\u5927\u6982\u4e24\u5929</p> <p>2.OpenOccupancy  2303 03991</p> <p>3.SurroundOcc: Multi-Camera 3D Occupancy Prediction  for Autonomous Driving 2303 09551 https://weiyithu.github.io/SurroundOcc/</p> <p>4.occformer 2304 zhangyp15/OccFormer: OccFormer: Dual-path Transformer for Vision-based 3D Semantic Occupancy Prediction (github.com)</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/openGL%20DIrectX%20%E5%92%8Cunity%20unreal%E8%BF%99%E4%BA%9B%E5%BC%95%E6%93%8E%E7%9A%84%E5%85%B3%E7%B3%BB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/","title":"openGL DIrectX \u548cunity unreal\u8fd9\u4e9b\u5f15\u64ce\u7684\u5173\u7cfb\u662f\u4ec0\u4e48\uff1f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/openGL%20DIrectX%20%E5%92%8Cunity%20unreal%E8%BF%99%E4%BA%9B%E5%BC%95%E6%93%8E%E7%9A%84%E5%85%B3%E7%B3%BB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/#_1","title":"\u89e3\u7b54\uff1a","text":"<p>OpenGL\u548cDirectX\u90fd\u662f\u5e95\u5c42\u76843D\u6e32\u67d3\u63a5\u53e3\uff0c\u4e00\u822c\u63a5\u53e3\u7684\u5b9e\u73b0\u7531\u663e\u5361\u5382\u5546\u7684\u9a71\u52a8\u63d0\u4f9b\u3002\u53ea\u4e0d\u8fc7OpenGL\u662f\u5f00\u6e90\u8de8\u5e73\u53f0\u7684\uff0cDirectX\u662f\u5fae\u8f6f\u72ec\u5360\u7684\u3002OpenGL\u548cDirectX\u662f\u76ee\u524d\u6bd4\u8f83\u901a\u7528\u7684\u5e95\u5c42\u5e93\uff0c\u5404\u5927\u663e\u5361\u5382\u5546\u4e5f\u4f1a\u4e3a\u6b64\u5728\u4e0d\u540c\u7684\u663e\u5361\u4e0a\u7f16\u5199\u5bf9\u5e94\u7684driver\uff0c\u8fd9\u4e9bdriver\u8d1f\u8d23\u505a\u6700\u7ec8\u7684\u673a\u5668specific\u7684\u5b9e\u73b0\u3002</p> <p>Unity\u662f\u4e00\u4e2a\u5f15\u64ce\uff0c\u5f15\u64ce\u91cc\u9762\u5305\u542b\u5f88\u591a\u6a21\u5757\uff0c\u6bd4\u5982\u6e32\u67d3\u6a21\u5757\uff0c\u58f0\u97f3\u6a21\u5757\uff0c\u7269\u7406\u6a21\u5757\u7b49\u7b49\u3002\u8fd9\u91cc\u7684\u6e32\u67d3\u6a21\u5757\u5728\u4e0a\u5c42\u4f1a\u6709\u4e2a\u901a\u7528\u7684API\u5c42\u4f9b\u8c03\u7528\uff0c\u800c\u65e0\u9700\u7ba1\u5e95\u5c42\u5230\u5e95\u662f\u8dd1\u4e86opengl\u7684\u5b9e\u73b0\u8fd8\u662fdirectx\u7684\u5b9e\u73b0\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/openGL%20DIrectX%20%E5%92%8Cunity%20unreal%E8%BF%99%E4%BA%9B%E5%BC%95%E6%93%8E%E7%9A%84%E5%85%B3%E7%B3%BB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/#ubuntuopengl","title":"ubuntu\u5347\u7ea7opengl","text":"<p>Ubuntu\u9ed8\u8ba4\u4f7f\u7528\u7684OpenGL\u7248\u672c\u4e0e\u60a8\u7684\u663e\u5361\u9a71\u52a8\u7a0b\u5e8f\u76f8\u5173\u3002\u5982\u679c\u60a8\u60f3\u5347\u7ea7OpenGL\u7248\u672c\uff0c\u60a8\u53ef\u4ee5\u66f4\u65b0\u60a8\u7684\u663e\u5361\u9a71\u52a8\u7a0b\u5e8f\u3002</p> <p>\u8981\u66f4\u65b0\u663e\u5361\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8bf7\u6253\u5f00\u300c\u8f6f\u4ef6\u548c\u66f4\u65b0\u300d\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u9009\u62e9\u300c\u9644\u52a0\u9a71\u52a8\u300d\u6807\u7b7e\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u770b\u5230\u53ef\u7528\u7684\u9a71\u52a8\u7a0b\u5e8f\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u6700\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f\u5e76\u5b89\u88c5\u5b83\u3002</p> <p>OpenGL\u6240\u63d0\u4f9b\u7684\u53ea\u662f\u63a5\u53e3\uff0c\u6211\u4eec\u6240\u8c03\u7528\u7684\u4e5f\u53ea\u662f\u63a5\u53e3\uff1b\u5177\u4f53\u7684\u5b9e\u73b0\u7531\u663e\u5361\u751f\u4ea7\u5546\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u6240\u63d0\u4f9b\u7684\u663e\u5361\u9a71\u52a8\uff1b\u6211\u4eec\u4f7f\u7528OpenGL\u53ef\u4ee5\u8c03\u7528API\uff08\u8fd9\u4e2aapi\u4ec5\u4ec5\u662f\u51fd\u6570\u540d\uff0c\u4ec5\u4ec5\u662f\u63a5\u53e3\u800c\u5df2\uff09\u53bb\u7ed8\u5236\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u4f46\u662f\u786c\u4ef6\u5982\u4f55\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u662f\u7528\u6765\u7ed8\u5236\u4e09\u89d2\u5f62\u7684\uff0c\u8fd9\u4e00\u90e8\u5206\u5c31\u662f\u7531\u663e\u5361\u9a71\u52a8\u6765\u5b8c\u6210\uff0c\u663e\u5361\u9a71\u52a8\u91cc\u4f1a\u63d0\u4f9b\u8fd9\u4e2a\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6ca1\u6709\u5b89\u88c5\u663e\u5361\u9a71\u52a8\u6216\u8005\u663e\u5361\u9a71\u52a8\u91cc\u5e76\u6ca1\u6709\u63d0\u4f9b\u7ed8\u5236\u4e09\u89d2\u5f62\u7684\u5b9e\u73b0\uff0c\u90a3\u4e48OpenGL\u91cc\u7684api\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff1b</p> <p>\u7531\u4e8eOpenGL\u7684\u5927\u591a\u6570\u5b9e\u73b0\u90fd\u662f\u7531\u663e\u5361\u5382\u5546\u7f16\u5199\u7684\uff0c\u5f53\u4ea7\u751f\u4e00\u4e2abug\u65f6\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5347\u7ea7\u663e\u5361\u9a71\u52a8\u6765\u89e3\u51b3\u3002\u8fd9\u4e9b\u9a71\u52a8\u4f1a\u5305\u62ec\u4f60\u7684\u663e\u5361\u80fd\u652f\u6301\u7684\u6700\u65b0\u7248\u672c\u7684OpenGL\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u603b\u662f\u5efa\u8bae\u4f60\u5076\u5c14\u66f4\u65b0\u4e00\u4e0b\u663e\u5361\u9a71\u52a8\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/python%E5%8F%82%E6%95%B0%E6%B3%A8%E8%A7%A3/","title":"Python\u53c2\u6570\u6ce8\u89e3","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/","title":"Pytorch\u4e2d\u7684\u7c7b\u578b","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/#1dtypetype","title":"1.dtype\u548ctype()\u7684\u533a\u522b","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/#11-dtypepytorchcpugpu","title":"1.1 dtype\u662f\u5c5e\u6027\uff0c\u8fd4\u56de\u7684\u662fpytorch\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u770b\u4e0d\u51fa\u662fcpu\u8fd8\u662fgpu","text":"<p>\u6bd4\u5982tensor1.dtype\u8fd4\u56de\u7684\u662ftorch.float32</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/#12typetensorgpucpu","title":"1.2type()\u662f\u65b9\u6cd5\uff0c\u8fd4\u56de\u65f6\u7684tensor\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u770b\u51fa\u662fgpu\u8fd8\u662fcpu","text":"<p>\u6bd4\u5982tensor1.type()\u8fd4\u56de\u7684\u662ftorch.FloatTensor</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/#2","title":"2.\u7c7b\u578b\u8f6c\u6362","text":"<p>\u5047\u8bbetensor1 = torch.tensor( [[1,2,3],[4,5,6]] )</p> <pre><code>1.\u901a\u8fc7tensor1.type_as(tensor0) \u5c06tensor1\u8f6c\u6362\u6210tensor0\u7684\u6570\u636e\u7c7b\u578b\n2.tensor1.type(torch.IntTensor)\n3.tensor1.long(),tensor1.char(),tensor1.int(),tensor1.byte(),tensor1.double()\n4.tenosr1.to(torch.long) #\u8fd9\u91cc\u7528\u7684\u662fdtype\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E8%AE%A1%E7%AE%97%E5%9B%BE/","title":"Pytorch\u4e2d\u7684\u8ba1\u7b97\u56fe","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E8%AE%A1%E7%AE%97%E5%9B%BE/#1","title":"1. \u8ba1\u7b97\u56fe","text":"<p>\u4e0b\u56fe\u4e2d y\u5bf9w\u7684\u5bfc\u6570\u7b49\u4e8e5\u3002\\((w+1)\u00d71 + (x+w)\u00d71 =(1+1)\u00d71 + (2+1)\u00d71=5\\) y\u5bf9x\u7684\u5bfc\u6570\u7b49\u4e8e2\u3002\\((w+1)\u00d71 =(1+1)\u00d71=2\\)</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E8%AE%A1%E7%AE%97%E5%9B%BE/#2","title":"2.\u9759\u6001\u56fe\u4e0e\u52a8\u6001\u56fe","text":"<p>\u52a8\u6001\u56fe\uff1a\u8fb9\u6784\u5efa\u4fbf\u8ba1\u7b97\uff0c\u6bd4\u8f83\u65b9\u4fbfdebug\uff0c\u4f7f\u7528\u8005\u80fd\u591f\u7528\u4efb\u4f55\u4ed6\u4eec\u559c\u6b22\u7684\u65b9\u5f0f\u8fdb\u884cdebug\uff0c\u540c\u65f6\u975e\u5e38\u76f4\u89c2\u3002</p> <p>\u9759\u6001\u56fe\uff1a\u662f\u5148\u6784\u5efa\u518d\u8ba1\u7b97\uff0c\u4e4b\u540e\u518d\u6b21\u8fd0\u884c\u7684\u65f6\u5019\u5c31\u4e0d\u518d\u9700\u8981\u91cd\u65b0\u6784\u5efa\u8ba1\u7b97\u56fe\uff0c\u6240\u4ee5\u901f\u5ea6\u4f1a\u6bd4\u52a8\u6001\u56fe\u66f4\u5feb\u3002</p> <p>\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e: \u9759\u6001\u56fe\u5148\u8bf4\u660e\u6570\u636e\u8981\u600e\u4e48\u8ba1\u7b97\uff0c\u7136\u540e\u518d\u653e\u5165\u6570\u636e\u3002\u5047\u8bbe\u8981\u653e\u516550\u7ec4\u6570\u636e\uff0c\u8fd0\u7b97\u56fe\u56e0\u4e3a\u662f\u4e8b\u5148\u6784\u5efa\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u6b21\u8ba1\u7b97\u68af\u5ea6\u90fd\u5f88\u5feb\u3001\u9ad8\u6548\uff1b \u52a8\u6001\u56fe\u7684\u8fd0\u7b97\u56fe\u662f\u5728\u6570\u636e\u8ba1\u7b97\u7684\u540c\u65f6\u6784\u5efa\u7684\uff0c\u5047\u8bbe\u8981\u653e\u516550\u7ec4\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u751f\u621050\u6b21\u8fd0\u7b97\u56fe\u3002\u8fd9\u6837\u5c31\u6ca1\u6709\u90a3\u4e48\u9ad8\u6548\u3002\u6240\u4ee5\u79f0\u4e3a\u52a8\u6001\u56fe\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E8%AE%A1%E7%AE%97%E5%9B%BE/#tensorflow","title":"TensorFlow","text":"<pre><code># tensorflow\nimport tensorflow as tf\n\nfirst_counter = tf.constant(0)\nsecond_counter = tf.constant(10)\n</code></pre> <pre><code>def cond(first_counter, second_counter, *args):\n    return first_counter &lt; second_counter\n\ndef body(first_counter, second_counter):\n    first_counter = tf.add(first_counter, 2)\n    second_counter = tf.add(second_counter, 1)\n    return first_counter, second_counter\n</code></pre> <pre><code>#\u6784\u5efa\u56fe\nc1, c2 = tf.while_loop(cond, body, [first_counter, second_counter])\n</code></pre> <pre><code>#\u8fd0\u884c\u56fe\nwith tf.Session() as sess:\n    counter_1_res, counter_2_res = sess.run([c1, c2])\n</code></pre> <pre><code>print(counter_1_res)\nprint(counter_2_res)\n</code></pre> <pre><code>20\n20\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 TensorFlow \u9700\u8981\u5c06\u6574\u4e2a\u56fe\u6784\u5efa\u6210\u9759\u6001\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u6b21\u8fd0\u884c\u7684\u65f6\u5019\u56fe\u90fd\u662f\u4e00\u6837\u7684\uff0c\u662f\u4e0d\u80fd\u591f\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 Python \u7684 while \u5faa\u73af\u8bed\u53e5\uff0c\u9700\u8981\u4f7f\u7528\u8f85\u52a9\u51fd\u6570\u00a0<code>tf.while_loop</code>\u00a0\u5199\u6210 TensorFlow \u5185\u90e8\u7684\u5f62\u5f0f</p> <p>\u8fd9\u662f\u975e\u5e38\u53cd\u76f4\u89c9\u7684\uff0c\u5b66\u4e60\u6210\u672c\u4e5f\u662f\u6bd4\u8f83\u9ad8\u7684</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b PyTorch \u7684\u52a8\u6001\u56fe\u673a\u5236\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u4f7f\u7528 Python \u7684 while \u5199\u5faa\u73af\uff0c\u975e\u5e38\u65b9\u4fbf</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%B8%AD%E7%9A%84%E8%AE%A1%E7%AE%97%E5%9B%BE/#pytorch","title":"PyTorch","text":"<pre><code># pytorch\nimport torch\nfirst_counter = torch.Tensor([0])\nsecond_counter = torch.Tensor([10])\n</code></pre> <pre><code>while (first_counter &lt; second_counter)[0]:\n    first_counter += 2\n    second_counter += 1\n</code></pre> <pre><code>print(first_counter)\nprint(second_counter)\n</code></pre> <pre><code> 20\n[torch.FloatTensor of size 1]\n\n\n 20\n[torch.FloatTensor of size 1]\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 PyTorch \u7684\u5199\u6cd5\u8ddf Python \u7684\u5199\u6cd5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u5b66\u4e60\u6210\u672c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","title":"Pytorch\u4f7f\u7528\u7b14\u8bb0","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#1torchrandrandnrandint","title":"1.torch.rand\u3001randn\u3001randint\u7684\u533a\u522b","text":"<p>\u76f4\u63a5\u770b\u6587\u6863\uff1a - rand\u8fd4\u56de[0,1]\u7684\u5747\u5300\u5206\u5e03</p> <p></p> <ul> <li>randn\u8fd4\u56de(0,1)\u7684\u6b63\u6001\u5206\u5e03 </li> <li>randint\u8fd4\u56de[low,high)\u7684\u6574\u6570\u5747\u5300\u5206\u5e03 </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#2torchnormal","title":"2.torch.normal","text":"<p>\u751f\u6210\u4e00\u4e2a\u5747\u503c\u662fmean\uff0c\u65b9\u5dee\u662fstd\u7684\u6b63\u6001\u5206\u5e03\u6570\uff0c\u5982\u679cmean\u662f\u5e8f\u5217\uff0c\u90a3\u4e48std\u5e94\u8be5\u4e5f\u662f\u5e8f\u5217\u3002 torch.normal(mean,\u00a0std,\u00a0*,\u00a0generator=None,\u00a0out=None)\u00a0\u2192\u00a0Tensor  \u4e5f\u53ef\u4ee5mean\u662f\u4e00\u4e2a\u503c\uff0cstd\u662f\u4e00\u4e2atensor\u5e8f\u5217 </p> <p>\u4e5f\u53ef\u4ee5mean\u662f\u4e00\u4e2atensor\u5e8f\u5217\uff0cstd\u662f\u4e00\u4e2a\u503c </p> <p>\u4e5f\u53ef\u4ee5\u90fd\u662f\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u6307\u5b9asize </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#3-pytorch_","title":"3. pytorch\u4e2d\u4e00\u822c\u51fd\u6570\u540e\u8fb9\u8ddf\u4e00\u4e2a_\u8868\u793a\u5c31\u5730\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u6539\u53d8\u503c\u672c\u8eab","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#4-torchunsqueezesqueeze","title":"4. torch.unsqueeze\u548csqueeze\u90fd\u662f\u5171\u4eab\u5185\u5b58","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#41-unsqueeze","title":"4.1 unsqueeze","text":"<p>unsqueeze(input, dim, out=None)</p> <p>\u53c2\u6570</p> <ul> <li>input\uff1a\u8f93\u5165\u5f20\u91cf</li> <li>dim \uff1a\u7ef4\u5ea6\u4fe1\u606f\uff080 \u8868\u793a\u4e8c\u7ef4\u77e9\u9635\u4e2d\u7684\u884c\uff0c1 \u5728\u4e8c\u7ef4\u77e9\u9635\u4e2d\u8868\u793a\u5217\uff09</li> <li>out \uff1a\u8f93\u51fa\u5f20\u91cf</li> </ul> <p>\u8bf4\u660e</p> <p>\u5bf9\u8f93\u5165\u5f20\u91cf input \u7684\u7ef4\u5ea6\u8fdb\u884c\u6269\u5145\u3002\u9700\u8981\u901a\u8fc7 dim \u6307\u5b9a\u4f4d\u7f6e\uff0c\u7ed9\u6307\u5b9a\u4f4d\u7f6e\u52a0\u4e0a\u7ef4\u6570\u4e3a 1 \u7684\u7ef4\u5ea6\u3002\u8fd4\u56de\u7684\u5f20\u91cf\u4e0e\u8f93\u5165\u5f20\u91cf input \u5171\u4eab\u5185\u5b58\uff0c\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u7684\u5185\u5bb9\u53e6\u4e00\u4e2a\u4f1a\u8ddf\u7740\u6539\u53d8\u3002</p> <p>\u793a\u4f8b</p> <pre><code>import torch\n\nx1 = torch.Tensor([1, 2, 3, 4])\nx2 = torch.unsqueeze(x1, 0) \nx3 = torch.unsqueeze(x1, 1)\nprint('x1: ', x1.dim(), x1.size())\nprint('x2: ', x2.dim(), x2.size())\nprint('x3: ', x3.dim(), x3.size())\n\nx1[1] = 5 #\u8fd4\u56de\u5f20\u91cf\u4e0e\u8f93\u5165\u5f20\u91cf\u5171\u4eab\u5185\u5b58\uff0c\u6240\u4ee5\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u7684\u5185\u5bb9\u4f1a\u6539\u53d8\u53e6\u4e00\u4e2a\u3002\nprint('x1: ', x1)\nprint('x2: ', x2)\nprint('x3: ', x3)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a</p> <pre><code>x1:  1 torch.Size([4])\nx2:  2 torch.Size([1, 4])\nx3:  2 torch.Size([4, 1])\nx1:  tensor([1., 5., 3., 4.])\nx2:  tensor([[1., 5., 3., 4.]])\nx3:  tensor([[1.],\n        [5.],\n        [3.],\n        [4.]])\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#42-torchsqueeze","title":"4.2 torch.squeeze","text":"<p>\u5b9a\u4e49</p> <p>torch.squeeze(input, dim=None, out=None)</p> <p>\u53c2\u6570</p> <ul> <li>input\uff1a\u8f93\u5165\u5f20\u91cf</li> <li>dim \uff1a\u5982\u679c\u7ed9\u5b9a\uff0c\u5219\u53ea\u4f1a\u5220\u9664\u7ed9\u5b9a\u7684\u7ef4\u5ea6\uff1b\u5426\u5219\u9ed8\u8ba4\u5220\u6389\u6240\u6709\u4e3a 1 \u7684\u7ef4\u5ea6</li> <li>out \uff1a\u8f93\u51fa\u5f20\u91cf</li> </ul> <p>\u8bf4\u660e</p> <p>\u5bf9\u6570\u636e\u7684\u7ef4\u5ea6\u8fdb\u884c\u538b\u7f29\uff0c\u53bb\u6389\u7ef4\u6570\u4e3a 1 \u7684\u7ef4\u5ea6\uff0c\u9ed8\u8ba4\u662f\u5c06\u8f93\u5165\u5f20\u91cf input \u4e2d\u6240\u6709\u4e3a 1 \u7684\u7ef4\u5ea6\u5220\u6389\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7 dim \u6307\u5b9a\u4f4d\u7f6e\uff0c\u5220\u6389\u6307\u5b9a\u4f4d\u7f6e\u7684\u7ef4\u6570\u4e3a 1 \u7684\u7ef4\u5ea6\u3002\u8fd4\u56de\u5f20\u91cf\u4e0e\u8f93\u5165\u5f20\u91cf input \u5171\u4eab\u5185\u5b58\uff0c\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u7684\u5185\u5bb9\u4f1a\u6539\u53d8\u53e6\u4e00\u4e2a\u3002</p> <p>\u793a\u4f8b</p> <pre><code>import torch\n\n#\u521b\u5efa\u4e00\u4e2a\u7ef4\u5ea6\u4e3a 2*1*2*1 \u7684\u5f20\u91cf\nx = torch.zeros(2, 1, 2, 1)\ny1 = torch.squeeze(x)    #\u9ed8\u8ba4\u5220\u9664\u6240\u6709\u4e3a 1 \u7684\u7ef4\u5ea6\ny2 = torch.squeeze(x, 0) #\u4f4d\u7f6e 0 \u7684\u7ef4\u5ea6\u4e3a 2\uff0c\u6240\u4ee5\u4fdd\u6301\u4e0d\u53d8\ny3 = torch.squeeze(x, 1) #\u4f4d\u7f6e 1 \u7684\u7ef4\u5ea6\u4e3a 1\uff0c\u88ab\u5220\u9664\nprint(\"x:  \", x.dim(), x.size())\nprint(\"y1: \", y1.dim(), y1.size())\nprint(\"y2: \", y2.dim(), y2.size())\nprint(\"y3: \", y3.dim(), y3.size())\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a</p> <pre><code>x:   4 torch.Size([2, 1, 2, 1])\ny1:  2 torch.Size([2, 2])\ny2:  4 torch.Size([2, 1, 2, 1])\ny3:  3 torch.Size([2, 2, 1])\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#5-scatter_","title":"5 scatter_","text":"<p>\u5b9a\u4e49</p> <p>scatter_(dim, index, src)</p> <p>\u53c2\u6570</p> <ul> <li>dim\uff1a\u6cbf\u7740\u54ea\u4e2a\u8f74\u5411\u6765\u8fdb\u884c\u586b\u5145</li> <li>index\uff1a\u7528\u6765\u8fdb\u884c\u7d22\u5f15\u7684\u5f20\u91cf</li> <li>src\uff1a\u6e90\u5f20\u91cf\u6216\u8005\u6807\u91cf</li> </ul> <p>\u8bf4\u660e</p> <p>\u5c06 src \u4e2d\u6570\u636e\u6839\u636e index \u4e2d\u7684\u7d22\u5f15\u6309\u7167 dim \u7684\u65b9\u5411\u586b\u5145\u8fdb\u8c03\u7528 scatter_ \u7684\u5411\u91cf\u4e2d\u3002</p> <p>\u793a\u4f8b1</p> <pre><code>src = torch.rand(2, 5)\n# tensor([[0.2195, 0.8317, 0.7636, 0.7495, 0.3827],\n#         [0.0923, 0.7731, 0.1602, 0.7769, 0.8141]])\n\n# dim = 0\uff0c\u8868\u793a\u6309\u884c\u586b\u5145\uff0c\u5217\u4e0d\u53d8\ntorch.zeros(3, 5).scatter_(0, torch.tensor([[0, 1, 2, 0, 0], [2, 0, 0, 1, 2]]), src)\n# tensor([[0.2195, 0.7731, 0.1602, 0.7495, 0.3827],\n#         [0.0000, 0.8317, 0.0000, 0.7769, 0.0000],\n#         [0.0923, 0.0000, 0.7636, 0.0000, 0.8141]])\n\n# dim = 1\uff0c\u8868\u793a\u6309\u5217\u586b\u5145\uff0c\u884c\u4e0d\u53d8\ntorch.zeros(3, 5).scatter_(1, torch.tensor([[0, 3, 4, 1, 2], [3, 4, 0, 1, 2]]), src)\n# tensor([[0.2195, 0.7495, 0.3827, 0.8317, 0.7636],\n#         [0.1602, 0.7769, 0.8141, 0.0923, 0.7731],\n#         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]])\n</code></pre> <p>\u7ed3\u679c\u89e3\u91ca</p> <ul> <li>dim = 0\uff0c\u8868\u793a\u6309\u884c\u586b\u5145\uff0c\u5217\u4e0d\u53d8</li> </ul> <p>\u5f20\u91cf src \u7684\u503c\u5982\u4e0b\uff1a</p> <p></p> <p>\u8c03\u7528 scatter_ \u4e4b\u540e\u7684\u7ed3\u679c\u5982\u4e0b\u3002\u5176\u4e2d\u7ea2\u8272\u6807\u8bc6\u7684\u6570\u5b57\u4e3a\u5f20\u91cf src \u4e2d\u7b2c 0 \u884c\u7684\u6570\u5b57\uff0c\u53ef\u4ee5\u770b\u51fa\u6bcf\u4e2a\u6570\u5b57\u6240\u5728\u7684\u5217\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u53ea\u662f\u88ab\u586b\u5145\u5230\u4e86\u4e0d\u540c\u7684\u884c\u3002</p> <p></p> <p>\u90a3\u4e48\uff0csrc \u4e2d\u7684\u6570\u5b57\u662f\u5982\u4f55\u88ab\u586b\u5145\u5230\u76ee\u6807\u5f20\u91cf\u7684\u5462\uff1f\u89c1\u4e0b\u56fe\u3002</p> <p>\u56fe\u4e2d\u7ed9\u51fa\u4e86 0.2195 \u548c 0.8141 \u7684\u586b\u5145\u8fc7\u7a0b\uff0c\u5176\u4ed6\u503c\u7c7b\u4f3c\u3002</p> <p></p> <ul> <li>dim = 1\uff0c\u8868\u793a\u6309\u5217\u586b\u5145\uff0c\u884c\u4e0d\u53d8</li> </ul> <p>src \u4e2d\u7684\u6570\u5b57\u662f\u586b\u5145\u5230\u76ee\u6807\u5f20\u91cf\u7684\u8fc7\u7a0b\u53c2\u89c1\u4e0b\u56fe\u3002</p> <p></p> <p>\u793a\u4f8b2</p> <p>\u53c2\u6570 src \u4e5f\u53ef\u4ee5\u662f\u6807\u91cf\uff0c\u7ecf\u5e38\u7528\u6765\u5bf9\u6807\u7b7e\u8fdb\u884c one-hot \u7f16\u7801\u3002</p> <pre><code>label = torch.tensor([[2], [3]])\n# tensor([[2],\n#        [3]])\n\ntorch.zeros(2, 4).scatter_(1, label, 1)\n# tensor([[0., 0., 1., 0.],\n#         [0., 0., 0., 1.]])\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#5view","title":"5\uff0cview","text":"<p>view \u7528\u4e8e torch \u4e2d\u7684\u5f62\u53d8\uff0c\u76f8\u5f53\u4e8e numpy \u4e2d resize \u529f\u80fd\u3002 \u6211\u7684\u7406\u89e3\u662f\uff1a\u628a\u539f\u5148 tensor \u4e2d\u7684\u6570\u636e\u6309\u7167\u884c\u4f18\u5148\u7684\u987a\u5e8f\u6392\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u6570\u636e\uff0c\u7136\u540e\u6309\u7167\u53c2\u6570\u7ec4\u5408\u6210\u5176\u4ed6\u7ef4\u5ea6\u7684 tensor \u3002</p> <p>\u793a\u4f8b</p> <pre><code>a = torch.Tensor([[[1,2,3],[4,5,6]]])\nb = a.view(3,2)\nprint(a)\nprint(b)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>tensor([[[1., 2., 3.],\n         [4., 5., 6.]]])\ntensor([[1., 2.],\n        [3., 4.],\n        [5., 6.]])\n</code></pre> <p>\u4f46\u662f\u8981\u6ce8\u610f\u539f\u6765\u7684 tensor \u4e0e\u65b0\u7684 tensor \u662f\u5171\u4eab\u5185\u5b58\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u5176\u4e2d\u7684\u4e00\u4e2atensor \u8fdb\u884c\u66f4\u6539\u7684\u8bdd\uff0c\u53e6\u5916\u4e00\u4e2a tensor \u4e5f\u4f1a\u81ea\u52a8\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002\u5982\u679c\u60f3\u751f\u6210\u4e0d\u5171\u4eab\u5185\u5b58\u7684 tensor \uff0c\u53ef\u4ee5\u4f7f\u7528 clone \u51fd\u6570\u514b\u9686\u548c\u518d\u8fdb\u884c view \u3002</p> <pre><code>a = torch.Tensor([[[1,2,3],[4,5,6]]])\nb = a.view(3,2)\nb[1,1] = 44\nprint(a)\nprint(b)\n\nc = torch.Tensor([[[1,2,3],[4,5,6]]])\nd = a.clone().view(3,2)\nb[1,1] = 44\nprint(c)\nprint(d)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code># a\ntensor([[[ 1.,  2.,  3.],\n         [44.,  5.,  6.]]])\n# b\ntensor([[ 1.,  2.],\n        [ 3., 44.],\n        [ 5.,  6.]])\n# c\ntensor([[[1., 2., 3.],\n         [4., 5., 6.]]])\n# d\ntensor([[ 1.,  2.],\n        [ 3., 44.],\n        [ 5.,  6.]])\n</code></pre> <p>view \u7684\u53c2\u6570\u4e2d\u5982\u679c\u51fa\u73b0 -1 \uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u4f4d\u7f6e\u7531\u5176\u4ed6\u4f4d\u7f6e\u7684\u6570\u5b57\u6765\u63a8\u65ad\u3002</p> <pre><code>a = torch.Tensor([[[1,2,3],[4,5,6]]])\nb = a.view(3,-1) # -1 \u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u6839\u636e\u524d\u9762\u7684 3 \u8fdb\u884c\u81ea\u52a8\u8c03\u6574\nprint(a)\nprint(b)\n\nc = a.view(-1)\nprint(c)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code># a\ntensor([[[1., 2., 3.],\n         [4., 5., 6.]]])\n# b\ntensor([[1., 2.],\n        [3., 4.],\n        [5., 6.]])\n# c\ntensor([1., 2., 3., 4., 5., 6.])\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#6transpose","title":"6\uff0ctranspose","text":"<p>\u5b9a\u4e49</p> <p>transpose(input, dim0, dim1)</p> <p>\u53c2\u6570</p> <ul> <li>input\uff1a\u8f93\u5165\u7684 tensor \uff1b</li> <li>dim0 (int): \u8f6c\u7f6e\u7684\u7b2c\u4e00\u7ef4\uff1b</li> <li>dim1 (int): \u8f6c\u7f6e\u7684\u7b2c\u4e8c\u7ef4\uff1b</li> </ul> <p>\u8bf4\u660e</p> <p>\u4ea4\u6362\u4e00\u4e2a tensor \u7684\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u8f93\u5165 input \u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e\u3002transpose \u53ea\u80fd\u4e00\u6b21\u64cd\u4f5c\u4e24\u4e2a\u7ef4\u5ea6\u3002\u6709\u4e24\u79cd\u8c03\u7528\u65b9\u5f0f\u3002</p> <p>\u793a\u4f8b1</p> <pre><code>import torch\n\nx = torch.randn(2, 3)\n# \u8c03\u7528\u65b9\u5f0f1\nt1 = x.transpose(0,1)\n#\u8c03\u7528\u65b9\u5f0f2\nt2 = torch.transpose(x,0,1)\nprint(x)\nprint(t1)\nprint(t2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>tensor([[ 0.7893, -1.9264, -2.4798],\n        [ 1.5024, -0.3912,  0.6157]])\ntensor([[ 0.7893,  1.5024],\n        [-1.9264, -0.3912],\n        [-2.4798,  0.6157]])\ntensor([[ 0.7893,  1.5024],\n        [-1.9264, -0.3912],\n        [-2.4798,  0.6157]])\n</code></pre> <p>\u793a\u4f8b2</p> <pre><code>x = torch.randn(2, 3, 4)\nt = x.transpose(1, 2)\n#t = x.transpose(1, 0, 2) #\u4f1a\u62a5\u9519\nprint(x)\nprint(t)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>tensor([[[-0.7952, -1.3478, -0.4179, -1.0324],\n         [ 1.4844, -1.3820,  0.3297,  0.0797],\n         [ 0.1177,  0.5511, -0.4678,  0.2325]],\n\n        [[-1.0909, -0.1977,  0.8131, -1.7441],\n         [-0.3850, -0.1359,  0.7452,  0.0250],\n         [-0.1399, -1.0268, -1.3587,  0.3178]]])\n\ntensor([[[-0.7952,  1.4844,  0.1177],\n         [-1.3478, -1.3820,  0.5511],\n         [-0.4179,  0.3297, -0.4678],\n         [-1.0324,  0.0797,  0.2325]],\n\n        [[-1.0909, -0.3850, -0.1399],\n         [-0.1977, -0.1359, -1.0268],\n         [ 0.8131,  0.7452, -1.3587],\n         [-1.7441,  0.0250,  0.3178]]])\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#7permute","title":"7\uff0cpermute","text":"<p>\u5b9a\u4e49</p> <p>permute(*dims)</p> <p>\u53c2\u6570</p> <p>*dims (int...): The desired ordering of dimensions</p> <p>\u8bf4\u660e</p> <p>\u53ef\u4ee5\u5bf9\u4efb\u610f\u9ad8\u7ef4\u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e\u3002\u4f46\u6ca1\u6709 torch.permute() \u8fd9\u4e2a\u8c03\u7528\u65b9\u5f0f\uff0c \u53ea\u80fd Tensor.permute() \u3002</p> <p>\u6ce8\u610f\uff1atranspose \u53ea\u80fd\u4e00\u6b21\u64cd\u4f5c\u4e24\u4e2a\u7ef4\u5ea6\uff0cpermute \u53ef\u4ee5\u4e00\u6b21\u64cd\u4f5c\u591a\u7ef4\u6570\u636e\uff0c\u4e14\u5fc5\u987b\u4f20\u5165\u6240\u6709\u7ef4\u5ea6\u6570\u3002</p> <p>\u793a\u4f8b1</p> <pre><code>x = torch.randn(2, 3, 4)\nprint(x)\nx.permute(0, 2, 1)\n#x.permute(2, 1) # \u62a5\u9519\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>tensor([[[-0.7952, -1.3478, -0.4179, -1.0324],\n         [ 1.4844, -1.3820,  0.3297,  0.0797],\n         [ 0.1177,  0.5511, -0.4678,  0.2325]],\n\n        [[-1.0909, -0.1977,  0.8131, -1.7441],\n         [-0.3850, -0.1359,  0.7452,  0.0250],\n         [-0.1399, -1.0268, -1.3587,  0.3178]]])\n\ntensor([[[-0.7952,  1.4844,  0.1177],\n         [-1.3478, -1.3820,  0.5511],\n         [-0.4179,  0.3297, -0.4678],\n         [-1.0324,  0.0797,  0.2325]],\n\n        [[-1.0909, -0.3850, -0.1399],\n         [-0.1977, -0.1359, -1.0268],\n         [ 0.8131,  0.7452, -1.3587],\n         [-1.7441,  0.0250,  0.3178]]])\n</code></pre> <p>\u793a\u4f8b2</p> <pre><code>x = torch.randn(2, 3)\nprint(x)\n\ny1 = x.permute(0,1) # \u4fdd\u6301\u4e0d\u53d8\nprint(y1)\ny2 = x.permute(1,0)\nprint(y2)\n\ny3 = x.transpose(0,1) # \u8981\u53d8\nprint(y3)\ny4 = x.transpose(1,0)\nprint(y4)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code># x\ntensor([[ 1.3479,  0.9395,  0.4514],\n        [-0.3636, -0.2239,  0.8925]])\n# y1\ntensor([[ 1.3479,  0.9395,  0.4514],\n        [-0.3636, -0.2239,  0.8925]])\n# y2\ntensor([[ 1.3479, -0.3636],\n        [ 0.9395, -0.2239],\n        [ 0.4514,  0.8925]])\n# y3\ntensor([[ 1.3479, -0.3636],\n        [ 0.9395, -0.2239],\n        [ 0.4514,  0.8925]])\n# y4\ntensor([[ 1.3479, -0.3636],\n        [ 0.9395, -0.2239],\n        [ 0.4514,  0.8925]])\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#8","title":"8. \u62fc\u63a5","text":"<p>\u5206\u4e3acat\u548cstack cat\u7ef4\u5ea6\u7684\u4e2a\u6570\u4e0d\u53d8\uff0c\u76f8\u5f53\u4e8e\u62fc\u63a5 stack\u4f1a\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u76f8\u5f53\u4e8e\u5806\u53e0\uff0c\u6bd4\u5982\u4e24\u4e2a\u4e8c\u7ef4\u5e73\u9762\u5806\u53e0\u6210\u4e00\u4e2a\u4e09\u7ef4</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#81-torchcat-dstackhstackvstack","title":"8.1 torch.cat()  \u3001dstack\u3001hstack\u3001vstack","text":"<p>\u5bf9\u4e8e\u9700\u8981\u62fc\u63a5\u7684\u5f20\u91cf\uff0c\u7ef4\u5ea6\u6570\u91cf\u5fc5\u987b\u76f8\u540c\uff0c\u8fdb\u884c\u62fc\u63a5\u7684\u7ef4\u5ea6\u7684\u5c3a\u5bf8\u53ef\u4ee5\u4e0d\u540c\uff0c\u4f46\u662f\u5176\u5b83\u7ef4\u5ea6\u7684\u5c3a\u5bf8\u5fc5\u987b\u76f8\u540c\u3002</p> <p></p> <p>dstack\u3001hstack\u3001vstack\u548ccat\u6709\u5173\uff0c\u548cstack\u5173\u7cfb\u4e0d\u5927\u3002\u53ea\u4e0d\u8fc7\u5982\u679c\u7ef4\u5ea6\u4e0d\u591f\u4f1a\u6269\u51b2</p> <ul> <li>dstack - dim=2</li> <li>hstack - dim=1</li> <li>vstack- dim=0  </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#82-torchstack","title":"8.2 torch.stack()","text":"<p>\u6cbf\u7740\u4e00\u4e2a\u65b0\u7ef4\u5ea6\u5bf9\u8f93\u5165\u5f20\u91cf\u5e8f\u5217\u8fdb\u884c\u8fde\u63a5\u3002 \u5e8f\u5217\u4e2d\u6240\u6709\u7684\u5f20\u91cf\u90fd\u5e94\u8be5\u4e3a\u76f8\u540c\u5f62\u72b6</p> <p>\u6d45\u663e\u8bf4\u6cd5\uff1a\u628a\u591a\u4e2a2\u7ef4\u7684\u5f20\u91cf\u51d1\u6210\u4e00\u4e2a3\u7ef4\u7684\u5f20\u91cf\uff1b\u591a\u4e2a3\u7ef4\u7684\u51d1\u6210\u4e00\u4e2a4\u7ef4\u7684\u5f20\u91cf\u2026\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e5f\u5c31\u662f\u5728\u589e\u52a0\u65b0\u7684\u7ef4\u5ea6\u8fdb\u884c\u5806\u53e0\u3002\u5047\u5982\u6570\u636e\u90fd\u662f\u4e8c\u7ef4\u77e9\u9635\uff0c\u5b83\u53ef\u4ee5\u628a\u8fd9\u4e9b\u4e00\u4e2a\u4e2a\u5e73\u9762\u6309\u7b2c\u4e09\u7ef4(\u4f8b\u5982\uff1a\u65f6\u95f4\u5e8f\u5217)\u538b\u6210\u4e00\u4e2a\u4e09\u7ef4\u7684\u7acb\u65b9\u4f53\uff0c\u800c\u7acb\u65b9\u4f53\u7684\u957f\u5ea6\u5c31\u662f\u65f6\u95f4\u5e8f\u5217\u957f\u5ea6\u3002\u8be5\u51fd\u6570\u5e38\u51fa\u73b0\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08<code>NLP</code>\uff09\u548c\u56fe\u50cf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(<code>CV</code>)\u4e2d\u3002 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#9","title":"9 \u62c6\u5206","text":"<p>split()\u548cchunk()\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u53c2\u6570\u4e0d\u540c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#91-torchsplithsplitvsplit","title":"9.1  torch.split()\u3001hsplit\u3001vsplit","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#92-torchchunk","title":"9.2 torch.chunk()","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#10","title":"10 \u6a21\u578b\u548c\u6570\u636e\u4fdd\u6301\u518d\u540c\u4e00\u8bbe\u5907\u4e0a","text":"<p>\u5728\u4f7f\u7528pytorch\u65f6\uff0c\u4fdd\u8bc1\u6a21\u578b\u548c\u6570\u636e\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\u3002\u4e0d\u80fd\u4e00\u4e2a\u5728cpu\uff0c\u4e00\u4e2a\u5728gpu\u3002\uff08pytorch\u9ed8\u8ba4\u521b\u5efa\u53d8\u91cf\u662f\u5728cpu\u7684\uff09</p> <p>\u6ce8\u610f\uff1a\u6a21\u578b\u5728\u54ea\u4e2a\u8bbe\u5907\u5176\u5b9e\u6307\u7684\u662f\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u5728\u54ea\u4e2a\u8bbe\u5907\u4e0a\uff0c\u5176\u5b9e\u5f52\u6839\u7ed3\u5e95\u8fd8\u662f\u201d\u6570\u636e\u201c\u5728\u54ea\u4e2a\u8bbe\u5907\u4e0a\u3002\u5224\u65ad\u6a21\u578b\u7684\u8bbe\u5907\uff0c\u5176\u5b9enext(model.parameters())\u8fd4\u56de\u6a21\u578b\u7684\u7b2c\u4e00\u7ec4\u53c2\u6570\uff0c\u7136\u540e\u5224\u65ad\u8be5\u6570\u636e\u5728\u54ea\u4e2a\u8bbe\u5907\u5c31\u53ef\u4ee5\u4e86</p> <p>\u9996\u5148\u5224\u65ad\u4e00\u4e0b\u6a21\u578b\u548c\u6570\u636e\u662f\u5728gpu\u8fd8\u662fcpu</p> <p>\u5224\u65ad\u6a21\u578b\uff1a <pre><code>print('Is model on gpu: ', next(model.parameters()).device) #\u6216\u8005is_cuda\n\n#\u8f93\u51fa\u662fcpu\u6216\u8005cuda:0\n</code></pre> \u5224\u65ad\u6570\u636e\uff1a <pre><code>print(data.device)#\u6216\u8005is_cuda\n\n#\u8f93\u51fa\u662fcpu\u6216\u8005cuda:0\n</code></pre></p> <p>\u5047\u8bbe\u6a21\u578b\u548c\u6570\u636e\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>model = Model()\ninput = dataloader()\noutput = model(input)\n</code></pre></p> <p>\u79fb\u52a8\u5230gpu\u4e0a\uff1a <pre><code>#option1\ndevice = torch.device('cuda') #\u6216 torch.device('cuda:0') \u9488\u5bf9\u591a\u4e2agpu\nmodel = model.to(device)\ndata = data.to(device)\n\n#option2\nmodel = model.cuda() #\u6216 model.cuda(0) \u9488\u5bf9\u591a\u4e2agpu\ndata = data.cuda() #\u6216 data.cuda(0) \u9488\u5bf9\u591a\u4e2agpu\n</code></pre> \u5982\u679c\u6709\u591a\u4e2agpu</p> <p>\u79fb\u52a8\u5230cpu\u4e0a\uff1a</p> <pre><code>#option1\ndevice = torch.device('cpu')\n\nmodel = model.to(device)\ndata = data.to(device)\n\n#option2\nmodel = model.cpu()\ndata = data.cpu()\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#11-pytorch","title":"11 pytorch\u7684\u90e8\u5206\u751f\u6001","text":"<p>a)\u00a0PyTorch Lightning:\u00a0\u57fa\u4e8ePyTorch\u7684\u8f7b\u91cf\u7ea7\u9ad8\u7ea7\u8ba1\u7b97\u6846\u67b6\uff0c\u76f8\u5f53\u4e8ePyTorch\u7248\u672c\u7684Keras\u6846\u67b6\uff1b</p> <p>b)\u00a0Detectron2:\u00a0\u7531Facebook AI\u53d1\u5e03\u7684\u4e0b\u4e00\u4ee3\u76ee\u6807\u68c0\u6d4b\u6846\u67b6\uff1b</p> <p>c)\u00a0Transformers:\u00a0\u57fa\u4e8ePyTorch\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406SOTA\u6a21\u578b\u5e93\uff1b</p> <p>d)\u00a0PyTorch Geometric:\u00a0\u57fa\u4e8ePyTorch\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6df1\u5ea6\u5b66\u4e60\u6269\u5c55\u5e93\uff0c\u5176\u5bf9\u5e38\u89c1\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u548c\u6570\u636e\u96c6\u90fd\u8fdb\u884c\u4e86\u96c6\u6210\uff1b</p> <p>e)\u00a0PyTorch3D:\u00a0\u57fa\u4e8ePyTorch\u5c06\u6df1\u5ea6\u5b66\u4e60\u4e0e3D\u7ed3\u5408\u7684\u6846\u67b6\uff1b</p> <p>f)\u00a0Skorch:\u00a0\u4e00\u6b3e\u7efc\u5408scikit-learn\u548cPyTorch\u7684\u673a\u5668\u5b66\u4e60\u5e93\uff1b</p> <p>g)\u00a0Fast.ai:\u00a0\u662f\u4e00\u4e2a\u8bfe\u7a0b\u5e73\u53f0\uff0c\u4e00\u4e2a\u8ba8\u8bba\u793e\u533a\uff0c\u540c\u6837\u4e5f\u662f\u4e00\u4e2a\u57fa\u4e8ePyTorch\u7684\u9876\u5c42\u6846\u67b6;</p> <p>h)\u00a0PySyft:\u00a0\u7528\u4e8e\u5b89\u5168\u548c\u9690\u79c1\u6df1\u5ea6\u5b66\u4e60\u7684Python\u5e93\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#12-torchviewtorchreshape","title":"12 torch.view()\u548ctorch.reshape()","text":"<p>https://blog.csdn.net/Flag_ing/article/details/109129752 \u5148\u8bf4\u7ed3\u8bba\uff1a \u5982\u679c\u4e0d\u8003\u8651\u6548\u7387\uff0c\u76f4\u63a5\u7528reshape\uff0c\u4e0d\u4f1a\u62a5\u9519</p> <p>torch\u7684view()\u4e0ereshape()\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u6765\u91cd\u5851tensor\u7684shape\uff0c\u533a\u522b\u5c31\u662f\u4f7f\u7528\u7684\u6761\u4ef6\u4e0d\u4e00\u6837\u3002view()\u65b9\u6cd5\u53ea\u9002\u7528\u4e8e\u6ee1\u8db3\u8fde\u7eed\u6027\u6761\u4ef6\u7684tensor\uff0c\u5e76\u4e14\u8be5\u64cd\u4f5c\u4e0d\u4f1a\u5f00\u8f9f\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u53ea\u662f\u4ea7\u751f\u4e86\u5bf9\u539f\u5b58\u50a8\u7a7a\u95f4\u7684\u4e00\u4e2a\u65b0\u522b\u79f0\u548c\u5f15\u7528\uff0c\u8fd4\u56de\u503c\u662f\u89c6\u56fe\u3002\u800creshape()\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u65e2\u53ef\u4ee5\u662f\u89c6\u56fe\uff0c\u4e5f\u53ef\u4ee5\u662f\u526f\u672c\uff0c\u5f53\u6ee1\u8db3\u8fde\u7eed\u6027\u6761\u4ef6\u65f6\u8fd4\u56deview\uff0c\u5426\u5219\u8fd4\u56de\u526f\u672c[ \u6b64\u65f6\u7b49\u4ef7\u4e8e\u5148\u8c03\u7528contiguous()\u65b9\u6cd5\u5728\u4f7f\u7528view() ]\u3002\u56e0\u6b64\u5f53\u4e0d\u786e\u80fd\u5426\u4f7f\u7528view\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528reshape\u3002\u5982\u679c\u53ea\u662f\u60f3\u7b80\u5355\u5730\u91cd\u5851\u4e00\u4e2atensor\u7684shape\uff0c\u90a3\u4e48\u5c31\u662f\u7528reshape\uff0c\u4f46\u662f\u5982\u679c\u9700\u8981\u8003\u8651\u5185\u5b58\u7684\u5f00\u9500\u800c\u4e14\u8981\u786e\u4fdd\u91cd\u5851\u540e\u7684tensor\u4e0e\u4e4b\u524d\u7684tensor\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4\uff0c\u90a3\u5c31\u4f7f\u7528view()\u3002</p> <p> stride[0]\uff1a\u7b2c0\u7ef4\u7684\u6b65\u957f\uff0c\u4e0a\u56fe\u4e2d\u4e3a3 stride[1]\uff1a\u7b2c1\u7ef4\u7684\u6b65\u957f\uff0c\u4e0a\u56fe\u4e2d\u4e3a1</p> <p>\u6ee1\u8db3\u8fde\u7eed\u6027\u6761\u4ef6(\u5185\u5b58\u4e2d\u7684\u6570\u636e\u662f\u5426\u662f\u6309\u884c\u5c55\u5f00\u7684)\uff1a  tensor.stride()\u548ctensor.size()</p> <p>view\u80af\u5b9a\u4e0d\u4f1a\u6539\u53d8\u5185\u5b58\uff0cview\u540e\u5171\u4eab\u5185\u5b58\u3002\u4e0d\u7b26\u5408\u8fde\u7eed\u6027\u6761\u4ef6view\u4f1a\u62a5\u9519 reshape\u4f1a\u5148\u68c0\u6d4b\u7b26\u4e0d\u7b26\u5408\u8fde\u7eed\u6027\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c31\u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u518d\u8c03\u7528view</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/pytorch%E9%9A%8F%E8%AE%B0/","title":"Pytorch\u968f\u8bb0","text":"<p>pytorch\u968f\u8bb0</p> <p>padding=(1,2,3,4)\u00a0 \u5728\u77e9\u9635\u7684\u5de6\u53f3\u4e0a\u4e0b\u5404\u8865\u51451\uff0c2\uff0c3\uff0c4\u884c/\u5217 stride=\uff081\uff0c2\uff09\u00a0 \u6b65\u957f\uff1a\u5de6\u53f3\u4e3a1\uff0c\u4e0a\u4e0b\u4e3a2</p> <p>np.dot\uff08A,B\uff09\u00a0 \u77e9\u9635\u53c9\u4e58</p> <p>np.matmul(A,B)\u77e9\u9635\u53c9\u4e58\u00a0 \u00a0\u00a0matmul\u4e0edot\u5728\u4e24\u7ef4\u65f6\u6ca1\u6709\u533a\u522b\uff1a (4\u6761\u6d88\u606f) Numpy\u4e2dnp.dot()\u4e0enp.matmul()\u7684\u533a\u522b\uff08\u77e9\u9635\u4e58\u79ef\u3001\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u76f8\u4e58\uff09_Dontla\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>np.multiply\uff08A,B\uff09\u77e9\u9635\u70b9\u4e58 \u8868\u793a\u4e24\u4e2anp.array\u76f8\u4e58\u65f6\u4e3a\u77e9\u9635\u70b9\u4e58 \u8868\u793a\u4e24\u4e2anp.matrix\u76f8\u4e58\u65f6\u4e3a\u77e9\u9635\u53c9\u4e58  isinstance(net, torch.nn.Module)\u00a0 \uff1a\u5224\u65adnet\u662f\u5426\u4e3atorch.nn.Module\u7c7b\u578b</p> <p>(4\u6761\u6d88\u606f) \u3010pytorch\u7cfb\u5217\u3011 with torch.no_grad():\u7528\u6cd5\u8be6\u89e3_sazass\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>sequential\uff08*layers\uff09\uff1a\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u4e48\u7528 </p> <p></p> <p>fashion-minist\u00a0 \u5206\u8fa8\u7387 28*28\u00a0 \u00a0\u53ef\u4ee5\u6839\u636e\u9700\u8981resize\u6210224\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u589e\u52a0\u4fe1\u606f</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/self-attention%20%E5%92%8CCNN%20RNN%20GNN%E7%9A%84%E6%AF%94%E8%BE%83/","title":"self attention \u548cCNN RNN GNN\u7684\u6bd4\u8f83","text":"<p>1\u3001self-attention\u662f\u5377\u79ef\u5c42\u89c6\u91ce\u66f4\u5e7f\u7684CNN\uff0c\u4e14\u5377\u79ef\u5c42\u7684\u89c6\u91ce\u662f\u53ef\u53d8\u7684 2\u3001self-attention\u89e3\u51b3\u4e86RNN\u4e0d\u53ef\u4ee5\u5e76\u884c\u8bad\u7ec3\u7684\u96be\u9898 3\u3001RNN\u5fc5\u987b\u7b49\u5f85\u524d\u4e00\u4e2avector\u8ba1\u7b97\u5b8c\uff0c\u624d\u80fd\u8ba1\u7b97\u4e0b\u4e00\u4e2a\uff0c\u65e0\u6cd5\u5e76\u884c\u8bad\u7ec3</p> <p>4\u3001self-attention\u540c\u6837\u53ef\u4ee5\u7528\u4e8e\u56fe\u7ed3\u6784\uff0c\u5bf9\u4e8e\u56fe\u7ed3\u6784\u6765\u8bf4\uff0c\u5404\u4e2a\u8282\u70b9\u53ef\u4ee5\u770b\u4f5c\u662fvector\uff0c\u5404\u4e2a\u8282\u70b9\u7684\u5173\u8054\u6027\u4e0d\u9700\u8981self-attention\u6765\u5b66\u4e60\uff0cedge\u5df2\u7ecf\u76f4\u63a5\u7ed9\u51fa\u4e86\u5404\u4e2a\u8282\u70b9\u7684\u5173\u8054\u6027\uff0c\u5728\u8ba1\u7b97attention-matrix\u53ef\u4ee5\u53ea\u8ba1\u7b97\u6709edge\u76f8\u8fde\u7684\u90e8\u5206\uff0c\u8fd9\u6837attention-matrix\u662f\u4e00\u4e2a\u7a00\u758f\u77e9\u9635\uff0c\u5982\u679c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5404\u4e2a\u76f8\u8fde\uff0c\u90a3\u4e48\u7b49\u540c\u4e8eself-attention</p> <p>5\u3001self-attention\u7684\u7f3a\u70b9\u662f\u8fd0\u7b97\u91cf\u8fc7\u5927\uff0c\u8fd0\u7b97\u65f6\u95f4\u8f83\u957f\uff0c\u96be\u70b9\u662f\u627e\u5230\u4e00\u4e2a\u53c8\u5feb\u6709\u51c6\u786e\u7684self-attention\u7ed3\u6784</p> <p>6\u3001\u5f53\u524dtransformer\u548cself-attention\u51e0\u4e4e\u4e00\u4e2a\u610f\u601d\uff0c\u5927\u5bb6\u901a\u5e38\u7528transformer\u6765\u6307\u4ee3self-attention\uff0c\u5404\u79cdformer\u53d8\u5f62\uff0c\u6307\u7684\u662fself-attention\u7684\u53d8\u5f62</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/t-SNE/","title":"t SNE","text":"<p>t-SNE\u6ca1\u6709\u529e\u6cd5\u505a\u63a8\u65ad\uff0c\u6216\u8005\u8bf4\u505a\u63a8\u65ad\u5f88\u9ebb\u70e6\uff0c\u5982\u679c\u65b0\u6765\u4e00\u4e2a\u6570\u636e\uff0c\u9700\u8981\u628a\u5168\u90e8\u6570\u636e\u91cd\u65b0\u505at-SNE\u3002 \u6240\u4ee5t-SNE\u4e00\u822c\u53ea\u7528\u5728\u53ef\u89c6\u5316\u4e0a\u9762</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/tmux%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%85%8D%E7%BD%AE/","title":"Tmux\u5feb\u6377\u952e\u914d\u7f6e","text":"<p>tmux\u7684\u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1asession\u3001window\u3001panel\uff0c\u5176\u4e2d\u4e00\u4e2asession\u6709\u591a\u4e2awindow\uff0c\u4e00\u4e2awindow\u6709\u591a\u4e2asession\uff0csession\u53ef\u4ee5\u7528tmux ls\u67e5\u770b\uff0cwindow\u663e\u793a\u5728\u6bcf\u4e00\u4e2asession\u7684\u4e0b\u65b9\uff0csession\u4e3awindow\u4e2d\u7684\u7a97\u53e3\u5206\u5272</p> <p>\u914d\u7f6e\u6587\u4ef6\uff1a vim ~/.tmux.conf</p> <p>\u5237\u65b0\u914d\u7f6e\uff1a tmux source-file ~/.tmux.conf</p> <pre><code>#\u5f00\u542f\u9f20\u6807(v2.1\u4ee5\u4e0a\u751f\u6548)\nset-option -g mouse on\n# \u4f7f\u7528\u524d\u7f00+\u4e0a\u952e\u9009\u62e9\u4e0a\u65b9\u7684\u7a97\u683c\nbind Up select-pane -U\n\n# \u4f7f\u7528\u524d\u7f00+\u4e0b\u952e\u9009\u62e9\u4e0b\u65b9\u7684\u7a97\u683c\nbind Down select-pane -D\n\n# \u4f7f\u7528\u524d\u7f00+\u5de6\u952e\u9009\u62e9\u5de6\u4fa7\u7684\u7a97\u683c\nbind Left select-pane -L\n\n# \u4f7f\u7528\u524d\u7f00+\u53f3\u952e\u9009\u62e9\u53f3\u4fa7\u7684\u7a97\u683c\nbind Right select-pane -R\n\n# \u4f7f\u7528\u524d\u7f00+e\u8fdb\u884c\u5de6\u53f3\u5206\u5272\nbind e split-window -h\n\n# \u4f7f\u7528\u524d\u7f00+l\u8fdb\u884c\u4e0a\u4e0b\u5206\u5272\nbind l split-window -v\n\n# \u4f7f\u7528\u524d\u7f00+w\u5173\u95ed\u5f53\u524dpanel\nbind w kill-pane\n\n# \u4f7f\u7528\u524d\u7f00+W\u5173\u95ed\u5f53\u524dwindow\nbind W kill-window\n</code></pre> <p>\u5176\u4ed6\u5e38\u7528\u5feb\u6377\u952e\uff1a prefix+0-9\uff0c\u9009\u62e9window prefix+c \u65b0\u5efawindow prefix +d detach\u67d0\u4e2asession\uff0c\u6682\u65f6\u9000\u51fa tmux ls tmux a -t 0-9\uff0c\u8fdb\u5165\u67d0\u4e2asession</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch.nn%E5%92%8Ctorch.functional%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/","title":"Torch.nn\u548ctorch.functional\u7684\u533a\u522b\u548c\u8054\u7cfb","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch.nn%E5%92%8Ctorch.functional%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/#1-relu","title":"1. \u4ee5relu\u4e3a\u4f8b","text":"<p>relu \u51fd\u6570\u5728 pytorch \u4e2d\u603b\u5171\u6709 3 \u6b21\u51fa\u73b0\uff1a</p> <ol> <li><code>torch.nn.ReLU()</code></li> <li><code>torch.nn.functional.relu_()</code> <code>torch.nn.functional.relu_()</code></li> <li><code>torch.relu()</code> <code>torch.relu_()</code></li> </ol> <p>\u800c\u8fd93\u79cd\u4e0d\u540c\u7684\u5b9e\u73b0\u5176\u5b9e\u662f\u6709\u56fa\u5b9a\u7684\u5305\u88c5\u5173\u7cfb\uff0c\u7531\u4e0a\u81f3\u4e0b\u662f\u7531\u8868\u53ca\u91cc\u7684\u8fc7\u7a0b\u3002\u5176\u4e2d\u6700\u540e\u4e00\u4e2a\u5b9e\u9645\u4e0a\u5e76\u4e0d\u88ab pytorch \u7684\u5b98\u65b9\u6587\u6863\u5305\u542b\uff0c\u540c\u65f6\u4e5f\u627e\u4e0d\u5230\u5bf9\u5e94\u7684 python \u4ee3\u7801\uff0c\u53ea\u662f\u5728 <code>__init__.pyi</code> \u4e2d\u5b58\u5728\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6765\u81ea\u4e8e\u901a\u8fc7C++\u7f16\u5199\u7684THNN\u5e93\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch.nn%E5%92%8Ctorch.functional%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/#11-torchnnrelu","title":"1.1 torch.nn.ReLU()","text":"<p>torch.nn \u4e2d\u7684\u7c7b\u4ee3\u8868\u7684\u662f\u795e\u7ecf\u7f51\u7edc\u5c42\uff0c\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u4f5c\u4e3a\u7c7b\u51fa\u73b0\u7684 <code>ReLU()</code> \u5b9e\u9645\u4e0a\u53ea\u662f\u8c03\u7528\u4e86 <code>torch.nn.functional</code> \u4e2d\u7684 <code>relu \u548crelu_</code> \u5b9e\u73b0\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch.nn%E5%92%8Ctorch.functional%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/#12-torchnnfunctionalrelu-torchnnfunctionalrelu_","title":"1.2 <code>torch.nn.functional.relu()</code>\u548c <code>torch.nn.functional.relu_()</code>","text":"<p>\u5176\u5b9e\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u662f\u8c03\u7528\u4e86 <code>torch.relu() and torch.relu_()</code></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch.nn%E5%92%8Ctorch.functional%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/#13","title":"1.3","text":"<p>\u7ed3\u5408\u4e0a\u8ff0\u5bf9 <code>relu</code> \u7684\u5206\u6790\uff0c\u6211\u4eec\u80fd\u591f\u66f4\u6e05\u6670\u7684\u8ba4\u8bc6\u5230\u4e24\u4e2a\u5e93\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\uff1a<code>torch.nn.relu</code>\u8c03\u7528<code>torch.nn.functional.relu</code>\uff0c<code>torch.nn.functional.relu</code>d\u8c03\u7528torch.relu</p> <p>\u901a\u5e38\u6765\u8bf4 <code>torch.nn.functional</code> \u8c03\u7528\u4e86 THNN\u5e93\uff0c\u5b9e\u73b0\u6838\u5fc3\u8ba1\u7b97\uff0c\u4f46\u662f\u4e0d\u5bf9 <code>learnable_parameters</code> \u4f8b\u5982 <code>weight</code> <code>bias</code> \uff0c\u8fdb\u884c\u7ba1\u7406\uff0c\u4e3a\u6a21\u578b\u7684\u4f7f\u7528\u5e26\u6765\u4e0d\u4fbf\u3002\u800c <code>torch.nn</code> \u4e2d\u5b9e\u73b0\u7684\u6a21\u578b\u5219\u5bf9 <code>torch.nn.functional</code>\uff0c\u672c\u8d28\u4e0a\u662f\u5b98\u65b9\u7ed9\u51fa\u7684\u5bf9 <code>torch.nn.functional</code>\u7684\u4f7f\u7528\u8303\u4f8b\uff0c\u6211\u4eec\u901a\u8fc7\u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u8303\u4f8b\u80fd\u591f\u5feb\u901f\u65b9\u4fbf\u7684\u4f7f\u7528 <code>pytorch</code> \uff0c\u4f46\u662f\u8303\u4f8b\u53ef\u80fd\u4e0d\u80fd\u591f\u7167\u987e\u5230\u6240\u6709\u4eba\u7684\u4f7f\u7528\u9700\u6c42\uff0c\u56e0\u6b64\u4fdd\u7559 <code>torch.nn.functional</code> \u6765\u4e3a\u8fd9\u4e9b\u7528\u6237\u63d0\u4f9b\u7075\u6d3b\u6027\uff0c\u4ed6\u4eec\u53ef\u4ee5\u81ea\u5df1\u7ec4\u88c5\u9700\u8981\u7684\u6a21\u578b\u3002\u56e0\u6b64 <code>pytorch</code> \u80fd\u591f\u5728\u7075\u6d3b\u6027\u4e0e\u6613\u7528\u6027\u4e0a\u53d6\u5f97\u5e73\u8861\u3002</p> <p>\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c<code>torch.nn</code>\u4e0d\u5168\u90fd\u662f\u5bf9<code>torch.nn.functional</code>\u7684\u8303\u4f8b\uff0c\u6709\u4e00\u4e9b\u8c03\u7528\u4e86\u6765\u81ea\u5176\u4ed6\u5e93\u7684\u51fd\u6570\uff0c\u4f8b\u5982\u5e38\u7528\u7684<code>RNN</code>\u578b\u795e\u7ecf\u7f51\u7edc\u65cf\u5373\u6ca1\u6709\u5728<code>torch.nn.functional</code>\u4e2d\u51fa\u73b0\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95/","title":"Torch\u4e2d\u7684\u4e58\u6cd5","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/torch%E4%B8%AD%E7%9A%84%E4%B9%98%E6%B3%95/#6-torchdot","title":"6 torch.dot\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\uff0c\u4e14\u53ea\u80fd\u662f\u4e24\u4e2a\u4e00\u7ef4\u5411\u91cf","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vectornet%E8%AE%BA%E6%96%87/","title":"Vectornet\u8bba\u6587","text":"<ul> <li>\u9996\u5148\u5c06\u8f66\u9053\u7ebf\u3001\u4eba\u884c\u6a2a\u9053\u3001\u4ea4\u901a\u706f\u3001agent\u90fd\u7f16\u7801\u6210\u5411\u91cf\uff0c\u4ece\u800c\u6784\u6210\u4e00\u4e2a\u5b50\u56fe\uff0c\u5b50\u56fe\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u5c0f\u5411\u91cf\u6bb5\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5411\u91cf\u7684\u957f\u5ea6\u4e3a9\u7ef4\uff0c\u4e5f\u5c31\u662f\u8bf4agent0\u67093\u00d79\u7684\u7279\u5f81\u77e9\u9635\u548c2\u00d73\u7684\u90bb\u63a5\u77e9\u9635\uff0cagent1\u67093\u00d79\u7684\u7279\u5f81\u77e9\u9635\u548c2\u00d73\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u4e09\u4e2apolyline\u5206\u522b\u67093\u00d79\u7684\u7279\u5f81\u77e9\u9635\u548c2\u00d73\u7684\u90bb\u63a5\u77e9\u9635\uff0ccrosswork\u67094\u00d79\u7684\u7279\u5f81\u77e9\u9635\u548c2\u00d78\u7684\u90bb\u63a5\u77e9\u9635\u3002\u8fd9\u6837\u7ec4\u6210\u4e86\u516d\u4e2asubgraph </li> <li>\u5c06\u6bcf\u4e00\u4e2asubgraph\u90fd\u505a\u4e00\u6b21\u7279\u5f81\u62bd\u53d6\uff0c\u6bd4\u5982agent\u67096\u00d79\u7684\u7279\u5f81\u77e9\u9635\uff08\u516d\u4e2a\u8f68\u8ff9\u70b9\uff09\uff0c\u5148\u505a\u4e00\u6b21encoder\uff08\u5168\u8fde\u63a5\uff09\u3001\u7136\u540e\u5bf9encoder\u540e\u7684\u7ed3\u679c\u505a\u4e00\u4e2amax_pooling\uff0c\u7136\u540econcat\uff0c\u5f97\u52306\u00d7 100\u7684\u7279\u5f81\u77e9\u9635\u3002\u7136\u540e</li> </ul> <ul> <li> <p>\u7136\u540e\u5bf9\u62bd\u53d6\u7279\u5f81\u540e\u7684subgraph\u505a\u4e00\u6b21max pooling\uff086\u00d71\uff09\uff0c\u5f97\u5230\u4e00\u4e2a1\u00d7100\u7684\u7279\u5f81\u5411\u91cf\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u5b50\u56fe\u6700\u540e\u90fd\u4f1a\u88ab\u6620\u5c04\u52301\u00d7100\uff0c\u4e0d\u7ba1\u8fd9\u4e2a\u5b50\u56fe\u4e2d\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u8282\u70b9\uff09 </p> </li> <li> <p>\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u56fe\u505aattention\uff08\u8ddf\u56fe\u6ca1\u5565\u5173\u7cfb\uff0c\u5c31\u662f\u4e3a\u4e86\u5199\u8d77\u6765\u597d\u770b\u70b9\uff09\uff0c\u6700\u540e\u6bcf\u4e00\u4e2a\u5b50\u56fe\u7684\u7279\u5f81\u5411\u91cf\u53ef\u80fd\u53d8\u4e3a1\u00d7120\uff0c\u5982\u679cv\u7684\u7ef4\u5ea6\u662f120\u7684\u8bdd\uff0c\u5177\u4f53\u53d6\u51b3\u4e8eattention\u4e2dv\u7684\u7ef4\u5ea6 </p> </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/","title":"Vscode","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#1-inlay-hint","title":"1.\u663e\u793a\u53c2\u6570\u540d\uff0c\u5728\u8bbe\u7f6e\u91cc\u641c Inlay Hint","text":"<p>\u603b\u4f53\u8bbe\u7f6e <pre><code>\"editor.inlayHints.enabled\": \"on\"\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#11-c","title":"1.1 \u9488\u5bf9C++","text":"<p>\u7136\u540e\u627e\u5230C++\u548cpylance\u7684\u542f\u52a8\u9879 </p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#12-python","title":"1.2 \u9488\u5bf9python","text":"<p>\u76ee\u524d\u9488\u5bf9python\uff08pylance\uff09\u8fd8\u5b9e\u73b0\u4e0d\u4e86\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u9700\u8981\u501f\u52a9\u53e6\u5916\u4e00\u4e2a\u63d2\u4ef6 Inline Parameters for VSCode </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#2-c","title":"2 C++\u63d2\u4ef6\u8bbe\u7f6e","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#21","title":"2.1\u5b89\u88c5\u63d2\u4ef6\u4ee5\u53ca\u7b80\u5355\u8bbe\u7f6e","text":"<p>\u4e0b\u8f7dC/C++ Extension Pack\uff1a</p> <p>c/c++ \u63d0\u4f9b\u4ee3\u7801\u8df3\u8f6c\uff0c\u4e3b\u8981\u914d\u7f6e\u5982\u4e0b\uff1a</p> <p>\u63d0\u793a\u4e0e\u9ad8\u4eae\u76f8\u5173\uff1a Compile Commands\uff1a\u8bbe\u7f6e\u4e3acmake\u751f\u6210\u7684compile_commands.json Cpp Standard\uff1a\u8bbe\u7f6e\u4e3aC++17 Configuration Provider\uff1a\"ms-vscode.cmake-tools\" Intelli Sense Mode\uff1awindows-gcc-x64</p> <p>\u683c\u5f0f\u5316\u76f8\u5173\uff1a Clang_format_fallback Style\uff1aGoogle Clang_format_path\uff1aC:/Program Files (x86)/LLVM/bin/clang-format.exe Clang_format_style\uff1afile</p> <p>cmake \u63d0\u4f9bcmake\u7684\u4ee3\u7801\u63d0\u793a\u548c\u8bed\u6cd5\u9ad8\u4eae</p> <p>cmake tools \u63d0\u4f9bcmake\u7f16\u8bd1\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a Export Compile Commands File\uff1atrue</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#22configuration-providerinclude23","title":"2.2\u901a\u8fc7Configuration Provider\u914d\u7f6einclude\u63d0\u793a(\u4e0e2.3\u9009\u4e00\u4e2a)","text":"<p>\u200b\u200bCMake Tools\u63d2\u4ef6\u200b\u200b\u80fd\u591f\u7ed9\u200b\u200bC/C++\u63d2\u4ef6\u200b\u200b\u63d0\u4f9b\u4fe1\u606f\uff0c\u5b9e\u73b0IntelliSense\u3001\u4ee3\u7801\u8865\u5168\u3001\u6ce8\u91ca\u6d4f\u89c8\u3001\u6587\u4ef6\u8f6c\u8df3\u7b49\u529f\u80fd\u3002\u4e00\u822c\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u200b\u200bCMake Tools\u63d2\u4ef6\u200b\u200b\u65f6\u4f1a\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\uff1a</p> <p>Allow\u4e4b\u540e\u4f1a\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u200b\u200b.vscode/settings.json\u200b\u200b\u6587\u4ef6\uff08\u5373\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u8bbe\u7f6e\u6587\u4ef6\uff0c\u4f1a\u8986\u76d6\u7528\u6237\u8bbe\u7f6e\u6587\u4ef6\uff09\u4e2d\u6dfb\u52a0\uff1a <pre><code>{\n\"C_Cpp.default.configurationProvider\": \"ms-vscode.cmake-tools\"\n}\n</code></pre></p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5728\u200b\u200bC/C++\u63d2\u4ef6\u200b\u200b\u7684\u914d\u7f6e\u6587\u4ef6\u200b\u200b.vscode/c_cpp_properties.json\u200b\u200b\u4e2d\u624b\u52a8\u6307\u5b9a\u200b\u200bconfigurationProvider\u200b\u200b\uff1a <pre><code>{\n\"configurations\": [\n        {\n\"name\": \"Linux\",\n\"includePath\": [],\n\"defines\": [],\n\"compilerPath\": \"/usr/bin/gcc\",\n\"cStandard\": \"gnu11\",\n\"cppStandard\": \"gnu++14\",\n\"intelliSenseMode\": \"gcc-x64\",\n\"configurationProvider\": \"ms-vscode.cmake-tools\"\n        }\n    ],\n\"version\": 4\n}\n</code></pre></p> <p>\u8fd9\u6837\u200b\u200bC/C++\u63d2\u4ef6\u200b\u200b\u5c31\u80fd\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u4e0d\u7528\u81ea\u5df1\u6307\u5b9a\u200b\u200b.vscode/c_cpp_properties.json\u200b\u200b\u7684\u200b\u200bincludePath\u200b\u200b\u548c\u200b\u200bdefines\u200b\u200b\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#23-compile_commandsjsoninclude","title":"2.3 \u901a\u8fc7\u200b\u200bcompile_commands.json\u200b\u200b\u914d\u7f6einclude","text":"<p>\u9664\u4e86\u4ee5\u4e0a\u4e24\u79cd\u65b9\u5f0f\u4ee5\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a</p> <p>\u6307\u5b9acompile_commands.json \u8ba9cmake\u751f\u6210\u200b\u200bcompile_commands.json\u200b\u200b\uff0c\u9700\u8981\u5728\u8fd0\u884c\u200b\u200bcmake\u200b\u200b\u65f6\u6dfb\u52a0\u53c2\u6570\u200b\u200b-DCMAKE_EXPORT_COMPILE_COMMANDS=True\u200b\u200b\u6216\u8005\u5728CMakeLists.txt\u4e2d\u6dfb\u52a0\u200b\u200bset(CMAKE_EXPORT_COMPILE_COMMANDS True)\u200b\u200b\u3002</p> <p>\u4f8b\u5b50\uff1a\u5047\u8bbe\u5728\u200b\u200b~\u200b\u200b\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2ahello\u7684\u9879\u76ee <pre><code>cd ~/hello\nmkdir build\ncd build\ncmake -DCMAKE_EXPORT_COMPILE_COMMANDS=True ..\n</code></pre> \u4f1a\u5728\u200b\u200b~/hello/build\u200b\u200b\u4e0b\u751f\u6210\u200b\u200bcompile_commands.json\u200b\u200b\u3002</p> <p>\u5728vscode\u4e2d\u6253\u5f00\u200b\u200b<sub>/hello\u200b\u200b\u76ee\u5f55\uff0c\u914d\u7f6e\u200b\u200b.vscode/c_cpp_properties.json\u200b\u200b\u3002\u6307\u5b9a\u200b\u200bcompileCommands\u200b\u200b\u4e3a\u4e0a\u4e00\u6b65\u7684\u200b\u200b</sub>/hello/build/compile_commands.json\u200b\u200b\uff1a <pre><code>\"configurations\": [\n        {\n\"name\": \"Linux\",\n\"includePath\": [],\n\"defines\": [],\n\"compilerPath\": \"/usr/bin/g++\",\n\"cStandard\": \"gnu11\",\n\"cppStandard\": \"gnu++14\",\n\"intelliSenseMode\": \"gcc-x64\",\n\"compileCommands\": \"~/hello/build/compile_commands.json\"\n        }\n    ],\n\"version\": 4\n}\n</code></pre> \u8fd9\u6837\u548c\u6307\u5b9a\u200b\u200bconfigurationProvider\u200b\u200b\u662f\u4e00\u6837\u7684\u6548\u679c\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#cmake","title":"cmake\u63d2\u4ef6\u7684\u8bbe\u7f6e","text":"<p>\u9009\u62e9\u4e0d\u540c\u7684cmakelist.txt\u6587\u4ef6\u4ee5\u83b7\u5f97cmake tools\u63d2\u4ef6\u7684\u652f\u6301\uff1a</p> <p>settings.json\u6dfb\u52a0\u5982\u4e0b <pre><code>\"cmake.sourceDirectory\":\"/home/thicv/frenet_carla_ros/src/carla_ros_bridge_pnc/controller\"\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#3-python","title":"3 python\u7684\u521d\u59cb\u5316\u63d2\u4ef6\u8bbe\u7f6e","text":"<p>\u4e0b\u8f7dpython\u63d2\u4ef6\u3001pylance\u63d2\u4ef6\uff0c\u5e76\u628apylance\u4f5c\u4e3apython\u63d2\u4ef6\u7684\u8bed\u8a00\u670d\u52a1\u5668</p> <p>Pylance</p> <p>\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528Pylance\u66ff\u4ee3\u9ed8\u8ba4\u7684Python\u8bed\u8a00\u670d\u52a1\u5668\uff0c\u5b83\u652f\u6301\u4e00\u4e9b\u5f88\u68d2\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff1a</p> <ol> <li>Docstrings</li> <li>\u81ea\u52a8\u5bfc\u5165</li> <li>\u7c7b\u578b\u68c0\u67e5</li> <li>Code Lens</li> <li>IntelliCode \u517c\u5bb9\u6027</li> </ol> <p>\u8bbe\u7f6e\u5982\u4e0b\uff1a</p> <pre><code>{\n    \"python.languageServer\": \"Pylance\"\n}\n</code></pre> <p>\u8bbe\u7f6ecode formatter\u4e3ablack</p> <p>\u5b83\u548c\u9ed8\u8ba4\u4f7f\u7528\u7684<code>autopep8</code>\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4ec5\u4f1a\u6307\u51fa\u4ee3\u7801\u4e2d\u8fdd\u53cd<code>PEP8</code>\u89c4\u8303\u7684\u5730\u65b9\uff0c\u8fd8\u4f1a\u5bf9\u6ca1\u6709\u8fdd\u53cd<code>PEP8</code>\u4f46\u4ee3\u7801\u98ce\u683c\u4e0d\u4e00\u81f4\u7684\u5730\u65b9\u91cd\u65b0\u683c\u5f0f\u5316\uff0c\u53ef\u4ee5\u8ba9\u4ee4\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002</p> <p>\u8bbe\u7f6e\u6b65\u9aa4\uff1a</p> <ol> <li>\u6253\u5f00\u8bbe\u7f6e(<code>Ctrl+ ,</code>)\uff1a\u641c\u7d22<code>\"formatting.provider\"</code></li> <li>pip install black</li> <li>\u5982\u679c\u60f3\u5728\u00a0Jupyter Notebooks\u00a0\u4e2d\u4f7f\u7528\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u5b89\u88c5\uff1apip install black[jupyter]</li> <li>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\u8bbe\u7f6e\u6587\u4ef6\u6dfb\u52a0\u4e00\u884c\uff1a<code>\"python.formatting.provider\": \"black\",</code></li> <li>\u4f7f\u7528\u65b9\u6cd5\uff1a\u9009\u4e2d\u9700\u8981\u683c\u5f0f\u5316\u7684\u4ee3\u7801\uff0c\u53f3\u952e\u9009\u62e9\u683c\u5f0f\u5316\u9009\u5b9a\u5185\u5bb9\uff0c\u5feb\u6377\u952e\uff1a<code>Ctrl + K, Ctrl + F</code>\u6216\u8005<code>Alt+Shift+F</code>(ubuntu\u4e3a<code>Ctrl+Shift+I</code>)</li> </ol> <p>\u8bbe\u7f6e\u81ea\u52a8\u683c\u5f0f\u5316</p> <p>\u53ef\u4ee5\u6253\u5f00\u4fdd\u5b58\u65f6\u548c\u952e\u5165\u4e00\u884c\u540e\u7acb\u5373\u8fdb\u884c\u4ee3\u7801\u683c\u5f0f\u5316\uff0c\u8bbe\u7f6e\u9009\u9879\u4e3a\uff1a</p> <pre><code>{\n    \"editor.formatOnSave\": true,\n    \"editor.formatOnType\": true\n}\n</code></pre> <p>\u81ea\u52a8\u8865\u5168\u8bbe\u7f6e</p> <p>\u6253\u5f00\u81ea\u52a8\u6dfb\u52a0\u62ec\u53f7\uff0c\u5728\u81ea\u52a8\u8865\u5168\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u81ea\u52a8\u52a0\u4e0a\u62ec\u53f7\uff0c\u63d0\u9ad8\u6548\u7387\uff1a</p> <pre><code>{\n    \"python.autoComplete.addBrackets\": true,\n}\n</code></pre> <p>\u6dfb\u52a0\u81ea\u52a8\u8865\u5168\u5e93\u8def\u5f84\uff08\u8bbe\u7f6e\u4e86python.autoComplete.extraPaths\u5c31\u4e0d\u7528\u5355\u72ec\u8bbe\u7f6epylance\u4e86\uff09</p> <p>\u4e3a\u989d\u5916\u7684Python\u5e93\u652f\u6301\u81ea\u52a8\u8865\u5168\uff0c\u8bbe\u7f6e\u8def\u5f84\uff1a</p> <pre><code>{\n    \"python.autoComplete.extraPaths\": []\n}\n</code></pre> <p>\u6dfb\u52a0\u5206\u6790\u8def\u5f84\uff08\u9632\u6b62\u627e\u4e0d\u5230\u5e93\uff0c\u8bbe\u7f6e\u4e86python.autoComplete.extraPaths\u5c31\u4e0d\u7528\u5355\u72ec\u8bbe\u7f6epylance\u4e86\uff09</p> <p>\u6dfb\u52a0\u989d\u5916\u5bfc\u5165\u8def\u5f84\uff0c\u8bbe\u7f6e\uff1a</p> <pre><code>{\n    \"python.analysis.extraPaths\": []\n}\n</code></pre> <p>\u8fd9\u5bf9\u4e8e\u5bfc\u5165\u9879\u76ee\u4e2d\u4e00\u4e9b\u81ea\u5df1\u5b9e\u73b0\u7684python\u6587\u4ef6\u5f88\u6709\u5e2e\u52a9\u3002</p> <p>\u6dfb\u52a0\u5782\u76f4\u53c2\u8003\u7ebf</p> <p>Python\u7684\u4ee3\u7801\u98ce\u683c\u8981\u6c42\u4ee3\u7801\u4e00\u884c\u4e0d\u8d85\u8fc779\u5b57\u7b26\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ed9\u4ee3\u7801\u7f16\u8f91\u5668\u8bbe\u7f6e\u4e00\u6761\u5782\u76f4\u53c2\u8003\u7ebf\uff0c\u76f4\u89c2\u5224\u65ad\u4ee3\u7801\u662f\u5426\u592a\u957f\uff0c\u5e76\u4e14\u53ef\u4ee5\u81ea\u5b9a\u4e49\u53c2\u8003\u7ebf\u7684\u989c\u8272\uff1a</p> <pre><code>{ \n    \"editor.rulers\": [\n        80,\n    ],\n    \"workbench.colorCustomizations\": {\n        \"editorRuler.foreground\": \"#ff4081\"\n    }\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#4vscode","title":"4vscode\u5feb\u6377\u952e","text":"<p> vim\u914d\u7f6e <pre><code>\u00a0 \u00a0 \"vim.handleKeys\": {\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-a&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-f&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-x&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-c&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-z&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-v&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-[&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-]&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-s&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-b&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-/&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-w&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-shift+f&gt;\": false,\n\n\u00a0 \u00a0 },\n\u00a0 \u00a0 \"vim.insertModeKeyBindings\": [\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-h&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;left&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-l&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;right&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-j&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;down&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-k&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;up&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-u&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;esc&gt;\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"b\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"i\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-d&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;esc&gt;\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"e\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"a\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 ],\n</code></pre></p> <p>vscode\u5feb\u6377\u952e\uff1akeybindings.json <pre><code>[\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+shift+i\",\n\u00a0 \u00a0 \"command\": \"-workbench.action.toggleDevTools\",\n\u00a0 \u00a0 \"when\": \"isDevelopment\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+shift+i\",\n\u00a0 \u00a0 \"command\": \"editor.action.formatDocument\",\n\u00a0 \u00a0 \"when\": \"editorHasDocumentFormattingProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !inCompositeEditor\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"shift+alt+f\",\n\u00a0 \u00a0 \"command\": \"-editor.action.formatDocument\",\n\u00a0 \u00a0 \"when\": \"editorHasDocumentFormattingProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !inCompositeEditor\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+shift+i\",\n\u00a0 \u00a0 \"command\": \"editor.action.formatDocument.none\",\n\u00a0 \u00a0 \"when\": \"editorTextFocus &amp;&amp; !editorHasDocumentFormattingProvider &amp;&amp; !editorReadonly\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"shift+alt+f\",\n\u00a0 \u00a0 \"command\": \"-editor.action.formatDocument.none\",\n\u00a0 \u00a0 \"when\": \"editorTextFocus &amp;&amp; !editorHasDocumentFormattingProvider &amp;&amp; !editorReadonly\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+up\",\n\u00a0 \u00a0 \"command\": \"workbench.action.terminal.focusPrevious\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+pageup\",\n\u00a0 \u00a0 \"command\": \"-workbench.action.terminal.focusPrevious\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+down\",\n\u00a0 \u00a0 \"command\": \"workbench.action.terminal.focusNext\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+pagedown\",\n\u00a0 \u00a0 \"command\": \"-workbench.action.terminal.focusNext\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+m\",\n\u00a0 \u00a0 \"command\": \"editor.action.addSelectionToNextFindMatch\",\n\u00a0 \u00a0 \"when\": \"editorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+d\",\n\u00a0 \u00a0 \"command\": \"-editor.action.addSelectionToNextFindMatch\",\n\u00a0 \u00a0 \"when\": \"editorFocus\"\n\u00a0 }\n\n]\n</code></pre></p> <p>cmake tools: \u7f16\u8bd1\u5e76\u8fd0\u884c\uff1ashift+f5 \u7f16\u8bd1\u5e76\u8c03\u8bd5\uff1actrl+f5</p> <p>python: \u5feb\u901f\u8fd0\u884c\uff1actrl+alt+n</p> <p>latex\uff1a \u5feb\u901f\u7f16\u8bd1\uff1actrl+shift+b</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#5-vscode","title":"5 vscode\u914d\u8272","text":"<p>one dark pro\u914d\u8272\u8be6\u89e3\uff1a</p> <p>\u84dd\u8272\uff1a\u51fd\u6570\u3001</p> <p>\u7ea2\u8272\uff1a\u53d8\u91cf</p> <p>\u9ec4\u8272\uff1a\u7c7b\u3001\u7ed3\u6784\u4f53\u3001\u547d\u540d\u7a7a\u95f4</p> <p>\u7d2b\u8272\uff1a\u5173\u952e\u8bcd</p> <p>\u6df1\u9ec4\u8272\uff1a\u6570\u5b57</p> <p>\u7eff\u8272\uff1atext</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#6-vscodetaskjsonlaunchjson","title":"6 VScode\u4e2d\u7684task.json\u548claunch.json","text":"<pre><code>task.json\uff1a\u4e00\u822c\u7528\u6765\u7f16\u8bd1\u6587\u4ef6(ctrl+shift+b\u53ef\u8fd0\u884ctask.json\u3002\u6216\u8005\u4e5f\u53ef\u4ee5ctrl+shift+p\uff0c\u641c\u7d22build task)\nlaunch.json\uff1a\u4e00\u822c\u7528\u6765\u8c03\u8bd5debug\u6587\u4ef6\uff08\u53ef\u4ee5\u901a\u8fc7label\u8c03\u7528\u4e0d\u540c\u7684task\uff09\uff08f5\u53ef\u4ee5\u8fd0\u884claunch.json\uff0c\u4e5f\u53ef\u4ee5\u70b9\u51fbdebug\u6309\u94ae\uff09\n</code></pre> <p>\u5feb\u901f\u521b\u5efalaunch.json\uff1a\u70b9\u51fbdebug\u6309\u94ae\uff0c\u6216\u8005ctrl+shift+p\u641c\u7d22run and debug\uff0c\u5728\u751f\u6210\u7684launch.json\u7684config\u4e2d\u6253\u4e00\u4e2ac\uff0c\u9009\u62e9C/C++gdb\u542f\u52a8\uff0c\u5c31\u4f1a\u81ea\u52a8\u751f\u6210\u6a21\u677f\u3002</p> <p>\u5feb\u901f\u521b\u5efatask.json \uff1actrl+shift+p\uff0c\u641c\u7d22build task\uff0c\u9009\u62e9\u914d\u7f6etask</p> <p>\u5bf9\u4e8e\u4e00\u822c\u7684C++\u5de5\u7a0b\u6765\u8bf4\uff0cf5\u76f4\u63a5\u4f1a\u8fd0\u884claunch.json.</p> <p>\u53c2\u6570\u89e3\u91ca\uff1a cwd\uff08current work directory\uff09\uff1a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 \"problemMatcher\":\u95ee\u9898\u5206\u6790\u5668\uff0c\u5bf9\u4e8e\u7f16\u8bd1\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u53ef\u4ee5\u63d0\u53d6\u6709\u7528\u7684\u90e8\u5206\uff0c\u4e0d\u540c\u7684\u63d2\u4ef6\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u9884\u5b9a\u4e49\u597d\u7684\u95ee\u9898\u5206\u6790\u5668\uff0c\u6bd4\u5982\"/$ catkin-gcc\"\u3001\"/$ roslaunch\"\u3001 \"cmake\"\u7b49\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5b9e\u73b0\u3002 label\uff1a\u53ef\u4ee5\u968f\u4fbf\u53d6</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#cmakelaunchjsontaskjson","title":"\u666e\u901aCmake\u5de5\u7a0b\u7684launch.json\u548ctask.json","text":"<p>\u4f8b\u5982\u5bf9\u4e8e\u4e00\u4e2acmke\u5de5\u7a0b\uff1a</p> <p>launch.json\u7528\u6765debug\uff0c\u4e3b\u8981\u4fee\u6539\"program\"\uff0c\"preLaunchTask\"\uff08\u8981\u8ddftask.json\u914d\u5408\uff09\uff0c\"miDebuggerPath\"\u4e09\u4e2a\u53c2\u6570 <pre><code>{\n    // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 \n    // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002\n    // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"(gdb) \u542f\u52a8\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/build/${fileBasenameNoExtension}\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                },\n                {\n                    \"description\": \"\u5c06\u53cd\u6c47\u7f16\u98ce\u683c\u8bbe\u7f6e\u4e3a Intel\",\n                    \"text\": \"-gdb-set disassembly-flavor intel\",\n                    \"ignoreFailures\": true\n                }\n            ],\n            \"preLaunchTask\": \"g++ build active file\",  //\u8fd9\u91cc\u8981\u548ctasks.json\u4e2d\u7684make\u7684label\u4fdd\u6301\u4e00\u81f4\n            \"miDebuggerPath\": \"/usr/bin/gdb\"\n        }\n    ]\n}\n</code></pre></p> <p>tasks.json:\u7528\u6765\u7f16\u8bd1\uff0c\u5305\u542b\u4e86\u4e09\u4e2a\u4efb\u52a1\uff0c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u6267\u884ccmake\uff0c\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u6267\u884cmake\uff0c\u7b2c\u4e09\u4e2a\u4efb\u52a1\u540d\u79f0\u662fBuild\uff0c\u6267\u884ccmake\u548cmake\u4e24\u4e2a\u4efb\u52a1\uff0c\u5c06Build\u8bbe\u7f6e\u6210launch.json\u4e2dpreLaunchTask\u7684\u503c\uff0c\u6b63\u662f\u4ee3\u8868\uff0c\u5728\u8c03\u8bd5\u4e4b\u524d\u5148\u6267\u884ccmake\u548cmake\u4e24\u4e2a\u547d\u4ee4\uff1b <pre><code>{\n    \"version\": \"2.0.0\",\n    \"options\": {\n        \"cwd\": \"${workspaceRoot}/build\"\n    },//\u6307\u5b9a\u547d\u4ee4\u6267\u884c\u6240\u5728\u8def\u5f84\n    \"tasks\": [\n        {\n            \"label\": \"cmake\",//\u8be5\u4efb\u52a1\u7684\u540d\u79f0\uff0c\u968f\u610f\u53d6\uff1b\n            \"type\": \"shell\",//\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u53ef\u8bbe\u7f6e\u6210`shell`\u548c`process`\u3002\u524d\u8005\u5c06\u4efb\u52a1\u5f53\u6210\u547d\u4ee4\uff0c\u542f\u52a8\u7ec8\u7aef\u8fd0\u884c\uff0c\u540e\u8005\u76f4\u63a5\u8fd0\u884c\u3002\n            \"command\": \"cmake\",//\u547d\u4ee4\n            \"args\": [\n                \"-DCMAKE_BUILD_TYPE=Debug\",\n                // \"-DCMAKE_BUILD_TYPE=Release\",\n                \"-DCMAKE_EXPORT_COMPILE_COMMANDS=1\", // \u8fd9\u662f\u751f\u6210compile_commands.json\u6587\u4ef6\u7684\u9009\u9879\n                \"..\"\n            ]\n        },\n        {\n            \"label\": \"g++ build active file\",//\u8981\u6267\u884c\u7684\u7b2c\u4e8c\u4e2amake\u547d\u4ee4\n            \"type\": \"shell\",\n            \"command\": \"make\",\n            \"args\": [],\n            \"group\": {\n                \"kind\": \"build\",\n                \"isDefault\": true//\u53ef\u4ee5\u7528ctrl+shift+b\u8c03\u7528\n            },\n            \"dependsOn\":[\"cmake\"]///\u6307\u5b9a\uff0c\u5728\u6267\u884cmake\u4e4b\u524d\uff0c\u9700\u5148\u6267\u884ccmake\n        },\n    ]\n}\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#roslaunchjsontaskjson","title":"ROS\u5de5\u7a0b\u7684launch.json\u548ctask.json","text":"<p>launch.json\uff1aros\u4e2dlaunch.json\u53ef\u4ee5\u7528\u6765\u542f\u52a8launch\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765debug\u3002\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\u7528\u6cd5</p> <p>\u542f\u52a8launch\u8282\u70b9\u7684launch.json <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"movebase.launch\",\n            \"type\": \"ros\",\n            \"request\": \"launch\",\n            //tarhet: `launch`\u6587\u4ef6\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\n            \"target\":\"/home/chelizi/biyesehji_ws/src/rbx1/rbx1_bringup/launch/movebase.launch\"\n        }\n    ]\n}\n</code></pre></p> <p>\u7528\u4e8e\u8c03\u8bd5\u7684launch.json <pre><code>{\n    \"configurations\": [\n        {\n            \"name\": \"kindynamic_path_node\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/devel/lib/kindynamic_planner/test\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ]\n        }\n    ]\n}\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#7-latex","title":"7 Latex\u8bbe\u7f6e","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#1-texlivesmartpdf","title":"1 \u5b89\u88c5 texlive\uff0c\u914d\u7f6e\u597d\u73af\u5883\u53d8\u91cf\uff08\u4e0d\u9700\u8981\u88c5smartpdf\uff09","text":"<p>window \u5728\u6e05\u534e\u955c\u50cf\u4e0b\u8f7diso\uff1ahttps://mirrors.tuna.tsinghua.edu.cn/#</p> <p>linux\u5728\u5b98\u7f51\u4e0b\u8f7d\uff1ahttps://tug.org/texlive/acquire-netinstall.html \u4e0b\u8f7dinstall-tl-unx.tar.gz,\u89e3\u538b \u5e76\u4e14sudo ./install-tl-unx</p> <p>\u4e3a\u4e86\u80fd\u591f\u5728linux \u7684vscode\u4e2d\u683c\u5f0f\u5316\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5305\uff08windows\u4e0d\u9700\u8981\uff09 sudo cpan Log::Log4perl sudo cpan Log::Dispatch sudo cpan YAML::Tiny sudo cpan File::HomeDir sudo cpan Unicode::GCString</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#2vscode-latex-workshop","title":"2vscode \u5b89\u88c5latex workshop","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#3settingsjson","title":"3.\u914d\u7f6esettings.json","text":"<pre><code>\u00a0 \u00a0 //  LaTeX \u8bbe\u7f6e BEGIN \u00a0\n\u00a0 \u00a0 // bibtex \u683c\u5f0f\n\u00a0 \u00a0 \"latex-workshop.bibtex-format.tab\": \"tab\",\n\u00a0 \u00a0 // \u81ea\u52a8\u7f16\u8bd1\uff0c\u5168\u90e8\u5173\u95ed\uff0c\u5f53\u4e14\u4ec5\u5f53\u4f60\u8ba4\u4e3a\u6709\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u505a\u7f16\u8bd1\n\u00a0 \u00a0 \"latex-workshop.latex.autoBuild.run\": \"never\",\n\u00a0 \u00a0 \"latex-workshop.latex.autoBuild.cleanAndRetry.enabled\": false,\n\u00a0 \u00a0 // \u8bbe\u7f6e\u4ec0\u4e48\u65f6\u5019\u5bf9\u4e0a\u6587\u8bbe\u7f6e\u7684\u8f85\u52a9\u6587\u4ef6\u8fdb\u884c\u6e05\u9664\uff1a\n\u00a0 \u00a0 // \u00a0onBuilt: \u65e0\u8bba\u662f\u5426\u7f16\u8bd1\u6210\u529f\uff0c\u90fd\u6e05\u9664\u8f85\u52a9\u6587\u4ef6\n\u00a0 \u00a0 // onFailed: \u7f16\u8bd1\u5931\u8d25\u65f6\uff0c\u6e05\u9664\u8f85\u52a9\u6587\u4ef6\n\u00a0 \u00a0 // \u00a0 \u00a0never: \u4e0d\u6e05\u9664\u8f85\u52a9\u6587\u4ef6\n\u00a0 \u00a0 \"latex-workshop.latex.autoClean.run\": \"onBuilt\",\n\u00a0 \u00a0 // \u8bbe\u7f6e vscode \u7f16\u8bd1 tex \u6587\u6863\u65f6\u7684\u9ed8\u8ba4\u7f16\u8bd1\u94fe\uff1a\n\u00a0 \u00a0 \"latex-workshop.latex.recipe.default\": \"lastUsed\",\n\u00a0 \u00a0 // \u53cd\u5411\u540c\u6b65PDF\u7684\u5185\u90e8\u67e5\u770b\u5668\u7684\u5feb\u6377\u952e\u7ed1\u5b9a,\u6b63\u5411\u540c\u6b65\u9ed8\u8ba4\u4e3actrl+alt+j\uff1a\n\u00a0 \u00a0 \"latex-workshop.view.pdf.internal.synctex.keybinding\": \"double-click\",\n\u00a0 \u00a0 // \u8fd9\u662f\u4e00\u4e9b\u72ec\u7acb\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u5de5\u5177\u88ab\u7f16\u8bd1\u65b9\u6848\u8c03\u7528\n\u00a0 \u00a0 \"latex-workshop.latex.tools\": [\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Windows \u539f\u751f\u5b89\u88c5 TeX Live 2020 \u7684\u7f16\u8bd1\u9009\u9879\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"xelatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"command\": \"xelatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"args\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-synctex=1\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-interaction=nonstopmode\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-file-line-error\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-pdf\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"%DOCFILE%\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Windows Biber \u7f16\u8bd1\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"bibtex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"command\": \"biber\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"args\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"%DOCFILE%\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pdflatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"command\": \"pdflatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"args\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-synctex=1\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-interaction=nonstopmode\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-file-line-error\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"%DOC%\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 ],\n\u00a0 \u00a0 // \u8fd9\u662f\u4e00\u4e9b\u7f16\u8bd1\u65b9\u6848\uff0c\u4f1a\u51fa\u73b0\u5728 GUI \u83dc\u5355\u91cc\n\u00a0 \u00a0 \"latex-workshop.latex.recipes\": [\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // 1.1 Windows \u7f16\u8bd1\u7b80\u5355\u7684\u5c0f\u6587\u6863\uff0c\u8fd9\u4e2a\u9009\u9879\u4e0d\u592a\u5e38\u7528\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u6587\u7ae0\u90fd\u9700\u8981\u6709\u53c2\u8003\u6587\u732e\u7d22\u5f15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"Windows pdftex \u7b80\u5355\u7f16\u8bd1\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"tools\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"pdflatex\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // 1.1 Windows \u7f16\u8bd1\u7b80\u5355\u7684\u5c0f\u6587\u6863\uff0c\u8fd9\u4e2a\u9009\u9879\u4e0d\u592a\u5e38\u7528\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u6587\u7ae0\u90fd\u9700\u8981\u6709\u53c2\u8003\u6587\u732e\u7d22\u5f15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"Windows XeLaTeX \u7b80\u5355\u7f16\u8bd1\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"tools\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"xelatex\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // 1.2 Windows \u7f16\u8bd1\u5e26\u6709\u7d22\u5f15\u7684\u8bba\u6587\uff0c\u9700\u8981\u8fdb\u884c\u56db\u6b21\u7f16\u8bd1\uff1b-&gt; \u7b26\u53f7\u53ea\u662f\u4e00\u79cd\u6807\u8bb0\u800c\u5df2\uff0c\u6ca1\u6709\u7a0b\u5e8f\u4e0a\u7684\u610f\u4e49\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"Windows xe-&gt;bib-&gt;xe-&gt;xe \u590d\u6742\u7f16\u8bd1\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"tools\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"xelatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"bibtex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"xelatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"xelatex\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pdflatex -&gt; bibtex -&gt; pdflatex*2\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"tools\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"pdflatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"bibtex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"pdflatex\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"pdflatex\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 ],\n\u00a0 \u00a0 // \u6e05\u7a7a\u4e2d\u95f4\u6587\u4ef6\n\u00a0 \u00a0 \"latex-workshop.latex.clean.fileTypes\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.aux\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.bbl\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.blg\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.idx\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.ind\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.lof\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.lot\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.out\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.toc\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.acn\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.acr\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.alg\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.glg\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.glo\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.gls\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.ist\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.fls\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.log\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.fdb_latexmk\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.bcf\",\n\u00a0 \u00a0 \u00a0 \u00a0 \"*.run.xml\",\n\u00a0 \u00a0 ],\n\u00a0 \u00a0 //  LaTeX \u8bbe\u7f6e END \n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#4","title":"4.","text":"<p>\u8bb0\u5f97\u5c06vscode \u7684clean\u8bbe\u7f6e\u4e3aglob\uff0c\u4e0d\u7136latex-workshop.latex.clean.fileTypes\u4e0d\u751f\u6548 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#8-settingsjson","title":"8 settings.json","text":"<pre><code>{\n    \"security.workspace.trust.untrustedFiles\": \"open\",\n    \"code-runner.runInTerminal\": true,\n    \"workbench.editorAssociations\": {\n        \"*.ipynb\": \"jupyter-notebook\"\n    },\n    \"notebook.cellToolbarLocation\": {\n        \"default\": \"right\",\n        \"jupyter-notebook\": \"left\"\n    },\n    \"debug.onTaskErrors\": \"debugAnyway\",\n    \"cmake.configureOnOpen\": false,\n    \"explorer.confirmDelete\": false,\n    \"git.path\": \"C:/Program Files/Git/bin/git.exe\",\n    \"workbench.iconTheme\": \"vscode-icons\",\n    \"git.enableSmartCommit\": true,\n    \"remote.SSH.remotePlatform\": {\n        \"thicvhs\": \"linux\",\n        \"zhanjun\": \"linux\",\n        \"zhanjun-out\": \"linux\",\n        \"jetson\": \"linux\"\n    },\n    \"git.ignoreLegacyWarning\": true,\n    \"terminal.integrated.inheritEnv\": false,\n    \"vsicons.dontShowNewVersionMessage\": true,\n    \"update.mode\": \"manual\",\n    \"notebook.lineNumbers\": \"on\",\n    \"python.defaultInterpreterPath\": \"C:\\\\Users\\\\hanshuo\\\\.conda\\\\envs\\\\pytorch\\\\python.exe\",\n    \"EnglishChineseDictionary.enableHover\": true,\n    \"[cpp]\": {\n        \"editor.defaultFormatter\": \"ms-vscode.cpptools\"\n    },\n    \"editor.tabSize\": 2,\n    \"editor.inlineSuggest.enabled\": true,\n    \"github.copilot.enable\": {\n        \"*\": true,\n        \"yaml\": false,\n        \"plaintext\": false,\n        \"markdown\": false\n    },\n    \"window.commandCenter\": false,\n    \"workbench.layoutControl.enabled\": false,\n    \"C_Cpp.clang_format_fallbackStyle\": \"Google\",\n    \"git.confirmSync\": false,\n    \"editor.minimap.enabled\": false,\n    \"editor.fontSize\": 15,\n    \"gitlens.hovers.currentLine.over\": \"line\",\n    \"gitlens.mode.active\": \"zen\",\n    \"vim.handleKeys\": {\n        \"&lt;C-a&gt;\": false,\n        \"&lt;C-f&gt;\": false,\n        \"&lt;C-x&gt;\": false,\n        \"&lt;C-c&gt;\": false,\n        \"&lt;C-z&gt;\": false,\n        \"&lt;C-v&gt;\": false,\n        \"&lt;C-[&gt;\": false,\n        \"&lt;C-]&gt;\": false,\n        \"&lt;C-s&gt;\": false,\n        \"&lt;C-b&gt;\": false,\n        \"&lt;C-/&gt;\": false,\n        \"&lt;C-w&gt;\": false,\n        \"&lt;C-shift+f&gt;\": false,\n    },\n    \"vim.insertModeKeyBindings\": [\n        {\n            \"before\": [\n                \"&lt;c-h&gt;\"\n            ],\n            \"after\": [\n                \"&lt;left&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-l&gt;\"\n            ],\n            \"after\": [\n                \"&lt;right&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-j&gt;\"\n            ],\n            \"after\": [\n                \"&lt;down&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-k&gt;\"\n            ],\n            \"after\": [\n                \"&lt;up&gt;\"\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-u&gt;\"\n            ],\n            \"after\": [\n                \"&lt;esc&gt;\",\n                \"b\",\n                \"i\",\n            ]\n        },\n        {\n            \"before\": [\n                \"&lt;c-d&gt;\"\n            ],\n            \"after\": [\n                \"&lt;esc&gt;\",\n                \"e\",\n                \"a\",\n            ]\n        }\n    ],\n    \"workbench.colorTheme\": \"Default Dark+\",\n    \"[python]\": {\n        \"editor.defaultFormatter\": \"ms-python.python\"\n    },\n    \"workbench.startupEditor\": \"none\",\n    \"cmake.automaticReconfigure\": false,\n    \"cmake.autoSelectActiveFolder\": false,\n    \"C_Cpp.inlayHints.parameterNames.enabled\": true,\n    \"C_Cpp.default.intelliSenseMode\": \"windows-gcc-x86\",\n    \"python.languageServer\": \"Pylance\",\n    \"C_Cpp.default.cppStandard\": \"c++17\",\n    \"editor.cursorSurroundingLines\": 15,\n    \"cmake.configureOnEdit\": false,\n    //  LaTeX \u8bbe\u7f6e BEGIN  \n    // bibtex \u683c\u5f0f\n    \"latex-workshop.bibtex-format.tab\": \"tab\",\n    // \u81ea\u52a8\u7f16\u8bd1\uff0c\u5168\u90e8\u5173\u95ed\uff0c\u5f53\u4e14\u4ec5\u5f53\u4f60\u8ba4\u4e3a\u6709\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u505a\u7f16\u8bd1\n    \"latex-workshop.latex.autoBuild.run\": \"never\",\n    \"latex-workshop.latex.autoBuild.cleanAndRetry.enabled\": false,\n    // \u8bbe\u7f6e\u4ec0\u4e48\u65f6\u5019\u5bf9\u4e0a\u6587\u8bbe\u7f6e\u7684\u8f85\u52a9\u6587\u4ef6\u8fdb\u884c\u6e05\u9664\uff1a\n    //  onBuilt: \u65e0\u8bba\u662f\u5426\u7f16\u8bd1\u6210\u529f\uff0c\u90fd\u6e05\u9664\u8f85\u52a9\u6587\u4ef6\n    // onFailed: \u7f16\u8bd1\u5931\u8d25\u65f6\uff0c\u6e05\u9664\u8f85\u52a9\u6587\u4ef6\n    //    never: \u4e0d\u6e05\u9664\u8f85\u52a9\u6587\u4ef6\n    \"latex-workshop.latex.autoClean.run\": \"onBuilt\",\n    // \u8bbe\u7f6e vscode \u7f16\u8bd1 tex \u6587\u6863\u65f6\u7684\u9ed8\u8ba4\u7f16\u8bd1\u94fe\uff1a\n    \"latex-workshop.latex.recipe.default\": \"lastUsed\",\n    // \u53cd\u5411\u540c\u6b65PDF\u7684\u5185\u90e8\u67e5\u770b\u5668\u7684\u5feb\u6377\u952e\u7ed1\u5b9a,\u6b63\u5411\u540c\u6b65\u9ed8\u8ba4\u4e3actrl+alt+j\uff1a\n    \"latex-workshop.view.pdf.internal.synctex.keybinding\": \"double-click\",\n    // \u8fd9\u662f\u4e00\u4e9b\u72ec\u7acb\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u5de5\u5177\u88ab\u7f16\u8bd1\u65b9\u6848\u8c03\u7528\n    \"latex-workshop.latex.tools\": [\n        {\n            // Windows \u539f\u751f\u5b89\u88c5 TeX Live 2020 \u7684\u7f16\u8bd1\u9009\u9879\n            \"name\": \"xelatex\",\n            \"command\": \"xelatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"-pdf\",\n                \"%DOCFILE%\"\n            ]\n        },\n        {\n            // Windows Biber \u7f16\u8bd1\n            \"name\": \"bibtex\",\n            \"command\": \"biber\",\n            \"args\": [\n                \"%DOCFILE%\"\n            ]\n        },\n        {\n            \"name\": \"pdflatex\",\n            \"command\": \"pdflatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"%DOC%\"\n            ]\n        },\n    ],\n    // \u8fd9\u662f\u4e00\u4e9b\u7f16\u8bd1\u65b9\u6848\uff0c\u4f1a\u51fa\u73b0\u5728 GUI \u83dc\u5355\u91cc\n    \"latex-workshop.latex.recipes\": [\n        {\n            // 1.1 Windows \u7f16\u8bd1\u7b80\u5355\u7684\u5c0f\u6587\u6863\uff0c\u8fd9\u4e2a\u9009\u9879\u4e0d\u592a\u5e38\u7528\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u6587\u7ae0\u90fd\u9700\u8981\u6709\u53c2\u8003\u6587\u732e\u7d22\u5f15\n            \"name\": \"Windows pdftex \u7b80\u5355\u7f16\u8bd1\",\n            \"tools\": [\n                \"pdflatex\"\n            ]\n        },\n        {\n            // 1.1 Windows \u7f16\u8bd1\u7b80\u5355\u7684\u5c0f\u6587\u6863\uff0c\u8fd9\u4e2a\u9009\u9879\u4e0d\u592a\u5e38\u7528\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u6587\u7ae0\u90fd\u9700\u8981\u6709\u53c2\u8003\u6587\u732e\u7d22\u5f15\n            \"name\": \"Windows XeLaTeX \u7b80\u5355\u7f16\u8bd1\",\n            \"tools\": [\n                \"xelatex\"\n            ]\n        },\n        {\n            // 1.2 Windows \u7f16\u8bd1\u5e26\u6709\u7d22\u5f15\u7684\u8bba\u6587\uff0c\u9700\u8981\u8fdb\u884c\u56db\u6b21\u7f16\u8bd1\uff1b-&gt; \u7b26\u53f7\u53ea\u662f\u4e00\u79cd\u6807\u8bb0\u800c\u5df2\uff0c\u6ca1\u6709\u7a0b\u5e8f\u4e0a\u7684\u610f\u4e49\n            \"name\": \"Windows xe-&gt;bib-&gt;xe-&gt;xe \u590d\u6742\u7f16\u8bd1\",\n            \"tools\": [\n                \"xelatex\",\n                \"bibtex\",\n                \"xelatex\",\n                \"xelatex\"\n            ]\n        },\n        {\n            \"name\": \"pdflatex -&gt; bibtex -&gt; pdflatex*2\",\n            \"tools\": [\n                \"pdflatex\",\n                \"bibtex\",\n                \"pdflatex\",\n                \"pdflatex\"\n            ]\n        }\n    ],\n    // \u6e05\u7a7a\u4e2d\u95f4\u6587\u4ef6\n    \"latex-workshop.latex.clean.fileTypes\": [\n        \"*.aux\",\n        \"*.bbl\",\n        \"*.blg\",\n        \"*.idx\",\n        \"*.ind\",\n        \"*.lof\",\n        \"*.lot\",\n        \"*.out\",\n        \"*.toc\",\n        \"*.acn\",\n        \"*.acr\",\n        \"*.alg\",\n        \"*.glg\",\n        \"*.glo\",\n        \"*.gls\",\n        \"*.ist\",\n        \"*.fls\",\n        \"*.log\",\n        \"*.fdb_latexmk\",\n        \"*.bcf\",\n        \"*.run.xml\",\n    ],\n    //  LaTeX \u8bbe\u7f6e END \n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#9","title":"9 \u9ad8\u6548\u8bbe\u7f6e","text":"<p>\u6253\u5f00\u7684\u7f16\u7f16\u8f91\u5668</p> <p></p> <p>\u591a\u884c\u5c55\u793atabs\uff1awrap tabs </p> <p>\u7ec8\u7aef\u663e\u793a\u884c\u6570\u4e0a\u9650 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#10","title":"10 \u914d\u7f6e\u8fdc\u7a0b\u514d\u5bc6\u7801\u767b\u5f55","text":"<p>\u6ce8\u610f\uff1a\u4e0d\u8bba\u662f\u8fdc\u7a0bssh\u8fd8\u662fgithub\u3001gitee\uff0c\u53ea\u8981\u60f3\u5728\u672c\u5730\u514d\u5bc6\u7801\u767b\u5f55ssh-server\u3001github\u3001gitee\uff0c\u5c31\u8981\u628a\u672c\u5730\u7684\u516c\u94a5\u653e\u5230ssh-server\u3001github\u3001gitee\u4e0a\u3002</p> <ol> <li>\u5728\u672c\u5730\uff08windows\uff09\u751f\u6210sshkey\uff1a     ssh-keygen -t rsa</li> <li>\u5728C\u76d8\u7528\u6237\u4e0b\u7684.ssh\u6587\u4ef6\u5939\u4e0b\u627e\u5230id_rsa.pub \u516c\u94a5</li> <li>\u590d\u5236\u516c\u94a5\u91cc\u7684\u5185\u5bb9</li> <li>\u5728\u8fdc\u7a0blinux\u4e0b\u751f\u6210sshkey\uff08\u53ef\u9009\uff0c\u5982\u679c\u4e4b\u524d\u751f\u6210\u5c31\u4e0d\u7528\u6b64\u6b65\u9aa4\uff0c\u6b64\u6b65\u9aa4\u4e3b\u8981\u662f\u4e3a\u4e86\u5728home\u4e0b\u751f\u6210.ssh\u6587\u4ef6\u5939\uff09   ssh-keygen -t rsa</li> <li>\u8fdb\u5165\u5230\u8fdc\u7a0blinux\u4e0b\u7684.ssh\u4e0b\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 authorized_keys\uff0c\u5e76\u628a3\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u8fdb\u53bb\u3002</li> </ol>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#11-vscodepyprojecttoml","title":"11 vscode\u914d\u7f6epyproject.toml","text":"<p>\u5982\u679c\u5bf9\u4e8emmdection\u4e2dconfig\uff0cpyright\u7ecf\u5e38\u6807\u7ea2\uff0c\u8fd9\u662f\u56e0\u4e3apylance\u7684\u7248\u672c\u592a\u65b0\uff0c\u89e3\u51b3\u65b9\u6848\uff1a</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#1-pylance81","title":"1. \u964d\u7ea7pylance\u52308.1","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/vscode/#2-pyprojecttomlpyright","title":"2 \u5728pyproject.toml\u4e2d\u914d\u7f6epyright","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/windows%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/","title":"Windows\u7684\u5feb\u6377\u952e","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/windows%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/#_1","title":"\u684c\u9762\u76f8\u5173","text":"<pre><code>\u65b0\u5efa\u684c\u9762 win+ctrl+d\n\u5220\u9664\u684c\u9762 win+ctrl+f4\n\u79fb\u52a8\u684c\u9762 win+ctrl+ \u5de6/\u53f3\n\u663e\u793a\u6240\u6709\u684c\u9762 win + tab\n\u684c\u9762\u5185\u5207\u6362\u6d3b\u52a8\u7a97\u53e3 alt+tab\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/windows%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/#_2","title":"\u7a97\u53e3\u76f8\u5173","text":"<pre><code>\u7a97\u53e3\u78c1\u8d34 win+\u5de6 \u6216\u8005 win+ \u53f3\n\u6700\u5927\u5316\u7a97\u53e3 win+\u4e0a\n\u6700\u5c0f\u5316\u7a97\u53e3 win+\u4e0b\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/windows%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/#_3","title":"\u6253\u5f00\u5e94\u7528\u76f8\u5173","text":"<pre><code>\u6253\u5f00\u4efb\u52a1\u680f\u5bf9\u5e94\u7684\u5e94\u7528 win+1\u30012\u30013\n\u4efb\u52a1\u680f\u95f4\u5207\u6362\u7a0b\u5e8f  win+T\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/windows%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/#_4","title":"\u6d4f\u89c8\u5668\u76f8\u5173","text":"<pre><code>\u5207\u6362\u6807\u7b7e\u9875 ctrl+tab\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/x86%E3%80%81arm%E3%80%81risc-v%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/","title":"X86\u3001arm\u3001risc v\u7684\u533a\u522b\u4e0e\u8054\u7cfb","text":"<p>\u5173\u4e8e\u4e0d\u540c\u67b6\u6784\u7684\u533a\u522b\u4e0e\u8054\u7cfb</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/x86%E3%80%81arm%E3%80%81risc-v%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/#1-mcucpumpuap","title":"1 mcu\u3001cpu\uff08mpu\uff09\u3001ap\u7684\u533a\u522b","text":"<ul> <li> <p>CPU\u662fCentral Processing Unit\u7684\u7f29\u5199\uff0c\u8ba1\u7b97\u673a\u7684\u8fd0\u7b97\u63a7\u5236\u6838\u5fc3\u5c31\u662fCPU\u3002CPU\u662f\u7531\u8fd0\u7b97\u5668\u3001\u63a7\u5236\u5668\u548c\u5bc4\u5b58\u5668\u53ca\u76f8\u5e94\u7684\u603b\u7ebf\u6784\u6210\u3002\u4f17\u6240\u5468\u77e5\u7684\u4e09\u7ea7\u6d41\u6c34\u7ebf\uff1a\u53d6\u5740\u3001\u8bd1\u7801\u3001\u6267\u884c\u7684\u5bf9\u8c61\u5c31\u662fCPU\uff0cCPU\u4ece\u5b58\u50a8\u5668\u6216\u9ad8\u901f\u7f13\u51b2\u5b58\u50a8\u5668\u4e2d\u53d6\u51fa\u6307\u4ee4\uff0c\u653e\u5165\u6307\u4ee4\u5bc4\u5b58\u5668\uff0c\u5e76\u5bf9\u6307\u4ee4\u8bd1\u7801\uff0c\u7136\u540e\u6267\u884c\u6307\u4ee4\u3002\u800c\u8ba1\u7b97\u673a\u7684\u53ef\u7f16\u7a0b\u6027\u5176\u5b9e\u5c31\u662f\u6307\u5bf9CPU\u7684\u7f16\u7a0b\u3002CP U\u53ea\u6709\u5904\u7406\u5355\u5143\uff0c\u6ca1\u6709\u7247\u4e0aram\u548cflash\uff0c\u6bd4\u5982intel\u7684i5\u3002</p> </li> <li> <p>mcu\u4e00\u822c\u6307\u5355\u7247\u673a\u7684\u5904\u7406\u5668\uff0c\u4ed6\u4e0d\u5149\u5305\u542bcpu\uff0c\u8fd8\u5305\u62ec\u7247\u4e0a\u7684ram\u548cflash\uff0c\u6bd4\u598251\u3001stm32f1\uff0cstm32f4\u7b49\u3002\u4e00\u822c\u90fd\u662farm\u67b6\u6784\u3002</p> </li> <li> <p>ap\uff08\u6216\u8005soc\uff09\uff1a\u5728mcu\u7684\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u6269\u5c55\u7247\u5916\u7684ram\u548cflash\uff0c\u751a\u81f3\u5305\u542bGPU\u6838\u5fc3\uff0c\u6027\u80fd\u66f4\u52a0\u5f3a\u5927\uff0c\u5e38\u7528\u5728\u9ad8\u6027\u80fd\u5d4c\u5165\u5f0f\u8bbe\u5907\uff0c\u6bd4\u5982\u624b\u673a\uff0c\u82f9\u679c\u7684m1\u82af\u7247\u3002</p> </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/x86%E3%80%81arm%E3%80%81risc-v%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/#2-x86armrisc-v","title":"2 x86\u3001arm\u3001risc-v\u7684\u533a\u522b\u4e0e\u8054\u7cfb","text":"<ol> <li> <p>\u8bbe\u8ba1\u7406\u5ff5\uff1a</p> <ul> <li>x86\uff08\u6216\u79f0\u4e3ax86-64\uff09\u662f\u7531Intel\u548cAMD\u5f00\u53d1\u7684\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff08CISC\uff09\u67b6\u6784\u3002\u5b83\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u63d0\u4f9b\u5e7f\u6cdb\u7684\u6307\u4ee4\u96c6\u548c\u529f\u80fd\uff0c\u4ee5\u652f\u6301\u590d\u6742\u7684\u8f6f\u4ef6\u4efb\u52a1\u3002</li> <li>ARM\u662f\u7531ARM Holdings\u5f00\u53d1\u7684\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff08RISC\uff09\u67b6\u6784\u3002\u5b83\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u7b80\u5316\u6307\u4ee4\u96c6\uff0c\u63d0\u9ad8\u80fd\u6548\u548c\u6027\u80fd\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3002</li> <li>RISC-V\u662f\u4e00\u4e2a\u5f00\u6e90\u6307\u4ee4\u96c6\u67b6\u6784\uff0c\u7531\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u5f00\u53d1\u3002\u5b83\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u7b80\u6d01\u3001\u7075\u6d3b\u548c\u53ef\u6269\u5c55\u7684\u6307\u4ee4\u96c6\uff0c\u7528\u4e8e\u5404\u79cd\u5e94\u7528\u9886\u57df\u3002</li> <li> <p>\u5e02\u573a\u5e94\u7528\uff1a</p> </li> <li> <p>x86\u67b6\u6784\u4e3b\u8981\u7528\u4e8e\u4e2a\u4eba\u7535\u8111\uff08\u5305\u62ec\u53f0\u5f0f\u673a\u548c\u7b14\u8bb0\u672c\u7535\u8111\uff09\u548c\u670d\u52a1\u5668\u9886\u57df\u3002\u5b83\u5728\u684c\u9762\u8ba1\u7b97\u548c\u4f01\u4e1a\u7ea7\u8ba1\u7b97\u65b9\u9762\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p> </li> <li>ARM\u67b6\u6784\u4e3b\u8981\u7528\u4e8e\u79fb\u52a8\u8bbe\u5907\uff08\u5982\u667a\u80fd\u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff09\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u4f4e\u529f\u8017\u8bbe\u5907\u3002\u5b83\u5728\u79fb\u52a8\u9886\u57df\u5177\u6709\u663e\u8457\u7684\u5e02\u573a\u4efd\u989d\uff0c\u5e76\u4e14\u5728\u7269\u8054\u7f51\uff08IoT\uff09\u548c\u5d4c\u5165\u5f0f\u9886\u57df\u4e5f\u5f88\u53d7\u6b22\u8fce\u3002</li> <li>RISC-V\u67b6\u6784\u76ee\u524d\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u4e00\u4e9b\u7279\u5b9a\u9886\u57df\u7684\u7814\u7a76\u548c\u5b9e\u9a8c\u4e2d\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u5982\u4eba\u5de5\u667a\u80fd\u52a0\u901f\u5668\u3001\u9ad8\u6027\u80fd\u8ba1\u7b97\u548c\u8fb9\u7f18\u8ba1\u7b97\u7b49\u3002</li> <li> <p>\u751f\u6001\u7cfb\u7edf\uff1a</p> </li> <li> <p>x86\u67b6\u6784\u5177\u6709\u5e9e\u5927\u7684\u751f\u6001\u7cfb\u7edf\u548c\u5e7f\u6cdb\u7684\u8f6f\u4ef6\u652f\u6301\u3002\u5b83\u6709\u4e30\u5bcc\u7684\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u8bd1\u5668\u3001\u5f00\u53d1\u5de5\u5177\u548c\u5e94\u7528\u7a0b\u5e8f\u53ef\u7528\uff0c\u4ee5\u53ca\u5927\u91cf\u7684\u7b2c\u4e09\u65b9\u786c\u4ef6\u8bbe\u5907\u548c\u6269\u5c55\u3002</p> </li> <li>ARM\u67b6\u6784\u4e5f\u6709\u5f3a\u5927\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u7279\u522b\u662f\u5728\u79fb\u52a8\u8bbe\u5907\u9886\u57df\u3002\u5b83\u6709\u5e7f\u6cdb\u7684\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\uff08\u5982Android\u548ciOS\uff09\uff0c\u5e76\u4e14\u6709\u8bb8\u591aARM\u67b6\u6784\u7684\u82af\u7247\u4f9b\u5e94\u5546\u548c\u5f00\u53d1\u5de5\u5177\u3002</li> <li>RISC-V\u4f5c\u4e3a\u4e00\u4e2a\u76f8\u5bf9\u65b0\u7684\u67b6\u6784\uff0c\u5176\u751f\u6001\u7cfb\u7edf\u6b63\u5728\u4e0d\u65ad\u53d1\u5c55\u4e2d\u3002\u867d\u7136\u5b83\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u548c\u5f00\u53d1\u5de5\u5177\u7684\u652f\u6301\uff0c\u4f46\u4e0ex86\u548cARM\u76f8\u6bd4\uff0c\u5176\u751f\u6001\u7cfb\u7edf\u8fd8\u76f8\u5bf9\u8f83\u5c0f\u3002</li> </ul> </li> </ol> <p>\u7cbe\u7b80\u6307\u4ee4\u96c6\uff1aarm\u3001risc-v\u3002\u7cbe\u7b80\u6307\u4ee4\u96c6\u4e00\u5171\u53ea\u6709\u51e0\u5341\u4e2a\u6307\u4ee4\u3002\u6bd4\u5982 </p> <p>\u590d\u6742\u6307\u4ee4\u96c6\uff1ax86\u3002\u590d\u6742\u6307\u4ee4\u96c6\u6709\u51e0\u767e\u4e2a\u6307\u4ee4\uff0c\u6bd4\u5982\u6570\u636e\u4f20\u8f93\u7684MOV\u3001\u7b97\u6570\u8fd0\u7b97\u7684ADD\uff08\u52a0\u6cd5\uff09\uff0cADC\uff08\u5e26\u4f4d\u52a0\u6cd5\uff09\uff0cINC\uff08\u52a01\uff09\uff0c\u903b\u8f91\u8fd0\u7b97 AND\u3001OR\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/x86%E3%80%81arm%E3%80%81risc-v%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/#3","title":"3 \u5404\u6307\u4ee4\u96c6\u7684\u6c47\u7f16\u683c\u5f0f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/x86%E3%80%81arm%E3%80%81risc-v%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/#31-arm","title":"3.1 arm","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/x86%E3%80%81arm%E3%80%81risc-v%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/#32-x86","title":"3.2 x86","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E4%B8%AA%E4%BA%BA%E5%AF%B9%E4%BA%8E%E5%89%8D%E9%A6%88%2B%E5%8F%8D%E9%A6%88%E6%8E%A7%E5%88%B6%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%9A/","title":"\u4e2a\u4eba\u5bf9\u4e8e\u524d\u9988+\u53cd\u9988\u63a7\u5236\u7684\u7406\u89e3\uff1a","text":"<p>\u4e2a\u4eba\u5bf9\u4e8e\u524d\u9988+\u53cd\u9988\u63a7\u5236\u7684\u7406\u89e3\uff1a</p> <p>\u524d\u9988\u53ef\u4ee5\u8ba4\u4e3a\u662f\u57fa\u4e8e\u6a21\u578b/\u57fa\u4e8e\u7ecf\u9a8c\u7684\uff0c\u662f\u5178\u578b\u7684\u5f00\u73af\u63a7\u5236\uff0c\u901a\u8fc7\u671f\u671b\u7684\u52a0\u901f\u5ea6\u76f4\u63a5\u8ba1\u7b97\u8f6c\u77e9\u3002 \u53cd\u9988\u662f\u57fa\u4e8e\u8bef\u5dee\u7684\uff0c\u671f\u671b\u52a0\u901f\u5ea6-\u5f53\u524d\u52a0\u901f\u5ea6\u7684\u8bef\u5dee\uff0cP I D \u7ed9\u51fa\u63a7\u5236\u91cf\uff08\u8f6c\u77e9\uff09</p> <p>\u524d\u9988\u63a7\u5236\u901f\u5ea6\u5feb\uff0c\u7406\u8bba\u4e0a\uff0c\u5982\u679c\u524d\u9988\u6a21\u578b\u591f\u51c6\u786e\uff0c\u53ef\u4ee5\u7528\u53cd\u9988\uff0c\u4f46\u662f\u524d\u9988\u4e0d\u53ef\u80fd\u5f88\u51c6\uff0c\u6709\u65f6\u5019\u53ea\u662f\u4e00\u4e2a\u5927\u81f4\u7684\u91cf\uff0c\u6bd4\u5982\u7528\u67d0\u4e2a\u53d8\u5316\u8d8b\u52bf\u4e00\u81f4\u7684\u91cf\u4f5c\u4e3a\u524d\u9988\u4e24..... \u56e0\u6b64\u524d\u9988\u4e00\u822c\u548c\u53cd\u9988\u63a7\u5236\u540c\u65f6\u8bbe\u8ba1\u5b9e\u73b0</p> <p></p> <p>\u57fa\u7840\u8f6c\u77e9\u7684\u8ba1\u7b97 \uff1a\u524d\u9988</p> <p>\u8865\u507f\u8f6c\u77e9\u7684\u8ba1\u7b97\uff1a\u53cd\u9988 </p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%8E%B0%E5%9C%A8RNN%E4%B8%80%E8%88%AC%E9%87%87%E7%94%A8LSTM%E8%80%8C%E4%B8%8D%E7%94%A8%E6%9C%80%E4%BC%A0%E7%BB%9F%E7%9A%84RNN/","title":"\u4e3a\u4ec0\u4e48\u73b0\u5728RNN\u4e00\u822c\u91c7\u7528LSTM\u800c\u4e0d\u7528\u6700\u4f20\u7edf\u7684RNN","text":"<p>1\u3001RNN\u662fsequence\u7684\uff0c\u68af\u5ea6\u76f8\u4e58\u4f1a\u9020\u6210\u7206\u70b8\u6216\u8005\u6d88\u5931\u3002\u5bfc\u81f4\u5b83\u7684error surface\u5f88\u5d0e\u5c96(rough)</p> <p>2\u3001LSTM\u6709\u4e86\u8f93\u5165\u95e8\u3001\u8f93\u51fa\u95e8\u3001\u9057\u5fd8\u95e8\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u68af\u5ea6\u6d88\u5931\uff08\u4f46\u8fd8\u662f\u89e3\u51b3\u4e0d\u4e86\u68af\u5ea6\u7206\u70b8\uff09\u4e86\u4e0a\u8ff0\u60c5\u51b5\uff0c\u4f7f\u5f97error surface\u53d8\u5f97\u6bd4\u8f83flat 3\u3001\u5982\u679cLSTM overfitting\u4e86\uff0c\u53ef\u4ee5\u8003\u8651GRU\uff08\u53ea\u6709\u4e24\u4e2a\u95e8\uff09</p> <p>4\u3001LSTM\uff08RNN\uff09\u53ef\u4ee5\u505aencoder-decoder\uff0c\u6765\u5b9e\u73b0word embedding\uff08transformer\u540c\u6837\u53ef\u4ee5\uff09 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%98%E6%80%9D%E5%BA%B7%EF%BC%88%E5%A4%A7%E7%96%86%EF%BC%89%E5%85%AC%E5%BC%80%E8%AF%BE%E2%80%94%E2%80%94%E9%98%B2%E5%BE%A1%E6%80%A7%E8%A7%84%E5%88%92%EF%BC%88%E6%A0%91%E8%BD%A8%E8%BF%B9%EF%BC%8C%E5%89%8D%E5%8D%8A%E9%83%A8%E5%88%86%E4%B8%8D%E5%88%86%E5%8F%89%EF%BC%89%EF%BC%8C%E9%A2%84%E6%9C%9F%E9%A3%8E%E9%99%A9%E8%A7%84%E5%88%92%EF%BC%88%E5%8D%95%E5%B8%A7%E5%AE%89%E5%85%A8_%E9%A2%84%E6%B5%8B%E6%97%B6%E5%9F%9F%E5%AE%89%E5%85%A8%EF%BC%89/","title":"\u5218\u601d\u5eb7\uff08\u5927\u7586\uff09\u516c\u5f00\u8bfe\u2014\u2014\u9632\u5fa1\u6027\u89c4\u5212\uff08\u6811\u8f68\u8ff9\uff0c\u524d\u534a\u90e8\u5206\u4e0d\u5206\u53c9\uff09\uff0c\u9884\u671f\u98ce\u9669\u89c4\u5212\uff08\u5355\u5e27\u5b89\u5168 \u9884\u6d4b\u65f6\u57df\u5b89\u5168\uff09","text":"<p>Risk-aware\u7684\u6982\u5ff5\u662f\u4fdd\u8bc1\u81ea\u52a8\u9a7e\u9a76\u4ecea\u70b9\u5230b\u70b9\u4e0a\u6574\u4e2a\u7684\u5b89\u5168\u6027\u3002\u4e00\u822c\u901a\u8fc7\u4fdd\u8bc1\u6bcf\u4e00\u5e27\u89c4\u5212\u8f68\u8ff9\u662f\u5b89\u5168\u7684\u5f97\u4ee5\u5b9e\u73b0\uff0c\u5b9e\u9645\u4e0a\u6709\u4e2a\u95ee\u9898\uff1a\u4fdd\u8bc1\u81ea\u52a8\u9a7e\u9a76\u6574\u4e2a\u5468\u671f\u7684\u5b89\u5168\u6027\u9700\u4e0d\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e00\u5e27\u8f68\u8ff9\u7684\u5b89\u5168\u6027\uff1f</p> <p>\u901a\u5e38\u8003\u8651\u4e24\u4e2a\u70b9\uff1a\u7b2c\u4e00\uff0c\u8f68\u8ff9\u89c4\u5212\u4e0d\u80fd\u649e\u4e0a\u4e00\u4e9b\u9759\u6001\u7684\u969c\u788d\u7269\uff0c\u6bd4\u5982\u9a6c\u8def\u8fb9\u3001\u9759\u6b62\u8f66\u7b49\u3002\u7b2c\u4e8c\u4e0e\u4ea4\u901a\u53c2\u4e0e\u8005\u7684\u4ea4\u4e92\u6709\u5173\uff0c\u6bd4\u5982\u8f66\u8f86\u3001\u884c\u4eba\u7b49\u4ea4\u901a\u53c2\u4e0e\u8005\u7684\u672a\u6765\u884c\u4e3a\u4f1a\u968f\u7740\u81ea\u8f66\u7684\u51b3\u7b56\u89c4\u5212\u800c\u4ea7\u751f\u53d8\u5316\u3002</p> <p>\u4f20\u7edf\u7cfb\u7edf\u7684\u8003\u8651\u65b9\u5f0f\u662f\uff0c\u5f53\u524d\u65b9\u7a81\u7136\u51fa\u73b0\u4e00\u8f86\u8f66\uff0c\u90a3\u4f1a\u89c4\u5212\u51fa\u4e00\u4e2a\u9884\u6d4b\u8f68\u8ff9\uff0c\u518d\u6839\u636e\u9884\u6d4b\u8f68\u8ff9\u5728\u65f6\u7a7a\u57df\u89c4\u5212\u51fa\u5bf9\u5e94\u7684\u969c\u788d\u7269\uff0c\u7136\u540e\u89c4\u5212\u51fa\u4e00\u4e2a\u4e0d\u4f1a\u76f8\u649e\u7684\u8f68\u8ff9\u3002\u4f46\u5f53\u8212\u9002\u6027\u548c\u5b89\u5168\u6027\u51fa\u73b0\u4e00\u5b9a\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u7684\u89c4\u5212\u601d\u8def\u6bd4\u8f83\u4fdd\u5b88\u3002\u5b9e\u9645\u4e0a\u8981\u4fdd\u8bc1\u6574\u4e2a\u81ea\u52a8\u9a7e\u9a76\u5468\u671f\u7684\u5b89\u5168\u6027\uff0c\u5355\u5e27\u8f68\u8ff9\u7684\u89c4\u5212\u6027\u662f\u66f4\u9ad8\u7684\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u9884\u6d4b\u5f80\u5f80\u5177\u5907\u4e00\u4e2a\u7279\u6027\uff1a\u00a0\u9884\u6d4b\u65f6\u95f4\u8d8a\u5f80\u540e\uff0c\u7f6e\u4fe1\u5ea6\u8d8a\u4f4e\u3002\u4e5f\u5c31\u662f\u5728\u9884\u6d4b\u521d\u671f\u662f\u4e0d\u53ef\u80fd\u76f8\u649e\u7684(\u6bd4\u59822\u79d2\u5185)\uff0c\u90a32\u79d2\u540e\u662f\u4e0d\u662f\u53ef\u4ee5\u5141\u8bb8\u9002\u5f53\u7684\u63a5\u89e6\uff0c\u540c\u65f6\u8ba9\u89c4\u5212\u51fa\u6765\u8f68\u8ff9\u7684\u8212\u9002\u6027\u548c\u5b89\u5168\u6027\u4e4b\u95f4\u8fbe\u5230\u5e73\u8861\uff0c\u4ece\u800c\u4fdd\u8bc1\u6574\u4e2a\u81ea\u52a8\u9a7e\u9a76\u7684\u5b89\u5168\u6027\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%98%E6%80%9D%E5%BA%B7%EF%BC%88%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92%EF%BC%89/","title":"\u5218\u601d\u5eb7\uff08\u65e0\u4eba\u673a\u8f68\u8ff9\u89c4\u5212\uff09","text":"<p>\u53ef\u8fbe\u6027\u5206\u6790\uff1a\u969c\u788d\u7269\u81a8\u80c0\u591a\u5927 </p> <p>\u52bf\u80fd\u573a\uff1a\u7ed9\u51fa\u521d\u59cb\u8f68\u8ff9\uff0c\u6839\u636e\u573a\u80fd\u591f\u4e8c\u6b21\u4f18\u5316</p> <p></p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u5237\u9898\u8bb0\u5f55","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#0-c","title":"0 C++\u5237\u9898\u57fa\u672c\u8bed\u6cd5","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#01-minmaxsortreverse","title":"0.1 min\u3001max\u3001sort\u3001reverse","text":"<pre><code>#include &lt;algorithm&gt;\nint a=2;\nint b=3;\nmax(a,b);\nmin(a,b);\n</code></pre> <pre><code>main()\n{\n\u3000\u3000//sort\u51fd\u6570\u7b2c\u4e09\u4e2a\u53c2\u6570\u91c7\u7528\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\n\u3000\u3000int a[]={45,12,34,77,90,11,2,4,5,55};\n\u3000\u3000sort(a,a+10);//\u6216lambda\u8868\u8fbe\u5f0fsort(a,a+10,[](int a, int b) {return a &gt; b; });\n\u3000\u3000for(int i=0;i&lt;10;i++)\n\u3000\u3000cout&lt;&lt;a[i]&lt;&lt;\" \";\n}\n\n\nint main(){\n    string str;\n    str = \"Hello,world!\";\n    reverse(str.begin(),str.end());\n    cout&lt;&lt;str;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#02-lambda","title":"0.2 lambda\u8868\u8fbe\u5f0f","text":"<pre><code>[](int a,int b){ //do some thing  return a+b }\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#03","title":"0.3 \u5bb9\u5668\u7528\u6cd5","text":"<p>https://zh.cppreference.com/w/cpp/container</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#04","title":"0.4\u5e38\u7528\u51fd\u6570","text":"<p>https://perper.site/2019/01/21/C-%E5%88%B7%E9%A2%98%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%8F%8A%E5%87%BD%E6%95%B0%E7%9A%84%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#1","title":"1 \u52a8\u6001\u89c4\u5212","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#11","title":"1.1\u57fa\u672c\u5957\u8def","text":"<p>\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u4fdd\u5b58\u4e2d\u95f4\u53d8\u91cf\uff0c\u6700\u91cd\u8981\u7684\u662f\u8981\u627e\u5230\u9012\u63a8\u516c\u5f0f\u3002</p> <p>\u52a8\u6001\u89c4\u5212\u4e94\u90e8\u66f2\uff1a 1. \u786e\u5b9adp\u6570\u7ec4\uff08dp table\uff09\u4ee5\u53ca\u4e0b\u6807\u7684\u542b\u4e49 2. \u786e\u5b9a\u9012\u63a8\u516c\u5f0f 3. dp\u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316 4. \u786e\u5b9a\u904d\u5386\u987a\u5e8f 5. \u4e3e\u4f8b\u63a8\u5bfcdp\u6570\u7ec4</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#12leetcode","title":"1.2leetcode\u5e38\u89c1\u9898\u578b","text":"<p>70. \u722c\u697c\u68af 53. \u6700\u5927\u5b50\u6570\u7ec4\u548c 1143. \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 5. \u6700\u957f\u56de\u6587\u5b50\u4e32</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#2-dfs","title":"2 DFS\uff08\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#21","title":"2.1\u57fa\u672c\u5957\u8def","text":"<p>DFS\u4e00\u822c\u7528\u9012\u5f52\u6216\u8005\u6808\u6765\u89e3\u51b3\u3002\u5e38\u89c1\u7684\u9898\u578b\u6709\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\uff08\u6839-&gt;\u5de6-&gt;\u53f3\uff09\u3001\u4e2d\u5e8f\uff08\u5de6-&gt;\u6839-&gt;\u53f3\uff09\u3001\u540e\u5e8f\u904d\u5386\uff08\u5de6-&gt;\u53f3-&gt;\u6839\uff09</p> <pre><code>//\u9012\u5f52\u65b9\u6cd5\nclass\u00a0Solution\u00a0{\npublic:\n\n\u00a0\u00a0\u00a0\u00a0void\u00a0inorder(TreeNode*\u00a0root,\u00a0vector&lt;int&gt;&amp;\u00a0res)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(!root)\u00a0return;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inorder(root-&gt;left,res);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.push_back(root-&gt;val);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inorder(root-&gt;right,res);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0vector&lt;int&gt;\u00a0inorderTraversal(TreeNode*\u00a0root)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vector&lt;int&gt;\u00a0res;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inorder(root,\u00a0res);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0res;\n\u00a0\u00a0\u00a0\u00a0}\n};\n</code></pre> <pre><code>//\u6808\u65b9\u6cd5\nclass Solution {\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) \n    {\n        vector&lt;int&gt; v;\n        stack&lt;TreeNode*&gt; s;\n        while (root || !s.empty()) \n        {\n            while (root) \n            {\n                v.push_back(root-&gt;val);\n                s.push(root);\n                root = root-&gt;left;\n            }\n            root = s.top()-&gt;right;\n            s.pop();\n        }    \n        return v;\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#22-leetcode","title":"2.2 leetcode\u9898\u578b","text":"<p>94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386 144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386 [14. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386]https://leetcode.cn/problems/binary-tree-postorder-traversal/description/</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#3-bfs","title":"3 BFS\uff08\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#31","title":"3.1\u57fa\u672c\u5957\u8def","text":"<p>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4e00\u822c\u7528\u961f\u5217\uff08\u4f18\u5148\u961f\u5217\uff09\u6765\u89e3\u51b3\uff0c\u5e38\u89c1\u7684\u9898\u578b\u6709\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386</p> <pre><code>class\u00a0Solution\u00a0{\npublic:\n\u00a0\u00a0\u00a0\u00a0vector&lt;vector&lt;int&gt;&gt;\u00a0levelOrder(TreeNode*\u00a0root)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vector&lt;vector&lt;int&gt;&gt;\u00a0res;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(!root)\u00a0return\u00a0res;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0queue&lt;TreeNode*&gt;\u00a0q;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0q.push(root);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while\u00a0(!q.empty()){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.push_back(vector&lt;int&gt;());\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0level_size\u00a0=\u00a0q.size();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for\u00a0(int\u00a0i\u00a0=\u00a00;\u00a0i\u00a0&lt;\u00a0level_size;\u00a0++i){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TreeNode*\u00a0top\u00a0=\u00a0q.front();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0q.pop();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.back().push_back(top-&gt;val);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(top-&gt;left)\u00a0q.push(top-&gt;left);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(top-&gt;right)\u00a0q.push(top-&gt;right);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0res;\n\u00a0\u00a0\u00a0\u00a0}\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#32leetcode","title":"3.2leetcode\u5e38\u89c1\u9898\u578b","text":"<p>102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 133\u514b\u9686\u56fe</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#4","title":"4 \u4e8c\u53c9\u6811\u7684\u904d\u5386","text":"<ul> <li>\u4e8c\u53c9\u6811\u7684\u524d\u3001\u4e2d\u3001\u540e\u5e8f\u904d\u5386\u5c5e\u4e8eDFS\uff0c\u53ef\u4ee5\u7528\u9012\u5f52\u6216\u8005\u6808\u89e3\u51b3\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386\u5c5e\u4e8eBFS\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u89e3\u51b3</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#41","title":"4.1 \u524d\u5e8f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_1","title":"\u9012\u5f52","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void reversal(TreeNode* root, vector&lt;int&gt; &amp;res){\n      if (root == nullptr) return;\n      res.push_back(root-&gt;val);\n      reversal(root-&gt;left, res);\n      reversal(root-&gt;right, res);\n    }\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) {\n      vector&lt;int&gt; res{};\n      reversal(root, res);\n      return res;\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_2","title":"\u6808","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) {\n      stack&lt;TreeNode*&gt; st;\n      vector&lt;int&gt; res;\n      if(root == nullptr) return res;\n      st.push(root);\n      while (!st.empty()) {\n        TreeNode* node = st.top();\n        st.pop();\n        res.push_back(node-&gt;val);\n        if(node-&gt;right) st.push(node-&gt;right);\n        if(node-&gt;left) st.push(node-&gt;left);\n      }\n      return res;\n\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#42","title":"4.2 \u4e2d\u5e8f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_3","title":"\u9012\u5f52","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void reversal(TreeNode* root, vector&lt;int&gt; &amp;res){\n      if (root == nullptr) return;\n      reversal(root-&gt;left, res);\n      res.push_back(root-&gt;val);\n      reversal(root-&gt;right, res);\n    }\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n      vector&lt;int&gt; res{};\n      reversal(root, res);\n      return res;\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_4","title":"\u6808","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n      stack&lt;TreeNode*&gt; st;\n      vector&lt;int&gt; res;\n      TreeNode* cur = root;\n      if (root == nullptr) return res;\n      while (!st.empty() || cur != nullptr) {\n        if (cur != nullptr) {\n          st.push(cur);\n          cur = cur-&gt;left;\n        } else {\n          cur = st.top();\n          st.pop();\n          res.push_back(cur-&gt;val);\n          cur = cur-&gt;right;\n        }\n      }\n      return res;\n\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#43","title":"4.3 \u540e\u5e8f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_5","title":"\u9012\u5f52","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void reversal(TreeNode* root, vector&lt;int&gt; &amp;res){\n      if (root == nullptr) return;\n      reversal(root-&gt;left, res);\n      reversal(root-&gt;right, res);\n      res.push_back(root-&gt;val);\n    }\n    vector&lt;int&gt; postorderTraversal(TreeNode* root) {\n      vector&lt;int&gt; res{};\n      reversal(root, res);\n      return res;\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_6","title":"\u6808","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; postorderTraversal(TreeNode* root) {\n      stack&lt;TreeNode*&gt; st;\n      vector&lt;int&gt; res;\n      if (root == nullptr) return res;\n      st.push(root);\n      while (!st.empty()) {\n        TreeNode* node = st.top();\n        st.pop();\n        res.push_back(node-&gt;val);\n        if (node-&gt;left) st.push(node-&gt;left);\n        if (node-&gt;right) st.push(node-&gt;right);\n      }\n      reverse(res.begin(), res.end());\n      return res;\n\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#44bfs","title":"4.4\u5c42\u6b21\u904d\u5386\uff08\u7b49\u540c\u4e8eBFS\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#4_1","title":"4 \u56de\u6eaf\uff08+\u526a\u679d\uff09","text":"<p>\u56de\u6eaf\u6cd5\uff08back tracking\uff09\uff08\u63a2\u7d22\u4e0e\u56de\u6eaf\u6cd5\uff09\u662f\u4e00\u79cd\u9009\u4f18\u641c\u7d22\u6cd5\uff0c\u53c8\u79f0\u4e3a\u8bd5\u63a2\u6cd5\uff0c\u6309\u9009\u4f18\u6761\u4ef6\u5411\u524d\u641c\u7d22\uff0c\u4ee5\u8fbe\u5230\u76ee\u6807\u3002\u4f46\u5f53\u63a2\u7d22\u5230\u67d0\u4e00\u6b65\u65f6\uff0c\u53d1\u73b0\u539f\u5148\u9009\u62e9\u5e76\u4e0d\u4f18\u6216\u8fbe\u4e0d\u5230\u76ee\u6807\uff0c\u5c31\u9000\u56de\u4e00\u6b65\u91cd\u65b0\u9009\u62e9\uff0c\u8fd9\u79cd\u8d70\u4e0d\u901a\u5c31\u9000\u56de\u518d\u8d70\u7684\u6280\u672f\u4e3a\u56de\u6eaf\u6cd5\uff0c\u800c\u6ee1\u8db3\u56de\u6eaf\u6761\u4ef6\u7684\u67d0\u4e2a\u72b6\u6001\u7684\u70b9\u79f0\u4e3a\u201c\u56de\u6eaf\u70b9\u201d\u3002</p> <p>\u672c\u8d28\u4e0a\u56de\u6eaf=\u7a77\u4e3e+\u526a\u679d</p> <p>\u56de\u6eaf\u80fd\u591f\u89e3\u51b3\uff1a\u7ec4\u5408\u3001\u5207\u5272\u3001\u5b50\u96c6\u3001\u6392\u5217\u7b49\u95ee\u9898\u3002\u6240\u6709\u7684\u56de\u6eaf\u95ee\u9898\u90fd\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u68f5\u6811\uff01</p> <p>\u56de\u6eaf\u4e09\u90e8\u66f2\uff1a 1. \u786e\u5b9a\u56de\u6eaf\u51fd\u6570\u6a21\u677f\u8fd4\u56de\u503c\u4ee5\u53ca\u53c2\u6570 2. \u786e\u5b9a\u7ec8\u6b62\u6761\u4ef6\uff08\u7eb5\u5411\uff09 3. \u56de\u6eaf\u904d\u5386\uff08\u6a2a\u5411\uff09</p> <p>\u6ce8\u610f\uff1a\u56de\u6eaf\u7684\u53c2\u6570\u4e2d\u4e00\u5b9a\u8981\u6709res\uff0ccur\u7684\u5f15\u7528\u3002\u5728\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0cres.push_back(cur)</p> <p>\u6a21\u677f: <pre><code>void backtracking(\u53c2\u6570) {\n    if (\u7ec8\u6b62\u6761\u4ef6) {\n        \u5b58\u653e\u7ed3\u679c;\n        return;\n    }\n\n    for (\u9009\u62e9\uff1a\u672c\u5c42\u96c6\u5408\u4e2d\u5143\u7d20\uff08\u6811\u4e2d\u8282\u70b9\u5b69\u5b50\u7684\u6570\u91cf\u5c31\u662f\u96c6\u5408\u7684\u5927\u5c0f\uff09) {//\u6a2a\u5411\n        \u5904\u7406\u8282\u70b9;\n        backtracking(\u8def\u5f84\uff0c\u9009\u62e9\u5217\u8868); // \u9012\u5f52\uff0c\u7eb5\u5411\n        \u56de\u6eaf\uff0c\u64a4\u9500\u5904\u7406\u7ed3\u679c\n    }\n}\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#41_1","title":"4.1 \u56de\u6eaf\u548c\u9012\u5f52\u7684\u533a\u522b","text":"<p>\u9012\u5f52\u662f\u4e00\u79cd\u7b97\u6cd5\u7ed3\u6784\u3002\u9012\u5f52\u4f1a\u51fa\u73b0\u5728\u5b50\u7a0b\u5e8f\u4e2d\uff0c\u5f62\u5f0f\u4e0a\u8868\u73b0\u4e3a\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u3002\u5178\u578b\u7684\u4f8b\u5b50\u662f\u9636\u4e58\uff0c\u8ba1\u7b97\u89c4\u5f8b\u4e3a\uff1an!=n\u00d7(n\u22121)!\uff0c\u5982\u679c\u7528 C++ \u4ee3\u7801\u8868\u793a\uff0c\u57fa\u672c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>int fac(int n) {\n    if(n  1) return n;\n    else \n        return (n*fac(n - 1)); \n}\n</code></pre> <p>\u56de\u6eaf\u662f\u4e00\u79cd\u7b97\u6cd5\u601d\u60f3\uff0c\u5b83\u662f\u7528\u9012\u5f52\u5b9e\u73b0\u7684\u3002\u56de\u6eaf\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u7a77\u4e3e\u6cd5\uff0c\u4f46\u56de\u6eaf\u6709\u201c\u526a\u679d\u201d\u529f\u80fd\uff0c\u5373\u81ea\u6211\u5224\u65ad\u8fc7\u7a0b\u3002\u4f8b\u5982\u6709\u6c42\u548c\u95ee\u9898\uff0c\u7ed9\u5b9a\u6709 7 \u4e2a\u5143\u7d20\u7684\u7ec4\u5408 [ 1, 2, 3, 4, 5, 6, 7 ]\uff0c\u6c42\u52a0\u548c\u4e3a 7 \u7684\u5b50\u96c6\u3002\u7d2f\u52a0\u8ba1\u7b97\u4e2d\uff0c\u9009\u62e9 1+2+3+4 \u65f6\uff0c\u5224\u65ad\u5f97\u5230\u7ed3\u679c\u4e3a 10 \u5927\u4e8e 7\uff0c\u90a3\u4e48\u540e\u9762\u7684 5, 6, 7 \u5c31\u6ca1\u6709\u5fc5\u8981\u8ba1\u7b97\u4e86\u3002\u8fd9\u79cd\u65b9\u6cd5\u5c5e\u4e8e\u641c\u7d22\u8fc7\u7a0b\u4e2d\u7684\u4f18\u5316\uff0c\u5373\u201c\u526a\u679d\u201d\u529f\u80fd\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#42_1","title":"4.2 \u9898\u578b","text":"<ul> <li>\u7ec4\u5408\uff1aN\u4e2a\u6570\u91cc\u9762\u6309\u4e00\u5b9a\u89c4\u5219\u627e\u51fak\u4e2a\u6570\u7684\u96c6\u5408\uff08\u4e0d\u5f3a\u8c03\u987a\u5e8f\uff0c\u6bd4\u5982{1, 2} \u548c {2, 1} \u5728\u7ec4\u5408\u4e0a\uff0c\u5c31\u662f\u4e00\u4e2a\uff09\uff0c\u6240\u4ee5\u53d6\u8fc7\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\u53d6\uff0cfor\u5c31\u8981\u4ecestartIndex\u5f00\u59cb</li> <li>\u5206\u5272\uff1a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6309\u4e00\u5b9a\u89c4\u5219\u6709\u51e0\u79cd\u5207\u5272\u65b9\u5f0f</li> <li>\u5b50\u96c6\uff1a\u4e00\u4e2aN\u4e2a\u6570\u7684\u96c6\u5408\u91cc\u6709\u591a\u5c11\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u96c6</li> <li>\u6392\u5217\uff1aN\u4e2a\u6570\u6309\u4e00\u5b9a\u89c4\u5219\u5168\u6392\u5217\uff0c\u6709\u51e0\u79cd\u6392\u5217\u65b9\u5f0f\uff08\u5f3a\u8c03\u987a\u5e8f\uff0c{1, 2} \u548c {2, 1} \u5728\u6392\u5217\u4e0a\u5c5e\u4e8e\u4e00\u4e2a\uff09\uff0cfor\u5c31\u8981\u4ece0\u5f00\u59cb</li> <li>\u68cb\u76d8\u95ee\u9898\uff1aN\u7687\u540e\uff0c\u89e3\u6570\u72ec\u7b49\u7b49</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#0forstartindex","title":"\uff080\uff09\u7ec4\u5408\u95ee\u9898\uff08\u65e0\u5e8f\uff0cfor\u5c31\u8981\u4ecestartIndex\u5f00\u59cb\uff0c\u6536\u96c6\u53f6\u5b50\uff09","text":"<p>\u9700\u4e0d\u9700\u8981startindex\uff1f \u5982\u679c\u662f\u4e00\u4e2a\u96c6\u5408\u6765\u6c42\u7ec4\u5408\u7684\u8bdd\uff0c\u5c31\u9700\u8981startIndex\uff0c\u4f8b\u5982\uff1a77.\u7ec4\u5408\u00a0(opens new window)\uff0c216.\u7ec4\u5408\u603b\u548cIII\u00a0(opens new window)\u3002\uff1b</p> <p>\u5982\u679c\u662f\u591a\u4e2a\u96c6\u5408\u53d6\u7ec4\u5408\uff0c\u5404\u4e2a\u96c6\u5408\u4e4b\u95f4\u76f8\u4e92\u4e0d\u5f71\u54cd\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528startIndex\uff0c\u4f8b\u5982\uff1a17.\u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408 startindex\u9700\u8981\u4e0d\u9700\u8981+1 \u7ec4\u5408\u4e2d\u53ef\u4ee5\u9009\u53d6\u91cd\u590d\u7684\u6570\u7ec4\uff08\u6bcf\u4e2a\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\u5229\u7528\uff09\uff1a\u9012\u5f52\u65f6startindex\u4e0d\u53d8 \u7ec4\u5408\u4e2d\u4e0d\u53ef\u4ee5\u9009\u53d6\u91cd\u590d\u7684\u6570\u7ec4\uff08\u6bcf\u4e2a\u5143\u7d20\u53ea\u80fd\u7528\u4e00\u6b21\uff09\uff1a\u9012\u5f52\u65f6startindex+1</p> <p>\u53bb\u91cd\u95ee\u9898 \u6240\u8c13\u53bb\u91cd\uff0c\u5176\u5b9e\u5c31\u662f\u4f7f\u7528\u8fc7\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\u9009\u53d6\u3002\u90fd\u77e5\u9053\u7ec4\u5408\u95ee\u9898\u53ef\u4ee5\u62bd\u8c61\u4e3a\u6811\u5f62\u7ed3\u6784\uff0c\u90a3\u4e48\u201c\u4f7f\u7528\u8fc7\u201d\u5728\u8fd9\u4e2a\u6811\u5f62\u7ed3\u6784\u4e0a\u662f\u6709\u4e24\u4e2a\u7ef4\u5ea6\u7684\uff0c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u540c\u4e00\u6811\u679d\u4e0a\u4f7f\u7528\u8fc7\uff08\u6bcf\u4e2a\u96c6\u5408\u5185\u7684\u91cd\u590d\u6bd4\u5982{1\uff0c1\uff0c2}\uff09\uff0c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u540c\u4e00\u6811\u5c42\u4e0a\u4f7f\u7528\u8fc7\uff08\u96c6\u5408\u4e4b\u95f4\u7684\u91cd\u590d\uff0c\u6bd4\u5982{1,2}\u4e0e{1,2}\uff09\u3002\u6ca1\u6709\u7406\u89e3\u8fd9\u4e24\u4e2a\u5c42\u9762\u4e0a\u7684\u201c\u4f7f\u7528\u8fc7\u201d \u662f\u9020\u6210\u5927\u5bb6\u6ca1\u6709\u5f7b\u5e95\u7406\u89e3\u53bb\u91cd\u7684\u6839\u672c\u539f\u56e0\u3002\u7ec4\u5408\u603b\u548c2 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#1forstartindex","title":"\uff081\uff09\u5206\u5272\u95ee\u9898\uff08\u65e0\u5e8f\uff0cfor\u5c31\u8981\u4ecestartIndex\u5f00\u59cb\uff0c\u6536\u96c6\u53f6\u5b50\uff09","text":"<p>\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u5207\u5272\uff0c\u5176\u5b9e\u5207\u5272\u95ee\u9898\u7c7b\u4f3c\u7ec4\u5408\u95ee\u9898\u3002</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32abcdef\uff1a</p> <ul> <li>\u7ec4\u5408\u95ee\u9898\uff1a\u9009\u53d6\u4e00\u4e2aa\u4e4b\u540e\uff0c\u5728bcdef\u4e2d\u518d\u53bb\u9009\u53d6\u7b2c\u4e8c\u4e2a\uff0c\u9009\u53d6b\u4e4b\u540e\u5728cdef\u4e2d\u518d\u9009\u53d6\u7b2c\u4e09\u4e2a.....\u3002</li> <li>\u5207\u5272\u95ee\u9898\uff1a\u5207\u5272\u4e00\u4e2aa\u4e4b\u540e\uff0c\u5728bcdef\u4e2d\u518d\u53bb\u5207\u5272\u7b2c\u4e8c\u6bb5\uff0c\u5207\u5272b\u4e4b\u540e\u5728cdef\u4e2d\u518d\u5207\u5272\u7b2c\u4e09\u6bb5.....\u3002</li> </ul> <p>\u90a3\u4e48\u5728\u4ee3\u7801\u91cc\u4ec0\u4e48\u662f\u5207\u5272\u7ebf\u5462\uff1f</p> <p>\u5728\u5904\u7406\u7ec4\u5408\u95ee\u9898\u7684\u65f6\u5019\uff0c\u9012\u5f52\u53c2\u6570\u9700\u8981\u4f20\u5165startIndex\uff0c\u8868\u793a\u4e0b\u4e00\u8f6e\u9012\u5f52\u904d\u5386\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u4e2astartIndex\u5c31\u662f\u5207\u5272\u7ebf\u3002\uff08\u7ec8\u6b62\u6761\u4ef6startIndex &gt;= s.size()\uff09</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#2forstartindex","title":"\uff082\uff09\u5b50\u96c6\uff08\u65e0\u5e8f\uff0cfor\u5c31\u8981\u4ecestartIndex\u5f00\u59cb\uff0c\u6536\u96c6\u6240\u6709\uff09","text":"<p>\u7ec4\u5408\u95ee\u9898\u548c\u5206\u5272\u95ee\u9898\u90fd\u662f\u6536\u96c6\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u800c\u5b50\u96c6\u95ee\u9898\u662f\u627e\u6811\u7684\u6240\u6709\u8282\u70b9\uff01\u5176\u5b9e\u5b50\u96c6\u4e5f\u662f\u4e00\u79cd\u7ec4\u5408\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u7684\u96c6\u5408\u662f\u65e0\u5e8f\u7684\uff0c\u5b50\u96c6{1,2} \u548c \u5b50\u96c6{2,1}\u662f\u4e00\u6837\u7684\u3002</p> <p>\u90a3\u4e48\u65e2\u7136\u662f\u65e0\u5e8f\uff0c\u53d6\u8fc7\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\u53d6\uff0c\u5199\u56de\u6eaf\u7b97\u6cd5\u7684\u65f6\u5019\uff0cfor\u5c31\u8981\u4ecestartIndex\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece0\u5f00\u59cb\uff01</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#3for0start_indexused","title":"\uff083\uff09\u6392\u5217\uff08\u6709\u5e8f\uff0cfor\u4ece0\u5f00\u59cb\uff0c\u65e0start_index\uff0c\u9700\u8981used\u6570\u7ec4\uff0c\u6536\u96c6\u53f6\u5b50\uff09","text":"<ul> <li>\u6536\u96c6\u53f6\u5b50\u8282\u70b9\u3002</li> <li>\u4f7f\u7528used\u6570\u7ec4\uff0c\u5176\u5b9e\u5c31\u662f\u8bb0\u5f55\u6b64\u65f6path\u91cc\u90fd\u6709\u54ea\u4e9b\u5143\u7d20\u4f7f\u7528\u4e86\uff0c\u4e00\u4e2a\u6392\u5217\u91cc\u4e00\u4e2a\u5143\u7d20\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002</li> <li>\u4e0d\u518d\u9700\u8981\u65e0start_index\uff0c\u56e0\u4e3a\u6392\u5217\u95ee\u9898\uff0c\u6bcf\u6b21\u90fd\u8981\u4ece\u5934\u5f00\u59cb\u641c\u7d22\uff0c\u4f8b\u5982\u5143\u7d201\u5728[1,2]\u4e2d\u5df2\u7ecf\u4f7f\u7528\u8fc7\u4e86\uff0c\u4f46\u662f\u5728[2,1]\u4e2d\u8fd8\u8981\u518d\u4f7f\u7528\u4e00\u6b211\u3002 </li> </ul> <p>\u53bb\u91cd \u4e00\u5b9a\u8981\u5148\u5bf9\u5143\u7d20\u6392\u5e8f\uff0c\u7136\u540e\u4f7f\u7528used\u53bb\u91cd\uff0c\u4e0d\u80fd\u50cf\u7ec4\u5408\u548c\u5206\u5272\u4e00\u6837\u7528start_Index\u53bb\u91cd\uff0c\u56e0\u4e3afor\u662f\u4ece0\u5f00\u59cb\u7684\u3002 </p> <p>\u5982\u679c<code>candidates[i] == candidates[i - 1]</code>\u00a0\u5e76\u4e14\u00a0<code>used[i - 1] == false</code>\uff0c\u5c31\u8bf4\u660e\uff1a\u524d\u4e00\u4e2a\u6811\u679d\uff0c\u4f7f\u7528\u4e86candidates[i - 1]\uff0c\u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u6811\u5c42\u4f7f\u7528\u8fc7candidates[i - 1]\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#4n","title":"\uff084\uff09\u6570\u72ec\u4e0eN\u7687\u540e","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#5","title":"5 \u6ed1\u52a8\u7a97\u53e3","text":"<p>\u4e00\u822c\u5c31\u6c42\u6700\u77ed\u5e8f\u5217\u7684\u7b97\u6cd5\uff0c\u6240\u8c13\u6ed1\u52a8\u7a97\u53e3\uff0c\u5c31\u662f\u4e0d\u65ad\u7684\u8c03\u8282\u5b50\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u7ec8\u6b62\u4f4d\u7f6e\uff0c\u4ece\u800c\u5f97\u51fa\u6211\u4eec\u8981\u60f3\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#51","title":"5.1\u57fa\u672c\u8ba8\u8bba","text":"<p>\u7528\u4e00\u4e2afor\u5faa\u73af\u89e3\u51b3\u95ee\u9898\uff0c\u5faa\u73af\u7684\u7d22\u5f15\u662f\u7a97\u53e3\u7684\u7ec8\u6b62\u4f4d\u7f6e\u3002\u6ed1\u52a8\u7a97\u53e3\u6700\u91cd\u8981\u7684\u662f\u5982\u4f55\u79fb\u52a8\u7a97\u53e3\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</p> <p>\u5728\u5199\u4ee3\u7801\u4e4b\u524d\u9700\u8981\u786e\u5b9a\u5982\u4e0b\u4e09\u70b9\uff1a - \u7a97\u53e3\u5185\u662f\u4ec0\u4e48\uff1f - \u5982\u4f55\u79fb\u52a8\u7a97\u53e3\u7684\u8d77\u59cb\u4f4d\u7f6e\uff1f - \u5982\u4f55\u79fb\u52a8\u7a97\u53e3\u7684\u7ed3\u675f\u4f4d\u7f6e\uff1f</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#52","title":"5.2 \u9898\u578b","text":"<p>\u529b\u6263209\u957f\u5ea6\u6700\u5c0f\u5b50\u6570\u7ec4 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709\u00a0n\u00a0\u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570\u00a0s \uff0c\u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u548c \u2265 s \u7684\u957f\u5ea6\u6700\u5c0f\u7684 \u8fde\u7eed \u5b50\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u5176\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de 0\u3002</p> <p>\u793a\u4f8b\uff1a</p> <ul> <li>\u8f93\u5165\uff1as = 7, nums = [2,3,1,2,4,3]</li> <li>\u8f93\u51fa\uff1a2</li> <li>\u89e3\u91ca\uff1a\u5b50\u6570\u7ec4\u00a0[4,3]\u00a0\u662f\u8be5\u6761\u4ef6\u4e0b\u7684\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4\u3002 <pre><code>class Solution {\npublic:\n\u00a0 \u00a0 int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n\u00a0 \u00a0 \u00a0 int n = nums.size();\n\u00a0 \u00a0 \u00a0 int result = INT_MAX;\n\u00a0 \u00a0 \u00a0 int sum = 0;\n\u00a0 \u00a0 \u00a0 int i = 0;//\u8d77\u59cb\u4f4d\u7f6e\n\u00a0 \u00a0 \u00a0 for (int j = 0; j &lt; n; j++) {\n\u00a0 \u00a0 \u00a0 \u00a0 sum += nums[j];\n\u00a0 \u00a0 \u00a0 \u00a0 while (sum &gt;= target) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result = min(result, j - i + 1);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sum -= nums[i++];\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 return result  INT_MAX ? 0 : result;\n\u00a0 \u00a0 }\n};\n</code></pre></li> </ul> <p>\u529b\u6263239 \u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; maxSlidingWindow(vector&lt;int&gt;&amp; nums, int k) {\n        int n = nums.size();\n        auto gt = [](pair&lt;int, int&gt; a, pair&lt;int, int&gt; b) {\n            return a.first &lt; b.first;\n        };\n        priority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt;&gt;, decltype(gt)&gt; q;\n        for (int i = 0; i &lt; k; ++i) {\n            q.push({nums[i], i});\n        }\n        vector&lt;int&gt; ans;\n        ans.push_back(q.top().first);\n        for (int i = k; i &lt; n; ++i) {\n            q.push({nums[i], i});\n            while (q.top().second &lt;= i - k) {\n                q.pop();\n            }\n            ans.push_back(q.top().first);\n        }\n        return ans;      \n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#6","title":"6 \u725b\u987f\u6cd5\u6c42\u6839\u53f7","text":"<p>\u6c42\\(f(x) = 0\\)\u7684\u6839\uff0c\u8bbe\u521d\u503c\u4e3a\\(x_0\\) \uff0c\u8fed\u4ee3\u516c\u4e3a\uff1a $$ x_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)} $$</p> <p>\u539f\u7406\u662f </p> <p>\u6c42\u6839\u7684C++\u4ee3\u7801 \u6c42\\(f(x)=x^2 - C=0\\) ,\u53d6\\(x_0=C\\), \u5df2\u77e5\\(f'(x_n)=2x_n\\)</p> <pre><code>class Solution {\npublic:\n    int mySqrt(int x) {\n      if (x == 0) return 0;\n      double C = x;\n      double x0 = x;\n      double xi = 0.0;\n      while (true) {\n        xi = x0 - ((x0 * x0 - C)/(2 * x0));\n        if (fabs(xi - x0) &lt; 1e-7) break;\n        else {\n          x0 = xi;\n        }\n      }\n      return int(xi);\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#7","title":"7\u8def\u5f84\u89c4\u5212\u7b97\u6cd5","text":"<ul> <li>Dijkstra\u548cA*\u7684\u7edf\u4e00\u4f2a\u4ee3\u7801</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#dijkstra","title":"Dijkstra","text":"<p>https://zhuanlan.zhihu.com/p/360276556</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_7","title":"\u90bb\u63a5\u8868\u548c\u90bb\u63a5\u77e9\u9635","text":"<p>\u4e09\u4e2a\u91cf\u5206\u522b\u9700\u8981\u5b9a\u4e49\uff1a - <code>priority_queue&lt;PII, vector&lt;PII&gt;, decltype(gt)&gt; q;//{node,distance}</code> - <code>vector&lt;int&gt; distance(N, INT_MAX);</code> - <code>vector&lt;int&gt; vis(N, 0);</code></p> <p>\u521d\u59cb\u5316\uff1a - <code>distance[src] = 0;</code> - vis\u521d\u59cb\u5316\u4e3a0 - <code>q.push({src, distance[src]});</code></p> <pre><code>using PII = pair&lt;int, int&gt;;\n//\u90bb\u63a5\u8868 key = src \uff0cval = {adj,cost}\nint dijkstra (unordered_map&lt;int, vector&lt;PII&gt;&gt;&amp; graph, int src, int tar, int N) {\n  auto gt = [](auto&amp; a, auto&amp; b) { return a.second &gt; b.second; };\n  priority_queue&lt;PII, vector&lt;PII&gt;, decltype(gt)&gt; q;//{node,distance}\n  vector&lt;int&gt; distance(N, INT_MAX);\n  distance[src] = 0;\n  vector&lt;int&gt; vis(N, 0);\n  q.push({src, distance[src]});\n  while(!q.empty()) {\n    auto [node, dis] = q.top();\n    q.pop();\n    if (vis[node]) continue;\n    vis[node] = 1;\n    //\u5982\u679c\u662f\u90bb\u63a5\u77e9\u9635\uff0c\u5c31\u626b\u63cfnode\u6240\u5728\u884c\n    for (auto&amp; [adj, cost] : graph[node]) {\n      if (distance[adj]  &gt; distance[node] + cost) {\n        distance[adj] = distance[node] + cost;\n        q.push({adj, distance[adj]});\n      }\n    }\n  }\n  return distance[tar] == INT_MAX ? -1 : distance[tar];\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_8","title":"\u4e8c\u7ef4\u77e9\u9635","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;climits&gt;\nusing namespace std;\n\nusing PII = pair&lt;int, int&gt;;//x,y \u4f4d\u7f6e\n\nint dijkstra(vector&lt;vector&lt;int&gt;&gt;&amp; grid, PII src, PII tar) {\n    int m = grid.size(), n = grid[0].size();\n    auto gt = [](auto&amp; a, auto&amp; b) { return a.second &gt; b.second; };\n    priority_queue&lt;pair&lt;PII, int&gt;, vector&lt;pair&lt;PII, int&gt;&gt;, decltype(gt)&gt; q; // {{i, j}, distance}\n    vector&lt;vector&lt;int&gt;&gt; distance(m, vector&lt;int&gt;(n, INT_MAX));//{i,j}\u5230target\u7684\u4e3e\u4f8b\n    distance[src.first][src.second] = 0;\n    vector&lt;vector&lt;bool&gt;&gt; vis(m, vector&lt;bool&gt;(n, false));\n    q.push({src, distance[src.first][src.second]});\n    vector&lt;PII&gt; directions{{-1, 0}, {1, 0}, {0, -1}, {0, 1}}; // \u4e0a\u4e0b\u5de6\u53f3\n\n    while(!q.empty()) {\n        auto [[i, j], dis] = q.top();\n        q.pop();\n        if (vis[i][j]) continue;\n        vis[i][j] = true;\n        for (auto&amp; [di, dj] : directions) {\n            int ni = i + di, nj = j + dj;\n            if (ni &gt;= 0 &amp;&amp; ni &lt; m &amp;&amp; nj &gt;= 0 &amp;&amp; nj &lt; n) {\n                if (distance[ni][nj] &gt; distance[i][j] + grid[i][j]) {\n                    distance[ni][nj] = distance[i][j] + grid[i][j];\n                    q.push({{ni, nj}, distance[ni][nj]});\n                }\n            }\n        }\n    }\n    return distance[tar.first][tar.second] == INT_MAX ? -1 : distance[tar.first][tar.second];\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#a-star","title":"a star","text":"<p>https://zhuanlan.zhihu.com/p/360282185</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_9","title":"\u90bb\u63a5\u8868\u548c\u90bb\u63a5\u77e9\u9635","text":"<ul> <li>\u4f18\u5148\u961f\u5217\u5b58\u50a8\u7684\u662factual+heuristic distance\uff0c\u4e0d\u518d\u662factua distance</li> <li>distance\u6570\u7ec4\u4e0d\u518d\u662fvector\\&lt;int&gt;\uff0c\u800c\u53d8\u4e3a<code>vector&lt;pair&lt;int, int&gt;&gt;</code>\u5b58actual \u548c heuristic distance</li> <li>\u5176\u4ed6\u4e0d\u53d8</li> </ul> <pre><code>using PII = pair&lt;int, int&gt;;\n\n// \u542f\u53d1\u5f0f\u51fd\u6570\uff0c\u4f30\u8ba1\u4ece\u5f53\u524d\u8282\u70b9\u5230\u76ee\u6807\u8282\u70b9\u7684\u8ddd\u79bb\nint h(int node, int tar) {\n  // \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u7f16\u5199\u542f\u53d1\u5f0f\u51fd\u6570\n  // \u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u66fc\u54c8\u987f\u8ddd\u79bb\u6216\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\n  //\u5982\u679c\u8fd4\u56de0\uff0c\u5219\u7b49\u4ef7\u4e8edijkstra\n}\n\nint astar(unordered_map&lt;int, vector&lt;PII&gt;&gt;&amp; graph, int src, int tar, int N) {\n  auto gt = [](auto&amp; a, auto&amp; b) { return a.second &gt; b.second; };\n  priority_queue&lt;PII, vector&lt;PII&gt;, decltype(gt)&gt; q; // {node, actual+heuristic distance}\n  vector&lt;pair&lt;int, int&gt;&gt; distance(N, {INT_MAX, 0}); // {actual distance, heuristic distance}\n  distance[src] = {0, h(src, tar)}; // \u521d\u59cb\u5316\u8d77\u59cb\u8282\u70b9\u7684\u8ddd\u79bb{\u5b9e\u9645\u8ddd\u79bb, \u542f\u53d1\u8ddd\u79bb}\n  vector&lt;int&gt; vis(N, 0);\n  q.push({src, distance[src].first + distance[src].second}); // \u7efc\u5408\u8bc4\u4f30\u503c\u4e3a\u5b9e\u9645\u8ddd\u79bb\u52a0\u542f\u53d1\u5f0f\u51fd\u6570\u4f30\u8ba1\u8ddd\u79bb\n\n  while (!q.empty()) {\n    auto [node, dis] = q.top();\n    q.pop();\n    if (vis[node]) continue;\n    vis[node] = 1;\n    for (auto&amp; [adj, cost] : graph[node]) {\n      if (distance[adj].first &gt; distance[node].first + cost) {\n        distance[adj].first = distance[node].first + cost;\n        distance[adj].second = h(adj, tar); // \u66f4\u65b0\u542f\u53d1\u5f0f\u51fd\u6570\u4f30\u8ba1\u8ddd\u79bb\n        q.push({adj, distance[adj].first + distance[adj].second});\n      }\n    }\n  }\n\n  return distance[tar].first == INT_MAX ? -1 : distance[tar].first;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_10","title":"\u4e8c\u7ef4\u77e9\u9635","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nusing PII = pair&lt;int, int&gt;;\n\n// \u542f\u53d1\u5f0f\u51fd\u6570\uff0c\u4f30\u8ba1\u4ece\u5f53\u524d\u8282\u70b9\u5230\u76ee\u6807\u8282\u70b9\u7684\u8ddd\u79bb\nint h(PII node, PII tar) {\n    return abs(node.first - tar.first) + abs(node.second - tar.second);\n}\n//grid\u5b58\u7684i\uff0cj\u5230\u5176\u4ed6\u70b9\u7684\u4ee3\u4ef7\nint astar(vector&lt;vector&lt;int&gt;&gt;&amp; grid, PII src, PII tar) {\n    int m = grid.size(), n = grid[0].size();\n    auto gt = [](auto&amp; a, auto&amp; b) { return a.second &gt; b.second; };\n    priority_queue&lt;pair&lt;PII, int&gt;, vector&lt;pair&lt;PII, int&gt;&gt;, decltype(gt)&gt; q; // {{i, j}, actual+heuristic distance}\n    vector&lt;vector&lt;pair&lt;int, int&gt;&gt;&gt; distance(m, vector&lt;pair&lt;int, int&gt;&gt;(n, {INT_MAX, 0})); // {actual distance, heuristic distance}\n    distance[src.first][src.second] = {0, h(src, tar)};\n    vector&lt;vector&lt;bool&gt;&gt; vis(m, vector&lt;bool&gt;(n, false));\n    q.push({src, distance[src.first][src.second].first + distance[src.first][src.second].second});\n    vector&lt;PII&gt; directions{{-1, 0}, {1, 0}, {0, -1}, {0, 1}}; // \u4e0a\u4e0b\u5de6\u53f3\n\n    while(!q.empty()) {\n        auto [[i, j], dis] = q.top();\n        q.pop();\n        if (vis[i][j]) continue;\n        vis[i][j] = true;\n        if (i == tar.first &amp;&amp; j == tar.second) return distance[i][j].first; // Found the target\n        for (auto&amp; [di, dj] : directions) {\n            int ni = i + di, nj = j + dj;\n            if (ni &gt;= 0 &amp;&amp; ni &lt; m &amp;&amp; nj &gt;= 0 &amp;&amp; nj &lt; n) {\n                if (distance[ni][nj].first &gt; distance[i][j].first + grid[i][j]) {\n                    distance[ni][nj].first = distance[i][j].first + grid[i][j];\n                    distance[ni][nj].second = h({ni, nj}, tar);\n                    q.push({{ni, nj}, distance[ni][nj].first + distance[ni][nj].second});\n                }\n            }\n        }\n    }\n    return -1; // Target not reachable\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#dfs","title":"DFS(\u9012\u5f52\u7248\u672c)","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_11","title":"\u90bb\u63a5\u8868\u4e0e\u90bb\u63a5\u77e9\u9635","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid dfs(const vector&lt;vector&lt;int&gt;&gt;&amp; graph, int node, vector&lt;bool&gt;&amp; visited) {\n    // \u68c0\u67e5\u8282\u70b9\u662f\u5426\u5df2\u88ab\u8bbf\u95ee\n    if (visited[node]) {\n        return;\n    }\n\n    // \u5904\u7406\u5f53\u524d\u8282\u70b9\n    cout &lt;&lt; node &lt;&lt; \" \";\n    visited[node] = true;\n\n    // \u9012\u5f52\u8bbf\u95ee\u6240\u6709\u90bb\u5c45,\u90bb\u63a5\u8868\n    for (int neighbor : graph[node]) {\n        dfs(graph, neighbor, visited);\n    }\n    // \u9012\u5f52\u8bbf\u95ee\u6240\u6709\u90bb\u5c45,\u90bb\u63a5\u77e9\u9635\n    //for (int neighbor = 0; neighbor &lt; n; ++neighbor) { \n    //  if (graph[node][neighbor] == 1 &amp;&amp; !visited[neighbor]) { \n    //      dfs(graph, neighbor, visited);\n    //  }\n    //}\n}\n\nint main() {\n    // \u793a\u4f8b\u56fe\u7684\u90bb\u63a5\u8868\u8868\u793a\u6cd5\n    // graph[i] \u662f\u4e00\u4e2a\u5305\u542b\u6240\u6709\u8282\u70b9 i \u7684\u90bb\u5c45\u7684\u5217\u8868\n    vector&lt;vector&lt;int&gt;&gt; graph = {\n        {1, 2},    // 0 \u7684\u90bb\u5c45\u662f 1, 2\n        {0, 3, 4}, // 1 \u7684\u90bb\u5c45\u662f 0, 3, 4\n        {0, 4},    // 2 \u7684\u90bb\u5c45\u662f 0, 4\n        {1, 4, 5}, // 3 \u7684\u90bb\u5c45\u662f 1, 4, 5\n        {1, 2, 3}, // 4 \u7684\u90bb\u5c45\u662f 1, 2, 3\n        {3}        // 5 \u7684\u90bb\u5c45\u662f 3\n    };\n\n    vector&lt;bool&gt; visited(graph.size(), false);\n\n    cout &lt;&lt; \"DFS starting from node 0:\" &lt;&lt; endl;\n    dfs(graph, 0, visited);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_12","title":"\u4e8c\u7ef4\u77e9\u9635","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid dfs(const vector&lt;vector&lt;int&gt;&gt;&amp; grid, int x, int y, vector&lt;vector&lt;bool&gt;&gt;&amp; visited) {\n    int rows = grid.size();\n    int cols = grid[0].size();\n\n    // \u68c0\u67e5\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u5728\u8fb9\u754c\u5185\u5e76\u4e14\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n    if (x &lt; 0 || x &gt;= rows || y &lt; 0 || y &gt;= cols || visited[x][y]) {\n        return;\n    }\n\n    // \u5904\u7406\u5f53\u524d\u8282\u70b9\n    cout &lt;&lt; grid[x][y] &lt;&lt; \" \";\n    visited[x][y] = true;\n\n    // \u56db\u4e2a\u65b9\u5411\u7684\u79fb\u52a8\uff1a\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\n    vector&lt;pair&lt;int, int&gt;&gt; directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n\n    // \u904d\u5386\u56db\u4e2a\u65b9\u5411\n    for (auto [dx, dy] : directions) {\n        dfs(grid, x + dx, y + dy, visited);\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt;&gt; grid = {\n        {1, 2, 3},\n        {4, 5, 6},\n        {7, 8, 9}\n    };\n\n    vector&lt;vector&lt;bool&gt;&gt; visited(grid.size(), vector&lt;bool&gt;(grid[0].size(), false));\n\n    cout &lt;&lt; \"DFS starting from node (0, 0):\" &lt;&lt; endl;\n    dfs(grid, 0, 0, visited);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#dfs_1","title":"DFS\uff08\u8fed\u4ee3\u7248\u672c\uff09","text":"<pre><code>#include &lt;unordered_map&gt;\n#include &lt;vector&gt;\n#include &lt;stack&gt;\n\nstd::vector&lt;int&gt; dfs(std::unordered_map&lt;int, std::vector&lt;int&gt;&gt;&amp; graph, int src, int N) {\n    std::stack&lt;int&gt; stk;\n    std::vector&lt;int&gt; vis(N, 0);\n    stk.push(src);\n    vis[src] = 1;\n    std::vector&lt;int&gt; res;\n\n    while (!stk.empty()) {\n        int node = stk.top();\n        stk.pop();\n        res.push_back(node);\n        // \u5982\u679c\u662f\u90bb\u63a5\u77e9\u9635\uff0c\u5c31\u626b\u63cfnode\u6240\u5728\u884c\n        for (auto it = graph[node].rbegin(); it != graph[node].rend(); ++it) {\n            int adj = *it;\n            if (vis[adj] == 1) continue;\n            stk.push(adj);\n            src[adj] = 1;\n        }\n    }\n\n    return res;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#bfs","title":"BFS","text":"<ul> <li>BFS\u548cdijkstra\u7684vis\u8bbe\u7f6e\u4e0d\u540c\uff0cbfs\u9700\u8981\u5728push\u7684\u65f6\u5019\u5c31\u5c06vis\u8bbe\u7f6e\u4e3a1\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u53ea\u5165\u961f\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002</li> <li>dijkstra\u9700\u8981\u5728\u8282\u70b9\u5f39\u51fa\u7684\u65f6\u5019\u5c06vis\u8bbe\u7f6e\u4e3a1\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u53ef\u80fd\u5165\u961f\u591a\u6b21\uff0c\u53ea\u6709\u5f39\u51fa\u624d\u8bf4\u660e\u5df2\u7ecf\u627e\u5230\u6700\u77ed\u8def\u5f84\u4e86\u3002</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_13","title":"\u90bb\u63a5\u8868\u548c\u90bb\u63a5\u77e9\u9635","text":"<pre><code>//\u90bb\u63a5\u8868 key = src \uff0cval = {adj1,adj2...}\nvector&lt;int&gt; bfs (unordered_map&lt;int, vector&lt;int&gt;&gt;&amp; graph, int src, int N) {\n  queue&lt;int&gt; q;\n  vector&lt;int&gt; vis(N, 0);\n  q.push(src);\n  vis[src] = 1;\n  vector&lt;int&gt; res;\n  while(!q.empty()) {\n    int node = q.front();\n    q.pop();\n\n    res.push_back(node);\n    //\u5982\u679c\u662f\u90bb\u63a5\u77e9\u9635\uff0c\u5c31\u626b\u63cfnode\u6240\u5728\u884c\n    for (auto&amp; adj : graph[node]) {\n      q.push(adj);\n      vis[adj] = 1;\n    }\n    //\u90bb\u63a5\u77e9\u9635\n    //for (int neighbor = 0; neighbor &lt; n; ++neighbor) { \n    //  if (graph[node][neighbor] == 1 &amp;&amp; !visited[neighbor]) { \n    //      q.push(neighbor);\n    //      visited[neighbor] = true;\n    //  }\n    //}\n  }\n  return res;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_14","title":"\u4e8c\u7ef4\u77e9\u9635","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nvoid bfs(const vector&lt;vector&lt;int&gt;&gt;&amp; grid, int startX, int startY) {\n    int rows = grid.size();\n    int cols = grid[0].size();\n\n    vector&lt;vector&lt;bool&gt;&gt; visited(rows, vector&lt;bool&gt;(cols, false));\n    queue&lt;pair&lt;int, int&gt;&gt; q;\n\n    // \u56db\u4e2a\u65b9\u5411\u7684\u79fb\u52a8\uff1a\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\n    vector&lt;pair&lt;int, int&gt;&gt; directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n\n    q.push({startX, startY});\n    visited[startX][startY] = true;\n\n    while (!q.empty()) {\n        auto [x, y] = q.front();\n        q.pop();\n\n        // \u5904\u7406\u5f53\u524d\u8282\u70b9\n        cout &lt;&lt; grid[x][y] &lt;&lt; \" \";\n\n        // \u904d\u5386\u56db\u4e2a\u65b9\u5411\n        for (auto [dx, dy] : directions) {\n            int newX = x + dx;\n            int newY = y + dy;\n\n            // \u68c0\u67e5\u65b0\u4f4d\u7f6e\u662f\u5426\u5728\u8fb9\u754c\u5185\u5e76\u4e14\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n            if (newX &gt;= 0 &amp;&amp; newX &lt; rows &amp;&amp; newY &gt;= 0 &amp;&amp; newY &lt; cols &amp;&amp; !visited[newX][newY]) {\n                q.push({newX, newY});\n                visited[newX][newY] = true;\n            }\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt;&gt; grid = {\n        {1, 2, 3},\n        {4, 5, 6},\n        {7, 8, 9}\n    };\n\n    cout &lt;&lt; \"BFS starting from node (0, 0):\" &lt;&lt; endl;\n    bfs(grid, 0, 0);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#8","title":"8 \u80cc\u5305\u95ee\u9898","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#1-01","title":"1 \u5b8c\u5168\u80cc\u5305\u4e0e01\u80cc\u5305","text":"<p>01\u80cc\u5305\uff1a\u7269\u54c1\u53ea\u80fd\u591f\u4f7f\u7528\u4e00\u6b21\uff0c\u5148\u904d\u5386\u7269\u54c1\u518d\u904d\u5386\u80cc\u5305\uff0c\u80cc\u5305\u4ece\u540e\u5f80\u524d\u904d\u5386</p> <p>\u5b8c\u5168\u80cc\u5305\uff1a\u7269\u54c1\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u5148\u904d\u5386\u7269\u54c1\u518d\u904d\u5386\u80cc\u5305\uff0c\u80cc\u5305\u4ece\u524d\u5f80\u540e\u904d\u5386</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#2","title":"2 \u7ec4\u5408\u4e0e\u6392\u5217","text":"<p>\u7ec4\u5408\uff1a\u4e0d\u5206\u524d\u540e\u987a\u5e8f\uff0c\u5148\u904d\u5386\u7269\u54c1\u518d\u904d\u5386\u80cc\u5305</p> <p>\u6392\u5217\uff1a\u5206\u524d\u540e\u987a\u5e8f\uff0c\u5148\u904d\u5386\u80cc\u5305\u518d\u904d\u5386\u7269\u54c1</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_15","title":"\u6392\u5e8f","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_16","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5bfb\u627e\u4e00\u4e2apivot\uff0c\u628a\u6570\u7ec4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5de6\u8fb9\u5168\u90fd\u5c0f\u4e8epivot\uff0c\u53f3\u8fb9\u5168\u90fd\u5927\u4e8epivot\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u5de6\u53f3\u4e24\u4e2a\u6307\u9488\uff0c\u5de6\u6307\u9488\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8epivot\u7684\u4f4d\u7f6e\uff0c\u53f3\u6307\u9488\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8epivot\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4ea4\u6362\uff0c\u6700\u540e\u76f8\u9047\u7684\u4f4d\u7f6e\u548cpivot\u4ea4\u6362\u3002\u9012\u5f52\u7684\u53bb\u5bf9\u5de6\u53f3\u90e8\u5206\u505a\u76f8\u540c\u7684\u64cd\u4f5c\u3002</p> <pre><code>class Solution {\nprivate:\n    void quick_sort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        if (l &gt;= r) return;\n        int left = l;\n        int right = r;\n        int pivot = nums[l];\n        while (left &lt; right) {\n            //\u4ece\u53f3\u5f80\u5de6\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8epivot\u7684\u7d22\u5f15\n            while (left &lt; right &amp;&amp; nums[right] &gt;= pivot) right--;\n            //\u4ece\u5de6\u5f80\u53f3\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8epivot\u7684\u7d22\u5f15\n            while (left &lt; right &amp;&amp; nums[left] &lt;= pivot) left++;\n            if (left &lt; right) swap(nums[left], nums[right]);\n        }\n        //\u6b64\u65f6 left == right\n        swap(nums[left], nums[l]);\n        quick_sort(nums, l, left - 1);\n        quick_sort(nums, right + 1, r);\n    }\n    void random_quick_sort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        if (l &gt;= r) return;\n        int left = l;\n        int right = r;\n        srand((unsigned)time(NULL));\n        int random_index = rand() % (r - l + 1) + l;\n        swap(nums[l], nums[random_index]);\n\n        int pivot = nums[l];\n        while (left &lt; right) {\n            //\u4ece\u53f3\u5f80\u5de6\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8epivot\u7684\u7d22\u5f15\n            while (left &lt; right &amp;&amp; nums[right] &gt;= pivot) right--;\n            //\u4ece\u5de6\u5f80\u53f3\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8epivot\u7684\u7d22\u5f15\n            while (left &lt; right &amp;&amp; nums[left] &lt;= pivot) left++;\n            //\u4ea4\u6362\n            if (left &lt; right) swap(nums[left], nums[right]);\n        }\n        //\u6b64\u65f6 left == right\uff0c\u4ea4\u6362pivot\u548c\u76f8\u9047\u4f4d\u7f6e\u7684\u6570\uff0c\u628apivot\u653e\u5230\u4e2d\u95f4\uff08\u4e4b\u524d\u4e00\u76f4\u5728\u6700\u5de6\u8fb9\uff09\n        swap(nums[left], nums[l]);\n        random_quick_sort(nums, l, left - 1);\n        random_quick_sort(nums, right + 1, r);\n    }\n\npublic:\n    vector&lt;int&gt; sortArray(vector&lt;int&gt;&amp; nums) {\n        random_quick_sort(nums, 0, nums.size() - 1);\n        return nums;\n    }\n};\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_17","title":"\u5192\u6ce1\u6392\u5e8f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nvoid bubbleSort(std::vector&lt;int&gt;&amp; nums) {\n    int n = nums.size();\n    for (int i = 0; i &lt; n - 1; i++) {\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if (nums[j] &gt; nums[j + 1]) {\n                std::swap(nums[j], nums[j + 1]);\n            }\n        }\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; nums = {9, 2, 5, 1, 7, 3};\n\n    bubbleSort(nums);\n\n    std::cout &lt;&lt; \"Sorted array: \";\n    for (int num : nums) {\n        std::cout &lt;&lt; num &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_18","title":"\u5f52\u5e76\u6392\u5e8f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nvoid merge(std::vector&lt;int&gt;&amp; arr, int l, int m, int r) {\n    int n1 = m - l + 1;\n    int n2 = r - m;\n\n    // \u521b\u5efa\u4e24\u4e2a\u4e34\u65f6\u6570\u7ec4\n    std::vector&lt;int&gt; L(n1);\n    std::vector&lt;int&gt; R(n2);\n\n    // \u590d\u5236\u6570\u636e\u5230\u4e34\u65f6\u6570\u7ec4 L[] \u548c R[] \n    for (int i = 0; i &lt; n1; i++)\n        L[i] = arr[l + i];\n    for (int j = 0; j &lt; n2; j++)\n        R[j] = arr[m + 1 + j];\n\n    // \u5408\u5e76\u4e24\u4e2a\u4e34\u65f6\u6570\u7ec4\u56de\u5230 arr[l..r]\n    int i = 0;\n    int j = 0;\n    int k = l;\n    while (i &lt; n1 &amp;&amp; j &lt; n2) {\n        if (L[i] &lt;= R[j]) {\n            arr[k] = L[i];\n            i++;\n        } else {\n            arr[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n\n    // \u5982\u679c L[] \u8fd8\u6709\u5269\u4f59\u5143\u7d20\uff0c\u5c06\u5b83\u4eec\u590d\u5236\u5230 arr\n    while (i &lt; n1) {\n        arr[k] = L[i];\n        i++;\n        k++;\n    }\n\n    // \u5982\u679c R[] \u8fd8\u6709\u5269\u4f59\u5143\u7d20\uff0c\u5c06\u5b83\u4eec\u590d\u5236\u5230 arr\n    while (j &lt; n2) {\n        arr[k] = R[j];\n        j++;\n        k++;\n    }\n}\n\nvoid mergeSort(std::vector&lt;int&gt;&amp; arr, int l, int r) {\n    if (l &lt; r) {\n        int m = l + (r - l) / 2;\n\n        // \u5206\u522b\u5bf9\u524d\u534a\u90e8\u5206\u548c\u540e\u534a\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\n        mergeSort(arr, l, m);\n        mergeSort(arr, m + 1, r);\n\n        merge(arr, l, m, r);  // \u5408\u5e76\u4e24\u90e8\u5206\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; arr = {12, 11, 13, 5, 6, 7};\n    int arr_size = arr.size();\n\n    std::cout &lt;&lt; \"Given array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    mergeSort(arr, 0, arr_size - 1);\n\n    std::cout &lt;&lt; \"Sorted array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_19","title":"\u63d2\u5165\u6392\u5e8f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nvoid insertionSort(std::vector&lt;int&gt;&amp; arr) {\n    int n = arr.size();\n    for (int i = 1; i &lt; n; i++) {\n        int key = arr[i];\n        int j = i - 1;\n\n        // \u79fb\u52a8\u5143\u7d20 arr[0..i-1]\uff0c\u5b83\u4eec\u5927\u4e8ekey\uff0c\n        // \u5230\u5b83\u4eec\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n        while (j &gt;= 0 &amp;&amp; arr[j] &gt; key) {\n            arr[j + 1] = arr[j];\n            j--;\n        }\n        arr[j + 1] = key;\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; arr = {12, 11, 13, 5, 6};\n\n    std::cout &lt;&lt; \"Given array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    insertionSort(arr);\n\n    std::cout &lt;&lt; \"Sorted array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_20","title":"\u9009\u62e9\u6392\u5e8f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nvoid selectionSort(std::vector&lt;int&gt;&amp; arr) {\n    int n = arr.size();\n    for (int i = 0; i &lt; n - 1; i++) {\n        int min_idx = i; // \u627e\u5230\u6700\u5c0f\u5143\u7d20\u7684\u7d22\u5f15\n        for (int j = i + 1; j &lt; n; j++) {\n            if (arr[j] &lt; arr[min_idx]) {\n                min_idx = j;\n            }\n        }\n\n        // \u5c06\u627e\u5230\u7684\u6700\u5c0f\u5143\u7d20\u4e0e\u7b2ci\u4e2a\u5143\u7d20\u4ea4\u6362\n        if (min_idx != i) {\n            std::swap(arr[i], arr[min_idx]);\n        }\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; arr = {64, 34, 25, 12, 22, 11, 90};\n\n    std::cout &lt;&lt; \"Given array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    selectionSort(arr);\n\n    std::cout &lt;&lt; \"Sorted array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_21","title":"\u5806\u6392\u5e8f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\n// \u8c03\u6574\u4e3a\u5927\u9876\u5806\nvoid heapify(std::vector&lt;int&gt;&amp; arr, int n, int i) {\n    int largest = i;  // \u521d\u59cb\u5316\u5f53\u524d\u7ed3\u70b9\u4e3a\u6700\u5927\u503c\n    int left = 2 * i + 1;\n    int right = 2 * i + 2;\n\n    // \u5982\u679c\u5de6\u5b69\u5b50\u5927\u4e8e\u6839\n    if (left &lt; n &amp;&amp; arr[left] &gt; arr[largest])\n        largest = left;\n\n    // \u5982\u679c\u53f3\u5b69\u5b50\u5927\u4e8e\u6240\u6807\u8bb0\u7684\u6700\u5927\u503c\n    if (right &lt; n &amp;&amp; arr[right] &gt; arr[largest])\n        largest = right;\n\n    // \u5982\u679c\u6700\u5927\u503c\u4e0d\u662f\u6839\n    if (largest != i) {\n        std::swap(arr[i], arr[largest]);\n\n        // \u9012\u5f52\u5730\u8c03\u6574\u53d7\u5f71\u54cd\u7684\u5b50\u6811\n        heapify(arr, n, largest);\n    }\n}\n\nvoid heapSort(std::vector&lt;int&gt;&amp; arr) {\n    int n = arr.size();\n\n    // \u6784\u5efa\u5927\u9876\u5806\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // \u4e00\u4e2a\u4e2a\u5730\u4ece\u5806\u4e2d\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        // \u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u548c\u5f53\u524d\u5143\u7d20\u4ea4\u6362\n        std::swap(arr[0], arr[i]);\n\n        // \u56e0\u4e3a\u4ea4\u6362\u4e86\u6839\u5143\u7d20\uff0c\u6240\u4ee5\u8c03\u6574\u5806\u5927\u5c0f\u5e76\u91cd\u65b0heapify\n        heapify(arr, i, 0);\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; arr = {12, 11, 13, 5, 6, 7};\n\n    std::cout &lt;&lt; \"Given array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    heapSort(arr);\n\n    std::cout &lt;&lt; \"Sorted array: \";\n    for (auto num : arr) std::cout &lt;&lt; num &lt;&lt; \" \";\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#topkk","title":"TOPK\u95ee\u9898\uff08\u627e\u5230\u6700\u5927\u7684k\u4e2a\u5143\u7d20\uff09","text":"<ul> <li>\u6392\u5e8fsort\uff08nlogn\uff09</li> <li>\u4f18\u5148\u961f\u5217\uff08nlogn\uff09</li> <li> <p>\u5c40\u90e8\u6392\u5e8f \u51fd\u6570\u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u5c40\u90e8\u6392\u5e8f\uff0c\u4f7f\u5f97\u6700\u5927\u7684k\u4e2a\u5143\u7d20\u4f4d\u4e8e\u6570\u7ec4\u7684\u672b\u5c3e\u3002\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u9006\u5e8f\u8f93\u51fa\u6570\u7ec4\u7684\u672b\u5c3ek\u4e2a\u5143\u7d20\uff0c\u5373\u5f97\u5230\u4e86\u524dk\u4e2a\u6700\u5927\u7684\u5143\u7d20\u3002 <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nvoid bubbleSort(std::vector&lt;int&gt;&amp; nums, int k) {\n    int n = nums.size();\n    for (int i = 0; i &lt; k; i++) {\n        // \u6bcf\u6b21\u904d\u5386\u627e\u5230\u5f53\u524d\u672a\u6392\u5e8f\u90e8\u5206\u7684\u6700\u5927\u503c\uff0c\u5e76\u5c06\u5176\u5192\u6ce1\u5230\u672b\u5c3e\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if (nums[j] &gt; nums[j + 1]) {\n                std::swap(nums[j], nums[j + 1]);\n            }\n        }\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; nums = {9, 2, 5, 1, 7, 3};\n    int k = 3; // \u627e\u51fa\u524dk\u4e2a\u6700\u5927\u7684\u5143\u7d20\n\n    bubbleSort(nums, k);\n\n    std::cout &lt;&lt; \"Top \" &lt;&lt; k &lt;&lt; \" elements: \";\n    for (int i = nums.size() - 1; i &gt;= nums.size() - k; i--) {\n        std::cout &lt;&lt; nums[i] &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3(\u53ea\u627e\u5230\u6700\u5927\u7684K\u4e2a\uff0c\u4f46\u662fk\u4e2a\u6570\u6ca1\u6709\u987a\u5e8f) <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\n// \u5feb\u901f\u6392\u5e8f\u7684\u5206\u533a\u51fd\u6570\nint partition(std::vector&lt;int&gt;&amp; nums, int l, int r) {\n    if (l &gt;= r) return;\n    int left = l;\n    int right = r;\n    int pivot = nums[l];\n    while (left &lt; right) {\n        //\u5224\u65ad\u7b26\u53f7\u548c\u5feb\u6392\u76f8\u53cd\n        while (left &lt; right &amp;&amp; nums[right] &lt;= pivot) right--;\n        while (left &lt; right &amp;&amp; nums[left] &gt;= pivot) left++;\n        if (left &lt; right) swap(nums[left], nums[right]);\n    }\n    //\u6b64\u65f6 left == right\n    swap(nums[left], nums[l]);\n    return left;  // \u8fd4\u56de\u57fa\u51c6\u503c\u7684\u4f4d\u7f6e\n}\n\n// \u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u627e\u5230\u6570\u7ec4\u4e2d\u524d k \u4e2a\u6700\u5927\u7684\u5143\u7d20\nstd::vector&lt;int&gt; topKFrequent(std::vector&lt;int&gt;&amp; nums, int k) {\n    std::vector&lt;int&gt; result;\n    int left = 0;\n    int right = nums.size() - 1;\n\n    while (left &lt;= right) {\n        int pivotIndex = partition(nums, left, right);\n        if (pivotIndex == k - 1) {\n            // \u627e\u5230\u4e86\u524d k \u4e2a\u6700\u5927\u7684\u5143\u7d20\n            result.assign(nums.begin(), nums.begin() + k);\n            break;\n        } else if (pivotIndex &gt; k - 1) {\n            // \u524d k \u4e2a\u6700\u5927\u7684\u5143\u7d20\u5728\u57fa\u51c6\u503c\u7684\u5de6\u4fa7\n            right = pivotIndex - 1;\n        } else {\n            // \u524d k \u4e2a\u6700\u5927\u7684\u5143\u7d20\u5728\u57fa\u51c6\u503c\u7684\u53f3\u4fa7\n            left = pivotIndex + 1;\n        }\n    }\n\n    return result;\n}\n\nint main() {\n    std::vector&lt;int&gt; nums = {3, 1, 5, 2, 4};\n    int k = 3;\n\n    std::vector&lt;int&gt; result = topKFrequent(nums, k);\n\n    std::cout &lt;&lt; \"Top \" &lt;&lt; k &lt;&lt; \" frequent elements: \";\n    for (int num : result) {\n        std::cout &lt;&lt; num &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre></p> </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_22","title":"\u62d3\u6251\u6392\u5e8f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\n// Function to perform topological sort on a DAG\nbool topologicalSort(const vector&lt;vector&lt;int&gt;&gt;&amp; graph, vector&lt;int&gt;&amp; result) {\n    int n = graph.size();\n    vector&lt;int&gt; inDegree(n, 0);\n    for(int i = 0; i &lt; n; i++) {\n        for(int neighbor : graph[i]) {\n            inDegree[neighbor]++;\n        }\n    }\n\n    queue&lt;int&gt; q;\n    for(int i = 0; i &lt; n; i++) {\n        if(inDegree[i] == 0) {\n            q.push(i);\n        }\n    }\n\n    while(!q.empty()) {\n        int node = q.front();\n        q.pop();\n        result.push_back(node);\n        for(int neighbor : graph[node]) {\n            inDegree[neighbor]--;\n            if(inDegree[neighbor] == 0) {\n                q.push(neighbor);\n            }\n        }\n    }\n\n    // Check if topological sort is possible (i.e., no cycle exists)\n    return result.size() == n;\n}\n\nint main() {\n    // Example graph represented as an adjacency list\n    // graph[i] is a list of vertices that node i points to.\n    vector&lt;vector&lt;int&gt;&gt; graph = {\n        {1},        // 0 -&gt; 1\n        {2, 3},     // 1 -&gt; 2, 3\n        {3, 4},     // 2 -&gt; 3, 4\n        {4},        // 3 -&gt; 4\n        {}          // 4 -&gt; no outgoing edge\n    };\n\n    vector&lt;int&gt; result;\n    if(topologicalSort(graph, result)) {\n        cout &lt;&lt; \"Topological Order: \";\n        for(int node : result) {\n            cout &lt;&lt; node &lt;&lt; \" \";\n        }\n        cout &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Graph has a cycle. Topological sort not possible.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_23","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u89e3\u91ca\uff1a\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u662f\u5728\u4e00\u4e2a\u52a0\u6743\u8fde\u901a\u56fe\u4e2d\u641c\u7d22\u6700\u5c0f\u751f\u6210\u6811\u3002\u7531\u6b64\u7b97\u6cd5\u641c\u7d22\u5230\u7684\u8fb9\u5b50\u96c6\u6240\u6784\u6210\u7684\u6811\u4e2d\uff0c\u4e0d\u4f46\u5305\u62ec\u4e86\u8fde\u901a\u56fe\u91cc\u7684\u6240\u6709\u9876\u70b9\uff08\u82f1\u8bed\uff1aVertex (graph theory)\uff09\uff0c\u4e14\u5176\u6240\u6709\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u4ea6\u4e3a\u6700\u5c0f\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#prim","title":"prim\u7b97\u6cd5","text":"<pre><code>#include &lt;climits&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\n// \u5b9a\u4e49\u65e0\u9650\u5927\u4e3aINT_MAX\nconst int INF = INT_MAX;\n\n// \u51fd\u6570\u6765\u627e\u5230\u6743\u503c\u6700\u5c0f\u7684\u8fb9\nint minKey(vector&lt;int&gt;&amp; key, vector&lt;bool&gt;&amp; mstSet, int V) {\n  int min = INF, min_index;\n\n  for (int v = 0; v &lt; V; v++)\n    if (mstSet[v] == false &amp;&amp; key[v] &lt; min) min = key[v], min_index = v;\n\n  return min_index;\n}\n\n// \u51fd\u6570\u6253\u5370\u751f\u6210\u6811\nvoid printMST(vector&lt;int&gt;&amp; parent, vector&lt;vector&lt;int&gt;&gt;&amp; graph, int V) {\n  cout &lt;&lt; \"Edge \\tWeight\\n\";\n  for (int i = 1; i &lt; V; i++)\n    cout &lt;&lt; parent[i] &lt;&lt; \" - \" &lt;&lt; i &lt;&lt; \" \\t\" &lt;&lt; graph[i][parent[i]] &lt;&lt; \" \\n\";\n}\n\n// Prim\u7b97\u6cd5\u7684\u5b9e\u73b0\nvoid primMST(vector&lt;vector&lt;int&gt;&gt;&amp; graph, int V) {\n  vector&lt;int&gt; parent(V);\n  vector&lt;int&gt; key(V, INF);//\u56fe\u4e2d\u6bcf\u4e2a\u9876\u70b9\u5230\u751f\u6210\u6811\u7684\u5f53\u524d\u6700\u5c0f\u8fb9\u7684\u6743\u91cd\n  vector&lt;bool&gt; mstSet(V, false);\n\n  key[0] = 0;\n  parent[0] = -1;\n\n  for (int count = 0; count &lt; V - 1; count++) {\n    int u = minKey(key, mstSet, V);\n\n    mstSet[u] = true;\n\n    for (int v = 0; v &lt; V; v++)\n      if (graph[u][v] &amp;&amp; mstSet[v] == false &amp;&amp; graph[u][v] &lt; key[v])\n        parent[v] = u, key[v] = graph[u][v];\n  }\n\n  printMST(parent, graph, V);\n}\n\nint main() {\n  int V = 5;// \u9876\u70b9\u6570\n  vector&lt;vector&lt;int&gt;&gt; graph = {{0, 2, 0, 6, 0},\n                               {2, 0, 3, 8, 5},\n                               {0, 3, 0, 0, 7},\n                               {6, 8, 0, 0, 9},\n                               {0, 5, 7, 9, 0}};// \u90bb\u63a5\u77e9\u9635\n\n  primMST(graph, V);\n\n  return 0;\n}\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%8D%9A%E5%BC%88%E8%AE%BA%E5%9C%A8%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/","title":"\u535a\u5f08\u8bba\u5728\u81ea\u52a8\u9a7e\u9a76\u4e2d\u7684\u5e94\u7528","text":"<p>\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u6cd5\uff1alevel k \u548c leader-follower\u6a21\u578b</p> <p>1.B\u7ad9\u89c6\u9891\u8bb2\u89e3</p> <p>[http://player.bilibili.com/player.html?aid=941147182&amp;bvid=BV1rW4y117oU&amp;cid=778917933&amp;page=1</p> <p>2.\u535a\u58eb\u8bba\u6587</p> <p>Li - Game-Theoretic and Set-Based Methods for Safe Auto.pdf</p> <p>3.\u77e5\u4e4e\u6587\u7ae0</p> <p>Game-Theoretic Modeling of Multi-Vehicle Interactions at Uncontrolled Intersections\uff082019\uff09</p> <p>https://zhuanlan.zhihu.com/p/450235968 Cooperation-Aware Decision Making for Autonomous Vehicles in Merge Scenarios https://zhuanlan.zhihu.com/p/452933995</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%8F%98%E5%88%86%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8%EF%BC%88VAE%EF%BC%89/","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08VAE\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%8F%98%E5%88%86%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8%EF%BC%88VAE%EF%BC%89/#vae","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08VAE\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%8F%98%E5%88%86%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8%EF%BC%88VAE%EF%BC%89/#ganva","title":"\u4e24\u7c7b\u91cd\u8981\u7684\u751f\u6210\u5f0f\u6a21\u578b\uff1aGAN\u548cVA","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E7%9A%84%E5%A5%97%E8%B7%AF/","title":"\u56de\u6eaf\u7b97\u6cd5\u7684\u5957\u8def","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/","title":"\u56fe\u7075\u5b8c\u5907","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#1","title":"1 \u4ec0\u4e48\u662f\u56fe\u7075\u673a","text":"<p>\u56fe\u7075\u673a\uff08Turing Machine\uff09\u662f\u56fe\u7075\u57281936\u5e74\u53d1\u8868\u7684 \"On Computable Numbers, with an Application to the Entscheidungsproblem\"\uff08\u300a\u8bba\u53ef\u8ba1\u7b97\u6570\u53ca\u5176\u5728\u5224\u5b9a\u6027\u95ee\u9898\u4e0a\u7684\u5e94\u7528\u300b\uff09\u4e2d\u63d0\u51fa\u7684\u6570\u5b66\u6a21\u578b\u3002\u65e2\u7136\u662f\u6570\u5b66\u6a21\u578b\uff0c\u5b83\u5c31\u5e76\u975e\u4e00\u4e2a\u5b9e\u4f53\u6982\u5ff5\uff0c\u800c\u662f\u67b6\u7a7a\u7684\u4e00\u4e2a\u60f3\u6cd5\u3002\u5728\u6587\u7ae0\u4e2d\u56fe\u7075\u63cf\u8ff0\u4e86\u5b83\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u8bc1\u660e\u4e86\uff0c\u53ea\u8981\u56fe\u7075\u673a\u53ef\u4ee5\u88ab\u5b9e\u73b0\uff0c\u5c31\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u4efb\u4f55\u53ef\u8ba1\u7b97\u95ee\u9898\u3002</p> <p>\u56fe\u7075\u673a\u7684\u7ed3\u6784\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u4e00\u6761\u65e0\u9650\u957f\u7684\u7eb8\u5e26\uff08tape\uff09\uff0c\u7eb8\u5e26\u88ab\u5206\u6210\u4e00\u4e2a\u4e2a\u76f8\u90bb\u7684\u683c\u5b50\uff08square\uff09\uff0c\u6bcf\u4e2a\u683c\u5b50\u90fd\u53ef\u4ee5\u5199\u4e0a\u81f3\u591a\u4e00\u4e2a\u5b57\u7b26\uff08symbol\uff09\u3002</li> <li>\u4e00\u4e2a\u5b57\u7b26\u8868\uff08alphabet\uff09\uff0c\u5373\u5b57\u7b26\u7684\u96c6\u5408\uff0c\u5b83\u5305\u542b\u7eb8\u5e26\u4e0a\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u6709\u5b57\u7b26\u3002\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u7279\u6b8a\u7684\u7a7a\u767d\u5b57\u7b26\uff08blank\uff09\uff0c\u610f\u601d\u662f\u6b64\u683c\u5b50\u6ca1\u6709\u4efb\u4f55\u5b57\u7b26\u3002</li> <li>\u4e00\u4e2a\u8bfb\u5199\u5934\uff08head\uff09\uff0c\u53ef\u7406\u89e3\u4e3a\u6307\u5411\u5176\u4e2d\u4e00\u4e2a\u683c\u5b50\u7684\u6307\u9488\u3002\u5b83\u53ef\u4ee5\u8bfb\u53d6/\u64e6\u9664/\u5199\u5165\u5f53\u524d\u683c\u5b50\u7684\u5185\u5bb9\uff0c\u6b64\u5916\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u5411\u5de6/\u53f3\u79fb\u52a8\u4e00\u4e2a\u683c\u5b50\u3002</li> <li>\u4e00\u4e2a\u72b6\u6001\u5bc4\u5b58\u5668\uff08state register\uff09\uff0c\u5b83\u8ffd\u8e2a\u7740\u6bcf\u4e00\u6b65\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u6574\u4e2a\u673a\u5668\u6240\u5904\u7684\u72b6\u6001\uff08\u8fd0\u884c/\u7ec8\u6b62\uff09\u3002\u5f53\u8fd9\u4e2a\u72b6\u6001\u4ece\u8fd0\u884c\u53d8\u4e3a\u7ec8\u6b62\uff0c\u5219\u8fd0\u7b97\u7ed3\u675f\uff0c\u673a\u5668\u505c\u673a\u5e76\u4ea4\u56de\u63a7\u5236\u6743\u3002\u5982\u679c\u4f60\u4e86\u89e3\u6709\u9650\u72b6\u6001\u673a\uff0c\u5b83\u4fbf\u5bf9\u5e94\u7740\u6709\u9650\u72b6\u6001\u673a\u91cc\u7684\u72b6\u6001\u3002</li> <li>\u4e00\u4e2a\u6709\u9650\u7684\u6307\u4ee4\u96c6\uff08instructions table\uff09\uff0c\u5b83\u8bb0\u5f55\u7740\u8bfb\u5199\u5934\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u5e94\u8be5\u6267\u884c\u7684\u884c\u4e3a\u3002\u53ef\u4ee5\u60f3\u8c61\u8bfb\u5199\u5934\u968f\u8eab\u6709\u4e00\u672c\u64cd\u4f5c\u6307\u5357\uff0c\u91cc\u9762\u8bb0\u5f55\u7740\u5f88\u591a\u6761\u7c7b\u4f3c\u4e8e\u201c\u5f53\u4f60\u8eab\u5904\u7f16\u53f753\u7684\u683c\u5b50\u5e76\u770b\u5230\u5176\u5185\u5bb9\u4e3a0\u65f6\uff0c\u64e6\u9664\uff0c\u6539\u5199\u4e3a1\uff0c\u5e76\u5411\u53f3\u79fb\u4e00\u683c\u3002\u6b64\u5916\uff0c\u4ee4\u4e0b\u4e00\u72b6\u6001\u4e3a\u8fd0\u884c\u3002\u201d\u8fd9\u6837\u7684\u547d\u4ee4\u3002\u5176\u5b9e\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u8fd9\u4e2a\u6307\u4ee4\u96c6\u5c31\u5bf9\u5e94\u7740\u7a0b\u5e8f\u5458\u6240\u5199\u4e0b\u7684\u7a0b\u5e8f\u4e86\u3002</li> </ol> <p></p> <p>\u5728\u8ba1\u7b97\u5f00\u59cb\u524d\uff0c\u7eb8\u5e26\u53ef\u4ee5\u662f\u5b8c\u5168\u7a7a\u767d\uff0c\u4e5f\u53ef\u4ee5\u5728\u67d0\u4e9b\u683c\u5b50\u91cc\u9884\u5148\u5c31\u6709\u5199\u4e0a\u90e8\u5206\u5b57\u7b26\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd0\u7b97\u5f00\u59cb\u65f6\uff0c\u8bfb\u5199\u5934\u4ece\u67d0\u4e00\u4f4d\u7f6e\u5f00\u59cb\uff0c\u4e25\u683c\u6309\u7167\u6b64\u523b\u7684\u914d\u7f6e\uff08configuration\uff09\uff0c\u5373\uff1a</p> <ul> <li>\u5f53\u524d\u6240\u5904\u4f4d\u7f6e</li> <li>\u5f53\u524d\u683c\u5b50\u5185\u5bb9</li> </ul> <p>\u6765\u4e00\u6b65\u6b65\u7684\u5bf9\u7167\u7740\u6307\u4ee4\u96c6\u53bb\u8fdb\u884c\u64cd\u4f5c\uff0c\u76f4\u5230\u72b6\u6001\u53d8\u4e3a\u505c\u6b62\uff0c\u8fd0\u7b97\u7ed3\u675f\u3002\u800c\u540e\u7eb8\u5e26\u4e0a\u7559\u4e0b\u7684\u4fe1\u606f\uff0c\u5373\u5b57\u7b26\u7684\u5e8f\u5217\uff08\u6bd4\u5982\u7c7b\u4f3c\u201c...011001...\u201d\uff09\u4fbf\u4f5c\u4e3a\u8f93\u51fa\uff0c\u7531\u4eba\u6765\u89e3\u7801\u4e3a\u81ea\u7136\u8bed\u8a00\u3002</p> <p>\u8981\u91cd\u7533\u4e00\u4e0b\uff0c\u4ee5\u4e0a\u53ea\u662f\u56fe\u7075\u673a\u6a21\u578b\u7684\u5185\u5bb9\uff0c\u800c\u975e\u5177\u4f53\u7684\u5b9e\u73b0\u3002\u6240\u8c13\u7684\u7eb8\u5e26\u548c\u8bfb\u5199\u5934\u90fd\u53ea\u662f\u56fe\u7075\u63d0\u51fa\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u4e3a\u4fbf\u4e8e\u7406\u89e3\u6253\u4e00\u4e2a\u6bd4\u65b9\u3002\u7b97\u76d8\u867d\u7136\u4e0d\u662f\u56fe\u7075\u673a\uff08\u56e0\u4e3a\u5b83\u6ca1\u6709\u65e0\u9650\u957f\u7684\u7eb8\u5e26\uff0c\u5373\u65e0\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff09\uff0c\u4f46\u5b83\u7684\u884c\u4e3a\u4e0e\u56fe\u7075\u673a\u4e00\u81f4\u3002\u6bcf\u4e00\u4e32\u7b97\u73e0\u90fd\u662f\u7eb8\u5e26\u4e0a\u7684\u4e00\u683c\uff0c\u4e00\u4e32\u7b97\u73e0\u4e0a\u5c55\u793a\u7684\u6570\u5b57\u4fbf\u8bb0\u5f55\u7740\u5f53\u524d\u683c\u4e2d\u7684\u5b57\u7b26\uff08\u53ef\u4ee5\u662f\u7a7a\u767d\uff0c\u53ef\u4ee5\u662f 12345 \uff09\u3002\u4eba\u7c7b\u7684\u624b\u5373\u662f\u8bfb\u5199\u5934\uff0c\u53ef\u4ee5\u66f4\u6539\u6bcf\u4e32\u7b97\u73e0\u7684\u72b6\u6001\u3002\u7b97\u76d8\u7684\u8fd0\u884c\u9075\u5faa\u4eba\u8111\u4e2d\u7684\u7b97\u6cd5\uff0c\u5f53\u7b97\u6cd5\u7ed3\u675f\uff0c\u7b97\u76d8\u505c\u673a\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#2","title":"2 \u56fe\u7075\u673a\u53ef\u4ee5\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898","text":"<p>\u5728\u6587\u7ae0\u4e2d\uff0c\u56fe\u7075\u6240\u505a\u7684\u4e8b\u662f\u8bc1\u660e\u4e86\uff0c\u5047\u8bbe\u4e0a\u8ff0\u6a21\u578b\u91cc\u6240\u8bf4\u7684\u529f\u80fd\u90fd\u80fd\u88ab\u4ee5\u67d0\u79cd\u5f62\u5f0f\u7269\u7406\u5b9e\u73b0\uff0c\u90a3\u4e48\u4efb\u610f\u53ef\u8ba1\u7b97\u95ee\u9898\u90fd\u53ef\u4ee5\u88ab\u89e3\u51b3\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u53ef\u8ba1\u7b97\u95ee\u9898\uff0c\u6d89\u53ca\u5230\u8ba1\u7b97\u7406\u8bba\uff08Computation Theory\uff09\u7684\u6982\u5ff5\u3002\u8fd9\u4e2a\u9886\u57df\u7684\u6982\u5ff5\u5f88\u7e41\u6742\uff0c\u5148\u7b80\u5355\u68b3\u7406\u4e00\u4e0b\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u9886\u57df\uff0c\u6216\u8005\u8bf4\u81ea\u52a8\u673a\u9886\u57df\uff0c\u6211\u4eec\u7814\u7a76\u7684\u4e00\u5207\u95ee\u9898\u90fd\u662f\u8ba1\u7b97\u95ee\u9898\uff08Computational Problem\uff09\u3002\u5b83\u6cdb\u6307\u4e00\u5207\u4e0e\u8ba1\u7b97\u76f8\u5173\u7684\u95ee\u9898\u3002</p> <p>A computational problem\u00a0is a mathematical object representing a collection of questions that computers might be able to solve.</p> <p>\u8ba1\u7b97\u95ee\u9898\u7684\u4e00\u4e9b\u4e3e\u4f8b\uff1a</p> <ol> <li>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u5224\u65ad\u5b83\u662f\u5426\u662f\u8d28\u6570</li> <li>\u7ed9\u5b9a\u4e00\u4e2a 01 \u5e8f\u5217\uff0c\u628a\u5b83\u4eec\u6309\u4f4d\u53d6\u53cd</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u67d0\u4e2a\u5b57\u7b26\u662f\u5426\u5b58\u5728\uff0c\u53ca\u67e5\u627e\u5b58\u5728\u4f4d\u7f6e</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u903b\u8f91\u8574\u542b\u7684\u547d\u9898\uff0c\u6c42\u5b83\u7684\u9006\u5426\u547d\u9898</li> </ol> <p>\u975e\u8ba1\u7b97\u95ee\u9898\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u4eca\u665a\u5403\u4ec0\u4e48</li> <li>\u4e3a\u4ec0\u4e48\u592a\u9633\u4ece\u4e1c\u8fb9\u5347\u8d77</li> </ul> <p>\u8ba1\u7b97\u95ee\u9898\u6709\u7684\u53ef\u4ee5\u89e3\u51b3\uff0c\u6709\u7684\u4e0d\u53ef\u89e3\u51b3\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u8ba1\u7b97\u95ee\u9898\u7684\u53ef\u8ba1\u7b97\u6027\uff08Computability\uff09\u3002\u5b83\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u201c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u7b97\u6cd5\uff0c\u80fd\u89e3\u51b3\u5728\u4efb\u4f55\u8f93\u5165\u4e0b\u7684\u6b64\u8ba1\u7b97\u95ee\u9898\u201d\u3002\u5982\u4e0a\u9762\u7684\u95ee\u9898 1\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u7b97\u6cd5\u6765\u89e3\u51b3\u5224\u65ad\u4efb\u610f\u6b63\u6574\u6570 n \u662f\u5426\u4e3a\u8d28\u6570\u7684\u95ee\u9898\uff08\u6bd4\u5982\u4ece2\u904d\u5386\u5230 n-1\uff0c\u770b n \u662f\u5426\u53ef\u4ee5\u6574\u9664\u5b83\uff09\u3002\u6240\u4ee5\uff0c\u95ee\u9898 1 \u5c31\u662f\u53ef\u8ba1\u7b97\u7684\u3002</p> <p>\u4e5f\u6709\u4e00\u4e9b\u4e0d\u53ef\u8ba1\u7b97\u7684\u8ba1\u7b97\u95ee\u9898\uff0c\u6bd4\u5982\u8457\u540d\u7684\u505c\u673a\u95ee\u9898\uff08Halting Problem\uff09\u3002\u5b83\u7684\u8868\u8ff0\u662f\u8fd9\u6837\u7684\uff1a\u7ed9\u5b9a\u4e00\u6bb5\u7a0b\u5e8f\u7684\u63cf\u8ff0\u548c\u8be5\u7a0b\u5e8f\u7684\u4e00\u4e2a\u6709\u6548\u8f93\u5165\uff0c\u8fd0\u884c\u6b64\u7a0b\u5e8f\uff0c\u90a3\u4e48\u7a0b\u5e8f\u6700\u7ec8\u662f\u4f1a\u7ec8\u6b62\uff0c\u8fd8\u662f\u4f1a\u6b7b\u5faa\u73af\u4e0b\u53bb\uff1f</p> <p>Halting Problem: given the description of an arbitrary program and a finite input, decide whether the program finishes running or will run forever.</p> <p>\u8fd9\u4e2a\u95ee\u9898\u5f88\u7ed5\u4eba\uff0c\u6709\u70b9\u50cf\u90a3\u4e2a\u8457\u540d\u7684\u7406\u53d1\u5e08\u6096\u8bba\uff0c\u4f46\u5b83\u786e\u5b9e\u662f\u4e00\u4e2a\u8ba1\u7b97\u95ee\u9898\u3002\u66f4\u5177\u4f53\u7684\uff0c\u5b83\u662f\u4e00\u4e2a\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\uff08Undecidable Problem\uff09\u3002\u5373\u4e0d\u5b58\u5728\u4e00\u4e2a\u901a\u7528\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u8f93\u5165\u4e0b\u89e3\u51b3\u6b64\u95ee\u9898\u3002\u56fe\u7075\u5728\u6587\u7ae0\u91cc\u5f88\u4f18\u96c5\u7684\u7528\u53cd\u8bc1\u6cd5\u63a8\u7ffb\u4e86\u5047\u8bbe\u201c\u5047\u8bbe\u6709\u8fd9\u4e48\u4e00\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u4efb\u4f55\u505c\u673a\u95ee\u9898\u201d\uff0c\u4ece\u800c\u8bc1\u660e\u4e86\u8fd9\u6837\u7684\u7b97\u6cd5\u5e76\u4e0d\u5b58\u5728\u3002\u5177\u4f53\u8bc1\u660e\u8fc7\u7a0b\u7f51\u4e0a\u7684\u8d44\u6599\u975e\u5e38\u4e30\u5bcc\uff0c\u6211\u5c31\u4e0d\u518d\u82b1\u7bc7\u5e45\u4e86\u3002</p> <p>\u56de\u5230\u8fd9\u4e00\u8282\u7684\u4e3b\u9898\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u4efb\u610f\u8f93\u5165\uff0c\u53ea\u8981\u4eba\u7c7b\u53ef\u4ee5\u4fdd\u8bc1\u7b97\u51fa\u7ed3\u679c\uff08\u4e0d\u7ba1\u82b1\u591a\u5c11\u65f6\u95f4\uff09\uff0c\u90a3\u4e48\u56fe\u7075\u673a\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7b97\u51fa\u7ed3\u679c\uff08\u4e0d\u7ba1\u82b1\u591a\u5c11\u65f6\u95f4\uff09\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#3","title":"3  \u4ec0\u4e48\u662f\u56fe\u7075\u5b8c\u5907","text":"<p>\u56fe\u7075\u5b8c\u5907\u6027\uff08Turing Completeness\uff09\u662f\u9488\u5bf9\u4e00\u5957\u6570\u636e\u64cd\u4f5c\u89c4\u5219\u800c\u8a00\u7684\u6982\u5ff5\u3002\u6570\u636e\u64cd\u4f5c\u89c4\u5219\u53ef\u4ee5\u662f\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e5f\u53ef\u4ee5\u662f\u8ba1\u7b97\u673a\u91cc\u5177\u4f53\u5b9e\u73b0\u4e86\u7684\u6307\u4ee4\u96c6\u3002\u5f53\u8fd9\u5957\u89c4\u5219\u53ef\u4ee5\u5b9e\u73b0\u56fe\u7075\u673a\u6a21\u578b\u91cc\u7684\u5168\u90e8\u529f\u80fd\u65f6\uff0c\u5c31\u79f0\u5b83\u5177\u6709\u56fe\u7075\u5b8c\u5907\u6027\u3002\u76f4\u767d\u4e00\u70b9\u8bf4\uff0c\u56fe\u7075\u5b8c\u5907\u6027\u5c31\u662f\u6211\u7ed9\u4f60\u4e00\u5de5\u5177\u7bb1\u7684\u4e1c\u897f\uff0c\u5305\u62ec\u65e0\u9650\u5185\u5b58\u3001if/else \u63a7\u5236\u6d41\u3001while \u5faa\u73af\u2026\u2026\u90a3\u4e48\u4f60\u73b0\u5728\u56fe\u7075\u5b8c\u5907\u4e86\u5417\uff1f</p> <p>\u5224\u65ad\u4e00\u4e2a\u8bed\u8a00\u662f\u5426\u662f\u56fe\u7075\u5b8c\u5907\u7684\u6807\u51c6\uff1a 1. \u80fd\u591f\u65e0\u9650\u5faa\u73af 2. \u80fd\u591f\u6a21\u62df\u7c7b\u4f3c\u65e0\u9650\u6570\u7ec4\u7684\u6570\u636e\u7ed3\u6784</p> <p>\u6bd4\u5982C++\u6a21\u677f\u662f\u56fe\u7075\u5b8c\u5907\u7684\u3002</p> <p>\u6982\u5ff5\u672c\u8eab\u5012\u662f\u975e\u5e38\u76f4\u89c2\uff0c\u4f46\u6574\u4ef6\u4e8b\u4f3c\u4e4e\u8fd8\u662f\u8ba9\u4eba\u4e91\u91cc\u96fe\u91cc\u3002\u6211\u66fe\u7ecf\u4e00\u76f4\u4e0d\u61c2\u7684\u5c31\u662f\u4e3a\u4ec0\u4e48\u56fe\u7075\u7ed9\u51fa\u7684\u90a3\u4e2a\u547d\u9898\u662f\u6b63\u786e\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u51ed\u4ec0\u4e48\u6709\u4e86\u7eb8\u5e26\u4ee5\u53ca\u5176\u4ed6\u7684\u90a3\u4e00\u5957\u4e1c\u897f\uff0c\u5c31\u53ef\u4ee5\u81ea\u4fe1\u89e3\u51b3\u4efb\u610f\u53ef\u8ba1\u7b97\u95ee\u9898\u5462\uff1f\u5c3d\u7ba1\u6211\u4e0d\u80fd\u901a\u8bfb\u4ed6\u7684\u90a3\u7bc7\u8bba\u6587\u91cc\u7684\u8bc1\u660e\uff0c\u4f46\u662f\u901a\u8fc7\u4e00\u95e8\u53eb\u505a Brainfuck \u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd8\u662f\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u76f4\u89c9\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#4-brainfuck","title":"4 \u76f4\u89c2\u7406\u89e3\u56fe\u7075\u5b8c\u5907\u2014\u2014Brainfuck \u8bed\u8a00","text":"<p>\u5982\u4eca\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\uff08C++\uff0cJava\uff0cPython\uff0c\u4ee5\u53ca\u7b49\u7b49\u7b49\u7b49\uff09\u90fd\u662f\u56fe\u7075\u5b8c\u5907\u7684\u8bed\u8a00\u3002\u5173\u4e8e\u8bed\u8a00\u4f18\u52a3\u4e4b\u4e89\u4e5f\u53ea\u662f\u5728\u5176\u5c01\u88c5\u3001\u4f18\u5316\u7b49\u65b9\u9762\uff0c\u4ee5\u53ca\u56e0\u4e3a\u8fd9\u4e9b\u533a\u522b\u800c\u4ea7\u751f\u7684\u201c\u4e0d\u540c\u8bed\u8a00\u9002\u7528\u4e8e\u4e0d\u540c\u60c5\u51b5\u201d\u7684\u4e89\u6267\u3002\u5982\u679c\u6211\u4eec\u56de\u5230\u6700\u5e95\u5c42\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b83\u4eec\u53ef\u4ee5\u5b9e\u73b0\u7684\u529f\u80fd\u5176\u5b9e\u5b8c\u5168\u4e00\u6837\uff0c\u5e76\u4e14\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u56fe\u7075\u673a\u3002</p> <p>\u57281993\u5e74\uff0cUrban M\u00fcller \u53d1\u660e\u4e86 Brainfuck \u8bed\u8a00\u3002\u8fd9\u95e8\u8bed\u8a00\u53ef\u4ee5\u8bf4\u662f\u7f16\u7a0b\u8bed\u8a00\u754c\u7684 helloworld \u4e86\u2014\u2014\u5b83\u4e00\u5171\u53ea\u542b\u6709 8 \u4e2a\u6709\u6548\u5b57\u7b26\uff0c\u6bcf\u4e2a\u6709\u6548\u5b57\u7b26\u5c31\u662f\u4e00\u6761\u6307\u4ee4\u3002\u8bed\u8a00\u867d\u7136\u6781\u81f4\u8f7b\u91cf\uff0c\u5b83\u5374\u662f\u4e00\u95e8\u56fe\u7075\u5b8c\u5907\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5982\u679c\u80fd\u7406\u89e3\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7406\u89e3\u56fe\u7075\u673a\u662f\u6709\u5f88\u5927\u5e2e\u52a9\u7684\u3002</p> <p>Brainfuck is fully Turing-complete.</p> <p>\u5148\u8d34\u4e0a\u4e00\u6bb5 BF \u7684\u4ee3\u7801\uff0c\u4f53\u9a8c\u4e00\u4e0b\u5b83\u7684\u753b\u98ce\uff1a</p> <pre><code>++++++++[&gt;++++[&gt;++&gt;+++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;+&gt;+&gt;-&gt;&gt;+[&lt;]&lt;-]&gt;&gt;.&gt;---.+++++++..+++.&gt;&gt;.&lt;-.&lt;.+++\n.------.--------.&gt;&gt;+.&gt;++.\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u7f16\u8bd1\u8fd0\u884c\u540e\uff0c\u63a7\u5236\u53f0\u6253\u5370 \"Hello World!\"\u3002</p> <p>BF \u7684\u5de5\u4f5c\u673a\u5236\u4e0e\u56fe\u7075\u673a\u9ad8\u5ea6\u4e00\u81f4\u3002\u9996\u5148\u5b83\u5b58\u50a8\u6570\u636e\u7684\u65b9\u5f0f\u662f\u4e00\u4e2a\u4e0d\u9650\u957f\u7684\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff0c\u91cc\u9762\u7684\u6570\u503c\u5168\u90e8\u521d\u59cb\u5316\u4e3a 0\u3002\u6b64\u5916\uff0c\u6709\u4e00\u6570\u636e\u6307\u9488\uff0c\u6bcf\u4e00\u65f6\u523b\u90fd\u6307\u5411\u6570\u7ec4\u7684\u67d0\u4e00\u4efb\u610f\u5143\u7d20\u3002\u6307\u9488\u53ef\u4ee5\u5411\u5de6/\u53f3\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u8bfb\u53d6/\u4fee\u6539\u5f53\u524d\u503c\u3002</p> <p>\u8bed\u8a00\u91cc\u7684 8 \u4e2a\u6709\u6548\u5b57\u7b26\u5206\u522b\u662f\uff1a</p> <ul> <li>&gt;     \u6307\u9488\u5411\u53f3\u79fb\u52a8\u4e00\u683c</li> <li>\\&lt;     \u6307\u9488\u5411\u5de6\u79fb\u52a8\u4e00\u683c</li> <li>+     \u4f7f\u6307\u9488\u5f53\u524d\u683c\u6570\u503c\u52a0\u4e00</li> <li>-     \u4f7f\u6307\u9488\u5f53\u524d\u683c\u6570\u503c\u51cf\u4e00</li> <li>.     \u628a\u5f53\u524d\u683c\u6570\u503c\u6309 ASCII \u8868\u8f93\u51fa\u5230\u7ec8\u7aef</li> <li>\\,     \u4ece\u7ec8\u7aef\u63a5\u53d7\u4e00\u00a0byte\u00a0\u7684\u6570\u636e\uff0c\u5b58\u50a8\u5176 ASCII \u6570\u503c\u5230\u5f53\u524d\u683c</li> <li>[     \u5f53\u6307\u9488\u5f53\u524d\u503c\u4e3a 0 \u65f6\uff0c\u7a0b\u5e8f\u8df3\u8f6c\u81f3\u4e0e\u4e4b\u5bf9\u5e94\u7684 ] \u4e4b\u540e\uff1b\u5426\u5219\u7a0b\u5e8f\u6b63\u5e38\u6267\u884c</li> <li>]     \u7a0b\u5e8f\u8df3\u8f6c\u56de\u4e0e\u4e4b\u5bf9\u5e94\u7684 [ \u5904</li> </ul> <p>\u6709\u4e86\u8fd9\u4e9b\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u505a\u51fa\u4e00\u4e2a\u8ba1\u7b97\u4e58\u6cd5\u7684\u7a0b\u5e8f\u3002\u56e0\u4e3a ASCII \u8868\u4e2d 'A' \u5bf9\u5e94\u7684\u503c\u4e3a 65\uff0c\u53ef\u4ee5\u4f7f\u7528 5 * 13 \u7b97\u51fa 65 \u5e76\u8f93\u51fa\u5f97\u5230\u5b57\u7b26 'A'\u3002</p> <pre><code>+++++\n\n[\n&gt;+++++++++++++\n&lt;-\n]\n\n&gt;.\n</code></pre> <p>\u628a\u6307\u9488\u521d\u59cb\u5904\u7684\u683c\u5b50\u547d\u540d\u4e3a cell 0\uff0ccell 0 \u53f3\u8fb9\u7684\u90a3\u4e2a\u683c\u5b50\u547d\u540d\u4e3a cell 1\u3002\u90a3\u4e48\u7b2c\u4e00\u53e5\u5c06\u5176\u9012\u589e 5 \u6b21\u53d8\u4e3a 5\u3002\u7136\u540e\uff0c\u5faa\u73af\u6267\u884c\u201c\u53f3\u79fb\u6307\u9488\uff0c\u9012\u589e 13 \u6b21\uff0c \u5de6\u79fb\u6307\u9488\uff0c\u9012\u51cf 1 \u6b21\u201d\u3002\u5f53 cell 0 \u7684\u503c\u6700\u7ec8\u88ab\u9012\u51cf\u4e3a 0 \u7684\u65f6\u5019\uff0c\u5faa\u73af\u7ed3\u675f\u3002\u6b64\u65f6 cell 1 \u7684\u503c\u6267\u884c\u4e86 5 \u6b21\u201c\u9012\u589e 13 \u6b21\u201d\u7684\u64cd\u4f5c\uff0c\u5373 65\u3002\u6307\u9488\u53f3\u79fb\u81f3 cell 1\uff0c\u8f93\u51fa\u6b64\u683c\u5b50\uff0c\u5219\u5728\u7ec8\u7aef\u4f1a\u770b\u5230 'A'\u3002</p> <p></p> <p>\u7f16\u8bd1\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u5757</p> <p>\u6211\u5199\u8fd9\u4e2a\u4f8b\u5b50\u7684\u76ee\u7684\u662f\u6f14\u793a\u53ea\u7528\u56fe\u7075\u673a\u7684\u6a21\u578b\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9e\u8ba1\u7b97\u51fa\u4e58\u6cd5\u7684\u7ed3\u679c\u3002\u90a3\u4e48\u81ea\u7136\u66f4\u52a0\u590d\u6742\u7684\u8ba1\u7b97\u4e5f\u53ef\u4ee5\u88ab\u62c6\u89e3\u6210\u56fe\u7075\u673a\u64cd\u4f5c\uff08\u5c3d\u7ba1\u53ef\u80fd\u975e\u5e38\u7410\u788e\uff09\u3002\u6b64\u5916\uff0c\u8fd9\u4e2a\u8bed\u8a00\u56e0\u4e3a\u7b80\u6d01\uff0c\u4e5f\u662f\u7b2c\u4e00\u6b21\u7ec3\u4e60\u5199\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u9009\u62e9\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#5","title":"5 \u56fe\u7075\u4e0d\u5b8c\u5907","text":"<p>\u5e38\u89c1\u539f\u56e0\u6709\uff1a</p> <ol> <li>\u5faa\u73af\u6216\u9012\u5f52\u53d7\u9650(\u65e0\u6cd5\u5199\u4e0d\u7ec8\u6b62\u7684\u7a0b\u5e8f,\u5982 while(true){}; ),</li> <li>\u65e0\u6cd5\u5b9e\u73b0\u7c7b\u4f3c\u6570\u7ec4\u6216\u5217\u8868\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784(\u4e0d\u80fd\u6a21\u62df\u7eb8\u5e26). \u8fd9\u4f1a\u4f7f\u80fd\u5199\u7684\u7a0b\u5e8f\u6709\u9650</li> </ol>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#6-c","title":"6 C++\u6a21\u677f\u7684\u56fe\u7075\u5b8c\u5907","text":"<p>\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u56fe\u7075\u5b8c\u5907\uff0c\u6307\u7684\u662f\u80fd\u591f\u8ba1\u7b97\u4efb\u4f55\u4e00\u4e2a\u56fe\u7075\u53ef\u8ba1\u7b97\u7684\u51fd\u6570\uff0c\u6216\u8005\u8bf4\uff0c\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u901a\u7528\u56fe\u7075\u673a\u3002</p> <p>\u7ed3\u8bba\uff1aC++\u6a21\u677f\u662f\u56fe\u7075\u5b8c\u5907\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u7406\u8bba\u4e0a\u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u89e3\u51b3\u6240\u6709\u4e8b\u60c5\uff08\u5b8c\u6210\u6240\u6709\u8ba1\u7b97\uff09\uff0c\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u7684\u5f00\u9500\u4e3a0\u3002</p> <p>C++\u6a21\u677f\u7406\u8bba\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u65e0\u9650\u5d4c\u5957\uff0c\u4e5f\u5c31\u662f\u7f16\u8bd1\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u5b8c\u6210\u7f16\u8bd1\u3002\u4f46\u662fgcc\u7f16\u8bd1\u5668\u89c4\u5b9a\u4e86\u6700\u5927\u5d4c\u5957\u6df1\u5ea6\uff08\u6bd4\u5982gcc5\u89c4\u5b9a\u4e86\u6700\u6df1256\u5c42\u5d4c\u5957\uff09</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87/#7-c","title":"7 C\u8bed\u8a00\u7684\u5b8f\u4e0d\u662f\u56fe\u7075\u5b8c\u5907\u7684","text":"<p>C\u8bed\u8a00\u5b8f\u65e0\u6cd5\u5b8c\u6210\u7f16\u8bd1\u5668\u7684\u6240\u6709\u8ba1\u7b97\uff0c\u56e0\u4e3a\u65e0\u6cd5\u7528\u5b8f\u53bb\u7f16\u7801\u65e0\u7a77\u9012\u5f52\uff0c\u4e5f\u5c31\u662f\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u8fdb\u5165\u6b7b\u5faa\u73af\u3002</p> <p>\u6ce8\u610f\uff1aC++\u548cC\u8bed\u8a00\u672c\u8eab\u4f7f\u56fe\u7075\u5b8c\u5907\u7684\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0/","title":"\u56fe\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60","text":"<p>4-\u7528\u6237\u884c\u4e3a\u56fe\u7ed3\u6784\u521b\u5efa_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4efb\u52a1\u5f62\u5f0f\uff1a - \u9488\u5bf9\u56fe\u8303\u56f4\u7684\u4efb\u52a1\uff1a\u4e00\u4e2adataset\u6709\u5f88\u591a\u56fe\uff0c\u5224\u65ad\u6bcf\u4e2a\u56fe\u7684\u5c5e\u6027\u3002\u6bd4\u5982\u4e00\u4e2a\u5206\u5b50\u5f0f\u4ee3\u8868\u4e00\u5f20\u56fe\uff0c\u5224\u65ad\u4e00\u4e2a\u5206\u5b50\u5f0f\u7684\u7c7b\u522b\uff0c\u90a3\u4e48\u6bcf\u4e2a\u56fe\u5bf9\u5e94\u4e00\u4e2a\u8f93\u51fa\u7ed3\u679c - \u9488\u5bf9\u8282\u70b9\u8303\u56f4\u7684\u4efb\u52a1\uff1a\u4e00\u4e2adataset\u53ea\u6709\u4e00\u4e2a\u56fe\uff0c\u5224\u65ad\u6bcf\u4e2a\u8282\u70b9\u7684\u5c5e\u6027\u3002\u6bd4\u5982\u793e\u4ea4\u7f51\u7edc\u662f\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u4eba\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u8f93\u51fa\u7ed3\u679c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0/#1","title":"1.\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5e93","text":"<p>pytorch geometric Installation \u2014 pytorch_geometric documentation (pytorch-geometric.readthedocs.io) \u4e00\u4e2a\u4f7f\u7528demo\uff08\u8282\u70b9\u5206\u7c7b\uff09</p> <pre><code>import torch\nimport torch.nn.functional as F\nfrom torch_geometric.nn import GCNConv\n\nfrom torch_geometric.datasets import Planetoid\n\ndataset = Planetoid(root='/tmp/Cora', name='Cora')\n\nclass GCN(torch.nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = GCNConv(dataset.num_node_features, 16)\n        self.conv2 = GCNConv(16, dataset.num_classes)\n\n    def forward(self, data):\n        x, edge_index = data.x, data.edge_index\n\n        x = self.conv1(x, edge_index)\n        x = F.relu(x)\n        x = F.dropout(x, training=self.training)\n        x = self.conv2(x, edge_index)\n\n        return F.log_softmax(x, dim=1)\n\n#train\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nmodel = GCN().to(device)\ndata = dataset[0].to(device)\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01, weight_decay=5e-4)\n\nmodel.train()\nfor epoch in range(200):\n    optimizer.zero_grad()\n    out = model(data)\n    loss = F.nll_loss(out[data.train_mask], data.y[data.train_mask])#\u53ea\u8ba1\u7b97\u6709\u6807\u7b7e\u7684\u8282\u70b9\n    loss.backward()\n    optimizer.step()\n</code></pre> <pre><code>model.eval()\npred = model(data).argmax(dim=1)\ncorrect = (pred[data.test_mask]  data.y[data.test_mask]).sum()\nacc = int(correct) / int(data.test_mask.sum())\nprint(f'Accuracy: {acc:.4f}')\n&gt;&gt;&gt; Accuracy: 0.8150\n</code></pre> <p>\u6570\u636e\u96c6\u7684\u5236\u4f5c\uff1a <pre><code>import torch\nfrom torch_geometric.data import Data\n\nedge_index = torch.tensor([[0, 1, 1, 2],\n                           [1, 0, 2, 1]], dtype=torch.long)\nx = torch.tensor([[-1], [0], [1]], dtype=torch.float)\n\ndata = Data(x=x, edge_index=edge_index)#\u4e00\u822c\u7ed9\u51fa\u6570\u636e\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fay\uff08\u6807\u7b7e\uff09\n\n&gt;&gt;&gt; Data(edge_index=[2, 4], x=[3, 1])\n</code></pre></p> <p>1-\u6784\u5efa\u6570\u636e\u96c6\u57fa\u672c\u65b9\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4e00\u4e2aDate\u4ee3\u8868\u4e00\u4e2a\u56fe\uff0c\u7136\u540e\u5408\u6210\u4e00\u4e2adataset</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0/#2","title":"2.\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u6559\u7a0b","text":"<p>9. 3-\u90bb\u63a5\u7684\u77e9\u9635\u7684\u53d8\u6362_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <ul> <li>\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u9002\u7528\u4efb\u52a1\uff1a\u8f93\u5165\u6570\u636e\u4e0d\u89c4\u5219\uff0c\u6bd4\u5982\u5316\u5b66\u5206\u5b50\u5f0f\u3001\u793e\u4ea4\u7f51\u7edc\u7b49\u3002\u4e00\u822cCV\u6216\u8005NLP\u7684\u8f93\u5165\u6570\u636e\u90fd\u5f88\u89c4\u5219\uff0c\u56e0\u6b64\u4e0d\u7528GNN</li> <li>\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u6d41\u7a0b\uff1a</li> </ul> <p>\u5ea6\u77e9\u9635\u4e5f\u52a0\u4e0a\u81ea\u8eab\uff08\u4e5f\u5c31\u662f\u5bf9\u89d2\u503c\u90fd\u52a0\u4e0a1\uff09</p> <p>\u53f3\u4e58\u5bf9\u5217\u505a\u5f52\u4e00\u5316</p> <p>\u505a\u4e86\u4e24\u5c42\uff0c\u6709\u4e24\u4e2a\u53c2\u6570\u77e9\u9635w0\u548cw1</p> <p>GCN\u4e00\u822c\u4e0d\u9700\u8981\u5c42\u6570\u592a\u591a\uff0c\u5c42\u6570\u8d8a\u591a\u611f\u53d7\u91ce\u8d8a\u5927\uff0c\u4e00\u822c3-5\u5c42\u6548\u679c\u6700\u597d</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0/#-xda","title":"- \u7ed9\u51fa\u7279\u5f81\u77e9\u9635X\u3001\u5ea6\u77e9\u9635D\u3001\u90bb\u63a5\u77e9\u9635A","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0/#3-attention","title":"3. \u56fe\u795e\u7ecf\u7f51\u7edc\u7684attention","text":"<p>\u56fe\u795e\u7ecf\u7f51\u7edc\u7684attention\u5176\u5b9e\u5c31\u662f\u5bf9\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u53c2\u6570\u5316\uff0c\u5b9e\u73b0\u5c0f\u6570\u7684\u90bb\u63a5\u77e9\u9635\uff08\u90bb\u63a5\u77e9\u9635\u7684\u91cd\u6784\uff09</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%8D%B7%E7%A7%AF/","title":"\u5982\u4f55\u7406\u89e3\u5377\u79ef","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%8D%B7%E7%A7%AF/#_1","title":"\u5b9a\u4e49","text":"<p>\u4e00\u4e2a\u51fd\u6570y(t)\u53ef\u4ee5\u7531\u4e00\u7cfb\u5217\u8109\u51b2\u70b9\u7684\u53e0\u52a0\u6765\u8868\u793a\u3002\u8fd9\u4e5f\u662f\u5377\u79ef\u7684\u7531\u6765\u3002</p> <p></p> <p>\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u53ef\u4ee5\u7528\u9636\u8dc3\u51fd\u6570\u7684\u5dee\u00d7\u8fd9\u4e00\u70b9\u7684\u51fd\u6570\u503c\u6765\u8868\u793a\u3002  \u5176\u4e2du\u662f\u5355\u4f4d\u9636\u8dc3\u51fd\u6570\uff0c\u5355\u4f4d\u9636\u8dc3\u51fd\u6570\u7684\u5bfc\u6570\u5c31\u662f\u8109\u51b2\u51fd\u6570\uff0c\u6216\u8005\u53eb\u51b2\u6fc0\u51fd\u6570\u3002</p> <p>\u6240\u4ee5\u5c31\u6709\u4e86\u5377\u79ef\u7684\u516c\u5f0f</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E4%BC%A0%E9%80%92%E5%87%BD%E6%95%B0H%28s%29/","title":"\u5982\u4f55\u7406\u89e3\u63a7\u5236\u4e2d\u7684\u4f20\u9012\u51fd\u6570H(s)","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E4%BC%A0%E9%80%92%E5%87%BD%E6%95%B0H%28s%29/#_1","title":"\u5b9a\u4e49","text":"<p>\u63a7\u5236\u7406\u8bba\u4e2d\u7684\u4f20\u9012\u51fd\u6570\u662f\u8f93\u51fa\u7684\u62c9\u6c0f\u53d8\u6362Y(s)\u6bd4\u4e0a\u8f93\u5165\u7684\u62c9\u6c0f\u53d8\u6362U(s)\uff1a $$H(s)=\\frac {Y(s)}{U(s)} $$</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E4%BC%A0%E9%80%92%E5%87%BD%E6%95%B0H%28s%29/#_2","title":"\u5185\u6db5","text":"<p>\u5b9e\u9645\u4e0a\u4e00\u4e2a\u7cfb\u7edf\u7684\u8f93\u5165\u4e00\u822c\u662f\u65f6\u95f4\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662fU(t)\uff0c\u8f93\u51fa\u4e5f\u662f\u65f6\u95f4\u7684\u51fd\u6570Y(t)\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\uff0c\u5bf9\u4e8e\u8f93\u5165\u6709\u4e00\u4e2a\u54cd\u5e94\uff0c\u5176\u5b9e\u5c31\u662f\u51b2\u51fb\u54cd\u5e94H(t)\u3002\u90a3\u4e48\u6700\u540e\u8f93\u51faY(t)\u5c31\u662f\u8f93\u5165U(t)\u4e0e\u51b2\u51fb\u54cd\u5e94H(t)\u7684\u5377\u79ef\uff0c\u53c8\u56e0\u4e3a\u65f6\u57df\u7684\u5377\u79ef\u7b49\u4e8e\u9891\u57df\u7684\u4e58\u79ef\uff0c\u6240\u4ee5\u6709\u4e86\u5b9a\u4e49\u4e2d\u7684\u5f0f\u5b50\u3002\u56e0\u6b64\u4f20\u9012\u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u51b2\u51fb\u76f8\u5e94\u7684\u62c9\u6c0f\u53d8\u6362\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8pytorch%20lighting/","title":"\u5b66\u4f1a\u4f7f\u7528pytorch lighting","text":"<pre><code>import torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torch.utils.data import random_split\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nimport pytorch_lightning as pl\n\nclass LitAutoEncoder(pl.LightningModule):\n    def __init__(self):\n        super().__init__()\n        self.encoder = nn.Sequential(\n      nn.Linear(28 * 28, 64),\n      nn.ReLU(),\n      nn.Linear(64, 3))\n        self.decoder = nn.Sequential(\n      nn.Linear(3, 64),\n      nn.ReLU(),\n      nn.Linear(64, 28 * 28))\n\n    def forward(self, x):\n        embedding = self.encoder(x)\n        return embedding\n\n#\u914d\u7f6e\u4f18\u5316\u5668\n    def configure_optimizers(self):\n        optimizer = torch.optim.Adam(self.parameters(), lr=1e-3)\n        return optimizer\n#\u914d\u7f6e\u8bad\u7ec3\u8fc7\u7a0b\n    def training_step(self, train_batch, batch_idx):\n        x, y = train_batch\n        x = x.view(x.size(0), -1)\n        z = self.encoder(x)    \n        x_hat = self.decoder(z)\n        loss = F.mse_loss(x_hat, x)\n        self.log('train_loss', loss)\n        return loss\n#\u914d\u7f6e\u9a8c\u8bc1\u8fc7\u7a0b\n    def validation_step(self, val_batch, batch_idx):\n        x, y = val_batch\n        x = x.view(x.size(0), -1)\n        z = self.encoder(x)\n        x_hat = self.decoder(z)\n        loss = F.mse_loss(x_hat, x)\n        self.log('val_loss', loss)\n\n# data\ndataset = MNIST('', train=True, download=True, transform=transforms.ToTensor())\nmnist_train, mnist_val = random_split(dataset, [55000, 5000])\n\ntrain_loader = DataLoader(mnist_train, batch_size=32)\nval_loader = DataLoader(mnist_val, batch_size=32)\n\n# model\nmodel = LitAutoEncoder()\n\n# training\ntrainer = pl.Trainer(gpus=4, num_nodes=8, precision=16, limit_train_batches=0.5)\ntrainer.fit(model, train_loader, val_loader)\n</code></pre> <p>pytorch lighting\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u7b80\u5316\u4e86\u90e8\u5206\u4ee3\u7801\uff0c\u4e4b\u524d\u5982\u679c\u8981\u8f6c\u5230GPU\u4e0a\uff0c\u9700\u8981\u7528to(device)\u65b9\u6cd5\u5224\u65ad\uff0c\u7136\u540e\u8f6c\u8fc7\u53bb\u3002\u6709\u4e86PyTorch lightning\u7684\u5e2e\u52a9\uff0c\u53ef\u4ee5\u81ea\u52a8\u5e2e\u4f60\u5904\u7406\uff0c\u901a\u8fc7\u8bbe\u7f6etrainer\u4e2d\u7684gpus\u53c2\u6570\u5373\u53ef\u3002</li> <li>\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u5de5\u5177\uff0c\u6bd4\u5982\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\u3001\u5206\u5e03\u5f0f\u8bad\u7ec3\u3001Horovod</li> <li>\u4ee3\u7801\u79fb\u690d\u66f4\u52a0\u5bb9\u6613</li> <li>\u66f4\u5bb9\u6613\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u4fee\u6539\u00a0<code>pl.Trainer()</code>\u4e2d\u7684\u53c2\u6570\u5373\u53ef\u5c06\u5355\u673a\u5355\u5361\u53d8\u6210\u591a\u673a\u591a\u5361\u7684\u8bad\u7ec3\u65b9\u5f0f\u3002\u5177\u4f53\u7684\u901a\u8fc7\u4fee\u6539\u53c2\u6570<code>gpus</code>\u3001<code>num_nodes</code>\u8bbe\u7f6e\u8bad\u7ec3\u9700\u8981\u591a\u5c11\u5f20GPU\u548c\u6240\u4f7f\u7528\u673a\u5668\u7684\u6570\u91cf\uff0c\u540c\u65f6\u901a\u8fc7\u53c2\u6570<code>strategy</code>\u6307\u5b9a\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u6a21\u5f0f\u3002</li> </ul> <p>\u5355\u673a\u591a\u5361. \u5355\u673a\u591a\u5361\u65f6\u65e0\u9700\u6307\u5b9a\u53c2\u6570<code>num_nodes</code>:</p> <pre><code>trainer = pl.Trainer(gpus=4, strategy=\"dp\") # \u4f7f\u75284\u5757GPU\ntrainer = pl.Trainer(gpus=[0, 1, 2], strategy=\"dp\") # \u4f7f\u75280\uff0c1\uff0c2\u53f73\u5757GPu\n</code></pre> <p>\u591a\u673a\u591a\u5361</p> <pre><code>trainer = pl.Trainer(gpus=4, num_nodes=3, strategy=\"ddp\") # \u4f7f\u75283\u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u673a\u56684\u5757GPU\uff0c\u603b\u517112\u5f20GPU\n</code></pre> <p>\u53e6\u5916PL\u4e0d\u4ec5\u652f\u6301\u5e38\u89c1\u7684<code>dp</code>\u3001<code>ddp</code>\u3001<code>deepspeed</code>\u7b49\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u901a\u8fc7<code>DDPStrategy()</code>\u81ea\u5b9a\u4e49<code>strategy</code>\uff0c\u6709\u66f4\u9ad8\u7ea7\u7684\u9700\u6c42\u53ef\u4ee5\u67e5\u9605\u5b98\u65b9\u6587\u6863\uff1a https://link.zhihu.com/?target=https%3A//pytorch-lightning.readthedocs.io/en/latest/accelerators/gpu_expert.html </p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/","title":"\u5c0f\u8f66\u6a21\u578b\u4f7f\u7528\u624b\u518c","text":"<p>THICV\u5361\u8f66\u6a21\u578b\u4f7f\u7528\u624b\u518c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#1","title":"1 \u786c\u4ef6\u8fde\u63a5","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#11","title":"1.1 \u786c\u4ef6\u6982\u8ff0","text":"<p>\u5c0f\u8f66\u786c\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u5927\u90e8\u5206\uff1a\u5e95\u76d8\u3001\u4f20\u611f\u5668\u3001jetson nano\u3002 - \u5e95\u76d8\uff1a\u5305\u542b\u5c0f\u8f66\u76841\uff1a14\u7684\u5851\u6599\u6a21\u578b\u548c\u7528\u4e8e\u5c0f\u8f66\u5730\u76d8\u7ebf\u63a7\u7684STM32\u5355\u7247\u673a\u300232\u4e3b\u8981\u9a71\u52a8\u8f66\u8f86\u7684\u5e95\u76d8\u8fd0\u52a8\uff0c\u5e95\u76d8\u8fd0\u52a8\u4e3b\u8981\u9760\u7535\u673a\u548c\u8235\u673a\u6765\u9a71\u52a8\uff0c\u9a71\u52a8\u7684\u901a\u4fe1\u5f62\u5f0f\u4e3acan\u3002 </p> <p>can\u901a\u4fe1\u534f\u8bae</p> <p> \u7535\u673a\u548c\u8235\u673a\u7684\u8d44\u6599</p> <ul> <li> <p>\u4f20\u611f\u5668\uff1a\u4f20\u611f\u5668\u4e3b\u8981\u6709RTK/GPS\uff08\u96c6\u6210\u4e86IMU\uff09\u3001intel\u6df1\u5ea6\u76f8\u673a\u3001\u601d\u5c9aA2\u6fc0\u5149\u96f7\u8fbe\u3002\u6240\u6709\u7684\u4f20\u611f\u5668\u5747\u7531jetson nano\u9a71\u52a8\uff0c\u4e0e\u5e95\u76d8\u65e0\u5173\u3002</p> </li> <li> <p>jetson nano\uff1a\u8be5\u5c0f\u8f66\u914d\u5907jetson nano\u4f5c\u4e3a\u4e3b\u63a7\uff0c\u5e76\u901a\u8fc7RS485\u8f6ccan\u6765\u9a71\u52a8\u5e95\u76d8\u7684\u884c\u9a76\u3002</p> </li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#12","title":"1.2 \u786c\u4ef6\u8fde\u63a5","text":"<p>\u786c\u4ef6\u8fde\u63a5\u987a\u5e8f\u4e3a\uff1a - \u84c4\u7535\u6c60\u4e3a12V - jetson nano\u8fde\u63a5\u7535\u6c60\uff0812V\u8f6c5V\uff0cnano\u4e3a5V\u4f9b\u7535\uff09 - stm32\u8fde\u63a5\u7535\u6c60\uff0812V\u76f4\u63a5\u4f9b\u7535\uff09 - \u4f20\u611f\u5668\u90fd\u63d2\u5230nano\u7684usb\u53e3\u4e0a\uff0c\u6ce8\u610f\u96f7\u8fbe\u548cTRK\u9700\u8981\u5355\u72ec\u4f9b\u7535\uff0c\u96f7\u8fbe\u7531nano\u4f9b\u7535\uff0cRTK\u7531\u7535\u6c60\u4f9b\u7535\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#13","title":"1.3\u9065\u63a7\u5668\u7684\u4f7f\u7528","text":"<p>\u9065\u63a7\u5668\u5f00\u673a\u540e\u4e3b\u8981\u6709\u56db\u4e2a\u901a\u9053\uff1a - \u901a\u90531\u4e3a\u8f6c\u5411\u63a7\u5236 - \u901a\u90532\u4e3a\u6cb9\u95e8\u5239\u8f66\u63a7\u5236 - \u901a\u90533\u6321\u4f4d\u63a7\u5236\uff08-100\u30010\u3001100\u4e09\u6863\uff09 - \u901a\u90534\u4e3a\u63a7\u5236\u6743\u5207\u6362\uff0c-100\u4e3a\u9065\u63a7\u5668\u63a7\u5236\uff0c+100\u4e3anano\u63a7\u5236\u3002</p> <p>\u5982\u679c\u4e0d\u77e5\u9053\u54ea\u4e2a\u6309\u94ae\u5bf9\u5e94\u54ea\u4e2a\u901a\u9053\uff0c\u53ef\u4ee5\u6328\u7740\u8bd5\u4e00\u4e0b\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#2","title":"2 \u7cfb\u7edf\u8bbe\u7f6e","text":"<p>\u7b2c\u4e8c\u90e8\u5206\u4e3b\u8981\u9488\u5bf9jetson\u5f00\u673a\u540e\u7684\u914d\u7f6e\u3002</p> <ul> <li>\u7cfb\u7edf\u955c\u50cf\u70e7\u5f55\uff08\u5df2\u7ecf\u70e7\u5f55\u597d\uff09</li> <li>\u914d\u7f6essh\u4ee5\u4fbf\u4e8e\u901a\u8fc7\u5916\u90e8\u53ef\u4ee5\u8fde\u63a5\u5230jetson nano\u7684\u7ec8\u7aef\u3002</li> <li>\u914d\u7f6evnc server\uff0c\u4ee5\u4fbf\u4e8e\u80fd\u591f\u901a\u8fc7\u5916\u90e8\u8fde\u63a5\u5230jetson nano\u7684\u684c\u9762\u3002</li> <li>\u914d\u7f6e\u597d\u516c\u7f51\uff0c\u4f7f\u5176\u4e0d\u53d7\u5c40\u57df\u7f51\u7684\u9650\u5236\u3002</li> <li>\u914d\u7f6e\u597d\u5404\u4e2a\u4f20\u611f\u5668\u7684\u9a71\u52a8\uff08\u76ee\u524d\u53ea\u9700\u8981RTK\u548c\u6fc0\u5149\u96f7\u8fbe\uff0c\u6444\u50cf\u5934\u6682\u65f6\u4e0d\u7528\u3002</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#3","title":"3 \u4f20\u611f\u5668\u4f7f\u7528\u8bf4\u660e","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#31","title":"3.1 \u6fc0\u5149\u96f7\u8fbe","text":"<ul> <li>\u4e3a\u6fc0\u5149\u96f7\u8fbe\u914d\u7f6e\u597ddev\u6620\u5c04</li> <li>\u914d\u7f6eros\u9a71\u52a8 \u8be6\u7ec6\u8bf4\u660e\u8bf7\u89c1\u601d\u5c9a\u5b98\u65b9\u8bf4\u660e\u4e66\u3002</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#32-rtk","title":"3.2 RTK","text":"<ul> <li>\u4e3aRTK\u914d\u7f6e\u597ddev\u6620\u5c04</li> <li>\u914d\u7f6eros\u9a71\u52a8\uff08\u5b98\u65b9\u7ed9\u4e86\u4e00\u4e2ademo\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u8bfb\u53d60x50 id\u4e0b\u7684\u6570\u636e\uff0c\u628a\u6211\u4eec\u9700\u8981\u7528\u5230\u7684\u6570\u636e\u62ff\u51fa\u6765\uff09 \u8be6\u7ec6\u8bf4\u660e\u8bf7\u89c1fdilink\u5b98\u65b9\u6587\u6863\u3002</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B0%8F%E9%B9%8F%E5%9C%A8L2%E8%BE%85%E5%8A%A9%E9%A9%BE%E9%A9%B6%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%BA%94%E4%B8%AA%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/","title":"\u5c0f\u9e4f\u5728L2\u8f85\u52a9\u9a7e\u9a76\u4e2d\u9047\u5230\u7684\u4e94\u4e2a\u95ee\u9898\u53ca\u5176\u89e3\u51b3\u601d\u8def","text":"<p>L2\u548cL3\u53ca\u4ee5\u4e0a\u7684\u4e3b\u8981\u533a\u522b\u5728\u54ea\u91cc\uff1f</p> <p></p> <p>\u5c0f\u9e4f\u7684\u89e3\u51b3\u65b9\u6848</p> <p></p> <p>\u5c0f\u9e4f\u5728\u91cf\u4ea7\u4e2d\u9047\u5230\u7684\u4e94\u4e2a\u95ee\u9898\u53ca\u5176\u89e3\u51b3\u65b9\u6848</p> <p> \u8ddf\u8f66\u65f6\uff0c\u8f66\u9053\u7ebf\u88ab\u906e\u6321\u65f6\u8ddf\u8e2a\u524d\u8f66\u65f6\u7684\u86c7\u5f62\u6446\u52a8</p> <p></p> <p>\u5916\u754c\u6270\u52a8\u5bfc\u81f4\u5185\u90e8\u5e72\u6270\u529b\u77e9\u548c\u65b9\u5411\u76d8\u89d2\u901f\u5ea6\u89c2\u6d4b\u4e0d\u51c6</p> <p></p> <p>\u5927\u5761\u5ea6\u5e73\u7a33\u505c\u8f66 \u89e3\u51b3\u601d\u8def\uff1a\u9996\u5148\u5de5\u51b5\u8fa8\u8bc6\uff0c\u8bc6\u522b\u7cbe\u786e\u7684\u81ea\u8f66\u8f66\u901f\u548c\u9053\u8def\u5761\u5ea6\uff0c\u7136\u540e\u5236\u52a8\u5668\u9884\u51b2\u538b\uff0c\u7136\u540e\u9a71\u52a8\u529b\u77e9\u9010\u6e10\u51cf\u5c0f </p> <p>\u6cca\u8f66\u65f6\u7531\u4e8e\u5730\u56fe\u9650\u5236\uff0c\u5f88\u96be\u5728frenet\u4e0b\u505a\u89c4\u5212</p> <p></p> <p>\u5b9a\u70b9\u505c\u8f66\u7684\u95ee\u9898</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%B8%8C%E8%85%8A24%E5%AD%97%E6%AF%8D%E5%AF%B9%E7%85%A7%E8%A1%A8/","title":"\u5e0c\u814a24\u5b57\u6bcd\u5bf9\u7167\u8868","text":"<p>\u5e0c\u814a\u5b57\u6bcd \u4e2d\u82f1\u5bf9\u7167\u4e00\u89c8\u8868  </p> <p>\u5927\u5199 \u5c0f\u5199 \u4e2d\u6587\u540d \u82f1\u6587\u6ce8\u97f3 \u610f\u4e49  </p> <p>A \u03b1 \u963f\u5c14\u6cd5 Alpha \u89d2\u5ea6\uff1b\u7cfb\u6570  </p> <p>B \u03b2 \u8d1d\u5854 Beta \u78c1\u901a\u7cfb\u6570\uff1b\u89d2\u5ea6\uff1b\u7cfb\u6570  </p> <p>\u0393 \u03b3 \u4f3d\u739b Gamma \u7535\u5bfc\u7cfb\u6570\uff08\u5c0f\u5199\uff09  </p> <p>\u0394 \u03b4 \u5fb7\u5c14\u5854 Delta \u53d8\u52a8\uff1b\u5bc6\u5ea6\uff1b\u5c48\u5149\u5ea6\uff1b\u65b9\u7a0b\u5224\u522b\u5f0f\uff08\u5927\u5199\uff09  </p> <p>\u0395 \u03b5 \u4f0a\u666e\u897f\u9686 Epsilon \u5bf9\u6570\u4e4b\u57fa\u6570  </p> <p>\u0396 \u03b6 \u6cfd\u5854 Zeta \u7cfb\u6570\uff1b\u65b9\u4f4d\u89d2\uff1b\u963b\u6297\uff1b\u76f8\u5bf9\u7c98\u5ea6\uff1b\u539f\u5b50\u5e8f\u6570  </p> <p>\u0397 \u03b7 \u4f0a\u5854 Eta \u78c1\u6ede\u7cfb\u6570\uff1b\u6548\u7387\uff08\u5c0f\u5199\uff09  </p> <p>\u0398 \u03b8 \u897f\u5854 Theta \u6e29\u5ea6\uff1b\u76f8\u4f4d\u89d2  </p> <p>\u0399 \u03b9 yao\u5854 iota \u5fae\u5c0f\uff0c\u4e00\u70b9\u513f  </p> <p>\u039a \u03ba \u5361\u5e15 Kappa \u4ecb\u8d28\u5e38\u6570  </p> <p>\u2227 \u03bb \u5170\u59c6\u8fbe Lambda \u6ce2\u957f\uff08\u5c0f\u5199\uff09\uff1b\u4f53\u79ef  </p> <p>\u039c \u03bc \u7c73\u6b27 Mu \u78c1\u5bfc\u7cfb\u6570\uff1b\u5fae\uff08\u5343\u5206\u4e4b\u4e00\uff09\uff1b\u653e\u5927\u56e0\u6570\uff08\u5c0f\u5199\uff09  </p> <p>\u039d \u03bd \u7ebd Nu \u78c1\u963b\u7cfb\u6570  </p> <p>\u039e \u03be \u514b\u897f Xi  </p> <p>\u039f \u03bf \u6b27\u7c73\u514b\u9686 Omicron  </p> <p>\u220f \u03c0 \u6d3e Pi \u5706\u5468\u7387=\u5706\u5468\u00f7\u76f4\u5f84=3.1416  </p> <p>\u03a1 \u03c1 \u67d4 Rho \u7535\u963b\u7cfb\u6570\uff08\u5c0f\u5199\uff09  </p> <p>\u2211 \u03c3 \u897f\u683c\u739b Sigma \u603b\u548c\uff08\u5927\u5199\uff09\uff0c\u8868\u9762\u5bc6\u5ea6\uff1b\u8de8\u5bfc\uff08\u5c0f\u5199\uff09  </p> <p>\u03a4 \u03c4 \u9676 Tau \u65f6\u95f4\u5e38\u6570  </p> <p>\u03a5 \u03c5 \u7389\u666e\u897f\u9686 Upsilon \u4f4d\u79fb  </p> <p>\u03a6 \u03c6 \u5f17\u7231 Phi \u78c1\u901a\uff1b \u89d2\uff1b\u7a7a\u96c6\uff08\u5927\u5199\uff09  </p> <p>\u03a7 \u03c7 \u51ef\u00a0Chi  </p> <p>\u03a8 \u03c8 \u666e\u8d5b\u00a0Psi \u89d2\u901f\uff1b\u4ecb\u8d28\u7535\u901a\u91cf\uff08\u9759\u7535\u529b\u7ebf\uff09\uff1b\u89d2  </p> <p>\u03a9 \u03c9 \u5965\u7c73\u4f3d Omega \u6b27\u59c6\uff08\u5927\u5199\uff09\uff1b\u89d2\u901f\uff08\u5c0f\u5199\uff09\uff1b\u89d2</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/","title":"\u5f3a\u5316\u5b66\u4e60","text":"<p> \u4e00\u4e2a\u5f88\u597d\u7684\u4e13\u680f</p> <p>https://blog.csdn.net/november_chopin/category_10080614.html</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/","title":"\u5feb\u6377\u952e\u5927\u5168","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#1-windows","title":"1. windows","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_1","title":"\u684c\u9762\u76f8\u5173","text":"<pre><code>\u65b0\u5efa\u684c\u9762 win+ctrl+d\n\u5220\u9664\u684c\u9762 win+ctrl+f4\n\u79fb\u52a8\u684c\u9762 win+ctrl+ \u5de6/\u53f3\n\u663e\u793a\u6240\u6709\u684c\u9762 win + tab\n\u684c\u9762\u5185\u5207\u6362\u6d3b\u52a8\u7a97\u53e3 alt+tab\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_2","title":"\u7a97\u53e3\u76f8\u5173","text":"<pre><code>\u7a97\u53e3\u78c1\u8d34 win+\u5de6 \u6216\u8005 win+ \u53f3\n\u6700\u5927\u5316\u7a97\u53e3 win+\u4e0a\n\u6700\u5c0f\u5316\u7a97\u53e3 win+\u4e0b\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_3","title":"\u6253\u5f00\u5e94\u7528\u76f8\u5173","text":"<pre><code>\u6253\u5f00\u4efb\u52a1\u680f\u5bf9\u5e94\u7684\u5e94\u7528 win+1\u30012\u30013\n\u4efb\u52a1\u680f\u95f4\u5207\u6362\u7a0b\u5e8f  win+T\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_4","title":"\u6d4f\u89c8\u5668\u76f8\u5173","text":"<pre><code>\u5207\u6362\u6807\u7b7e\u9875 ctrl+tab\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#2linuxubuntu","title":"2.linux\u684c\u9762\uff08ubuntu\uff09","text":"<pre><code>win\u4ee3\u8868super\u952e\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_5","title":"\u7a97\u53e3\u76f8\u5173","text":"<pre><code>\u7a97\u53e3\u78c1\u8d34 win+\u5de6 \u6216\u8005 win+ \u53f3\n\u6700\u5927\u5316\u7a97\u53e3 win+\u4e0a\n\u8fd8\u539f\u7a97\u53e3 win+\u4e0b\n\u9690\u85cf\u7a97\u53e3 win+h\n\u8c03\u51fa\u7a97\u53e3 alt+tab\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_6","title":"\u684c\u9762\u76f8\u5173","text":"<pre><code>\u65b0\u5efa\u684c\u9762 linux\u81ea\u52a8\u65b0\u5efa\n\u5220\u9664\u684c\u9762 linux\u81ea\u52a8\u5220\u9664\n\u79fb\u52a8\u684c\u9762 alt+1/2/3/4 \u6539\u952eswitch to workspace \n\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a/\u4e0b\u4e00\u4e2a\u684c\u9762 ctrl+alt+\u5de6/\u53f3 \u6539\u5efamove to work space above\n\u5c06\u7a97\u53e3\u79fb\u52a8\u5230\u7279\u5b9a\u684c\u9762\uff1actrl+alt+1/2/3/4 \u6539\u952emove window to work space\n\n\u663e\u793a\u6240\u6709\u684c\u9762 win\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#_7","title":"\u5feb\u6377\u542f\u52a8","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#2-linux","title":"2. linux\u7ec8\u7aef","text":"<p>\u5149\u6807\u5feb\u901f\u79fb\u52a8 - ctrl + a\uff1a\u5149\u6807\u56de\u5230\u8f93\u5165\u7684\u547d\u4ee4\u9996\u90e8\u00a0 \uff08\u5bf9\u5e94Home\u952e\uff09 - ctrl + e\uff1a\u5149\u6807\u56de\u5230\u8f93\u5165\u7684\u547d\u4ee4\u5c3e\u90e8\u00a0 \uff08\u5bf9\u5e94End\u952e\uff09 - ctrl + \u5de6(\u6216\u8005alt+b) \uff1a\u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd - ctrl + \u53f3(\u6216\u8005alt+f) \uff1a\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd -  - ctrl + b\uff1a\u5149\u6807\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u00a0 \u00a0 \uff08\u5bf9\u5e94\u65b9\u5411\u952e\u2190\uff09 - ctrl + f \uff1a\u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\u00a0 \u00a0 \uff08\u5bf9\u5e94\u65b9\u5411\u952e\u2192\uff09</p> <p>\u6e05\u5c4f - ctrl + u\uff1a\u5220\u9664\u8f93\u5165\u7684\u6574\u6761\u547d\u4ee4 - ctrl + l \u6216 clear\uff1a\u6e05\u5c4f</p> <p>\u653e\u5927\u7f29\u5c0f - ctrl + + :\u653e\u5927 - ctrl + - \uff1a\u7f29\u5c0f</p> <p>terminator\u7ec8\u7aef - ctrl+shift+o\uff1a\u6a2a\u5411\u5206\u5272 - ctrl+shift+L\uff1a\u6539\u5efa\uff0c\u7eb5\u5411\u5206\u5272 - ctrl+shift+w\uff1a\u5173\u95ed\u5f53\u524d\u7a97\u53e3 - alt+\u4e0a/\u4e0b/\u5de6/\u53f3\uff1a\u79fb\u52a8\u805a\u7126\u7ec8\u7aef - ctrl+shift+\u4e0a/\u4e0b/\u5de6/\u53f3\uff1a\u6539\u53d8\u7ec8\u7aef\u5927\u5c0f</p> <p> </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#3-vscode","title":"3. vscode","text":"<p>vim\u914d\u7f6e <pre><code>\u00a0 \u00a0 \"vim.handleKeys\": {\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-a&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-f&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-x&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-c&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-z&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-v&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-[&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-]&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-s&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-b&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-/&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-w&gt;\": false,\n\u00a0 \u00a0 \u00a0 \u00a0 \"&lt;C-shift+f&gt;\": false,\n\n\u00a0 \u00a0 },\n\u00a0 \u00a0 \"vim.insertModeKeyBindings\": [\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-h&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;left&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-l&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;right&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-j&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;down&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-k&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;up&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-u&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;esc&gt;\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"b\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"i\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"before\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;c-d&gt;\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"after\": [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"&lt;esc&gt;\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"e\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"a\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 ],\n</code></pre></p> <p>vscode\u5feb\u6377\u952e\uff1akeybindings.json <pre><code>[\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+shift+i\",\n\u00a0 \u00a0 \"command\": \"-workbench.action.toggleDevTools\",\n\u00a0 \u00a0 \"when\": \"isDevelopment\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+shift+i\",\n\u00a0 \u00a0 \"command\": \"editor.action.formatDocument\",\n\u00a0 \u00a0 \"when\": \"editorHasDocumentFormattingProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !inCompositeEditor\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"shift+alt+f\",\n\u00a0 \u00a0 \"command\": \"-editor.action.formatDocument\",\n\u00a0 \u00a0 \"when\": \"editorHasDocumentFormattingProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !inCompositeEditor\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+shift+i\",\n\u00a0 \u00a0 \"command\": \"editor.action.formatDocument.none\",\n\u00a0 \u00a0 \"when\": \"editorTextFocus &amp;&amp; !editorHasDocumentFormattingProvider &amp;&amp; !editorReadonly\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"shift+alt+f\",\n\u00a0 \u00a0 \"command\": \"-editor.action.formatDocument.none\",\n\u00a0 \u00a0 \"when\": \"editorTextFocus &amp;&amp; !editorHasDocumentFormattingProvider &amp;&amp; !editorReadonly\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+up\",\n\u00a0 \u00a0 \"command\": \"workbench.action.terminal.focusPrevious\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+pageup\",\n\u00a0 \u00a0 \"command\": \"-workbench.action.terminal.focusPrevious\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+down\",\n\u00a0 \u00a0 \"command\": \"workbench.action.terminal.focusNext\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+pagedown\",\n\u00a0 \u00a0 \"command\": \"-workbench.action.terminal.focusNext\",\n\u00a0 \u00a0 \"when\": \"terminalFocus &amp;&amp; terminalHasBeenCreated &amp;&amp; !terminalEditorFocus || terminalFocus &amp;&amp; terminalProcessSupported &amp;&amp; !terminalEditorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+m\",\n\u00a0 \u00a0 \"command\": \"editor.action.addSelectionToNextFindMatch\",\n\u00a0 \u00a0 \"when\": \"editorFocus\"\n\u00a0 },\n\u00a0 {\n\u00a0 \u00a0 \"key\": \"ctrl+d\",\n\u00a0 \u00a0 \"command\": \"-editor.action.addSelectionToNextFindMatch\",\n\u00a0 \u00a0 \"when\": \"editorFocus\"\n\u00a0 }\n\n]\n</code></pre></p> <p>\u4ee3\u7801\u5feb\u6377\u952e\uff1a</p> <ul> <li>cmake tools:</li> <li>\u7f16\u8bd1\u5e76\u8fd0\u884c\uff1ashift+f5</li> <li> <p>\u7f16\u8bd1\u5e76\u8c03\u8bd5\uff1actrl+f5</p> </li> <li> <p>python:</p> </li> <li> <p>\u5feb\u901f\u8fd0\u884c\uff1actrl+alt+n</p> </li> <li> <p>latex\uff1a</p> </li> <li>\u5feb\u901f\u7f16\u8bd1\uff1actrl+shift+b</li> </ul> <p>\u7f16\u8f91\u5feb\u6377\u952e\uff1a - ctrl+[\uff1a\u5de6\u7f29\u8fdb - ctrl+]\uff1a\u53f3\u7f29\u8fdb - ctrl+/ \uff1a\u6ce8\u91ca - ctrl+shif+i\uff1a\u683c\u5f0f\u5316\u4ee3\u7801 - alt+\u5de6\uff1a\u5411\u524d - alt+\u53f3\uff1a\u5411\u540e - ctrl+b \uff1a\u6253\u5f00\u4fa7\u8fb9\u6587\u4ef6\u680f - ctrl+` \uff1a\u6253\u5f00/\u5173\u95ed\u7ec8\u7aef - ctrl+w\uff1a\u5173\u95ed\u7a97\u53e3 - ctrl+M\uff08\u6539\u952e\uff09\uff1a\u67e5\u627e\u4e0b\u4e00\u4e2a\u5339\u914d\u5355\u8bcd\u5e76\u9009\u4e2d - ctrl+q\uff1a\u591a\u5149\u6807 - ctrl+shift+L\uff1a\u67e5\u627e\u6240\u6709\u5339\u914d\u5355\u8bcd\u5e76\u9009\u4e2d - alt+\u4e0a\uff1a\u5c06\u5f53\u524d\u884c\u5411\u4e0a\u79fb\u52a8\u4e00\u884c - alt+\u4e0b\uff1a\u5c06\u5f53\u524d\u884c\u5411\u4e0b\u79fb\u52a8\u4e00\u884c - ctrl+backspace\uff1a\u5220\u9664\u4e0a\u4e00\u4e2a\u8bcd - ctrl+shfit+\u5de6/\u53f3\uff1a\u9009\u4e2d\u6574\u4e2a\u8bcd - alt+[ \u6216]\uff1acopilot \u9009\u9879\u5207\u6362 - alt+enter\uff1a\u663e\u793a\u6240\u6709copilot\u9009\u9879 - alt+\\\uff1a\u4e3b\u52a8\u8981\u6c42copilot\u7ed9\u51fa\u5efa\u8bae - </p> <p>\u5feb\u901f\u79fb\u52a8\uff1a - ctrl+1\u30012\u30013\uff1a\u5207\u6362\u7f16\u8f91\u7a97\u53e3 - ctrl+tab\uff1a\u5207\u6362\u540c\u4e00\u4e2a\u7a97\u53e3\u4e0b\u7684\u6587\u4ef6 - alt+1\u30012\u30013\uff1a\u5207\u6362\u540c\u4e00\u4e2a\u7a97\u53e3\u4e0b\u7684\u6587\u4ef6 - ctrl+`\uff1a\u5207\u6362\u7ec8\u7aef - ctrl+shift+e\uff1a\u5207\u6362\u6587\u4ef6\u7a97\u53e3\u4e0e\u7f16\u8f91\u5668 - ctrl+\u4e0a\uff08\u6539\u952e\uff09\uff1a\u5207\u6362\u5230\u4e0a\u4e00\u7ec8\u7aef - ctrl+\u4e0b\uff08\u6539\u952e\uff09\uff1a\u5207\u6362\u5230\u4e0b\u4e00\u7ec8\u7aef  </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/#4vim","title":"4.vim\u5feb\u6377\u952e","text":"<p>\u63d2\u5165\uff1a - a\u3001A\u3001o\u3001O\u3001i\u3001I</p> <p>normal\u4e0b\u66ff\u6362\u5355\u4e2a\u5b57\u7b26\uff1a - r</p> <p>\u5220\u9664\uff08\u6362\u6210c\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff09\uff1a - dd\uff1a\u5220\u9664\u6574\u884c - 4dd\uff1a\u5220\u9664\u56db\u884c - x\uff1a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26 - 4x\uff1a\u5220\u9664\u56db\u4e2a\u5b57\u7b26 - dw\uff1a\u5220\u9664\u4e00\u4e2a\u5355\u8bcd - d4w\uff1a\u5220\u9664\u540e\u8fb94\u4e2a\u5355\u8bcd - d$\uff1a\u5220\u9664\u5230\u6700\u540e - di(\uff1a\u5220\u9664()\u5185\u7684\u5185\u5bb9 - da(\uff1a\u5220\u9664()\u5185\u7684\u5185\u5bb9\u5305\u62ec\u62ec\u53f7</p> <p>\u590d\u5236\uff1a \u540c\u5220\u9664</p> <p>\u7c98\u8d34\uff1a p</p> <p>\u67e5\u627e\uff1a - /string\uff1a\u67e5\u627estring\uff0c\u6309\u4e0benter\uff0c\u7136\u540en\u662f\u4e0b\u4e00\u4e2a</p> <p>\u5feb\u901f\u79fb\u52a8\uff1a - ctrl+d\uff1a\u4e0b\u7ffb\u534a\u9875 - ctrl+u\uff1a\u4e0a\u7ffb\u534a\u9875 - zz\uff1a\u628a\u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u653e\u5230\u5c4f\u5e55\u4e2d\u592e - 0\uff1a\u6bcf\u884c\u5f00\u5934 - ^\uff1a\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26 - $\uff1a\u6bcf\u884c\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 - gg\uff1a\u7b2c\u4e00\u884c - G\uff1a\u6700\u540e\u4e00\u884c - \uff1a\u3010num\u3011\uff1a\u8df3\u8f6c\u5230num\u884c - w\uff1a\u5411\u540e\u8df3\u8f6c\u4e00\u4e2a\u5355\u8bcd - b\uff1a\u5411\u524d\u8df3\u8f6c\u4e00\u4e2a\u5355\u8bcd - %\uff1a\u5feb\u901f\u8df3\u8f6c\u5230\u62ec\u53f7\u5339\u914d\u7684\u53e6\u4e00\u4e2a\u62ec\u53f7\uff0c\u5305\u62ec(){}[] - #\uff1a\u8df3\u8f6c\u5230\u5149\u6807\u5904\u7684\u5355\u8bcd\u4e0a\u4e00\u4e2a\u51fa\u73b0\u7684\u5730\u65b9 - * \uff1a\u8df3\u8f6c\u5230\u5149\u6807\u5904\u7684\u5355\u8bcd\u4e0b\u4e00\u4e2a\u51fa\u73b0\u7684\u5730\u65b9 - </p> <p>\u89c2\u5bdf\u6a21\u5f0f\uff1a - v\uff1a\u8fdb\u5165\u89c2\u5bdf\u6a21\u5f0f - V\uff1a\u8fdb\u5165\u4ee5\u884c\u4e3a\u5355\u4f4d\u7684\u89c2\u5bdf\u6a21\u5f0f</p> <p>\u4ee3\u7801\u8865\u5168\uff1a - ctrl+n - ctrl+p</p> <p>\u6ce8\u91ca\uff08\u591a\u5149\u6807\uff09\uff1a - \u63d2\u5165\uff1actrl+v\u8fdb\u5165\u5757\u6a21\u5f0f\uff0c\u9009\u4e2d\uff0cshift+i\u63d2\u5165#\u6216//\uff0c\u7136\u540eesc - \u53d6\u6d88\uff1actrl+\u8fdb\u5165\u5757\u6a21\u5f0f\uff0c\u9009\u4e2d\uff0cdelete\uff0cesc</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u56db\u5927\u7b97\u6cd5\uff1a 1\u3001\u56de\u6eaf</p> <p>2\u3001\u8d2a\u5fc3</p> <p>3\u3001\u5206\u6cbb</p> <p>4\u3001\u52a8\u6001\u89c4\u5212</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/","title":"\u6700\u4f18\u63a7\u5236\u4e2d\u7684\u82e5\u5e72\u95ee\u9898","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_1","title":"\u662f\u5426\u663e\u5f0f\u4f9d\u8d56\u65f6\u95f4","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#xudot-x","title":"\u663e\u5f0f\u4f9d\u8d56\u65f6\u95f4(\u53ea\u786e\u5b9ax\u548cu\u65e0\u6cd5\u786e\u5b9a\\(\\dot x\\))/\u65f6\u53d8\uff08\u975e\u81ea\u6cbb\uff09","text":"\\[\\dot x(t) = f(x(t),u(t),t)\\] <p>\u4e3e\u4f8b\uff1a \\(\\(\\dot x(t) = -a(t)x(t) + b(t)u(t)\\)\\) \\(\\(\\dot x(t) = ax(t) + bu(t)+t\\)\\)</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#xudot-x_1","title":"\u4e0d\u663e\u5f0f\u4f9d\u8d56\u65f6\u95f4(\u786e\u5b9ax\u548cu\u5c31\u786e\u5b9a\\(\\dot x\\))/\u65f6\u4e0d\u53d8\u7cfb\u7edf\uff08\u81ea\u6cbb\uff09","text":"\\[\\dot x(t) = f(x(t),u(t))\\] <p>\u4e3e\u4f8b\uff1a \\(\\(\\dot x(t) = -ax(t) + bu(t)\\)\\)</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_2","title":"\u533a\u522b","text":"<p>\u663e\u5f0f\u4f9d\u8d56\u65f6\u95f4\uff08\u5373\u975e\u81ea\u6cbb\u7684\uff0c\u65f6\u53d8\u7684\u7cfb\u7edf\uff09\uff0c\u5728\u8bbe\u8ba1\u63a7\u5236\u5668\u65f6\u66f4\u52a0\u590d\u6742\uff0c\u6bd4\u5982\u5206\u522b\u9488\u5bf9\u4e00\u4e2a\u65f6\u4e0d\u53d8\u7684\u5f39\u7c27\u7cfb\u7edf\u548c\u4e00\u4e2a\u963b\u5c3c\u65f6\u53d8\u7684\u5f39\u7c27\u7cfb\u7edf\u3002\u524d\u8005\u8bbe\u8ba1PID\u65f6PID\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u5b9a\u503c\uff0c\u800c\u540e\u8005\u5fc5\u987bPID\u53c2\u6570\u8981\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u5373\u8bbe\u8ba1\u4e00\u4e2a\u9002\u5e94\u6027PID\u63a7\u5236\u5668\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#1-pid","title":"1. \u65f6\u95f4\u4e0d\u4f9d\u8d56\u7cfb\u7edf\u7684 PID \u63a7\u5236\u5668\u8bbe\u8ba1","text":"<p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u65f6\u95f4\u4e0d\u4f9d\u8d56\u7cfb\u7edf\uff1a</p> \\[[ m\\ddot{x}(t) + b\\dot{x}(t) + kx(t) = u(t) ] \\] <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684 PID \u63a7\u5236\u7b56\u7565\u3002\u5b9a\u4e49\u8bef\u5dee\u4e3a\uff1a</p> \\[ e(t) = r(t) - x(t) \\] <p>\u5176\u4e2d \\(r(t)\\) \u662f\u671f\u671b\u7684\u53c2\u8003\u8f68\u8ff9\u3002PID \u63a7\u5236\u5f8b\u4e3a\uff1a</p> \\[ u(t) = K_p e(t) + K_i \\int e(t) dt + K_d \\frac{de(t)}{dt} \\] <p>\u5176\u4e2d\uff1a - \\(K_p\\) \u662f\u6bd4\u4f8b\u589e\u76ca\uff0c\u7528\u4e8e\u51cf\u5c0f\u8bef\u5dee\u3002 - \\(K_i\\) \u662f\u79ef\u5206\u589e\u76ca\uff0c\u7528\u4e8e\u6d88\u9664\u7a33\u6001\u8bef\u5dee\u3002 - \\(K_d\\) \u662f\u5fae\u5206\u589e\u76ca\uff0c\u7528\u4e8e\u51cf\u5c0f\u7cfb\u7edf\u7684\u8fc7\u6e21\u8fc7\u7a0b\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#2-pid","title":"2. \u65f6\u95f4\u4f9d\u8d56\u7cfb\u7edf\u7684 PID \u63a7\u5236\u5668\u8bbe\u8ba1","text":"<p>\u5bf9\u4e8e\u65f6\u95f4\u4f9d\u8d56\u7cfb\u7edf\uff1a</p> \\[ m\\ddot{x}(t) + b(t)\\dot{x}(t) + kx(t) = u(t) \\] <p>\u6211\u4eec\u9700\u8981\u66f4\u52a0\u5c0f\u5fc3\u5730\u8bbe\u8ba1 PID \u63a7\u5236\u5668\uff0c\u4ee5\u4fbf\u9002\u5e94\u53c2\u6570\u7684\u65f6\u95f4\u53d8\u5316\u3002\u6211\u4eec\u4ecd\u7136\u5b9a\u4e49\u8bef\u5dee\u4e3a\uff1a</p> \\[e(t) = r(t) - x(t) \\]"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#pid","title":"\u9002\u5e94\u6027 PID \u63a7\u5236","text":"<p>\u5728\u9002\u5e94\u6027 PID \u63a7\u5236\u4e2d\uff0c\u6211\u4eec\u4e0d\u4ec5\u8981\u8bbe\u8ba1 PID \u63a7\u5236\u5668\uff0c\u8fd8\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u5b9e\u65f6\u8c03\u6574 PID \u53c2\u6570 \\(K_p, K_i, K_d\\)\u3002\u9002\u5e94\u6027\u63a7\u5236\u5f8b\u53ef\u4ee5\u5199\u4f5c\uff1a</p> \\[ u(t) = K_p(t) e(t) + K_i(t) \\int e(t) dt + K_d(t) \\frac{de(t)}{dt} \\] <p>\u5176\u4e2d\uff0c\\(K_p(t), K_i(t), K_d(t)\\) \u9700\u8981\u6839\u636e\u67d0\u79cd\u9002\u5e94\u6027\u89c4\u5219\u5b9e\u65f6\u8c03\u6574\uff0c\u4ee5\u4fbf\u9002\u5e94\u7cfb\u7edf\u53c2\u6570 \\(b(t)\\) \u7684\u53d8\u5316\u3002\u9002\u5e94\u6027\u89c4\u5219\u7684\u8bbe\u8ba1\u901a\u5e38\u57fa\u4e8e\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u6027\u80fd\u8981\u6c42\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_3","title":"\u9884\u6d4b\u63a7\u5236","text":"<p>\u5982\u679c \\(b(t)\\) \u7684\u53d8\u5316\u662f\u53ef\u9884\u6d4b\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9884\u6d4b\u63a7\u5236\u7b56\u7565\u3002\u5728\u9884\u6d4b\u63a7\u5236\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u6765\u9884\u6d4b\u7cfb\u7edf\u5728\u672a\u6765\u7684\u884c\u4e3a\uff0c\u5e76\u57fa\u4e8e\u8fd9\u4e9b\u9884\u6d4b\u6765\u4f18\u5316\u63a7\u5236\u8f93\u5165\u3002\u9884\u6d4b\u63a7\u5236\u901a\u5e38\u6d89\u53ca\u5230\u89e3\u51b3\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\uff0c\u4ee5\u786e\u5b9a\u5728\u7ed9\u5b9a\u7684\u9884\u6d4b\u6a21\u578b\u4e0b\u80fd\u591f\u6700\u5c0f\u5316\u67d0\u4e2a\u6027\u80fd\u6307\u6807\u7684\u63a7\u5236\u8f93\u5165\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_4","title":"\u9c81\u68d2\u63a7\u5236","text":"<p>\u5bf9\u4e8e\u4e0d\u53ef\u9884\u6d4b\u7684 \\(b(t)\\) \u53d8\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u9c81\u68d2\u7684 PID \u63a7\u5236\u5668\uff0c\u5b83\u80fd\u591f\u5728 \\(b(t)\\) \u53d8\u5316\u7684\u4e00\u5b9a\u8303\u56f4\u5185\u4fdd\u6301\u7a33\u5b9a\u548c\u6ee1\u8db3\u6027\u80fd\u8981\u6c42\u3002\u8fd9\u901a\u5e38\u6d89\u53ca\u5230\u5728\u63a7\u5236\u5668\u8bbe\u8ba1\u9636\u6bb5\u8003\u8651\u5230 \\(b(t)\\) \u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u5e76\u786e\u4fdd\u63a7\u5236\u5668\u5728\u8fd9\u4e9b\u4e0d\u786e\u5b9a\u6027\u4e0b\u4ecd\u7136\u80fd\u591f\u63d0\u4f9b\u826f\u597d\u7684\u6027\u80fd\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#lqr","title":"LQR\u7684\u63a8\u5bfc","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#1-lqr","title":"1 .\u79bb\u6563LQR","text":"<p>\u79bb\u6563\u65f6\u95f4\u7ebf\u6027\u4e8c\u6b21\u8c03\u8282\u5668\uff08Discrete-Time Linear Quadratic Regulator, LQR\uff09\u95ee\u9898\u4e5f\u53ef\u4ee5\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u5728\u79bb\u6563\u65f6\u95f4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7ebf\u6027\u7cfb\u7edf\u548c\u4e00\u4e2a\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\uff0c\u4f46\u662f\u6240\u6709\u7684\u53d8\u91cf\u548c\u65b9\u7a0b\u90fd\u662f\u5728\u79bb\u6563\u7684\u65f6\u95f4\u6b65\u957f\u4e0a\u5b9a\u4e49\u7684\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_5","title":"\u95ee\u9898\u8bbe\u5b9a","text":"<p>\u8003\u8651\u4e00\u4e2a\u79bb\u6563\u65f6\u95f4\u7ebf\u6027\u7cfb\u7edf\uff1a $$ x_{t+1} = Ax_t + Bu_t $$ \u5176\u4e2d \\(x_t \\in \\mathbb{R}^n\\) \u662f\u5728\u65f6\u95f4 \\(t\\) \u7684\u72b6\u6001\uff0c\\(u_t \\in \\mathbb{R}^m\\) \u662f\u5728\u65f6\u95f4 \\(t\\) \u7684\u63a7\u5236\u8f93\u5165\uff0c\\(A \\in \\mathbb{R}^{n \\times n}\\) \u548c \\(B \\in \\mathbb{R}^{n \\times m}\\) \u662f\u5df2\u77e5\u7684\u77e9\u9635\u3002</p> <p>\u6211\u4eec\u5e0c\u671b\u6700\u5c0f\u5316\u4ee5\u4e0b\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\uff1a $$ J = \\sum_{t=0}^{\\infty} \\left( x_t^T Q x_t + u_t^T R u_t \\right) $$ \u5176\u4e2d \\(Q \\geq 0\\)  \u548c \\(R &gt; 0\\)\u662f\u7ed9\u5b9a\u7684\u6743\u91cd\u77e9\u9635\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#bellman","title":"\u52a8\u6001\u89c4\u5212\u548cBellman\u65b9\u7a0b","text":"<p>\u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u662fBellman\u65b9\u7a0b\uff0c\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u627e\u5230\u6700\u4f18\u63a7\u5236\u7b56\u7565\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8eLQR\u95ee\u9898\uff0c\u6211\u4eec\u5b9a\u4e49\u503c\u51fd\u6570 \\(V_t(x_t)\\) \u4e3a\u7ed9\u5b9a\u5728\u65f6\u95f4 \\(t\\) \u7684\u521d\u59cb\u72b6\u6001 \\(x_t\\) \u65f6\u7684\u6700\u4f18\u4ee3\u4ef7\u3002Bellman\u65b9\u7a0b\u7ed9\u51fa\u4e86\u503c\u51fd\u6570\u6ee1\u8db3\u7684\u9012\u5f52\u5173\u7cfb\u3002</p> <p>\u5728LQR\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e0b\u4ee5\u4e0b\u7684Bellman\u65b9\u7a0b\uff1a $$ V_t(x_t) = \\min_{u_t} \\left( x_t^T Q x_t + u_t^T R u_t + V_{t+1}(Ax_t + Bu_t) \\right) $$</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#bellman_1","title":"\u89e3\u51b3Bellman\u65b9\u7a0b","text":"<p>\u5bf9\u4e8eLQR\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u503c\u51fd\u6570\u662f\u4e8c\u6b21\u7684\uff1a $$ V_t(x_t) = x_t^T P_t x_t $$ \u5176\u4e2d \\(P_t\\) \u662f\u4e00\u4e2a\u5f85\u5b9a\u7684\u77e9\u9635\u3002</p> <p>\u5c06\u8fd9\u4e2a\u5f62\u5f0f\u7684\u503c\u51fd\u6570\u4ee3\u5165Bellman\u65b9\u7a0b\uff0c $$ V_t(x_t) = \\min_{u_t} \\left( x_t^T Q x_t + u_t^T R u_t + (Ax_t + Bu_t)^T P_{t+1} (Ax_t + Bu_t) \\right) $$ \u5bf9u\u6c42\u5bfc=0\uff0c\u627e\u5230\u6700\u5c0f\u5316\u8868\u8fbe\u5f0f\u7684\u63a7\u5236\u8f93\u5165 \\(u_t\\)\uff0c\u6211\u4eec\u5f97\u5230\uff1a $$ u_t^* = - (R + B^T P_{t+1} B)^{-1} B^T P_{t+1} A x_t $$</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#p","title":"\u786e\u5b9aP\u77e9\u9635","text":"<p>\u8981\u786e\u5b9a\u77e9\u9635 \\(P_t\\)\uff0c\u6211\u4eec\u5c06\u6700\u4f18\u63a7\u5236\u7b56\u7565 \\(u_t^*\\) \u4ee3\u5165Bellman\u65b9\u7a0b\uff0c</p> \\[ x_t^T P_t x_t= x_t^T Q x_t + u_t^T R u_t + (Ax_t + Bu_t)^T P_{t+1} (Ax_t + Bu_t) $$ \u5e76\u4f7f\u7528\u6211\u4eec\u7684\u4e8c\u6b21\u503c\u51fd\u6570\u5f62\u5f0f\u3002\u8fd9\u5c06\u7ed9\u51fa\u4e00\u4e2a\u5173\u4e8e $P_t$ \u7684\u9012\u5f52\u65b9\u7a0b\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u79bb\u6563\u65f6\u95f4Riccati\u65b9\u7a0b\uff1a $$ P_t = Q + A^T P_{t+1} A - A^T P_{t+1} B (R + B^T P_{t+1} B)^{-1} B^T P_{t+1} A \\] <p>\u901a\u5e38\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u65e0\u9650\u65f6\u95f4\u5730\u5e73\u7ebf\u95ee\u9898\uff0c\u5176\u4e2d \\(P_t\\) \u5728\u6240\u6709\u7684\u65f6\u95f4\u6b65\u957f\u4e0a\u90fd\u662f\u76f8\u540c\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u56fa\u5b9a\u7684\u77e9\u9635 \\(P\\)\uff0c\u4f7f\u5f97\uff1a $$ P = Q + A^T P A - A^T P B (R + B^T P B)^{-1} B^T P A $$</p> <p>\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u5c06\u7ed9\u51fa\u77e9\u9635 \\(P\\)\uff0c\u8fdb\u800c\u786e\u5b9a\u4e86\u6700\u4f18\u63a7\u5236\u7b56\u7565 \\(u_t^* = - (R + B^T P B)^{-1} B^T P A x_t\\)\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_6","title":"\u603b\u7ed3","text":"<p>\u901a\u8fc7\u89e3\u51b3Bellman\u65b9\u7a0b\u548c\u76f8\u5e94\u7684Riccati\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u79bb\u6563\u65f6\u95f4LQR\u95ee\u9898\u7684\u89e3\u3002\u8fd9\u4e2a\u89e3\u7ed9\u51fa\u4e86\u6700\u4f18\u63a7\u5236\u7b56\u7565\uff0c\u5b83\u662f\u72b6\u6001\u7684\u7ebf\u6027\u53cd\u9988\uff0c\u5e76\u4e14\u786e\u5b9a\u4e86\u4e0e\u6700\u4f18\u4ee3\u4ef7\u5173\u8054\u7684\u503c\u51fd\u6570\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c55\u793a\u4e86\u52a8\u6001\u89c4\u5212\u662f\u5982\u4f55\u7528\u4e8e\u63a8\u5bfc\u6700\u4f18\u63a7\u5236\u7b56\u7565\u7684\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#2-lqr","title":"2. \u8fde\u7eedLQR","text":"<p>\u7ebf\u6027\u4e8c\u6b21\u8c03\u8282\u5668\uff08Linear Quadratic Regulator, LQR\uff09\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6700\u4f18\u63a7\u5236\u95ee\u9898\uff0c\u5b83\u6d89\u53ca\u5230\u4e00\u4e2a\u7ebf\u6027\u7cfb\u7edf\u548c\u4e00\u4e2a\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u63a8\u5bfcLQR\u7684\u89e3\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u6b65\u9aa4\u6765\u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u4e00\u4e2a\u8fde\u7eed\u65f6\u95f4LQR\u95ee\u9898\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_7","title":"\u95ee\u9898\u8bbe\u5b9a","text":"<p>\u8003\u8651\u4e00\u4e2a\u7ebf\u6027\u65f6\u95f4\u4e0d\u53d8\u7cfb\u7edf\uff1a  $$\\dot{x}(t) = Ax(t) + Bu(t)  $$ \u5176\u4e2d \\(x(t) \\in \\mathbb{R}^n\\) \u662f\u72b6\u6001\uff0c\\(u(t) \\in \\mathbb{R}^m\\) \u662f\u63a7\u5236\u8f93\u5165\uff0c\\(A \\in \\mathbb{R}^{n \\times n}\\) \u548c \\(B \\in \\mathbb{R}^{n \\times m}\\) \u662f\u5df2\u77e5\u7684\u77e9\u9635\u3002</p> <p>\u6211\u4eec\u5e0c\u671b\u6700\u5c0f\u5316\u4ee5\u4e0b\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\uff1a   $$J = \\int_{0}^{\\infty} \\left( x(t)^T Q x(t) + u(t)^T R u(t) \\right) dt  $$ \u5176\u4e2d \\(Q \\geq 0\\) \u548c \\(R &gt; 0\\) \u662f\u7ed9\u5b9a\u7684\u6743\u91cd\u77e9\u9635\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#hamilton-jacobi-bellman-hjb","title":"Hamilton-Jacobi-Bellman (HJB) \u65b9\u7a0b","text":"<p>\u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u662fHamilton-Jacobi-Bellman (HJB) \u65b9\u7a0b\uff0c\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u627e\u5230\u6700\u4f18\u63a7\u5236\u7b56\u7565\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8eLQR\u95ee\u9898\uff0c\u6211\u4eec\u5b9a\u4e49\u503c\u51fd\u6570 \\(V(x)\\) \u4e3a\u7ed9\u5b9a\u521d\u59cb\u72b6\u6001 \\(x\\) \u65f6\u7684\u6700\u4f18\u4ee3\u4ef7\u3002HJB\u65b9\u7a0b\u7ed9\u51fa\u4e86\u503c\u51fd\u6570\u6ee1\u8db3\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u5728LQR\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e0b\u4ee5\u4e0b\u7684HJB\u65b9\u7a0b\uff1a $$ \\frac{\\partial V}{\\partial t} + \\min_u \\left( x^T Q x + u^T R u + \\frac{\\partial V}{\\partial x}(Ax + Bu) \\right) = 0 $$</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#hjb","title":"\u89e3\u51b3HJB\u65b9\u7a0b","text":"<p>\u5bf9\u4e8eLQR\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u503c\u51fd\u6570\u662f\u4e8c\u6b21\u7684\uff1a $$ V(x) = x^T P x $$ \u5176\u4e2d \\(P\\) \u662f\u4e00\u4e2a\u5f85\u5b9a\u7684\u77e9\u9635\u3002</p> <p>\u5c06\u8fd9\u4e2a\u5f62\u5f0f\u7684\u503c\u51fd\u6570\u4ee3\u5165HJB\u65b9\u7a0b\uff0c\u5e76\u627e\u5230\u6700\u5c0f\u5316\u8868\u8fbe\u5f0f\u7684\u63a7\u5236\u8f93\u5165 \\(u\\)\uff0c\u6211\u4eec\u5f97\u5230\uff1a $$ u^*(t) = -R<sup>{-1}B</sup>T \\nabla_x V(x(t)) $$ $$ = -2R<sup>{-1}B</sup>T P x(t) $$</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#p_1","title":"\u786e\u5b9aP\u77e9\u9635","text":"<p>\u8981\u786e\u5b9a\u77e9\u9635 \\(P\\)\uff0c\u6211\u4eec\u5c06\u6700\u4f18\u63a7\u5236\u7b56\u7565 \\(u^*(t)\\) \u4ee3\u5165HJB\u65b9\u7a0b\uff0c\u5e76\u4f7f\u7528\u6211\u4eec\u7684\u4e8c\u6b21\u503c\u51fd\u6570\u5f62\u5f0f\u3002\u8fd9\u5c06\u7ed9\u51fa\u4e00\u4e2a\u5173\u4e8e \\(P\\) \u7684\u4ee3\u6570\u65b9\u7a0b\uff0c\u901a\u5e38\u88ab\u79f0\u4e3aRiccati\u65b9\u7a0b\u3002\u5728\u8fde\u7eed\u65f6\u95f4LQR\u95ee\u9898\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee3\u6570Riccati\u65b9\u7a0b\uff1a $$ PA + A^T P - PBR<sup>{-1}B</sup>T P + Q = 0 $$</p> <p>\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u5c06\u7ed9\u51fa\u77e9\u9635 \\(P\\)\uff0c\u8fdb\u800c\u786e\u5b9a\u4e86\u6700\u4f18\u63a7\u5236\u7b56\u7565 \\(u^*(t) = -R^{-1}B^T P x(t)\\)\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_8","title":"\u603b\u7ed3","text":"<p>\u901a\u8fc7\u89e3\u51b3HJB\u65b9\u7a0b\u548c\u76f8\u5e94\u7684Riccati\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230LQR\u95ee\u9898\u7684\u89e3\u3002\u8fd9\u4e2a\u89e3\u7ed9\u51fa\u4e86\u6700\u4f18\u63a7\u5236\u7b56\u7565\uff0c\u5b83\u662f\u72b6\u6001\u7684\u7ebf\u6027\u53cd\u9988\uff0c\u5e76\u4e14\u786e\u5b9a\u4e86\u4e0e\u6700\u4f18\u4ee3\u4ef7\u5173\u8054\u7684\u503c\u51fd\u6570\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c55\u793a\u4e86\u52a8\u6001\u89c4\u5212\u662f\u5982\u4f55\u7528\u4e8e\u63a8\u5bfc\u6700\u4f18\u63a7\u5236\u7b56\u7565\u7684\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#hjb_1","title":"HJB \u65b9\u7a0b","text":"<p>Hamilton-Jacobi-Bellman (HJB) \u65b9\u7a0b\u662f\u6700\u4f18\u63a7\u5236\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u65b9\u7a0b\uff0c\u5b83\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u6700\u4f18\u7b56\u7565\u4e0b\u503c\u51fd\u6570\u7684\u53d8\u5316\u3002HJB\u65b9\u7a0b\u6709\u8fde\u7eed\u548c\u79bb\u6563\u7684\u4e24\u79cd\u5f62\u5f0f\uff0c\u5206\u522b\u9002\u7528\u4e8e\u8fde\u7eed\u65f6\u95f4\u548c\u79bb\u6563\u65f6\u95f4\u7684\u52a8\u6001\u7cfb\u7edf\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#hjb_2","title":"\u8fde\u7eed\u65f6\u95f4HJB\u65b9\u7a0b","text":"<p>\u5bf9\u4e8e\u8fde\u7eed\u65f6\u95f4\u7684\u52a8\u6001\u7cfb\u7edf\uff0c\u6211\u4eec\u901a\u5e38\u8003\u8651\u8fd9\u6837\u7684\u5f62\u5f0f\uff1a $$ \\dot{x}(t) = f(x(t), u(t), t) $$ \u5176\u4e2d \\(x(t) \\in \\mathbb{R}^n\\) \u662f\u72b6\u6001\uff0c\\(u(t) \\in \\mathbb{R}^m\\) \u662f\u63a7\u5236\u8f93\u5165\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cHJB\u65b9\u7a0b\u901a\u5e38\u5199\u4f5c\uff1a $$ \\frac{\\partial V}{\\partial t}(x, t) + \\min_u \\left{ \\nabla V(x, t)^T f(x, u, t) + l(x, u, t) \\right} = 0 $$ \u5176\u4e2d \\(V(x, t)\\) \u662f\u503c\u51fd\u6570\uff0c\\(\\nabla V\\) \u662f\u503c\u51fd\u6570\u5173\u4e8e\u72b6\u6001 \\(x\\) \u7684\u68af\u5ea6\uff0c\\(l(x, u, t)\\) \u662f\u6bcf\u4e00\u6b65\u7684\u4ee3\u4ef7\u51fd\u6570\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#hjb_3","title":"\u79bb\u6563\u65f6\u95f4HJB\u65b9\u7a0b","text":"<p>\u5bf9\u4e8e\u79bb\u6563\u65f6\u95f4\u7684\u52a8\u6001\u7cfb\u7edf\uff0c\u6211\u4eec\u901a\u5e38\u8003\u8651\u8fd9\u6837\u7684\u5f62\u5f0f\uff1a $$ x_{t+1} = f(x_t, u_t, t) $$ \u5176\u4e2d \\(x_t \\in \\mathbb{R}^n\\) \u662f\u72b6\u6001\uff0c\\(u_t \\in \\mathbb{R}^m\\) \u662f\u63a7\u5236\u8f93\u5165\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cHJB\u65b9\u7a0b\u901a\u5e38\u5199\u4f5c\uff1a $$ V(x_t, t) = \\min_u \\left{ l(x_t, u_t, t) + V(x_{t+1}, t+1) \\right} $$ \u5176\u4e2d \\(V(x_t, t)\\) \u662f\u503c\u51fd\u6570\uff0c\\(l(x_t, u_t, t)\\) \u662f\u6bcf\u4e00\u6b65\u7684\u4ee3\u4ef7\u51fd\u6570\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_9","title":"\u6ce8\u610f","text":"<ul> <li>\u5728\u8fde\u7eed\u65f6\u95f4HJB\u65b9\u7a0b\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u503c\u51fd\u6570 \\(V\\) \u5173\u4e8e\u65f6\u95f4 \\(t\\) \u7684\u504f\u5bfc\u6570\u548c\u5173\u4e8e\u72b6\u6001 \\(x\\) \u7684\u68af\u5ea6\u3002</li> <li>\u5728\u79bb\u6563\u65f6\u95f4HJB\u65b9\u7a0b\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u5728\u5f53\u524d\u65f6\u95f4\u6b65\u548c\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u503c\u51fd\u6570\u3002</li> </ul> <p>\u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0cHJB\u65b9\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u8ba1\u7b97\u503c\u51fd\u6570\u548c\u786e\u5b9a\u6700\u4f18\u63a7\u5236\u7b56\u7565\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u89e3HJB\u65b9\u7a0b\u53ef\u80fd\u9700\u8981\u6570\u503c\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u9ad8\u7ef4\u7cfb\u7edf\u548c\u975e\u7ebf\u6027\u7cfb\u7edf\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_10","title":"\u63a8\u5bfc\u8fc7\u7a0b","text":"<p>Hamilton-Jacobi-Bellman\uff08HJB\uff09\u65b9\u7a0b\u662f\u6700\u4f18\u63a7\u5236\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u65b9\u7a0b\uff0c\u5b83\u63cf\u8ff0\u4e86\u6700\u4f18\u63a7\u5236\u95ee\u9898\u7684\u89e3\u3002HJB\u65b9\u7a0b\u53ef\u4ee5\u901a\u8fc7\u53d8\u5206\u6cd5\u548c\u6700\u5927\u539f\u7406\u63a8\u5bfc\u51fa\u6765\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6982\u8ff0\uff1a</p> <p>\u8003\u8651\u4e00\u4e2a\u6700\u4f18\u63a7\u5236\u95ee\u9898\uff0c\u5176\u4e2d\u6211\u4eec\u5e0c\u671b\u6700\u5c0f\u5316\u4e00\u4e2a\u7279\u5b9a\u7684\u6027\u80fd\u6307\u6807\uff08\u901a\u5e38\u662f\u4ee3\u4ef7\u51fd\u6570\uff09\uff1a</p> \\[ J = \\int_{t_0}^{t_f} L(x(t), u(t), t) dt \\] <p>\u5176\u4e2d \\(x(t)\\) \u662f\u7cfb\u7edf\u7684\u72b6\u6001\uff0c\\(u(t)\\) \u662f\u63a7\u5236\u8f93\u5165\uff0c\\(L\\) \u662f\u62c9\u683c\u6717\u65e5\u5bc6\u5ea6\uff08\u4ee3\u4ef7\u51fd\u6570\uff09\uff0c\\(t\\) \u662f\u65f6\u95f4\uff0c\\(t_0\\) \u548c \\(t_f\\) \u662f\u65f6\u95f4\u533a\u95f4\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u3002</p> <p>\u4e3a\u4e86\u63a8\u5bfcHJB\u65b9\u7a0b\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u503c\u51fd\u6570 \\(V(x, t)\\)\uff0c\u8868\u793a\u4ece\u72b6\u6001 \\(x\\) \u5f00\u59cb\u5e76\u5728\u65f6\u95f4 \\(t\\) \u7ed3\u675f\u65f6\u7684\u6700\u5c0f\u6027\u80fd\u6307\u6807\u3002\u8fd9\u4e2a\u503c\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u52a8\u6001\u89c4\u5212\u65b9\u7a0b\uff1a</p> \\[ V(x, t) = \\min_u \\left\\{ L(x, u, t) + \\frac{\\partial V(x, t)}{\\partial t} \\right\\} \\] <p>\u5176\u4e2d\uff0c\\(\\frac{\\partial V(x, t)}{\\partial t}\\) \u662f\u503c\u51fd\u6570 \\(V\\) \u5173\u4e8e\u65f6\u95f4 \\(t\\) \u7684\u504f\u5bfc\u6570\u3002\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u89e3\u91ca\u662f\uff0c\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u63a7\u5236\u8f93\u5165 \\(u\\) \u6765\u6700\u5c0f\u5316\u5f53\u524d\u4ee3\u4ef7\u548c\u4ece\u4e0b\u4e00\u4e2a\u72b6\u6001 \\(x'\\) \u5f00\u59cb\u7684\u6700\u5c0f\u6027\u80fd\u6307\u6807\uff08\u5373\u503c\u51fd\u6570\u5728 \\(x'\\) \u5904\u7684\u503c\uff09\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u4e86\u6700\u5c0f\u5316\u64cd\u4f5c\u7b26 \\(\\min_u\\)\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u53d8\u5206\u6cd5\u6765\u63a8\u5bfcHJB\u65b9\u7a0b\u3002\u5bf9\u503c\u51fd\u6570 \\(V\\) \u8fdb\u884c\u5fae\u5206\uff0c\u5e76\u5229\u7528\u4f18\u5316\u6761\u4ef6\uff08\u5373\u6700\u5c0f\u503c\u6761\u4ef6\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\frac{\\partial V}{\\partial t} = -\\min_u \\left\\{ L(x, u, t) + \\frac{\\partial V}{\\partial t} \\right\\} \\] <p>\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u65b9\u7a0b\u91cd\u5199\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a</p> \\[ \\frac{\\partial V}{\\partial t} + \\min_u \\left\\{ L(x, u, t) + \\frac{\\partial V}{\\partial t} \\right\\} = 0 \\] <p>\u6700\u540e\uff0c\u4f7f\u7528\u6700\u5927\u539f\u7406\uff08Hamilton-Jacobi \u6700\u5927\u539f\u7406\uff09\uff0c\u6211\u4eec\u5f97\u5230\u4e86HJB\u65b9\u7a0b\uff1a</p> \\[ \\frac{\\partial V}{\\partial t} + \\min_u \\left\\{ L(x, u, t) + \\nabla V(x, t)^T f(x, u, t) \\right\\} = 0 \\] <p>\u8fd9\u5c31\u662fHJB\u65b9\u7a0b\u7684\u4e00\u822c\u5f62\u5f0f\uff0c\u5176\u4e2d \\(f(x, u, t)\\) \u662f\u7cfb\u7edf\u7684\u52a8\u6001\u65b9\u7a0b\uff0c\\(\\nabla V(x, t)\\) \u662f\u503c\u51fd\u6570 \\(V\\) \u5173\u4e8e\u72b6\u6001 \\(x\\) \u7684\u68af\u5ea6\u3002</p> <p>\u603b\u4e4b\uff0cHJB\u65b9\u7a0b\u901a\u8fc7\u53d8\u5206\u6cd5\u548c\u6700\u5927\u539f\u7406\u63a8\u5bfc\u800c\u6765\uff0c\u5b83\u662f\u89e3\u51b3\u6700\u4f18\u63a7\u5236\u95ee\u9898\u7684\u5173\u952e\u65b9\u7a0b\uff0c\u63d0\u4f9b\u4e86\u6700\u4f18\u63a7\u5236\u7b56\u7565\u548c\u76f8\u5e94\u7684\u6700\u5c0f\u6027\u80fd\u6307\u6807\u3002\u89e3HJB\u65b9\u7a0b\u901a\u5e38\u9700\u8981\u6570\u503c\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u9ad8\u7ef4\u548c\u975e\u7ebf\u6027\u7cfb\u7edf\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#_11","title":"\u7a33\u5b9a\u6027\u95ee\u9898","text":"<p>https://zhuanlan.zhihu.com/p/58738073 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#1","title":"1. \u674e\u96c5\u666e\u8bfa\u592b\u7a33\u5b9a","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c\u5982\u679c\u5e73\u8861\u72b6\u6001\u00a0\\(x_e\\)\u53d7\u5230\u6270\u52a8\u540e\uff0c\u4ecd\u7136\u505c\u7559\u5728 \\(x_e\\)\u9644\u8fd1\uff0c\u6211\u4eec\u5c31\u79f0\u00a0\\(x_e\\)\u00a0\u5728\u674e\u96c5\u666e\u8bfa\u592b\u610f\u4e49\u4e0b\u662f\u7a33\u5b9a\u7684\uff08Lyapunov stable\uff09\u3002  </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#2","title":"2 \u6e10\u8fd1\u7a33\u5b9a","text":"<p>\u5982\u679c\u66f4\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u5e73\u8861\u72b6\u6001\\(x_e\\)\u00a0\u53d7\u5230\u6270\u52a8\u540e\uff0c\u6700\u7ec8\u90fd\u4f1a\u6536\u655b\u5230\\(x_e\\)\u00a0\uff0c\u6211\u4eec\u5c31\u79f0\\(x_e\\)\u00a0\u5728\u674e\u96c5\u666e\u8bfa\u592b\u610f\u4e49\u4e0b\u662f\u6e10\u8fdb\u7a33\u5b9a\u7684\uff08Asymptotically stable\uff09\u3002 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BC%98%E6%8E%A7%E5%88%B6%E4%B8%AD%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/#3","title":"3\u5927\u8303\u56f4\u6e10\u8fd1\u7a33\u5b9a","text":"<p>\u518d\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u5e73\u8861\u72b6\u6001\u00a0\\(x_e\\)\u53d7\u5230\u4efb\u4f55\u6270\u52a8\u540e\uff0c\u6700\u7ec8\u90fd\u4f1a\u6536\u655b\u5230\\(x_e\\)\u00a0\uff0c\u6211\u4eec\u5c31\u79f0\u00a0\\(x_e\\)\u00a0\u5728\u674e\u96c5\u666e\u8bfa\u592b\u610f\u4e49\u4e0b\u662f\u5927\u8303\u56f4\u5185\u6e10\u8fdb\u7a33\u5b9a\u7684\uff08Asymptotically stable in large\uff09\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%9F%E5%88%8A%E6%B1%87%E6%80%BB%E4%B8%8E%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%B1%87%E6%80%BB/","title":"\u671f\u520a\u6c47\u603b\u4e0e\u5b9e\u9a8c\u5ba4\u6c47\u603b","text":"<p>\u671f\u520a\u6c47\u603b</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%9F%E5%88%8A%E6%B1%87%E6%80%BB%E4%B8%8E%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%B1%87%E6%80%BB/#_1","title":"\u4f1a\u8bae","text":"<p>ICRA\uff1aIEEE International Conference on Robotics and Automation (ICRA)</p> <p>IROS\uff1aInternational Conference on Intelligent Robots and Systems (IROS)</p> <p>IV\uff1aIEEE\u00a0Intelligent Vehicles Symposium</p> <p>ITSC\uff1aIEEE International Conference on Intelligent Transportation Systems</p> <p>RSS\uff1aRobotics:Science and System</p> <p>ACC\uff1aAmerican Control Conference</p> <p>CDC: IEEE Conference on Decision and Control</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%9F%E5%88%8A%E6%B1%87%E6%80%BB%E4%B8%8E%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%B1%87%E6%80%BB/#_2","title":"\u671f\u520a","text":"<p>IJRR</p> <p>JFR</p> <p>IEEE trans.on Intelligent Vehicles (T-IV)</p> <p>IEEE \uff1aTrans. on Vehicular Technology(T-VT)</p> <p>IEEE Transactions on Intelligent Transportation Systems(T-ITS)</p> <p>IEEE Transaction on Control Systems Technology(T-CST)</p> <p>IEEE TRANS ON ROROTICS</p> <p>IEEE Intelligent Transportation Systems Magazine</p> <p>Vehicle System Dynamics(VSD)</p> <p>Transportation Research Part A,B,C D E</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%9C%9F%E5%88%8A%E6%B1%87%E6%80%BB%E4%B8%8E%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%B1%87%E6%80%BB/#_3","title":"\u8bfe\u7a0b\u6c47\u603b\uff1a","text":"<p>CS234 \u5f3a\u5316\u5b66\u4e60</p> <p>CS285\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60</p> <p>\u5929\u6d25\u5927\u5b66\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u5b9e\u9a8c\u5ba4</p> <p>\u53c9\u9662\u5f20\u5d07\u6d01</p> <p>\u6e2f\u79d1\u5927\u6c88\u52ad\u52bc</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E6%AD%A3%E5%88%99%E5%8C%96%EF%BC%88regularization%EF%BC%89%E3%80%81%E5%BD%92%E4%B8%80%E5%8C%96%E8%BE%93%E5%85%A5%EF%BC%88normalizing%20input%EF%BC%89%E3%80%81%E5%BD%92%E4%B8%80%E5%8C%96_%E6%A0%87/","title":"\u6b63\u5219\u5316\uff08regularization\uff09\u3001\u5f52\u4e00\u5316\u8f93\u5165\uff08normalizing input\uff09\u3001\u5f52\u4e00\u5316 \u6807","text":"<p>\u6b63\u5219\u5316\uff08regularization\uff09\u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408\u7684\uff0c\u5373\u628a\u6743\u91cd\u653e\u5230\u4ee3\u4ef7\u51fd\u6570\u91cc\uff0c\u5e38\u7528\u7684\u7684L1\u3001L2\u6b63\u5219\u5316\uff0c\u76f8\u5f53\u4e8e\u7ed9\u6743\u91cd\u52a0\u4e86\u7ea6\u675f </p> <p>\u5f52\u4e00\u5316\u8f93\u5165\uff08normalizing input\uff09\u6307\u7684\u662f\u5c06\u8f93\u5165\u7684\u56fe\u7247\u7684\u50cf\u7d20\u8303\u56f4\u7531 [0,255]-&gt;[0,1]-&gt;[-1,1]</p> <p>\u5176\u4e2d[0,255]-&gt;[0,1]\u7531transformer.ToTensor\uff08\uff09\u5b8c\u6210\uff0c[0,1]-&gt;[-1,1]\u53c8transformer.normaliza\uff08mean=[0.5]\uff0cstd=0.5\uff09\u5b8c\u6210\uff0c\u8fd9\u6837\u4f7f\u50cf\u7d20\u53d8\u4e3a\u4e86\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u7684\u6570\u636e\uff0c\u6709\u5229\u4e8e\u52a0\u5feb\u8bad\u7ec3</p> <p></p> <p>\u6807\u51c6\u5316batch\uff08batchnormalization \uff09\u548c\u5f52\u4e00\u5316\u8f93\u5165\uff08normalizing input\uff09\u7684\u4f5c\u7528\u4e00\u6837</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B%E5%92%8C%E5%88%A4%E5%88%AB%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%A0%B9%E6%9C%AC%E7%90%86%E8%A7%A3/","title":"\u751f\u6210\u6a21\u578b\u548c\u5224\u522b\u6a21\u578b\u7684\u6839\u672c\u7406\u89e3","text":"<p>\u751f\u6210\u5f0f\uff1a \\sigma {y}\u00a0 P\uff08x,y\uff09 = P\uff08x\uff09\u00a0 \u7b49\u4ef7\u4e8e\\sigma {y} P\uff08X=x,Y=y\uff09 = P\uff08X=x\uff09 \u5224\u522b\u5f0f\uff1a \\sigma {y} P\uff08y|x\uff09 = 1</p> <p>x\uff0cy \u8868\u793a\u5177\u4f53\u7684\u53d8\u91cf X,Y\u8868\u793a\u968f\u673a\u53d8\u91cf</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/","title":"\u795e\u7ecf\u7f51\u7edc\u7684\u526a\u679d\uff08pruning\uff09\u4e0e\u77e5\u8bc6\u84b8\u998f\uff08distillation\uff09   \u4e0e\u53c2\u6570\u91cf\u5316\u4e0e\u67b6\u6784\u8bbe\u8ba1","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#pruning","title":"\u526a\u679d\uff08pruning\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#1trainnetwork","title":"1\u3001\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5148train\u4e00\u4e2a\u5c0f\u7684network","text":"<p>\u4e00\u822c\u6765\u8bf4train\u4e00\u4e2a\u5c0f\u7684network\u5f80\u5f80\u4e0d\u80fd\u6253\u5230\u8f83\u9ad8\u7684accurancy\uff0c\u6240\u4ee5\u4e00\u822c\u7684\u505a\u6cd5\u662f\u5148train\u4e00\u4e2a\u5927\u7684network\uff0c\u7136\u540e\u505apruning\uff08\u5927\u4e50\u900f\u5047\u8bf4\uff1a\u5148train\u4e00\u4e2a\u5927\u7684network\uff0c\u91cc\u8fb9\u5305\u542b\u5f88\u591a\u5c0f\u7684network\uff0c\u6bcf\u4e00\u4e2a\u5c0f\u7684network\u4e0d\u4e00\u5b9a\u90fd\u80fd\u591ftrain\u8d77\u6765\uff0c\u4f46\u662f\u5148\u8bad\u7ec3\u4e00\u4e2a\u5927\u7684network\u53ef\u4ee5\u63d0\u9ad8\u5c0f\u7684network\u8bad\u7ec3\u8d77\u6765\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6211\u4eec\u8fdb\u884cpruning\uff0c\u53ef\u4ee5\u4fdd\u7559\u6700\u597d\u7684\u7ed3\u679c\uff0c\u8fd9\u5c31\u662f\u56e0\u4e3ainitial weight\u5f88\u91cd\u8981\uff09</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#2pruning","title":"2\u3001pruning\u7684\u7c7b\u578b","text":"<p>weight pruning\u548cneural pruning\uff0c\u4e00\u822c\u6765\u8bf4\u7528neural pruning\uff0c\u56e0\u4e3aweight pruning\u662f\u4e0d\u89c4\u5219\u7684network\uff0c\u65e0\u6cd5\u8c03\u7528pytorch\u52a0\u901f</p> <p>\uff08distillation\uff09</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u6837\u6548\u679c\u597d\uff1f\u4e3a\u793e\u4e48\u4e0d\u76f4\u63a5train\u4e00\u4e2a\u5c0f\u7684network\uff0c\u4e00\u79cd\u53ef\u80fd\u7684\u89e3\u91ca\u662f\uff0c\u5927\u7684network\u5bb9\u6613\u627e\u5230\u5168\u5c40\u6700\u4f18\uff0c\u800c\u5c0f\u7684\u53ef\u80fd\u9677\u5165\u5c40\u90e8\u6700\u4f18\uff0c\u8ba9\u5c0f\u7684\u8ddf\u7740\u5927\u7684\u8d70\u6548\u679c\u597d</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#parameter-quantization","title":"Parameter quantization\uff08\u53c2\u6570\u91cf\u5316\uff09","text":"<p>1\u3001\u7528\u66f4\u5c11\u7684\u50a8\u5b58\u7a7a\u95f4\u53bb\u5b58\u53c2\u6570\uff08\u6bd4\u598232\u4f4d 16\u4f4d\u6765\u5b58\uff09 2\u3001wieght clustering </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#3","title":"3\u3001\u970d\u592b\u66fc\u7f16\u7801","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#4binary-weight","title":"4\u3001binary weight","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#cnn","title":"\u67b6\u6784\u8bbe\u8ba1\uff08CNN\u62c6\u5c42\uff09","text":"<p>\u52a8\u6001\u8ba1\u7b97</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#1network","title":"1\u3001network\u52a8\u6001\u8c03\u6574\u6df1\u5ea6","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#2","title":"2\u3001\u52a8\u6001\u8c03\u6574\u5bbd\u5ea6","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%89%AA%E6%9E%9D%EF%BC%88pruning%EF%BC%89%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F%EF%BC%88distillation%EF%BC%89%20%20%20%E4%B8%8E%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/#3_1","title":"3\u3001\u673a\u5668\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u8c03\u6574\u6df1\u5ea6\u4e0e\u5bbd\u5ea6","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/","title":"\u795e\u7ecf\u7f51\u7edc\u7684\u79cd\u7c7b","text":"<p>\u76ee\u524d\u5df2\u6709\u7684\u4e94\u5927\u7279\u5f81\u63d0\u53d6\u5668\uff1a MLP\u3001CNN\u3001RNN\u3001Transformer\u3001GNN\u3001GAN</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#1-mlp","title":"1.\u00a0MLP","text":"<p>MLP\uff1aMulti Layer Perseption\uff1a\u591a\u5c42\u611f\u77e5\u5668\u3002\u4e3b\u8981\u7528\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u3002</p> <p>\u53c2\u8003\uff1a</p> <p>\u795e\u7ecf\u7f51\u7edc1\uff1a\u591a\u5c42\u611f\u77e5\u5668-MLP</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#11-standard","title":"1.1 Standard","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#2-cnn","title":"2.\u00a0CNN","text":"<p>CNN\uff1aConvolutional Neural Network\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u4e3b\u8981\u7528\u5728CV\uff08\u8ba1\u7b97\u673a\u89c6\u89c9\uff09\u4e2d\u3002</p> <p>\u53c2\u8003\uff1aCNN\u7ecf\u5178\u7f51\u7edc\u6a21\u578b\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#21-standard","title":"2.1 Standard","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#22-u-net","title":"2.2 U-Net","text":"<p>U-Net\u4e3b\u8981\u7528\u5728Semantic Segmentation\uff08\u8bed\u4e49\u5206\u5272\uff09\u4e0a\u3002</p> <p>\u53c2\u8003\uff1a\u56fe\u50cf\u5206\u5272\u7ecf\u5178\u7b97\u6cd5\u7b80\u4ecb</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#23-sort","title":"2.3 SORT","text":"<p>SORT\uff1aSimple Online and Realtime Tracking\uff1a\u7b80\u5355\u7684\u5728\u7ebf\u548c\u5b9e\u65f6\u8ddf\u8e2a\u3002\u4e3b\u8981\u7528\u5728\u591a\u76ee\u6807\u8ddf\u8e2a\u4efb\u52a1\u3002</p> <p>\u53c2\u8003\uff1a\u591a\u76ee\u6807\u8ddf\u8e2a\uff08MOT\uff09\u7ecf\u5178\u7b97\u6cd5\u7b80\u4ecb</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#3-rnn","title":"3.\u00a0RNN","text":"<p>RNN\uff1aRecurrent Neural Network\uff1a\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u3002\u4e3b\u8981\u7528\u5728NLP\uff08\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09\u4e2d\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#31-standard","title":"3.1 Standard","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#32-lstm","title":"3.2 LSTM","text":"<p>LSTM\uff1aLong Short-term Memory Networks\uff1a\u957f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edc</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#4-transformer","title":"4.\u00a0Transformer","text":"<p>\u4e3b\u8981\u7528\u5728NLP\u4e2d\uff0c\u73b0\u5728\u5728CV\u9886\u57df\uff0c\u4e5f\u5728\u5feb\u901f\u53d1\u5c55\uff0c\u76ee\u524d\u6700\u706b\u7684\u80af\u5b9a\u662fGPT\uff0c\u4e3b\u8981\u7528\u6765\u505a\u5185\u5bb9\u751f\u6210\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#41-standard","title":"4.1 Standard","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#42-bert","title":"4.2 BERT","text":"<p>\u4f5c\u4e3aNLP\u591a\u4e2a\u4efb\u52a1\u7684Pre-training Model\uff0c\u76f8\u5f53\u4e8eCNN\u4e4b\u4e8eCV\u3002\u4e0d\u8fc7\u7531\u4e8e\u5176\u53ea\u4f7f\u7528\u4e86Transformer\u4e2d\u7f16\u7801\u5668\u6a21\u5757\uff0c\u6240\u4ee5\u5bf9\u673a\u5668\u7ffb\u8bd1\u4efb\u52a1\u4e0d\u90a3\u4e48\u80dc\u4efb\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#43-gpt","title":"4.3 GPT","text":"<p>GPT\uff1aGenerative Pre-trained Transformer\uff1a\u751f\u6210\u5f0f\u9884\u8bad\u7ec3Transformer\u3002\u4e3b\u8981\u7528\u5728\u6587\u672c\u751f\u6210\uff0c\u56fe\u50cf\u751f\u6210\uff0c\u673a\u5668\u804a\u5929\uff0c\u673a\u5668\u95ee\u7b54\u7b49\u9886\u57df\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#44-vit","title":"4.4 ViT","text":"<p>ViT\uff1aVision Transformer\uff1a\u89c6\u89c9Transformer\u3002\u5c06Transformer\u6a21\u578b\u7528\u5728\u89c6\u89c9\u4efb\u52a1\u4e0a\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#5-others","title":"5.\u00a0Others","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#51-gnn","title":"5.1 GNN","text":"<p>GNN\uff1aGraph Neural Networks\uff1a\u56fe\u795e\u7ecf\u7f51\u7edc\u3002\u901a\u8fc7\u5c06\u8f93\u5165\u6570\u636e\u6784\u5efa\u6210\u56fe\u7684\u5f62\u5f0f\uff0c\u6765\u53d1\u73b0\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e3b\u8981\u7528\u5728\u6297\u83cc\u53d1\u73b0\u3001\u7269\u7406\u6a21\u62df\u3001\u5047\u65b0\u95fb\u68c0\u6d4b\u3001\u4ea4\u901a\u9884\u6d4b\u548c\u63a8\u8350\u7cfb\u7edf\u7b49\u65b9\u9762\u3002\u7531\u4e8e\u56fe\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u76f8\u6bd4\u4e8e\u56fe\u50cf\u3001\u8bed\u8a00\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u6b64\u76ee\u524d\u5728CV\u548cNLP\u9886\u57df\u7528\u7684\u8fd8\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u6700\u8fd1\u51e0\u5e74\u6709\u4e0d\u65ad\u70ed\u95e8\u7684\u8d8b\u52bf\u3002 \u53c2\u8003\uff1aA Gentle Introduction to Graph Neural Networks</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%A7%8D%E7%B1%BB/#52-gan","title":"5.2 GAN","text":"<p>GAN\uff1aGenerative Adversarial Nets\uff1a\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002\u4e25\u683c\u6765\u8bf4\uff0cGAN\u662f\u4e00\u4e2a\u751f\u6210\u5bf9\u6297Framework\uff0c\u548cMOT\uff08\u591a\u76ee\u6807\u8ddf\u8e2a\uff09\u4e2dSORT\u6846\u67b6\u7c7b\u4f3c\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%87%AA%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E8%87%AA%E7%BC%96%E7%A0%81%E6%A8%A1%E5%9E%8B/","title":"\u81ea\u56de\u5f52\u6a21\u578b\u4e0e\u81ea\u7f16\u7801\u6a21\u578b","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%87%AA%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E8%87%AA%E7%BC%96%E7%A0%81%E6%A8%A1%E5%9E%8B/#1","title":"1 \u81ea\u56de\u5f52\u6a21\u578b","text":"<p>\u81ea\u56de\u5f52\u6a21\u578b\u7684\u5b9a\u4e49\uff1a \u7528\u4e4b\u524d\u7684x\u9884\u6d4bx\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u7528x\u9884\u6d4by</p> <p></p> <p>AR\u6a21\u578b\uff0c\u4ee3\u8868\u4f5cGPT\uff0c\u4ece\u5de6\u5f80\u53f3\u5b66\u4e60\u7684\u6a21\u578b\u3002AR\u6a21\u578b\u4ece\u4e00\u7cfb\u5217time steps\u4e2d\u5b66\u4e60\uff0c\u5e76\u5c06\u4e0a\u4e00\u6b65\u7684\u7ed3\u679c\u4f5c\u4e3a\u56de\u5f52\u6a21\u578b\u7684\u8f93\u5165\uff0c\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2atime step\u7684\u503c\u3002AR\u6a21\u578b\u901a\u5e38\u7528\u4e8e\u751f\u6210\u5f0f\u4efb\u52a1\uff0c\u5728\u957f\u6587\u672c\u7684\u751f\u6210\u80fd\u529b\u5f88\u5f3a\uff0c\u6bd4\u5982\u81ea\u7136\u8bed\u8a00\u751f\u6210\uff08NLG\uff09\u9886\u57df\u7684\u4efb\u52a1\uff1a\u6458\u8981\u3001\u7ffb\u8bd1\u6216\u62bd\u8c61\u95ee\u7b54\u3002 </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%87%AA%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E8%87%AA%E7%BC%96%E7%A0%81%E6%A8%A1%E5%9E%8B/#2","title":"2\u81ea\u7f16\u7801\u6a21\u578b","text":"<p>AE\u6a21\u578b\uff0c\u4ee3\u8868\u4f5cBERT\uff0c\u5b83\u4e0d\u4f1a\u8fdb\u884c\u7cbe\u786e\u7684\u4f30\u8ba1\uff0c\u4f46\u5374\u5177\u6709\u4ece\u88abmask\u7684\u8f93\u5165\u4e2d\uff0c\u91cd\u5efa\u539f\u59cb\u6570\u636e\u7684\u80fd\u529b\uff0c\u5373fill in the blanks_\uff08\u586b\u7a7a\uff09\u3002AE\u6a21\u578b\u901a\u5e38\u7528\u4e8e\u5185\u5bb9\u7406\u89e3\u4efb\u52a1\uff0c\u6bd4\u5982\u81ea\u7136\u8bed\u8a00\u7406\u89e3\uff08NLU\uff09\u4e2d\u7684\u5206\u7c7b\u4efb\u52a1\uff1a\u60c5\u611f\u5206\u6790\u3001\u63d0\u53d6\u5f0f\u95ee\u7b54\u3002 BERT\u4e00\u76f4\u90fd\u662f\u5f88\u5148\u8fdb\u7684\u9884\u8bad\u7ec3\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5229\u7528\u53cc\u5411\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5bf9\u539f\u59cb\u8f93\u5165\u8fdb\u884c\u91cd\u5efa\uff08\u6062\u590d\uff09\u3002\u8fd9\u4e2a\u5c31\u662f\u76f8\u6bd4\u4e8eAR\u6a21\u578b\u6765\u8bf4\u7684\u76f4\u63a5\u4f18\u52bf\uff1a\u7f29\u5c0f\u4e86\u53cc\u5411\u4fe1\u606fgap\uff0c\u4ece\u800c\u53ef\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u3002\u7136\u800c\uff0cBERT\u5728\u9884\u8bad\u7ec3\u671f\u95f4\u4f7f\u7528\u7684[MASK]\u7b26\u53f7\uff0c\u5728\u5fae\u8c03\u9636\u6bb5\u7684\u771f\u5b9e\u6570\u636e\u4e2d\u5e76\u4e0d\u5b58\u5728\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u9884\u8bad\u7ec3-\u5fae\u8c03\u7684\u5dee\u5f02\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u9884\u6d4b\u7684token\u5728\u8f93\u5165\u4e2d\u88abmask\uff0c\u5bfc\u81f4BERT\u65e0\u6cd5\u50cfAR\u8bed\u8a00\u6a21\u578b\u90a3\u6837\uff0c\u4f7f\u7528\u4e58\u79ef\u65b9\u5f0f\u5bf9\u8054\u5408\u6982\u7387\u8fdb\u884c\u5efa\u6a21\u3002\u6362\u8a00\u4e4b\uff0cBERT\u5047\u8bbe\uff0c\u5728\u7ed9\u5b9aunmask\u7684token\u65f6\uff0c\u5f85\u9884\u6d4b\u7684token\u5f7c\u6b64\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u8fd9\u4e2a\u5047\u8bbe\u8fc7\u4e8e\u7b80\u5355\u5316\u4e86\uff0c\u5728\u81ea\u7136\u8bed\u8a00\u4e2d\uff0chigh-order\u548clong-range\u4f9d\u8d56\u662f\u975e\u5e38\u666e\u904d\u7684\u3002</p> <p></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<p>\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u591a\u7c7b\u65b9\u6cd5: \u4e0b\u9762\u4ee5python\u4ee3\u7801\u4f5c\u4e3a\u6f14\u793a</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#1","title":"1 \u7ba1\u9053","text":"<p>\u7ba1\u9053\u662f\u4e00\u79cd\u534a\u53cc\u5de5\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u6570\u636e\u53ea\u80fd\u5355\u5411\u6d41\u52a8\uff0c\u800c\u4e14\u53ea\u80fd\u5728\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u95f4\u4f7f\u7528\u3002\u8fdb\u7a0b\u7684\u4eb2\u7f18\u5173\u7cfb\u901a\u5e38\u662f\u6307\u7236\u5b50\u8fdb\u7a0b\u5173\u7cfb\u3002 left:\u53d1\u9001\u5305\u5b50 right\uff1a\u63a5\u6536\u5b9d\u5b50</p> <pre><code>from multiprocessing import Process, Pipe\nimport time\n\n#\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684python\u6587\u4ef6\ndef consumer(p, name):\n    left, right = p\n    left.close()\n    while True:\n        try:\n            baozi = right.recv()\n            print('%s \u6536\u5230\u5305\u5b50:%s' % (name, baozi))\n        except EOFError:\n            right.close()\n            break\n\n#\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684python\u6587\u4ef6\ndef producer(seq, p):\n    left, right = p\n    right.close()\n    for i in seq:\n        left.send(i)\n        time.sleep(1)\n    else:\n        left.close()\n\n\nif __name__  '__main__':\n    left, right = Pipe()\n\n    c1 = Process(target=consumer, args=((left, right), 'c1'))\n    c1.start()\n\n    seq = (i for i in range(10))\n    producer(seq, (left, right))\n\n    right.close()\n    left.close()\n\n    c1.join()\n    print('\u8fdb\u7a0b\u95f4\u901a\u4fe1-\u7ba1\u9053-\u4e3b\u8fdb\u7a0b')\n</code></pre>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#2","title":"2 \u961f\u5217","text":"<p><pre><code>from multiprocessing import Process, Queue, set_start_method\nimport time,random,os\n\n#\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684python\u6587\u4ef6\uff0c\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b\ndef consumer(q):\n    while True:\n        res=q.get()\n        if res is None: break #\u6536\u5230\u7ed3\u675f\u4fe1\u53f7\u5219\u7ed3\u675f\n        time.sleep(random.randint(1,3))\n        print('\\033[45m%s \u5403 %s\\033[0m' %(os.getpid(),res))\n\n#\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684python\u6587\u4ef6\uff0c\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b\ndef producer(q):\n    for i in range(10):\n        time.sleep(random.randint(1,3))\n        res='\u5305\u5b50%s' %i\n        q.put(res)\n        print('\\033[46m%s \u751f\u4ea7\u4e86 %s\\033[0m' %(os.getpid(),res))\n    q.put(None) #\u53d1\u9001\u7ed3\u675f\u4fe1\u53f7\n\n\nif __name__  '__main__':\n    set_start_method('fork')\n\n    q=Queue()\n    #\u751f\u4ea7\u8005\u4eec:\u5373\u53a8\u5e08\u4eec\n    p1=Process(target=producer,args=(q,))\n\n    #\u6d88\u8d39\u8005\u4eec:\u5373\u5403\u8d27\u4eec\n    c1=Process(target=consumer,args=(q,))\n\n    #\u5f00\u59cb\n    p1.start()\n    c1.start()\n    print('\u8fdb\u7a0b\u95f4\u901a\u4fe1-\u961f\u5217-\u4e3b\u8fdb\u7a0b')\n</code></pre> </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#3-socket","title":"3 socket","text":"<p>socket\u5b9e\u9645\u4e0a\u662f\u7f51\u7edc\u901a\u4fe1\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u4e24\u4e2a\u4e0d\u540c\u4e3b\u673a\u4e0a\u7684\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u672c\u673a\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002</p> <p>Python socket \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b</p> <p>socket = socket.socket(family, type[, protocal])</p> <ul> <li>family\u4ee3\u8868\u5730\u5740\u5bb6\u65cf\uff0c\u4e00\u822c\u4e3aAF_UNIX\uff0cAF_INET\u548cAF_INET6\u3002AF_UNIX\u7528\u4e8e\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u8fdb\u7a0b\u901a\u4fe1\uff0cAF_INET\u7528\u4e8eIPV4\u534f\u8bae\u7684TCP\u548cUDP\uff0cAF_INET6\u7528\u4e8eIPV6\u534f\u8bae\uff1b</li> <li>type\u4ee3\u8868\u5957\u63a5\u5b57\u7c7b\u578b\uff0c\u4e00\u822c\u4e3aSOCK_STREAM\uff0cSOCK_DGRAM\u548cSOCK_RAW\u3002SOCK_STREAM\u4e3a\u6d41\u5f0f\u5957\u63a5\u5b57\uff0c\u7528\u4e8eTCP\u901a\u4fe1\uff0cSOCK_DGRAM\u4e3a\u6570\u636e\u62a5\u5f0f\u5957\u63a5\u5b57\uff0c\u7528\u4e8eUDP\u901a\u4fe1\uff0cSOCK_RAW\u4e3a\u539f\u59cb\u5957\u63a5\u5b57\uff0c\u53ef\u4ee5\u7528\u4e8e\u5904\u7406ICMP\u3001IGMP\u7b49\u7f51\u7edc\u62a5\u6587\uff0c\u8fd9\u662f\u666e\u901a\u5957\u63a5\u5b57\u65e0\u6cd5\u5904\u7406\u7684;</li> <li>protocal\u4ee3\u8868\u534f\u8bae\u7f16\u53f7\uff0c\u9ed8\u8ba4\u4e3a0\u3002</li> </ul> <p>server.py <pre><code>import socket\nimport os\n\nif __name__  '__main__':\n    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server.bind((\"localhost\", 8888))\n    server.listen(0)\n    while True:\n        connection, address = server.accept()\n        connection.send(\"test: %s\"% connection.recv(1024))\n    connection.close()\n</code></pre> client.py <pre><code>import socket\nimport os\n\nif __name__  '__main__':\n    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    client.connect((\"localhost\", 8888))\n\n    instr = raw_input()\n    client.send(instr)\n    print client.recv(1024)\n\n    client.close()\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#4","title":"4 \u5171\u4eab\u5185\u5b58","text":"<p>\u4e24\u4e2a\u8fdb\u7a0b\u64cd\u4f5c\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u9700\u8981\u52a0\u9501\u3002 <pre><code>from multiprocessing import Manager, Process,Lock\n\ndef work(d,lock):\n      with lock: # \u4e0d\u52a0\u9501\u800c\u64cd\u4f5c\u5171\u4eab\u7684\u6570\u636e,\u80af\u5b9a\u4f1a\u51fa\u73b0\u6570\u636e\u9519\u4e71\n        print(f\"\u8ba1\u6570\u5668\u51cf\u4e00\uff0c\u5f53\u524d\u4e3a\uff1a{d['count']}\")\n        d['count']-=1\n\n\nif __name__  '__main__':\n    lock=Lock()\n    with Manager() as m:\n        dic=m.dict({'count':20})\n        p_l=[]\n        for i in range(20):\n            p=Process(target=work, args=(dic, lock))\n            p_l.append(p)\n            p.start()\n\n        for p in p_l:\n            p.join()\n        print(dic)\n</code></pre></p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#5","title":"5 \u4fe1\u53f7\u91cf","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/","title":"\u9762\u8bd5\u76f8\u5173","text":"<p>[[\u89c4\u5212\u7684\u4e00\u4e9b\u611f\u60f3]] [[\u65f6\u7a7a\u89c4\u5212]] [[\u5237\u9898\u8bb0\u5f55]] \u4f18\u5316\u95ee\u9898 \u5224\u65ad\u662f\u5426\u76f8\u4ea4</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#apollo","title":"Apollo","text":"<p>https://paul.pub/apollo-planning/ https://zhuanlan.zhihu.com/p/146367865</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#1","title":"\u9762\u7ecf1","text":"<p>\u4f5c\u8005\uff1acuke \u94fe\u63a5\uff1ahttps://zhuanlan.zhihu.com/p/440844177 \u6765\u6e90\uff1a\u77e5\u4e4e  </p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#_1","title":"\u4e00.\u8f68\u8ff9\u4f18\u5316","text":"<p>1.\u8bf4\u660e\u89c4\u5212\u7b97\u6cd5\u5efa\u6a21\u8fc7\u7a0b\u3002\uff08\u5982\u4f55\u8bbe\u8ba1\u4ee3\u4ef7\u51fd\u6570\u548c\u7ea6\u675f\uff09</p> <p>2.\u8bf4\u660e\u8f68\u8ff9\u89c4\u5212\u548c\u8def\u5f84\u89c4\u5212\u533a\u522b\u3002</p> <p>3.\u8bf4\u660e\u89c4\u5212\u4e0e\u63a7\u5236\u7684\u533a\u522b\u3002\uff08\u66f2\u7ebf\uff09</p> <p>4.\u8bf4\u660eDP\u548cQP\u4f18\u5316\u7684\u65f6\u5019\u8003\u8651\u7684\u7ea6\u675f\u53ca\u4f18\u5316\u76ee\u6807\u3002</p> <p>5.\u5982\u4f55\u8003\u8651\u969c\u788d\u7269\uff1f</p> <p>6.\u8bf4\u660eLattice\u548cEm\u7684\u57fa\u672c\u601d \u8def\u3002</p> <p>7.Lattice\u4e3a\u4ec0\u4e48\u4f7f\u7528\u4e94\u6b21\u591a\u9879\u5f0f\uff1f\u591a\u9879\u5f0f\u6b21\u6570\u5bf9\u4e8e\u62df\u5408\u66f2\u7ebf\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f</p> <p>8.\u4ec0\u4e48\u662fA\u3001D\u3001RRT\uff1f\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p> <p>9.\u8bf4\u660eDijkstra\u548c\u8681\u7fa4\u7b97\u6cd5\u7684\u7279\u70b9\u3002</p> <p>10.\u641c\u7d22\u7b97\u6cd5\u6709\u54ea\u4e9b\uff0c\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p> <p>11.\u4ec0\u4e48\u662f\u8f68\u8ff9\u751f\u6210\u7b97\u6cd5\uff1f\uff08\u66f2\u7ebf\uff09</p> <p>12.hybrid Astar\u7b97\u6cd5\u6d41\u7a0b\u53ca\u5e94\u7528</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#_2","title":"\u4e8c.\u63a7\u5236\u7b97\u6cd5","text":"<p>1.\u89c4\u5212\u548c\u63a7\u5236\u7684\u5173\u7cfb\uff1f\u5982\u4f55\u76f8\u4e92\u914d\u5408\u5f71\u54cd\u7684\uff1f</p> <p>2.\u4ec0\u4e48\u662f\u8fd0\u52a8\u63a7\u5236\uff1f\u63a7\u5236\u5177\u4f53\u63a7\u5236\u4e86\u4ec0\u4e48\uff0c\u8f93\u5165\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u8868\u73b0\u5230\u8f66\u8f86\u72b6\u6001\u4e0a\u53c8\u662f\u600e\u6837\u7684\uff1f</p> <p>3.\u4ec0\u4e48\u662fPID\u3001LQR\u3001MPC\u7b97\u6cd5\uff1f\u7528\u9014\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f</p> <p>MPC 1\uff09\u5bf9\u4e8e\u673a\u5668\u4eba\u800c\u8a00\uff0c\u662f\u4f4d\u7f6e\u548c\u529b\u3002 X = X + dx * t + \u00bd (u/m) * t2\uff0c\u8fdb\u800c\u8f6c\u6362\u4e3a X\u2019 = dx + (u/m) * t \u3002\u5176\u4e2d u \u6307\u7684\u662f\u5916\u90e8\u7684\u4f5c\u7528\u529b\uff0c\u76ee\u6807\u662f\uff0c\u5c3d\u91cf\u5c0f\u7684u\uff0c\u4f7f\u5f97\u9884\u6d4b\u6570\u503c\u548c\u89c2\u6d4b\u6570\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\u5c3d\u91cf\u5c0f\u3002\u8fd9\u91cc\u9762\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u4f55\u786e\u5b9a\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u9700\u8981\u8fbe\u5230\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5e94\u8be5\u662f\u65f6\u95f4\u7684\u51fd\u6570\u3002</p> <p>\u7ea6\u675f\uff1a\u822a\u5411\u89d2 +- 25\uff1b \u52a0\u901f\u5ea6 +- 1</p> <p>\u4f18\u5316\u9879\u76ee\uff1a</p> <p>1\uff09\u671f\u671b\u7684\u822a\u5411\u89d2\u4ee5\u53ca\u52a0\u901f\u5ea6\u89d2\u5ea6\u7684\u53d8\u5316\u5c3d\u91cf\u5c11\uff0c\u4e5f\u5c31\u662f\u6cb9\u8017\u4f4e\u6216\u8005\u7528\u6237\u7684\u4f53\u9a8c\u597d\uff1b</p> <p>2\uff09\u65f6\u95f4\u8d8a\u77ed\u8d8a\u597d</p> <p>\u5982\u4f55\u52a0\u4e0a\u907f\u52a8\u6001\u969c\u788d\u7269 \uff1f\uff1f</p> <p></p> <p>\u56fe Udacity \u8f66\u8f86\u573a\u666f\u4e0b\u89c4\u5212\u51fa\u6765\u7684\u822a\u5411\u89d2</p> <p></p> <p>1) MPC \u7684\u9884\u6d4b\u8f68\u8ff9\u70b9\uff0c\u5728\u4ec0\u4e48\u5730\u65b9\u8003\u8651\u4e86\u52a8\u6001\u7684\u969c\u788d\u7269\u3002</p> <p>2) \u65f6\u95f4\u6bb5\u7ea6\u675f\u5728\u4ec0\u4e48\u5730\u65b9\u4f53\u73b0 \uff1f</p> <p>3) \u53ef\u884c\u6027\u8f68\u8ff9\u5b9e\u9645\u4e0a\u662f\u591a\u6761\u7684\u66f2\u7ebf\uff0c\u5728\u8fd9\u4e9b\u66f2\u7ebf\u4e2d\u83b7\u53d6\u7684\u6700\u4f18\u89e3\u66f2\u7ebf\u3002 \u66f2\u7ebf\u5e76\u4e14\u9700\u8981\u5e73\u6ed1\u5904\u7406</p> <p>lattice : \u4f4d\u7f6e\u7684\u53ef\u884c\u89e3\u7a7a\u95f4</p> <p>TEB\u548cDWA\u90fd\u5c5e\u4e8eMPC family\u7b97\u6cd5\uff0c\u4e0eMPC\u4e00\u6837\uff0c\u57fa\u4e8e\u673a\u5668\u4eba\u7684\u59ff\u6001\u548c\u901f\u5ea6\u4ee5\u53ca\u5c40\u90e8\u73af\u5883\u56fe\u7684\u4f18\u5316\u95ee\u9898\u5728\u7279\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u91cd\u590d\u6c42\u89e3\u3002\u5728\u6bcf\u4e2a\u63a7\u5236\u5468\u671f\u4e2d\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u63a7\u5236\u53d8\u91cf\uff08 \u7ebf\u901f\u5ea6\uff0c\u89d2\u901f\u5ea6\uff09\u88ab\u53d1\u9001\u5230\u673a\u5668\u4eba\u3002</p> <p>\u6700\u7ec8\u8f6c\u6362\u4e3aQP\u7684\u4e8c\u6b21\u6c42\u89e3\u5668\u3002</p> <p>4.\u4f20\u7edfPID\u3001LQR\u3001MPC\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u6709\u54ea\u4e9b\uff1f\u5bf9\u4e8e\u7f3a\u70b9\u6709\u54ea\u4e9b\u89e3\u51b3\u65b9\u6cd5\uff1f</p> <p>5.PID\u8d85\u8c03\u5982\u4f55\u89e3\u51b3\uff0c\u79ef\u5206\u9971\u548c\u5982\u4f55\u89e3\u51b3\uff1fLQR\u5982\u4f55\u5efa\u6a21\uff0c\u72b6\u6001\u91cf\u6709\u54ea\u4e9b\uff0c\u63a7\u5236\u91cf\u6709\u54ea\u4e9b\uff1f</p> <p>6.\u5982\u4f55\u8bbe\u8ba1MPC\uff1f</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#_3","title":"\u4e09.\u8ba1\u7b97\u51e0\u4f55","text":"<p>1.\u5982\u4f55\u6c42\u70b9\u5728\u7ebf\u4e0a\u7684\u6295\u5f71\uff1f\u5982\u4f55\u6c42\u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\uff1f</p> <p>2.\u5982\u4f55\u6c42SL\u5750\u6807\u7cfb</p> <p>3.\u4e24\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\uff08\u5411\u91cf\uff09</p> <p>4.\u78b0\u649e\u68c0\u6d4b\u65b9\u6cd5</p> <p>5.\u66f2\u7ebf\uff08\u8d1d\u585e\u5c14\uff0cb\u6837\u6761\uff0c\u6b63\u5f26\u66f2\u7ebf\uff0c\u5706\u5f27\u66f2\u7ebf\uff0c\u87ba\u65cb\u66f2\u7ebf\u7b49\uff09</p> <p>6.\u4e94\u6b21\u66f2\u7ebf\u3001\u56de\u65cb\u7ebf\u3001\u4e09\u6b21\u6837\u6761\u66f2\u7ebf\u3001B\u6837\u6761\u66f2\u7ebf\u7684\u8868\u793a\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#_4","title":"\u56db.\u8f66\u8f86\u52a8\u529b\u5b66\u548c\u8fd0\u52a8\u5b66\u6a21\u578b","text":"<p>1.\u8f66\u8f86\u52a8\u529b\u5b66\u548c\u8fd0\u52a8\u5b66\u6a21\u578b\u4e0d\u540c\uff0c\u539f\u56e0\u4ee5\u53ca\u4f7f\u7528\u7684\u60c5\u51b5</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#c","title":"\u4e94.C++\u7f16\u7a0b","text":"<p>1.C++\u51fd\u6570\u6307\u9488\u6709\u54ea\u51e0\u7c7b\uff1f\u51fd\u6570\u6307\u9488\u3001lambda\u3001\u4eff\u51fd\u6570\u5bf9\u8c61\u5206\u522b\u662f\u4ec0\u4e48\uff1f</p> <p>2.\u5982\u4f55\u5229\u7528\u8c13\u8bcd\u5bf9\u7ed9\u5b9a\u5bb9\u5668\u8fdb\u884c\u81ea\u5b9a\u4e49\u6392\u5e8f\uff1f</p> <p>3.\u4f20\u9012\u5f15\u7528\u548c\u4f20\u9012\u503c\u7684\u533a\u522b\uff1f\u4f20\u9012\u5e38\u5f15\u7528\u548c\u4f20\u9012\u5f15\u7528\u4e4b\u95f4\u7684\u533a\u522b\uff1f\u4f20\u9012\u53f3\u503c\u5f15\u7528\u548c\u4f20\u9012\u5f15\u7528\u4e4b\u95f4\u7684\u533a\u522b\uff1f</p> <p>4.\u51fd\u6570\u5bf9\u8c61\u5e94\u8be5\u901a\u8fc7\u4ec0\u4e48\u4f20\u9012\uff1f</p> <p>5.\u4ec0\u4e48\u662f\u4e07\u80fd\u5f15\u7528\uff1f\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p> <p>6.\u4ec0\u4e48\u662f\u5b8c\u7f8e\u8f6c\u53d1\uff1f\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p> <p>7.std::unorded_map\u548cstd::map\u4e4b\u95f4\u7684\u5dee\u5f02\u662f\u4ec0\u4e48\uff1f</p> <p>8.\u865a\u51fd\u6570\u3001\u865a\u8868\u7684\u539f\u7406\uff1f</p> <p>9.\u5982\u4f55\u5728c++\u4e2d\u521b\u5efa\u7ebf\u7a0b\uff1f\u5982\u4f55\u5728\u7ebf\u7a0b\u95f4\u540c\u6b65\uff1f</p> <p>10.\u4e92\u65a5\u9501\u662f\u4ec0\u4e48\uff1f\u7528\u9014\u662f\u4ec0\u4e48\uff1f\u6761\u4ef6\u53d8\u91cf\u53c8\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u8981\u7528\u6761\u4ef6\u53d8\u91cf\uff1f</p> <p>11.\u667a\u80fd\u6307\u9488\u548c\u797c\u6307\u9488\u4e4b\u95f4\u7684\u5dee\u5f02\uff1f\u4e3a\u4ec0\u4e48\u8981\u7528\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\uff1f</p> <p>12.\u667a\u80fd\u6307\u9488\u5206\u54ea\u51e0\u79cd\uff1fstd::unique_ptr\uff0cstd::shared_ptr\uff0cstd::weak_ptr\u5404\u6709\u4f55\u7528\u9014\uff1f</p> <p>13.\u60ac\u6302\u6307\u9488\u4f1a\u5bfc\u81f4\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u4f55\u907f\u514d\uff1f</p> <p>14.traits\u662f\u4ec0\u4e48\uff1f\u4ec0\u4e48\u65f6\u5019\u7528traits\uff1f</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#6","title":"6 \u53c2\u8003\u7b54\u6848\uff08\u90e8\u5206\uff09","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#_5","title":"\u8f68\u8ff9\u4f18\u5316","text":"<p>1.\u8bf4\u660e\u89c4\u5212\u7b97\u6cd5\u5efa\u6a21\u8fc7\u7a0b\u3002\uff08\u5982\u4f55\u8bbe\u8ba1\u4ee3\u4ef7\u51fd\u6570\u548c\u7ea6\u675f\uff09</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>\u4ee3\u4ef7\u51fd\u6570\uff1a\u4e3b\u6d41\u7b97\u6cd5\u5728frenet\u5750\u6807\u7cfb\u4e0b\u8fdb\u884c\u89c4\u5212\uff0c\u4ee3\u4ef7\u4e5f\u8868\u793a\u5728frenet\u5750\u6807\u7cfb\u4e0b\u3002</p> <p>a) \u4ee3\u4ef7\u51fd\u6570\uff1a</p> <p>\u6a2a\u5411\u8def\u5f84\u7ef4\u5ea6\uff1aguidance+\u907f\u969c+\u5149\u6ed1</p> <p>guidance\u9879\uff1a\u76f8\u5bf9\u4e2d\u5fc3\u53c2\u8003\u7ebf\u7684\u6a2a\u5411\u504f\u79fb\u8ddd\u79bb</p> <p>\u907f\u969c\u9879\uff1a\u4e0e\u969c\u788d\u7269\u7684\u8ddd\u79bb</p> <p>\u5149\u6ed1\u9879\uff1a\u4e0e\u53c2\u8003\u7ebf\u7684heading\u5939\u89d2\uff0c\u66f2\u7387\uff08\u5bf9\u5e94\u8f68\u8ff9\u534a\u5f84\u3001\u524d\u8f6e\u8f6c\u89d2\u5927\u5c0f\uff09\uff0c\u66f2\u7387\u53d8\u5316\u7387\uff08\u5bf9\u5e94\u524d\u8f6e\u8f6c\u5411\u901f\u7387\uff09</p> <p>\u7eb5\u5411\u7ef4\u5ea6\uff1a</p> <p>guidance\u9879\uff1a\u5de1\u822a\u901f\u5ea6\u504f\u5dee</p> <p>\u8212\u9002\u6027\uff1a\u52a0\u901f\u5ea6\uff0c\u52a0\u52a0\u901f\u5ea6\u5927\u5c0f</p> <p>\u907f\u969c\uff1a\u969c\u788d\u7269\u8ddd\u79bb</p> <p>b)\u7ea6\u675f\uff1a</p> <p>\u6a2a\u5411\u8def\u5f84\uff1a\u5b89\u5168\u8303\u56f4\uff0c\u4fdd\u8bc1\u4e0d\u78b0\u649e\uff1bheading\uff0c\u786e\u4fdd\u4e0e\u53c2\u8003\u7ebf\u7684\u5939\u89d2\u4e0d\u8fc7\u5927\uff1b\u66f2\u7387\uff1a\u65b9\u5411\u76d8\u6700\u5927\u8f6c\u89d2\uff1b\u66f2\u7387\u53d8\u5316\u7387\uff1a\u8f6c\u5411\u7cfb\u7edf\u6700\u5927\u8f6c\u5411\u901f\u7387\u3002</p> <p>\u7eb5\u5411\uff1a\u5355\u8c03\u9012\u589e\u7ea6\u675f\uff0c\u4fdd\u8bc1\u4e0d\u53d1\u751f\u5012\u8f66\uff1bstation\u4e0a\u4e0b\u9650\u7ea6\u675f\uff0c\u4fdd\u8bc1\u4e0d\u53d1\u751f\u78b0\u649e\uff1b\u6700\u5927\u8f66\u901f\u7ea6\u675f\uff0c\u4fdd\u8bc1\u4e0d\u8d85\u8fc7\u8bbe\u5b9a\u76ee\u6807\u901f\u5ea6\uff1b\u52a0\u901f\u5ea6\u8fb9\u754c\u7ea6\u675f\uff1bjerk\u4e0a\u4e0b\u9650\u7ea6\u675f\u3002</p> <p>2.\u8bf4\u660e\u8f68\u8ff9\u89c4\u5212\u548c\u8def\u5f84\u89c4\u5212\u533a\u522b\u3002</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>1).\u8def\u5f84\u89c4\u5212\uff08Path/Motion Planning\uff09\uff0c\u662f\u5728\u4e0d\u8003\u8651\u4e34\u65f6\u6216\u8005\u79fb\u52a8\u7684\u969c\u788d\u7269\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9\u8f66\u8f86\u5728\u7a7a\u95f4\u4e0a\u7684\u53d8\u5316\u7684\u89c4\u5212\uff1b</p> <p>2).\u8f68\u8ff9\u89c4\u5212\uff08Trjectory Planning\uff09\u4e00\u822c\u8f68\u8ff9\u89c4\u5212\u5305\u62ec\u6a2a\u5411\u89c4\u5212\u548c\u7eb5\u5411\u89c4\u5212\uff0c\u6a2a\u5411\u89c4\u5212\u4e3b\u8981\u8f93\u51fatrajectory\u4e2d\u7684x, y, s\uff0c\u7eb5\u5411\u89c4\u5212\u4e3b\u8981\u586b\u5145\u8f68\u8ff9\u4e0a\u5404\u70b9\u671f\u671b\u901f\u5ea6ds/dt\u3002\u4e00\u822c\u6a2a\u7eb5\u89e3\u8026\u89c4\u5212\u65b9\u6848\u5148\u89c4\u5212\u6a2a\u5411\uff0c\u518d\u89c4\u5212\u7eb5\u5411\u3002</p> <p>3.\u8bf4\u660e\u89c4\u5212\u4e0e\u63a7\u5236\u7684\u533a\u522b\u3002\uff08\u66f2\u7ebf\uff09</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>1).\u89c4\u5212\u662f\u57fa\u4e8e\u73af\u5883\u4fe1\u606f\u7ed9\u51fa\u4e00\u6761\u9700\u8981\u88ab\u8ddf\u8e2a\u7684\u8f68\u8ff9\uff08\u5305\u62ec\u8def\u5f84\u53ca\u8def\u5f84\u4e0a\u7684\u901f\u5ea6\u4fe1\u606f\uff09\uff0c\u9700\u8981\u4fdd\u8bc1\u5b89\u5168\u6027\u3001\u53ef\u884c\u6027\u3001\u8212\u9002\u6027\uff1b</p> <p>2).\u63a7\u5236\u662f\u5bf9\u89c4\u5212\u51fa\u8f68\u8ff9\u8fdb\u884c\u6a2a\u5411\u3001\u7eb5\u5411\u7684\u8ddf\u8e2a\uff0c\u4f7f\u5f97\u8f66\u8f86\u5b9e\u9645\u5141\u8bb8\u6548\u679c\u5c3d\u91cf\u8d34\u8fd1\u89c4\u5212\u8f68\u8ff9\uff0c\u540c\u65f6\u4e5f\u4f1a\u518d\u6b21\u8fdb\u4e00\u6b65\u8003\u8651\u8212\u9002\u6027\u3001\u5b89\u5168\u6027\u7b49\u4f18\u5316\u76ee\u6807\u53ca\u7ea6\u675f\u3002\u4e00\u822c\u89c4\u5212\u76f8\u5bf9\u4f4e\u9891\uff0c\u63a7\u5236\u66f4\u52a0\u9ad8\u9891\u3002</p> <p>4.\u8bf4\u660eDP\u548cQP\u4f18\u5316\u7684\u65f6\u5019\u8003\u8651\u7684\u7ea6\u675f\u53ca\u4f18\u5316\u76ee\u6807\u3002</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>\u6b64\u95ee\u9898\u4ec5\u9488\u5bf9EM Planner\u67b6\u6784\uff0c\u6a2a\u5411\u4e0aDP\u4e3b\u8981\u8003\u8651\u907f\u969c\u3001\u53c2\u8003\u7ebf\u8ddd\u79bb\u3001\u8212\u9002\u6027\uff0cQP\u4e3b\u8981\u8003\u8651\u5bf9DP\u7ed3\u679c\u8ddf\u8e2a\u7684\u7cbe\u5ea6\u3001\u8212\u9002\u6027\u3002</p> <p>5.\u5982\u4f55\u8003\u8651\u969c\u788d\u7269\uff1f</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>\u4e00\u822c\u5730\uff0c\u6a2a\u5411\u8def\u5f84\u89c4\u5212\u4e3b\u8981\u8003\u8651oncoming\u969c\u788d\u7269\u4ee5\u53ca\u9759\u6001\u969c\u788d\u7269\uff1b\u7eb5\u5411\u9488\u5bf9\u52a8\u6001\u969c\u788d\u7269\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u786e\u4fdd\u5b89\u5168\u3002\u5bf9\u4e8eoncoming\u7eb5\u5411\u7ed3\u679c\u4f1a\u5728\u6a2a\u5411\u4e0a\u6295\u5f71\uff0c\u4e0b\u4e00\u5e27\u57fa\u4e8e\u65b0\u7684\u901f\u5ea6\u89c4\u5212\u7ed3\u679c\u89c4\u5212\u8def\u5f84\u3002</p> <p>6.\u8bf4\u660eLattice\u548cEm\u7684\u57fa\u672c\u601d\u8def\u3002</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>Lattice\u662f\u7f51\u683c\u5316\u91c7\u6837\u3002\u8def\u5f84\u89c4\u5212\u91c7\u6837\uff1a\u5411\u524d\u53d6\u82e5\u5e72\u4e2a\u8ddd\u79bb\uff0c\u6bcf\u4e2a\u8ddd\u79bb\u91c7\u6837\u4e0d\u540c\u6a2a\u5411\u8ddd\u79bb\uff0c\u4ece\u800c\u83b7\u5f97\u591a\u6392\u91c7\u6837\u70b9\uff0c\u4f7f\u7528\u591a\u9879\u5f0f\u8fde\u63a5\u4e0d\u540c\u6392\u91c7\u6837\u70b9\u83b7\u5f97\u5019\u9009\u8def\u5f84\uff1b\u7eb5\u5411\u89c4\u5212\u91c7\u6837\uff1a\u91c7\u6837\u591a\u5404\u524d\u65b9\u65f6\u95f4\uff0c\u6bcf\u4e2a\u65f6\u95f4\u91c7\u6837\u4e0d\u540c\u8ddd\u79bb\u5f62\u6210\u4e00\u5217\u5019\u9009\u8ddd\u79bb\uff0c\u6cbf\u65f6\u95f4\u5411\u524d\u4f7f\u7528\u591a\u9879\u5f0f\u8fde\u63a5\u5404\u5217\u5019\u9009\u8ddd\u79bb\u5f62\u6210\u5019\u9009\u8ddd\u79bb\u968f\u65f6\u95f4\u53d8\u5316\u7684\u7eb5\u5411\u66f2\u7ebf\u3002\u8def\u5f84\u4e0e\u7eb5\u5411\u89c4\u5212\u91c7\u6837\u5408\u5e76\u540e\u5f97\u5230\u5019\u9009\u8f68\u8ff9\uff0c\u6839\u636ecost\u51fd\u6570\u9009\u53d6cost\u6700\u4f4e\u7684\u6700\u4f18\u8f68\u8ff9\u8f93\u51fa\uff1b</p> <p>EM Planner\u662f\u5728Lattice\u91c7\u6837\u57fa\u7840\uff0c\u9488\u5bf9\u91c7\u6837\u7ed3\u679c\u518d\u8fdb\u884c\u4e00\u6b21\u4f18\u5316\u3002\u91c7\u6837\u53ef\u4ee5\u66f4\u5bc6\u96c6\uff0c\u76f4\u63a5\u4f7f\u7528\u76f4\u7ebf\u8fde\u63a5\uff0c\u540c\u65f6\u4f7f\u7528DP\u5411\u524d\u641c\u7d22\u63d0\u9ad8\u6548\u7387\uff1b\u4f18\u5316\u65f6\u8003\u8651\u8212\u9002\u6027\uff0c\u5e76\u8d34\u8fd1DP\u9009\u51fa\u7684\u91c7\u6837\u7ed3\u679c\u3002</p> <p>7.Lattice\u4e3a\u4ec0\u4e48\u4f7f\u7528\u4e94\u6b21\u591a\u9879\u5f0f\uff1f\u591a\u9879\u5f0f\u6b21\u6570\u5bf9\u4e8e\u62df\u5408\u66f2\u7ebf\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>\u4e94\u6b21\u591a\u9879\u5f0f\u67096\u4e2a\u7cfb\u6570\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u76840\u9636/1\u9636/2\u9636\u5bfc\u7ea6\u675f\u6b63\u597d\u662f6\u4e2a\uff0c\u5f62\u6210\u6ee1\u79e9\u77e9\u9635\uff0c\u552f\u4e00\u5730\u786e\u5b9a\u591a\u9879\u5f0f\u5404\u4e2a\u7cfb\u6570\u3002</p> <p>8.\u4ec0\u4e48\u662fA\u3001D\u3001RRT\uff1f\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>A D\u662f\u57fa\u4e8e\u641c\u7d22\u7684\u8def\u5f84\u89c4\u5212\u65b9\u6cd5\uff0cRRT\u662f\u57fa\u4e8e\u6982\u7387\u91c7\u6837\u7684\u8def\u5f84\u89c4\u5212\u65b9\u6cd5\u3002</p> <p>D \u4e3b\u8981\u5e94\u7528\u4e8e\u52a8\u6001\u73af\u5883\u4e0b\u7684\u8def\u5f84\u4f18\u5316\uff0c\u4e5f\u80fd\u517c\u5bb9\u9759\u6001\u73af\u5883\uff0cA \u53ea\u80fd\u7528\u4e8e\u9759\u6001\u73af\u5883\u4e0b\u7684\u8def\u5f84\u4f18\u5316\u3002D \u7684\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u6709\u548cDijkstra\u3001A \u76f8\u4f3c\u7684\u601d\u60f3\uff0c\u5728\u521d\u59cb\u8def\u5f84\u89c4\u5212\u7684\u8fc7\u7a0b\u4e2d\uff0c\u662f\u4e00\u4e2a\u53cd\u5411Dijkstra\u7b97\u6cd5\uff0c\u5728\u9047\u969c\u788d\u91cd\u65b0\u89c4\u5212\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u770b\u505a\u662f\u4e00\u4e2a\u542f\u53d1\u5f0f\u7b97\u6cd5A*\uff0c\u53ea\u662f\u8d77\u70b9\u662f\u4e00\u4e9b\u4e0d\u56fa\u5b9a\u7684\u70b9\uff0ch()\u5145\u5f53\u4e86\u542f\u53d1\u51fd\u6570\u7684\u89d2\u8272\u3002</p> <p>9.\u8bf4\u660eDijkstra\u548c\u8681\u7fa4\u7b97\u6cd5\u7684\u7279\u70b9\u3002</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>\u662f\u4ece\u4e00\u4e2a\u9876\u70b9\u5230\u5176\u4f59\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff0c\u89e3\u51b3\u7684\u662f\u6709\u6743\u56fe\u4e2d\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002\u4e3b\u8981\u7279\u70b9\u662f\u4ece\u8d77\u59cb\u70b9\u5f00\u59cb\uff0c\u91c7\u7528\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7b56\u7565\uff0c\u6bcf\u6b21\u904d\u5386\u5230\u59cb\u70b9\u8ddd\u79bb\u6700\u8fd1\u4e14\u672a\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u7684\u90bb\u63a5\u8282\u70b9\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7ec8\u70b9\u4e3a\u6b62\u3002</p> <p>\u8681\u7fa4\u7b97\u6cd5\u662f\u7528\u6765\u5bfb\u627e\u4f18\u5316\u8def\u5f84\u7684\u6982\u7387\u578b\u7b97\u6cd5\uff0c\u5177\u6709\u5206\u5e03\u8ba1\u7b97\u3001\u4fe1\u606f\u6b63\u53cd\u9988\u548c\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u7279\u5f81\uff0c\u672c\u8d28\u4e0a\u662f\u8fdb\u5316\u7b97\u6cd5\u4e2d\u7684\u4e00\u79cd\u542f\u53d1\u5f0f\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\u3002\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u9ad8\u590d\u6742\u5ea6\u7684\u95ee\u9898\uff0c\u53ea\u80fd\u4fdd\u8bc1\u7ed3\u679c\u662f\u8f83\u4f18\u89e3\uff0c\u96be\u4ee5\u4fdd\u8bc1\u6700\u4f18\u89e3\u3002</p> <p>10.\u641c\u7d22\u7b97\u6cd5\u6709\u54ea\u4e9b\uff0c\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>Dijkstra\u3001A\u3001Lattice\u91c7\u6837\u7b49\u3002A\u662fDijkstra\u7684\u5347\u7ea7\u7248\u672c\uff0c\u6548\u7387\u66f4\u9ad8\uff0cHybrid A\u5728\u8f6c\u5411\u7684\u91c7\u6837\u7a7a\u95f4\u5185\u8fdb\u884cA\u641c\u7d22\uff0c\u4e3b\u8981\u7528\u4e8e\u975e\u7ed3\u6784\u5316\u9053\u8def\u573a\u666f\u5982APA\u6cca\u8f66\uff1bLattice\u91c7\u6837\u66f4\u591a\u7528\u4e8e\u5c01\u95ed\u7ed3\u6784\u5316\u9053\u8def\u7684\u89c4\u5212\u3002</p> <p>11.Dijkstra\u7b97\u6cd5demo</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>Dijkstra\u662f\u4e00\u79cd\u5b8c\u5907\u4f46\u4f4e\u6548\u7684\u5411\u5468\u56f4\u5747\u5300\u6269\u5f20\u7684\u7b97\u6cd5\uff0c\u91c7\u7528\u8d2a\u5fc3\u7b97\u6cd5\u601d\u60f3\u89e3\u51b3\u6709\u6743\u56fe\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u7c7b\u4f3c\u5e7f\u5ea6\u6709\u9650\u641c\u7d22\uff1b</p> <p>A\u5f15\u5165\u542f\u53d1\u5f0f\u51fd\u6570\u7275\u5f15\u641c\u7d22\u7684\u65b9\u5411\uff0c\u63d0\u5347\u641c\u7d22\u6548\u7387\uff0c\u4f46\u641c\u7d22\u7ed3\u679c\u65e0\u6cd5\u4fdd\u8bc1\u6ee1\u8db3\u8fd0\u52a8\u5b66\u9650\u5236\uff0cHybrid A\u662f\u5728\u5411\u524d\u641c\u7d22\u65f6\u5728\u53ef\u884c\u8f6c\u89d2\u8303\u56f4\u5185\u91c7\u6837\u4e0d\u540c\u8f6c\u89d2\uff0c\u5e76\u4f7f\u7528\u8be5\u8f6c\u89d2\u5411\u524d\u79fb\u52a8\u4e00\u5b9a\u8ddd\u79bb\u83b7\u5f97\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002Hybrid A*\u641c\u7d22\u51fa\u7684\u8f6c\u89d2\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u53ef\u80fd\u5bfc\u81f4\u65b9\u5411\u76d8\u6765\u56de\u6446\u52a8\uff0c\u4e00\u822c\u548c\u9700\u8981\u518d\u8fdb\u884c\u4e00\u6b21\u66f2\u7ebf\u5149\u6ed1\u4f18\u5316\u3002</p> <p>\uff08\u53c2\u8003\u6df1\u84dd\u8bfe\u4ef6\uff09</p> <pre><code>Maintain a priority queue to store all the nodes to be expanded  \nThe priority queue is initialized with the start state XS \nAssign g(XS  )=0, and g(n)=infinite for all other nodes in the graph \nLoop \n If the queue is empty, return FALSE; break;  \n Remove the node \u201cn\u201d with the lowest g(n) from the priority queue  \n Mark node \u201cn\u201d as expanded  \n If the node \u201cn\u201d is the goal state, return TRUE; break;  \n For all unexpanded neighbors \u201cm\u201d of node \u201cn\u201d  \n If g(m) = infinite  \n g(m)= g(n) + Cnm  \n Push node \u201cm\u201d into the queue  \n If g(m) &gt; g(n) + Cnm  \n g(m)= g(n) + Cnm  \n end  \nEnd Loop\n</code></pre> <p>12.\u8f68\u8ff9\u89c4\u5212\u6240\u4f7f\u7528\u7684\u5750\u6807\u7cfb\u6709\u54ea\u4e9b\uff1f\u5b83\u4eec\u7684\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\u5206\u522b\u7528\u4e8e\u4ec0\u4e48\u573a\u666f\uff1f</p> <p>\u3010\u53c2\u8003\u56de\u7b54\u3011</p> <p>\u4e00\u822c\u6709\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3001Frenet\u5750\u6807\u7cfb2\u79cd\uff0c\u5177\u6709\u8f66\u9053\u53c2\u8003\u7ebf\u7684\u7ed3\u6784\u5316\u9053\u8def\u4e00\u822c\u53ef\u4ee5\u4f7f\u7528Frenet\u5750\u6807\u7cfb\uff0c\u964d\u4f4e\u95ee\u9898\u7684\u6570\u5b66\u590d\u6742\u5ea6\uff0c\u964d\u4f4e\u95ee\u9898\u7ef4\u5ea6\uff0c\u63d0\u5347\u6c42\u89e3\u6548\u7387\u3002\u65e0\u53c2\u8003\u7ebf\u4f4e\u901f\u975e\u7ed3\u6784\u5316\u9053\u8def\u529f\u80fd\uff08\u5982APA\uff09\u4e00\u822c\u4f7f\u7528\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3002</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#3","title":"\u9762\u7ecf3","text":"<p>\u4f5c\u8005\uff1aMrFive1001 \u94fe\u63a5\uff1ahttps://zhuanlan.zhihu.com/p/96008369 \u6765\u6e90\uff1a\u77e5\u4e4e \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002  </p> <p>4. \u6ef4\u6ef4(Offer)</p> <p>\u6ef4\u6ef4\u603b\u5171\u56db\u8f6e\u9762\u8bd5\uff0c\u4e00\u8f6e\u7535\u8bdd\u9762\u3001\u4e09\u8f6e\u73b0\u573a\u9762</p> <p>\u4e00\u9762\uff08\u7535\u8bdd\u9762\uff09\uff1a</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3001\u8f68\u8ff9\u4f18\u5316\u65b9\u6cd5\u7279\u70b9\u3001\u4e86\u89e3\u7684\u89c4\u5212\u7b97\u6cd5(10\u5206\u949f)</p> <p>Leetcode \u8df3\u8dc3\u6e38\u620f (30\u5206\u949f)</p> <p>C++\u7406\u8bba\u591a\u6001\u5c01\u88c5\u3001\u667a\u80fd\u6307\u9488\u3001emback\u548cpushback\u533a\u522b</p> <p>\u73b0\u573a\u9762\u4e00\u5171\u4e09\u9762\uff0c\u6bcf\u4e00\u8f6e\u6d41\u7a0b\u662f\u5148\u624b\u6495\u4e24\u4e2a\u4ee3\u7801\u9898\uff0c\u7136\u540e\u804a\u9879\u76ee\uff1a</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3001\u5b9e\u4e60\u7ecf\u5386</p> <p>\u901f\u5ea6\u89c4\u5212\u6d41\u7a0b\u53ca\u8003\u8651\u56e0\u7d20\u3001\u8def\u5f84\u89c4\u5212\u6d41\u7a0b\u53ca\u4ee3\u4ef7</p> <p>Lattice\u548cEm\u57fa\u672c\u601d\u8def\u3001A\u661f\u3001Dijkstra\u548c\u8681\u7fa4\u7b97\u6cd5\u7684\u7279\u70b9</p> <p>\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u7279\u70b9\u53ca\u5728\u65e0\u4eba\u9a7e\u9a76\u4e2d\u7684\u5e94\u7528</p> <p>DP\u548cQP\u4f18\u5316\u7684\u65f6\u5019\u8003\u8651\u7684\u7ea6\u675f\u53ca\u4f18\u5316\u76ee\u6807</p> <p>C++ \u7ee7\u627f\u3001\u591a\u6001\u3001\u865a\u51fd\u6570\u3001emplace\u548cpush\u7684\u533a\u522b\u3001\u62bd\u8c61\u7c7b\u3001\u667a\u80fd\u6307\u9488\u3001vector\u6269\u5bb9\u3001map\u5e95\u5c42\u3001const\u7684\u4f5c\u7528\u3001\u6307\u9488\u5f15\u7528\u6570\u7ec4\u7684\u533a\u522b\u3001public\u548cprivate\u7ee7\u627f\u7684\u7279\u70b9</p> <p>\u4e8c\u53c9\u6811\u5bfb\u627e\u6240\u6709\u6700\u6df1\u53f6\u8282\u70b9\u7684\u516c\u5171\u7236\u8282\u70b9</p> <p>\u5012\u6570\u7b2cK\u5927\u7684\u6570\u5b57</p> <p>Dijkstra\u7b97\u6cd5demo</p> <p>\u5229\u7528random\u5b9e\u73b0random</p> <p>\u4e00\u4e2aleetcode hard\u96be\u5ea6\u9898</p> <p>\u6ef4\u6ef4\u6574\u4f53\u9762\u8bd5\u6d41\u7a0b\u975e\u5e38\u7684\u9ad8\u6548\u3001\u800c\u4e14\u9762\u8bd5\u5b98\u90fd\u5f88\u4e13\u4e1a\uff0c\u6574\u4f53\u9762\u8bd5\u8fc7\u7a0b\u504f\u5411\u4e8e\u57fa\u7840\u7684\u4ee3\u7801\u80fd\u529b(\u9ed8\u9ed8\u5410\u69fd\u8c08\u85aa\u6d41\u7a0b\u975e\u5e38\u7f13\u6162\u3002)</p> <p>5. \u5546\u6c64(Offer)</p> <p>\u52a0\u4e0ahr\u9762\u603b\u51716\u9762\uff0c\u6301\u7eed\u4e863\u4e2a\u6708\u5de6\u53f3\uff0c\u53ef\u4ee5\u8bf4\u4ece\u79cb\u62db\u5f00\u59cb\u5230\u7ed3\u675f(\u6342\u8138)\u3002</p> <p>\u4e00\u9762(\u7cfb\u7edf\u7ec4)\uff1a</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3001\u5b9e\u4e60\u7ecf\u5386</p> <p>C++\u591a\u6001\u3001\u7ee7\u627f\u3001\u865a\u51fd\u6570</p> <p>\u9752\u86d9\u8d70\u53f0\u9636\u7684\u5404\u79cd\u53d8\u5f62\u7248</p> <p>\u5154\u5b50\u751f\u5b69\u5b50\uff0c\u52a8\u6001\u89c4\u5212\u548c\u516c\u5f0f\u8ba1\u7b97\u4e24\u79cd\u65b9\u6cd5</p> <p>\u4e8c\u53c9\u6811\u7684\u5206\u5c42\u6253\u5370</p> <p>\u4e8c\u9762(\u7cfb\u7edf\u7ec4)\uff1a</p> <p>\u4ee3\u7801\uff1aC++\u5feb\u6392(1min)\u3001\u4e8c\u53c9\u6811\u53d8\u6210\u6570\u5b57\u3001\u5546\u6c64\u7b14\u8bd5\u9898\u76ee(N\u4e2a\u6570\u5b57M\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5c0f\u503c)\u3001\u5355\u8c03\u6808\u2014\u2014\u8fd8\u662f\u6ca1\u8eb2\u8fc7\u7b14\u8bd5</p> <p>C++\u591a\u6001\u3001\u591a\u79cd\u667a\u80fd\u6307\u9488\u3001vector\u6269\u5bb9\u539f\u7406\u3001C++\u7684\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u8fc7\u4e86\u4e00\u904d</p> <p>\u4e09\u9762(\u89c4\u5212\u7ec4\u4ea4\u53c9\u9762)\uff1a</p> <p>\u672c\u6765\u7b80\u5386\u662f\u5206\u5230\u7cfb\u7edf\u7ec4\u7684\u3001\u7ed3\u679c\u4ea4\u53c9\u9762\u7684\u89c4\u5212\u7ec4\u624d\u662f\u6211\u60f3\u53bb\u7684\u7ec4\uff0c\u6240\u4ee5\u540e\u9762\u52a0\u4e86\u4e00\u9762</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3001\u89c4\u5212\u7b97\u6cd5\u53ca\u5982\u4f55\u8003\u8651\u969c\u788d\u7269\u3001\u89c4\u5212\u7b97\u6cd5\u7684\u4f18\u7f3a\u70b9</p> <p>FreeSpace\u7684\u4e00\u4e9b\u89c4\u5212\u3001RRT\u548cA \u661f</p> <p>\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u601d\u8def\u3001DDPG\u7684\u57fa\u672c\u601d\u8def</p> <p>\u56db\u9762(\u89c4\u5212\u7ec4)\uff1a</p> <p>\u81ea\u6211\u4ecb\u7ecd</p> <p>\u5bf9\u65e0\u4eba\u9a7e\u9a76\u516c\u53f8\u7684\u4e86\u89e3\u3001\u60f3\u53bb\u7684\u516c\u53f8</p> <p>\u7b97\u6cd5\u9898\u76ee\uff08\u6ca1\u5370\u8c61\u4e86\uff09</p> <p>Lattice\u548cEm planner\u7279\u70b9\u3001Lattice\u7f3a\u70b9\u7684\u5f25\u8865</p> <p>\u5f3a\u5316\u5b66\u4e60DDPG\u7684\u66f4\u65b0\u65b9\u5f0f\u3001\u8f93\u5165\u8f93\u51fa\u3001Buffer size\u3001\u5b66\u4e60\u7387\u7684\u5f71\u54cd</p> <p>\u5f3a\u5316\u5b66\u4e60\u7684Loss\u51fd\u6570</p> <p>\u603b\u76d1\u9762\uff1a</p> <p>\u804a\u4e86\u534a\u4e2a\u591a\u5c0f\u65f6\u5f88\u5b8f\u89c2\u7684\u4e1c\u4e1c</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#4","title":"\u9762\u7ecf4","text":"<p>https://blog.csdn.net/weixin_42301220/article/details/129327035</p>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/#5","title":"\u9762\u7ecf5\uff08\u5927\u7586\u7b14\u8bd5\uff09","text":"<ul> <li>\u7b2c\u4e00\u5757ROS\uff0c\u8003\u5bdf\u4e86ros\u7684\u57fa\u672c\u6982\u5ff5\u5982roshandler\uff0croslaunch\uff0croscore\u7b49\uff1b</li> <li>\u7b2c\u4e8c\u5757Linux\u7684\u4f7f\u7528\uff0cgdb\u8c03\u8bd5\uff0clinux\u5e38\u7528\u547d\u4ee4kill\u7b49\uff1b</li> <li>\u7b2c\u4e09\u5757\u7f16\u7a0b\uff0c\u4ee3\u7801\u9898\uff0c\u770b\u4ee3\u7801\u9009\u7b54\u6848\u3002</li> <li>\u7b2c\u56db\u5757\u8def\u5f84\u89c4\u5212\u7b97\u6cd5\uff0cA*\uff0cDijkstra\uff0c\u63d2\u503c\uff0c\u6837\u6761\u7b49\uff1b</li> <li>\u7b2c\u4e94\u5757\u6570\u5b66\uff0c\u51e0\u4f55\uff0c\u56db\u5143\u6570\uff0c\u6cdb\u51fd\uff0c\u591a\u9879\u5f0f\uff0c\u5750\u6807\u53d8\u6362\uff0c\u516c\u5f0f\u63a8\u5bfc\u7b49\u3002</li> </ul>"},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%A2%84%E6%B5%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%8E%A7%E5%88%B6/","title":"\u9884\u6d4b\u51b3\u7b56\u89c4\u5212\u63a7\u5236","text":""},{"location":"%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/%E9%A2%84%E7%9E%84%E6%8E%A7%E5%88%B6%E7%9A%84%E7%90%86%E8%A7%A3/","title":"\u9884\u7784\u63a7\u5236\u7684\u7406\u89e3","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"\u8bb0\u5f55\u6bcf\u65e5\u5de5\u4f5c","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/","title":"\u5c0f\u8f66\u57f9\u8bad","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#1","title":"1 \u4f20\u611f\u5668\u6807\u5b9a","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#11","title":"1.1\u6444\u50cf\u5934\u6807\u5b9a","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#_1","title":"\u5185\u53c2\uff08\u77eb\u6b63\u7578\u53d8\uff09","text":"<p>\u6807\u5b9a\u677f\u81ea\u52a8\u6807\u5b9a</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#_2","title":"\u5916\u53c2\uff08\u76f8\u5bf9\u4f4d\u7f6e\uff09","text":"<p>\u4e0e\u6fc0\u5149\u96f7\u8fbe\u8054\u5408\u6807\u5b9a\uff0c\u4e00\u822c\u53d615\u4e2a\u5bf9\u5e94\u70b9 </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#12","title":"1.2\u6fc0\u5149\u96f7\u8fbe\u6807\u5b9a","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#_3","title":"\u5185\u53c2","text":"<p>\u5382\u5546\u81ea\u5e26\uff0c\u4e0d\u9700\u8981\u81ea\u5df1\u6807\u5b9a</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/%E5%B0%8F%E8%BD%A6%E5%9F%B9%E8%AE%AD/#_4","title":"\u5916\u53c2","text":"<p>\u5148\u6807\u5b9a\u4e3b\u6fc0\u5149\u96f7\u8fbe\uff0c\u7136\u540e\u8054\u5408\u6807\u5b9a\u4e24\u4e2a\u89d2\u6fc0\u5149\u96f7\u8fbe\uff08\u70b9\u4e91\u62fc\u63a5\uff09 </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.11/2022%E5%B9%B411%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"10.30","text":"<ol> <li>\u89e3\u51b3\u4e86ros-carla-brige\u7684\u914d\u7f6e\u95ee\u9898(\u6ce8\u610fcatkin_make\u65f6\u5207\u6362\u5230carla\u7684python\u73af\u5883\u4e0b)</li> <li>\u89e3\u51b3\u4e86gpir\u7684\u914d\u7f6e\u95ee\u9898(\u4e3b\u8981\u662fopencv\u7684\u914d\u7f6e\u95ee\u9898)\uff1a gpir\u6784\u5efa\u65f6\u4f1a\u62a5\u627e\u4e0d\u5230opencv2\u7684\u9519\u8bef\uff0c\u53ea\u9700\u8981\u628a/usr/local/include/opencv4\u76ee\u5f55\u4e0b\u7684opencv2 copy\u4e00\u4efd\u5230/usr/local/include\uff0c\u4f7fopencv2\u548copencv4\u5e76\u5217\u5373\u53ef</li> </ol> <p>\u66f4\u6362\u9ed8\u8ba4\u7ec8\u7aef sudo update-alternatives --config x-terminal-emulator</p> <p>terminator\u5feb\u6377\u952e Alt+Up                          //\u79fb\u52a8\u5230\u4e0a\u9762\u7684\u7ec8\u7aef Alt+Down                        //\u79fb\u52a8\u5230\u4e0b\u9762\u7684\u7ec8\u7aef Alt+Left                        //\u79fb\u52a8\u5230\u5de6\u8fb9\u7684\u7ec8\u7aef Alt+Right                       //\u79fb\u52a8\u5230\u53f3\u8fb9\u7684\u7ec8\u7aef Ctrl+Shift+O                    //\u6c34\u5e73\u5206\u5272\u7ec8\u7aef Ctrl+Shift+E                    //\u5782\u76f4\u5206\u5272\u7ec8\u7aef Ctrl+Shift+Right                //\u5728\u5782\u76f4\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u53f3\u79fb\u52a8 Ctrl+Shift+Left                 //\u5728\u5782\u76f4\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u5de6\u79fb\u52a8 Ctrl+Shift+Up                   //\u5728\u6c34\u5e73\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u4e0a\u79fb\u52a8 Ctrl+Shift+Down                 //\u5728\u6c34\u5e73\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u4e0b\u79fb\u52a8</p> <p>vscode\u8df3\u8f6c\u8bbe\u7f6e\uff1a</p> <p>\u6253\u5f00\u5feb\u6377\u952e\u8bbe\u7f6e\uff1a \u641c\u7d22 go forward\u548cgo back</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.11/2022%E5%B9%B411%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#111","title":"11.1","text":"<ol> <li>\u65f6\u7a7a\u8d70\u5eca\u3001\u89c4\u5212\u76f8\u5173\u8bba\u6587\u641c\u96c6\u4e0e\u6574\u7406</li> <li>\u591a\u8fb9\u5f62\u8d70\u5eca\u63a8\u5bfc\uff0c\u76ee\u524d\u5df2\u7ecf\u89e3\u51b3\u524d\u65b9\u8f68\u8ff9\u4e3a\u51f9\u65f6\u7684\u60c5\u51b5\uff08\u51f8\u51f9\u901a\u8fc7\u52a0\u901f\u5ea6\u6765\u5224\u65ad\uff09</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.11/2022%E5%B9%B411%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#112","title":"11.2","text":"<ol> <li>\u63a8\u975e\u51f9\u7684\u516c\u5f0f</li> <li>\u770b\u4e8c\u7ef4\u65f6\u7a7a\u8d70\u5eca\u7684neolix\u4ee3\u7801</li> <li>\u770b\u8bba\u6587\uff0c\u770bgpir\u4ee3\u7801</li> <li>\u65e0\u4eba\u673a\u7684path planning\u65b9\u6cd5\u662f\u4e0d\u662f\u90fd\u53ef\u79fb\u690d\u5230\u65f6\u7a7a\u89c4\u5212\u4e0a</li> <li> <p>\u65f6\u7a7a\u8026\u5408\u7684\u4f18\u70b9 </p> </li> <li> <p>\u8f7b\u821f\u6587\u7ae0\uff1ahttps://zhuanlan.zhihu.com/p/551381336 https://mp.weixin.qq.com/s/8uqU01PmVp28ximKaHOlOg \u6709\u7684\u56fe\u5f88\u597d https://mp.weixin.qq.com/s/FJ3QPZzqBDvY8h9mAu_yIw</p> </li> <li> <p>\u5206\u6790\u76ee\u524d\u8f66\u4e0a\u641c\u4e8c\u7ef4\u8d70\u5eca\u7684\u65b9\u5f0f\u7684\u4ee3\u7801</p> </li> </ol> <p>\u4e24\u4e2a\u8def\u7ebf\uff1a \u76f4\u63a5\u641c\u8d70\u5eca\uff1a\u628a\u8d70\u5eca\u6784\u5efa\u6210DAG\u683c\u5f0f\uff0c\u76ee\u524d\u60f3\u4e0d\u5230\u592a\u597d\u7684\u65b9\u6cd5\uff08\u6211\u81ea\u5df1\u5206\u6790\uff0c\u4e3b\u8981\u662f\u5728\u4e09\u7ef4\u65f6\u7a7a\u91cc\uff0c\u6bcf\u4e00\u6bb5\u65f6\u95f4\u7684free space\u662f\u4e0d\u5b9a\u7684\uff0c\u4e0d\u60f3\u5728\u4e8c\u7ef4\u91cc\u53ea\u641c\u8def\u5f84\u90a3\u4e48\u597d\u5efa\u7acb\uff0c\u8fd9\u4e2a\u4e3b\u8981\u662f\u4eca\u5929\u770b\u4e8c\u7ef4\u8d70\u5eca\u7684\u65b9\u6cd5\u5f97\u51fa\u7684\u611f\u609f\uff09 \u76ee\u524d\u6765\u770b\uff0c\u9664\u4e86\u6628\u5929\u5206\u4eab\u7684\u90a3\u7bc7\u8bba\u6587\uff08\u628a\u81ea\u8f66\u6240\u6709\u53ef\u80fd\u7684free space\u627e\u5230\uff0c\u7136\u540e\u628a\u88ab\u5176\u4ed6\u8f66\u8f86\u8f68\u8ff9\u7ed9\u5360\u636e\u7684\u5730\u65b9\u7ed9\u5220\u6389\uff09\uff0c\u6211\u60f3\u4e0d\u5230\u592a\u597d\u7684\u65b9\u6cd5\u53bb\u6784\u5efa\u4e09\u7ef4\u65f6\u7a7a\u7684\u8d70\u5eca\u7684DAG</p> <p>\u7b2c\u4e8c\u4e2a\u8def\u7ebf\uff1a\u5148\u641c\u7c97\u8f68\u8ff9\u5728\u6784\u5efa\u8d70\u5eca\u3002 \u5176\u5b9e\u5f88\u591a\u641c\u7d22\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\uff0c\u6bd4\u5982JPS\u548c \u76ee\u524d\u60f3\u5230\u4e00\u4e2a\u601d\u8def\u662f\u516b\u53c9\u6811\uff1a</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.11/2022%E5%B9%B411%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#115","title":"11.5","text":"<ol> <li>\u9ad8\u98de\u8bba\u6587(\u5b8c\u6210)</li> <li>HPIPM\u8bba\u6587(\u5b8c\u6210)</li> <li>Octree\u8def\u5f84\u89c4\u5212\uff08Improved A* Path Planning Method Based on the Grid Map\uff09(\u5b8c\u6210)</li> <li>A*+CFS\u8bba\u6587(\u5b8c\u6210)</li> <li>\u4e8c\u7ef4\u641c\u7d22\u4ee3\u7801(\u672a\u5b8c\u6210)</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.11/2022%E5%B9%B411%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#116","title":"11.6","text":"<ol> <li>\u770b\u4e8c\u7ef4\u641c\u7d22\u4ee3\u7801</li> <li>\u6269\u5c55\u52303\u7ef4\u7684\u63a8\u5bfc</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"5.8","text":"<p>RNN\u4ee3\u7801</p> <p>GIRL\u7406\u8bba</p> <p>GAN\u4ee3\u7801</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#59","title":"5.9","text":"<p>PPO\u7b97\u6cd5\u7684\u8bc1\u660e</p> <p>TRPO/PPO\u7b14\u8bb0 \u6ed1\u52a8\u5e73\u5747</p> <p>\u5e7f\u4e49\u4f18\u52bf\u51fd\u6570</p> <p>PPO\u4ee3\u7801</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#510","title":"5.10","text":"<p>sumo\u7684\u5b66\u4e60\uff0c\u5b9e\u4f8b\u4ee3\u7801\u7684\u7f16\u5199</p> <p>MPC\u4e0eRL\u7684\u5173\u7cfb</p> <p>\u8d1d\u53f6\u65afSVM\u7684\u89c6\u89d2\u770bSVM</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#512","title":"5.12","text":"<p>gym \u7684\u5404\u79cd\u5305\u88c5\u5668</p> <p>pytorch lt\u5e93\u7684\u5b66\u4e60</p> <p>python\u9762\u5411\u5bf9\u8c61\u4e2dtyping\u7684\u5b66\u4e60</p> <p>optuna\u5b66\u4e60</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#513","title":"5.13","text":"<p>\u535a\u5f08\u8bba</p> <p>python\u7cbe\u70bc</p> <p>matplotlib\u7cbe\u70bc</p> <p>github\u521b\u5efa\u4ed3\u5e93\u53ca\u4f7f\u7528</p> <p>Dataset\u3001Tensordata\u3001Datloader\u7684\u4ee3\u7801</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#513_1","title":"5.13","text":"<p>VAE\u9879\u76ee\u4ee3\u7801\uff1a\u89c2\u6d4b\u6a21\u578b\u4e0ePF\u6ee4\u6ce2\u5668\u4ee3\u7801\u7684\u7f16\u5199</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#515","title":"5.15","text":"<p>1\u3001python\u6a21\u5757\u7f16\u7a0b\u6587\u4ef6\u8def\u5f84</p> <p>2\u3001CNN RNN MLP\u7684\u5355\u5143\u6d4b\u8bd5</p> <p>3\u3001LSTM\u505a\u4ea4\u53c9\u53e3\u63a7\u5236\u7684\u8bba\u6587\uff08\u8f93\u5165\u65f6\u5f53\u524d\u8f66\u548c\u9644\u8fd1\u8f66\u7684\u4e00\u4e2a \u72b6\u6001\u5411\u91cf\u5e8f\u5217\uff09\u3001\u8f93\u51fa\u662f\u5f53\u524d\u8f66\u7684\u63a8\u8350\u901f\u5ea6 Multi-Agent Deep Reinforcement Learning to Manage Connected Autonomous Vehicles at Tomorrow\u2019s Intersections</p> <p> </p> <p>4\u3001MPC+RL\uff0c\u7528DL\u5b66\u4e00\u4e2a\u73af\u5883\u6a21\u578b\uff0c\u7136\u540e\u968f\u673a\u6492\u70b9\u89e3MPC  Addressing crash-imminent situations caused by human driven vehicle errors in a mixed traffic stream: a model-based reinforcement learning approach for CAV</p> <p></p> <p>5\u3001\u4ea4\u53c9\u53e3MPC\u95ee\u9898\uff0c\u7531\u4e8e\u7ea6\u675f\u592a\u591a\u4e0d\u597d\u89e3\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u65e0\u7ea6\u675f\u95ee\u9898\uff0c\u7136\u540e\u7528RL\u7684\u65b9\u6cd5\u5b66\u4e60\u4e00\u4e2a\u72b6\u6001s\u5230a\u7684\u6620\u5c04\u3002\u72b6\u6001s\u88ab\u6784\u9020\u4e3a41-d\u5411\u91cf\uff0c\u75316-d\u81ea\u8f66\u72b6\u6001\u3001\u4e0e\u81ea\u8f66\u5b58\u5728\u6f5c\u5728\u51b2\u7a81\u76848\u8f86\u8f66\u8f86\u4e2d\u7684\u6bcf\u8f86\u8f66\u8f86\u76844-d\u5411\u91cf\u548c\u53c2\u8003\u8def\u5f84\u76843-d\u5411\u91cf\u7ec4\u6210\uff086+4*8+3\uff09\uff0c\u5305\u62ec\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u822a\u5411\u7684\u8ddf\u8e2a\u8bef\u5dee ,Learn collision-free self-driving skills at urban intersections with model-based reinforcement learning</p> <p></p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#516-cps","title":"5.16 CPS\u4f1a\u8bae","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#_1","title":"\u6574\u4e2a\u7814\u7a76\u7684\u6d41\u7a0b\u662f","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1","title":"1.\u5b9a\u4e49\u9700\u6c42\uff1a","text":"<p>1.\u5229\u76ca\u6538\u5173\u8005\u9700\u6c42</p> <p>2.\u5b89\u5168\u9700\u6c42</p> <p>3.\u6218\u7565\u9700\u6c42</p> <p>4.\u670d\u52a1\u9700\u6c42</p> <p>5.\u6807\u51c6\u5316\u9700\u6c42</p> <p>6.\u7cfb\u7edf\u9700\u6c42:\u4ea7\u4e1a\u7ea7\u89c4\u5212\u4e0e\u5206\u6790\uff08\u4e2d\u5fc3\u4e91\uff09\u3001\u533a\u57df\u4ea4\u901a\u5e94\u7528\uff08\u533a\u57df\u4e91\uff09\u3001\u8fb9\u7f18\u7ea7\u8f66\u8f86\u667a\u80fd\u9a7e\u9a76\u9700\u6c42\uff08\u8fb9\u7f18\u4e91\uff09</p> <p>7.\u9632\u62a4\u9700\u6c42</p> <p>8.\u9700\u6c42\u8ffd\u6eaf\u5173\u7cfb\uff08\u5efa\u7acb\u4e0d\u540c\u9700\u6c42\u4e4b\u95f4\u7684\u8ffd\u6eaf\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u753b\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\uff09</p> <p></p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2","title":"2.\u5b9a\u4e49\u529f\u80fd\uff1a\uff08\u4e0d\u540c\u573a\u666f\u5bf9\u5e94\u4e0d\u540c\u529f\u80fd\uff09","text":"<p>1.\u5b89\u5168\u529f\u80fd</p> <p>2.\u6807\u51c6\u5316\u529f\u80fd</p> <p>3.\u9632\u62a4\u529f\u80fd</p> <p>4.\u670d\u52a1\u529f\u80fd</p> <p>5.\u5229\u76ca\u6538\u5173\u8005\u529f\u80fd</p> <p>6.\u7cfb\u7edf\u529f\u80fd\uff08\u6211\u4eec\u5173\u6ce8\u7684\u91cd\u70b9\uff09\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u8f66\u8def\u534f\u540c\u667a\u80fd\u9a7e\u9a76\uff08\u53c8\u53ef\u5206\u4e3a\u9053\u8def\u5b89\u5168\u9884\u8b66\u3001\u667a\u80fd\u9a7e\u9a76\u3001\u534f\u540c\u9a7e\u9a76\uff09\uff0c\u5176\u4e2d\u9053\u8def\u5b89\u5168\u9884\u8b66\u8fd9\u4e9b\u6a21\u5757\u53c8\u53ef\u4ee5\u7ee7\u7eed\u7ec6\u5206\uff0c\u5bf9\u4e8e\u7ec4\u5185\u6d89\u53ca\u5230\u7684\u5e94\u7528\uff0c\u6211\u4eec\u628a\u4ed6\u7684\u9897\u7c92\u5ea6\u53ef\u4ee5\u505a\u7ec6\uff08\u5982\u679c\u662f\u611f\u77e5\u9ed1\u76d2\u7684\u753b\u5c31\u4e0d\u8003\u8651\u7cfb\u7edf\u5185\u90e8\u7ed3\u6784\uff0c\u5982\u679c\u662fsimulink\u6a21\u578b\uff0c\u53ef\u4ee5\u7ee7\u7eed\u7ec6\u5316\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f62\u6210\u8ffd\u6eaf\uff09\uff0c\u5bf9\u4e8e\u7ec4\u5185\u4e0d\u6d89\u53ca\u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u4e0d\u592a\u5173\u6ce8\uff0c\u4ea4\u7ed9\u5916\u5305\u3002  </p> <p>7.</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#3","title":"3.\u5b9a\u4e49\u903b\u8f91\uff1a\uff08\u5305\u542b\u5728\u529f\u80fd\u5b9a\u4e49\u4e4b\u5185\u4e86\uff0c\u5bf9\u5e94\u8f83\u7ec6\u7684\u9897\u7c92\u5ea6\uff0c\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u753b\u4e00\u4e2a\u72b6\u6001\u673a\u51fa\u6765\uff09","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#4","title":"4.\u5b9a\u4e49\u7269\u7406\u5c42\uff1a\uff08\u540c\u6837\u5728\u529f\u80fd\u5b9a\u4e49\u4e4b\u5185\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u72b6\u6001\u673a\u5185\u90e8\u66f4\u7ec6\u7684\u7269\u7406\u6a21\u578b\uff09","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#note","title":"NOTE\uff1a","text":"<p>\u675c\u8001\u5e08\u7684\u67b6\u6784\u53ef\u4ee5\u7ed9\u6211\u4eec\u76f4\u63a5\u590d\u7528\uff0c\u6211\u4eec\u9700\u8981\u7ed3\u5408\u6211\u4eec\u7684\u5e94\u7528\u518d\u5f80\u4e0b\u63a2\uff0c\u6211\u9700\u8981\u628a\u9876\u5c42\u7684\u67b6\u6784\u505a\u586b\u7a7a\uff0c\u7ed3\u5408\u6211\u4eec\u7684\u4e1c\u897f\u505a\u4e00\u4e0b\u4fee\u6539\u3002</p> <p>\u4ed6\u8fd9\u4e2a\u8f6f\u4ef6\u53ea\u80fd\u5b9a\u4e49\u4e00\u4e9b\u8ba1\u7b97\uff0c\u5982\u679c\u6d89\u53ca\u5230\u77e9\u9635\u8ba1\u7b97\u77e9\u9635\u5207\u7247\u7b49\u5c31\u4e0d\u597d\u5f04\u4e86</p> <p>\u7b97\u6cd5\u8fd8\u662f\u8981\u7528matlab\u6216\u8005python\u5199</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#517","title":"5.17","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1_1","title":"1\u7edf\u8ba1\u5b66\u4e60\u8bfe\u7a0b\u603b\u7ed3","text":"<p>1 .\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u548c\u6df1\u5ea6\u5224\u522b\u6a21\u578b\u662f\u4e0d\u540c\u7684\uff0c\u6df1\u5ea6\u5224\u522b\u6a21\u578b\u662f\u4f20\u7edf\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6bd4\u5982CNN RNN\u7b49</p> <p>2 .\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e3b\u8981\u7528\u5728\u65e0\u76d1\u7763\u4efb\u52a1\u548c\u534a\u76d1\u7763\u4efb\u52a1\u4e0a 3 .VAE\uff1a\u4e3b\u8981\u5173\u6ce8\u91cd\u53c2\u6570\u5316\u6280\u5de7</p> <p> </p> <p>4 .GAN\uff1a\u4e3b\u8981\u5173\u6ce8\u76ee\u6807\u51fd\u6570   GAN-D\u5224\u522b\u5668\u76ee\u6807\u51fd\u6570 </p> <p>  GAN-G\u751f\u6210\u5668\u76ee\u6807\u51fd\u6570 </p> <p>  GAN-\u5224\u522b\u5668\u751f\u6210\u5668\u5408\u5e76\u540e\u7684\u76ee\u6807\u51fd\u6570\uff08\u5176\u5b9e\u662f\u4e00\u79cdJS divergence between\uff09 </p> <p>4.1 GAN\u7684\u4e00\u4e9b\u524d\u6cbfTopic</p> <p>(1) \u7528\u63a7\u5236\u8bba\u62c9\u666e\u62c9\u65af\u53d8\u6362\u6765\u8fd9\u8bc1\u660e\u7a33\u5b9a\u6027</p> <p>(2) triple GAN \uff1a\u7528GAN\u6765\u89e3\u51b3\u534a\u76d1\u7763\u5b66\u4e60\u95ee\u9898</p> <p>5. FLOW\u6a21\u578b\uff1a\u4e3b\u8981\u5173\u6ce8\u53cd\u51fd\u6570\u539f\u7406</p> <p>(1) \u6211\u4eec\u6709\u4e86p(z)\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0c\u6211\u4eec\u53c8\u77e5\u9053x=g(z)\uff0c\u73b0\u5728\u6211\u4eec\u60f3\u8981\u6c42\u5f97x\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0c\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b</p> <p>  det |\u96c5\u53ef\u6bd4\u77e9\u9635| \u8868\u793a\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u884c\u5217\u5f0f\u7684\u503c </p> <p>  FLOW\u6a21\u578b\u4e00\u822c\u5047\u8bbe\u7684\u53d8\u6362\u7684\u5f62\u5f0f\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9\u96c5\u53ef\u6bd4\u77e9\u9635\u4e3a\u5bf9\u89d2\u9635\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u6a21\u578b\u7684\u8868\u793a\u80fd\u529b\u4e0d\u5f3a\uff0c\u6240\u4ee5\u9700\u8981\u591a\u53e0\u51e0\u5c42\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u79f0\u4e3a\u201c\u6d41\u201d\u6a21\u578b </p> <p>(2) FLOW\u6a21\u578b\u6709\u4e00\u4e2a\u7f3a\u9677\u5c31\u662f\uff0c\u6bcf\u53e0\u4e00\u5c42\u5c31\u8981\u91cd\u65b0reshape\u5230\u4f4e\u7ef4\uff08\u8f93\u5165\u7684\u7ef4\u5ea6\uff09\u8fd9\u662f\u4e3a\u4e86\u4fdd\u6301\u96c5\u53ef\u6bd4\u77e9\u9635\u4e3a\u5bf9\u89d2\u9635\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u7f51\u7edc\u53d8\u6210  \u80d6-&gt;\u7626-&gt;\u80d6-&gt;\u7626\u4ea4\u66ff\u7684\u5f62\u5f0f\u3002VFLOW\u6a21\u578b\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u4e0d\u8981\u6c42\u96c5\u53ef\u6bd4\u77e9\u9635\u4e3a\u5bf9\u89d2\u9635\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u66f4\u5c11\u7684\u5c42\u6570\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002\u3001 </p> <p>6. \u73e0\u7b97\uff1a\u6982\u7387\u7f16\u7a0b\u5e93\uff0c\u4ece\u6982\u7387\u56fe\u7684\u89c6\u89d2\u6765\u7f16\u7a0b</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2_1","title":"2\u5173\u4e8e\u63a7\u5236\u7684\u4e00\u4e9b\u611f\u60f3","text":"<p>7. \u5f00\u73af\u63a7\u5236\u4e0e\u95ed\u73af\u63a7\u5236</p> <p>\u5f00\u73af\u63a7\u5236\u662f\u6307\u5728\u6a21\u578b\u975e\u5e38\u7cbe\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5b9a\u521d\u59cb\u72b6\u6001\uff0c\u5bf9\u4e8e\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u6807\u72b6\u6001\uff0c\u53ef\u77e5\u76f4\u63a5\u6c42\u5f97\u4e00\u4e2a\u63a7\u5236\u5e8f\u5217\u51fa\u6765\u3002</p> <p>\u95ed\u73af\u63a7\u5236\u662f\u6307\u6bcf\u6b21\u63a7\u5236\u7684\u65f6\u5019\u53c2\u8003\u5f53\u524d\u7684\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u6709\u72b6\u6001\u53cd\u9988</p> <p>\u4e00\u4e2a\u4f8b\u5b50:</p> <p>MPC\u4e2d\u5728\u4e00\u4e2a\u65f6\u57df\u5185\u9884\u6d4b\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u5f00\u73af\u63a7\u5236\uff08\u7528\u5f53\u524d\u72b6\u6001\uff0c\u6839\u636e\u7cfb\u7edf\u6a21\u578b\uff0c\u5f80\u540e\u9884\u6d4bn\u4e2a\u72b6\u6001\uff0c\u6c42\u51fa\u4e00\u4e2a\u6709n\u4e2a\u63a7\u5236\u91cf\u7684\u5e8f\u5217\uff0c\u4f46\u662f\u53ea\u4f5c\u7528\u7b2c\u4e00\u4e2a\u63a7\u5236\u91cf\uff09</p> <p>\u5728\u65f6\u57df\u4e0e\u65f6\u57df\u4e4b\u95f4\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u73b0\u5b9e\u4e2d\u4e24\u4e2a\u72b6\u6001\uff0c\u5c5e\u4e8e\u95ed\u73af\u63a7\u5236\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u63a7\u5236\u90fd\u9700\u8981\u53c2\u8003\u5f53\u524d\u7684\u72b6\u6001\uff0c\u56e0\u6b64MPC\u53ef\u4ee5\u8bf4\u662f\u65f6\u57df\u5185\u5f00\u73af\uff0c\u6574\u4e2a\u7cfb\u7edf\u95ed\u73af</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#3_1","title":"3\u4ee3\u7801\u5b9e\u6218","text":"<p>8. \u6570\u636e\u96c6\u81ea\u5b9a\u4e49\u6d41\u7a0b(\u4e3b\u8981\u5173\u6ce8\u7ee7\u627fDataset\u7c7b\u65f6\u91cd\u5199\u7684\u65b9\u6cd5\u3001transform\u4e2d\u6570\u636e\u589e\u5e7f\u7684\u6d41\u7a0b -&gt; \u9700\u8981\u6ce8\u610f\u7684\u662f\u6570\u636e\u589e\u5f3a\u5e76\u4e0d\u4f1a\u589e\u52a0\u6570\u636e\u96c6\u7684\u6570\u91cf\uff0c\u800c\u662f\u6bcf\u6b21epoch\u65f6\u8bfb\u8fdb\u7684\u53bb\u6570\u636e\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5373\u4f7f\u4f60\u7684dataloader\u5199\u5728\u4e86epoch\u5faa\u73af\u7684\u5916\u8fb9)</p> <p>9. Auto Encoder\u7684\u4ee3\u7801\u5b9e\u73b0</p> <p>10. VAE\u7684\u4ee3\u7801\u5b9e\u73b0</p> <p>\uff08\u89c1\u9f99\u66f2\u826f\u8001\u5e08\u5b9e\u6218\u4ee3\u7801\uff0c\u9f99\u66f2\u826f\u8001\u5e08\u5b9e\u6218\u8bfe\u7a0b\uff09</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#4_1","title":"4\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22","text":"<p>11. MCTS\u7684\u6574\u4f53\u6d41\u7a0b\uff1aMCTS\u5176\u5b9e\u662f\u4e00\u79cd\u542f\u53d1\u5f0f\u641c\u7d22\uff08\u901a\u8fc7\u8f83\u5c11\u7684\u63a2\u7d22\u6b21\u6570\uff0c\u627e\u5230\u76ee\u524d\u6700\u4f18\u7684\u51b3\u7b56\uff09\uff0c\u76f8\u6bd4\u4e8e\u7a77\u4e3e\u6548\u7387\u66f4\u9ad8\uff0c\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u53ef\u80fd\u7a77\u4e3e\uff0c\u56e0\u4e3a\u63a2\u7d22\u7a7a\u95f4\u975e\u5e38\u5927\u3002\u6240\u4ee5MCTS\u901a\u8fc7\u4e00\u79cd\u9ad8\u6548\u7684\u63a2\u7d22\u65b9\u5f0f\uff0c\u5728\u8f83\u5c11\u6a21\u62df\u6b21\u6570\u4e0b\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u4e00\u79cd\u8fd1\u4f3c\u6700\u4f18\u7684\u51b3\u7b56\u3002</p> <p>\u6838\u5fc3\u601d\u60f3\u5728UCB\u503c\u7684\u9009\u62e9\u4e0a</p> <p>\u4eceUCB\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u63a2\u7d22\u6811\u7684\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d:</p> <p>\u4e00\u65b9\u9762\u6211\u5e0c\u671b\u9009\u62e9\u4ef7\u503c\u8f83\u5927\u7684\u8282\u70b9</p> <p>\u4e00\u65b9\u9762\u6211\u4e5f\u5e0c\u671b\u9009\u62e9\u6ca1\u6709\u63a2\u7d22\u8fc7\u7684\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\\(n_i\\)(\u88ab\u63a2\u7d22\u7684\u6b21\u6570)\u8f83\u5c0f\u7684\u8282\u70b9\uff08\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u4e00\u5473\u9009\u62e9\u4ef7\u503c\u8f83\u5927\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679cUCB\u53ea\u5305\u62ecV\uff0c\u4e00\u4e9b\u6ca1\u6709\u88ab\u63a2\u7d22\u7684\u8282\u70b9V\u521d\u59cb\u503c\u4e3a0\uff0c\u90a3\u4e48\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u63a2\u7d22\uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\uff09  </p> <p>\u7b97\u6cd5\u7684\u7ec8\u6b62\u6761\u4ef6:\u53ef\u4ee5\u5230\u8fbe\u4e00\u5b9a\u65f6\u95f4\u7ec8\u6b62\uff0c\u4e5f\u53ef\u4ee5\u8fbe\u5230\u4e00\u5b9a\u63a2\u7d22\u6b21\u6570\u7ec8\u6b62\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#518","title":"5.18","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1rnn","title":"1.RNN\u7684\u4e00\u4e9b\u95ee\u9898\u590d\u76d8","text":"<p>1.RNN\u5982\u679c\u5728\u5e8f\u5217\u6bd4\u8f83\u957f\u7684\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u7684\u60c5\u51b5</p> <p>2.\u89e3\u51b3\u65b9\u6848\uff1a 1\uff09.\u89e3\u51b3\u68af\u5ea6\u7206\u70b8\uff1a \u505aclipping\uff0c\u5982\u679c\u68af\u5ea6\u5927\u4e8e\u67d0\u4e00\u4e2a\u503c\uff0c\u5c31\u628a\u5b83\u9664\u4ee5\u5b83\u7684\u6a21\uff0c\u4f46\u662f\u65b9\u5411\u4e0d\u53d8</p> <p> 2\uff09.\u89e3\u51b3\u68af\u5ea6\u6d88\u5931\uff1a LSTM(\u6bd4RNN\u8bb0\u5f97\u66f4\u957f\u4e86\uff0c\u7531\u4e8e\u5f15\u5165\u4e86\u8f93\u5165\u95e8\uff0c\u8f93\u51fa\u95e8\uff0c\u9057\u5fd8\u95e8\uff0c\u4f7f\u6c42\u68af\u5ea6\u65f6\u7684\u7d2f\u4e58\u53d8\u6210\u4e86\u7d2f\u52a0)</p> <p>  \u9057\u5fd8\u95e8</p> <p>  \u8f93\u5165\u95e8</p> <p>  \u8f93\u51fa\u95e8</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2mpc","title":"2.MPC\u7684\u4e00\u4e9b\u56de\u987e","text":"<p>1.\u6700\u4f18\u63a7\u5236\u95ee\u9898\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u5728\u7ea6\u675f\u4e0b\u6c42costfunction\u6700\u5c0f\u7684\u8f93\u5165\u91cf\u7684\u95ee\u9898\uff0c\u4e00\u822c\u5730\u8bf4\uff0c\u8003\u8651\u7684\u65f6\u57df\u662f\u65e0\u9650\u957f\u7684\uff0c\u8bd5\u56fe\u6c42\u5f97\u4e00\u4e2a\u63a7\u5236\u5e8f\u5217u\uff0c\u4f7f\u65e0\u9650\u957f\u4e0b\u7684cost\u6700\u5c0f\u3002MPC\u76f8\u5bf9\u4e8e\u6700\u4f18\u63a7\u5236\u6765\u8bf4\u53ea\u5f80\u540e\u9884\u6d4b\u4e86\u6709\u9650\u591a\u6b65\uff0c\u4e5f\u5c31\u662f\u8003\u8651N\u6b65\u4e00\u4e2a\u603b\u7684costfunction\uff0c\u5e0c\u671b\u6c42\u4e00\u4e2a\u63a7\u5236\u5e8f\u5217\u8ba9\u603b\u7684costfunction\u6700\u5c0f\uff0c\u4f46\u662f\u6700\u540e\u53ea\u5e94\u7528\u7b2c\u4e00\u4e2a\u63a7\u5236\u91cf</p> <p></p> <p>2.MPC\u7684costfunction\u4e2d\u662f\u5305\u542b\u7ec8\u6b62\u72b6\u6001\u7684\u4ee3\u4ef7\u7684</p> <p> 3.\u4e00\u822c\u6765\u8bf4MPC\u7684\u63a7\u5236\u65f6\u57df\u6bd4\u9884\u6d4b\u65f6\u57df\u5c11\u4e00\u6b65\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4e00\u4e2a\u7ec8\u6b62\u72b6\u6001\u4ee3\u4ef7\uff09\uff0c\u56e0\u4e3a\u5728\u63a7\u5236\u7684\u6700\u540e\u4e00\u6b65\uff0c\u7ed9\u5b9ak+N-1\u65f6\u523b\u7684\u63a7\u5236\u91cf\u4ee5\u540e\uff0ck+N-1\u65f6\u523b\u7684\u72b6\u6001\u4f1a\u8f6c\u79fb\u5230k+N\u65f6\u523b\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u5c31\u662f\u6700\u7ec8\u72b6\u6001\uff0c\u5b83\u4e5f\u6709\u4e00\u4e2a\u4ee3\u4ef7\u3002</p> <p>4.\u6211\u4eec\u4e4b\u6240\u4ee5\u8bf4MPC\u65e2\u80fd\u505a\u63a7\u5236\u4e5f\u80fd\u505a\u89c4\u5212\u7684\u539f\u56e0\u662f\uff1a \uff081\uff09\u5982\u679cMPC\u53ea\u662f\u8ddf\u968f\u4e00\u6761\u53c2\u8003\u8def\u5f84\uff08\u8fd9\u6761\u53c2\u8003\u8def\u5f84\u5df2\u7ecf\u89c4\u5212\u597d\u4e86(\u5305\u542b\u6709\u65f6\u95f4\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u7b2ck\u6b65\u7684xy\u5750\u6807\uff0c\u7b2ck+1\u6b65\u7684xy\u5750\u6807)\uff0c\u6b64\u8def\u5f84\u4e0a\u5b8c\u5168\u53ef\u884c\uff0c\u6ca1\u6709\u969c\u788d\u7269\uff09\uff0c\u7ed9\u7684\u7ea6\u675f\u662f\u5f88\u7b80\u5355\u7684\u4e00\u4e2a\u63a7\u5236\u91cf\u8303\u56f4\u7ea6\u675f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u4e00\u4e2a\u63a7\u5236\u95ee\u9898\uff0c\u8fd9\u662f\u5148\u89c4\u5212\u540e\u63a7\u5236\u7684\u95ee\u9898</p> <p>\uff082\uff09\u5982\u679cMPC\u8ddf\u968f\u4e00\u6761\u6ca1\u6709\u89c4\u5212\u597d\u7684\u5f88\u7c97\u7565\u7684\u53c2\u8003\u8def\u5f84\uff08\u4e5f\u5c31\u662frouting\u7684\u53c2\u8003\u8def\u5f84\uff0c\u6ca1\u6709\u65f6\u95f4\u4fe1\u606f\uff09\uff0c\u5728\u8ddf\u968f\u7684\u540c\u65f6\uff0c\u5bf9\u672a\u6765\u7684\u72b6\u6001\u505a\u7ea6\u675f\uff08\u6bd4\u5982\u548c\u90bb\u8f66\u8ddd\u79bb\u8981\u5927\u4e8e\u67d0\u4e00\u503c\uff0c\u4e0e\u969c\u788d\u7269\u8ddd\u79bb\u5927\u4e8e\u67d0\u4e00\u503c\u7b49\uff09\uff0c\u8fd9\u6837\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7b49\u4ef7\u4e3a\u89c4\u5212\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u7684\u7ea6\u675f\u4e0b\u6c42\u51fa\u6765\u7684\u63a7\u5236\u91cf\u76f8\u5f53\u4e8e \u89c4\u5212+\u63a7\u5236 \u7ed3\u5408\u5728\u4e00\u8d77\u6c42\u51fa\u6765\u7684\u63a7\u5236\u91cf\u3002</p> <p>5.MPC\u6b65\u9aa4  </p> <p>X(K)\u5df2\u77e5\uff0c\u6240\u4ee5\u7b2c\u4e00\u9879\u53ef\u4ee5\u7701\u7565</p> <p>  \u8981\u8ba1\u7b97\u7684\u91cf\uff1aM,C,Q_bar,R_bar,G,E,H  \u8f6c\u6362\u4e3aMATLAB\u53ef\u6c42\u89e3\u7684\u65b9\u5f0f\uff0c\u6c42\u51fa\u6765\u7684U_k\u662f\u4e00\u4e2aN\u4e2a\u503c   \uff080~N-1\uff09\u7684\u5e8f\u5217\uff0c\u53ea\u5e94\u7528\u7b2c\u4e00\u4e2a\u3002 Reference\uff1aB\u7ad9Dr_CAN</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2_2","title":"2.\u8def\u5f84\u89c4\u5212\u4e0e\u8f68\u8ff9\u4f18\u5316","text":"<p>1.\uff09\u8def\u5f84\u89c4\u5212\u4e3b\u8981\u53ea\u662frouting\uff0c\u7ed9\u51fa\u4e00\u6761\u7c97\u7565\u7684\u8ddf\u8e2a\u66f2\u7ebf\uff0c\u6ca1\u6709\u65f6\u95f4\u4fe1\u606f\uff0c\u53ea\u6709xy\u7684\u5750\u6807</p> <p>2.\uff09\u8f68\u8ff9\u4f18\u5316\u662f\u5728\u8def\u5f84\u89c4\u5212\u7684\u57fa\u7840\u4e0a\u5bf9rouing\u7684\u7ed3\u679c\u6bcf\u9694\u4e00\u6bb5\u8fdb\u884c\u53d6\u70b9\u5206\u6bb5\uff0c\u6dfb\u52a0\u65f6\u95f4\u4fe1\u606f\uff08\u6309\u7167\u8def\u5f84\u957f\u5ea6\u548c\u901f\u5ea6\uff09\uff0c\u6bcf\u6bb5\u8fdb\u884c\u591a\u9879\u5f0f\u5e73\u6ed1\uff0c\u4f7f\u5176\u80fd\u591f\u7528\u63a7\u5236\u7b97\u6cd5\u8ddf\u8e2a\u3002\u6700\u5e38\u89c1\u7684\u4f18\u5316\u65b9\u6cd5\u5c31\u662f\u5728\u7ea6\u675f\u6761\u4ef6\uff08\u5305\u62ec\u7b49\u5f0f\u7ea6\u675f\uff1a\u8d77\u59cb\u70b9\u3001\u7ec8\u6b62\u70b9\u3001\u4e2d\u95f4\u53d6\u7684\u70b9\u7684\u4f4d\u7f6e..\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff1a\u78b0\u649e\u3002\u601d\u8003\uff1a\u4e3a\u4ec0\u4e48routing\u8003\u8651\u4e86\u969c\u788d\u7269\uff0c\u5728\u4f18\u5316\u65f6\u4ecd\u8981\u6709\u78b0\u649e\u7ea6\u675f\u3002\u7b54\uff1a\u8fd9\u662f\u56e0\u4e3a1.\u53ef\u80fdrouting\u65f6\u53ea\u8003\u8651\u4e86\u9759\u6001\u969c\u788d\u7269\uff0c\u6bd4\u5982\u5728\u9759\u6001\u5730\u56fe\u4e0arouting\uff0c\u4f18\u5316\u65f6\u8fd8\u8981\u8003\u8651\u52a8\u6001\u969c\u788d\u7269\uff0c\u6bd4\u5982\u65c1\u8f66\u30022.\u53ef\u80fdrouting\u7684\u7ed3\u679c\u6b63\u597d\u5361\u5728\u4e86\u969c\u788d\u7269\u7684\u70b9\u4e0a\uff0c\u7531\u4e8e\u8f66\u662f\u6709\u4f53\u79ef\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u8fd8\u662f\u4f1a\u78b0\u649e\u3002\uff09</p> <p>\u5728\u7ea6\u675f\u4e0b\u4e0b\u6700\u5c0f\u5316snap\uff08\u4f4d\u7f6e\u7684\u56db\u9636\u5bfc\u6570\uff0c\u4e09\u9636\u5bfc\u6570\u4e3ajerk\uff09\uff0c\u6700\u540e\u89e3\u5f97\u4e00\u4e2a\u5e26\u65f6\u95f4\u4fe1\u606f\u7684\u5e73\u6ed1\u66f2\u7ebf\uff08\u5305\u542b\u6bcf\u4e00\u65f6\u523b\u7684\u4f4d\u7f6e\u901f\u5ea6\u52a0\u901f\u5ea6\uff09\u89c1\u4e0b\u56fePPT</p> <p>3\uff09\u5c31\u50cf\u4e4b\u524dMPC\u8bb2\u7684\u4e00\u6837\uff0c\u8fd9\u79cd\u601d\u8def\u5c5e\u4e8e\u5148\u8def\u5f84\u89c4\u5212\u5728\u8f68\u8ff9\u4f18\u5316\uff0c\u5176\u4e2d\u8f68\u8ff9\u4f18\u5316\u5df2\u7ecf\u8003\u8651\u4e86\u969c\u788d\u7269\u3001\u5e73\u987a\u7b49\u6761\u4ef6\uff0c\u90a3\u4e48\u5728\u8bbe\u8ba1\u63a7\u5236\u5668\u65f6\u53ea\u9700\u8981\u7b80\u5355\u7684PID\u80fd\u591f\u803f\u603b\u4f18\u5316\u597d\u7684\u8f68\u8ff9\u5373\u53ef\u3002</p> <p>4\uff09MPC\u7684\u601d\u8def\u5c31\u662f\u628a\u8f68\u8ff9\u4f18\u5316\u548c\u63a7\u5236\u4e00\u8d77\u505a\u4e86\uff0cMPC\u7684\u601d\u8def\u662f\uff0c\u5148\u628arouting\u7ed3\u679c\u5e26\u4e0a\u65f6\u95f4\u4fe1\u606f\uff0c\u7136\u540eMPC\u8ddf\u8e2a\u8fd9\u6761routing\uff0c\u7136\u540e\u518dMPC\u7684\u7ea6\u675f\u4e2d\uff0c\u628a\u5e73\u987a\u6027\uff0c\u969c\u788d\u7269\u7b49\u56e0\u7d20\u8003\u8651\u8fdb\u53bb\uff0c\u76f4\u63a5\u8fdb\u884c\u63a7\u5236\u3002\u4e5f\u5c31\u76f8\u5f53\u4e8e\u8f68\u8ff9\u4f18\u5316+PID\u8f68\u8ff9\u8ddf\u8e2a\u3002\u5176\u4e2d\u8f68\u8ff9\u4f18\u5316\u7684\u90e8\u5206\u653e\u5728\u4e86MPC\u7684\u7ea6\u675f\u91cc\u548c\u76ee\u6807\u51fd\u6570\u91cc\u3002</p> <p>  \u591a\u9879\u5f0f\u8f68\u8ff9\u4e2dp\uff08t\uff09\u662f\u4e00\u7ef4\u7684\uff0c\u53ef\u80fd\u662fx\u3001y\u6216z\uff0c\u662f\u65f6\u95f4t\u7684\u51fd\u6570\uff0c\u591a\u9879\u5f0f\u6709n+1\u9879\uff0c\u5bf9y\u3001z\u7684\u6c42\u53d6\u8fc7\u7a0b\u662f\u4e00\u6837\u7684\u3002</p> <p>  \u8fd9\u56fe\u6709\u9519\uff0c\u7b2c\u4e09\u884c\u3001\u56db\u884c\u3001\u4e94\u884c\u4e2d\u7684p\uff0c\u5e94\u8be5\u662f\\(p_i\\)\uff0c\u53f3\u4e0b\u89d2\u7684\u6ca1\u9519\uff0c\u662fp\uff0c\u4ee3\u8868\u662f\u7684\u67d0\u4e00\u4e2a\u7ef4\u5ea6\uff08\u884c\u6570\u662fk*n+1\uff0c\u5217\u6570\u4e3a1\uff09</p> <p>  \u6700\u7ec8\u5c31\u8f6c\u6362\u4e3a\u4e86\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff0c\u6c42\u89e3\u7684\u662f\u6700\u4f18\u7684p\uff0c\u4e5f\u5c31\u662f\u8fd9\u51e0\u6bb5\u8f68\u8ff9\u4e2d\u7684\u6240\u6709\u7684\u4f4d\u7f6e\u901f\u5ea6\u52a0\u901f\u5ea6\u3002</p> <p>\u6c42\u89e3\u975e\u5e38\u6162\uff0c\u4e00\u822c\u91c7\u7528\u95ed\u5f0f\u6c42\u89e3\u6cd5\uff0c\u5982\u679c\u53ea\u8003\u8651\u7b49\u5f0f\u7ea6\u675f\uff0c\u628a\u7b49\u5f0f\u7ea6\u675f\u8f6c\u5316\u5230\u76ee\u6807\u51fd\u6570\u4e2d\uff0c\u6c42\u5f97\u4e00\u4e2a\u89e3\u6790\u89e3\u3002\u4f46\u662f\u5c31\u6ca1\u529e\u6cd5\u8003\u8651\u5230\u4e0d\u7b49\u5f0f\u7ea6\u675f\u4e86\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u78b0\u649e\u95ee\u9898\uff08\u78b0\u649e\u95ee\u9898\u662f\u4e00\u4e2a\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff09\u3002</p> <p></p> <p>\u5982\u679c\u53ea\u8003\u8651\u7b49\u5f0f\u7ea6\u675f\uff0c\u5bf9\u4e8e\u78b0\u649e\u95ee\u9898\u53ef\u4ee5\u91c7\u7528\u7684\u4e00\u79cd\u89e3\u51b3\u601d\u8def\u662f\uff0c\u5728\u53ef\u80fd\u78b0\u649e\u7684\u969c\u788d\u7269\u9644\u8fd1\u589e\u52a0\u4e00\u4e9b\u5bc6\u96c6\u7684\u70b9\uff08\u4e5f\u5c31\u662f\u589e\u52a0\u7b49\u5f0f\u7ea6\u675f\u7684\u6570\u91cf\uff0c\u8fd9\u6837\u8ba9\u4f18\u5316\u7684\u8f68\u8ff9\u4e0d\u5bb9\u6613\u78b0\u5230\u969c\u788d\u7269\uff09\u3002</p> <p></p> <p>5\uff09\u8f6f\u7ea6\u675f\u7684\u8f68\u8ff9\u4f18\u5316 mini snap\u7684\u95ed\u5f0f\u6c42\u89e3\u65b9\u6cd5\u662f\u6c42\u89e3\u4e00\u4e2a\u53ea\u6709\u7b49\u5f0f\u7ea6\u675f\u7684\u4f18\u5316\u95ee\u9898\uff0c\u6ca1\u6709\u8003\u8651\u78b0\u649e\u7ea6\u675f\uff0c\u56e0\u4e3a\u78b0\u649e\u7ea6\u675f\u662f\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u6ca1\u529e\u6cd5\u6c42\u89e3\u6790\u89e3\uff08\u4e4b\u524d\u7684\u89e3\u51b3\u601d\u8def\u662f\u5728\u53ef\u80fd\u78b0\u649e\u7684\u969c\u788d\u7269\u9644\u8fd1\u589e\u52a0\u4e00\u4e9b\u5bc6\u96c6\u7684\u70b9\uff08\u4e5f\u5c31\u662f\u589e\u52a0\u7b49\u5f0f\u7ea6\u675f\u7684\u6570\u91cf\uff0c\u8fd9\u6837\u8ba9\u4f18\u5316\u7684\u8f68\u8ff9\u4e0d\u5bb9\u6613\u78b0\u5230\u969c\u788d\u7269\uff09\uff09\u3002</p> <p>\u53e6\u4e00\u4e2a\u89e3\u51b3\u601d\u8def\uff1a\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u80fd\u4e0d\u80fd\u628a\u4e0d\u7b49\u5f0f\u7ea6\u675f\u653e\u5230\u76ee\u6807\u51fd\u6570\u91cc\u5f53\u4f5c\u60e9\u7f5a\u9879\uff0c\u6765\u6784\u6210\u4e00\u79cd\u8f6f\u7ea6\u675f\u3002\u91c7\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\u4e0b\u9762\u5c31\u6765\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u8fd9\u79cd\u601d\u8def\u3002</p> <p></p> <p>\u6784\u5efa\u8f68\u8ff9\u7684\u66f2\u7ebf\u4ecd\u7136\u662f\u5206\u6bb5\u591a\u9879\u5f0f\u66f2\u7ebf\uff0c\u4e0d\u8fc7\u8868\u8ff0\u4e0d\u592a\u4e00\u6837\uff0c\u4e0a\u56fe\u7684t\u662f\u603b\u7684\u65f6\u95f4\uff0c\\(T_0\\),\\(T_1\\),\\(T_2\\)\u662f\u6bcf\u4e00\u6bb5\u591a\u9879\u5f0f\u66f2\u7ebf\u8d77\u70b9\u7684\u65f6\u95f4\u3002\\(f_s\\)\u662fsnap\uff0c\\(f_o\\)\u662f\u78b0\u649e\u60e9\u7f5a\uff0c\\(f_v\\)\uff0c\\(f_a\\)\u662f\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\u7684\u60e9\u7f5a\u3002\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u8f6c\u5316\u4e3a\u4e86\u65e0\u7ea6\u675f\u95ee\u9898\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\\(f_o\\)\u7684\u8bbe\u8ba1\u662f\u6709\u6280\u5de7\u7684\uff0c\u9700\u8981\u4fdd\u8bc1\u53ef\u5bfc\u3002</p> <p></p> <p>6\uff09\u8d1d\u585e\u5c14\u66f2\u7ebf\u548c\u786c\u7ea6\u675f \u5982\u679c\u7528\u591a\u9879\u5f0f\u66f2\u7ebf\u8fdb\u884c\u89c4\u5212\uff0c\u5bf9\u4e8e\u4e0d\u7b49\u5f0f\u7ea6\u675f\u5f88\u96be\u5904\u7406\uff0c\u5373\u4f7f\u628a\u5b83\u8f6c\u5316\u4e3a\u8f6f\u7ea6\u675f\uff0c\u4ecd\u7136\u53ef\u80fd\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u60f3\u5230\u7528\u8d1d\u585e\u5c14\u66f2\u7ebf\u6765\u4ee3\u66ff\u591a\u9879\u5f0f\u66f2\u7ebf\u3002</p> <p>\u5177\u4f53\u505a\u6cd5\u662f\u5148\u5f00\u8f9f\u51f8\u7a7a\u95f4\uff0c\u5728\u51f8\u7a7a\u95f4\u4e2d\u627e\u5230\u8d1d\u585e\u5c14\u66f2\u7ebf\uff08\u8fd9\u662f\u56e0\u4e3a\u8d1d\u585e\u5c14\u66f2\u7ebf\u53ef\u4ee5\u7531\u56fa\u5b9a\u4e2a\u6570\u7684\u70b9\u63a7\u5236\u751f\u6210\uff0c\u800c\u591a\u9879\u5f0f\u66f2\u7ebf\u6ca1\u6709\u8fd9\u4e2a\u6027\u8d28\uff09\uff0c\u8fdb\u884c\u6c42\u89e3\u3002\u5173\u4e8e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u52a8\u753b\u5f88\u76f4\u89c2</p> <p>\u8d1d\u585e\u5c14\u66f2\u7ebf\u52a8\u753b  \u4ece\u4e0a\u9762\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8d1d\u585e\u5c14\u66f2\u7ebf\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u591a\u9879\u5f0f\u66f2\u7ebf\u3002\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u53d8\u6362\u6210\u591a\u9879\u5f0f\u66f2\u7ebf\u3002\u8f6c\u5316\u4e3a\u591a\u9879\u5f0f\u66f2\u7ebf\u540e\uff0c\u8fdb\u884c\u8f68\u8ff9\u4f18\u5316\u7684\u8fc7\u7a0b\u5c31\u548cmini snap\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e86\u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u6c42\u89e3QP\u95ee\u9898\uff08\u5305\u62ec\u7b49\u5f0f\u7ea6\u675f\u548c\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u4f46\u662f\u53c2\u6570\u91cf\u5c11\uff0c\u5bb9\u6613\u6c42\u89e3\uff0c\u89e3\u51fa\u6765\u7684\u662f\u6bd4\u8f83\u7a00\u758f\u7684\u70b9\u63a7\u5236\u751f\u6210\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u70b9\uff09\uff0c\u4e4b\u6240\u4ee5mini snap\u4e0d\u76f4\u63a5\u89e3QP\u95ee\u9898\u662f\u56e0\u4e3a\uff0cmini snap\u89e3\u7684\u7684\u6240\u6709\u70b9\uff0c\u6bd4\u8f83\u96be\u89e3\u3002</p> <p>\u7531\u4e8e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u5bfc\u6570\u4e5f\u662f\u8d1d\u585e\u5c14\u66f2\u7ebf\uff0c\u6240\u4ee5\u5bf9\u4e8e\u901f\u5ea6\u52a0\u901f\u5ea6\u4ecd\u7136\u53ef\u4ee5\u91c7\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\u6240\u4ee5\u624d\u91c7\u7528\u95ed\u5f0f\u89e3\u3001\u8f6f\u7ea6\u675f\u7b49\u7b49</p> <p>\u5f00\u8f9f\u51f8\u7a7a\u95f4\u65f6\u4e5f\u6709\u4e00\u4e9b\u6280\u5de7\uff0c\u6bd4\u5982\u627e\u5706\u7684\u5185\u63a5\u77e9\u5f62\u3002</p> <p></p> <p>\u76ee\u6807\u51fd\u6570\u8fd8\u662f\u6700\u5c0f\u5316snap\u3002</p> <p>\u7ea6\u675f\u5305\u62ec\u7b49\u5f0f\u7ea6\u675f\u548c\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u4f46\u662f\u6c42\u89e3\u7684\u662f\u63a7\u5236\u8d1d\u585e\u5c14\u66f2\u7ebf\u751f\u6210\u7684\u63a7\u5236\u70b9\uff08\u5f88\u5c11\u7684\u4e00\u4e9b\u70b9\uff0c\u6bd4\u5982\u4e00\u6bb5\u66f2\u7ebf\u4e2d\u53ef\u80fd\u53ea\u9700\u8981\u6c42\u89e34\u4e2a\u70b9\u5373\u53ef\uff09</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#519","title":"5.19","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1_2","title":"1.\u9884\u6d4b\u4e0e\u89c4\u5212\u4e4b\u95f4\u7684\u5173\u7cfb","text":"<p>\u89c4\u5212\u6a21\u5757\u4e00\u822c\u4f1a\u91c7\u7528\u91c7\u6837\u7684\u65b9\u5f0f\uff0c\u4e00\u6b21\u6027\u751f\u6210\u591a\u6761\u89c4\u5212\u8f68\u8ff9\uff0c\u7136\u540e\u9009\u62e9\u66f4\u597d\u7684\u89c4\u5212\u8f68\u8ff9\u6765\u8fdb\u884c\u8ddf\u8e2a\uff08\u770b5.20\u7684\u8bb0\u5f55\u540e\u6709\u611f\uff1a\u8fd9\u79cd\u89c4\u5212\u662f\u51b3\u7b56\u89c4\u5212\u4e00\u8d77\u505a\uff0c\u4e5f\u5c31\u662f\u8bf4\u751f\u6210\u7684\u8f68\u8ff9\u4e2d\u5305\u542b\u4e0d\u540c\u7684\u51b3\u7b56\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5206\u5f00\uff0c\u5148\u57fa\u4e8e\u9884\u6d4b\u7684\u7ed3\u679c\u6765\u8bbe\u8ba1cost\u51fd\u6570\u8fdb\u884c\u51b3\u7b56\uff0c\u7136\u540e\u5728\u8fdb\u884c\u8fd0\u52a8\u89c4\u5212\uff09\u3002\u9884\u6d4b\u6a21\u5757\u53ef\u4ee5\u5e2e\u52a9\u9009\u62e9\u66f4\u597d\u7684\u8f68\u8ff9\u3002\u540c\u6837\u9884\u6d4b\u6a21\u5757\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u7684\u51b3\u7b56\u3002\uff08\u6211\u7684\u60f3\u6cd5\u662f\u6211\u4eec\u6709\u4e86routing\u8def\u7ebf\uff0c\u53ef\u4ee5\u5728routing\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5c0f\u8303\u56f4\u91c7\u6837\uff0c\u9009\u62e9\u66f4\u597d\u7684\u91c7\u6837\u8f68\u8ff9\uff0c\u7136\u540e\u8fdb\u884c\u8f68\u8ff9\u4f18\u5316-&gt;\u4e5f\u5c31\u662f\u4e4b\u524d\u603b\u7ed3\u7684mini snap\u65b9\u6cd5\uff0c\u89c4\u5212\u51fa\u4e00\u6761\u53ef\u4ee5\u8ba9\u8f66\u8f86\u8ddf\u8e2a\u7684\u8f68\u8ff9\uff0c\u91c7\u6837\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u51b3\u7b56\u7684\u8fc7\u7a0b\uff09\uff0c\u8fd9\u76f8\u5f53\u4e8e\u662f\u5728\u8def\u5f84\u89c4\u5212\u548c\u8f68\u8ff9\u4f18\u5316\u4e2d\u95f4\u63d2\u5165\u4e86\u4e00\u4e2a\u5c40\u90e8\u8def\u5f84\u91c7\u6837\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u51b3\u7b56\u7684\u8fc7\u7a0b\u3002</p> <p>\u4e00\u4e2a\u65b0\u7684idea\uff1a\u5728\u9884\u6d4b\u65f6\u8003\u8651\u81ea\u8f66\u7684\u89c4\u5212\u3002\u4e5f\u5c31\u662f\u8bf4\u4f20\u7edf\u7684\u89c4\u5212\u662f\u4e0a\u8ff0\u6240\u8bf4\u7684\uff0c\u62ff\u5230\u5468\u56f4\u8f66\u7684\u9884\u6d4b\u8f68\u8ff9\u6765\u5e2e\u52a9\u9009\u62e9\u81ea\u8f66\u66f4\u597d\u7684\u8f68\u8ff9\u3002\u4e24\u8005\u662f\u89e3\u8026\u7684\u3002\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u5148\u5bf9\u81ea\u8f66\u8fdb\u884c\u89c4\u5212\uff0c\u751f\u6210\u591a\u4e2a\u8f68\u8ff9\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u8f68\u8ff9\uff0c\u5468\u56f4\u8f66\u7684\u9884\u6d4b\u7ed3\u679c\u4e5f\u662f\u4e0d\u540c\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5047\u5982\u81ea\u8f66\u6267\u884c\u4e86\u8f68\u8ff91\uff0c\u90a3\u4e48\u5468\u56f4\u8f66\u7684\u9884\u6d4b\u7ed3\u679c\u53ef\u80fd\u662f\u9884\u6d4b1\uff0c\u5047\u5982\u81ea\u8f66\u6267\u884c\u4e86\u8f68\u8ff91\uff0c\u90a3\u4e48\u5468\u56f4\u8f66\u7684\u9884\u6d4b\u7ed3\u679c\u53ef\u80fd\u662f\u9884\u6d4b2\uff0c\u9884\u6d4b\u7ed3\u679c\u662f\u6839\u636e\u81ea\u8f66\u7684\u89c4\u5212\u7ed3\u679c\u53d8\u5316\u7684\u3002\u901a\u8fc7\u8fd9\u4e2a\u9884\u6d4b\u6765\u9009\u62e9\u81ea\u8f66\u7684\u6700\u4f18\u89c4\u5212\u8def\u5f84\uff0c\u6548\u679c\u5c06\u4f1a\u53d8\u597d\u3002 \u8fd9\u5f88\u7b26\u5408\u4eba\u7c7b\u7684\u76f4\u89c9\uff1a\u4eba\u5728\u786e\u5b9a\u53d8\u9053\u89c4\u5212\u7684\u65f6\u673a\u65f6\uff0c\u4f1a\u5047\u8bbe\u5982\u679c\u6211t1\u65f6\u523b\u53d8\u9053\uff0c\u5176\u4ed6\u8f66\u4f1a\u5f80\u54ea\u8d70\uff0c\u4ed6\u4f1a\u4e0d\u4f1a\u548c\u6211\u76f8\u649e\u3002\u5982\u679c\u6211t2\u65f6\u523b\u53d8\u9053\uff0c\u5176\u4ed6\u8f66\u4f1a\u5f80\u54ea\u8d70\uff0c\u4ed6\u4f1a\u4e0d\u4f1a\u548c\u6211\u76f8\u649e\u3002\u901a\u8fc7\u8fd9\u4e9b\u4e0d\u540c\u7684\u5bf9\u81ea\u8f66\u7684\u89c4\u5212\u5047\u8bbe\u5f97\u5230\u4e0d\u540c\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u4ece\u800c\u6307\u5bfc\u81ea\u5df1\u9009\u62e9\u6700\u4f18\u7684\u51b3\u7b56\u3002 </p> <p>\u4e4b\u524d\u7684\u5de5\u4f5c\uff1a </p> <p>\u5b8b\u6d69\u7136\u7684\u5de5\u4f5c\uff1a  \u5177\u4f53\u53c2\u8003\u6587\u7ae0PIP</p> <p>PIP\u8fd9\u7bc7\u6587\u7ae0\u53ea\u505a\u4e86\u89c4\u5212\u6307\u5bfc\u9884\u6d4b\u7684\u5de5\u4f5c\uff0c\u90a3\u4e48\u6211\u7684\u4e00\u4e2a\u60f3\u6cd5\u65f6\u80fd\u4e0d\u80fd\u505a\u4e00\u4e2a\u5de5\u4f5c\uff0c\u6765\u89c4\u5212-&gt;\u63a8\u6d4b\u9884\u6d4b-&gt;\u53cd\u8fc7\u6765\u5728\u6307\u5bfc\u89c4\u5212\u3002\u8fd9\u6837\u5de5\u4f5c\u91cd\u5fc3\u5c31\u5728\u89c4\u5212\u4e0a\u4e86\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2_3","title":"2.\u76ee\u524d\u51b3\u7b56\u89c4\u5212\u63a7\u5236\u7684\u4e3b\u6d41\u8def\u7ebf","text":"<p>\u8def\u7ebf1\uff1a \u89c1\u8bba\u6587A Survey of Motion Planning and Control Techniques for Self-Driving Urban Vehicles</p> <p>-&gt;\u957f\u8ddd\u79bb\u89c4\u5212\uff08routing\uff0c\u63a5\u4e0b\u6765\u51e0\u5206\u949f\uff0c\u4eceA\u5230B\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4ee3\u8868\u7b97\u6cd5\u6709\u8fea\u6770\u65af\u7279\u62c9\u3001A*\uff09 </p> <p>-&gt; \u884c\u4e3a\u51b3\u7b56\uff08\u57fa\u4e8erouting\u7ed3\u679c\u548c\u9884\u6d4b\u7ed3\u679c\u6765\u505a\u5bf9\u63a5\u4e0b\u6765\u7684\u51e0\u79d2\u5230\u5341\u51e0\u79d2\u505a\u5b8f\u89c2\u51b3\u7b56\uff0c\u5373\u5de6\u8f6c\u8fd8\u662f\u76f4\u884c\u8fd8\u662f\u53f3\u8f6c\uff0c\u5e76\u7ed9\u51fa\u76ee\u6807\u72b6\u6001\uff0c\u5982\u76ee\u6807\u4f4d\u7f6e\uff09\u4e3b\u6d41\u7b97\u6cd5\u662f\u72b6\u6001\u673a </p> <p>-&gt;\u884c\u4e3a\u89c4\u5212\uff08motion planning\uff09\u4e5f\u53eb\u8fd0\u52a8\u89c4\u5212,\u63a5\u4e0b\u6765\u7684\u51e0\u5341\u6beb\u79d2\u5230\u51e0\u79d2\uff0c\u5177\u4f53\u7684\u8fd0\u52a8\u8f68\u8ff9\u662f\u4ec0\u4e48\uff0c\u9700\u8981\u8003\u8651\u7ea6\u675f\u3002\u8f93\u5165\u662f\u81ea\u8f66\u4f4d\u7f6e\uff0c\u76ee\u7684\u5730\uff08\u7531\u884c\u4e3a\u51b3\u7b56\u5c42\u7ed9\u51fa\uff09\uff0c\u7ea6\u675f\uff1b\u8f93\u51fa\u662f\u6700\u4f18\u7684\u53ef\u8ddf\u968f\u7684\u8f68\u8ff9\uff08\u5305\u62ec\u5bf9\u5e94\u65f6\u95f4\u7684\u4f4d\u7f6e\u901f\u5ea6\u7b49\uff09\u3002\u884c\u4e3a\u89c4\u5212\u5176\u5b9e\u5c31\u662f\u4e4b\u524d\u603b\u7ed3\u7684\u8f68\u8ff9\u4f18\u5316\uff0c\u4f46\u662f\u884c\u4e3a\u89c4\u5212\u7684\u65b9\u6cd5\u4e0d\u6b62\u6709mini snap\uff0c\u63a5\u4e0b\u6765\u518d\u4ecb\u7ecd\u51e0\u79cd\u65b9\u6cd5\u3002  </p> <p>\u57fa\u4e8e\u91c7\u6837\u7684\u89c4\u5212\u7b97\u6cd5\u57285.19-1\u505a\u4e86\u8bf4\u660e\uff0c\u53ef\u4ee5\u901a\u8fc7\u91c7\u6837\u8bbe\u8ba1cost\u6765\u628a\u51b3\u7b56\u89c4\u5212\u4e00\u8d77\u505a\u4e86\u3002\u4e5f\u53ef\u4ee5\u5148\u51b3\u7b56\uff0c\u7136\u540e\u518d\u91c7\u6837-\u4f18\u5316\u505a\u8fd0\u52a8\u89c4\u5212  </p> <p>\u8def\u7ebf2\uff1a  \u51b3\u7b56\u89c4\u5212\u63a7\u5236\u4e00\u8d77\u505a\uff08\u5f3a\u5316\u5b66\u4e60\uff09</p> <p>\u8fd0\u52a8\u89c4\u5212\u548c\u63a7\u5236\u4e00\u8d77\u505a\uff08MPC\uff0c\u76f4\u63a5\u628a\u5e73\u987a\u6027\u7ea6\u675f\u3001\u5b89\u5168\u7ea6\u675f\u653e\u5230MPC\u7684\u7ea6\u675f\u4e2d\uff09</p> <p>\u51b3\u7b56\u89c4\u5212\u4e00\u8d77\u505a\uff1a\u6bd4\u5982\u5b8b\u6d69\u7136\u7684\u5de5\u4f5c\uff0c\u51b3\u7b56\u65f6\u5c31\u91c7\u6837\uff0c\u5229\u7528\u9884\u6d4b\u7ed3\u679c\u6c42\u51b3\u7b56\u91c7\u6837\u65f6cost\u6700\u5c0f\u7684\u8f68\u8ff9\uff0c\u7136\u540e\u5bf9\u8f68\u8ff9\u4f18\u5316\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#520","title":"5.20 \u4e0a\u8bfe\uff0c\u5904\u7406\u96f7\u8fbe\u6570\u636e\uff0c\u5199\u63a7\u5236\u4f5c\u4e1a","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#521-apollo-em-planner","title":"5.21 apollo EM planner\u7b97\u6cd5\u7684\u5b66\u4e60\u4e0e\u4ee3\u7801\u5b9e\u8df5\uff0c\u5904\u7406\u96f7\u8fbe\u6570\u636e","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#522-rcnn","title":"5.22 RCNN","text":"<p>Fast RCNN  Faster RCNN\u7684\u5b66\u4e60\u4e0e\u4ee3\u7801 1. \u53ef\u89e3\u7ea6\u675f\u4e0e\u4e0d\u53ef\u89e3\u7ea6\u675f    \u53ef\u89e3\u7ea6\u675f\u662f\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u4e0d\u53ef\u89e3\u7ea6\u675f\u662f\u7b49\u5f0f\u7ea6\u675f\u3002</p> <ol> <li>\u51e0\u4f55\u7ea6\u675f\u4e0e\u5fae\u5206\u7ea6\u675f\uff08\u4ed6\u4eec\u90fd\u662f\u4e0d\u53ef\u89e3\u7ea6\u675f\u7684\u5b50\u96c6\uff0c\u4e5f\u5c31\u662f\u90fd\u662f\u7b49\u5f0f\u7ea6\u675f\uff09    \u51e0\u4f55\u7ea6\u675f\uff1a\u4e0d\u5305\u542b\u5fae\u5206\u7684\u7b49\u5f0f\u7ea6\u675f\uff08\u4e5f\u5c31\u662f\u6ca1\u6709\u901f\u5ea6\u7ea6\u675f\uff09\uff0c\u6240\u6709\u7684\u51e0\u4f55\u7ea6\u675f\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5fae\u5206\u7ea6\u675f\u3002</li> </ol> <p>\u5fae\u5206\u7ea6\u675f\uff1a\u5305\u542b\u5fae\u5206\u7684\u7b49\u5f0f\u7ea6\u675f\uff08\u901f\u5ea6\u7ea6\u675f\uff09\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5fae\u5206\u7ea6\u675f\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u51e0\u4f55\u7ea6\u675f\u3002\u53ef\u8fdb\u4e00\u6b65\u5206\u4e3a\u53ef\u79ef\u5206\u7684\u5fae\u5206\u7ea6\u675f\uff08\u65e2\u7ea6\u675f\u4f4d\u7f6e\u4e5f\u7ea6\u675f\u901f\u5ea6\uff09\u548c\u4e0d\u53ef\u79ef\u5206\u7684\u5fae\u5206\u7ea6\u675f\uff08\u53ea\u7ea6\u675f\u901f\u5ea6\uff09</p> <ol> <li>\u5b8c\u6574\u7ea6\u675f\u548c\u4e0d\u5b8c\u6574\u7ea6\u675f 1\uff09 \u5b8c\u6574\u7ea6\u675f\u5305\u62ec\u51e0\u4f55\u7ea6\u675f\u548c\u53ef\u79ef\u5206\u7684\u5fae\u5206\u7ea6\u675f\uff08\u5373\u6240\u6709\u7684\u53ef\u79ef\u5206\u7684\u7b49\u5f0f\u7ea6\u675f\u548c\u65e0\u5fae\u5206\u7684\u7b49\u5f0f\u7ea6\u675f\uff09</li> </ol> <p>2\uff09 \u4e0d\u5b8c\u6574\u7ea6\u675f\u5305\u62ec\u4e0d\u7b49\u5f0f\u7ea6\u675f\u548c\u4e0d\u53ef\u79ef\u5206\u7684\u5fae\u5206\u7ea6\u675f\uff08\u5373\u6240\u6709\u7684\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff08\u53ef\u89e3\u7ea6\u675f\uff09\u548c\u4e0d\u53ef\u79ef\u5206\u7684\u7b49\u5f0f\u7ea6\u675f\uff09</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#525","title":"5.25","text":"<ol> <li>CPS\u4f1a\u8bae    paas:\u5e73\u53f0\u7ea7 \u4e91\u63a7\u57fa\u7840\u5e73\u53f0</li> </ol> <p>saas\uff1a\u8f6f\u4ef6\u7ea7 \u4e91\u63a7\u5e94\u7528\u5e73\u53f0</p> <p>\u675c\u8001\u5e08\u89c2\u70b9\uff1a\u8f6f\u4ef6\u6bd4\u5982\u6ee4\u6ce2\u901a\u884c\uff0c\u53ea\u80fd\u90e8\u7f72\u5728\u533a\u57df\u4e91\u4e0a\uff0c\u8fb9\u7f18\u4e91\u9700\u8981\u5411\u533a\u57df\u4e91\u4f20\u6570\u636e\u3002\u5982\u679c\u9700\u8981\u90e8\u7f72\u5728\u8fb9\u7f18\u4e91\u4e0a\uff0c\u53ea\u80fd\u5f53\u4f5c\u6807\u51c6\u4ef6\u548c\u5176\u4ed6\u6807\u51c6\u4ef6\u534f\u540c\u3002</p> <p>\u6211\u4eec\u7684\u89c2\u70b9\uff1a\u8fb9\u7f18\u4e91\u53ef\u4ee5\u76f4\u63a5\u4e0b\u53d1\u6570\u636e</p> <p>\u76ee\u524dlicense\u8fd8\u6ca1\u641e\u5b9a\uff0c\u53ea\u6709\u4e00\u4e2a30\u5929\u7684\u9002\u7528\u7248\u672c</p> <p>\u76ee\u524d\u8bf4\u7684\u57fa\u4e8e7S\u7684\u4f53\u7cfb\u67b6\u6784\u6846\u67b6\uff0c\u4e3b\u8981\u6307\u7684\u662f\u9700\u6c42\u5b9a\u4e49\u4e0a\u9075\u5faa7S\u4f53\u7cfb\u67b6\u6784\u3002</p> <p>\u76ee\u524dmagic\u4e3b\u8981\u8fd8\u662f\u903b\u8f91\u4eff\u771f\uff0c\u5bf9\u53c2\u6570\u7ea7\u522b\u7684\u4eff\u771f\u652f\u6301\u4e0d\u597d\uff0c\u5982\u679c\u6d89\u53ca\u5230\u89e3\u5fae\u5206\u79ef\u5206\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u89e3\u51b3\u4e0d\u4e86\u3002</p> <p>\u5929\u5578\uff1amagic-grid\u76ee\u524d\u8fd8\u662f\u505a\u8fc7\u7a0b\u7ba1\u7406\uff08\u524d\u671f\u7684\u8bbe\u8ba1\u90e8\u5206\uff09\uff0c\u628a\u4e4b\u524d\u7684\u6587\u6863\uff0c\u53d8\u4e86\u4e00\u4e2a\u6bd4\u8f83\u4e25\u8c28\u7684\u7ba1\u7406\u8bf4\u660e\uff0c\u5982\u679c\u6a21\u578b\u51fa\u4e86\u95ee\u9898\uff0c\u6709\u4e00\u4e9b\u6a21\u5757\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u53ef\u4ee5\u8ffd\u6eaf(\u903b\u8f91\u4eff\u771f)\u3002\u5982\u679c\u6d89\u53ca\u5230\u590d\u6742\u8ba1\u7b97\uff0c\u4f18\u5316\u6c42\u89e3\uff0c\u642d\u5efa\u6a21\u578b\uff0c\u8fd8\u662f\u9700\u8981matlab\uff0cmagic\u5e94\u8be5\u662f\u53ef\u4ee5\u8c03\u7528matlab\u7684\u6a21\u578b\uff08\u4f46\u662f\u4ed6\u4e0d\u592a\u786e\u5b9a\u8c03\u7528\u7684\u8303\u56f4\u7684\u6548\u679c\uff09\u3002 2. \u73b0\u4ee3\u63a7\u5236\u7406\u8bba\uff1a    \u4e3b\u8981\u8bb2\u4e86\u628a\u6cdb\u51fd\u5206\u89e3\u6210 \u6b27\u62c9\u62c9\u683c\u6717\u65e5\u65b9\u7a0b+\u8fb9\u754c\u6761\u4ef6\u65b9\u7a0b\u7684\u5f62\u5f0f\u3002</p> <p>\u9488\u5bf9\u6b27\u62c9\u62c9\u683c\u6717\u65e5\u65b9\u7a0b\u4e0et\uff0cx\uff0c$ dot x$ \u76f8\u5173\u6216\u8005\u65e0\u5173\u65f6\u6b27\u62c9\u62c9\u683c\u6717\u65e5\u65b9\u7a0b\u7684\u5316\u7b80\u95ee\u9898\u3002</p> <p>\u9488\u5bf9\u8fb9\u754c\u6761\u4ef6\u65b9\u7a0b\uff0c\u5206\u522b\u8ba8\u8bba\u4e86\u8d77\u59cb\u7ea6\u675f\u548c\u7ec8\u7aef\u7ea6\u675f\u90fd\u7ed9\u5b9a\u3001\u53ea\u7ed9\u5b9a\u8d77\u59cb\u7ea6\u675f\uff0c\u7ec8\u7aef\u7ea6\u675f\u81ea\u7531\u3001\u7ec8\u7aef\u7ea6\u675f\u4e3a\u4e00\u4e2a\u51fd\u6570\uff08\u8f68\u8ff9\uff09\u7b49\u5f62\u5f0f\u7684\u8fb9\u754c\u6761\u4ef6\u65b9\u7a0b\u7684\u5316\u7b80 3. FaterRCNN    1). \u6570\u636e\u9884\u5904\u7406\uff1a\u9996\u5148\u5c06\u6240\u6709\u6570\u636e\u7f29\u5c0f\u5230\uff081333\uff0c800\uff09-&gt;H \u00d7 W \u4e4b\u5185\uff0c\u8fd9\u65f6\uff0c\u6bcf\u5f20\u56fe\u7247\u7684\u5927\u5c0f\u53ea\u662f\u8fdb\u884c\u4e86\u6309\u6bd4\u4f8b\u7f29\u653e\uff0c\u8fd8\u6ca1\u6709\u7edf\u4e00\u7f29\u653e\u6210\u4e00\u4e2a\u5c3a\u5bf8\u3002    2). \u63a5\u4e0b\u6765\u5c06\u6bcf\u4e00\u4e2abatch\u4e2d\u56fe\u7247\u7f29\u653e\u5230\u7edf\u4e00\u7684\u5c3a\u5bf8\uff1a\u5177\u4f53\u505a\u6cd5\u4e3a\uff0c\u53d6\u6bcf\u4e2abatch\u4e2d\u6700\u5927\u7684\u5bbd\u548c\u9ad8\uff0c\u5bf9\u5176\u4ed6\u56fe\u7247\u505a\u586b\u5145\u3002\u8fd9\u6837\u80fd\u591f\u4fdd\u5b58\u539f\u59cb\u56fe\u50cf\u7684\u6bd4\u4f8b         3\uff09.mmdect\u4e2d\u6570\u636e\u5904\u7406\u7ba1\u9053\u662f\u901a\u8fc7\u5b57\u5178\u7684\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u5176\u4e2d\u7eff\u8272\u4ee3\u8868\u65b0\u52a0\u7684\u952e\uff0c\u6a59\u8272\u4ee3\u8868\u5bf9\u952e\u503c\u8fdb\u884c\u4e86\u66f4\u65b0     </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#530","title":"5.30","text":"<ol> <li>\u504f\u5bfc\u6570\u548c\u5bfc\u6570\u7684\u533a\u522b\uff1a\u504f\u5bfc\u6570\u53ea\u8003\u8651\u663e\u542b\u53d8\u91cf\u7684\u6c42\u5bfc\uff0c\u800cdx\uff08\u5bfc\u6570\uff09\u8fd8\u597d\u8003\u8651\u9690\u542b\u53d8\u91cf\u7684\u6c42\u5bfc\u3002</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.5/2022%E5%B9%B45%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#61","title":"6.1","text":"<ol> <li>\u67b6\u6784\u662f\u5426\u80fd\u591f\u8003\u8651\u591a\u6b21\u4fe1\u606f\u4ea4\u4e92\u7684\u8fc7\u7a0b</li> <li>\u5bf9\u4e8e\u540c\u65f6\u53d1\u751f\u7684\u4e00\u4e9b\u4efb\u52a1\uff0c\u65f6\u5e8f\u56fe\u6ca1\u6709\u529e\u6cd5\u5f88\u597d\u7684\u8868\u8ff0\uff0c\u4e00\u822c\u7528\u6d3b\u52a8\u56fe\u3002</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"6.20","text":"<ol> <li>\u5927\u6570\u636e\u7ade\u8d5b</li> <li>\u8bba\u6587\u9605\u8bfb</li> </ol> <p>\uff081\uff09\u667a\u80fd\u7f51\u8054\u6c7d\u8f66\u534f\u540c\u51b3\u7b56\u4e0e\u89c4\u5212\u6280\u672f</p> <pre><code>  ![alt \u76ee\u6807\u51fd\u6570](images/2022\u5e746\u6708\u5de5\u4f5c\u65e5\u5fd7_image_1.png) \n  ![alt \u76ee\u6807\u51fd\u6570](images/2022\u5e746\u6708\u5de5\u4f5c\u65e5\u5fd7_image_2.png)\n</code></pre>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#623","title":"6.23","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#linux-vpn","title":"linux vpn\u7684\u5b89\u88c5","text":"<p>\u6309\u7167\u7f51\u7ad9\u4e0a\u7684\u63d0\u793a\u8d70\uff0c\u4e0d\u6267\u884c\u6dfb\u52a0V2rayA\u8f6f\u4ef6\u6e90\u548c\u66f4\u65b0V2rayA\uff0c\u5b89\u88c5V2rayA\u8fd9\u51e0\u6b65\uff0c\u53c2\u8003\u77e5\u4e4e\u5e16\u5b50\u65b9\u6cd5\u4e8c\uff1a\u624b\u52a8\u5b89\u88c5 deb \u5305\u8fdb\u884c\u5b89\u88c5\u3002</p> <p> </p> <p>\u6309\u7167\u63d0\u793a\u8fdb\u5165github\uff0c\u4e0b\u8f7d\u5982\u4e0b\u6587\u4ef6\uff0c\u7136\u540e\u9700\u8981\u8fdb\u884c\u5b89\u88c5sudo apt install _xxx_vxxx.deb</p> <p> </p> <p>\u6700\u540e\u6309\u7167\u63d0\u793a\u8fdb\u884c\u5f00\u673a\u81ea\u542f\u52a8\u548c\u6d4f\u89c8\u5668\u7684\u8bbe\u7f6e\u5373\u53ef\u3002\uff08\u6ce8\u610f\uff0c\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u65f6\u5019\uff0c\u9700\u8981\u8bbe\u7f6e\u6210\u5927\u9646\u767d\u540d\u5355\uff09  </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#carlaopencda","title":"carla\u3001OPENCDA\u8054\u5408\u4eff\u771f","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1-carla","title":"1\uff09 carla\u7684\u5b89\u88c5","text":"<p>\u53c2\u8003B\u7ad9\u89c6\u9891\uff1a</p> <p>https://www.bilibili.com/video/BV13T4y1U71D/?spm_id_from=333.788&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40</p> <p>\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5b89\u88c5unreal\uff0c\u4e5f\u4e0d\u9700\u8981\u7f16\u8bd1\u5b89\u88c5\uff0c\u53ea\u9700\u8981\u5728GitHub\u4e0a\u627e\u5230realease\u7684\u5b89\u88c5\u5305\u89e3\u538b\u5373\u53ef\uff08\u5927\u7ea6\u9700\u89816G+3G\u7684\u7a7a\u95f4\uff09\u3002\u89e3\u538b\u540e\u7531\u4e8e\u540e\u7eedOPENCDA\u9700\u8981\u7528\u5230TOWN6\u5730\u56fe\uff0c\u6240\u4ee5\u6700\u597d\u628a\u9644\u52a0\u7684\u5730\u56fe\u4e5f\u4e0b\u8f7d\u4e0b\u6765\uff0c\u5c06\u5b89\u88c5\u5305\u89e3\u538b\u5230carla\u7684\u5b89\u88c5\u6587\u4ef6\u5939\u4e0b\uff0c\u66ff\u6362\u6389\u91cd\u590d\u7684\u6587\u4ef6\uff08CarlaUE4\u548cEngine\uff09        </p> <p>\u53e6\u5916\u8fd8\u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u6700\u597dconda create\u4e00\u4e2acarla\u4e13\u5c5e\u73af\u5883</p> <p> </p> <p>\u5982\u679c\u4e0a\u8ff0\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u4e0d\u597d\uff0cimport carla\u62a5\u9519(\u4f46\u662fcarla\u5b98\u65b9\u5728\u6587\u6863\u91cc\u4e00\u822c\u90fd\u52a0\u4e86try\uff0c\u53ef\u4ee5\u5f15\u5165carla\uff0c\u4f46\u662f\u5728vscode\u91cc\u4f1a\u6709\u6ce2\u6d6a\u7ebf\uff0c\u4e0d\u597d\u770b)\uff0c\u53ef\u4ee5\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\uff0c\u6d88\u9664\u6ce2\u6d6a\u7ebf\uff0c\u76f4\u63a5import carla\uff1a</p> <p>\u65b9\u6cd51\uff1a\u53ef\u80fd\u4e0d\u592a\u597d\u7528\uff0c\u5b9e\u6d4b\u65b9\u6cd52\u597d\u7528   \u4e5f\u53ef\u4ee5\u53c2\u8003\u89c6\u9891\u540e\u8fb9\u6bb5\uff1a https://www.bilibili.com/video/BV1BQ4y167dq?spm_id_from=333.788.top_right_bar_window_history.content.click&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40</p> <p>\u5728\u7ec8\u7aef\u8fd0\u884c ./CarlaUE4.sh \u5373\u53ef\u542f\u52a8carla/ \u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0c\u8fdb\u5165\u5230pythonAPI-example\u6587\u4ef6\u5939\u4e0b\uff0c\u8f93\u5165 python maual_control.py\u6d4b\u8bd5</p> <p>\u65b9\u6cd52\uff1a</p> <p>\u627e\u5230\u8be5\u6587\u4ef6\u5939\uff0c\u89e3\u538b0.9.12-py3.7.egg\u5230\u5f53\u524d\u6587\u4ef6\u5939\u3002\u7136\u540e\u5728opencda\u4e2d\u7684\uff0cscripts\u6587\u4ef6\u5939\u4e0b\u627e\u5230setup.py\uff0c\u590d\u5236\u52300.9.12-py3.7.egg\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u4e0b\u3002\u7136\u540e\u79bb\u7ebf\u5b89\u88c5carla\u5e93\u3002   </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2-opencda","title":"2\uff09 OPENCDA\u7684\u5b89\u88c5","text":"<p>\u53c2\u8003\u5b98\u7f51opencda    \u6ce8\u610f\uff1a\u5b89\u88c5pytorch\u7684\u7248\u672c\uff0ccuda\u4e00\u5b9a\u8981\u662f10.1(\u6839\u636e\u7535\u8111\u7684cuda \u7248\u672c\u6765\uff0c\u53ef\u4ee5\u5b89\u88c5\u4e0d\u540c\u7248\u672c\uff0cpytorch\u540c\u7406)\uff0cpytorch\u7248\u672c\u4e0d\u6240\u8c13\u53ea\u8981\u5927\u4e8e1.8\u5c31\u53ef\u4ee5\u3002\u5b89\u88c5yolov5\u65f6\uff0c\u53ef\u80fd\u7b49\u5f85\u65f6\u95f4\u8fc7\u957f,\u53ef\u4ee5\u53bb\u7f51\u7ad9\u4e0a\u628arequirement.txt\u4e0b\u8f7d\u4e0b\u6765</p> <p>\u8fd0\u884c./setup.sh\u65f6\u6ce8\u610f\u628a\u91cc\u8fb9\u76840.9.11\u6539\u62100.9.12</p> <p></p> <p>\u5728\u548csumo pytorch\u8054\u5408\u4eff\u771f\u65f6\u4f1a\u62a5\u9519\u6ca1\u6709traci.sumolib\u8fd9\u4e2a\u5c5e\u6027\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u53bb\u6539\u4ee3\u7801\uff0c\u627e\u5230\u62a5\u9519\u7684\u6587\u4ef6\uff0c\u5728304\u884c\u5904\uff0c\u628atraci.sumolib\u6539\u4e3asumolib</p> <p></p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#627pythonsyspath","title":"6.27\u5728python\u4e2d\u5f15\u5165\u81ea\u5df1\u6a21\u5757\u65f6\uff0csys.path\u4e2d\u52a0\u5165\u6c38\u4e45\u8def\u5f84\u7684\u529e\u6cd5\u3002","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1anacondasite-package-pth-syspath","title":"1.anaconda\u4e0b\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684site-package\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa .pth \u6587\u4ef6\uff0c\u4f1a\u81ea\u52a8\u52a0\u5165sys.path\u4e0b","text":"<p>\u6bd4\u5982\u5728\u8def\u5f84 ~/anaconda3/envs/{\u73af\u5883\u540d}/lib/python3.7/site-packages \u4e0b\u65b0\u5efa mine.pth\uff0c\u91cc\u9762\u5199\u5165 /home/stone/projects/python\uff0csys.path \u4e0b\u5c31\u4f1a\u52a0\u5165\u8be5\u8def\u5f84\u3002\u6ce8\u610fpth\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e00\u884c\u6bcf\u4e00\u4e2a\u8def\u5f84\u3002   \u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u8be5conda\u865a\u62df\u73af\u5883\u4e0b\u76f4\u63a5import carla.xxxxx\u6216\u8005import agents.xxxxxxx</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#2linux-ctrlh","title":"2.linux\u4e0b\u73b0\u5b9e\u9690\u85cf\u6587\u4ef6\u5939\u5feb\u6377\u952e ctrl+h","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#3idea","title":"3.\u8bba\u6587idea","text":"<p>\u53d1\u73b0\u7684\u95ee\u9898\uff1a * 1.\u76ee\u524d\u5927\u90e8\u5206\u8bba\u6587\u53ea\u8003\u8651\u4ea4\u53c9\u53e3\u7684\u901a\u884c\u987a\u5e8f\u51b3\u7b56\uff0c\u573a\u666f\u6bd4\u8f83\u7b80\u5355\uff0c\u6bd4\u5982\u53ea\u5728\u4e00\u6761\u9053\u8def\u4e0a\u884c\u9a76\u4e0d\u6d89\u53ca\u6362\u9053\uff08\u7ed9\u5b9a\u9a76\u5165\u548c\u9a76\u51fa\u7684\u8def\u53e3\uff09 * 2.\u4e00\u4e9b\u987a\u5e8f\u51b3\u7b56\u65b9\u6cd5\u66f4\u4e3a\u7b80\u5355\uff0c\u6bd4\u5982FIFO\uff0c\u5728\u540c\u4e00\u65f6\u95f4\uff0c\u53ea\u5141\u8bb8\u4e00\u8f86\u8f66\u901a\u8fc7\u4ea4\u53c9\u53e3\uff0c\u8fd9\u6837\u52bf\u5fc5\u4f1a\u5bfc\u81f4\u901a\u884c\u6548\u7387\u4f4e\uff0c\u4e5f\u6709\u4e00\u4e9b\u8003\u8651\u540c\u65f6\u901a\u884c\u7684\uff0c\u4f46\u662f\u4e5f\u4ec5\u4ec5\u5c40\u9650\u4e8e\u6ca1\u6709\u8def\u5f84\u4ea4\u53c9\uff0c\u800c\u6ca1\u6709\u8003\u8651\u5230\u65f6\u95f4\u4e0a\u662f\u5426\u4ea4\u53c9\uff0c\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u56e0\u4e3a\u7a7a\u95f4\u4e0a\u7684\u8def\u5f84\u4ea4\u53c9\u4f46\u662f\u65f6\u95f4\u4e0a\u53ef\u80fd\u4e0d\u4ea4\u53c9\u3002 * 3.\u6682\u65f6\u8fd8\u6ca1\u770b\u5230\u6d89\u53ca\u8fdb\u5165\u4ea4\u53c9\u8def\u53e3\u63d0\u524d\u6362\u9053\u7684\u8bba\u6587\uff08\u6d89\u53ca\u6a2a\u5411\u89c4\u5212\uff09\uff0c\u6211\u8ba4\u4e3a\u53ef\u4ee5\u5229\u7528\u4e91\u63a7\u7684\u8d85\u89c6\u8ddd\u611f\u77e5\u7684\u4f18\u52bf\uff0c\u63d0\u524d\u51b3\u7b56\u6362\u9053\uff08\u9632\u6b62\u8fdb\u5165\u7ea2\u706f\u533a\u95f4\u6216\u8005\uff0c\u9632\u6b62\u8fdb\u5165\u7b49\u5f85\u65f6\u95f4\u8f83\u957f\u7684\u8f66\u961f\uff09\uff0c\u66f4\u9ad8\u6548\u7684\u901a\u8fc7\u4ea4\u53c9\u53e3\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.6/2022%E5%B9%B46%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#629carla","title":"6.29carla\u7684\u5b66\u4e60","text":"<ul> <li> <p>carla\u4e2dwaypoint\u5341\u5206\u91cd\u8981\uff0cwaypoint.next\uff08d\uff09\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u4ee3\u8868\u8ddd\u79bb\u5f53\u524dwaypoint  \u4e3ad\u7684\u6240\u6709\u53ef\u80fd\u7684waypoint\uff0c\u6bd4\u5982\u4ee5d\u4e3a\u534a\u5f84\u753b\u4e00\u4e2a\u5706\uff0c\u5728\u5706\u5468\u56f4\u7684\u6240\u6709\u53ef\u80fd\u7684waypoint\u90fd\u5728\u8fd4\u56de\u503c\u91cc\uff0c\u8fd9\u5c31\u80fd\u5c31\u662f\u4ee3\u7801\u4e2d\u4e3a\u4ec0\u4e48waypoint.next\uff08d\uff09[0]\u4e86\u3002  </p> </li> <li> <p>carla\u4e2dmap.get_topology()\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2alist\uff0c\u6bcf\u4e2a\u5143\u7d20\u5305\u542b\u4e00\u5bf9waypoint\uff0c\u8868\u793a\u7684\u662f\u4e00\u4e2asegment\u7684\u8fdb\u5165\u70b9\u548c\u9000\u51fa\u70b9\u3002 </p> </li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"7.1","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#1-apollo","title":"1. apollo\u5f3a\u5316\u5b66\u4e60\u89c4\u5212\u7b97\u6cd5\u7684\u5b66\u4e60","text":"<p>B\u7ad9\u89c6\u9891\uff1ahttps://www.bilibili.com/video/BV1Qt4y1s7D8?spm_id_from=333.999.header_right.history_list.click&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40</p> <p>\u601d\u8def\uff1aapollo \u7528\u5f3a\u5316\u5b66\u4e60\u505a\u89c4\u5212\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u501f\u9274\u4e86Google\u7684ChauffeurNet\uff0c\u662f\u4e00\u79cdmid-mid\u7684\u6a21\u578b\uff0c\u8f93\u5165\u662f9\u4e2a\u901a\u9053\u7684\u8bed\u4e49\u5730\u56fe\uff0c\u8f93\u51fa\u662f\u4e09\u79d2\u5185\u7684\u8f68\u8ff9\u70b9\u3002</p> <p>\u5bf9\u4e8e\u5f3a\u5316\u5b66\u4e60\u8f93\u51fa\u7684\u8f68\u8ff9\u70b9\uff0c\u9700\u8981\u8fdb\u884c\u5e73\u6ed1\u548c\u8f68\u8ff9\u62fc\u63a5\uff0c\u6700\u540e\u8f93\u51fa\u7ed9\u63a7\u5236\u6a21\u5757\u3002\u5f3a\u5316\u5b66\u4e60\u89c4\u5212\u76f8\u5f53\u4e8e\u6574\u5408\u4e86\u9884\u6d4b\u548c\u89c4\u5212\u4e24\u4e2a\u6a21\u5757\uff0c\u4e0d\u518d\u4f9d\u8d56\u4e8e\u9884\u6d4b\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#710","title":"7.10","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#pomdp","title":"POMDP","text":"<ul> <li>\u72b6\u6001\u8f6c\u79fb\u8fc7\u7a0b    </li> <li>\u76ee\u6807\u4ee5\u53ca\u5b9a\u4e49   </li> <li>\u8fdb\u4e00\u6b65\u7b80\u5316       \u6709\u4e00\u4e2a\u9519\u8bef\uff08reward and observation\uff09</li> </ul> <p>     HMM\u524d\u5411\u540e\u5411\u7b97\u6cd5     </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#lqrlqg","title":"LQR\u548cLQG","text":"<ul> <li>LQR\u7684\u63a7\u5236\u4e3au=-Kx</li> <li>LQG\u76f8\u5bf9\u4e8eLQR\u6765\u8bf4\u53ea\u662f\u5f15\u5165\u4e86\u8fc7\u7a0b\u566a\u58f0\u548c\u89c2\u6d4b\u566a\u58f0\uff0c\u5148\u7528kalman\u6ee4\u6ce2\u5668\u89c2\u6d4b\u51fa\u72b6\u6001\u7684\u6700\u4f18\u4f30\u8ba1\\(x^{hat}\\)\uff0c\u7136\u540eu=-K\\(x^{hat}\\) </li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#715","title":"7.15","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#_1","title":"\u548c\u9ad8\u8001\u5e08\u4f1a\u8bae\u8ba8\u8bba\u8ba8\u8bba","text":"<ul> <li>1.\u9ad8\u7cbe\u5ea6\u5730\u56fe\u7684\u4f4d\u7f6e\u5e94\u8be5\u653e\u5230\u6620\u5c04\u548c\u9884\u6d4b\u4e4b\u95f4</li> <li>2.POMDP\u5148\u4e0d\u8003\u8651\u4e0d\u786e\u5b9a\u6027\uff0c\u5148\u8003\u8651\u5468\u8f66\u7684\u786e\u5b9a\u6027\u610f\u56fe\uff08\u5148\u628a\u6574\u4e2a\u6846\u67b6\u6d41\u7a0b\u8dd1\u901a\uff09</li> <li>3.\u628a\u4fe1\u53f7\u706f\u96c6\u6210\u5230\u7ec8\u7aef\u7ea6\u675f\u91cc</li> <li>4.\u53d6\u6d88\u51c6\u5907\u533a\u7684\u8bf4\u6cd5</li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#716","title":"7.16 \u4eca\u5929\u51fa\u53bb\u6ed1\u51b0\u4e86\uff0c\u4f11\u606f\u4e00\u5929\uff0c\u4e3b\u8981\u4e86\u89e3\u4e86\u4ee5\u4e0b\u8f68\u8ff9\u4f18\u5316","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#717","title":"7.17 \u6700\u4f18\u63a7\u5236\u7684\u89e3\u6cd5","text":"<ul> <li>\u6700\u4f18\u63a7\u5236\u7684\u89e3\u6cd5\u53ef\u4ee5\u5305\u542b\u95f4\u63a5\u6cd5\u548c\u76f4\u63a5\u6cd5\u3001\u52a8\u6001\u89c4\u5212\u3002</li> <li>\u95f4\u63a5\u6cd5\u4e3b\u8981\u6307\u7684\u662f\u5148\u4f18\u5316\u518d\u79bb\u6563\u7684\u4e00\u4e9b\u7b97\u6cd5\uff0c\u6bd4\u5982\u53d8\u5206\u6cd5\u3001\u6781\u5c0f\u503c\u539f\u7406\uff0c\u5176\u4e3b\u8981\u601d\u8def\u662f\u5f15\u5165\u534f\u6001\u53d8\u91cf\uff0c\u5efa\u7acb\u54c8\u5bc6\u987f\u51fd\u6570\uff0c\u5c06\u8f68\u8ff9\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u4e24\u70b9\u8fb9\u503c\u95ee\u9898\u3002\u95f4\u63a5\u6cd5\u7531\u4e8e\u8ba1\u7b97\u91cf\u592a\u5927\uff0c\u96be\u4ee5\u89e3\u51b3\u590d\u6742\u95ee\u9898\uff0c\u4e00\u822c\u4e0d\u7528\u3002</li> <li>\u76f4\u63a5\u6cd5\u4e3b\u8981\u6307\u7684\u662f\u5148\u79bb\u6563\u518d\u4f18\u5316\u7684\u7b97\u6cd5\uff0c\u5305\u62ec\u4e24\u5927\u7c7b\uff081\uff09\u6253\u9776\u6cd5\u548c\uff082\uff09\u914d\u70b9\u6cd5</li> <li>\u6253\u9776\u6cd5\u5305\u62ec\u5355\u6b21\u6253\u9776\u3001\u591a\u6b21\u6253\u9776\u3001MPC\u7b49\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u628a\u52a8\u529b\u5b66\u7ea6\u675f\u8f6c\u5316\u5230cost\u4e2d\uff0c\u7136\u540e\u53ea\u4f18\u5316\u63a7\u5236\u53d8\u91cf\u3002</li> <li>\u914d\u70b9\u6cd5\u5305\u62ec\u76f4\u63a5\u914d\u70b9\u3001\u7ef4\u8c31\u6cd5\u7b49\uff0c\u4e3b\u8981\u662f\u79bb\u6563\u5316\u72b6\u6001\u91cf\u548c\u63a7\u5236\u91cf\u3002\u7ea6\u675f\u4e5f\u505a\u76f8\u5e94\u7684\u79bb\u6563\u5316\u3002</li> <li>\u52a8\u6001\u89c4\u5212\u89c4\u5212\u4e00\u822c\u6307\u8fed\u4ee3\u6c42\u89e3value function</li> </ul> <p>Reference: https://zhuanlan.zhihu.com/p/340981788  CMU\u8bfe\u7a0bPPT https://zhuanlan.zhihu.com/p/492906065 https://zhuanlan.zhihu.com/p/346617896 https://blog.csdn.net/qq_35007540/article/details/105672547   \u5173\u4e8e\u914d\u70b9\u6cd5\u7684\u63cf\u8ff0 https://zhuanlan.zhihu.com/p/434984223 https://zhuanlan.zhihu.com/p/51372134  \u5173\u4e8e\u81ea\u52a8\u9a7e\u9a76\u8f68\u8ff9\u89c4\u5212\u7684\u4e00\u4e9b\u603b\u7ed3 https://blog.csdn.net/NICAI001/article/details/119270814</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#717_1","title":"7.17 \u6df1\u84dd\u5b66\u9662\u8f68\u8ff9\u4f18\u5316\u7684\u8bb2\u5ea7","text":"<ul> <li>\u4e09\u79cd\u9ad8\u81ea\u7531\u5ea6\u7684\u8f68\u8ff9\u4f18\u5316\u65b9\u6cd5\uff1a</li> <li>\uff081\uff09DDP/ILQR\uff1a\u4e0d\u80fd\u8003\u8651\u7ea6\u675f </li> <li>\uff082\uff09\u76f4\u63a5\u914d\u70b9\u6cd5\uff1a\u80fd\u8003\u8651\u7ea6\u675f\uff0c\u628a\u6700\u4f18\u63a7\u5236\u95ee\u9898\u8f6c\u5316\u4e3aNLP\u95ee\u9898\uff0c\u4f46\u662f\u6c42\u89e3\u8f83\u6162  </li> <li>\uff083\uff09\u89c4\u5212\u5373\u63a8\u65ad\uff0c\u5f15\u5165\u4e0d\u786e\u5b9a\u6027\uff0c\u76ee\u524d\u5904\u4e8e\u521d\u7ea7\u7814\u7a76\uff0c\u5927\u90e8\u5206\u53ea\u8003\u8651\u9ad8\u65af\u5206\u5e03\u3002</li> <li>MPC\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u5177\u4f53\u7684\u7b97\u6cd5 </li> </ul> <p>\u6bd4\u8f83\u597d\u7684\u4e00\u4e9b\u5b66\u4e60\u8d44\u6599\uff1a 1. \u4e00\u4e2a\u5927\u795e\u7684\u535a\u5ba2\uff0cILQR\u4ee3\u7801\u8bb2\u89e3  https://studywolf.wordpress.com/2016/02/03/the-iterative-linear-quadratic-regulator-method/ 2. MIT\u8f68\u8ff9\u4f18\u5316\u516c\u5f00\u8bfe\uff0c\u975e\u5e38\u597d\uff0c\u4e00\u5b9a\u8981\u770b\u770b http://underactuated.mit.edu/    B\u7ad9\u4e0a\u6709\u76f8\u5e94\u7684\u53cc\u8bed\u7248\u672chttps://www.bilibili.com/video/BV1LA411v75c?spm_id_from=333.999.0.0&amp;vd_source=d31a858cc26ae1ffa19e14058b339f40 3. \u4e00\u7bc7\u5173\u4e8e\u914d\u70b9\u6cd5\u7684\u5f88\u597d\u7684\u6587\u7ae0An Introduction to Trajectory Optimization: How to Do Your Own Direct Collocation\u2217  \u5728C: Users hanshuo Desktop C-ITS and \u591a\u8f66</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#718","title":"7.18 \u6df1\u84dd\u5b66\u9662\u8f68\u8ff9\u4f18\u5316\u7684\u8bb2\u5ea7","text":"<ul> <li> <p>\u770b\u4e86kelly\u5927\u795e\u7684\u8f68\u8ff9\u4f18\u5316\u8bb2\u5ea7\uff0c\u611f\u53d7\u9887\u6df1\u3002\u5728\u5927\u795e\u770b\u6765\uff0c\u6700\u4f18\u63a7\u5236\u95ee\u9898\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u90e8\u5206\uff0c\u7b2c\u4e00\u662fu=f\uff08x\uff09\uff0c\u7b2c\u4e8c\u662fu=f\uff08t\uff09\u3002\u8f68\u8ff9\u4f18\u5316\u95ee\u9898\u5c31\u5c5e\u4e8e\u7b2c\u4e8c\u79cd\u95ee\u9898\u3002\u7b2c\u4e00\u79cd\u95ee\u9898\u662f\u4e00\u79cd\u95ed\u73af\u63a7\u5236\uff0c\u5f3a\u5316\u5b66\u4e60\u5c31\u5c5e\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u662f\u4e00\u79cd\u5168\u5c40\u7b97\u6cd5\uff0c\u96be\u6c42\u89e3\uff0c\u53ea\u9002\u7528\u4e8e\u4f4e\u7ef4\u3002\u5b9e\u9645\u4e2d\uff0c\u4e00\u822c\u91c7\u7528\u7b2c\u4e8c\u79cd\uff08\u5178\u578b\u7684\u65b9\u6cd5\u5305\u62ec\u914d\u70b9\u6cd5\u548c\u6253\u9776\u6cd5\uff09    reference\uff1a http://www.matthewpeterkelly.com/index.html</p> </li> <li> <p>\u53c8\u4e86\u89e3\u4e86\u8f68\u8ff9\u89c4\u5212\u7684\u65b9\u6cd5\uff1a\uff08\u7531\u4e8e\u8f68\u8ff9\u89c4\u5212\u89e3NLP\u7684\u5b9e\u65f6\u6027\u5f88\u96be\u5f97\u5230\u4fdd\u8bc1\uff0c\u6240\u4ee5\u5f88\u96be\u8fed\u4ee3\u6c42\u89e3\u3002\u4e00\u822c\u53ea\u80fd\u79bb\u7ebf\u6c42\u89e3\u3002\u8f68\u8ff9\u4f18\u5316\u95ee\u9898\u7684\u6c42\u89e3\u4e0d\u662f\u5f88\u5927\u7684\u96be\u9898\uff0c\u96be\u5c31\u96be\u5728\u5176\u7b97\u6cd5\u7684\u5b9e\u65f6\u6027\u3002\u6211\u4eec\u524d\u9762\u8bf4\u7684\u76f4\u63a5\u6cd5\u548c\u95f4\u63a5\u6cd5\u90fd\u6d89\u53ca\u5230\u8fed\u4ee3\u6c42\u89e3\uff0c\u95ee\u9898\u7a0d\u5fae\u4e00\u590d\u6742\uff0c\u53ef\u80fd\u5c31\u4f1a\u82b1\u5341\u51e0\u79d2\u624d\u80fd\u5f97\u51fa\u89e3\u3002\u4f46\u662f\u6211\u4eec\u7684\u8bb0\u8f7d\u8ba1\u7b97\u673a\u548c\u6211\u4eec\u7684\u7b14\u8bb0\u672c\uff0c\u53f0\u5f0f\u673a\u76f8\u6bd4\uff0c\u5176\u7b97\u529b\u5c31\u5dee\u4e86\u5f88\u591a\u5f88\u591a\u3002\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5730\u9762\u7684\u8ba1\u7b97\u673a\u6c42\u89e3\uff0c\u518d\u901a\u4fe1\u7ed9\u98de\u884c\u5668\uff0c\u4f46\u8fd9\u53c8\u5b58\u5728\u4e00\u4e2a\u901a\u4fe1\u5ef6\u8fdf\uff0c\u8fd9\u53c8\u4e0d\u53ef\u884c\u4e86\uff09\u6709\u4e09\u79cd\u601d\u8def\uff1a</p> </li> <li>\uff081\uff09\u7b80\u5316\u6570\u5b66\u6a21\u578b</li> <li>\uff082\uff09\u7528\u5206\u6bb5\u591a\u9879\u5f0f\u4ee3\u66ff\u8f68\u8ff9\uff0c\u4e0d\u76f4\u63a5\u6c42\u89e3\u8f68\u8ff9\u70b9\uff0c\u800c\u662f\u95f4\u63a5\u6c42\u89e3\u591a\u9879\u5f0f\u7cfb\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u6c42\u89e3\u7ef4\u5ea6\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6c42\u89e3\u591a\u9879\u5f0f\u7cfb\u6570\u5fc5\u7136\u4f1a\u6d89\u53ca\u5230\u8fed\u4ee3\u6c42\u89e3\uff0c\u8fed\u4ee3\u6c42\u89e3\u6700\u5927\u7684\u95ee\u9898\u662f\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u521d\u503c\uff0c\u4e00\u65e6\u6211\u4eec\u63d0\u4f9b\u7684\u521d\u503c\u4e0d\u5bf9\u6216\u8005\u8bf4\u5dee\u7684\u592a\u8fdc\uff0c\u90a3\u4e48\u5f97\u51fa\u7684\u89e3\u80af\u5b9a\u5c31\u4e0d\u5bf9\u4e86\u3002\u800c\u4e14\uff0c\u5bf9\u4e8e\u5f88\u591a\u95ee\u9898\uff0c\u6211\u4eec\u90fd\u65e0\u6cd5\u786e\u5b9a\u8fd9\u4e2a\u8fed\u4ee3\u65b9\u7a0b\u6709\u591a\u5c11\u4e2a\u89e3\u3002\u5982\u679c\u6211\u4eec\u80fd\u8bc1\u660e\u8fd9\u4e2a\u591a\u9879\u5f0f\u89e3\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u80fd\u63d0\u4f9b\u5176\u521d\u503c\u5927\u6982\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5f53\u7136\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5176\u7b97\u6cd5\u5b9e\u65f6\u6027\u4e86\u3002</li> <li>\uff083\uff09\u673a\u5668\u5b66\u4e60\uff1a\u79bb\u7ebf\u5bf9\u8f68\u8ff9\u4f18\u5316\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\uff0c\u751f\u6210\u4e00\u6761\u6807\u79f0\u8f68\u8ff9 $ bar{x}\\(\uff0c\u7136\u540e\u7ed9\u521d\u59cb\u72b6\u6001\u4e00\u4e2a\u6270\u52a8\uff0c\u518d\u7528\u6807\u79f0\u8f68\u8ff9\u7684\u89e3\u4f5c\u4e3a\u521d\u503c\u4ee3\u5165\uff0c\u6c42\u5f97\u6807\u79f0\u8f68\u8ff9\u9644\u8fd1\u7684\u6700\u4f18\u8f68\u8ff9\\)x<sup>{*}\\(\uff0c\\)x</sup>{}\\(\u662f\u5f88\u591a\u8f68\u8ff9\u7684\u96c6\u5408\u3002\uff08\\)x<sup>{*}_1\\(,\\)x</sup>{}_2\\(,\\)x<sup>{*}_3\\(,...\\)x</sup>{*}_N$\uff09\u8fd9\u79cd\u601d\u8def\u5c31\u662f\u540c\u4f26\u65b9\u6cd5(Homotopy)\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u751f\u6210\u5f88\u591a\u5f88\u591a\u6700\u4f18\u8f68\u8ff9\uff0c\u5c06\u8fd9\u4e9b\u6700\u4f18\u8f68\u8ff9\u7684\u72b6\u6001\u4f5c\u4e3a\u8f93\u5165\uff0c\u63a7\u5236\u91cf\u4f5c\u4e3a\u8f93\u51fa\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u6570\u636e\u96c6\u6765\u7528\u673a\u5668\u5b66\u4e60\u7684\u56de\u5f52\u601d\u8def\u8fdb\u884c\u8bad\u7ec3\u3002\u5f97\u5230\u521d\u59cb\u503c\u9644\u8fd1\u7684\u6700\u4f18\u8f68\u8ff9\u5230\u63a7\u5236\u91cf\u7684\u6620\u5c04\u3002\u8bad\u7ec3\u5b8c\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8bad\u7ec3\u597d\u7684\u7f51\u7edc\u5b58\u4e0b\u6765\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u72b6\u6001x\u524d\u5411\u4f20\u64ad\u5f97\u5230\u63a7\u5236u\uff0c\u89e3\u7684\u901f\u5ea6\u5927\u5927\u52a0\u5feb\u3002</li> </ul> <p>\u5f53\u524d\u89e3\u7684\u6700\u4f18\u6027\u95ee\u9898\uff1a\u65e0\u8bba\u76f4\u63a5\u6cd5\u8fd8\u662f\u95f4\u63a5\u6cd5\u90fd\u65e0\u6cd5\u6ee1\u8db3\u89e3\u7684\u6700\u4f18\u6027\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u662f\u5fc5\u8981\u6761\u4ef6\u3002\u5f53\u524d\u8bba\u6587\u4f3c\u4e4e\u90fd\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e2a\u89e3\u7684\u6700\u4f18\u6027\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u8fd9\u4e2a\u95ee\u9898\u592a\u96be\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53c8\u4e0d\u5f97\u4e0d\u6df1\u5165\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5373\u4f7f\u5f88\u591a\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6240\u5f97\u51fa\u7684\u89e3\u90fd\u4e0d\u4e00\u5b9a\u662f\u5c40\u90e8\u6700\u4f18\uff0c\u66f4\u522b\u8bf4\u5168\u5c40\u6700\u4f18\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u53bb\u5bfb\u627e\u5982\u4f55\u5224\u65ad\u6211\u4eec\u6240\u6c42\u7684\u89e3\u662f\u4e0d\u662f\u5c40\u90e8\u6700\u4f18\u89e3\u4e86\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#720","title":"7.20","text":"<ul> <li>\u8f68\u8ff9\u4f18\u5316kelly\u5927\u795e\u7684\u6559\u7a0b</li> <li> <p>\u667a\u80fd\u7f51\u8054\u6c7d\u8f66\u534f\u540c\u89c4\u5212\u4e0e\u51b3\u7b56\u4e66\uff081\u30012\u30014\u7ae0\uff09 </p> </li> <li> <p>simulink\u4e2d\u6a21\u578b\u7ba1\u7406\u4e0e\u5c01\u88c5\u7684\u5b66\u4e60</p> </li> <li>simulink model explore \u7684\u5b66\u4e60</li> <li>matlab \u6570\u503c\u6c42\u5bfc\u548c\u7b26\u53f7\u6c42\u5bfc\u547d\u4ee4 </li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#722","title":"7.22","text":"<ul> <li>\u4eca\u5929\u770b\u4e86\u4e00\u7bc7\u6587IROS\u6587\u7ae0\uff0c\u6bd4\u8f83\u6709\u610f\u601d\u3002\u662f\u628aLQR\u7684\u7ed3\u679c\u4f5c\u4e3a\u4e00\u4e2a\u9ad8\u65af\u6982\u7387\u5206\u5e03\u6765\u8fdb\u884c\u8ddf\u8e2a\u3002\u5747\u503c\u4e3a\u6c42\u89e3\u5668\u6c42\u51fa\u6765\u7684LQR/ILQR\u7684\u6700\u4f18\u89e3\uff0c\u65b9\u5dee\uff0c\u540c\u6837\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u3002\u65b9\u5dee\u6307\u660e\u4e86cost\u7684\u4e0b\u964d\u65b9\u5411\u3002</li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#723","title":"7.23","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#_2","title":"\u770b\u4e86\u4e00\u7bc7\u4e0a\u6c7d\u7684\u6587\u7ae0\uff1a","text":"<p>\u548c\u767e\u5ea6\u7c7b\u4f3c\u7684\u8def\u5f84\u89c4\u5212\u7b97\u6cd5\uff0c\u4f46\u662f\u53ea\u6709\u8def\u5f84\u89c4\u5212\uff0c\u6ca1\u6709\u901f\u5ea6\u89c4\u5212\uff08\u53ea\u9488\u5bf9\u9759\u6b62\u969c\u788d\u7269\uff09</p> <p>1.\u7528\u4e8c\u6b21\u89c4\u5212\u751f\u6210\u6307\u5f15\u7ebf\uff08QP\uff09</p> <p>2.\u7528\u975e\u7ebf\u6027\u89c4\u5212\u751f\u6210\u6700\u4f18\u8f68\u8ff9\uff08SQP\uff09\uff0c\u4e14\u4e2a\u5206\u5272\u7aef\u957f\u5ea6\u53ef\u53d8\uff0c\u7ea6\u675f\u91c7\u7528\u9a7e\u9a76\u8d70\u5eca\u7684\u65b9\u5f0f\uff0c\u5e76\u8fed\u4ee3\u6539\u53d8\u9a7e\u9a76\u8d70\u5eca\u7684\u8303\u56f4\uff0c\u9632\u6b62\u8fde\u63a5\u4e24\u4e2a\u9a7e\u9a76\u8d70\u5eca\u7684\u8f68\u8ff9\u4e0e\u969c\u788d\u7269\u78b0\u649e\u3002 </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#_3","title":"\u5173\u4e8e\u89c4\u5212\u7684\u4e00\u4e9b\u89c1\u89e3\uff1a","text":"<p>\u89c4\u5212\u672c\u8eab\u53ef\u4ee5\u8003\u8651\u662f\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\uff0c\u76ee\u6807\u51fd\u6570\u5305\u62ec\u6700\u4f18\u5316\u8212\u9002\u6027\uff0c\u901a\u884c\u65f6\u95f4\uff0c\u71c3\u6cb9\u6d88\u8017\u7387\u7b49.....\uff0c\u7ea6\u675f\u5305\u62ec\u7cfb\u7edf\u52a8\u529b\u5b66\u7ea6\u675f\u3001\u6267\u884c\u673a\u6784\u7684\u7ea6\u675f\uff08box constrain\uff09\uff0c\u78b0\u649e\u7ea6\u675f\uff08\u6805\u683c\u3001\u77e9\u5f62\u3001\u5706\u5f62\uff09\u7b49\u3002\u89c4\u5212\u672c\u8eab\u6709\u4e24\u6761\u8def\u53ef\u4ee5\u8d70\uff0c\u5206\u522b\u5bf9\u5e94\u4e0b\u8fb9\u7684\u4e24\u79cd\u8f6c\u5316\u65b9\u6cd5\uff0c\u4e00\u6761\u8def\u662f\u5148\u89c4\u5212\u540e\u63a7\u5236\uff08\u5373\u89c4\u5212\u65f6\u4e0d\u8003\u8651\u63a7\u5236u\uff0c\u53ea\u8003\u8651\u7ed9\u51fa\u4e00\u6761\u5149\u6ed1\u66f2\u7ebf\uff0c\u5bf9\u5e94\u7b2c\u4e8c\u79cd\u601d\u8def\uff09\uff0c\u8fd9\u662f\u8003\u8651\u5230\u89c4\u5212\u548c\u63a7\u5236\u7684\u9891\u7387\u8981\u6c42\u4e0d\u540c\uff0c\u89c4\u5212\u7684\u8981\u6c42\u9891\u7387\u4f4e\u4e00\u4e9b\uff0c\u53ef\u4ee5100ms\u89c4\u5212\u4e00\u6b21\uff0c\u63a7\u5236\u5bf9\u9891\u7387\u7684\u8981\u6c42\u9ad8\uff0c10ms\u89c4\u5212\u4e00\u6b21\uff0c\u5206\u5c42\u53ef\u4ee5\u5f88\u597d\u7684\u5c06\u4e0d\u540c\u7684\u9891\u7387\u9694\u79bb\u5f00\u3002\u53e6\u4e00\u6761\u8def\u662f\u540c\u65f6\u89c4\u5212\u4e0e\u63a7\u5236\uff08\u5373\u89c4\u5212\u662f\u8003\u8651\u63a7\u5236\uff0c\u5bf9\u5e94\u7b2c\u4e00\u79cd\u601d\u8def\uff09\uff0c\u53ef\u4ee5\u7528MPC\u6846\u67b6\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u4e0b\u5c42\u8ddf\u8e2a\u63a7\u5236\u5668\u4e86\uff0c\u8fd9\u6837\u5bf9\u6c42\u89e3\u901f\u5ea6\u8981\u6c42\u5f88\u9ad8\u3002\u5f53\u7136\u540c\u65f6\u89c4\u5212\u4e0e\u63a7\u5236\u540c\u6837\u53ef\u4ee5\u4e0d\u5173\u6ce8\u63a7\u5236\uff0c\u53ea\u5173\u6ce8\u6c42\u51fa\u6765\u7684\u6700\u6709\u89c4\u5212\uff0c\u63a7\u5236\u653e\u5230\u5e95\u5c42\u53bb\u6267\u884c\u3002\u4ed6\u4eec\u4e4b\u95f4\u7684\u663e\u8457\u533a\u522b\u662f\u5728\u89c4\u5212\u7684\u65f6\u5019\u6709\u6ca1\u6709\u8003\u8651\u5230\u63a7\u5236\uff08\u4e5f\u5c31\u662f\u6709\u6ca1\u6709\u8003\u8651\u5230\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff09    * \u7531\u4e8e\u6709\u7cfb\u7edf\u52a8\u529b\u5b66\u7ea6\u675f\u7684\u5b58\u5728\uff0c\u8fd9\u662f\u4e00\u4e2a\u5fae\u5206\u65b9\u7a0b\uff0c\u76f4\u63a5\u89e3\u8be5\u95ee\u9898\u8f83\u96be\uff0c\u89e3\u6790\u89e3\u5f88\u96be\u6c42\uff08\u4e3b\u8981\u65b9\u6cd5\u6709\u53d8\u5206\u3001\u6700\u5c0f\u503c\u539f\u7406\u7b49\uff09\u6240\u4ee5\u9700\u8981\u5c06\u95ee\u9898\u8f6c\u5316\uff1a * \u4e00\u79cd\u601d\u8def\u662f\u6700\u4f18\u63a7\u5236\u7684\u6570\u503c\u89e3\u6cd5\uff0c\u628a\u7cfb\u7edf\u52a8\u529b\u5b66\u7ea6\u675f\u79bb\u6563\u5316\uff08\u6bd4\u5982\u914d\u70b9\u6cd5\u548c\u6253\u9776\u6cd5\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c06\u5e26\u6709\u5fae\u5206\u65b9\u7a0b\u7ea6\u675f\u7684\u4f18\u5316\u95ee\u9898\u8f6c\u6362\u4e3aNLP\u7684\u95ee\u9898\uff0cNLP\u95ee\u9898\u7684\u6c42\u89e3\u901f\u5ea6\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u521d\u59cb\u89e3\uff0c\u6240\u4ee5\u627e\u5230\u4e00\u4e2a\u597d\u7684\u521d\u59cb\u89e3\u662f\u89e3NLP\u95ee\u9898\u7684\u5173\u952e\u6240\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u627eNLP\u95ee\u9898\u521d\u59cb\u89e3\u7684\u8fc7\u7a0b\u60f3\u8c61\u6210\u662f\u4e00\u4e2a\u51b3\u7b56\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u770b\u5230\u524d\u9762\u6709\u4e00\u4e2a\u969c\u788d\u7269\uff0c\u8f66\u8f86\u8be5\u9009\u62e9\u4ece\u5de6\u7ed5\u884c\u8fd8\u662f\u4ece\u53f3\u7ed5\u884c\u3002\u6700\u540e\u6c42\u51fa\u6765\u7684\u6700\u4f18\u89e3\u4e3a\\(x^*,u^*\\),\u6211\u4eec\u53ef\u4ee5\u53ea\u7528\\(x^*\\),\u653e\u5f03\\(u^*\\)\uff0c\u8fd9\u6837\u5176\u5b9e\u548c\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f\u6c42\u6700\u4f18\u8f68\u8ff9\u3002\u5982\u679c\\(x^*,u^*\\)\u90fd\u7528\uff0c\u5219\u4e0d\u7528\u518d\u91cd\u65b0\u8bbe\u8ba1\u8ddf\u8e2a\u63a7\u5236\u5668\uff0c\u76f4\u63a5\u7528\\(u^*\\)\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u63a7\u5236\u8bef\u5dee\u592a\u5927\uff0c\u53ef\u4ee5\u8003\u8651MPC\u7684\u601d\u60f3\uff08\u524d\u63d0\u662f\u6c42\u89e3\u591f\u5feb\uff09\uff0c\u6bcf\u4e00\u6b65\u53ea\u5e94\u7528\u4e8e\u7b2c\u4e00\u4e2a\u63a7\u5236\u91cf\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528DP\u7684\u601d\u60f3\u53bb\u89e3\u3002 * \u8fd8\u6709\u4e00\u79cd\u601d\u8def\u662f\u628a\u52a8\u529b\u5b66\u7ea6\u675f\u7ed9\u8f6c\u5316\uff0c\u4e0d\u663e\u5f0f\u7684\u7ea6\u675f\u52a8\u529b\u5b66\uff0c\u800c\u662f\u628a\u52a0\u901f\u5ea6\u3001\u52a0\u52a0\u901f\u5ea6\u3001\u66f2\u7387\u7b49\u5f71\u54cd\u52a8\u529b\u5b66\u7684\u56e0\u7d20\u653e\u5230\u76ee\u6807\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5c31\u628a\u52a8\u529b\u5b66\u7ea6\u675f\u7ed9\u6d88\u6389\u4e86\u3002\u8fd9\u6837\u6c42\u51fa\u6765\u53ea\u662f\u4e00\u6761\u6700\u4f18\u8f68\u8ff9( \\(x^*\\) )\uff0c\u6ca1\u6709\u63a7\u5236\u91cf\uff0c\u63a7\u5236\u53ea\u80fd\u653e\u5230\u4e0b\u5c42\u53bb\u8ddf\u8e2a\u8be5\u8f68\u8ff9\u3002\u5178\u578b\u7684\u6709Apollo EM planner</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#autonomous-driving-on-curvy-roads-without-reliance-on-frenet-frame-a-cartesian-based","title":"Autonomous Driving on Curvy Roads Without Reliance on Frenet Frame: A Cartesian-Based","text":"<p>\u4e00\u4e2a\u8fed\u4ee3\u8f68\u8ff9\u4f18\u5316\u7684\u65b9\u6cd5\uff1a</p> <p></p> <p>\u8f93\u5165\uff1a\u7c97\u7684\u53c2\u8003\u5730\u56fe</p> <p>\u8f93\u51fa\uff1a\u4e00\u6761\u6700\u4f18\u7684\u8f68\u8ff9</p> <p>STEP 1\uff1a\u52a0\u8f7d\u91c7\u6837\u548c\u641c\u7d22\u7c97\u5bfc\u51fa\u7684\u53c2\u8003\u8f68\u8ff9\u8f68\u8ff9\uff0c\u7136\u540e\u8fd4\u56de\u6570\u503c\u6c42\u89e3\u6240\u9700\u7684\u6240\u6709\u51b3\u7b56\u53d8\u91cf\uff08reference line\uff0c\u521d\u59cb\u89e3\uff09</p> <p>STEP 2\uff1a\u521d\u59cb\u5316\u60e9\u7f5a\u53d8\u91cf\uff0c\u8fed\u4ee3\u6b21\u6570\u3001\u6e05\u7a7a\u76ee\u6807\u7684traj\u3002</p> <p>STEP 3\uff1a\u4f9d\u7167\u6240\u8bbe\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570\u8fdb\u884c\u5faa\u73af\uff1a</p> <p>1 - \u4f7f\u7528\u52a0\u8f7d\u51fa\u6765\u7684\u53c2\u8003\u8f68\u8ff9\u653e\u5165\u5230OCP\u4e2d\u3002\u8fd9\u4e00\u6b65\u4e2d\uff0c\u671f\u671b\u4e0e\u8fd0\u52a8\u5b66\u76f8\u5173\u7684\u7ea6\u675f\u5728\u5408\u5e76\u5230Cost\u51fd\u6570\u4e4b\u524d\u88ab\u8f6f\u5316\u4e3a\u5916\u90e8\u60e9\u7f5a\u6210\u672c\u3002</p> <p>2 - \u4f18\u5316\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8f68\u8ff9\u3002</p> <p>3 - \u786e\u5b9a\u53ef\u4fe1\u5ea6\uff0c\u627e\u52300\u5230T\u65f6\u523b\u7684\u603b\u7684\u60e9\u7f5a</p> <p>3-1- \u5982\u679c\u60e9\u7f5a\u5f88\u5c0f\u4e86\uff0c\u6211\u4eec\u5c31\u5c06\u8fd9\u4e2a\u8f68\u8ff9\u8fd4\u56de\u3002</p> <p>3-2- \u53cd\u4e4b\uff0c\u5219\u66f4\u65b0\u4e00\u4e0b\u60e9\u7f5a\u7a00\u758f\uff0c\u5e76\u4e14\u8fed\u4ee3\u6b21\u6570\u589e\u52a0\u4e00\u6b21\u3002</p> <p>return \u6700\u4f18\u8f68\u8ff9</p> <p>reference\uff1ahttps://blog.csdn.net/u011841848/article/details/123931887</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#idea","title":"idea\uff1a","text":"<p>1.\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff08xyt\uff09\uff0c\u9996\u5148\u5c06\u65f6\u95f4\u79bb\u6563\u5316\u3002 2.\u5728\u79bb\u6563\u65f6\u95f4\u7684\u4e09\u7ef4\u7a7a\u95f4\u5185\u8fdb\u884c\u8f68\u8ff9\u51b3\u7b56\u3002 3.\u8f68\u8ff9\u51b3\u7b56\u7684\u7ed3\u679c\u5f53\u4f5c\u521d\u59cb\u89e3\uff08\u540c\u4f26\u6027\uff09 4.\u6839\u636e\u521d\u59cb\u89e3\uff08\u8f68\u8ff9\u51b3\u7b56\uff09\u751f\u6210\u5b89\u5168\u8d70\u5eca 5.\u6839\u636e\u5b89\u5168\u8d70\u5eca\u7b80\u5316\u7ea6\u675f 6.\u6c42\u89e3\u6700\u4f18\u89e3 7.todo-\u628a\u521d\u59cb\u8f68\u8ff9\u5f53\u4f5c\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5747\u503c\u4e3a\u521d\u59cb\u89e3\uff0c\u65b9\u5dee\u4e3a\u8ba1\u7b97\u51fa\u6765\u7684\uff08reference\uff1aProbabilistic Iterative LQR for Short Time Horizon MPC\uff09   ** reference\uff1aModel Predictive Trajectory Planning for Automated Driving ** https://blog.csdn.net/u011841848/article/details/125422248</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#_4","title":"\u5fae\u5206\u5e73\u5766\uff1a","text":"<p>\u5b9a\u4e49\uff1a\u5fae\u5206\u5e73\u5766\u4f7f\u7528\u7cfb\u7edf\u7684\u8f93\u51fa\u548c\u5176\u5bfc\u6570\u5bf9  \u72b6\u6001\u53d8\u91cf\u548c\u8f93\u5165\u53d8\u91cf\u8fdb\u884c\u8868\u793a\uff0c\u901a\u8fc7\u9009\u62e9\u5408\u7406\u7684\u8f93\u51fa\u53d8\u91cf\u53ef\u4ee5\u5bf9\u7cfb\u7edf\u8fdb\u884c\u6709\u6548\u7684\u964d\u7ef4\u3002\u6b63\u5f0f\u7684\u5b9a\u4e49\u4e3a\uff1a\u5bf9\u4e00\u4e9b\u5b58\u5728\u5e73\u5766\u8f93\u51fa\u7684\u975e\u7ebf\u6027\u7cfb\u7edf\uff0c\u5982\u679c\u53ef\u4ee5\u627e\u5230\u4e00\u7ec4\u7cfb\u7edf\u8f93\u51fa\uff0c\u4f7f\u5f97\u6240\u6709\u72b6\u6001\u53d8\u91cf\u548c\u8f93\u5165\u53d8\u91cf\u90fd\u53ef\u4ee5\u7531\u8fd9\u7ec4\u8f93\u51fa\u53ca\u5176\u6709\u9650\u9636\u5fae\u5206\u8fdb\u884c\u8868\u793a\uff0c\u90a3\u4e48\u8be5\u7cfb\u7edf\u5373\u4e3a\u5fae\u5206\u5e73\u5766\u7cfb\u7edf\u3002</p> <p>\u6b64\u7279\u6027\u53ef\u4ee5\u5728\u673a\u5668\u4eba\u8fdb\u884c\u8fd0\u52a8\u89c4\u5212\u7684\u65f6\u5019\u6307\u5bfc\u9009\u62e9\u54ea\u4e9b\u8f93\u51fa\u53d8\u91cf\u8fdb\u884c\u89c4\u5212\uff0c\u5e76\u5c06\u6240\u6709\u7684\u8f68\u8ff9\u7ea6\u675f\u6761\u4ef6\u90fd\u6620\u5c04\u5230\u5e73\u5766\u8f93\u51fa\u7a7a\u95f4\uff0c\u5e76\u5728\u8f93\u51fa\u7a7a\u95f4\u4e2d\u89c4\u5212\u51fa\u6700\u4f18\u8f68\u8ff9\uff0c\u7136\u540e\u518d\u4e0a\u5347\u56de\u5230\u521d\u59cb\u7684\u72b6\u6001\u548c\u8f93\u5165\u7a7a\u95f4\u4e2d\u3002\u8fd9\u4f7f\u5f97\u6700\u4f18\u63a7\u5236\u95ee\u9898\u7684\u7ef4\u6570\u964d\u4f4e\u5230\u80fd\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5b9e\u65f6\u8ba1\u7b97\u7684\u6570\u76ee https://blog.csdn.net/qq_40870689/article/details/100878240</p> <p>https://blog.csdn.net/u011841848/article/details/122486242</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#727","title":"7.27","text":"<ul> <li>\u5173\u4e8emin-max\u95ee\u9898\u4e00\u4e2a\u5f88\u76f4\u89c2\u7684\u89e3\u91ca</li> </ul> <p>min-max\u548cmax-min\u5728\u4f18\u5316\u95ee\u9898\u4e2d\u6bd4\u8f83\u5e38\u89c1\uff0c\u4e00\u53e5\u8bdd\u8bf4\uff1amin-max(make maximum value minimum)\u662f\u4e3a\u4e86\u538b\u5236\u4f18\u5316\u76ee\u6807\u4e2d\u8868\u73b0\u6700\u7a81\u51fa\u7684\u6210\u5206\uff0cmax-min(make minimum value maximum)\u4e3a\u4e86\u63d0\u5347\u4f18\u5316\u76ee\u6807\u4e2d\u8868\u73b0\u6700\u5dee\u7684\u6210\u5206\u3002\u4e3a\u4e86\u628a\u8fd9\u4e24\u4e2a\u95ee\u9898\u4f5c\u4e00\u4e2a\u6bd4\u8f83\u901a\u4fd7\u7684\u89e3\u91ca\uff0c\u65b9\u4fbf\u7b14\u8005\u548c\u5404\u4f4d\u8bfb\u8005\u5bf9\u6b64\u95ee\u9898\u6709\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u3002</p> <p>\uff08\u4e00\uff09min-max\u95ee\u9898 \u5148\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\uff0c\u501f\u7528\u4e4b\u524d\u770b\u5230\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\u8003\u8651\u89c4\u5212\u57ce\u5e02\u4e2d\u6025\u6551\u4e2d\u5fc3\u6216\u8005\u6d88\u9632\u4e2d\u5fc3\u7684\u5efa\u9020\u4f4d\u7f6e\uff0c\u76ee\u6807\u7ea6\u675f\u51fd\u6570\u5e94\u8be5\u662f\u5230\u57ce\u5e02\u4e2d\u5404\u4e2a\u623f\u5c4b\u6700\u5927\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\uff0c\u800c\u4e0d\u662f\u5230\u8fbe\u6240\u6709\u76ee\u7684\u5730\u8ddd\u79bb\u548c\u7684\u6700\u5c0f\u503c\u3002\u7b80\u5355\u5730\u8bf4\u5c31\u662f\u524d\u8005\u8003\u8651\u5982\u4f55\u964d\u4f4e\u6700\u6076\u52a3\u60c5\u51b5\u7684\u5f71\u54cd\uff0c\u540e\u8005\u8003\u8651\u6574\u4f53\u7684\u8054\u5408\u4f18\u5316\u3002\u56e0\u4e3a\u6574\u4e2a\u57ce\u5e02\u540c\u65f6\u7740\u706b\u51e0\u7387\u6781\u4f4e\u7684\uff0c\u6240\u4ee5\u5efa\u6a21\u7684\u65f6\u5019\u66f4\u503e\u5411\u4e8e\u8003\u8651\u524d\u8005\u8fd9\u6837\u7684\u6a21\u578b\u3002</p> <p>\uff08\u4e8c\uff09max-min\u95ee\u9898 \u8fd9\u4e2a\u95ee\u9898\u518d\u901a\u4fe1\u94fe\u8def\u4e2d\u5e94\u7528\u6bd4\u8f83\u591a\uff0c\u5982\u57fa\u7ad9\u540c\u65f6\u548c\u591a\u7528\u6237\u901a\u4fe1\uff0c\u6bcf\u4e2a\u57fa\u7ad9\u5230\u7528\u6237\u7684\u901a\u4fe1\u4e3a\u4e00\u4e2a\u901a\u4fe1\u94fe\u8def\uff0c\u4e14\u57fa\u7ad9\u7684\u53d1\u5c04\u529f\u7387\u662f\u56fa\u5b9a\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u7684\u901a\u4fe1\u94fe\u8def\u90fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e94\u8be5\u53bb\u4f18\u5316\u6700\u5dee\u94fe\u8def\u7684\u901a\u4fe1\u60c5\u51b5\uff0c\u964d\u4f4e\u4fe1\u9053\u8f83\u597d\u94fe\u8def\u7684\u57fa\u7ad9\u53d1\u5c04\u529f\u7387\uff0c\u589e\u52a0\u4fe1\u9053\u8f83\u5dee\u94fe\u8def\u7684\u57fa\u7ad9\u53d1\u5c04\u529f\u7387\uff0c\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u5316\u6700\u5c0f\u503c\u95ee\u9898\u3002</p> <ul> <li>matlab\u652f\u6301\u7684\u6c42\u89e3\u95ee\u9898\u4ee5\u53ca\u6c42\u89e3\u5668\u6c47\u603b</li> </ul> <p>https://ww2.mathworks.cn/products/optimization.html </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#728","title":"7.28 \u9ad8\u98de\u7684\u8bfe\u7a0b","text":"<ul> <li>\u6df7\u5408\u6574\u6570\u4f18\u5316\uff0c\u7528M\u6cd5\u6c42\u89e3   </li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.7/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#728-mdpmpc","title":"7.28 \u9ad8\u98de\u7684\u8bfe\u7a0b\uff08MDP\u548cMPC\uff09","text":"<ul> <li>MDP\u611f\u60f3\uff0cMDP\u7684planning\u76ee\u524d\u53d1\u5c55\u5f88\u7f13\u6162\uff0c\u628a\u4e0d\u786e\u5b9a\u6027\u8003\u8651\u8fdb\u53bb\u4ee5\u540e\u5c31\u53ea\u80fd\u89e3\u4e00\u4e9b\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff0c\u800c\u4e14\u95ee\u9898\u7684\u5c55\u793a\u4e5f\u4e0d\u591f\u76f4\u89c2\u3002\u4f5c\u8005\u5206\u4e86\u4e24\u4e2a\u90e8\u5206\u6765\u8bb2MDP\uff0c\u7b2c\u4e00\u90e8\u5206\u5f15\u5165\u4e86nature\u7684\u6982\u5ff5\uff0c\u6307\u7684\u662fnature\u4f1a\u505a\u51fa\u52a8\u4f5c\u4f7f\u5f97\u7ed3\u679c\u53d8\u5f97\u4e0d\u51c6\u786e\u3002\u7b2c\u4e8c\u90e8\u5206\u5c31\u662f\u4f20\u7edf\u7684\u6982\u7387\u8f6c\u79fb\u3002 </li> <li>MPC\u611f\u60f3\uff1a\u5bf9\u4e8e\u677e\u5f1b\u56e0\u5b50\u4e4b\u524d\u4e86\u89e3\u7684\u4e0d\u591f\u900f\u5f7b\uff0c\u4eca\u5929\u7b97\u662f\u641e\u660e\u767d\u4e86\uff0c\u677e\u5f1b\u56e0\u5b50\u5c31\u662f\u5728box\u7ea6\u675f\u4e0a\u52a0\u4e86\u677e\u5f1b\u56e0\u5b50\uff0c\u7136\u540e\u628a\u677e\u5f1b\u56e0\u5b50\u653e\u5728cost\u4e0a\u8fdb\u884c\u60e9\u7f5a\uff08\u677e\u5f1b\u56e0\u5b50\u8d8a\u5927\uff0ccost\u8d8a\u9ad8\uff09\uff0c\u677e\u5f1b\u56e0\u5b50\u4e5f\u4f5c\u4e3a\u51b3\u7b56\u53d8\u91cf\uff0c\u4e00\u5e76\u6c42\u89e3\u3002\u8fd9\u6837\u5c31\u628a\u4e4b\u524d\u7684\u786c\u7ea6\u675f\u7684MOC\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u76f8\u5bf9\u7684\u8f6f\u7ea6\u675f\u95ee\u9898\u3002 </li> <li>\u667a\u80fd\u7f51\u8054\u6c7d\u8f66\u51b3\u7b56\u89c4\u5212\u4e66\u7c4d\u770b\u5b8c\u4e86\uff1a   1\uff09 \u591a\u8f66\u534f\u540c\u51b3\u7b56\u89c4\u5212\u7684\u65b9\u6cd5\uff1a\u95ee\u9898\u662fNPhard\uff0c\u6240\u4ee5\u51b3\u7b56\u95ee\u9898\u6ca1\u6709\u5f88\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u76ee\u524d\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u662f\u60ef\u5e8f\u51b3\u7b56\uff0c\u5373\u91c7\u6837\u4e00\u5b9a\u6570\u91cf\u7684\u51b3\u7b56\u987a\u5e8f\uff0c\u5224\u65ad\u4e00\u4e0b\u54ea\u4e2a\u987a\u5e8f\u6bd4\u8f83\u597d\u3002\u57fa\u4e8e\u51b3\u7b56\u987a\u5e8f\uff0c\u8fdb\u884c\u89c4\u5212\uff08\u4f4e\u4f18\u5148\u7ea7\u8f66\u8f86\u5c06\u9ad8\u4f18\u5148\u7ea7\u8f66\u8f86\u7684\u8f68\u8ff9\u5f53\u4f5c\u969c\u788d\u7269\uff09   2\uff09\u89c4\u5212\u65f6\uff0c\u5904\u7406\u78b0\u649e\u7ea6\u675f\u65f6\uff0c\u53ef\u4ee5\u5c06\u8f66\u8f86\u62bd\u8c61\u4e3a\u524d\u540e\u8f74\u5fc3\u4e3a\u5706\u5fc3\u7684\u4e24\u4e2a\u5706\u3002   3\uff09\u7531\u4e8e\u7ea6\u675f\u8fc7\u591a\uff0c\u91c7\u7528\u81ea\u9002\u5e94\u6e10\u8fdb\u7ea6\u675f\u521d\u59cb\u5316\u7684\u601d\u60f3.    4\uff09\u7ed3\u6784\u5316\u5355\u8f66\u89c4\u5212\uff1a</li> <li> <p>\u9996\u5148\u751f\u6210\u6307\u5f15\u7ebf\uff1a   </p> </li> <li> <p>\u57fa\u4e8e\u6307\u5f15\u7ebf\uff0c\u8fdb\u884c\u8f68\u8ff9\u51b3\u7b56\uff08frenet\u5750\u6807\u7cfb\u4e0b\uff0c\u91c7\u6837+DP\uff09\uff0c\u751f\u6210\u5e26\u6709\u65f6\u95f4\u4fe1\u606f\u7684\u51b3\u7b56\u8f68\u8ff9</p> </li> <li>\u57fa\u4e8e\u51b3\u7b56\u8f68\u8ff9\uff0c\u6784\u5efa\u5b89\u5168\u8d70\u5eca\uff0c\u8fdb\u884c\u89c4\u5212    </li> </ul> <p>5\uff09\u5728\u7ed3\u6784\u5316\u9053\u8def\u4e2d\uff0c\u7531\u4e8e\u8f66\u901f\u8fc7\u9ad8\uff0c\u56e0\u6b64\u8f83\u5371\u9669\uff0c\u5e94\u8be5\u8bbe\u7f6e\u4e00\u5b9a\u7684\u5197\u4f59\u65b9\u6848\uff1a   1. \u5982\u79bb\u6563\u5316\u7cbe\u5ea6\u6e10\u53d8\u65b9\u6848\uff08\u5728\u8fdb\u884c\u52a8\u529b\u5b66\u65b9\u7a0b\u79bb\u6563\u5316\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u8f83\u8fd1\u7684\u65f6\u57df\u79bb\u6563\u533a\u95f4\u77ed\uff0c\u8f83\u8fdc\u7684\u65f6\u57df\u79bb\u6563\u533a\u95f4\u957f\uff09\u3001   2. \u591a\u5b8c\u6210\u5ea6\u5197\u4f59\uff08\u8bbe\u7f6e\u5907\u9009\u547d\u9898\uff0c\u5982\u8ddf\u968f\u6307\u5f15\u7ebf\u6216\u8005\u9760\u8fb9\u505c\u8f66\uff09\u3001   3. \u5728\u7ebf\u67e5\u8868\u7d27\u6025\u907f\u9669\uff08\u5f53\u7a81\u7136\u51fa\u73b0\u969c\u788d\u7269\u65f6\uff0c\u6765\u4e0d\u53ca\u8f68\u8ff9\uff0c\u901a\u8fc7\u5927\u91cf\u6807\u5b9a\uff0c\u5f62\u6210 \u8f68\u8ff9-&gt;\u63a7\u5236\u91cf\u7684\u79bb\u7ebf\u8868\u683c\uff0c\u901a\u8fc7\u67e5\u8868\uff0c\u5feb\u901f\u907f\u969c\u3002\uff09</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"8.20","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#_1","title":"\u65f6\u7a7a\u89c4\u5212\u8bba\u6587\u9605\u8bfb","text":"<ol> <li>\u8fd9\u4e2a\u4f8b\u5b50\u4e3e\u5f97\u5f88\u597d\uff0c\u53ef\u4ee5\u5c06\u7ea2\u7eff\u706f\u7684\u5de5\u51b5\u4e5f\u8003\u8651\u8fdb\u53bb</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/#821","title":"8.21","text":"<ol> <li>MPC\u7684\u53cd\u9988\u77eb\u6b63\u7684\u4f8b\u5b50</li> </ol> <p>MPC\u7684\u6a21\u578b\u9884\u6d4b\u8fc7\u7a0b\uff0c\u5728\u9884\u6d4b\u8f93\u51fa\u65f6\u5982\u679c\u8003\u8651\u6a21\u578b\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u628a\u4e0b\u4e00\u65f6\u523b\u7684\u6d4b\u91cf\u503c\u4e0e\u5f53\u524d\u65f6\u523b\u9884\u6d4b\u7684\u4e0b\u4e00\u65f6\u523b\u7684\u503c\u7684\u8bef\u5dee\u53cd\u9988\u8fdb\u6765\uff0c\u8fd9\u5c31\u662f\u53cd\u9988\u77eb\u6b63\uff0c\u53cd\u9988\u77eb\u6b63\u76f8\u5f53\u4e8e\u9884\u6d4b\u7684\u8fc7\u7a0b\u4e5f\u5f62\u6210\u4e86\u95ed\u73af\u3002\u80fd\u591f\u51c6\u786e\u7684\u7684\u5b9e\u73b0\u9884\u6d4b\u8f93\u51fa\uff0c\u800c\u4e0d\u4ec5\u4ec5\u53ea\u57fa\u4e8e\u6a21\u578b\u6765\u9884\u6d4b\u3002</p> <p>https://zhuanlan.zhihu.com/p/66801694 </p> <p>\\(y(k)\\)\u662f\u5f53\u524d\u65f6\u8f93\u51fa\u91cf\u7684\u6d4b\u91cf\u503c\uff0c\u662f\u4e00\u4e2a\u6807\u91cf\u3002\\(y_M(k)\\)\u662f\u4e0a\u4e00\u65f6\u523b\u9884\u6d4b\u7684\u5f53\u524d\u65f6\u523b\u7684\u8f93\u51fa\u91cf\uff0c\u662f\u4e00\u4e2a\u6807\u91cf\u3002\u56e0\u6b64\\(e(k)\\)\u4e5f\u662f\u6807\u91cf\u3002 \u5982\u679c\u6ca1\u6709\u53cd\u9988\u77eb\u6b63\uff0c\u53ea\u7528\u6a21\u578b\u6765\u9884\u6d4b\u8f93\u51fa\uff0c\u90a3\u4e48\u53cd\u9988\u77e9\u9635\u5c31\u4e3a0\u3002</p> <p> \u8fd9\u4e2a\u53cd\u9988\u77eb\u6b63\u7406\u89e3\u7684\u4e0d\u5bf9\uff01\uff01\uff01</p> <ol> <li>\u5173\u4e8e\u52a8\u6001\u89c4\u5212    1\uff09\u52a8\u6001\u89c4\u5212\u65e2\u53ef\u4ee5\u6b63\u5411\u6c42\u89e3\u4e5f\u53ef\u4ee5\u9006\u5411\u6c42\u89e3\uff0c\u6b63\u5411\u6c42\u89e3\u662f\u6c42\u51fa\u8d77\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u9006\u5411\u6c42\u89e3\uff0c\u662f\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002</li> </ol> <p>\u52a8\u6001\u89c4\u5212\u7531\u4e09\u5c42\u5d4c\u5957\u5faa\u73af\u6784\u6210\uff1a\u7b2c\u4e00\u5c42\u662f\u6bcf\u4e00\u4e2a\u9636\u6bb5\u7684\u5faa\u73af\uff0c\u7b2c\u4e8c\u5c42\u5f53\u524d\u9636\u6bb5\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u7b2c\u4e09\u5c42\u662f\u4e0b\u4e00\u4e2a\u9636\u6bb5\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/Carsim%E4%BB%BF%E7%9C%9F%E4%B8%AD%E7%9A%84%E9%80%9F%E5%BA%A6%E6%8A%96%E9%9C%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","title":"Carsim\u4eff\u771f\u4e2d\u7684\u901f\u5ea6\u6296\u9707\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5","text":"<p>by \u97e9\u7855  date 2022.8.21</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/Carsim%E4%BB%BF%E7%9C%9F%E4%B8%AD%E7%9A%84%E9%80%9F%E5%BA%A6%E6%8A%96%E9%9C%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#_1","title":"\u95ee\u9898\u63cf\u8ff0\uff1a","text":"<p>\u6211\u4eec\u5728\u8fdb\u884cTrucksim/Carsim\u548cSimulink\u8054\u5408\u4eff\u771f\u65f6\u53d1\u73b0\uff0c\u5728\u8fdb\u884c\u4e00\u822c\u7684\u63a7\u5236\u4efb\u52a1\u4e2d\uff0cTrucksim/Carsim\u8f66\u8f86\u8f93\u51fa\u7684\u901f\u5ea6\u4fe1\u606f\u7ecf\u5e38\u4f1a\u53d1\u751f\u6296\u9707\u73b0\u8c61\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff08\u84dd\u7ebf\u662f\u671f\u671b\u901f\u5ea6\uff0c\u7ea2\u7ebf\u4e3a\u7ed9Trucksim/Carsim\u8f93\u5165\u63a7\u5236\u91cf\u540e\u7684\u81ea\u8f66\u7684\u8f93\u51fa\u901f\u5ea6\uff09\u3002 </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/Carsim%E4%BB%BF%E7%9C%9F%E4%B8%AD%E7%9A%84%E9%80%9F%E5%BA%A6%E6%8A%96%E9%9C%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#_2","title":"\u95ee\u9898\u539f\u56e0\u5206\u6790\uff1a","text":"<p>\u7ecf\u8fc7\u5bf9\u6bd4\u8c03\u8bd5\uff0c\u6211\u4eec\u6700\u7ec8\u53d1\u73b0\uff0c\u5bfc\u81f4\u8be5\u95ee\u9898\u4ea7\u751f\u7684\u4e3b\u8981\u539f\u56e0\u4e3b\u8981\u6709\u4e24\u70b9\u3002 1. \u5728\u52a0\u901f\u5ea6-&gt;\u8282\u6c14\u95e8\u5f00\u5ea6\u63d2\u503c\u7684\u8fc7\u7a0b\u4e2d\u63d2\u503c\u5206\u8fa8\u7387\u8f83\u5927\uff1a \u6211\u4eec\u76ee\u524d\u5728\u5bf9Trucksim/Carsim\u8fdb\u884c\u63a7\u5236\u65f6\uff0c\u76ee\u524d\u91c7\u7528\u7684\u63a7\u5236\u91cf\u4e3b\u8981\u6709\u4e09\u79cd\uff1a\uff081\uff09\u76f4\u63a5\u7ed9Trucksim/Carsim\u8f93\u5165\u901f\u5ea6\uff0c\u8ba9Trucksim/Carsim\u4e2d\u81ea\u5e26\u7684PID\u63a7\u5236\u5668\u5bf9\u8be5\u901f\u5ea6\u8fdb\u884c\u8ddf\u8e2a\u3002\uff082\uff09\u7ed9Trucksim/Carsim\u8f93\u5165\u52a0\u901f\u5ea6\uff0cTrucksim/Carsim\u4e2d\u901a\u8fc7\u81ea\u5e26\u7684\u53d1\u52a8\u673a\u6a21\u578b\u53ef\u4ee5\u8bb2\u52a0\u901f\u5ea6\u8f6c\u5316\u4e3a\u8282\u6c14\u95e8\u5f00\u5ea6\u4ee5\u53ca\u5236\u52a8\u538b\u529b\u3002\uff083\uff09\u7ed9Trucksim/Carsim\u8f93\u5165\u8282\u6c14\u95e8\u5f00\u5ea6/\u5236\u52a8\u538b\u529b\u3002\u5bf9\u4e8e\u524d\u4e24\u79cd\u65b9\u6848\uff0c\u6d89\u53caTrucksim/Carsim\u5185\u90e8\u7684\u6a21\u578b\uff0c\u6211\u4eec\u4e0d\u597d\u505a\u8bc4\u4ef7\u3002\u4f46\u662f\u7b2c\uff083\uff09\u949f\u65b9\u6848\u662f\u5b58\u5728\u4e00\u5b9a\u7684\u4e0d\u8db3\u7684\uff1a\u6211\u4eec\u63a7\u5236\u6c42\u5f97\u7684\u63a7\u5236\u91cf\u4e00\u822c\u4e3a\u52a0\u901f\u5ea6/\u901f\u5ea6\uff0c\u901a\u8fc7\u53d1\u52a8\u673a\u7684\u9006map\u56fe\uff08\u89c1\u4e0b\u56fe\uff09\u53ef\u4ee5\u5229\u7528\u67e5\u8868\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u53d1\u52a8\u673a\u8f6c\u77e9\u548c\u53d1\u52a8\u673a\u8f6c\u901f\u4f4e\uff0c\u67e5\u5f97\u5bf9\u5e94\u5f97\u8282\u6c14\u95e8\u5f00\u5ea6\u3002\u4f46\u662f\u7531\u4e8e\uff0c\u53d1\u52a8\u673a\u9006map\u5728\u5236\u4f5c\u8fc7\u7a0b\u5b58\u5728\u5206\u8fa8\u7387\u5f97\u9650\u5236\uff0c\u53ef\u80fd\u5728\u63d2\u503c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u529e\u6cd5\u6b63\u597d\u627e\u5230\u4f7f\u8f66\u8f86\u4e00\u76f4\u4fdd\u6301\u67d0\u4e00\u901f\u5ea6\u5f97\u8282\u6c14\u95e8\u5f00\u5ea6\u3002\u4ece\u800c\u4f1a\u5bfc\u81f4\u8f66\u901f\u5ea6\u6296\u9707\u73b0\u8c61\u7684\u53d1\u751f\u3002 </p> <ol> <li>PID\u7684\u8c03\u53c2\u95ee\u9898\uff1a \u8be5\u95ee\u9898\u662f\u76ee\u524d\u53d1\u73b0\u7684\u5bfc\u81f4\u6296\u9707\u7684\u4e3b\u8981\u95ee\u9898\uff0cPID\u4e09\u4e2a\u53c2\u6570\u76f4\u63a5\u51b3\u5b9a\u7740\u7cfb\u7edf\u7684\u54cd\u5e94\u7279\u6027\uff0c\u6296\u9707\u7684\u53d1\u751f\u5f80\u5f80\u662f\u7531\u4e8ePID\u53c2\u6570\u4e0d\u5339\u914d\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0ftrick\uff1a\u5728\u8f66\u901f\u8ddf\u8e2a\u8fd9\u7c7b\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u8f66\u901f\u6296\u9707\u7684\u73b0\u8c61\uff0c\u5f80\u5f80\u5c06I\u4e0eD\u7684\u6bd4\u4f8b\u8bbe\u7f6e\u4e3a2\uff0c\u80fd\u591f\u5f88\u597d\u7684\u6d88\u9664\u6b64\u7c7b\u73b0\u8c61\u3002\uff08\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u7ecf\u9a8c\u4e00\u822c\u53ea\u9488\u5bf9\u4eff\u771f\uff0c\u6211\u4eec\u5728\u5b9e\u8f66\u8c03\u5f0f\u65f6\uff0c\u7531\u4e8e\u5b58\u5728\u5927\u91cf\u9ad8\u9891\u566a\u58f0\uff0cD\u7684\u5f15\u5165\u4f1a\u5bfc\u81f4\u63a7\u5236\u7684\u4e0d\u7a33\u5b9a\uff0c\u6240\u4ee5\u5b9e\u8f66\u4e2d\u4e00\u822c\u91c7\u7528PI\u63a7\u5236\u5668\uff09\u3002</li> </ol> <p>\u6700\u7ec8\uff0c\u5728\u76f8\u5bf9\u5339\u914d\u7684PID\u53c2\u6570\u4e0b\uff0c\u6296\u9707\u7684\u73b0\u8c61\u53ef\u4ee5\u88ab\u6291\u5236\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002  </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.8/Carsim%E4%BB%BF%E7%9C%9F%E4%B8%AD%E7%9A%84%E9%80%9F%E5%BA%A6%E6%8A%96%E9%9C%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#_3","title":"\u603b\u7ed3","text":"<p>\u603b\u4f53\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u7684\u662f\uff0cTrucksim/Carsim\u8f93\u51fa\u901f\u5ea6\u7684\u6296\u9707\u73b0\u8c61\u5e76\u4e0d\u662f\u7531\u4e8eTrucksim/Carsim\u672c\u8eab\u6240\u5f15\u8d77\u7684\uff0c\u800c\u662f\u7531\u4f60\u7684\u4e0a\u5c42\u7684\u63a7\u5236\u7b97\u6cd5\u6216\u8005\u4e0b\u5c42\u63a7\u5236\u5668\u6240\u51b3\u5b9a\u7684\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u63a7\u5236\u5668\uff0c\u5fc5\u7136\u4f1a\u4ea7\u751f\u4e0d\u540c\u539f\u56e0\u7684\u6296\u9707\u3002PID\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5177\u4f53\u7684\u539f\u56e0\u8fd8\u662f\u9700\u8981\u53bb\u5206\u6790\u81ea\u5df1\u7684\u7b97\u6cd5\u627e\u539f\u56e0\u3002</p> <p>\u6b64\u5916\uff0c\u5173\u4e8esimulink\u4eff\u771f\u9700\u8981\u8865\u5145\u7684\u662f\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u5b9a\u6b65\u957f\u7684\u4eff\u771f\u65b9\u5f0f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u662f\u7531\u4e8e\u5982\u679c\u4e4b\u540e\u9700\u8981\u505a\u5b9e\u8f66\u6d4b\u8bd5\uff0c\u5728\u751f\u6210\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d8\u6b65\u957f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6240\u4ee5\u5efa\u8bae\u4e00\u5f00\u59cb\u5c31\u91c7\u7528\u5b9a\u6b65\u957f\u7684\u65b9\u5f0f\u8fdb\u884c\u4eff\u771f\uff0c\u9632\u6b62\u4e4b\u540e\u4e0d\u597d\u6539\u3002 </p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2022.9/2022%E5%B9%B47%E6%9C%88%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/","title":"9.2","text":"<ol> <li>\u9ad8\u98de\u7ec4\u7684\u65b0\u8bba\u6587\uff1a\u5fae\u5206\u5e73\u5766\u4e0b\u7684\u8f68\u8ff9\u89c4\u5212</li> <li>\u6574\u7406\u4e86\u81ea\u52a8\u9a7e\u9a76\u7684\u8bfe\u9898\u7ec4\u4fe1\u606f\uff0c\u5728\u6d4f\u89c8\u5668\u6587\u4ef6\u5939\u91cc</li> <li>libai\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4ee3\u7801\u9605\u8bfb\u5b8c\u6210</li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2023.6/2023.6.29/","title":"2023.6.29","text":"<p>\u6539\u53d8\u5b9e\u65f6\u8ba1\u7b97ref\u7684\u65b9\u6cd5\uff0c\u5148\u79bb\u7ebf\u8ba1\u7b97ref\uff0c\u63d0\u9ad8\u5728\u7ebf\u7684\u6548\u7387</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2023.7/IVCPS%E8%AF%BE%E9%A2%98%E4%B8%80%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/","title":"\u4f1a\u8bae\u8bb0\u5f55","text":"<ul> <li>\u8bfe\u9898\u4e00\u4f1a\u5b8c\u6210\u7ec4\u5206\u96c6\u3001\u529f\u80fd\u96c6\u5b9a\u4e49</li> <li>\u7ec4\u5206\u96c6\u5bf9\u5e94\u7269\u7406\u67b6\u6784\u3001\u529f\u80fd\u96c6\u5bf9\u5e94\u903b\u8f91\u67b6\u6784</li> <li>\u7ec4\u5206\u96c6\u662f\u539f\u5b50\u7684\uff0c\u4e0d\u53ef\u518d\u5206\u7684\uff0c\u7531\u7ec4\u5206\u96c6\u5b9a\u9897\u7c92\u5ea6</li> <li>\u8bfe\u9898\u4e00\u63d0\u4f9b\u7ec4\u5206\u96c6\u3001\u529f\u80fd\u96c6\uff08\u4f9b1.3\u53c2\u8003\uff09\uff0c\u67b6\u6784\u8981\u7d20\u6846\u67b6</li> <li>\u67b6\u6784\u8bbe\u8ba1\u5206\u6790\u7ef4\u5ea6\u5c31\u662f\u56fd\u6c7d\u76847S\u4f53\u7cfb\u7684\u4e03\u4e2a\u7ef4\u5ea6</li> <li>\u670d\u52a1\u89c6\u89d2\u5bf9\u5e94\u529f\u80fd\uff0c\u7cfb\u7edf\u5bf9\u5e94\u7684\u662f\u7ec4\u5206\uff08\u7269\u7406\uff09</li> <li>1.2\u548c1.3\u7684\u5173\u7cfb\uff1a\u4e0d\u7ba1\u662f\u9700\u6c42\u8fd8\u662f1.3\u7684\u67b6\u6784\u5e94\u8be5\u90fd\u80fd\u591f\u5305\u52301.2\u7684\u4f53\u7cfb\u67b6\u6784\u4e2d\u3002\u9700\u89811.2\u5148\u63d0\u51fa\u4e00\u4e2a\u60f3\u6cd5\uff0c1.2\u5148\u628a1.2\u548c1.3\u7684\u4e1c\u897f\u5c1d\u8bd5\u5305\u8fdb\u53bb\uff0c\u7136\u540e1.2\u53cd\u9988\u7ed91.1\u548c1.3\u7684\u7ed3\u679c\uff0c1.3\u548c1.1\u7ed9\u51fa\u53cd\u9988\u3002</li> <li>1.1\u548c1.3\u7684\u8026\u5408\u5f62\u5f0f\uff1a\u90fd\u91c7\u7528\u6a21\u677f\u7684\u8868\u8fbe\u65b9\u5f0f\u3002</li> <li>\u76ee\u524dIVCPS\u7b2c\u4e00\u7ea7\u3001\u8f66\u8def\u4e91\u7f51\u56fe\u662f\u7b2c\u4e8c\u7ea7\uff0c\u76ee\u524d\u4ee5\u8f66\u8def\u4e91\u7f51\u56fe\u4e0b\u8fb9\u7684\u4e00\u7ea7\u4e3a\u6807\u51c6\u5f00\u5c55\u5de5\u4f5c\u3002</li> <li>1.4\u4e3b\u8981\u8bc4\u4ef7\u548c\u4f18\u53161.3\u7684\u67b6\u6784\uff0c\u628a1.1\u7684\u9700\u6c42\u5f53\u4f5c\u76ee\u6807\u3002</li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/2023.7/IVCPS%E8%AF%BE%E9%A2%98%E4%B8%80%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/#_2","title":"\u4e0b\u4e00\u6b65\u5de5\u4f5c","text":"<ul> <li>1.1\u548c1.3\u63d0\u4f9b\u7ed91.4\u4e00\u4e9b\u8f93\u51fa\u7269\u5e2e\u52a9\u4ed6\u4eec\u505a\u8bc4\u4f30\u3002</li> <li>\u4e0b\u6b21\u53cc\u5468\u4f1a\u6c47\u62a5\u4e00\u4e0b1.3\u5177\u4f53\u7684\u529f\u80fd\u67b6\u6784\u600e\u4e48\u548c1.1\u548c1.2\u8fdb\u884c\u8054\u7cfb\u3002</li> </ul>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/IVCPS%E4%BC%9A%E8%AE%AE/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BC%9A%E8%AE%AE/","title":"\u7b2c\u4e00\u6b21\u4f1a\u8bae","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/IVCPS%E4%BC%9A%E8%AE%AE/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BC%9A%E8%AE%AE/#1","title":"1.\u786e\u5b9a\u603b\u4f53\u76ee\u6807","text":"<ol> <li>\u91cf\u5316\u6307\u6807\u4e0d\u73b0\u5b9e\uff08\u4e3b\u8981\u9488\u5bf9\u5177\u4f53\u5e94\u7528\u800c\u4e0d\u9488\u5bf9\u7cfb\u7edf\u672c\u8eab\uff09\uff0c\u8003\u8651\u91c7\u7528\u4e24\u4e2a\u4e3b\u89c2\u6307\u6807\u5bf9\u7cfb\u7edf\u8fdb\u884c\u8bc4\u4ef7\uff1a\u9c81\u68d2\uff08\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7ec6\u5316\u62c6\u5206\uff09\u3001\u6cdb\u5316\u80fd\u529b\uff08\u5bf9\u4e0d\u540c\u5e94\u7528\uff09\u3002\u53ef\u6f14\u8fdb\u6027\u662f\u5fd7\u8d85\u548c\u5965\u5b81\u8fd9\u8fb9\u4e3b\u8981\u8003\u8651\u7684\u90e8\u5206\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u6574\u4f53\u7684\u6846\u67b6\u4ee5\u53ca\u611f\u77e5\u548c\u51b3\u7b56\u7684\u4fe1\u606f\u6d41\u67b6\u6784\uff0c\u5965\u5b81\u548c\u5fd7\u8d85\u5728\u8be5\u67b6\u6784\u4e0b\u7684\u53ef\u6f14\u8fdb\u884c\u7814\u7a76\u3002</li> </ol> <p>\u7b54\uff1a\u4e3b\u89c2\u6027\u8bc4\u4ef7\u6307\u6807\u7ee7\u7eed\u8c03\u7814\uff0c\u9c81\u68d2\u5230\u5e95\u53ef\u4ee5\u4e0d\u53ef\u91cf\u5316\u8bc4\u4ef7\u3002</p> <ol> <li> <p>\u786e\u5b9a\u7cfb\u7edf\u7684\u51e0\u5927\u5173\u952e\u5143\u7d20\uff08\u5b9e\u4f53\uff09\u3001\u51e0\u5927\u6a21\u5757\uff08\u529f\u80fd\uff09\uff1a    \u8f66\u3001\u8def\u3001\u4e91\u3001\u7f51\uff08\u4e2d\u95f4\u4ef6\uff09\u3001\u56fe\u3002</p> </li> <li> <p>\u786e\u5b9a\u6700\u5c0f\u7cfb\u7edf\uff08\u7cfb\u7edf\u7684\u5fc5\u8981\u5143\u7d20\uff09\u3001\u6269\u5c55\u7cfb\u7edf\uff08\u975e\u5fc5\u8981\u5143\u7d20\uff09    \u786e\u5b9a\u6700\u5c0f\u7cfb\u7edf\uff0c\u9996\u5148\u8981\u786e\u5b9a\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd\u3002\u8fd9\u91cc\u5206\u6b67\uff08\u9700\u8981\u4e00\u5230\u4e24\u5468\u8be6\u7ec6\u8ba8\u8bba\uff09\uff1a</p> </li> <li>\u89c2\u70b9\u4e00\uff1a\u6838\u5fc3\u529f\u80fd\u5c31\u662f\u901a\u8baf\uff0c\u6700\u5c0f\u7cfb\u7edf\u5982\u679c\u80fd\u591f\u5b9e\u73b0\u4fe1\u606f\u7684\u63a5\u53d7\u548c\u53d1\u9001\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u53ef\u4ee5\u8fdb\u884c\u6269\u5c55\u3002</li> <li>\u89c2\u70b9\u4e8c\uff1a\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6240\u6709\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6700\u5c0f\u5e94\u7528\u3002</li> </ol> <p>\u7b54\uff1a\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u5e94\u7528\uff0c\u6240\u6709\u5e94\u7528\u90fd\u4f9d\u8d56\u4e8e\u5b83\u3002</p> <ol> <li>\u6700\u540e\u8981\u8fbe\u5230\u7684\u76ee\u7684\uff1a\u51fa\u6807\u51c6\uff1f\u5e94\u7528\u5b9e\u73b0\uff1f\u521b\u65b0\u70b9\u600e\u4e48\u89e3\u91ca\uff1f    \u5982\u679c\u8981\u5f62\u6210\u5e94\u7528\uff0c\u67b6\u6784\u91cc\u4e0d\u8003\u8651\u4f20\u611f\u5668\u566a\u58f0\u7b49\u4e0d\u786e\u5b9a\u6027\uff0c\u53ea\u662f\u7ed9\u51fa\u771f\u503c\u7684\u4fe1\u606f\u6d41\uff0c\u5177\u4f53\u600e\u4e48\u5904\u7406\u566a\u58f0\u548c\u4e0d\u786e\u5b9a\u6027\uff0c\u7531\u7b97\u6cd5\u5c42\u9762\u89e3\u51b3\u3002</li> </ol> <p>\u7b54\uff1a\u67b6\u6784\u4e0d\u8003\u8651\u4e0d\u786e\u5b9a\uff0c\u53ea\u8003\u8651\u771f\u503c\u4fe1\u606f\u6d41\u3002\u6211\u4eec\u6700\u540e\u5373\u8981\u51fa\u6807\u51c6\uff0c\u53c8\u8981\u5b9e\u73b0\u5e94\u7528\u3002</p> <ol> <li> <p>\u8def\u7aef/\u8f66\u7aef\u8981\u4e0a\u4f20\u7684\u6700\u5c0f\u4fe1\u606f\u3001\u8f66\u7aef\u9700\u8981\u7684\u6700\u5c0f\u4fe1\u606f\uff08\u54ea\u4e9b\u662f\u653e\u5728\u8f66\u7aef\u505a\u7684\uff0c\u54ea\u4e9b\u9700\u8981\u653e\u5728\u4e91\u7aef\u7684\uff09</p> </li> <li> <p>\u5168\u7f51\u8054 or \u6df7\u5408\u7cfb\u7edf</p> </li> </ol> <p>\u7b54\uff1a\u6df7\u5408\u7cfb\u7edf</p> <ol> <li>\u5b9a\u4f4d\uff08\u7f51\u8054\u5f0f\u5b9a\u4f4d\uff09</li> </ol> <p>\u7b54\uff1a\u67b6\u6784\u9700\u8981\u8003\u8651\uff0c\u4f46\u662f\u4e0d\u505a\u5177\u4f53\u7b97\u6cd5\u3002</p>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/IVCPS%E4%BC%9A%E8%AE%AE/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BC%9A%E8%AE%AE/","title":"\u7b2c\u4e8c\u6b21\u4f1a\u8bae","text":""},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/IVCPS%E4%BC%9A%E8%AE%AE/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BC%9A%E8%AE%AE/#1","title":"1.\u9057\u7559\u95ee\u9898","text":"<ol> <li> <p>\u4e3b\u89c2\u6027\u8bc4\u4ef7\u6307\u6807\u7ee7\u7eed\u8c03\u7814\uff0c\u9c81\u68d2\u5230\u5e95\u53ef\u4ee5\u4e0d\u53ef\u91cf\u5316\u8bc4\u4ef7\u3002</p> </li> <li> <p>\u786e\u5b9a\u660e\u5929\u8981\u4ea4\u7684\u4e1c\u897f</p> </li> <li> <p>\u53ef\u6f14\u8fdb\u884c\u7684\u8c03\u7814\u7ed3\u679c\uff1f</p> </li> </ol>"},{"location":"%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/IVCPS%E4%BC%9A%E8%AE%AE/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BC%9A%E8%AE%AE/#2","title":"2.\u65b0\u95ee\u9898","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/","title":"Mechine Learning","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#instruction","title":"Instruction","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#defination","title":"Defination","text":"<p>A Computer program is said to learn from experience <code>E</code> with respect to some task <code>T</code> and some performance measure <code>P</code>, if its performance on <code>T</code>, as measured by <code>P</code>, improves with experience <code>E</code>.</p> <p>There are two common types of Machine Learning: Supervised Learning and Unsupervised Learning.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#supervised-learning","title":"Supervised Learning","text":"<p>The term Supervised Learning refers to the fact that we gave the algorithm a data set which we call \"right answer\", and the task of the algorithm was to produce more of these right answers.</p> <p>The problem is called a</p> <ul> <li>regression problem, if the algorithm should predict a continuous valued output;</li> <li>classification problem, if the algirhtm should predict a discrete valued output.</li> </ul> <p>For example, you have a large inventory of identical items and want to predict how many of these items will sell over the next 3 months, this is a regression problem. </p> <p>If you would like to examine individual customer accounts, and for each account decide if it has been hacked/compromised, this is a classification problem.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#unsupervised-learning","title":"Unsupervised Learning","text":"<p>Unsupervised Learning allows us to approach problems whith little or no idea what our results should look like. We can derive structure from data where we don't necessarily know the effect of the variables.</p> <p>We can derive this structure by clustering the data based on relationships among the variables in the data.</p> <p>With unsupervised learning there is no feedback based on the prediction results.</p> <p>For example,</p> <ul> <li>Clustering: Take a collection of 1000000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles and so on.</li> <li>Non-Clustering: The \"Cocktail Party Problem\", allows you to find structure in a chaotic environment.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#linear-regression-with-one-variable","title":"Linear Regression with One Variable","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#model-representation","title":"Model Representation","text":"<p>To establish notation for future use, we use:</p> <ul> <li>\\(x_i\\) to denote the \"input\" variables(also called input features);</li> <li>\\(y_i\\) to denote the \"output\" variables we are trying to predict.</li> </ul> <p>A pair \\((x_i, y_i)\\) is called a training example and a list of training example is called a training set.</p> <p>We also use:</p> <ul> <li>\\(X\\) to denote the space of input values;</li> <li>\\(Y\\) to denote the space of output values;</li> </ul> <p>To describe the supervised learning problem more formally, our goal is, given a training set, to learn a function \\(h: X \\to Y\\) so that \\(h(x)\\) is a \"good\" predictor for the corresponding value of \\(y\\). For history reason, the function \\(h\\) is called a hypothesis. The process is like this: <pre><code>  +----------------+\n  |                |\n  |  Training set  |\n  |                |\n  +-------+--------+\n          |\n          |\n          |\n  +-------v--------+\n  |                |\n  |  Learning      |\n  |  algorithm     |\n  +-------+--------+\n          |\n          |\n          |\n       +--v--+\n       |     |\nx +----&gt;  h  +-----&gt; y\n       |     |\n       +-----+\n</code></pre></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#cost-function","title":"Cost Function","text":"<p>we can measure the accuracy of our hypothesis function by using a cost function. The most common cost function is \"Squared error function\" or called \"Mean squared error\": $$ J(\\theta_0, \\theta_1) = \\frac{1}{2m} \\sum_{i = 1}^{m}(\\hat{y_i} - y_i)^2 = \\frac{1}{2m} \\sum_{i = 1}^{m}(h_{\\theta}(x_i) - y_i)^2 $$ The mean is halved \\((\\frac{1}{2})\\) as a convenience for the computation of the gradient descent, as the derivative term of the square function will cancel out the \\(\\frac{1}{2}\\) term.</p> <p>We should try to minimize the cost function to find the best \\(h\\) to predict the output data.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#gradient-descent","title":"Gradient Descent","text":"<p>So we have our hypothesis function and we have a way of measuring how well it fits into the data. Now we need to estimate the parameters in the hypothesis function. That's where gradient descent comes in.</p> <p>We put \\(\\theta_0\\) on the \\(x\\) axis and \\(\\theta_1\\) on the \\(y\\) axis, with the cost function on the vertical \\(z\\) axis. The points on our graph will be the result of the cost function using our hypothesis with those specific \\(\\theta\\) parameters. The goal is to find the very bottom point of the graph.</p> <p>The gradient descent algorithm is:</p> \\[ \\theta_j = \\theta_j - \\alpha \\frac{\\partial}{\\partial\\theta_j}J(\\theta_0, \\theta_0) \\] <p>where:</p> <ul> <li>\\(j = 0, 1\\) represents the feature index number.</li> <li>\\(\\alpha\\) is called \"learning rate\" to ensure that the gradient descent algorithm converges in a reasonable time.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#gradient-descent-for-cost-function","title":"Gradient Descent For Cost Function","text":"<p>We can substitute our cost function and our actual hypothesis function and modify the equation to:</p> \\[ \\theta_{0} := \\theta_{0} - \\alpha\\frac{1}{m}\\sum_{i = 1}^{m}(h_{\\theta}(x_{i}) - y_{i}) \\] \\[ \\theta_{1} := \\theta_{1} - \\alpha\\frac{1}{m}\\sum_{i = 1}^{m}((h_{\\theta}(x_{i}) - y_{i})x_{i}) \\] <p>where:</p> <ul> <li>\\(m\\) is the size of the training set;</li> <li>\\(\\theta_{0}\\) is a constant that will be changing simultaneously with \\(\\theta_{1}\\)</li> <li>\\(x_{i}, y_{i}\\) are values of the given training set.</li> </ul> <p>With the equation, we can repeat calculating \\(\\theta_{0}\\) and \\(\\theta_{1}\\) until convergence.</p> <p>This method looks at every example in the entire training set on every step, and is called <code>batch gradient descent</code>.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#linear-regression-with-multiple-variables","title":"Linear Regression with Multiple Variables","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#multiple-features","title":"Multiple Features","text":"<p>Linear regression with multiple variables is also known as <code>multivariate linear regression</code>.</p> <p>The notation for equations where we can have any number of input variables is as below:</p> <ul> <li>\\(x_{j}^i\\) is the value of feature \\(j\\) in the \\(ith\\) training example;</li> <li>\\(x^{i}\\) is the input (features) of the \\(ith\\) training exmaple;</li> <li>\\(m\\) is the number of training examples;</li> <li>\\(n\\) is the number of features.</li> </ul> <p>The multivariable form of the hepothesis function with multiple features is as follows:</p> \\[ h_{\\theta}(x) = \\theta_{0} + \\theta_{1}x_{1} + \\theta_{2}x_{2} + \\theta_{3}x_{3} + ... + \\theta_{n}x_{n} \\] <p>Using the definition of matrix multiplication, our multivariable hypothesis function can be concisely represented as:</p> \\[ h_{\\theta}(x) = \\begin{bmatrix} \\theta_0 \\theta_1 \\cdots \\theta_n \\end{bmatrix} \\begin{bmatrix} x_0 \\\\\\\\ x_1 \\\\\\\\ \\vdots \\\\\\\\ x_n \\end{bmatrix} = \\theta^Tx \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#gradient-descent-for-multiple-variables","title":"Gradient Descent for Multiple Variables","text":"<p>The gradient descent equation is the same form, we just have to repeat it for our \\(n\\) feature:</p> \\[ \\begin{cases} \\theta_{0} := \\theta_0 - \\alpha\\frac{1}{m}\\sum_{i=1}^m(h_{\\theta_0}(x^i) - y^i) \\cdot x_0^i \\\\\\\\ \\theta_1 := \\theta_1 - \\alpha\\frac{1}{m}\\sum_{i=1}^m(h_{\\theta_1}(x^i) - y^i) \\cdot x_1^i \\\\\\\\ \\theta_2 := \\theta_2 - \\alpha\\frac{2}{m}\\sum_{i=2}^m(h_{\\theta_2}(x^i) - y^i) \\cdot x_2^i \\\\\\\\ ... \\end{cases} \\] <p>In other words:</p> \\[ \\theta_j := \\theta_j - \\alpha\\frac{1}{m}\\sum_{i=1}^m(h_{\\theta}(x^i) - y^i) \\cdot x_j^i \\] <p>where:</p> <ul> <li>\\(j = 0, 1, ..., n\\)</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#feature-scaling-to-speed-up-gradient-descent","title":"Feature Scaling to Speed up Gradient Descent","text":"<p>We can speed up gradient descent by having each of our input values in roughly the same range. This is because \\(\\theta\\) will descend quickly on small ranges and slowly on large ranges, and so will oscillate inefficiently down to the optimum when the variables are very uneven.</p> <p>The way to prevent this is to modify the ranges of our input variables so that they are all roughly the same. Ideally:</p> \\[ -1 &lt;= x_i &lt;= 1 \\] <p>or</p> \\[ -0.5 &lt;= x_i &lt;= 0.5 \\] <p>These are not exact requirements, we are only trying to speed things up. The goal is to get all input variables into roughly one of these ranges, give or take a few.</p> <p>Two techiques to help with this are:</p> <ul> <li>feature scaling: involves diving the input values by the range of the input variable, resulting in a new range of just \\(1\\);</li> <li>mean normalization: involves subtracing the average value for an input variable from the values for that input variable, resulting in a new average value for the input variable of just zero.</li> </ul> <p>To impliment both of these techniques, adjust your input values as shown in this formula:</p> \\[ x_i := \\frac{x_i - \\mu_i}{s_i} \\] <p>where:</p> <ul> <li>\\(\\mu_i\\) is the average of all the values for feature;</li> <li>\\(s_i\\) is the range of values(\\(max - min\\)).  </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#choosing-correct-learning-rate","title":"Choosing Correct Learning Rate","text":"<p>To debug gradient descent, we can make a plot with number of iterations on the x-axis. Now plot the cost function \\(J(\\theta)\\) over the number of iterations of gradient descent. If \\(J(\\theta)\\) increases, then you probably need to decrease \\(\\alpha\\).</p> <p>The learning rate effects the convergence of the \\(J(\\theta)\\):</p> <ul> <li>\\(\\alpha\\) is too small: slow convegence;</li> <li>\\(\\alpha\\) is too large: may not decrease on every iteration and shus may not converge.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#improve-features-and-hypothesis","title":"Improve features and hypothesis","text":"<p>We can improve our features and the form of our hypothesis function in a couple different ways.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#feature","title":"Feature","text":"<p>We can combine multiple features into one. For example, we can combine \\(x_1\\) and \\(x_2\\) into a new feature \\(x_3\\) by taking \\(x_3 = x_1 * x_2\\).</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#hypothesis-function","title":"Hypothesis Function","text":"<p>Our hypothesis function need not to be linear (a straight line) if that does not fit the data well. We can change the behavior or curve of our hypothesis function by making it a:</p> <ul> <li>quadratic;</li> <li>cubic;</li> <li>square root</li> </ul> <p>function.</p> <p>One important thing to keep in mind is, if you choose your features this way, the feature scaling becomes very important.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#normal-equation-for-multiple-variables","title":"Normal Equation for Multiple Variables","text":"<p>Gradient descent gives one way to solve the minimizing \\(J\\), the <code>normal equation</code> method is another way of doing so. In this way, we will minimizing \\(J\\) by explicitly taking its derivatives with respect to the \\(\\theta_j\\) and set them to \\(0\\). This allows us to find the optimum theta without iteration. The normal equation is given below:</p> \\[ \\theta = (X^TX)^{-1}X^Ty \\] <p>Following is a comparison of gradient descent and the normal equation:</p> Gradient Descent Normal Equation Need to choose \\(\\alpha\\) No need to choose \\(\\alpha\\) Need many iterations No need to iterate Time complexity \\(O(kn^2)\\) Time complexity \\(O(n^3)\\), need to calculate inverse of \\(X^TX\\) Works well when \\(n\\) is large Slow if \\(n\\) is very large <p>With the normal equation, computing the inversion has comlexity \\(O(n^3)\\). So if we have a very large number of features, the normal equation will be slow. In practice, when \\(n\\) exceeds \\(10000\\) it might be a good time to go from normal solution to an iterative process.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#noninvertibility","title":"Noninvertibility","text":"<p>The normal equation used \\(X^TX\\) to calculate variables, but \\(X^TX\\) might be \"noninvertible\", the common causes may be:</p> <ul> <li>Redundant features, where two features are very closely related;</li> <li>Too many features(e.g. \\(m &lt;= n\\)), in this case, delete some featues or use \"regularization\".</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#logistic-regression","title":"Logistic Regression","text":"<p>Logistic regression is a method for classifying data into discrete outcomes. For example, we might use logistic regression to classify an email as spam or not spam. In this module, we introduce the notion of classification, the cost function for logistic regression, and the application of logistic regression to multi-class classification.</p> <p>The classification problem is just like the regression problem, except that the values we now want to predict take on only a small number of discrete values. To attempt classification, one method is to use linear regression and map all predictions greater than \\(0.5\\) as \\(1\\) and all less than \\(0.5\\) as \\(0\\). However, this method doesn't work well because classification is not really a linear function.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#hypothesis-representation","title":"Hypothesis Representation","text":"<p>We could approach the classification problem ignoring the fact that y is discrete value and use our old linear function to predict y with given x. However, it doesn't make sense for \\(h_{\\theta}(x)\\) to take value larger than \\(1\\) or smaller than \\(0\\) when we know that \\(y \\in {0, 1}\\). To fix this, we plug \\(\\theta^Tx\\) into the <code>Logistic Function</code>.</p> <p><code>Logistic Function</code>(or <code>Sigmoid Function</code>) is defined as:</p> \\[ h_{\\theta}(x) = g(\\theta^Tx) \\] \\[ z = \\theta^Tx \\] \\[ g(z) = \\frac{1}{1 + e^{-z}} \\] <p>more details can be found here. The function \\(g(z)\\) maps any real number to the \\((0, 1)\\) interval, making it useful for transforming an arbitrary-valued function into a function better suited for classification.</p> <p>\\(h_{\\theta}(x)\\) will give us the probability that our output is \\(1\\). For example, \\(h_{\\theta}(x) = 0.7\\) gives us the probability of \\(0.7\\) that our output is \\(1\\).</p> \\[ h_{\\theta}(x) = P(y = 1 |x; \\theta) = 1 - P(y = 1 | x ; \\theta) \\] \\[ P(y = 1 |x; \\theta) + 1 - P(y = 1 | x ; \\theta) = 1 \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#decision-boundary","title":"Decision Boundary","text":"<p>In order to get our discrete \\(0 or 1\\), we can translate the output of the hypothesis function as follows:</p> \\[ h_{\\theta}(x) \\ge 0.5 \\to y = 1 \\] \\[ h_{\\theta}(x) \\le 0.5 \\to y = 0.5 \\] <p>The way our logistic function \\(g\\) behaves when its input is greater than or equal to zero, its output is greater than or equal to \\(0.5\\):</p> \\[ \\begin{array}{lcl} g(z) \\ge 0.5 \\\\\\\\ \\mbox{if } z \\ge 0 \\end{array} \\] <p>So if the input to \\(g\\) is \\(\\theta^TX\\), then that means:</p> \\[ h_{\\theta}(x) = g(\\theta^Tx) \\ge 0.5 \\] <p>when</p> \\[ \\theta^Tx \\ge 0 \\] <p>From these statements we can now say:</p> \\[ \\theta^Tx \\ge 0 \\to y = 1 \\] \\[ \\theta^Tx \\le 0 \\to y = 0 \\] <p>The <code>decision boundary</code> is the line that separates the area where \\(y = 0\\) and where \\(y = 1\\). It is created by our hypothesis function.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#cost-function_1","title":"Cost Function","text":"<p>We cannot use the same cost function that we use in linear regression because the Logistic Function will cause the output to be wavy, causing many local optima. In other words, it isn't a convex function.</p> <p>Instead, our cost function for logistic regression looks like:</p> \\[ \\begin{align} J(\\theta) &amp; = \\frac{1}{m}\\sum_{i=1}^{m}Cost(h_{\\theta}(x^i), y^i) \\\\\\\\ Cost(h_{\\theta}(x^i), y^i) &amp; = -log(h_{\\theta}(x)) &amp; \\mbox{ if } y = 1 \\\\\\\\ Cost(h_{\\theta}(x^i), y^i) &amp; = -log(1 - h_{\\theta}(x)) &amp; \\mbox{ if } y = 0 \\end{align} \\] <p>When \\(y = 1\\), we get the following plot for \\(J(\\theta)\\) vs \\(h_{\\theta}(x)\\):</p> <pre><code>^      X        y = 1\n|      XX\n|       X\n|       XX\n|        XX\n|         XX\n|          XX\n|           XXX\n|             XX\n|               XX\n|                XXX\n|                  XXX\n|                    XXX\n|                      XX\n|                        XXX\n|                          XXX\n|                             XXX \n+-------------------------------XX+-----------&gt;\n0            h(x)                 1\n</code></pre> <p>Similarly, when \\(y = 0\\), we get the following plot for \\(J(\\theta)\\) vs \\(h_{\\theta}(x)\\):</p> <pre><code>^               y = 0\n|\n|\n|\n|                             XX\n|                             XX\n|                            XX\n|                           XX\n|                          XX\n|                       XXX\n|                    XXXX\n|                  XXX\n|               XXX\n|             XXX\n|          XXX\n|      XXXX\n| XXXXX\nXX--------------------------------+-----------&gt;\n0            h(x)                 1\n</code></pre> \\[ \\begin{align} Cost(h_{\\theta}(x), y) &amp; = 0 &amp; \\mbox{if } h_{\\theta}(x) = y &amp; \\\\\\\\ Cost(h_{\\theta}(x), y) &amp; \\to \\infty &amp; \\mbox{if }  y = 0 \\mbox{ and } h_{\\theta}(x) = 1 \\\\\\\\ Cost(h_{\\theta}(x), y) &amp; \\to \\infty &amp; \\mbox{if }  y = 1 \\mbox{ and } h_{\\theta}(x) = 0 \\end{align} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#simplified-cost-function","title":"Simplified Cost Function","text":"<p>We can compress our cost function's two conditianal cases into one case:</p> \\[ Cost(h_{\\theta}(x), y) = -ylog(h_{\\theta}(x)) - (1 - y) log(1 - h_{\\theta}(x)) \\] <p>Then the entire const function is as follows:</p> \\[ J(\\theta) = -\\frac{1}{m} \\sum_{i = 1}^m[y^ilog(h_{\\theta}(x^i)) + (1 + y^i)log(1 - h_{\\theta}(x^i))] \\] <p>A vectorized implementation is:</p> \\[ \\begin{align} h &amp; = g(X\\theta) \\\\\\\\ J(\\theta) &amp; = \\frac{1}{m} \\cdot (-y^Tlog(h) - (1 - y)^Tlog(1 - h)) \\end{align} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#gradient-descent_1","title":"Gradient Descent","text":"<p>The general form of gradient descent is:</p> \\[ \\theta_j := \\theta_j - \\alpha \\frac{\\partial}{\\partial \\theta_j}J(\\theta) \\] <p>We can work out the derivative part using calculus to get:</p> \\[ \\theta_j := \\theta_j - \\frac{\\alpha}{m} \\sum_{i=1}{m}(h_{\\theta}(x^i) - y^i)x_j^i \\] <p>A vectorized implementation is:</p> \\[ \\theta := \\theta - \\frac{\\alpha}{m} X^T(g(X\\theta) - \\overrightarrow{y}) \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#advanced-optimization","title":"Advanced Optimization","text":"<p>Instead of gradient descent,</p> <ul> <li>\"Conjugate gradient\",</li> <li>\"BFGS\",</li> <li>\"L-BFGS\"</li> </ul> <p>are more sophisticated, faster ways to optimize \\(\\theta\\). You can use a existed libaray to apply these mathods.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#multiclass-classification-one-vs-all","title":"Multiclass Classification: One-vs-all","text":"<p>Now we will approach the classification of data when we have more than two . Instead of \\(y = {0, 1}\\), we will expand our definition so that \\(y = {0, 1, ..., n}\\).</p> <p>Since \\(y = {0, 1, ..., n}\\), we divide our problem into \\(n+1\\) (\\(+1\\) because the index start at 0) binary classification problems. In each one, we predict the probability that \\(y\\) is a member of one of our classes.</p> \\[ \\begin{align} y &amp; \\in {0, 1, ..., n} \\\\\\\\ h_{\\theta}^{(0)}(x) &amp; = P(y = 0 | x; \\theta) \\\\\\\\ h_{\\theta}^{(1)}(x) &amp; = P(y = 1 | x; \\theta) \\\\\\\\ h_{\\theta}^{(2)}(x) &amp; = P(y = 2 | x; \\theta) \\\\\\\\ \\cdots \\\\\\\\ h_{\\theta}^{(n)}(x) &amp; = P(y = n | x; \\theta) \\\\\\\\ prediction &amp; = \\max_i(h_{\\theta}^{(i)}(x)) \\end{align} \\] <p>We are basically choosing one class and then lumping all the others into a single second class. We do this repeatedly, applying binary logistic regression to each case, and then use the hypothesis that returned the highest value as prediction.</p> <p>To sumerize:</p> <ul> <li>Train a logistic regression classifier \\(h_{\\theta}(x)\\) for each class to predict the probability that \\(y = i\\);</li> <li>To make a prediction on a new \\(x\\), pick the class that maximized \\(h_{\\theta}(x)\\).</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#neural-networks","title":"Neural Networks","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#model-representation_1","title":"Model Representation","text":"<p>In this chapter, we will represent a hypothesis function using neural networks. At a very simple level, neurons are basically computational units that take inputs(dendrites) as electrical inputs(called \"spikes\") that are channeled to outputs(axons). In our model, our dendrites are like the input features \\(x_{1} \\cdots x_{n}\\) and the output is the result of our hypothesis function. In this model our \\(x_{0}\\) input node is sometimes called the \"bias unit\". It is always euqal to \\(1\\). In neural networks, we use the same logistic function as in classification, \\(\\frac{1}{1+e^{-\\theta^Tx}}\\), yet we sometimes call it a sigmoid(logistic) activation function. In this situation, our \"theta\" parameters are sometimes called \"weights\".</p> <p></p> <p>Visually, a simplistic representation looks like:</p> \\[ \\begin{bmatrix} x_{0} \\\\\\\\ x_{1} \\\\\\\\ x_{2} \\end{bmatrix} \\to \\mbox{[ ]} \\to h_{\\theta}(x) \\] <p>Our input nodes(layer 1), also known as the \"input layer\", go into another node(layer 2), which finally outputs the hypothesis function, known as \"output layer\".</p> <p>We can have intermediate layers of nodes between \"input layers\" and \"output layers\" called the \"hidden layers\".</p> <p>In this example, we label these intermediate or \"hidden\" layer nodes \\(a_{0}^2 \\cdots an_{n}^2\\) and call them \"activation units\".</p> \\[ a_{i}^{(j)} = \\mbox{\"activation\" of unit i in layer j} \\] \\[ \\Theta^{(j)} = \\mbox{matrix of weights controlling function mapping from layer j to layer j + 1} \\] <p>If we have hidden layer, it would like:</p> \\[ \\begin{bmatrix} x_{0} \\\\\\\\ x_{1} \\\\\\\\ x_{2} \\\\\\\\ x_{3} \\end{bmatrix} \\to  \\begin{bmatrix} a_{0}^{(2)} \\\\\\\\ a_{1}^{(2)} \\\\\\\\ a_{2}^{(2)} \\\\\\\\ a_{3}^{(2)} \\end{bmatrix} \\to h_{\\theta}(x) \\] <p>The values for each of the \"activation\" nodes is obtained as follows:</p> \\[ \\begin{bmatrix} \\Theta_{10}^{(1)} &amp; \\Theta_{11}^{(1)} &amp; \\Theta_{12}^{(1)} &amp; \\Theta_{13}^{(1)} \\\\\\\\ \\Theta_{20}^{(1)} &amp; \\Theta_{21}^{(1)} &amp; \\Theta_{22}^{(1)} &amp; \\Theta_{33}^{(1)} \\\\\\\\ \\Theta_{30}^{(1)} &amp; \\Theta_{31}^{(1)} &amp; \\Theta_{32}^{(1)} &amp; \\Theta_{33}^{(1)}  \\end{bmatrix} \\begin{bmatrix} x_{0} \\\\\\\\ x_{1} \\\\\\\\ x_{2} \\\\\\\\ x_{3} \\end{bmatrix} = \\begin{bmatrix} a_{1}^{(2)} \\\\\\\\ a_{2}^{(2)} \\\\\\\\ a_{3}^{(2)} \\end{bmatrix} \\] \\[ h_{\\Theta}^{(x)} = a_{1}^{(3)} = g( \\begin{bmatrix} \\Theta_{10}^{(2)} &amp; \\Theta_{11}^{(2)} &amp; \\Theta_{12}^{(2)} &amp; \\Theta_{13}^{(2)}  \\end{bmatrix} \\begin{bmatrix} a_{0}^{(2)} \\\\\\\\ a_{1}^{(2)} \\\\\\\\ a_{2}^{(2)} \\\\\\\\ a_{3}^{(2)} \\end{bmatrix} ) \\] <p>This is saying that we compute our activation nodes by using a \\(3 \\times 4\\) matrix of parameters. We apply each row of the parameters to our inputs to obtain the value for one activation node. Our hypothesis output is the logistic function applied to the sum of the values of our activation nodes, which have been multiplied by yet another another parameter matrix \\(\\Theta^{(2)}\\) containing the weights for our second layer of nodes. Each layer gets its own matrix of weights, \\(\\Theta^{(j)}\\). The dimension of these marices of weights is determined as follows:</p> <p>If network has \\(s_{j}\\) units in layer \\(j\\) and \\(s_{j + 1}\\) in layer \\(j + 1\\), then \\(\\Theta_{0}^{j}\\) will be of dimension \\(s_{j + 1} \\times (s_{j} + 1)\\).</p> <p>The \\(+1\\) comes from the addition in \\(\\Theta^{(j)}\\) of the \"bias node\" \\(x_{0}\\) and \\(\\Theta_{0}^{(j)}\\). In other words, the output nodes will not include the bias node while the input nodes will.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#application","title":"Application","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#implement-a-logical-operator","title":"Implement A Logical Operator","text":"<p>A simple example of applying neural networks is by predicting \\(x_{1} \\mbox{ AND } x_{2}\\) which is the logical <code>and</code> operator and is only true if both \\(x_{1}\\) and \\(x_{2}\\) are \\(1\\).</p> <p>The graph of our functions will look like:</p> \\[ \\begin{bmatrix} x_{0} \\\\\\\\ x_{1} \\\\\\\\ x_{2} \\end{bmatrix} \\to  \\begin{bmatrix} g(z^{(2)}) \\end{bmatrix} \\to h_{\\Theta}^{(x)} \\] <p>Remember that \\(x_{0}\\) is our bias variable and is always \\(1\\).</p> <p>Let's set our first \\(\\Theta\\) matrix as:</p> \\[ \\Theta^{(1)} = \\begin{bmatrix} -30 &amp; 20 &amp; 20 \\end{bmatrix} \\] <p>This will case the output of our hypothesis to only be positive if both \\(x_{1}\\) and \\(x_{2}\\) are \\(1\\). In other words:</p> \\[ h_{\\Theta}(x) = g(-30 + 20x_{1} + 20x_{2}) \\] <p>And \\(g(z)\\) is the sigmoid fucntion, it's \\(1\\) if \\(z &gt; 0\\), and \\(0\\) if \\(z &lt; 0\\). So the result is:</p> \\(x_{1}\\) \\(x_{2}\\) g(z) \\(h_{\\Theta}(x)\\) 0 0 g(-30) 0 0 1 g(-10) 0 1 0 g(-10) 0 1 0 g(10) 1 <p>So we have constructed one of the fundamental operation in computers by using a small neural network rather than an actual <code>AND</code> gate. Neural network can also be used to simulate all the other logical gates.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#implement-a-complex-logical-operator","title":"Implement A Complex Logical Operator","text":"<p>The \\(\\Theta^{(1)}\\) matrices for <code>AND</code>, <code>NOR</code> and <code>OR</code> are:</p> <ul> <li>AND:</li> </ul> \\[ \\Theta^{(1)} = \\begin{bmatrix} -30 &amp; 20 &amp; 20 \\end{bmatrix} \\] <ul> <li>NOR:</li> </ul> \\[ \\Theta^{(1)} = \\begin{bmatrix} 10 &amp; -20 &amp; -20 \\end{bmatrix} \\] <ul> <li>OR:</li> </ul> \\[ \\Theta^{(1)} = \\begin{bmatrix} -10 &amp; 20 &amp; 20 \\end{bmatrix} \\] <p>We can combine these to get the <code>XNOR</code> logical operator(which gives 1 if \\(x_{1}\\) and \\(x_{2}\\) are both 0 or both 1).</p> \\[ \\begin{bmatrix} x_{0} \\\\\\\\ x_{1} \\\\\\\\ x_{2} \\end{bmatrix} \\to \\begin{bmatrix} a_{1}^{(2)} \\\\\\\\ a_{2}^{(2)} \\end{bmatrix} \\to \\begin{bmatrix} a^{(3)} \\end{bmatrix} \\to h_{\\Theta}(x) \\] <p>For the transition between the second and third layer, we'll use a \\(\\Theta^{(2)}\\) matrix that combines the values for AND and NOR:</p> \\[ \\Theta^{(1)} =  \\begin{bmatrix} -30 &amp; 20 &amp; 20 \\\\\\\\ 10 &amp; -20 &amp; -20 \\end{bmatrix} \\] <p>For the transition between the second and third layer, we'll use a \\(\\Theta^{(2)}\\) matrix that uses the value for OR:</p> \\[ \\Theta^{(2)} = \\begin{bmatrix} -10 &amp; 20 &amp; 20 \\end{bmatrix} \\] <p>Let's write out the values for all our nodes:</p> \\[ a^{(2)} = g(\\Theta^{(1)} \\cdot x) \\] \\[ a^{(3)} = g(\\Theta^{(2)} \\cdot a^{(2)}) \\] \\[ h_{\\Theta}(x) = a^{(3)} \\] <p>The neural networks is like this:</p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#multiclass-classification","title":"Multiclass Classification","text":"<p>To classify data into multiple classes, we let our hypothesis function return a vector of values. We still use the <code>One-vs-all</code> method.</p> <p>For example, if we want to classify our data into one of four , we can define our set of resulting classes as:</p> \\[ y^{(i)} =  \\begin{bmatrix} 1 \\\\\\\\ 0 \\\\\\\\ 0 \\\\\\\\ 0 \\end{bmatrix},  \\begin{bmatrix} 0 \\\\\\\\ 1 \\\\\\\\ 0 \\\\\\\\ 0 \\end{bmatrix},  \\begin{bmatrix} 0 \\\\\\\\ 0 \\\\\\\\ 1 \\\\\\\\ 0 \\end{bmatrix},  \\begin{bmatrix} 0 \\\\\\\\ 0 \\\\\\\\ 1 \\\\\\\\ 1 \\end{bmatrix} \\] <p>Each \\(y^{(i)}\\) represents a different image conrresponding to either class 1, class 2, class 3 or class 4. The inner layers, each provide us with some new information which leads to our final hypothesis function. The step looks like:</p> \\[ \\begin{bmatrix} x_{0} \\\\\\\\ x_{1} \\\\\\\\ x_{2} \\\\\\\\ \\cdots \\\\\\\\ x_{n} \\end{bmatrix} \\to \\begin{bmatrix} a_{0}^{(2)} \\\\\\\\ a_{1}^{(2)} \\\\\\\\ a_{2}^{(2)} \\\\\\\\ \\cdots \\\\\\\\ x_{n}^{(2)} \\end{bmatrix} \\to \\begin{bmatrix} a_{0}^{(3)} \\\\\\\\ a_{1}^{(3)} \\\\\\\\ a_{2}^{(3)} \\\\\\\\ \\cdots \\\\\\\\ x_{n}^{(3)} \\end{bmatrix} \\to \\cdots \\to \\begin{bmatrix} h_{\\Theta1}(x) \\\\\\\\ h_{\\Theta2}(x) \\\\\\\\ h_{\\Theta3}(x) \\\\\\\\ h_{\\Theta4}(x) \\end{bmatrix} \\] <p>Our resulting hypothesis for one set of inputs may look like:</p> \\[ h_{\\Theta}(x) =  \\begin{bmatrix} 0 \\\\\\\\ 1 \\\\\\\\ 0 \\\\\\\\ 0 \\end{bmatrix} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#cost-function_2","title":"Cost Function","text":"<p>Let's define a few variables that we will need to use:</p> <ul> <li>\\(L\\): total number of layers int the network;</li> <li>\\(s_{l}\\): number of units(not counting bias unit) in layer \\(l\\);</li> <li>\\(K\\): number of output units/classes.</li> </ul> <p>In neural networks, we may have many output nodes, we donate \\(h_{\\Theta}(x)\\_{k}\\) as being a hypothesis that results in the \\(k^{th}\\) output.</p> <p>Our cost function for neural networks is going to be a generalization of the one we used for logistic function. Recall that the cost function for regularized logistic regression was:</p> \\[ J(\\Theta) = -\\frac{1}{m}\\sum_{i=1}^{m}[y^{(i)}log(h_{\\theta}(x^{(i)})) + (1 - y^{(i)})log(1 - h_{\\theta}(x^{(i)}))] + \\frac{\\lambda}{2m} \\sum_{j=1}^{n}\\theta_{j}^{2} \\] <p>For neural networks, it is going to be slightly more complicated:</p> \\[ J(\\Theta) = -\\frac{1}{m}\\sum_{i=1}^{m}\\sum_{k=1}^{K}[y_{k}^{(i)}log(h_{\\Theta}(x^{(i)})\\_k) + (1-y_{k}^{(i)})log(1 - (h_{\\Theta}(x^{(i)})\\_k)] + \\frac{\\lambda}{2m}\\sum_{l=1}^{L-1}\\sum_{i=1}^{s_{l}}\\sum_{j=1}^{s_{l+1}}(\\Theta_{j,i}^{(l)})^{2} \\] <p>We have added a few nested summations to account for our multiple output nodes. In the first part of the equation, before the square brackets, we have an additional nested summation that loops through the number of output nodes.</p> <p>In the regularization part, after the square brackets, we must account for multiple theta matrices. The number of colums in our current theta matrix is equal to the number of nodes in our current layer(including the bias unit). The number of rows in our current theta matrix is equal to the nubmer of node in the next layer(excluding the bias unit). As before with logistic regression, we suqare every term.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/00_mechine_learning/#backpropagation-algorithm","title":"Backpropagation Algorithm","text":"<p>\"BackPropagation\" is neural-network terminology for minimizing our cost function, just like what we were doing with gradient descent in logistic and linear regression. Our goal is to compute:</p> \\[ \\min_{\\Theta}J(\\Theta) \\] <p>That is, we want to minimize our cost function \\(J\\) using an optimal set of parameters in \\(\\Theta\\). In this section we'll look at the equations we used to compute the partial derivative of \\(J(\\Theta)\\):</p> \\[ \\frac{\\partial}{\\partial\\Theta_{i,j}^{(l)}}J(\\Theta) \\] <p>To do so:</p> <ol> <li>Given training set \\({(x^{(1), y^{(1)}}) \\cdots (x^{(m)}, y^{(m)})}\\),<ol> <li>Set \\(\\Delta_{i, j}^{(l)} := 0\\) for all \\((l, i, j)\\)(hence you end up having a matrix full of zeros)</li> </ol> </li> <li> <p>For training example \\(t = 1 \\to m\\):</p> <ol> <li>Set \\(a^{(1)} := x^{(t)}\\)</li> <li> <p>Perform <code>forward propagation</code> to compute \\(a^{(l)}\\) for \\(l=2,3,\\cdots,L\\) </p> </li> <li> <p>Using \\(y^{(t)}\\) to compute \\(\\delta^{(L)} = a^{(L)} - y^{(t)}\\).</p> </li> <li>Where \\(L\\) is our total number of layers and \\(a^{(L)}\\) is the vector of outputs of the activation units for the last layer. So our \"error values\" for the last layer are simply the differences of our actual results in the last layer and the correct outputs in \\(y\\). To get the \\(\\delta\\) values of the layers before the last layer, we can use an equation that steps us back from right to left.</li> <li>Computing \\(\\delta^{(L-1)},\\delta^{(L-2)},\\cdots,\\delta^{(2)}\\) using</li> </ol> </li> </ol> \\[ \\delta^{(l)}=((\\Theta^{(l)})^{T}\\delta^{(l+1)}).*a^{(l)}.*(1-a^{(l)}) \\] <p>The equation for b.:</p> \\[ \\begin{array}{lcl} a^{(1)} &amp; = &amp; x \\\\ z^{(2)} &amp; = &amp; \\Theta^{(1)}a^{(1)} \\\\ a^{(2)} &amp; = &amp; g(z^{(2)}) \\quad (add \\quad a_{0}^{(2)}) \\\\ z^{(3)} &amp; = &amp; \\Theta^{(2)}a^{(2)} \\\\ a^{(3)} &amp; = &amp; g(z^{(3)}) \\quad (add \\quad a_{0}^{(3)}) \\\\ z^{(4)} &amp; = &amp; \\Theta^{(3)}a^{(3)} \\\\ a^{(4)} &amp; = &amp; h_{\\Theta}(x) = g(z^{(4)}) \\\\ \\end{array} \\] <p>We then element-wise multiple that with a function called \\(g'\\) which is the derivative of the activation function \\(g\\) evaluated with the input values given by \\(z^{(l)}\\):</p> \\[ g'(z^{(l)}) = a^{(l)}.*(1-a^{(l)}) \\] <p>\\(\\Delta_{i,j}^{(l)} := \\Delta_{i,j}^{(l)} + a_{j}^{(l)}\\delta_{i}^{(l+1)}\\) or with vectorization:</p> \\[ \\Delta^{(1)} := \\Delta^{(l)} + \\delta^{(l)} + \\delta^{(l+1)}(a^{(l)})^T \\] <p>Hence we update our new \\(\\Delta\\) matrix:</p> \\[ D_{i,j}^{(l)} = \\begin{cases} \\frac{1}{m}(\\Delta_{i,j}^{(l)} + \\lambda\\Theta_{i,j}^{(l)}), &amp; if \\quad j \\ne 0 \\\\\\\\ \\frac{1}{m}\\Delta_{i,j}^{(l)} &amp; if \\quad j \\ne 0 \\end{cases} \\] <p>The \\(\\Delta\\) matrix \\(D\\) is used as an \"accumulator\" to add up our values as we go along and eventually compute our partial derivative. Thus we get:</p> \\[ \\frac{\\partial}{\\partial\\Theta_{i,j}^{(l)}}J(\\Theta) = D_{i,j}^{(l)} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/","title":"Neural Network and Deep Learning","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#introduce-to-deep-learning","title":"Introduce to deep learning","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#what-is-a-neural-network","title":"What is a Neural Network","text":"<p>At a very simple level, neurons are basically computational units that take inputs(dendrites) as electrical inputs(called \"spikes\") that are channeled to outputs(axons). A single neuron will calculate weighted sum of input(\\(W.T \\cdot X\\)) and we can set a threshold to predict output in a perceptron. If weighted sum of input across the threshold, perceptron fires and if not then perceptron doesn't predict.</p> <p>The disadvantage of perceptron is that it only outputs binary values. To make output of perceptron flips we add a bias, here comes: \\(W.T \\cdot X + b\\). We need some system which can modify the output slightly accordding to small change in weight and bias, here comes activation functions(\\(g(W.T \\cdot X + b)\\)).</p> <p><code>Sigmoid</code> is a kind of activation functions, we can make slight change in output with sigmoid function, and the single neuron with sigmoid activation function will act as <code>Logistic Regression</code>.</p> <p><code>ReLU</code> which stands for rectified linear unit, is the most popular activation function right now that makes deep neural network trains faster.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#supervised-learning-with-neural-networks","title":"Supervised learning with neural networks","text":"<p>There are different types of neural networks for supervised learning:</p> <ul> <li><code>CNN</code>(Convolutional Neural Network) is useful in computer vision;</li> <li><code>RNN</code>(Recurrent Neural Network) is useful in speech recognition or NLP(Nature Language Process);</li> <li><code>Standard NN</code> is useful for structured data;</li> <li>Hybrid/custom NN or a Collection of NNs types</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#why-is-deep-learning-taking-off","title":"Why is deep learning taking off","text":"<p>Deep learning is taking off for 3 reasons:</p> <ol> <li>Data scale:<ul> <li>For small data NN can performs as traditional algorithms like Linear regression or SVM(Support vector mechine);</li> <li>For bigger data a small NN performs better than traditional algos;</li> <li>For really big data, a large NN is better than middle NN that is better than small NN;</li> <li>Hopefully we have a lot of data because the world is using the computer a little bit more.</li> </ul> </li> <li>Computation:<ul> <li>GPUs;</li> <li>Powerful CPUs;</li> <li>Distributed computing;</li> <li>ASICs.</li> </ul> </li> <li>Algorithm:<ul> <li>Creative algorithms have appeared that changed the way NN works: For example, using <code>ReLU</code> is so much better than using <code>Sigmoid</code> function in training a NN because it helps with the vanishing gradient problem.</li> </ul> </li> </ol>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#neural-network-basics","title":"Neural Network Basics","text":"<p>This part we learn to set up a machine learning problem with a neural network mindset. Learn to use vectorization to speed up your models.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#logistic-regression","title":"Logistic regression","text":"<p>Algorithm is used for classification of 2 classes. We use the equation:</p> \\[ y = wx + b \\] <p>to calculate the output.  If \\(x\\) is a vector, the equation becomes:</p> \\[ y = w^Tx + b \\] <p>If we need \\(y\\) to be in \\([0, 1]\\)(probability):</p> \\[ y = sigmoid(w^Tx + b) \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#logistic-regression-cost-function","title":"Logistic regression cost function","text":"<p>The cost function can be the one half a square error:</p> \\[ L(\\hat{y}, y) = \\frac{1}{2} \\cdot (\\hat{y} - y)^2 \\] <p>but we won't use this notation because it leads to optimization problem which is non convex, means it contains local optimum points.</p> <p>Alternately, we use the function:</p> \\[ L(\\hat{y}, y) = - (y \\cdot \\log(\\hat{y}) + (1 - y) \\cdot \\log(1 - \\hat{y})) \\] <p>this leads to two cases:</p> <ul> <li>if \\(y = 1\\), \\(L(\\hat{y}, 1) = -log(\\hat{y})\\), we want \\(\\hat{y}\\) to be the largest, and the largest value of \\(\\hat{y}\\) is \\(1\\);</li> <li>if \\(y = 0\\), \\(L(\\hat{y}, 1) = -log(1 - \\hat{y})\\), we want \\(1 - \\hat{y}\\) to be the largest, and the smallest value of \\(\\hat{y}\\) is \\(0\\);</li> </ul> <p>Then the cost function will be:</p> \\[ J(w, b) = \\frac{1}{m} \\sum_{i=1}^{m} {(L(\\hat{y}^{[i]}, y^{[i]}))} \\] <p>The difference between loss function and cost function:</p> <ul> <li>the loss function calculates the error for a single training example;</li> <li>the cost function calculates the average of the loss function of the entire training set.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#gradient-descent","title":"Gradient Descent","text":"<p>Our target is to predict \\(w\\) and \\(b\\) that minimize the cost function while the cost function itself is convex.</p> <p>The gradient descent repeats:</p> \\[ w = w - \\alpha \\cdot dw \\] \\[ b = b - \\alpha \\cdot db \\] <p>to reach the minimum of cost function, while the \\(\\alpha\\) is the <code>learning rate</code> and \\(dw\\) is the derivative of \\(w\\), \\(db\\) is the derivative of \\(b\\).</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#vectorization","title":"Vectorization","text":"<p>Deep learning shines when the dataset is big. However, <code>for loop</code> will make you wait a lot for a result. That's why we need vectorization to get rid of  some of our <code>for loop</code>s.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#general-steps","title":"General steps","text":"<p>The main steps for building a Neural Network are:</p> <ul> <li>Define the model structure(such as number of input features and outputs);</li> <li>Initialize the model's parameters;</li> <li>Loop:<ul> <li>Calculate current loss(forward propagation);</li> <li>Calculate current gradient(backward propagation)</li> <li>Update parameters(gradient descent)</li> </ul> </li> </ul> <p>Tunning the learning rate(which is an example of a \"hyperparameter\") can make a big difference to the algorithm.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#shallow-neural-network","title":"Shallow neural network","text":"<p>This part we learn to build a neural network with one hidden layer, using forward propagation and backward propagation.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#neural-network-overview","title":"Neural network overview","text":"<p>In the left logistic regression we had:</p> \\[ z = W^TX + B \\Rightarrow a = sigmoid(z) \\Rightarrow L(a, Y) \\] <p>where \\(W\\), \\(X\\) and \\(B\\) are matirx.</p> <p>In neural networks with one layer we will have:</p> \\[ Z_1 = W_1^TX + B \\Rightarrow A1 = sigmoid(Z_1) \\Rightarrow Z_2 = W_2^TA_1 + B_2 \\Rightarrow A_2 = sigmoid(Z_2) \\Rightarrow L(A2,Y) \\] <p>Neural Network is a stack of logistic regression objects.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#neural-network-notations","title":"Neural network notations","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#general-comments","title":"General comments","text":"<ul> <li>Superscript \\((i)\\) will denote the \\(i^{th}\\) training example while the superscript \\([l]\\) will denote the \\(l^{th}\\) layer.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#sizes","title":"Sizes","text":"<ul> <li>\\(m\\): number of examples in the dataset;</li> <li>\\(n_x\\): input size;</li> <li>\\(n_y\\): output size(or number of classes);</li> <li>\\(n_h^{[l]}\\): number of hidden units of the \\(l^{th}\\) layer;</li> <li>\\(L\\): number of layers in the network.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#objects","title":"Objects","text":"<ul> <li>\\(X\\): the input matrix</li> <li>\\(x^{(i)}\\): the \\(i^{th}\\) example represented as a column vector;</li> <li>\\(Y\\): the label matrix;</li> <li>\\(y^{(i)}\\): the output label for the \\(i^{th}\\) example;</li> <li>\\(W^{[l]}\\): the \\(l^{th}\\) lyaer weight matrix;</li> <li>\\(b^{[l]}\\): the bias vector of \\(l^{th}\\) layer;</li> <li>\\(\\hat{y}\\): the predicted output vector. It can also be denoted \\(a^{[L]}\\) where \\(L\\) is the number of layers in the network.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#forward-propagation","title":"Forward propagation","text":"<ul> <li>\\(a = g^{[l]}(W_xx^{(i)} + b_1) = g^{[l]}(z_1)\\), where \\(g^{[l]}\\) denotes the \\(l^{th}\\) layer activation function;</li> <li>\\(J(x, W, b, y)\\) or \\(J(\\hat{y}, y)\\) denotes the cost function.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#activation-functions","title":"Activation functions","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#sigmoid","title":"sigmoid","text":"<p>So far we are using sigmoid, but it works not so well:</p> <ul> <li>sigmoid can lead us to gradient decent problem where the updates are so slow;</li> <li>the range of function is \\([0, 1]\\).</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#tanh","title":"tanh","text":"<p><code>tanh</code> is a shifted version of sigmoid with the range \\([-1, 1]\\). It usually works better than sigmoid activation for hidden units because the mean of its outputs is closer to \\(0\\), and so it centers the data better for the next layer.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#relu","title":"ReLU","text":"<p><code>sigmoid</code> or <code>tanh</code> function disadvantage is that if the input is too small or too high, the slope will be near zero which will cause the gradient decent problem.</p> <p>One of the popular activation functions that solved the slow gradient decent is the ReLU function.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#leaky-relu","title":"Leaky ReLU","text":"<p>The difference between Leaky ReLU and ReLU is that if the input is negtive the slope will be so small. It works as ReLU but most people use ReLU.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#why-we-need-non-linear-activation-functions","title":"Why we need non-linear activation functions","text":"<p>Linear activation will output linear activations, that means whatever hidden layers you add, the activation will be always linear like logistic regression, so it's useless in a lot of complex problems.</p> <p>You might use linear activation function in one place, the output layer, if the output is real number(regression problem). But even in this case if the output value is non-negtive you could still use ReLU instead.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#derivative-of-activation-functions","title":"Derivative of activation functions","text":"<ul> <li>Derivation of sigmoid activation function:</li> </ul> \\[ g(z) = \\frac{1}{1 + e^{-z}} \\] \\[ g'(z) = \\frac{1}{1 + e^{-z}} \\cdot (1 - \\frac{1}{1 + e^{-z}}) = g(z) \\cdot (1 - g(z)) \\] <ul> <li>Derivation of tanh activation function:</li> </ul> \\[ g(z) = \\frac{e^z - e^{-z}}{e^z + e^{-z}} \\] \\[ g'(z) = 1 - tanh^2(z) = 1 - g^2(z) \\] <ul> <li>Derivation of ReLU activation function:</li> </ul> \\[ g(z) = max(0, z) \\] \\[ g'(z) =  \\begin{cases} 0, \\quad \\mbox{if} \\quad z &lt; 0 \\\\\\\\ 1, \\quad \\mbox{if} \\quad z &gt;= 0 \\end{cases} \\] <ul> <li>Derivation of leaky ReLU activation function:</li> </ul> \\[ g(z) = max(0.01 \\cdot z, z) \\] \\[ g'(z) =  \\begin{cases} 0.01, \\quad \\mbox{if} \\quad z &lt; 0 \\\\\\\\ 1, \\quad \\mbox{if} \\quad z &gt;=0 \\end{cases} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#random-initialization","title":"Random initialization","text":"<p>In logistic regression it wasn't important to initialize the weights randomly, while in neural network we have to initialize them randomly.</p> <p>While initializing bias with \\(0\\) is OK, neural network won't work if we initialize all weights with zeros:</p> <ul> <li>all hidden units will be completely identical(symmetric) and compute exactly the same function;</li> <li>on each gradient descent iteration all the hidden units will always update the same.</li> </ul> <p>We need small values because in sigmoid(or tanh) activation function, for example, if the weights is too large you are more likely to end up with very large values of \\(Z\\). Which causes your tanh or sigmoid activation function to be saturated, thus slowing down learning. If you don't have any sigmoid or tanh activation function throughout your neural network, this is less of an issue.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#deep-neural-network","title":"Deep neural network","text":"<p>Shallow Neural Network is a Neural Network with \\(1\\) or \\(2\\) layers. Deep Neural Network is a Neural Network with \\(3\\) or more layers.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#getting-your-matrix-dimensions-right","title":"Getting your matrix dimensions right","text":"<p>With the equation:</p> \\[ Z = W^TX + B \\] <p>where \\(X\\) has the shape of \\((x, n^{[l-1]})\\).</p> <ul> <li>Dimension of \\(W\\) is \\((n^{[l]}, n^{[l-1]})\\);</li> <li>Dimension of \\(B\\) is \\((n^{[l]}, 1)\\);</li> <li>\\(dw\\) has the same shape as \\(W\\);</li> <li>\\(db\\) has the same shape as \\(B\\);</li> <li>Dimension of \\(Z^{[l]}\\), \\(A^{[l]}\\), \\(dZ^{[l]}\\), \\(dA^{[l]}\\) is \\((n^{[l]}, m)\\).</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/10_nn_and_deep_learning/#hyperparameters","title":"Hyperparameters","text":"<p>The main parameters of Neural Network is:</p> <ul> <li>\\(w\\);</li> <li>\\(b\\).</li> </ul> <p>Hyperparameters are the parameters that control the algorithm:</p> <ul> <li>learning rate;</li> <li>Number of iteration;</li> <li>Number of hidden layers;</li> <li>Number of hidden units;</li> <li>Choice of activations.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/","title":"Improving Deep Neural Networks: Hyperparameter Tuning, Regularition and Optimization","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#practical-aspects-of-deep-learning","title":"Practical aspects of deep learning","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#traindevtest-sets","title":"Train/dev/test Sets","text":"<p>It's impossible to get all your hyperparameters right on a new application from the first time, so, the idea is to go through the loop: <pre><code>   Idea --&gt; Code --&gt; Experiment\n    ^                     |\n    |                     |\n    -----------------------\n</code></pre> You can go through the loop many times to figure out your hyperparameters.</p> <p>Generally, we divid the data into three parts:</p> <ul> <li>Train set, which used to train the neural network and is usually the largest set;</li> <li>Develop(dev) set, which is used to validate the traing result;</li> <li>Test set, which is used to test the trained neural network.</li> </ul> <p>You will try to build a model upon <code>train set</code> then try to optimize hyperparamters on <code>dev set</code> as much as possible. After your model is ready, you can evaluate the model with <code>test set</code>.</p> <p>The ratio of splitting the models is:</p> <ul> <li><code>6:2:2</code>, if the size of the dataset is \\(100\\) to \\(1000000\\);</li> <li><code>98:1:1</code> or <code>99.5:0.25:0.25</code>, if the size of the dataset is \\(&gt; 1000000\\).</li> </ul> <p>You should make sure the <code>dev set</code> and <code>test set</code> comes from the same distribution.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#biasvariance","title":"Bias/variance","text":"<p>Bias and variance techiques are easy to learn but difficult to master. Generally, your model is:</p> <ul> <li><code>underfitting</code>, if it has a <code>high bias</code>;</li> <li><code>overfitting</code>, if it has a <code>high variance</code>. </li> </ul> <p>You can plot the result as the figure above, but if this is not possible, another idea to get bias/ variance is to check the error:</p> <ul> <li>High variance(overfitting):<ul> <li>Training error: 1%;</li> <li>Dev error: 11%.</li> </ul> </li> <li>High bias(underfitting):<ul> <li>Training error: 15%;</li> <li>Dev error: 14%.</li> </ul> </li> <li>High bias (underfitting) &amp;&amp; High variance(overfitting):<ul> <li>Training error: 15%;</li> <li>Test error: 30%.</li> </ul> </li> <li>Best:<ul> <li>Training error: 0.5%;</li> <li>Test error: 1%.</li> </ul> </li> </ul> <p>These conclusions come from the assumption that human has \\(0%\\) error. If the problem isn't meeting this assumption, you will need to use human error as baseline.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#basic-recipe-for-high-bias-and-variance","title":"Basic recipe for high bias and variance","text":"<p>If your algorithm has a high bias, you can:</p> <ul> <li>Try to make your neural network bigger(more hidden units or more layers);</li> <li>Try a different model that fits your data well;</li> <li>Try more batches;</li> <li>Try difference(advanced) optimization algorithms.</li> </ul> <p>If your algorithm has a high variance, you can:</p> <ul> <li>Use more data;</li> <li>Try regularization;</li> <li>Try a different model that is suitable for your data.</li> </ul> <p>No matter what the problem is, training a bigger neural network never hurts, although this may lead to longer runing time.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#regularizing-your-neural-network","title":"Regularizing your neural network","text":"<p>For variance(overfitting) problems, we can try a bigger training data to fix it. But some times you can't just get more training data, or it would be quite expensive to get more data. In this case regularization will often help to prevent overfitting, or reduce the errors in your network.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#regularization","title":"Regularization","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#regularization-for-logistic-regression","title":"Regularization for logistic regression","text":"<ul> <li>\\(L_1\\) regularization</li> </ul> \\[ J(w,b) = \\frac{1}{m} \\sum_{i = 1}^mL(\\hat{y^{(i)}}, y^{(i)}) + \\frac{\\lambda}{2m} \\lVert w \\rVert_2^2 \\] \\[ \\lVert w \\rVert_2^2 = \\sum_{j = i}^{n_x}|w_j| \\] <p>where \\(\\lambda\\) is called regularization parameter(hyperparameter), you can try different value and choose the one with best performance.</p> <ul> <li>\\(L_1\\) regularization(for arcane technical math, this is called <code>Frobenius norm</code>)</li> </ul> \\[ J(w,b) = \\frac{1}{m} \\sum_{i = 1}^mL(\\hat{y^{(i)}}, y^{(i)}) + \\frac{\\lambda}{2m} \\lVert w \\rVert_1 \\] \\[ \\lVert w \\rVert_1 = \\sum_{j = i}^{n_x}w_j^2 = w^Tw \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#regularization-for-neural-network","title":"Regularization for neural network","text":"<p>The normal cost function that we want to minimize is:</p> \\[ J(w^{[1]}, b^{[1]}, ..., w^{[L]}, b^{[L]}) = \\frac{1}{m} \\sum_{i = 1}^{m}L(\\hat{y^{(i)}}, y^{(i)}) \\] <p>Then the \\(L_2\\) regularization is:</p> \\[ J(w^{[1]}, b^{[1]}, ..., w^{[L]}, b^{[L]}) = \\frac{1}{m} \\sum_{i = 1}^{m}L(\\hat{y^{(i)}}, y^{(i)}) + \\frac{1}{2m} \\sum_{l = 1}^{L} \\lVert w^{[l]} \\rVert^2 \\] <p>The old way we do back propagation is:</p> \\[ dw^{[l]} = (back propagation) \\] \\[ w^{[l]} = w^{[l]} - \\alpha \\cdot dw^{[l]} \\] <p>Then we change to:</p> \\[ dw^{[l]} = (back propagation) + \\frac{\\lambda}{m} \\cdot w^{[l]} \\] <p>So:</p> \\[ \\begin{align} w^{[l]}  &amp; = w^{[l]} - \\alpha \\cdot dw^{[l]} \\\\\\\\ &amp; = w^{[l]} - \\alpha * ((back propagation) + \\frac{\\lambda}{m} \\cdot w^{[l]}) \\\\\\\\ &amp; = w^{[l]} - \\alpha * (back propagation) - \\alpha * (\\frac{\\lambda}{m} \\cdot w^{[l]}) \\\\\\\\ &amp; = (1 - \\frac{\\alpha\\lambda}{m}) \\cdot w^{[l]} - \\alpha * (back propagation) \\end{align} \\] <p>In practice this will penalize large weights and effectively limits the freedom in your model, because the them \\((1 - \\frac{\\alpha\\lambda}{m}) \\cdot w^{[l]}\\) causes the <code>weight to decay</code> in propartion to its size.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#why-regularization-reduces-overfitting","title":"Why regularization reduces overfitting","text":"<p>Here are some intuitions:</p> <ul> <li>If \\(\\lambda\\) is too large: a lot of \\(w\\) part will be close to \\(0\\), which makes the neural network more simple;</li> <li>If \\(\\lambda\\) is good enough: it will reduce some weights that makes the neural network overfitting.</li> </ul> <p>And for \\(tanh\\) activation function:</p> <ul> <li>If \\(\\lambda\\) is too large, \\(w\\) part will be small(close to \\(0\\)), which will use the linear part of the \\(tanh\\) activation function, so we will go from non-linear activation to roughly linear which would make the neural network a roughly linear classifier.</li> <li>If \\(\\lambda\\) is good enough, it will just make some of \\(tanh\\) activations roughly linear which will prevent overfitting.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#dropout-regularization","title":"Dropout regularization","text":"<p>In most case, we use \\(L_2\\) regularization. The dropout regularization eliminates some neurons/weights on each iteration based on a probability. A most common techinque to implement dropout is called <code>Inverted dropout</code>: <pre><code>keep_prob = 0.8   # 0 &lt;= keep_prob &lt;= 1\nl = 3  # this code is only for layer 3\n## the generated number that are less than 0.8 will be dropped. 80% stay, 20% dropped\nd3 = np.random.rand(a[l].shape[0], a[l].shape[1]) &lt; keep_prob\n\na3 = np.multiply(a3,d3)   # keep only the values in d3\n\n## increase a3 to not reduce the expected value of output\n## (ensures that the expected value of a3 remains the same) - to solve the scaling problem\na3 = a3 / keep_prob\n</code></pre></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#understanding-dropout","title":"Understanding dropout","text":"<ul> <li>Dropout knocks out units in neural network randomly, so it works like on every iteration you're working with a smaller neural network which has a regulizing effect.</li> <li>Neural network can not rely on any one feature because it may be knocked out, so it has to spread out weights.</li> <li>Dropout can have different <code>keep_prob</code> per layer.</li> <li>The input layer dropout has to be near \\(1\\)(or just \\(1\\)) because you don't want to eliminate a lot of featrues.</li> <li>A lot of researchers are using dropout with Computer Vision(CV), bacause they have a very big input size and almost nerver have enough data, so overfitting is the usual problem. And dropout is a regularization technique to prevent overfitting.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#other-regularization-methods","title":"Other regularization methods","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#data-augmentation","title":"Data augmentation","text":"<ul> <li>In a computer vision data, you can:<ul> <li>flip all your pictures horizontally which will give you more data instances;</li> <li>apply a random position and rotation to an image to get more data.</li> </ul> </li> <li>In OCR you can impose random ratation and distortions to digits/letters.</li> <li>New data obtained using this technique isn't as good as the real independent data, but still can be used as a regularization techniques.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#early-stopping","title":"Early stopping","text":"<p>We plot the <code>training set cost</code> and the <code>dev set cost</code> together for each iteration. At some iteration the <code>dev set cost</code> will stop decreasing and will start <code>increasing</code>. We will pick the point at wich the training set error and dev set error are best(lowest training cost with lowest dev cost). </p> <p>We prefer to use \\(L_2\\) regularization instead of early stop because this technique simultaneously tries to mimimize the cost function and not to overfit which contradicts the orthogonalization approch. But its advantage is that you don't need to search a hyperparameter.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#model-ensembles","title":"Model ensembles","text":"<p>You can train multiple independent models and average their results, this can get you extra 2% performance and reduces the generalization error.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#setting-up-your-optimization-problem","title":"Setting up your optimization problem","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#normallizing-inputs","title":"Normallizing inputs","text":"<p>Normalizing inputs will speed up the training process a lot. </p> <p>Normalization are going on these steps:</p> <ol> <li>Get the mean of the training set: \\(mean = \\frac{1}{m} * \\sum_{i=1}^mx^{(i)}\\)</li> <li>Subtract the mean from each input: \\(X = X - mean\\), this will make your inputs centered around \\(0\\).</li> <li>Get the variance of the training set: \\(variance = \\frac{1}{m} * \\sum_{i = 1}^m(x^{(i)})^2\\)</li> <li>Normalize the variance: \\(X = X / variance\\)</li> </ol> <p>So why we normalize our inputs?</p> <ul> <li>If we don't normalize the inputs our cost function will be deep and its shape will be inconsistent(elongated), then optimizing it will take a long time.</li> <li>If we normalized the inputs, the shape of the cost function will be consistent(look more symmetric like circle in 2D exmaple) and we can use a larger learning rate \\(\\alpha\\), the optimization will be faster.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#vanishingexploding-gradients","title":"Vanishing/exploding gradients","text":"<p>The vanishing/exploding gradients occurs when your derivates becomes very small or very big. To understand the problem, suppose that we have a deep neural network with number of layer \\(L\\), and all the activation functions are <code>linear</code> and each \\(b = 0\\), then:</p> \\[ \\hat{y} = w^{[L]}w^{[L - 1]}w^{[L - 2]} \\cdots w^{[2]} w^{[1]} x \\] <p>and if we have 2 hidden units per layer and \\(x_1 = x_2 = 1\\), we will result in:</p> \\[ \\hat{y} = w^{[L]} \\begin{bmatrix}x &amp; 0 \\\\\\\\ 0 &amp; x \\end{bmatrix}^{L-1} = x^L \\\\\\\\ \\] <p>as:</p> \\[ w^{[L]} = \\begin{bmatrix}x &amp; 0 \\\\\\\\ 0 &amp; x \\end{bmatrix}^{L-1} \\] <p>If \\(x &lt; 1\\), \\(\\hat{y}\\) will be very small; if \\(x &gt; 1\\), \\(\\hat{y}\\) will be really big. This example explains that the activations (and similarly derivatives) will be decreased/increased exponentially as a function of number of layers.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#weight-initialization-for-deep-networks","title":"Weight initialization for deep networks","text":"<p>A partial solution to the vanishing/exploding gradients in neural network is better or more careful choice of the random initialization of weights. In a simgle neuron: \\(Z = w_1x_1 + w_2x_2 + \\cdots + w_nx_n\\), if the number of node \\(n_x\\) is large, we want \\(w\\) to be smaller to not explode the cost, which turns out that we need the variance(equal to \\(\\frac{1}{n_x}\\)) to be the range of \\(W\\). So we initialize \\(W\\) like this(better to use with <code>tanh</code> activation): <pre><code>np.random.rand(shape) * np.sqrt(1/n[l-1])\n</code></pre> or variation of this: <pre><code>np.random.rand(shape) * np.sqrt(2/(n[l-1] + n[l]))\n</code></pre> Setting initialization part inside sqrt to <code>2/n[l-1]</code> for <code>ReLU</code> is better: <pre><code>np.random.rand(shape) * np.sqrt(2/n[l-1])\n</code></pre> This is one of the best way of partially solution to Vanishing / Exploding gradients (ReLU + Weight Initialization with variance) which will help gradients not to vanish/explode too quickly.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#optimization-algorithms","title":"Optimization algorithms","text":"<p>Training neural network with a large data is slow, so it's necessary to optimize the algorithm to run faster.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#mini-batch-gradient-descent","title":"Mini-batch gradient descent","text":"<p>Suppose we have a data set with the size of <code>50m</code>, training it will take a huge processing time for one step because 50 million won't fit in the memory at once. To deal with this we can use <code>mini-batch</code> to process some of our items even before finishing the 50 million items. The process is:</p> <ul> <li>Split \\(X\\)(with the size <code>m</code>) into <code>mini-batch</code> of size <code>b</code>:<ul> <li>\\(X^{ \\\\{ 1 \\\\} } = 0,  \\cdots, b\\)</li> <li>\\(X^{ \\\\{ 2 \\\\} } = b + 1, \\cdots, 2b\\)</li> <li>\\(\\cdots\\)</li> <li>\\(X^{ \\\\{ \\frac{m}{b} \\\\} } = (\\frac{m}{b} - 1) * b, \\cdots, \\frac{m}{b} * b\\cdots 2b\\)</li> </ul> </li> <li>Split \\(Y\\) into <code>mini-batch</code> of size <code>b</code>, so we get the definition of <code>mini-batch</code>: \\(t: X^{\\\\{ t \\\\}}, Y^{\\\\{ t \\\\}}\\)</li> <li>Like old <code>batch gradient descent</code>, with <code>mini-batch gradient descent</code> we run the gradient descent on the mini datasets:</li> </ul> <pre><code>for t = 1 : Sum_of_mini-batches  # this is called an epoch\n    AL, caches = forward_prop(X{t}, Y{t})\n    cost = compute_cost(AL, Y{t})\n    grads = backward_prop(AL, caches)\n    update_parameters(grads)\n</code></pre>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#understanding-mini-batch-gradient-descent","title":"Understanding mini-batch gradient descent","text":"<p>Unlike batch gradient descent where cost function decreases each iteration, mini-batch's cost function won't go down with each step, it may contain ups and downs but generally it goes down.</p> <p></p> <p>The gradient descent type depends on mini-batch size:</p> <ul> <li>mini-batch-size = m: batch gradient descent, which is too long per iteration(epoch);</li> <li>mini-batch-size = 1: stochastic gradient descent(SGD), which:<ul> <li>is too noisy regarding cost minimization(can be reduced by using smaller learning rate);</li> <li>won't ever converge(reach the minimum cost);</li> <li>loses speedup from vectorization.</li> </ul> </li> <li>mini-batch-size = (1, m): mini-batch gradient descent, which:<ul> <li>has faster learning speed:<ul> <li>it can take the advantage of vectorization;</li> <li>it makes progress without waiting to process the entire training set.</li> </ul> </li> <li>doesn't always exactly converge(oscelates in a very small region)</li> </ul> </li> </ul> <p>How to choose the <code>mini-batch</code> size? Here are the suggestions:</p> <ul> <li>m &lt; 2000: Batch gradient descent;</li> <li>It has to be the power of \\(2\\)(64, 128, ..., 1024, ...), because of the way computer memory is layed and accessed your code might run faster;</li> <li>Make sure that the <code>mini-batch</code> fits in CPU/GPU memory.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#exponentially-weighted-average","title":"Exponentially weighted average","text":"<p>If you have data like the temparature of day throughout the year:</p> \\[ \\begin{array}{l} \\theta_1 = 40 \\\\\\\\ \\theta_2 = 49 \\\\\\\\ \\theta_3 = 45 \\\\\\\\ \\cdots \\\\\\\\ \\theta_{180} = 60 \\end{array} \\] <p>This data is samll in winter but big in summer. It's noisy if we plot it out. Now we use the <code>exponentially weighted averages</code> equation</p> \\[ v_t = \\beta * v_{t - 1} + (1 - \\beta) * \\theta_t \\] <p>The result is:</p> \\[ \\begin{array}{l} v_0 = 0 \\\\\\\\ v_1 = \\beta * v_0 + (1 - \\beta) * \\theta_1 \\\\\\\\ v_2 = \\beta * v_0 + (1 - \\beta) * \\theta_2 \\\\\\\\ v_3 = \\beta * v_0 + (1 - \\beta) * \\theta_3 \\\\\\\\ \\cdots \\end{array} \\] <p>If we plot this it will represent averages about \\(\\frac{1}{1 - \\beta}\\) entries:</p> <ul> <li>\\(\\beta = 0.9\\) will average last 10 entries;</li> <li>\\(\\beta = 0.98\\) will average last 50 entries;</li> <li>\\(\\beta = 0.5\\) will average last 2 entries.</li> </ul> <p>The reason why <code>exponentially weighted averages</code> is useful for further optimizing gradient descent is that, it can give different weights to recent data points(\\(\\beta\\)) based on value of \\(\\beta\\). If \\(\\beta\\) is high(around 0.9),  it smoothens out the averages of skewed data points, which will reduce oscillations in gradient descent and hence make faster and smoother path towards minima. </p> <p>The advantage of this algorithm is that its implementation is efficient and fast because it has only one param: \\(\\beta\\).</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#bias-correction-in-exponentially-weighted-averages","title":"Bias correction in exponentially weighted averages","text":"<p>Because \\(v_0 = 0\\), the bias of the weighted averages is shifted and the accuracy suffers at the start. We use following equation to solve the bias issue:</p> \\[ v_t = \\frac{\\beta * v_{t - 1} + (1 - \\beta) * \\theta_t}{1 - \\beta^t} \\] <p>As \\(t\\) becomes larger the \\(1 - \\beta^t\\) term will become close to \\(1\\).</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#gradient-descent-with-momentum","title":"Gradient descent with momentum","text":"<p>The momentum algorithm almost always works faster than standard gradient descent. The simple idea is to calculate the exponentially weighted averages for your gradients and then update your weights with the new values:</p> \\[ \\begin{array}{l} v_{dW} = \\beta \\cdot v_{dW} + (1 - \\beta) \\cdot dW \\\\\\\\ v_{db} = \\beta \\cdot v_{db} + (1 - \\beta) \\cdot db \\\\\\\\ W = W - \\alpha \\cdot v_{dW} \\\\\\\\ b = b - \\alpha \\cdot v_{db} \\end{array} \\] <p>where \\(\\alpha\\) is learning rate, \\(\\beta\\) is another <code>hyperparameter</code>, \\(\\beta = 0.9\\) is very common and works very well in most cases.</p> <p>In practice we don't bother implementating <code>bias correction</code></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#rmsprop","title":"RMSprop","text":"<p><code>RMSprop</code> stands for <code>Root Mean Square prop</code>. It speeds up the gradient descent:</p> \\[ \\begin{array}{l} s_{dW} = \\beta \\cdot s_{dW} + (1 - \\beta) \\cdot dW^2 \\\\\\\\ s_{db} = \\beta \\cdot s_{db} + (1 - \\beta) \\cdot db^2 \\\\\\\\ W = W - \\alpha \\cdot \\frac{dW}{\\sqrt{s_{dW}}} \\\\\\\\ b = b - \\alpha \\cdot \\frac{dW}{\\sqrt{s_{db}}} \\end{array} \\] <p>RMSprop will make the cost function move slower on the vertical direction and faster on the horizontal direction:</p> <p></p> <p>To ensure \\(s_{dw}\\) is not zero, we add \\(\\epsilon\\) (e.g. \\(\\epsilon = 10^{-8}\\))to the demoninator: </p> \\[ W = W - \\alpha \\cdot \\frac{dW}{\\sqrt{s_{dW}} + \\epsilon} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#adam-optimization-algorithm","title":"Adam optimization algorithm","text":"<p><code>Adam</code> stands for <code>Adaptive Moment Estimation</code>. Adam and RMSprop are among the optimization algorithms that works very well with a lot of neural network architecture. Adam simply puts RMSprop and momentum together:</p> \\[ \\begin{align} v_{dW} &amp;= \\beta_1 \\cdot v_{dW} + (1 - \\beta_1) \\cdot dW \\\\\\\\ v_{db} &amp;= \\beta_1 \\cdot v_{db} + (1 - \\beta_1) \\cdot db \\\\\\\\ s_{dW} &amp;= \\beta_2 \\cdot s_{dW} + (1 - \\beta_2) \\cdot dW^2 \\\\\\\\ s_{db} &amp;= \\beta_2 \\cdot s_{db} + (1 - \\beta_2) \\cdot db^2 \\\\\\\\ v_{dW} &amp;= \\frac{v_{dW}}{1 - \\beta_1^t} \\\\\\\\ v_{db} &amp;= \\frac{v_{db}}{1 - \\beta_1^t} \\\\\\\\ s_{dW} &amp;= \\frac{s_{dW}}{1 - \\beta_1^t} \\\\\\\\ s_{db} &amp;= \\frac{s_{db}}{1 - \\beta_1^t} \\\\\\\\ W &amp;= W - \\alpha \\cdot \\frac{v_{dW}}{\\sqrt{s_{dW}} + \\epsilon} \\\\\\\\ b &amp;= b - \\alpha \\cdot \\frac{v_{db}}{\\sqrt{s_{db}} + \\epsilon} \\end{align} \\] <p>In equation:</p> <ul> <li>(5) and (6) are momentum;</li> <li>(7) and (8) are RMSprop;</li> <li>(9) - (12) are bias correction;</li> <li>\\(\\alpha\\) is learning rate and needs to be tuned;</li> <li>\\(\\beta_1\\) is the parameter of momentum, \\(0.9\\) is recommanded by default;</li> <li>\\(\\beta_2\\) is the parameter of RMSprop, \\(0.999\\) is recommanded by default;</li> <li>\\(\\epsilon = 10^{-8}\\) recommanded by default.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#learning-rate-decay","title":"Learning rate decay","text":"<p>Learning rate decay is to reduce the learning rate slowly. As mentioned before, mini-batch gradient descent won't reach the optimum point(converge). But by making the learning rate decay with iterations it will be much closer to it because the steps near the optimum are smaller.</p> <p>One technique equations is:</p> \\[ \\alpha = \\frac{1}{1 + k_{decay} \\cdot t} \\cdot \\alpha_0 \\] <p>where \\(k_{decay}\\) is decay rate, \\(t\\) is the epoch number. Other learning rate decay can be:</p> \\[ \\alpha = 0.95^{t} \\cdot \\alpha_0 \\] <p>or</p> \\[ \\alpha = \\frac{k}{\\sqrt{t}} \\cdot \\alpha_0 \\] <p>Learning rate decay has less priority than other optimization methods.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#hyperparameter-tuning-and-batch-nomalization","title":"Hyperparameter tuning and batch nomalization","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#tuning-process","title":"Tuning process","text":"<p>When we train a neural network, we usually need to tune our hyperparameters to get the best out of them. The importance rank of these hyperparameters is:</p> <ol> <li>Learning rate, \\(\\alpha\\);</li> <li>Momentum, \\(\\beta\\);</li> <li>Mini-batch size, \\(b\\);</li> <li>Number of hidden units;</li> <li>Number of layers;</li> <li>Learning rate decay;</li> <li>Ragularization \\(\\lambda\\);</li> <li>Activation functions;</li> <li>Adam \\(\\beta_1\\), \\(\\beta_2\\) and \\(\\epsilon\\).</li> </ol> <p>One of the ways to tune is to sample a grid with \\(N\\) hyperparameter settings and then try all setting combinations on your problem. You should try random values, not the grid. You can use <code>Coarse to fine sampling scheme</code>:</p> <p>When you find some hyperparameters values that give you a better performance, zoom into a smaller region around these values and sample more densely within this space.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#using-an-appropriate-scale-to-pick-hyperparameters","title":"Using an appropriate scale to pick hyperparameters","text":"<p>Assume that you have a specific range for a hyperparameter from <code>a</code> to <code>b</code>, it's better to search for the right ones using logarithmic scale rather than in linear scale:</p> <ul> <li>\\(a_{log} = log(a)\\): if \\(a = 0.001\\) then \\(a_{log} = -4\\)</li> <li>\\(b_{log} = log(b)\\): if \\(b = 1\\) then \\(a_{log} = 0\\)</li> </ul> <p>Then: \\(r = (a_{log} - b_{log}) * rand + b_{log}\\), the range will be [-4, 0] and result \\(r = 10^r\\).</p> <p>For example, we have known that the best range for <code>Momentum</code> \\(\\beta\\) is \\([0.9, 0.999]\\), you should search for \\(1 - \\beta\\) in the range \\([0.001, 0.1]\\), and use \\(a = 0.001\\) and \\(b = 0.1\\). Then:</p> <ul> <li>\\(a_{log} = -3\\)</li> <li>\\(b_{log} = -1\\)</li> <li>\\(r = (a_{log} - b_{log}) * rand + b_{log}\\)</li> <li>\\(\\beta = 1 - 10^r\\)</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#hyperparameters-tuning-in-practice-pandas-vs-caviar","title":"Hyperparameters tuning in practice: Pandas vs. Caviar","text":"<p>Intuitions about hyperparameter settings from one application area may or may not trasfer to a different one.</p> <p>If you don't have much computational resources you can use <code>Panda</code> approach:</p> <ul> <li>Day 0 you might initialize your parameter as random and then start training;</li> <li>Then you watch your learning curve gradually decrease over the day;</li> <li>And each day you nudge your parameters a little during training.</li> </ul> <p>If you have enough computational resources, you can use <code>Caviar</code> approach: </p> <ul> <li>Run some models in parallel and at the end of the day you check the result.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#normalizing-activations-in-a-network","title":"Normalizing activations in a network","text":"<p>Normalizing input by subtracting the mean and dividing by variance helps a lot for the shape of the cost function and for reaching the minimum point faster.  The question is:</p> <p>for any hidden layer can we normalize \\(A^{[l]}\\) to train \\(W^{[l+1]}\\) and \\(b^{[l+1]}\\) faster? This is what batch normalization is about.</p> <p>There are some debates about whether you should normalize values before the activation function \\(Z^{[l]}\\) or after applying the activation function \\(A^{[l]}\\). In practice, nomalizing \\(Z^{[l]}\\) is much more often. The algorithm porcess is:</p> <ul> <li>Given \\(Z^{[l]} = [z^{(1)}, \\cdots, z^{(m)}]\\);</li> <li>Compute \\(mean = \\frac{1}{m} * \\sum^m\\_{i=1}{z^{[i]}}\\)</li> <li>Compute \\(variance = \\frac{1}{m} * \\sum_{i=1}^m(z^{[i]}-mean)^2\\)</li> <li>Then \\(Z_{norm}^{[i]} = \\frac{z^{[i]}}{\\sqrt{variance + epsilon}}\\)<ul> <li>forcing the inputs to distribution with 0 mean and variance of 1</li> </ul> </li> <li>Then \\(\\tilde{z}^{[i]} = \\gamma * z_{norm}^{[i]} + \\beta\\)<ul> <li>Make inputs belong to other distribution(with other mean and variance);</li> <li>\\(\\gamma\\) and \\(\\beta\\) are learnable parameters of the model;</li> <li>Make the neural network learn the distribution of the outputs;</li> <li>Note: if \\(\\gamma = \\sqrt{variance + epsilon}\\) and \\(\\beta = mean\\), then \\(\\tilde{z}^{[i]} = z^{[i]}\\)</li> </ul> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#fitting-batch-normalization-into-a-neural-network","title":"Fitting Batch normalization into a neural network","text":"<p>Batch normalization is usually applied with mini-batches. If we use batch normalization parameters \\(b^{[1]}, \\cdots, b^{[l]}\\) doesn't count because they will be eliminated after mean subtraction step. So the parameters will be:</p> <ul> <li>\\(W^{[l]}\\);</li> <li>\\(\\beta^{[l]}\\);</li> <li>\\(\\alpha^{[l]}\\).</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#why-does-batch-normalization-work","title":"Why does batch normalization work?","text":"<ul> <li>The first reason is the same reason as why we normalize \\(X\\);</li> <li>The second reason is that batch normalization reduces the problem of input values changing(shifting);</li> <li>Batch normalization does some regularization:<ul> <li>Each mini-batch is scaled by the mean/variance computed of that mini-batch;</li> <li>This adds some noise to the value \\(Z^{[l]}\\) within that mini-batch, so similar to dropout it adds some noise to each hidden layer's activation;</li> <li>This has a slight regularization effect;</li> <li>Using bigger size of the mini-batch you are reducing noise and therefore regularization effect;</li> <li>Don't rely on batch normalization as a regularization, it's intended for normalization of hidden units, activations and therefore speeding up learning. For regularization use other regularization techniques.</li> </ul> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#batch-normalization-at-test-time","title":"Batch normalization at test time","text":"<p>When we train a neural network with batch normalization, we compute the mean and the variance of the mini-batch. But in testing we might need to process examples one each time, whose mean and variance won't make sense. So we have to compute the average across the mini-batch, this is called <code>Running average</code>.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#softmax-regression","title":"Softmax Regression","text":"<p>The neural networks we trained so far are binary classifications, but there are a generalization of logistic regression called <code>Softmax regression</code> that is used for multiclass classification/regression. In the last layer of the neural network we use the <code>Softmax regression</code> activation instead of <code>sigmoid</code> to classify the classes.</p> \\[ t = e^{Z^{[L]}} \\] \\[ A_{[L]} = \\frac{e^{Z^{[L]}}}{\\sum{t}} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/11_improve_nn/#trainning-a-softmax-classifier","title":"Trainning a Softmax classifier","text":"<p>There is an activation called <code>hard max</code> which get \\(1\\) for the maximum value and \\(0\\) for others. The <code>softmax</code> named because it's not so <code>hard</code>, it can be values in \\([0, 1]\\).</p> <p>Softmax is a generalization of logistic activation function to <code>C</code> classes. If <code>C = 2</code> then <code>softmax</code> reduces to logistic regression.</p> <p>The loss function used which <code>softmax</code>:</p> \\[ L(y, \\hat{y}) = - \\sum_{j=0}^{C-1}(y^{[j]} * log(\\hat{y}^{[j]})) \\] <p>The cost function used with <code>softmax</code>:</p> \\[ J(w^{[1]}, b^{[1]}, \\cdots) = -\\frac{1}{m} * \\sum_{i=0}^{m}(L(y^{[i]}, \\hat{y}^{[i]})) \\] <p>Back propagation with <code>softmax</code>:</p> \\[ dZ^{[L]} = \\hat{Y} - Y \\] <p>The derivative of softmax is:</p> \\[ \\hat{Y} * (1 - \\hat{Y}) \\] <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/","title":"Structuring mechine learning projects","text":"<p>You have a lot of ideas for how to improve the accuracy of your deep learning systems:</p> <ul> <li>Collect more data;</li> <li>Collect more diverse training set;</li> <li>Train algorithm longer with gradient descent;</li> <li>Try different optimization algorithm(e.g. Adam);</li> <li>Try bigger network;</li> <li>Try smaller network;</li> <li>Try drop out;</li> <li>Add L2 regularization;</li> <li>Change network architecture(activation functions, number of hidden units, etc.).</li> </ul> <p>This chapter will give you some strategies to help analyze your problem to go in a direction that will help you get better result.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#orthogonalization","title":"Orthogonalization","text":"<p>Some deep learning developers know exactly what hyperparameter to tune to try to achieve one effect. This is a process we call orthogonalization. In orthogonalization, you have some controls, but each control does a specific task and doesn't affect other controls.</p> <p>For a supervised learning system to do well, you usually need to tune the knobs of your system to make sure that four things hold true:</p> <ol> <li>You'll have to fit trainning set well on cost function(near human level performance if posiible);</li> <li>Fit dev set well on cost function;</li> <li>Fit test set well on cost function;</li> <li>Performs well in real world.</li> </ol>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#single-number-evaluation-metric","title":"Single number evaluation metric","text":"<p>It's better and faster to set a single number evaluation metric for your project before you start i.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#precision-and-recall","title":"Precision and recall","text":"<p>Suppose we run the classifier on 10 images which are 5 cats and 5 non-cats. The classifier idetifies that there are 4 cats, but it identified 1 wrong cat. The confusion matrix is:</p> iterm Predicted cat Predicted non-cat Actual cat 3 2 Actual non-cat 1 4 <p>The </p> <ul> <li><code>Precision</code>: perception of true cats in the recognized result: \\(P = \\frac{3}{3+1}\\);</li> <li><code>Recall</code>: perception of the true recognition cats of the all cat predictions: \\(R = \\frac{3}{3+2}\\);</li> <li><code>Accuracy</code>: \\(A = \\frac{3 + 4}{10}\\).</li> </ul> <p>Using a precision/recall for evaluation is good in a lot of cases, but separately they don't tell you which algorithm is better. A better idea is to combine precision and recall in one single number evaluation metric called <code>F1</code>:</p> \\[ F_1 = \\frac{2}{\\frac{1}{P} + \\frac{1}{R}} \\] <p>Sometimes it's hard to get a single number evaluation metrix, ex:</p> Classifier F1 Running time A 90% 80ms B 92% 95ms C 92% 1500ms <p>So we can solve this problem by choosing a single optimizing metric and set that other metrics are satisfying, ex:</p> Metric type Metric optimizing metric Maximizing F1 satisfying metric running time &lt; 100ms <p>The general rule is:</p> <ul> <li>Set \\(1\\) optimizing metric;</li> <li>Set \\(N-1\\) satisfying metric.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#traindevtest-distributions","title":"Train/dev/test distributions","text":"<ul> <li>Dev and test sets have to come from the same distribution;</li> <li>Choose dev set and test set to reflect data you expect to get in the future and consider important to do well on;</li> <li>Setting up the dev set as well as the validation metric really depends on what target you want to aim at.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#size-of-the-dev-and-test-sets","title":"Size of the dev and test sets","text":"<ul> <li>The old way(number &lt; 100000) of splitting the data was 70% training, 30%  test or 60% training, 20% dev, 20% test;</li> <li>If you have more data, a reasonable split would be 98% training, 1% dev, 1% set.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#human-level-performance","title":"Human level performance","text":"<p>We compare to human-level performance because of two main reason:</p> <ol> <li>Because of advances in deep learning, machine learning algorithms are suddenly working much better and so it has become much more feasible in a lot of application areas for machine learning algorithms to actually become competitive with human-level performance.</li> <li>It turns out that the workflow of designing and building a machine learning system is much more efficient when you're trying to do something that humans can also do.</li> </ol> <p>After an algorithm reaches the human-level performance the progress and accuracy slow down.</p> <p></p> <p>You won't surpass an error called \"Bayes optimal error\", and there isn't much error range between human-level error and Bayes optimal error. Humans are good at a lot of tasks. So as long as Mechine learning error is worse than human's, you can:</p> <ul> <li>Get labeled data from humans;</li> <li>Gain insight from manual error analysis: why did a person get it right?</li> <li>Better analysis of bias/variance.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#avoidable-bias","title":"Avoidable bias","text":"<p>Suppose that the cat classification algorithm gives these results:</p> Humans 1% 7.5% Trainning error 8% 8% Dev error 10% 10% <p>In the left example, we have to focus on the <code>bias</code> because the human level error is 1%; in the right example, we have to focus on the <code>variance</code> because the human level error is 7.5%. The human-level error is a proxy for Bayes optimal error, Bayes optimal error is always less, but human-level in most case is not far from it. You can't do better than Bayes error unless you are overfitting.</p> <ul> <li><code>Avoidable bias = Traning error - Human(Bayes) error</code></li> <li><code>Variance = Dev error - Trainning error</code></li> </ul> <p>Having an estimate of human-level performance gives you an estimate of Bayes error, this allows you to more quickly make decision which error you should focus to reduce:</p> <ul> <li>If <code>avoidable bias</code> difference is the bigger, then it's a <code>bias</code> problem, and you should use a strategy for <code>bias</code> resolving;</li> <li>If <code>variance</code> difference is bigger, then you should use a strategy for <code>variance</code> resolving.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#improving-your-model-performance","title":"Improving your model performance","text":"<p>There are two fundamental assumptions of supervised learning:</p> <ol> <li>You can fit the training set pretty well, this is roughly saying that you can achieve <code>low avoidable bias</code>.</li> <li>The training set performance generalizes pretty well to the dev/test set. This is roughly saying that the <code>variance</code> is not too bad.</li> </ol> <p>Depends on the error difference, we have following guidelines:</p> <ul> <li>If <code>avoidable bias</code> is large, you can:<ol> <li>Train bigger model;</li> <li>Train longer/better optimization algorithm(e.g. Momentum, RMSprop, Adam);</li> <li>Find better neural network architecture or hyperparameters.</li> </ol> </li> <li>If <code>variance</code> is large you can:<ol> <li>Get more training data;</li> <li>Regularization(L2, Dropout, data augmentation);</li> <li>Find better neural network architecture or hyperparameters.</li> </ol> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/12_structure_ml/#carrying-out-error-analysis","title":"Carrying out error analysis","text":"<p>Error analysis is the process of manually examining mistakes that your algorihtm is making. It can give you insights into what you should do next. For example, if you have 10% error on your dev set and you want to decrease error. You discovered that some of the mislabled data are dog pictures that look like cats, you should:</p> <ol> <li>Get 100 mislabeled dev set examples at random;</li> <li>Count up how many are dogs.</li> <li>Check the result:<ul> <li>If 5 of 100 are dogs, then training your classifier to do better on dogs will decrease your error up to 9.5%, which means it may not worth it.</li> <li>If 50 of 100 are dogs, then you could decrease your error up to 5%, which is reasonable and you should work on that.</li> </ul> </li> </ol> <p>Sometimes you can evaluate multiple error analysis ideas in parallel and choose the best idea:</p> Image Dot Great Cats Blurry Instagram Filters Comments 1 Y Y Pitbull 2 Y Y Y 3 Rainy day at zoo 4 Y ... total"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/13_cnn/","title":"Convolutional Neural Networks","text":"<p>todo</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/","title":"Sequence models","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#recurrent-neural-networks","title":"Recurrent neural networks","text":"<p>This type of model has been proven to perform extremely well on temporal data. It has several variants including LSTM, GRU and Bidirectional RNN.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#why-sequence-models","title":"Why sequence models","text":"<p>Sequence models like RNN and LSTMs have greatly transformed learning on sequences in the past few years. Here are some sequence data examples in applications:</p> <ul> <li>Speech recognition(sequence to sequence):<ul> <li>X: wave sequence</li> <li>Y: text sequence</li> </ul> </li> <li>Music generation(one to sequence):<ul> <li>X: nothing or an integar</li> <li>Y: wave sequence</li> </ul> </li> <li>Sentiment classification(sequence to sequence):<ul> <li>X: text sequence</li> <li>Y: integar rating from one to five</li> </ul> </li> <li>DNA sequence analysis(sequence to sequence):<ul> <li>X: DNA sequence</li> <li>Y: DNA labels</li> </ul> </li> <li>Machine translation(sequence to sequence):<ul> <li>X: text sequence(in one language)</li> <li>Y: text sequence(in another language)</li> </ul> </li> <li>Video activity recognition(sequence to one):<ul> <li>X: video frames</li> <li>Y: label(activity)</li> </ul> </li> <li>Name entity recognition(sequence to sequence):<ul> <li>X: text sequence</li> <li>Y: label sequence</li> </ul> </li> </ul> <p>All these problems with different input and output(sequence or not) can be addressed as supervised learning with labeled data X/Y as the training set.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#notation","title":"Notation","text":"<p>We now discuss the notation we used in this course.</p> <p>We name entity recognition:</p> <ul> <li>X: \"Harry Potter and Hermoine Granger invented a new spell.\"</li> <li>Y:  1     1      0   1        1       0        0 0   0</li> </ul> <p>Both elements have a shape of \\((9, 1)\\). \\(1\\) means it's a name and \\(0\\) means it's not a name.</p> <p>We will index the first element of \\(x\\) by \\(x^{&lt;1&gt;}\\), the second \\(x^{&lt;2&gt;}\\) and so on:</p> \\[ x^{&lt;1&gt;}, x^{&lt;2&gt;}, \\cdots, x^{&lt;n&gt;} \\] <p>Similarly, we will index the first element of \\(y\\) by \\(y^{&lt;1&gt;}\\) and the second \\(y^{&lt;2&gt;}\\) and so on:</p> \\[ y^{&lt;1&gt;}, y^{&lt;2&gt;}, \\cdots, y^{&lt;n&gt;} \\] <p>We use:</p> <ul> <li>\\(T_x\\) to represent the size of input sequence;</li> <li>\\(T_y\\) to represent the size of output sequence;</li> <li>\\(x^{(i)&lt;t&gt;}\\) is the \\(t\\)th element of the sequence of input vector \\(i\\);</li> <li>\\(y^{(i)&lt;t&gt;}\\) is the \\(t\\)th element in the output sequence of \\(i\\)th training exmaple;</li> <li>\\(T_x^{(i)}\\) is the sequence length for training example \\(i\\), it can be different across the examples;</li> <li>\\(T_y^{(i)}\\) is the length for output sequence in the \\(i\\)th training example.</li> </ul> <p>One of the challenges of natural language processing(NLP) is how can we represent a word.</p> <p>We need a <code>vocabulary</code> list that contains all the words in our target sets, for example:</p> \\[ \\begin{bmatrix} a \\\\\\\\ \\vdots \\\\\\\\ And \\\\\\\\ \\vdots \\\\\\\\ Harry \\\\\\\\ \\vdots \\\\\\\\ Potter \\\\\\\\ \\vdots \\\\\\\\ Zulu \\end{bmatrix} \\] <p>Each word will have a unique index that it can be represented with, and the sorting here is in alphabetical order. vocabulary sizes in modern applications are from \\(30000\\) to \\(50000\\), \\(100000\\) is not uncommon, some of the bigger companies use even a million.</p> <p>And then you create a <code>one-hot</code> encoding sequence for each word in your dataset given the vocabulary you have created.</p> \\[ \\begin{bmatrix} 0 \\\\\\\\ \\vdots \\\\\\\\ 0 \\\\\\\\ \\vdots \\\\\\\\ 1 \\\\\\\\ \\vdots \\\\\\\\ 0 \\\\\\\\ \\vdots \\\\\\\\ 0 \\end{bmatrix} \\] <p>While converting, if a word is not in your dictionary, you can add a token in the vocabulary with name <code>&lt;UNK&gt;</code> wich stands for unknown text and use its index for your <code>one-hot</code> vector.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#recurrent-neural-network-model","title":"Recurrent neural network model","text":"<p>Why not using a standard network for sequence tasks? There are two problems:</p> <ol> <li>inputs and outputs can be different lengths in different example.</li> <li>this doesn't share features learned across different positions of text/sequence.</li> </ol> <p>Recurrent neural network doesn't have either of the two mentioned problems.</p> <p>Let's build a <code>RNN</code> to solve the <code>name entity recognition</code> task: </p> <p>In this problem, \\(T_x = T_y\\). In other problems they may be not equal.</p> <p>\\(a^{&lt;0&gt;}\\) is usually initialized with zeros, but some other problems may initialize it randomly.</p> <p>There are three weight matrices here with shape:</p> <ul> <li>\\(W_{ax}\\): (NumberOfHiddenNeurons, \\(n_x\\));</li> <li>\\(W_{aa}\\): (NumberOfHiddenNeurons, NumberOfHiddenNeurons)</li> <li>\\(W_{ya}\\): (\\(n_y\\), NumberOfHiddenNeurons)</li> </ul> <p>The weight matrix \\(W_{aa}\\) is the memory that RNN is trying to maintain from previous layers.</p> <p>A lot of papers and books write the same architecture in right figure way.</p> <p>The limitation fo the discussed architecture is that it can not learn from elements later in the sequence.</p> <p>The forward propagation is as follows:</p> \\[ a^{&lt;0&gt;} = \\vec{0} \\] \\[ a^{&lt;1&gt;} = g_1(w_{aa}a^{&lt;0&gt;} + w_{ax}x^{&lt;1&gt;} + b_a) \\gets tanh | Relu \\] \\[ y^{&lt;1&gt;} = g_2(w_{ya}a^{&lt;1&gt;} + b_y) \\gets sigmoid \\] \\[ a^{&lt;t&gt;} = g(w_{aa}a^{&lt;t-1&gt;} + w_{ax}x^{&lt;t&gt;} + b_a) \\] \\[ y^{&lt;t&gt;} = g_2(w_{ya}a^{&lt;t&gt;} + b_y) \\] <p>where:</p> <ul> <li>The activation function of \\(a\\) is usually \\(tanh\\) or \\(ReLU\\);</li> <li>The activation function for \\(y\\) is depending on your task and choosing \\(sigmoid\\) or \\(softmax\\).</li> </ul> <p>Inorder to help us develop complex RNN architecture, the last equations needs to be simplified a lot:</p> <p>Simplify:</p> \\[ a^{&lt;t&gt;} = g(w_{aa}a^{&lt;t-1\\&gt;} + w_{ax}x^{&lt;t\\&gt;} + b_a) \\] <p>to:</p> \\[ a^{&lt;t&gt;} = g(w_{a}[a^{&lt;t-1\\&gt;}, x^{&lt;t&gt;}]^T + b_a) \\] <p>where</p> \\[ w_a = \\begin{bmatrix} w_{aa}, w_{ax}\\end{bmatrix} \\] <p>In the equation,</p> <ul> <li>\\(w_a\\) is \\(w_{aa}\\) and \\(w_{ax}\\) stacked horizontally;</li> <li>\\([a^{&lt;t-1&gt;}, x^{&lt;t&gt;}]^T\\) is \\(a^{&lt;t-1&gt;}\\) and \\(x^{&lt;t&gt;}\\) stacked vertically;</li> <li>the shape of \\(w_a\\) is \\((NumberOfHiddenNeurons, NumberOfHiddenNeurons + n_x)\\);</li> <li>the shape of \\([a^{&lt;t-1&gt;}, x^{&lt;t&gt;}]^T\\) is \\((NumberOfHiddenNeurons + n_x, NumberOfHiddenNeurons)\\).</li> </ul> <p>Following is the architecture for a single cell: </p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#backpropagation-through-time","title":"Backpropagation through time","text":"<p>Usually deep learning frameworks do backpropagation automatically for you, but it's useful to know how it works in RNN.</p> <p>To calculate backpropagation, and update RNN parameters with gradient descent methods, we define the cross-entropy loss function:</p> \\[ L^{&lt;t&gt;}(\\hat y^{&lt;t&gt;}, y^{&lt;t&gt;}) = -y^{&lt;t&gt;}log(\\hat y^{&lt;t&gt;}) - (1 - y^{&lt;t&gt;})log(1-\\hat y^{&lt;t&gt;}) \\] <p>This equation is the loss for one example, and the loss for the whole sequence is given by the summation over all the calculated single example losses:</p> \\[ L(\\hat y, y) = \\sum_{t=1}^{T_x}{L^{&lt;t&gt;}(\\hat y^{&lt;t&gt;}, y^{&lt;t&gt;})} \\] <p></p> <p>The backpropagation here is called <code>backpropagation through time</code> because we pass activation \\(a\\) from one sequence element to another like backwards in time.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#different-types-of-rnn","title":"Different types of RNN","text":"<p>So far we have seen only one RNN architecture in which \\(T_x = T_y\\). Other architectures can be: </p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#vanishing-gradient","title":"Vanishing gradient","text":"<p>One of the problems with naive RNNs is that they run into <code>vanishing gradient</code> problem. An RNN that process a sequence data with the size of 10000 time steps has 10000 deep layers which is very hard to optimize.</p> <p>Let's take an example. Suppose we are working with language modeling problem and there are two sequences that model tries to learn:</p> <ul> <li>The <code>cat</code>, which already ate ..., <code>was</code> full.</li> <li>The <code>cats</code>, which already ate ..., <code>were</code> full.</li> </ul> <p>What we need to learn is that <code>was</code> came with <code>cat</code> and <code>were</code> came with <code>cats</code>. The naive RNN is not very good at capturing very long-term dependencies like this.</p> <p>As we discussed before, deeper networks are getting into vanishing gradient problem, this also happens with RNNs with long sequence size. For computing the word <code>was</code>, we need to compute the gradient for everything behind. Multiplying fractions tends to vanish the gradient, while the multiplication of large number tends to explode it.</p> <p>The conclusion is:</p> <p>RNNs are not good at long-term dependencies.</p> <p>Exploding gradients can be easily seen when your weight values become <code>Nan</code>. So one of the methods to solve exploding gradient is to apply <code>gradient clipping</code>, which means if your gradient is more than some threshold, rescale some of your gradient vector so that it's not too big.</p> <p>The solution for <code>exploding gradient</code> problems:</p> <ul> <li>Truncated backpropagation<ul> <li>Not to update all the weights in the way back</li> <li>Not optimal. You won't update all the weights</li> </ul> </li> <li>Gradient clipping</li> </ul> <p>The solution for <code>vanishing gradient</code> problems:</p> <ul> <li>Weight initialization<ul> <li>Like He initialization</li> </ul> </li> <li>Echo state networks</li> <li>Use LSTM/GRU networks<ul> <li>Most popular</li> </ul> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#gated-recurrent-unitgru","title":"Gated Recurrent Unit(GRU)","text":"<p>GRU is an RNN type that can help solve the vanishing gradient problem and can remember the long-term dependencies.</p> <p>The basic RNN unit can be visualized to:</p> <p></p> <p>The drawing for GRU is similar. Each layer in GRU has a new variable <code>C</code> called <code>memory cell</code> which can tell whether meorize something or not. In GRUs, \\(C^{&lt;t&gt;} = a^{&lt;t&gt;}\\), the equations are:</p> \\[ \\tilde c^{&lt;t&gt;} = tanh(W_c[c^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_c) \\] \\[ \\Gamma_u = \\sigma(W_u[c^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_u) \\] \\[ c^{&lt;t&gt;} = \\Gamma_u \\times \\tilde c^{&lt;t&gt;} + (1 - \\Gamma_u) \\times c^{&lt;t-1&gt;} \\] <p>The \\(\\Gamma_u\\) is called <code>update gate</code>, and it's value is between 0 and 1.</p> <p></p> <p>Because the update gate U is usually a small number like \\(0.000001\\), GRUs doesn't suffer the vanishing gradient problem.</p> <p>The GRU above is the simplified GRU unit, the full one is:</p> \\[ \\tilde c^{&lt;t&gt;} = tanh(W_c[\\Gamma_r \\times c^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_c) \\] \\[ \\Gamma_u = \\sigma(W_u[c^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_u) \\] \\[ \\Gamma_r = \\sigma(W_r[c^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_r) \\] \\[ c^{&lt;t&gt;} = \\Gamma_u \\times \\tilde c^{&lt;t&gt;} + (1 - \\Gamma_u) \\times c^{&lt;t-1&gt;} \\]"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#long-short-term-memorylstm","title":"Long Short Term Memory(LSTM)","text":"<p>LSTM is another type of RNN that can enable you to account for long-term dependencies. It's more powerful and general than GRU.</p> <p>In LSTM, \\(C^{&lt;t&gt;} != a^{&lt;t&gt;}\\):</p> \\[ \\tilde{C}^{&lt;t&gt;} = tanh(W_c[a^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_c) \\] \\[  \\Gamma_u = \\delta(W_u[a^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_u) \\] \\[  \\Gamma_f = \\delta(W_f[a^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_f) \\] \\[  \\Gamma_o = \\delta(W_o[a^{&lt;t-1&gt;}, x^{&lt;t&gt;}] + b_o) \\] \\[ C^{&lt;t&gt;} = \\Gamma_u \\times \\tilde{C}^{&lt;t&gt;} + \\Gamma_f \\times C^{&lt;t-1&gt;} \\] \\[ a^{&lt;t&gt;} = \\Gamma_o \\times tanh C^{&lt;t&gt;} \\] <p>In LSTM, we have:</p> <ul> <li>update gate: \\(\\Gamma_u\\);</li> <li>forget gate: \\(\\Gamma_f\\);</li> <li>output gate: \\(\\Gamma_o\\);</li> <li>candidate cell variable: \\(\\tilde{C}^{&lt;t&gt;}\\).</li> </ul> <p>  One of the advantages of GRU is that it's simpler and can be used to build much bigger network but the LSTM is more powerful and general.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#bidirectional-rnn","title":"Bidirectional RNN","text":"<p>There are still some idea to let you build much more powerful sequence models. One of them is bidirectional RNNs and another is Deep RNN.</p> <p>One directional RNN can only learned the information before this position, but BiRNN fixes this issue. </p> <ul> <li>BiRNN is an acyclic graph.</li> <li>Part of the forward propagation goes from left to right and part from right to left. It learns from boths side.</li> <li>To make prediction we use \\(\\tilde y^{&lt;t&gt;}\\) with two activation that come from left and right.</li> <li>The blocks here can be any RNN block including the basic RNNs, LSTMs or GRUs.</li> <li>For a lot of NLP or text processing problems, a BiRNN with LSTM appears to be commonly used.</li> <li>The disadvantage of BiRNNs is that you need the entire sequence before you can process it. For example, in live speech recognition if you use BiRNNs you will need to wait for the speaker to stop to take the entire sequence and then make your predictions.</li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/14_rnn/#deep-rnns","title":"Deep RNNs","text":"<p>In a lot of cases the standard one layer RNNs will solve your problem. But in some problems its useful to stack some RNN layers to make a deeper network. For example, a deep RNN with 3 layers would look like this: </p> <p>In feed-forward deep nets, there could be 100 or even 200 layers. In deep RNNs stacking 3 layers is already considered deep and expensive to train.</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/GCN/","title":"GCN","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PPO%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/","title":"PPO\u7b97\u6cd5\u7b14\u8bb0","text":"<p>1\u3001on-policy\u4e0eoff-policy\u7684\u533a\u522b</p> <p>\u5982\u679c\u8981\u5b66\u4e60\u7684\u667a\u80fd\u4f53\u548c\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u667a\u80fd\u4f53\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u540c\u7b56\u7565\uff0c\u91c7\u96c6\u4e00\u4e2atrajectory\u540e\u624d\u80fd\u66f4\u65b0\u4e00\u6b21network\u3002\u5982\u679c\u8981\u5b66\u4e60\u7684\u667a\u80fd\u4f53\u548c\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u667a\u80fd\u4f53\u4e0d\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5f02\u7b56\u7565\uff0c\u7528\u53e6\u4e00\u4e2aactor\u91c7\u96c6\u591a\u6761trajectory\uff0c\u6765\u4e00\u6b21\u66f4\u65b0\u591a\u6b21network\u3002</p> <p>2\u3001\u91cd\u8981\u6027\u91c7\u6837\u7684\u5f15\u5165  \u91cd\u8981\u6027\u91c7\u6837\u662f\u65e0\u504f\u4f30\u8ba1\uff0c\u4f46\u662f\u5982\u679cp\u548cq\u5dee\u8ddd\u592a\u5927\uff0c\u65b9\u5dee\u4f1a\u53d8\u7684\u5f88\u5927 </p> <p>3\u3001PPO/TRPO\u7b97\u6cd5\u7684\u5f15\u5165</p> <p>\u4e3a\u4e86\u89e3\u51b3\u91cd\u8981\u6027\u91c7\u6837\u4e2d\u65b9\u5dee\u8fc7\u5927\u95ee\u9898\uff0cPPO\u5728\u76ee\u6807\u51fd\u6570J\u4e2d\u5f15\u5165\u4e86\u6b63\u5219\u9879\uff08KL divergence\uff09\uff0cTRPO\u5bf9\u76ee\u6807\u51fd\u6570\u5f15\u5165\u4e86\u7ea6\u675f\uff08KL divergence&lt;\\theta\uff09,\u5176\u5b9e\u4e24\u8005\u7684\u60f3\u6cd5\u662f\u76f8\u4f3c\u7684\u3002KL\u00a0divergence\u6307\u7684\u662f\u4e24\u4e2a\u7b56\u7565\u4e4b\u95f4\u7684\u5206\u5e03\u5dee\u5f02\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a\u7b56\u7565\u53c2\u6570\u95f4\u7684\u8ddd\u79bb\u3002</p> <p>\u5f15\u5165\u91cd\u8981\u6027\u91c7\u6837\u540e\u539f\u6765\u7684\u7b56\u7565\u68af\u5ea6\u53d8\u4e3a\uff1a\u00a0\u00a0</p> <p>\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e3a</p> <p>PPO\u5f15\u5165\u6b63\u5219\u5316\u9879\u540e\u76ee\u6807\u51fd\u6570\u53d8\u4e3a</p> <p>TRPO\u5f15\u5165\u7ea6\u675f\u540e\u76ee\u6807\u51fd\u6570\u53d8\u4e3a</p> <p></p> <p>4\u3001PPO\u7b97\u6cd5\u7684trick \u2460\u8fd1\u7aef\u7b56\u7565\u4f18\u5316\u60e9\u7f5a\u81ea\u9002\u5e94KL divergence </p> <p></p> <p>\uff0cKL  \u6563\u5ea6\u7684\u503c\u592a\u5927\uff0c\u8fd9\u5c31\u4ee3\u8868\u540e\u9762\u60e9\u7f5a\u7684\u9879\u6ca1\u6709\u53d1\u6325\u4f5c\u7528\uff0c\u6211\u4eec\u5c31\u628a\u03b2  \u589e\u5927\uff0c\u52a0\u5927\u60e9\u7f5a\u3002\u5982\u679cKL  \u6563\u5ea6\u592a\u5c0f\uff0c\u5c31\u4ee3\u8868\u540e\u9762\u8fd9\u4e00\u9879\u7684\u6548\u679c\u592a\u5f3a\u4e86\uff0c\u6211\u4eec\u6015\u4ed6\u53ea\u4f18\u5316\u540e\u4e00\u9879\uff0c\u4f7f\u03b8  \u4e0e\u03b8k</p> <p>\u4e00\u6837\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u51cf\u5c0f\u03b2\u3002 * * \u2461\u8fd1\u7aef\u7b56\u7565\u4f18\u5316\u88c1\u526a  * *  \u5bf9\u88c1\u526a\u7684\u7406\u89e3\uff1a\u7ea2\u7ebf\u662fJ\u7684\u8f93\u51fa\uff0cp\u03b8\u4e0ep\u03b8k\u7684\u6bd4\u503c\u6c38\u8fdc&gt;0 \u6211\u4eec\u5148\u8003\u8651A \u00d7\uff08p\u03b8/p\u03b8k\uff09</p> <p>\u5982\u679c\u52bf\u51fd\u6570A\u5927\u4e8e0\uff0c\u8bf4\u660e\u5f53\u524d\u7b56\u7565\u662f\u79ef\u6781\u7684\uff0c\u53ef\u4ee5\u4f7f\u4ef7\u503c\u51fd\u6570\u53d8\u5927\u3002\u4f46\u662f\u6211\u4eec\u6015\u4e3a\u4e86\u4f7f\u76ee\u6807\u51fd\u6570\u53d8\u5927\uff0c\u7f51\u7edc\u4f1a\u4e0d\u65ad\u5730\u589e\u5927p\u03b8\uff0c\u8fd9\u6837\u4f1a\u4f7fp\u03b8\u4e0ep\u03b8k\u5dee\u8ddd\u8fc7\u5927\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u89c4\u5b9a\u4e00\u4e2a\u4e0a\u9650\uff0c\u5373\u4f7fp\u03b8\u8fdc\u8fdc\u5927\u4e8ep\u03b8k\uff0c\uff08p\u03b8/p\u03b8k\uff09\u6bd4\u503c\u4e5f\u4e0d\u4f1a\u53d8\u5927\u4e86\uff0c\u8fd9\u6837\u4e5f\u4e0d\u4f1a\u4f7f\u76ee\u6807\u51fd\u6570A \u00d7\uff08p\u03b8/p\u03b8k\uff09\u53d8\u5f97\u66f4\u5927\u4e86\uff0c\u6240\u4ee5\u7f51\u7edc\u5c31\u4e0d\u4f1a\u4ee5\u4e3a\u7684\u8ffd\u6c42\u589e\u5927p\u03b8\u3002</p> <p>\u5982\u679c\u52bf\u51fd\u6570A\u5927\u4e8e0\uff0c\u8bf4\u660e\u5f53\u524d\u7b56\u7565\u662f\u6d88\u6781\u7684\uff0c\u4f1a\u8ba9\u4ef7\u503c\u51fd\u6570\u53d8\u5c0f\u3002\u8fd9\u65f6\u5019\u4e3a\u4e86\u4f7f\u76ee\u6807\u51fd\u6570\u53d8\u5927\uff0c\u7f51\u7edc\u53ef\u80fd\u4f1a\u4e0d\u65ad\u5730\u51cf\u5c0fp\u03b8\uff08\u8fd9\u6837p\u03b8\u4e0ep\u03b8k\u7684\u6bd4\u503c\u63a5\u8fd10\uff0c\u518d\u4e58\u52bf\u51fd\u6570A\u5c31\u4f1a\u4f7f\u76ee\u6807\u51fd\u6570\u53d8\u5f97\u5c3d\u53ef\u80fd\u5927\uff09\uff0c\u8fd9\u6837\u540c\u6837\u4f1a\u5bfc\u81f4p\u03b8\u4e0ep\u03b8k\u5dee\u8ddd\u8fc7\u5927\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u89c4\u5b9a\u4e00\u4e2a\u4e0b\u9650\u3002\u5373\u4f7fp\u03b8\u8fdc\u8fdc\u5c0f\u4e8ep\u03b8k\uff0c\uff08p\u03b8/p\u03b8k\uff09\u6bd4\u503c\u4e5f\u4e0d\u4f1a\u53d8\u5c0f\u4e86\uff0c\u8fd9\u6837\u4e5f\u4e0d\u4f1a\u4f7f\u76ee\u6807\u51fd\u6570A \u00d7\uff08p\u03b8/p\u03b8k\uff09\u53d8\u5f97\u66f4\u5927\u4e86\uff0c\u6240\u4ee5\u7f51\u7edc\u5c31\u4e0d\u4f1a\u4ee5\u4e3a\u7684\u8ffd\u6c42\u51cf\u5c0fp\u03b8\u3002</p> <p>* * * *</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/RNN%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%BB%E7%BB%93/","title":"RNN\u7684\u4e00\u70b9\u603b\u7ed3","text":"<p>RNN\u7f51\u7edc\u7684\u5b9a\u4e49\uff1arnn= nn.RNN(input_size, hidden_size, num_layers, batch_first=True)</p> <p>input_size\uff1a\u8f93\u5165\u7684\u7ef4\u5ea6 hidden_size\uff1a\u9690\u85cf\u5c42\u7684\u7ef4\u5ea6 num_layers\uff1a\u7f51\u7edc\u7684\u5c42\u6570</p> <p>RNN\u7684\u6b63\u5411\u4f20\u64adout\uff0cstate=self.rnn(x\uff09\uff0cx\u7684\u7ef4\u5ea6\u4e3a\u00a0 \u00a0(batch_size, seq_length,input_size)\uff0c out\u7684\u7ef4\u5ea6\u4e3a\u00a0 \u00a0(batch_size, seq_length, hidden_size)\uff0cstate\u4e3a\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u9690\u85cf\u5c42\u8f93\u51fa\uff0c\u7ef4\u5ea6\u4e3a\uff08num_layer, batch_size\uff0chidden_size\uff09</p> <p>batch_first=False \u65f6(\u9ed8\u8ba4\u503c) RNN\u7684\u6b63\u5411\u4f20\u64adout\uff0cstate=self.rnn(x\uff09\uff0cx\u7684\u7ef4\u5ea6\u4e3a\u00a0 \u00a0(seq_length,batch_size, input_size)\uff0c out\u7684\u7ef4\u5ea6\u4e3a\u00a0 \u00a0(seq_length,batch_size, hidden_size)\uff0cstate\u4e3a\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u9690\u85cf\u5c42\u8f93\u51fa\uff0c\u7ef4\u5ea6\u4e3a\uff08num_layer, batch_size\uff0chidden_size\uff09</p> <p>\u6ce8\u610f\u8f93\u5165\u7ed9\u7f51\u7edc\u7684X\u7684\u5e8f\u5217\u957f\u5ea6\u5e76\u4e0d\u9700\u8981\u4e00\u81f4\uff0c\u53ef\u4ee5\u4e0d\u65ad\u53d8\u5316\uff0c\u53ea\u8981\u4fdd\u8bc1input_size\u662f\u4e00\u81f4\u7684\u5c31\u53ef\u4ee5\u4e86</p> <p>seq_length\uff1a\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5e76\u4e0d\u9700\u8981\u56fa\u5b9a\u4e3a\u67d0\u4e00\u4e2a\u503c\uff08\u8bad\u7ec3\u65f6\u6bcf\u4e2abatch\u7684seq_length\u8981\u4e00\u81f4\uff09\uff0c\u9a8c\u8bc1\u65f6\u4e0d\u9700\u8981\u4e00\u81f4</p> <p>\u5173\u4e8e\u5e8f\u5217\uff1a 1\u3001\u53ef\u4ee5\u5c06\u4e00\u5f20\u56fe\u7247\u5f53\u4f5c\u4e00\u4e2a\u5e8f\u5217\uff0c\u82e5batchsize=10\uff0c\u90a3\u4e48\u4e00\u6b21\u8bad\u7ec310\u5f20\u56fe\u7247\uff0c\u4f46\u662f\u6bcf\u5f20\u56fe\u7247\u4e2d\u50cf\u7d20\u7684\u884c\u6570\u53ef\u4ee5\u4e0d\u4e00\u81f4\u3002\uff08\u6bcf\u4e00\u884c\u50cf\u7d20\u5f53\u4f5c\u4e00\u4e2ax\uff0c\u5373\u7b2c\u4e00\u884c\u50cf\u7d20\u4e3ax1\uff0c\u7b2c\u4e8c\u884c\u50cf\u7d20\u4e3ax2....\uff0c\u7ef4\u5ea6\u5927\u5c0f\u4e3a\uff08input_size\uff08\u5217\u6570\uff09-&gt;\u8fd9\u4e2a\u7ef4\u5ea6\u6240\u6709\u6570\u636e\u90fd\u8981\u4e00\u81f4\uff09\u8fd9\u6837\u4e00\u5f20\u56fe\u7247\u7ef4\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a\uff08seq_length\uff08\u884c\u6570\uff09-&gt;\u53ef\u4ee5\u53d8\u5316\uff08\u8bad\u7ec3\u65f6\u6bcf\u4e2abatch\u7684seq_length\u8981\u4e00\u81f4\uff09, input_size\uff08\u5217\u6570\uff09\uff09\u4e00\u4e2abatch\u7684\u7ef4\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a(batch_size, seq_length,input_size)</p> <p>2\u3001\u4e5f\u53ef\u4ee5\u5c06\u4e00\u7ec4\u56fe\u7247\u5f53\u4f5c\u4e00\u4e2a\u5e8f\u5217\uff0c\u82e5batchsize=10\uff0c\u90a3\u4e48\u4e00\u6b21\u8bad\u7ec310\u7ec4\u56fe\u7247\uff0c\u4f46\u662f\u6bcf\u7ec4\u56fe\u7247\u4e2d\u56fe\u7247\u7684\u4e2a\u6570\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff08\u6bcf\u5f20\u56fe\u7247\u6240\u6709\u50cf\u7d20\u62c9\u957f\u5f53\u4f5c\u4e00\u4e2ax\uff0c\u5373\u7b2c\u4e00\u5f20\u56fe\u7247\u4e3ax1\uff0c\u7b2c\u4e8c\u7ae0\u56fe\u7247\u4e3ax2....\uff0c\u7ef4\u5ea6\u5927\u5c0f\u4e3a\uff08input_size\uff08\u56fe\u7247\u50cf\u7d20\u603b\u6570\uff09-&gt;\u8fd9\u4e2a\u7ef4\u5ea6\u6240\u6709\u6570\u636e\u90fd\u8981\u4e00\u81f4\uff09\u8fd9\u6837\u4e00\u7ec4\u56fe\u7247\u7ef4\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a\uff08seq_length\uff08\u6bcf\u7ec4\u4e2d\u7684\u56fe\u7247\u4e2a\u6570\uff09-&gt;\u53ef\u4ee5\u53d8\u5316\uff08\u8bad\u7ec3\u65f6\u6bcf\u4e2abatch\u7684seq_length\u8981\u4e00\u81f4\uff09, input_size\uff08\u6bcf\u5f20\u56fe\u7247\u50cf\u7d20\u603b\u6570\uff09\uff09\u4e00\u4e2abatch\u7684\u7ef4\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a(batch_size, seq_length,input_size)</p> <p>3\u3001\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u53e5\u5b50\u5f53\u4f5c\u4e00\u4e2a\u5e8f\u5217\uff0c\u82e5batchsize=10\uff0c\u90a3\u4e48\u4e00\u6b21\u8bad\u7ec310\u53e5\u8bdd\uff0c\u4f46\u662f\u6bcf\u53e5\u8bdd\u4e2d\u8bcd\u7684\u4e2a\u6570\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff08\u53e5\u5b50\u4e2d\u6bcf\u4e00\u4e2a\u8bcd\u5f53\u4f5c\u4e00\u4e2ax\uff0c\u5373\u7b2c\u4e00\u4e2a\u8bcd\u4e3ax1\uff08\u9700\u8981\u7f16\u7801\uff09\uff0c\u7b2c\u4e8c\u7ae0\u56fe\u7247\u4e3ax2....\uff0c\u7ef4\u5ea6\u5927\u5c0f\u4e3a\uff08input_size\uff08\u53d6\u51b3\u4e8e\u7f16\u7801\uff09\uff09\uff0c\u00a0\u8fd9\u6837\u4e00\u53e5\u8bdd\u7684\u7ef4\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a\uff08seq_length\uff08\u6bcf\u53e5\u8bdd\u4e2d\u8bcd\u7684\u4e2a\u6570\uff09-&gt;\u53ef\u4ee5\u53d8\u5316\uff08\u8bad\u7ec3\u65f6\u6bcf\u4e2abatch\u7684seq_length\u8981\u4e00\u81f4\uff09, input_size\uff08\u6bcf\u4e2a\u8bcd\u7f16\u7801\u7684\u7ef4\u5ea6\uff09\uff09\u4e00\u4e2abatch\u7684\u7ef4\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a(batch_size, seq_length,input_size)</p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/actor-critic/","title":"Actor critic","text":"<p>AC\u7b97\u6cd5\u4e0eQ\u65e0\u5173\uff0c\u4e0eV\u6709\u5173 </p> <p></p> <p>\u5c0ftip\uff1a\u53c2\u6570\u5171\u7528</p> <p></p> <p>policy gradient\u548cAC\u7b97\u6cd5\u7684\u533a\u522b\uff08\u5176\u5b9e\u6ca1\u5565\u533a\u522b\uff0c\u76f8\u6bd4\u4e8ePG\u7b97\u6cd5\uff0cAC\u7b97\u6cd5\u5c31\u662f\u52a0\u4e86\u4e00\u4e2a\u7f51\u7edc\u6765\u4f30\u8ba1\u7d2f\u8ba1\u56de\u62a5\uff09 </p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/batchnorm%E4%B8%8Elayer%20norm/","title":"Batchnorm\u4e0elayer norm","text":"<p>batch norm\uff1ab,c,h,w\u7684\u8f93\u5165\uff0c\u5747\u503c\u7684\u4e2a\u6570\u4e3ac\uff0c\u6c42\u5747\u503c\u7684\u5206\u6bcd\u4e3abhw</p> <p></p> <p>layer norm\uff1ab,c,h,w -&gt; b,hw,c\uff0c\u5747\u503c\u7684\u4e2a\u6570\u4e3abhw\uff0c\u6c42\u5747\u503c\u7684\u5206\u6bcd\u4e3ac</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/list%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C/","title":"List\u5207\u7247\u64cd\u4f5c","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/python%E4%B8%AD%E7%B1%BB%E5%9E%8B%E6%8F%90%E7%A4%BA/","title":"Python\u4e2d\u7c7b\u578b\u63d0\u793a","text":"<p>from typing import Generic, Optional, SupportsFloat, TypeVar, Union</p> <p>Generic\uff1a\u8868\u793a\u6cdb\u578b\uff0c\u4e00\u822c\u5728\u521b\u5efaclass\u65f6\u4f7f\u7528\uff0c Generic[T] \u8fd4\u56de\u7684T\u7c7b\u578b\uff0cGeneric\u548cTypeVar\u8fde\u7528 TypeVar\uff1a\u8868\u793a\u6cdb\u578b</p> <p>NewType\u8868\u793a\u7c7b\u578b\u522b\u540d</p> <p>Optional\uff1a\u8868\u793a\u53ef\u9009\u7c7b\u578bOptional[int]\uff0c\u8868\u793a\u53ef\u4ee5\u662fint\u4e5f\u53ef\u4ee5\u662fNone Union\uff1a\u8868\u793a\u6216\u7c7b\u578b </p> <p> </p> <p></p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/python%E6%8A%80%E5%B7%A7/","title":"Python\u6280\u5de7","text":"<p>1.\u5b9a\u4e49\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff1a a=\uff081\uff0c\uff09</p> <p>2.\u7c7b\u4e2d__call__\u51fd\u6570\uff0c\u628a\u7c7b\u5f53\u4f5c\u51fd\u6570\u6765\u8c03\u7528\uff1a\u00a0 Demo\uff08\u201c\u540d\u5b57\u201d\uff09\uff08\uff09 --\u300b\u6253\u5370\u51fa\u540d\u5b57</p> <p>3.\u904d\u5386\u5b57\u5178\u7684\u65b9\u5f0ffor i in dict -&gt;\u53ea\u80fd\u904d\u5386\u51fa\u952e\u503c </p> <p>\u904d\u5386\u952e\u7684\u65b9\u6cd5\uff1a</p> <p>\u904d\u5386\u503c\u7684\u65b9\u6cd5\uff1a</p> <p>\u65e2\u904d\u5386\u952e\u53c8\u904d\u5386\u503c\uff1a</p> <p>\u5185\u5d4cfor in \u5faa\u73af\uff1a</p> <p>\u7528for in \u8f6c\u6362\u5b57\u5178\u7684\u952e\u548c\u503c</p> <p>join\u65b9\u6cd5</p> <p>python\u751f\u6210\u5668\uff1a\u7528\u4e8e\u50a8\u5b58\u5927\u6570\u636e\u65f6\u51cf\u5c11\u5185\u5b58\uff08\u7528\u628a[]\u6539\u4e3a()\uff09,\u901a\u8fc7\u751f\u6210\u5668\u7684next\u65b9\u6cd5\u6765\u8bbf\u95ee\u6570\u636e </p> <p>yield\u5173\u952e\u5b57\uff1a</p> <p></p> <p>python\u6587\u4ef6\u7684\u8bfb\u5199</p> <p>python\u4e2dwith\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8c03\u7528with\u7684\u5bf9\u8c61\u5fc5\u987b\u8981\u6709__enter__\u548c__exit__\u65b9\u6cd5</p> <p></p> <p></p> <p></p> <p>python\u4e2d\u5bf9\u8c61\u8d4b\u503c\uff0c\u6df1\u62f7\u8d1d\uff0c\u6d45\u62f7\u8d1d\uff1a 1.\u5bf9\u8c61\u8d4b\u503c\uff0c\u4e00\u4e2a\u53d8 \u4e24\u4e2a\u90fd\u4f1a\u53d8 2.\u00a0 \u00a0 \u6d45\u62f7\u8d1d\uff0c\u4e24\u4e2a\u5bf9\u8c61\u5730\u5740\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u7684\u5730\u5740\u4e00\u6837</p> <p></p> <p></p> <p>3.\u6df1\u62f7\u8d1d</p> <p>python\u5b57\u5178\u6392\u5e8f\uff1a 1.\u6839\u636e\u952e\u6392\u5e8f\uff1a</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/python%E7%B1%BB%E7%9A%84%E5%A4%8D%E4%B9%A0/","title":"Python\u7c7b\u7684\u590d\u4e60","text":"<p>self\uff1a\u4ee3\u8868\u5b9e\u4f8b\u672c\u8eab \u7c7b\u672c\u8eab\u6709\u4e24\u79cd\u5c5e\u6027\uff1a\u7c7b\u5c5e\u6027\uff08\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff09\u548c\u5b9e\u4f8b\u5c5e\u6027\uff08\u53ea\u80fd\u901a\u8fc7\u5b9e\u4f8b\u5316\u540e\u8bbf\u95ee\uff09 \u5b9e\u4f8b\u79c1\u6709\u5316\u5c5e\u6027\uff1a </p> <p>\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb: 1.\u4f9d\u8d56\u5173\u7cfb 2.\u5173\u8054\u5173\u7cfb 3.\u7ec4\u5408\u5173\u7cfb</p> <p>\u7c7b\u7684\u79c1\u6709\u5c5e\u6027\uff1a\u5728\u5c5e\u6027\u524d\u52a0__,\u8fd9\u6837\u5728\u5b9e\u4f8b\u5916\u90e8\u5c31\u65e0\u6cd5\u8bbf\u95ee\u8be5\u5c5e\u6027\u4e86\uff0c\u53ea\u80fd\u5728\u7c7b\u5185\u90e8\u8bbf\u95ee</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/transformer/","title":"Transformer","text":"<p>transformer\uff1a \u4e24\u79cd\u7c7b\u578b\u7684decoder\uff1aNAT\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u901f\u5ea6\u8981\u6bd4AT\u5feb </p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/word2vec%E5%92%8Cbert%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"Word2vec\u548cbert\u7684\u533a\u522b","text":"<p>word2vec\u662f\u76f8\u6bd4\u4e8eone-hot\u6765\u8bf4\u7684\uff0c\u6bd4\u5982one-hot\u4e00\u5171\u6709\u5341\u4e07\u7ef4\u5411\u91cf\uff08\u53ea\u6709\u4e00\u7ef4\u662f1\uff0c\u5176\u4ed6\u90fd\u662f0\uff09\uff0c\u4f46\u662f\u5b83\u662f\u6ca1\u6709\u8003\u8651\u5230\u8bed\u4e49\u4fe1\u606f\u7684\uff0c\u6bcf\u4e2a\u5355\u8bcd\u4e0e\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u72ec\u7acb\u7684\u3002word2vec\u662f\u5728\u5341\u4e07\u4e2a\u5355\u8bcd\u6392\u4e00\u6392\uff0c\u7136\u540e\u6839\u636e\u4e0a\u4e0b\u6587\u5bf9\u6bcf\u4e00\u4e2a\u5355\u8bcd\u7f16\u7801\uff08\u8fd8\u662f\u7f16\u7801\u621010\u4e07\u7ef4\uff0c\u4f46\u662f\u4e0d\u662f\u7a00\u758f\u7684\u5411\u91cf\u4e86\uff0c\u6bcf\u4e00\u7ef4\u90fd\u6709\u6570\u5b57\uff09\u3002word2vec\u8003\u8651\u7684\u5468\u8fb9\u8bcd\u90fd\u662fbag of words\u7684\u6a21\u5f0f\uff0c\u662f\u6ca1\u6709\u8003\u8651\u5230\u8bed\u5e8f\u7684\u3002</p> <p>\u4f46\u662fword2vec\u7684\u7f3a\u70b9\u662f\u6bcf\u4e2a\u5355\u8bcd\u53ea\u7531\u4e00\u4e2a\u5411\u91cf\uff0c\u6ca1\u6709\u529e\u6cd5\u8003\u8651\u540c\u4e00\u4e2a\u5355\u8bcd\u5728\u4e0d\u540c\u7684\u8bed\u53e5\u7684\u8bed\u4e49\u3002 bert\u662f\u52a8\u6001\u7684\uff0c\u540c\u4e00\u4e2a\u5355\u8bcd\u5728\u4e0d\u540c\u7684\u8bed\u53e5\u4e2d\u4f1a\u7f16\u7801\u6210\u4e0d\u540c\u7684\u5411\u91cf\u3002 </p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/zip%E5%92%8C%20_/","title":"Zip\u548c","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%B8%80%E4%BA%9BIDEA/","title":"\u4e00\u4e9bIDEA","text":"<p>1.\u53c2\u8003\u5173\u9633\u7684\u90a3\u7bc7\u6587\u7ae0\uff0c\u80fd\u4e0d\u80fd\u628aRL\u79bb\u7ebf\u5b66\u4e60\u89e3MPC\u7684\u65b9\u6cd5\u6269\u5c55\u5230\u591a\u8f66\u7684\u4e00\u4e2a\u573a\u666f\u4e0a </p> <p>2.\u53c2\u8003\u6e2f\u79d1\u5927\u5b8b\u6d69\u7136\u8fd9\u7bc7\u6587\u7ae0\uff0c\u80fd\u4e0d\u80fd\u7528\u89c4\u5212\u6307\u5bfc\u9884\u6d4b\u518d\u7ffb\u8fc7\u6765\u5e2e\u52a9\u89c4\u5212\uff08\u5b8b\u6d69\u7136\u53ea\u505a\u4e86\u7528\u81ea\u8f66\u89c4\u5212\u6765\u6307\u5bfc\u9884\u6d4b\u7684\u5de5\u4f5c\uff0c\u6ca1\u6709\u7ee7\u7eed\u505a\u89c4\u5212\u7684\u5de5\u4f5c\uff09\u3002</p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%B8%BA%E4%BB%80%E4%B9%88targetnetwork%E5%92%8Cdouble%20DQN%E5%8F%AF%E4%BB%A5%E8%A7%A3%E5%86%B3%E9%AB%98%E4%BC%B0%E9%97%AE%E9%A2%98/","title":"\u4e3a\u4ec0\u4e48targetnetwork\u548cdouble DQN\u53ef\u4ee5\u89e3\u51b3\u9ad8\u4f30\u95ee\u9898","text":"<p> \u9ad8\u4f30\u7684\u6765\u6e90\u6709\u4e24\u4e2a\uff1a 1\u3001\u81ea\u4e3e\uff1a\u5373\u7528T+1\u65f6\u523b\u7684\u4f30\u8ba1\u53bb\u66f4\u65b0T\u65f6\u523b\u7684\u4f30\u8ba1\uff0c\u5982\u679c\u672c\u8eabQ\u7f51\u7edc\u5c31\u4f1a\u9ad8\u4f30\uff0c\u90a3\u4e48T+1\u65f6\u523b\u548cT\u65f6\u523b\u90fd\u4f1a\u9ad8\u4f30\uff0c\u5c31\u4f1a\u4e00\u76f4\u9ad8\u4f30\u4e0b\u53bb\uff0c\u4ece\u800c\u4f7fQ\u7684\u4f30\u8ba1\u503c\u59cb\u7ec8\u9ad8\u4e8e\u771f\u5b9e\u503c</p> <p>2\u3001\u9009\u53d6\u52a8\u4f5c\u65f6\u5b58\u5728\u566a\u58f0\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u4e0d\u4e00\u5b9aQ\u503c\u6700\u5927\u7684\u52a8\u4f5c\u5c31\u662f\u5956\u52b1\u6700\u5927\u7684\u52a8\u4f5c\uff0c\u56e0\u4e3aQ\u7684\u4f30\u8ba1\u5b58\u5728\u4e00\u5b9a\u7684\u566a\u58f0\uff0c\u53ef\u80fd\u4e24\u4e2a\u52a8\u4f5c\u7684Q\u771f\u503c\u90fd\u662f\u4e00\u6837\u5927\u7684\uff0c\u4f46\u662f\u5176\u4e2d\u4e00\u4e2a\u7684\u566a\u58f0\u4f7f\u5176Q\u7684\u4f30\u8ba1\u53d8\u5927\uff0c\u90a3\u4e48\u7531\u4e8e\u8d2a\u5fc3\u7b56\u7565\uff0c\u8fd9\u4e2aQ\u503c\u4e00\u5b9a\u4f1a\u88ab\u9009\u51fa\u6765\uff0c\u90a3\u4e48\u5c31\u4f1a\u9020\u6210\u9ad8\u4f30</p> <p>\u89e3\u51b3\u9ad8\u4f30\u7684\u65b9\u6cd5</p> <p>1\u3001target network \uff1a\u91c7\u7528\u53e6\u5916\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u4f30\u8ba1T+1\u65f6\u523b\u7684Q\uff0c\u8fd9\u6837\u5982\u679c\u81ea\u8eabQ\u7f51\u7edc\u9ad8\u4f30\u4e86\uff0c\u4f46\u662ftarget network\u4e0d\u4e00\u5b9a\u4f1a\u9ad8\u4f30\uff0c\u4e5f\u53ef\u80fd\u4f1a\u4f4e\u4f30\uff0c\u6240\u4ee5\u5f53target network\u4f4e\u4f30\u662f\uff0c\u53ef\u4ee5\u628a\u81ea\u8eabQ\u7f51\u7edc\u7684\u9ad8\u4f30\u7ed9\u62c9\u56de\u6765\u3002</p> <p>2\u3001double DQN\uff1a\u5728target network\u9009\u62e9Q\u503c\u65f6\uff0c\u4e0d\u7528target network\u7684\u6700\u5927\u503c\u6765\u9009\u62e9a\uff0c\u800c\u662f\u91c7\u7528\u81ea\u8eab\u7684Q\u7f51\u7edc\u7684\u6700\u5927\u503c\u6765\u9009\u62e9a\uff0c\u8fd9\u6837\u4e5f\u4f1a\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u9ad8\u4f30\u3002\u539f\u56e0\u5982\u4e0b\uff1a\u5047\u8bbetarget network\u5b58\u5728\u52a8\u4f5c\u566a\u58f0\uff0c\u4e24\u4e2a\u52a8\u4f5c\u7684Q\u771f\u503c\u90fd\u662f\u4e00\u6837\u5927\u7684\uff0c\u4f46\u662f\u5176\u4e2d\u4e00\u4e2a\u7684\u566a\u58f0\u4f7f\u5176Q\u7684\u4f30\u8ba1\u53d8\u5927\uff0c\u90a3\u4e48target network\u4e2d\u8fd9\u4e2a\u9ad8\u4f30\u7684Q\u4e00\u5b9a\u4f1a\u88ab\u9009\u51fa\u6765\uff08\u8d2a\u5fc3\u7b56\u7565\uff09\uff0c\u4f46\u662f\u5982\u679c\u7528\u81ea\u8eab\u7684Q\u7f51\u7edc\u6765\u9009\u62e9a\uff0c\u8fd9\u6837\u5c31\u53ef\u80fd\u4f1a\u9009\u5230\u53e6\u5916\u4e00\u4e2a\u566a\u58f0\u4f4e\u7684\u52a8\u4f5c\uff0c\u800c\u4e0d\u4f1a\u53ea\u9009\u62e9\u566a\u58f0\u9ad8\u7684\u52a8\u4f5c\uff0c\u8fd9\u6837\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u7f13\u89e3\u4e86\u9ad8\u4f30\u95ee\u9898</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%BB%8E%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%A7%92%E5%BA%A6%E7%9C%8B%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/","title":"\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u770b\u76d1\u7763\u5b66\u4e60\u7684\u5f3a\u5316\u5b66\u4e60","text":"<p>1\u3001\u76d1\u7763\u5b66\u4e60\u662f\u5b66\u4e60\u4e00\u4e2a\u5411\u91cf\uff08\u53ef\u4ee5\u4ee3\u8868\u72b6\u6001\u3001\u56fe\u50cf\u3001\u6587\u5b57\uff09s\u5230\u4e00\u4e2a\u5411\u91cfa\uff08\u53ef\u4ee5\u4ee3\u8868\u52a8\u4f5ca\uff0c\u7c7b\u522b\uff0c\u8bcd\u6027\uff09\u7684\u4e00\u4e2a\u6620\u5c04\uff0closs\u662f\u6839\u636e\u524d\u5411\u4f20\u64ad\u7ed3\u679c\u4e0e\u6807\u7b7e\u505a\u5e73\u65b9\u5dee\u5f97\u5230\u7684\uff0c\u76ee\u7684\u662f\u8ba9loss\u6700\u5c0f</p> <p>2\u3001\u5f3a\u5316\u5b66\u4e60\u662f\u5b66\u4e60\u4e00\u4e2a\u5411\u91cfs\u5230\u4e00\u4e2a\u5411\u91cfa\u7684\u6620\u5c04\uff08\u4e5f\u5c31\u662f\u7b56\u7565\uff09\uff0c\u76ee\u7684\u662f\u8ba9cost\u6700\u5927\uff08\u4e5f\u5c31\u662f\u4ef7\u503c\u51fd\u6570\uff09</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8F%8C%E9%87%8D%E6%9C%9F%E6%9C%9B%E5%80%BC%E5%AE%9A%E7%90%86/","title":"\u53cc\u91cd\u671f\u671b\u503c\u5b9a\u7406","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%AF%B9%E4%BA%8EQ%28s%EF%BC%8Ca%29%E5%92%8CV%EF%BC%88s%EF%BC%89%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3/","title":"\u5bf9\u4e8eQ(s\uff0ca)\u548cV\uff08s\uff09\u7684\u4e00\u4e9b\u4e2a\u4eba\u7406\u89e3","text":"<p>V\u662f\u72b6\u6001\u4ef7\u503c\u51fd\u6570\uff0cQ\u662f\u72b6\u6001\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff0cV\u7684\u8f93\u5165\u662f\u4e00\u4e2as\uff08\u6bd4\u5982vector\uff09\uff0c\u8f93\u51fa\u662f\u4e00\u4e2ascalar\uff0c\u6240\u4ee5V\u672c\u8eab\u662f\u6ca1\u6709\u529e\u6cd5\u505a\u51b3\u7b56\u7684\u3002Q\u7684\u8f93\u5165\u662fs\uff0c\u8f93\u51fa\u662f\u6bcf\u4e00\u4e2aa\u7684\u4ef7\u503c\uff08\u6216\u8005\u53e6\u4e00\u79cd\u5f62\u5f0f\uff0c\u8f93\u5165\u662fs\u548ca\uff0c\u8f93\u51fa\u662f\u4ef7\u503c\uff09\uff0c\u6240\u4ee5Q\u662f\u53ef\u4ee5\u505a\u51b3\u7b56\u7684\uff0c\u5982\u679c\u8bad\u7ec3\u597d\u4e86Q\u5c31\u53ef\u4ee5\u76f4\u63a5\u505a\u51b3\u7b56\uff08\u7ed9\u5b9as\uff0c\u51b3\u5b9a\u505a\u4ec0\u4e48a\uff09\uff0c\u800c\u4e0d\u9700\u8981policy gradient\u8bad\u7ec3\u4e00\u4e2api\u51fa\u6765</p> <p>pi\u7684\u8f93\u5165\u662f\u4e00\u4e2as\uff0c\u8f93\u51fa\u662f\u4e00\u4e2adistribution\uff0c\u505a\u51b3\u7b56\u662f\u5728\u8fd9\u4e2adistribution\u4e2d\u505asample\u3002\u672c\u8d28\u662f\u7ed9s\uff0c\u6765\u51b3\u5b9a\u8f93\u51fa\u4ec0\u4e48a</p> <p>\u6240\u4ee5DQN\u662f\u7528Q\u6765\u505a\u51b3\u7b56\u7684\u3002 \u800c\u5bf9\u4e8eV\u6765\u8bf4\u66f4\u50cf\u662f\u4e00\u4e2a\u8f85\u52a9\u5de5\u5177\uff0c\u6ca1\u6709\u529e\u6cd5\u505a\u51b3\u7b56\uff0c\u9700\u8981\u548c\u522b\u7684\u7f51\u7edc\u642d\u914d\u4f7f\u7528</p> <p>MC\u65b9\u6cd5\u548cTD\u65b9\u6cd5\uff08MC\u65b9\u6cd5\u65b9\u5dee\u5927\uff0c\u56e0\u4e3a\u662f\u57fa\u4e8e\u91c7\u6837\u7684\uff0cTD\u7684\u65b9\u6cd5\u662f\u53ef\u80fd\u4f30\u8ba1\u4e0d\u51c6\uff09 </p> <p></p> <p>DQN\u603b\u4f1a\u6709\u9ad8\u4f30\u7684\u95ee\u9898\uff0c\u539f\u56e0\u5982\u4e0b\uff08\u5982\u679c\u67d0\u4e00\u4e2aa\u88ab\u9ad8\u4f30\u4e86\uff0c\u90a3\u4e48\u88ab\u9ad8\u4f30\u7684a\u6709\u5f88\u5927\u53ef\u80fd\u4f1a\u88ab\u9009\u51fa\u6765\uff09 </p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1aD\uff08double\uff09DQN\uff0cDDNQ\u76f8\u5bf9\u4e8eDQN\u5176\u5b9e\u662f\u6ca1\u6709\u589e\u52a0\u7f51\u7edc\u7684\uff0c\u56e0\u4e3aDQN\u5b9e\u9645\u8bad\u7ec3\u7684\u65f6\u5019\u4f1a\u6709\u4e00\u4e2atarget network\uff08Q\u2018\uff09\uff0c\u6211\u4eec\u53ea\u8981\u7a0d\u5fae\u6539\u9020\u4e00\u4e0btarget network\uff0c\u4f7f\u5176\u5728\u9009\u62e9a\u7684\u65f6\u5019\u7528\u505a\u51b3\u7b56\u7684Q\u6765\u9009\uff0c\u800c\u4e0d\u662f\u7528\u81ea\u5df1\uff08Q\u2019\uff09\u6765\u9009\u5c31\u597d\u4e86\u3002\u4ee3\u7801\u53ef\u80fd\u53ea\u9700\u8981\u6539\u52a8\u4e00\u884c</p> <p>\u6709\u4e24\u4e2aQ\uff0c\u4e00\u4e2a\u7528\u6765\u4f30\u8ba1\uff0c\u4e00\u4e2a\u7528\u6765\u51b3\u7b56</p> <p></p> <p>dual DQN\uff08\u6539\u4e86network\u7684\u67b6\u6784\uff09</p> <p></p> <p>\u5176\u4ed6\u7684trainDQN\u7684tips 1\u3001\u4f18\u5148\u7ecf\u9a8c\u56de\u653e\uff08\u5982\u679cTD error\u6bd4\u8f83\u5927\uff0c\u90a3\u4e48\u5728buffer\u91cc\u4f1a\u88ab\u8f83\u5927\u6982\u7387sample\u5230\uff09  2\u3001muti-step  3.noisy net </p> <p>4\u3001Distributional Q-function\uff0c\u57fa\u672c\u601d\u60f3\u662f\u56e0\u4e3as\u662f\u968f\u673a\u7684\uff0c\u6240\u4ee5\u7ed9\u5b9a\u5f53\u524d\u7684\u4e00\u7ec4s\uff0ca\uff0c\u73a9\u5b8c\u4e00\u7ec4\u6e38\u620f\u53ef\u80fd\u5f97\u5230\u7684\u7d2f\u8ba1\u5956\u52b1\u4e0d\u4e00\u6837\uff0c\u53ef\u4ee5\u505a\u4e00\u4e0b\u7edf\u8ba1\uff08\u6bd4\u5982\u56fa\u5b9a\u5f53\u524d\u7684s\uff0ca\uff0c\u73a9\u591a\u5c40\u6e38\u620f\uff0c\u7edf\u8ba1\u6700\u540e\u7d2f\u8ba1\u5956\u52b1\u7684\u5206\u5e03\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u628a\u6700\u540e\u7684\u7d2f\u8ba1\u5956\u52b1\u770b\u6210\u662f\u4e00\u4e2a\u5206\u5e03\uff0c\u6211\u4eec\u7528Q-function\u6765\u4f30\u8ba1\u8fd9\u4e2adistribution\uff0c\u6bcf\u4e00\u4e2a\u52a8\u4f5c\u5bf9\u5e94\u4e00\u4e2adistribution\uff0c\u6700\u540e\u5bf9\u6bcf\u4e00\u4e2adistribution\u6c42\u5e73\u5747\uff0c\u53d6\u6700\u5927\u7684\u52a8\u4f5c\u6765\u505a\u51b3\u7b56\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u60f3\u6cd5\uff08\u4f46\u662f\u4e0d\u597d\u8bad\u7ec3\u8d77\u6765\uff09</p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%B0%8F%E8%AE%B0/","title":"\u5c0f\u8bb0","text":"<p>\u7b56\u7565pi\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u6982\u7387\u5206\u5e03 </p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E8%AE%AD%E7%BB%83%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0/","title":"\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u6162\u7684\u539f\u56e0","text":"<p>\u5bf9\u4e8e\u4e00\u822c\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u53ea\u6536\u96c6\u4e00\u6b21\u8d44\u6599\uff0c\u5c31\u53ef\u4e0d\u65ad\u7684train \u4f46\u662f\uff0c\u5bf9\u4e8eRL\u6765\u8bf4\uff0c\u6ca1\u4e00\u4e2afor\u5faa\u73af\uff08\u68af\u5ea6\u66f4\u65b0\uff09\u90fd\u8981\u91cd\u65b0\u6536\u96c6\u4e00\u6b21\u8d44\u6599\uff0c\u6bd4\u5982\uff08s1\uff0ca1\uff09\u3001\uff08s2\uff0ca2\uff09\u3001\uff08s3\uff0ca3\uff09\uff0c\u6240\u4ee5\u8bad\u7ec3\u5f88\u6162\uff0c\u8fd9\u4e5f\u53eb\u91c7\u6837\u7387\u592a\u6162\u3002\u6bd4\u5982</p> <p>on-policy\uff1a\u5f53\u524dagent\u7f51\u7edc\u7684\u53c2\u6570\u4e3a\u03b8_i-1\uff0c\u91c7\u6837\u7b49\u5230\u4e00\u7ec4\u8d44\u6599\uff08s1\uff0ca1\uff09\u3001\uff08s2\uff0ca2\uff09\u3001\uff08s3\uff0ca3\uff09\uff0c\u6839\u636er\u7b97loss\uff0c\u66f4\u65b0\u03b8_i-1\uff0c\u53d8\u4e3a\u03b8_i\uff0c\u6b64\u65f6\u03b8_i\u6bd4\u03b8_i-1\u66f4\u597d\uff0c\u76f8\u5f53\u4e8eagent\u66f4\u806a\u660e\u4e86\uff0c\u6240\u4ee5\u8981\u7528\u8fd9\u4e2a\u66f4\u806a\u660e\u7684agent\u53bb\u6536\u96c6\u65b0\u7684\u8d44\u6599\uff08s1\u2019\uff0ca1\u2018\uff09\u3001\uff08s2\u2019\uff0ca2\u2018\uff09\u3001\uff08s3\u2019\uff0ca3\u2018\uff09\uff0c\u518d\u6839\u636e\u65b0\u7684r\u6765\u7b97loss\uff0c\u518d\u53bb\u66f4\u65b0\u03b8_i\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \uff08\u603b\u4e4b\u603b\u7ed3\u4e00\u4e0b\u5c31\u662f\uff0c\u03b8_i-1\u6536\u96c6\u7684\u8d44\u6599\u53ea\u80fd\u8bad\u7ec3\u03b8_i-1\uff0c\u5373\u4e0e\u73af\u5883\u4e92\u52a8\u7684agent\u4e0e\u88ab\u8bad\u7ec3\u7684agent\u662f\u540c\u4e00\u4e2a\uff09\uff0c\u6bcf\u6b21\u66f4\u65b0\u03b8\u5c31\u76f8\u5f53\u4e8e\u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684agent</p> <p>off-policy\uff1a\u53ef\u4ee5\u60f3\u529e\u6cd5\u7528\u03b8_i-1\u6536\u96c6\u7684\u8d44\u6599\u8bad\u7ec3\u03b8_i\uff0c\u5373\u6536\u96c6\u4e00\u6b21\u8d44\u6599\u53ef\u4ee5\u66f4\u65b0\u5f88\u591a\u6b21\u53c2\u6570\uff0c\u63d0\u9ad8\u91c7\u6837\u7387\uff0c\u7ecf\u5178\u7684\u65b9\u6cd5\u6709PPO\uff0coff-policy\u7684\u91cd\u70b9\u5c31\u662f\u5f53\u524d\u9700\u8981\u8bad\u7ec3\u7684agent\u5e94\u8be5\u77e5\u9053\u5b83\u4e0e\u6536\u96c6\u8d44\u6599\u7684agent\u7684\u5dee\u522b</p> <p>\u6211\u4eec\u5e0c\u671b\u5728\u6536\u96c6\u8d44\u6599\u65f6agent\u7684\u968f\u673a\u6027\u80fd\u591f\u5927\u4e00\u4e9b\uff0c\u6bd4\u5982\u5728agent\u7684\u8f93\u51fa\u7684\u5206\u5e03\u4e0a\u52a0\u566a\u58f0\u6216\u8005\u52a0\u5927\u4ea4\u53c9\u71b5\uff0c\u4f7f\u5176\u80fd\u591fsample\u5230\u4e00\u4e9b\u6982\u7387\u8f83\u4f4e\u7684action\u3002\uff08exploration\u6280\u5de7\uff09</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA/","title":"\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6570\u636e\u589e\u5f3a","text":"<p>\u6570\u636e\u589e\u5f3a\u5c31\u662f\u901a\u8fc7pytorch\u7684transform\u63a5\u53e3\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u53d8\u6362 \u9700\u8981\u6ce8\u610f\u7684\u662f\u5e76\u4e0d\u4f1a\u589e\u52a0\u6570\u636e\u96c6\u7684\u6570\u91cf\uff0c\u800c\u662f\u6bcf\u6b21epoch\u65f6\u8bfb\u8fdb\u7684\u53bb\u6570\u636e\u90fd\u662f\u4e0d\u4e00\u6837\u7684</p> <p></p> <p></p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%81%E8%A7%A3/","title":"\u6df1\u5ea6\u5b66\u4e60\u7684\u4e00\u4e9b\u89c1\u89e3","text":"<p>\u5982\u4eca\u6240\u6709\u7684\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u627e\u5230\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u548c\u5168\u5c40\u6700\u4f18\u89e3\u7684loss\u90fd\u5dee\u8ddd\u4e0d\u5927\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\u7684\u95ee\u9898\u3002\u6211\u4eec\u5728\u8bad\u7ec3\u65f6\uff0c\u56e0\u4e3a\u53c2\u6570\u91cf\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u51e0\u4e4e\u4e0d\u53ef\u80fd \u9677\u5165\u5c40\u90e8\u6700\u4f18\uff0c\u4f46\u662f\u5f88\u5927\u53ef\u80fd\u4f1a\u9047\u5230saddle point</p> <p>\u8fd8\u6709\u4e00\u4e9b\u5047\u8bf4\uff1a\u6bd4\u5982\u53ea\u8981\u4f60\u7684network\u8db3\u591f\u5927\uff0c\u6211\u4eec\u603b\u53ef\u4ee5\u901a\u8fc7gradient descent\u627e\u5230 global optimal\uff0c\u800c\u65e0\u89c6initial weight</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%BB%91%E5%8A%A8%E5%B9%B3%E5%9D%87%EF%BC%88moving%20average%EF%BC%89/","title":"\u6ed1\u52a8\u5e73\u5747\uff08moving average\uff09","text":"<p>windows_size\u5e94\u8be5\u4e3a\u5947\u6570 </p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E4%B8%AD%E5%90%84%E9%A1%B9%E6%8C%87%E6%A0%87%E7%9A%84%E5%90%AB%E4%B9%89/","title":"\u76ee\u6807\u68c0\u6d4b\u4e2d\u5404\u9879\u6307\u6807\u7684\u542b\u4e49","text":"<p>TP\u3001TN \u3001FP \u3001FN\uff1a T \u2014\u2014true \u8868\u793a\u6b63\u786e F\u2014\u2014false \u8868\u793a\u9519\u8bef P\u2014\u2014 positive \u8868\u793a\u79ef\u6781\u7684\uff0c\u770b\u6210\u6b63\u4f8b N\u2014\u2014negative \u8868\u793a\u6d88\u6781\u7684\uff0c\u770b\u6210\u8d1f\u4f8b</p> <p></p> <p></p> <p></p> <p> \u8be5\u56fe\u4e2d TP = 6 FN = 3 FP = 1 FN = 0</p> <p>\u53ec\u56de\u7387Recall = 6/9 \u7cbe\u786e\u7387Precision = 6/7</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/","title":"\u77e5\u540d\u9ad8\u6821\u548c\u8bfe\u9898\u7ec4","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#_1","title":"\u56fd\u5185\u5916\u505a\u5f3a\u5316\u5b66\u4e60\u7684\u8001\u5e08\uff0c\u9ad8\u6821\u4ee5\u53ca\u516c\u53f8\u603b\u7ed3","text":"<p>\u672c\u6587\u603b\u7ed3\u4e86\u4e00\u4e9b\u56fd\u5185\u5916\u505a\u5f3a\u5316\u5b66\u4e60\u7684\u9ad8\u6821\u3001\u516c\u53f8\u4ee5\u53ca\u8001\u5e08\u7b49\uff0c\u6b22\u8fce\u5927\u5bb6\u4e00\u8d77\u8865\u5145\u5b8c\u5584\u3002</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#_2","title":"\u4e00\u3001\u5b66\u672f\u754c","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#11","title":"1.1 \u56fd\u5916","text":"<ul> <li> <p>\u4f2f\u514b\u5229\uff1a Sergey Levine(\u8bba\u6587\u9ad8\u4ea7\u4f5c\u8005)\u3001Pieter Abbel\uff08\u548cLevine\u5e76\u5217\uff09</p> </li> <li> <p>UCL\uff1a David Sliver(\u76ee\u524d\u597d\u50cf\u4e0d\u6307\u5bfc\u5b66\u751f\u4e86)\u3001\u6c6a\u519b\u8001\u5e08\u7b49</p> </li> <li> <p>Alberta\uff1aRichard Sutton\u8001\u7237\u5b50\u3001\u597d\u51e0\u4e2a\u7406\u8bba\u7684@\u84dd\u9752\u5cf0\u5927\u4f6c</p> </li> <li> <p>Stanford\uff1aBenjamin Van Roy</p> </li> <li> <p>\u83ab\u65af\u79d1\u56fd\u7acb\u5927\u5b66\uff1aNIPS\u6bd4\u8d5b\u5f88\u5f3a</p> </li> <li> <p>\u5df4\u9eceFlowers Team\uff1aIntrinsic motivation\u65b9\u5411</p> </li> <li> <p>\u65b0\u52a0\u5761\u5357\u6d0b\u7406\u5de5\u5927\u5b66\uff1a&gt; &gt; \u5b89\u6ce2\u8001\u5e08</p> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#12","title":"1.2 \u9999\u6e2f","text":"<ul> <li> <p>\u9999\u6e2f\u4e2d\u6587\u5927\u5b66\uff1a\u5468\u535a\u78ca\u8001\u5e08</p> </li> <li> <p>\u9999\u6e2f\u4e2d\u6587\u5927\u5b66\uff08\u6df1\u5733\uff09\uff1a&gt; &gt; Jim Dai&gt; \u3001&gt; &gt; Hongyuan Zha&gt; \u3001&gt; &gt; Baoxiang Wang</p> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#13","title":"1.3 \u56fd\u5185","text":"<ul> <li> <p>\u6e05\u534e\u5927\u5b66\uff1a\u5f20\u5d07\u6d01\u8001\u5e08\u3001\u674e\u5347\u6ce2\u8001\u5e08\u7b49</p> </li> <li> <p>\u5317\u4eac\u5927\u5b66\uff1a\u5362\u5b97\u9752\u8001\u5e08\u7b49</p> </li> <li> <p>\u5357\u4eac\u5927\u5b66\uff1a \u4fde\u626c\u8001\u5e08\u3001\u9ad8\u9633\u8001\u5e08\u7b49</p> </li> <li> <p>\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\uff1a \u5f20\u4f1f\u6960\u8001\u5e08\u3001\u4fde\u51ef\u8001\u5e08\uff08Reinforcement Learning: An Introduction\u4e66\u7ffb\u8bd1\u4f5c\u8005\uff09\u7b49</p> </li> <li> <p>\u4e2d\u56fd\u79d1\u5b66\u9662\uff1a \u8d75\u51ac\u658c\u8001\u5e08\u3001\u5f20\u6d77\u5cf0\u8001\u5e08\u7b49</p> </li> <li> <p>\u5929\u6d25\u5927\u5b66\uff1a\u90dd\u5efa\u4e1a\u8001\u5e08\u7b49</p> </li> <li> <p>\u4e2d\u79d1\u5927\uff1a \u674e\u539a\u5f3a\u8001\u5e08\u3001\u5468\u6587\u7f61\u8001\u5e08\u3001\u738b\u6770\u8001\u5e08\u3001\u5e84\u8fde\u751f\u8001\u5e08\u7b49</p> </li> <li> <p>\u56fd\u9632\u79d1\u6280\u5927\u5b66\uff1a \u5f90\u6615\u8001\u5e08</p> </li> <li> <p>\u4e2d\u79d1\u9662\u6df1\u5733\u5148\u8fdb\u6280\u672f\u7814\u7a76\u9662: \u5d14\u5141\u7aef\u8001\u5e08(\u5f3a\u5316\u5b66\u4e60\u5728\u81ea\u52a8\u9a7e\u9a76\u3001\u673a\u5668\u63a7\u5236\u4e0a\u7684\u5e94\u7528)</p> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#_3","title":"\u4e8c\u3001\u5de5\u4e1a\u754c","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#21","title":"2.1 \u56fd\u5916","text":"<ul> <li> <p>DeepMind(David Sliver, Marc G. Bellemare)</p> </li> <li> <p>OpenAI(John Schulman)</p> </li> <li> <p>FAIR\uff08\u5168\u65b9\u5411\uff09\uff1a\u77e5\u540d\u7684\u6709\u7530\u6e0a\u680b\u548cNoam Brown\u7b49\uff0c\u5927\u4f6c\u5de8\u591a</p> </li> <li> <p>Google Brain\uff08\u5168\u65b9\u5411\uff09\uff1a\u5927\u4f6c\u5de8\u591a</p> </li> <li> <p>Salesforce Research</p> </li> </ul>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%9F%A5%E5%90%8D%E9%AB%98%E6%A0%A1%E5%92%8C%E8%AF%BE%E9%A2%98%E7%BB%84/#22","title":"2.2 \u56fd\u5185","text":"<ul> <li> <p>\u817e\u8bafAI Lab\uff1a\u6e38\u620f\u7b49\uff1b</p> </li> <li> <p>\u767e\u5ea6PARL\u56e2\u961f\uff1a\u81ea\u7814\u6846\u67b6+RL\u6bd4\u8d5b</p> </li> <li> <p>\u7f51\u6613\u4f0f\u7fb2\u5b9e\u9a8c\u5ba4\uff1a\u6e38\u620f\uff1b</p> </li> <li> <p>\u5b57\u8282\u8df3\u52a8AI Lab\uff1a\u6e38\u620f\u3001\u63a8\u8350\uff1b</p> </li> <li> <p>\u5730\u5e73\u7ebfAI\uff1aRL+\u673a\u5668\u4eba\u3001\u81ea\u52a8\u9a7e\u9a76</p> </li> <li> <p>\u6ef4\u6ef4\uff1a\u8fd0\u7b79\u4f18\u5316\uff1b</p> </li> <li> <p>\u963f\u91cc\uff1a\u63a8\u8350\u3001\u8fd0\u7b79\u4f18\u5316\uff1b</p> </li> <li> <p>\u5fae\u8f6f\u4e9a\u7814\u9662\uff1aResearch\uff0c\u4fe1\u606f\u68c0\u7d22\u548c\u641c\u7d22\u5f15\u64ce\uff1b</p> </li> <li> <p>\u534e\u4e3a\u8bfa\u4e9a\u65b9\u821f\u5b9e\u9a8c\u5ba4\uff1aResearch\uff1b</p> </li> <li> <p>\u534e\u4e3a\u6d88\u8d39\u8005BG\u81ea\u52a8\u9a7e\u9a76\u89e3\u51b3\u65b9\u6848BU\uff1aRL+\u81ea\u52a8\u9a7e\u9a76</p> </li> <li> <p>\u5e73\u5b89\u4fdd\u9669\uff1a\u5f3a\u5316\u5b66\u4e60+NLP\uff1b</p> </li> <li> <p>\u5feb\u624bAI Lab\uff1a\u6e38\u620f\u3001\u68c0\u7d22\uff1b</p> </li> <li> <p>Momenta\uff1aRL+\u81ea\u52a8\u9a7e\u9a76</p> </li> <li> <p>\u8d85\u53c2\u6570\u79d1\u6280\uff1a\u6e38\u620f\uff1b</p> </li> <li> <p>\u542f\u5143\u4e16\u754c</p> </li> <li> <p>\u5357\u6816\u4ed9\u7b56</p> </li> </ul> <p>-</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A5%E6%A2%AF%E5%BA%A6%E7%9A%84%E7%BB%9D%E5%A6%99%E8%AF%81%E6%98%8E/","title":"\u7b56\u7565\u68af\u5ea6\u7684\u7edd\u5999\u8bc1\u660e","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/","title":"\u81ea\u52a8\u5fae\u5206","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_1","title":"\u524d\u5411\u8ba1\u7b97","text":"<p>\u81ea\u52a8\u5fae\u5206\u662f AI \u6846\u67b6\u7684\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u5728\u8fdb\u5165 AI \u6846\u67b6\u5982\u4f55\u5b9e\u73b0\u81ea\u52a8\u5fae\u5206\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u7406\u89e3\u81ea\u52a8\u5fae\u5206\u7684\u57fa\u672c\u539f\u7406\u3002 \u5047\u8bbe\u4e00\u4e2a\u7b80\u5355\u7684\u590d\u5408\u51fd\u6570\u4e3a\u4f8b\u5b50\uff1a  :eqlabel:autodiff_03_eq2</p> <p>\u4e0b\u56fe\u662f\u51fd\u6570\u5bf9\u5e94\u7684\u8ba1\u7b97\u56fe\uff1a </p> <p>\u5047\u8bbe\u7ed9\u5b9a\u590d\u5408\u51fd\u6570 \\(f(x1,x2)\\) \u4e2d\uff0c\\(x1\\) \u548c \\(x2\\) \u5747\u4e3a\u8f93\u5165\u53d8\u91cf\u3002\u4e3a\u4e86\u5bf9 \\(f(x1,x2)\\) \u6c42\u503c\uff0c\u4f9d\u7167\u8868\u8fbe\u5f0f\u5bf9\u5e94\u7684\u8ba1\u7b97\u56fe\u5b9a\u4e49\u7684\u8ba1\u7b97\u987a\u5e8f\uff0c\u590d\u5408\u51fd\u6570 \\(f(x1,x2)\\) \u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u4e00\u4e2a\u6c42\u503c\u5e8f\u5217\uff0c\u628a\u4e00\u4e2a\u7ed9\u5b9a\u8f93\u5165\u9010\u6b65\u8ba1\u7b97\u8f93\u51fa\u7684\u6c42\u503c\u5e8f\u5217\u79f0\u4e4b\u4e3a\u524d\u5411\u8ba1\u7b97\u8fc7\u7a0b\uff1a </p> <p>\u901a\u8fc7\u4e0a\u56fe\u53ef\u5f97\u77e5\uff0c\u524d\u5411\u8ba1\u7b97\u8fc7\u7a0b\u662f\u5f15\u5165\u4e00\u7cfb\u5217\u7684\u4e2d\u95f4\u53d8\u91cf\uff0c\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u51fd\u6570\uff0c\u5206\u89e3\u6210\u4e00\u7cfb\u5217\u57fa\u672c\u51fd\u6570\u6216\u8005\u53eb\u505a\u57fa\u672c\u7684\u8ba1\u7b97\u64cd\u4f5c\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u57fa\u672c\u51fd\u6570\u6784\u6210\u4e00\u4e2a\u524d\u5411\u7684\u8ba1\u7b97\u56fe\u3002</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_2","title":"\u53cd\u5411\u8ba1\u7b97","text":"<p>\u94fe\u5f0f\u6c42\u5bfc\u6cd5\u5219\u662f\u5bf9\u79f0\u7684\uff0c\u5728\u8ba1\u7b97\u5bfc\u6570  \u65f6\uff0c\u94fe\u5f0f\u6c42\u5bfc\u6cd5\u5219\u5e76\u4e0d\u5173\u5fc3\u54ea\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u5206\u6bcd\uff0c\u54ea\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u5206\u5b50\u3002</p> <p>\u4e8e\u662f\uff0c\u53cd\u5411\u6a21\u5f0f\u6839\u636e\u4ece\u540e\u5411\u524d\u8ba1\u7b97\uff0c\u4f9d\u6b21\u5f97\u5230\u5bf9\u6bcf\u4e2a\u4e2d\u95f4\u53d8\u91cf\u8282\u70b9\u7684\u504f\u5bfc\u6570\uff0c\u76f4\u5230\u5230\u8fbe\u81ea\u53d8\u91cf\u8282\u70b9\u5904\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u8f93\u5165\u7684\u504f\u5bfc\u6570\u3002\u5728\u6bcf\u4e2a\u8282\u70b9\u5904\uff0c\u6839\u636e\u8be5\u8282\u70b9\u7684\u540e\u7eed\u8282\u70b9\uff08\u524d\u5411\u4f20\u64ad\u4e2d\u7684\u540e\u7eed\u8282\u70b9\uff09\u8ba1\u7b97\u5176\u5bfc\u6570\u503c\u3002\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u5fae\u5206\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u4e0a\u9762\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u53cd\u5411\u5fae\u5206\u3002\u5728\u53cd\u5411\u5fae\u5206\u4e2d\uff0c\u53d8\u91cf\u5bfc\u6570\u7684\u8ba1\u7b97\u987a\u5e8f\u4e0e\u53d8\u91cf\u7684\u524d\u5411\u8ba1\u7b97\u987a\u5e8f\u6b63\u597d\u76f8\u53cd\uff1b\u8fd0\u884c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(m)\\)\uff0c\\(m\\) \u662f\u8f93\u51fa\u53d8\u91cf\u7684\u4e2a\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u6784\u5efa\u76f8\u5bf9\u5e94\u7684\u53cd\u5411\u8ba1\u7b97\u56fe\uff1a</p> <p></p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%B4%9D%E5%B0%94%E6%9B%BC%E6%96%B9%E7%A8%8B%E6%8E%A8%E5%AF%BC/","title":"\u8d1d\u5c14\u66fc\u65b9\u7a0b\u63a8\u5bfc","text":""},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%BF%9E%E7%BB%AD%E5%8A%A8%E4%BD%9C%E7%9A%84DQN/","title":"\u8fde\u7eed\u52a8\u4f5c\u7684DQN","text":"<p>\u7b2c\u4e00\u79cd\u65b9\u6cd5\u8bef\u5dee\u6bd4\u8f83\u5927\uff0c\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u8fd0\u7b97\u91cf\u6bd4\u8f83\u5927\uff0c\u56e0\u4e3a\u6bcf\u6b21\u63a8\u65ad\u90fd\u76f8\u5f53\u4e8e\u8981\u91cd\u65b0\u89e3\u65b9\u7a0b\uff0c\u7b2c\u4e09\u79cd\u65b9\u6cd5\u662f\u6bd4\u8f83\u597d\u7684</p>"},{"location":"%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E3%80%81%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/","title":"\u9a6c\u5c14\u53ef\u592b\u8499\u7279\u5361\u6d1b\u91c7\u6837","text":""},{"location":"%E6%95%B0%E5%AD%A6/Lipschitz%E8%BF%9E%E7%BB%AD/","title":"Lipschitz\u8fde\u7eed","text":""},{"location":"%E6%95%B0%E5%AD%A6/Lipschitz%E8%BF%9E%E7%BB%AD/#_1","title":"\u5b9a\u4e49(\u4e00\u9636\u5bfc\u6570\u6709\u754c)","text":"<p>\u4efb\u53d6\\(x_1\\)\u548c\\(x_2\\) \uff0c\u5b58\u5728\u5e38\u6570L\uff1a $$ ||  f(x_1) -  f(x_2) || \\le L||x_1 - x_2||$$</p>"},{"location":"%E6%95%B0%E5%AD%A6/Lipschitz%E8%BF%9E%E7%BB%AD/#lipschitz","title":"\u5bfc\u6570\u8fde\u7eed\uff08\u5149\u6ed1\uff09\u3001Lipschitz\u8fde\u7eed\uff08\u5bfc\u6570\u6709\u754c\uff09\u3001\u4e00\u81f4\u8fde\u7eed\u3001\u8fde\u7eed\u7684\u5173\u7cfb","text":"<p>\u603b\u4f53\u6765\u8bf4\uff1a\u5bfc\u6570\u8fde\u7eed\uff08\u5149\u6ed1\uff09 &gt; Lipschitz\u8fde\u7eed\uff08\u5bfc\u6570\u6709\u754c\uff09&gt;\u4e00\u81f4\u8fde\u7eed \u300b \u8fde\u7eed</p>"},{"location":"%E6%95%B0%E5%AD%A6/Lipschitz%E8%BF%9E%E7%BB%AD/#_2","title":"\u4e3e\u4f8b","text":"<ul> <li>\u5bfc\u6570\u8fde\u7eed\uff08\u5149\u6ed1\uff09\uff1a\\(y=x^2\\)</li> <li>Lipschitz\u8fde\u7eed\uff08\u5bfc\u6570\u6709\u754c\uff09:\\(y = |x|\\)\uff0c\u4f46\u662f\\(y=x^2\\)\u672c\u8eab\u4e0d\u662fLipschitz\u8fde\u7eed\uff0c\u53ea\u6709\u5bf9\u5b9a\u4e49\u57df\u6709\u89c4\u5b9a\u624d\u662fLipschitz\u8fde\u7eed</li> <li>\u4e00\u81f4\u8fde\u7eed\uff1ahttps://www.zhihu.com/question/32201415</li> <li>\u8fde\u7eed\uff1a\u53ea\u8981\u6bcf\u4e00\u4e2a\u70b9\u7684\u6781\u9650\u90fd\u662f\u8be5\u70b9\uff0c\u90a3\u4e48\u51fd\u6570\u5c31\u662f\u8fde\u7eed\u7684</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Lipschitz%E8%BF%9E%E7%BB%AD/#_3","title":"\u6027\u8d28","text":"<ul> <li>\u95ed\u533a\u95f4\u4e0a\u7684\u8fde\u7eed\u51fd\u6570\uff0c\u6b64\u65f6\u8fde\u7eed\u6027\u548c\u4e00\u81f4\u8fde\u7eed\u6027\u662f\u7b49\u4ef7\u7684\uff1b</li> <li>Lipschitz\u8fde\u7eed\u5219\u4e00\u5b9a \u4e00\u81f4\u8fde\u7eed\uff08\u6839\u636e\u4e2d\u503c\u5b9a\u7406\u53ef\u4ee5\u8bc1\u660e\uff09</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/latex/","title":"Latex Equations Cheatsheet","text":""},{"location":"%E6%95%B0%E5%AD%A6/latex/#functions-symbols-and-characters","title":"Functions, Symbols, and Characters","text":""},{"location":"%E6%95%B0%E5%AD%A6/latex/#accents-and-diacritics","title":"Accents and Diacritics","text":"Source Rendering <code>\\dot{a}, \\ddot{a}, \\acute{a}, \\grave{a}</code> \\(\\dot{a}, \\ddot{a}, \\acute{a}, \\grave{a}\\) <code>\\check{a}, \\breve{a}, \\tilde{a}, \\bar{a}</code> \\(\\check{a}, \\breve{a}, \\tilde{a}, \\bar{a}\\) <code>\\hat{a}, \\widehat{a}, \\vec{a}</code> \\(\\hat{a}, \\widehat{a}, \\vec{a}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#standard-numerical-functions","title":"Standard Numerical Functions","text":"Source Rendering <code>\\exp_a b = a^b, \\exp b = e^b, 10^m</code> \\(\\exp_a b = a^b, \\exp b = e^b, 10^m\\) <code>\\ln c, \\lg d = \\log e, \\log_{10} f</code> \\(\\ln c, \\lg d = \\log e, \\log_{10} f\\) <code>\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f</code> \\(\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f\\) <code>\\arcsin h, \\arccos i, \\arctan j</code> \\(\\arcsin h, \\arccos i, \\arctan j\\) <code>\\sinh k, \\cosh l, \\tanh m, \\coth n</code> \\(\\sinh k, \\cosh l, \\tanh m, \\coth n\\) <code>\\operatorname{sh}k, \\operatorname{ch}l, \\operatorname{th}m, \\operatorname{coth}n</code> \\(\\operatorname{sh}k, \\operatorname{ch}l, \\operatorname{th}m, \\operatorname{coth}n\\) <code>\\operatorname{argsh}o, \\operatorname{argch}p, \\operatorname{argth}q</code> \\(\\operatorname{argsh}o, \\operatorname{argch}p, \\operatorname{argth}q\\) <code>\\sgn r, \\left\\vert s \\right\\vert</code> \\(sgn r, \\left\\vert s \\right\\vert\\) <code>\\min(x,y), \\max(x,y)</code> \\(\\min(x,y), \\max(x,y)\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#bounds","title":"Bounds","text":"Source Rendering <code>\\min x, \\max y, \\inf s, \\sup t</code> \\(\\min x, \\max y, \\inf s, \\sup t\\) <code>\\lim u, \\liminf v, \\limsup w</code> \\(\\lim u, \\liminf v, \\limsup w\\) <code>\\dim p, \\deg q, \\det m, \\ker\\phi</code> \\(\\dim p, \\deg q, \\det m, \\ker\\phi\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#projections","title":"Projections","text":"Source Rendering <code>\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z</code> \\(\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#differentials-and-derivatives","title":"Differentials and Derivatives","text":"Source Rendering <code>dt, \\mathrm{d}t, \\partial t, \\nabla\\psi</code> \\(dt, \\mathrm{d}t, \\partial t, \\nabla\\psi\\) <code>dy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}y</code> \\(dy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}y\\) <code>\\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y</code> \\(\\prime, \\backprime, f^\\prime, f', f'', f^{(3)} \\!, \\dot y, \\ddot y\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#letter-like-symbols-or-constants","title":"Letter-like Symbols or Constants","text":"Source Rendering <code>\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar</code> \\(\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar\\) <code>\\Im, \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS, \\S, \\P, \\AA</code> \\(\\Im, \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS, \\S, \\P, \\AA\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#modular-arithmetic","title":"Modular Arithmetic","text":"Source Rendering <code>s_k \\equiv 0 \\pmod{m}</code> \\(s_k \\equiv 0 \\pmod{m}\\) <code>a \\bmod b</code> \\(a \\bmod b\\) <code>\\gcd(m, n), \\operatorname{lcm}(m, n)</code> \\(\\gcd(m, n), \\operatorname{lcm}(m, n)\\) <code>\\mid, \\nmid, \\shortmid, \\nshortmid</code> \\(\\mid, \\nmid, \\shortmid, \\nshortmid\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#radicals","title":"Radicals","text":"Source Rendering <code>\\surd, \\sqrt{2}, \\sqrt[n]{2}, \\sqrt[3]{\\frac{x^3+y^3}{2}}</code> \\(\\surd, \\sqrt{2}, \\sqrt[n]{2}, \\sqrt[3]{\\frac{x^3+y^3}{2}}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#operators","title":"Operators","text":"Source Rendering <code>+, -, \\pm, \\mp, \\dotplus</code> \\(+, -, \\pm, \\mp, \\dotplus\\) <code>\\times, \\div, \\divideontimes, /, \\backslash</code> \\(\\times, \\div, \\divideontimes, /, \\backslash\\) <code>\\cdot, * \\ast, \\star, \\circ, \\bullet</code> \\(\\cdot, * \\ast, \\star, \\circ, \\bullet\\) <code>\\boxplus, \\boxminus, \\boxtimes, \\boxdot</code> \\(\\boxplus, \\boxminus, \\boxtimes, \\boxdot\\) <code>\\oplus, \\ominus, \\otimes, \\oslash, \\odot</code> \\(\\oplus, \\ominus, \\otimes, \\oslash, \\odot\\) <code>\\circleddash, \\circledcirc, \\circledast</code> \\(\\circleddash, \\circledcirc, \\circledast\\) <code>\\bigoplus, \\bigotimes, \\bigodot</code> \\(\\bigoplus, \\bigotimes, \\bigodot\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#sets","title":"Sets","text":"Source Rendering <code>\\{ \\}, \\O \\empty \\emptyset, \\varnothing</code> \\(\\{ \\}, \\O \\empty \\emptyset, \\varnothing\\) <code>\\in, \\notin \\not\\in, \\ni, \\not\\ni</code> \\(\\in, \\notin \\not\\in, \\ni, \\not\\ni\\) <code>\\cap, \\Cap, \\sqcap, \\bigcap</code> \\(\\cap, \\Cap, \\sqcap, \\bigcap\\) <code>\\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus</code> \\(\\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus\\) <code>\\setminus, \\smallsetminus, \\times</code> \\(\\setminus, \\smallsetminus, \\times\\) <code>\\subset, \\Subset, \\sqsubset</code> \\(\\subset, \\Subset, \\sqsubset\\) <code>\\supset, \\Supset, \\sqsupset</code> \\(\\supset, \\Supset, \\sqsupset\\) <code>\\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq</code> \\(\\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq\\) <code>\\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq</code> \\(\\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq\\) <code>\\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq</code> \\(\\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq\\) <code>\\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq</code> \\(\\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#relations","title":"Relations","text":"Source Rendering <code>=, \\ne, \\neq, \\equiv, \\not\\equiv</code> \\(=, \\ne, \\neq, \\equiv, \\not\\equiv\\) <code>\\doteq, \\doteqdot,</code> <code>\\overset{\\underset{\\mathrm{def}}{}}{=},</code> <code>:=</code> \\(\\doteq, \\doteqdot, \\overset{\\underset{\\mathrm{def}}{}}{=}, :=\\) <code>\\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong</code> \\(\\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong\\) <code>\\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto</code> \\(\\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto\\) <code>&lt;, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot</code> \\(&lt;, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot\\) <code>&gt;, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot</code> \\(&gt;, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot\\) <code>\\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq</code> \\(\\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq\\) <code>\\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq</code> \\(\\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq\\) <code>\\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless</code> \\(\\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless\\) <code>\\leqslant, \\nleqslant, \\eqslantless</code> \\(\\leqslant, \\nleqslant, \\eqslantless\\) <code>\\geqslant, \\ngeqslant, \\eqslantgtr</code> \\(\\geqslant, \\ngeqslant, \\eqslantgtr\\) <code>\\lesssim, \\lnsim, \\lessapprox, \\lnapprox</code> \\(\\lesssim, \\lnsim, \\lessapprox, \\lnapprox\\) <code>\\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox</code> \\(\\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox\\) <code>\\prec, \\nprec, \\preceq, \\npreceq, \\precneqq</code> \\(\\prec, \\nprec, \\preceq, \\npreceq, \\precneqq\\) <code>\\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq</code> \\(\\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq\\) <code>\\preccurlyeq, \\curlyeqprec</code> \\(\\preccurlyeq, \\curlyeqprec\\) <code>\\succcurlyeq, \\curlyeqsucc</code> \\(\\succcurlyeq, \\curlyeqsucc\\) <code>\\precsim, \\precnsim, \\precapprox, \\precnapprox</code> \\(\\precsim, \\precnsim, \\precapprox, \\precnapprox\\) <code>\\succsim, \\succnsim, \\succapprox, \\succnapprox</code> \\(\\succsim, \\succnsim, \\succapprox, \\succnapprox\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#geometric","title":"Geometric","text":"Source Rendering <code>\\parallel, \\nparallel, \\shortparallel, \\nshortparallel</code> \\(\\parallel, \\nparallel, \\shortparallel, \\nshortparallel\\) <code>\\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ</code> \\(\\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ\\) <code>\\Box, \\square, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar</code> \\(\\Box, \\square, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar\\) <code>\\bigcirc, \\triangle, \\bigtriangleup, \\bigtriangledown</code> \\(\\bigcirc, \\triangle, \\bigtriangleup, \\bigtriangledown\\) <code>\\vartriangle, \\triangledown</code> \\(\\vartriangle, \\triangledown\\) <code>\\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright</code> \\(\\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#logic","title":"Logic","text":"Source Rendering <code>\\forall, \\exists, \\nexists</code> \\(\\forall, \\exists, \\nexists\\) <code>\\therefore, \\because, \\And</code> \\(\\therefore, \\because, \\And\\) <code>\\lor \\vee, \\curlyvee, \\bigvee</code>  don't use <code>\\or</code> which is now deprecated \\(\\lor, \\vee, \\curlyvee, \\bigvee\\) <code>\\land \\wedge, \\curlywedge, \\bigwedge</code> don't use <code>\\and</code> which is now deprecated \\(\\land, \\wedge, \\curlywedge, \\bigwedge\\) <code>\\bar{q}, \\bar{abc}, \\overline{q}, \\overline{abc}, \\lnot \\neg, \\not\\operatorname{R}, \\bot, \\top</code> \\(\\bar{q}, \\bar{abc}, \\overline{q}, \\overline{abc}, \\lnot \\neg, \\not\\operatorname{R}, \\bot, \\top\\) <code>\\vdash \\dashv, \\vDash, \\Vdash, \\models</code> \\(\\vdash, \\dashv, \\vDash, \\Vdash, \\models\\) <code>\\Vvdash \\nvdash \\nVdash \\nvDash \\nVDash</code> \\(\\Vvdash, \\nvdash, \\nVdash, \\nvDash, \\nVDash\\) <code>\\ulcorner \\urcorner \\llcorner \\lrcorner</code> \\(\\ulcorner \\urcorner \\llcorner \\lrcorner\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#arrows","title":"Arrows","text":"Source Rendering <code>\\Rrightarrow, \\Lleftarrow</code> \\(\\Rrightarrow, \\Lleftarrow\\) <code>\\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies</code> \\(\\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies\\) <code>\\Leftarrow, \\nLeftarrow, \\Longleftarrow</code> \\(\\Leftarrow, \\nLeftarrow, \\Longleftarrow\\) <code>\\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff</code> \\(\\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff\\) <code>\\Uparrow, \\Downarrow, \\Updownarrow</code> \\(\\Uparrow, \\Downarrow, \\Updownarrow\\) <code>\\rightarrow \\to, \\nrightarrow, \\longrightarrow</code> \\(\\rightarrow \\to, \\nrightarrow, \\longrightarrow\\) <code>\\leftarrow \\gets, \\nleftarrow, \\longleftarrow</code> \\(\\leftarrow \\gets, \\nleftarrow, \\longleftarrow\\) <code>\\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow</code> \\(\\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow\\) <code>\\uparrow, \\downarrow, \\updownarrow</code> \\(\\uparrow, \\downarrow, \\updownarrow\\) <code>\\nearrow, \\swarrow, \\nwarrow, \\searrow</code> \\(\\nearrow, \\swarrow, \\nwarrow, \\searrow\\) <code>\\mapsto, \\longmapsto</code> \\(\\mapsto, \\longmapsto\\) <code>\\rightharpoonup \\rightharpoondown \\leftharpoonup \\leftharpoondown \\upharpoonleft \\upharpoonright \\downharpoonleft \\downharpoonright \\rightleftharpoons \\leftrightharpoons</code> \\(\\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons\\) <code>\\curvearrowleft \\circlearrowleft \\Lsh \\upuparrows \\rightrightarrows \\rightleftarrows \\rightarrowtail \\looparrowright</code> \\(\\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright\\) <code>\\curvearrowright \\circlearrowright \\Rsh \\downdownarrows \\leftleftarrows \\leftrightarrows \\leftarrowtail \\looparrowleft</code> \\(\\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft\\) <code>\\hookrightarrow \\hookleftarrow \\multimap \\leftrightsquigarrow \\rightsquigarrow \\twoheadrightarrow \\twoheadleftarrow</code> \\(\\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#special","title":"Special","text":"Source Rendering <code>\\amalg \\P \\S \\% \\dagger \\ddagger \\ldots \\cdots</code> \\(\\amalg \\P \\S \\% \\dagger \\ddagger \\ldots \\cdots\\) <code>\\smile \\frown \\wr \\triangleleft \\triangleright</code> \\(\\smile \\frown \\wr \\triangleleft \\triangleright\\) <code>\\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp</code> \\(\\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#unsorted-new-stuff","title":"Unsorted (new stuff)","text":"Source Rendering <code>\\diagup \\diagdown \\centerdot \\ltimes \\rtimes \\leftthreetimes \\rightthreetimes</code> \\(\\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes\\) <code>\\eqcirc \\circeq \\triangleq \\bumpeq \\Bumpeq \\doteqdot \\risingdotseq \\fallingdotseq</code> \\(\\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq\\) <code>\\intercal \\barwedge \\veebar \\doublebarwedge \\between \\pitchfork</code> \\(\\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork\\) <code>\\vartriangleleft \\ntriangleleft \\vartriangleright \\ntriangleright</code> \\(\\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright\\) <code>\\trianglelefteq \\ntrianglelefteq \\trianglerighteq \\ntrianglerighteq</code> \\(\\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#expressions","title":"Expressions","text":"Source Rendering <code>a^2, a^{x+3}</code> \\(a^2, a^{x+3}\\) <code>a_2</code> \\(a_2\\) <code>10^{30} a^{2+2}</code> \\(10^{30} a^{2+2}\\) <code>a_{i,j} b_{f'}</code> \\(a_{i,j} b_{f'}\\) <code>x_2^3</code> \\(x_2^3\\) <code>{x_2}^3</code> \\({x_2}^3\\) <code>10^{10^{8}}</code> \\(10^{10^{8}}\\) <code>\\sideset{_1^2}{_3^4}\\prod_a^b</code> \\(\\sideset{_1^2}{_3^4}\\prod_a^b\\) <code>{}_1^2\\!\\Omega_3^4</code> \\({}_1^2\\!\\Omega_3^4\\) <code>\\overset{\\alpha}{\\omega}</code> \\(\\overset{\\alpha}{\\omega}\\) <code>\\underset{\\alpha}{\\omega}</code> \\(\\underset{\\alpha}{\\omega}\\) <code>\\overset{\\alpha}{\\underset{\\gamma}{\\omega}}</code> \\(\\overset{\\alpha}{\\underset{\\gamma}{\\omega}}\\) <code>\\stackrel{\\alpha}{\\omega}</code> \\(\\stackrel{\\alpha}{\\omega}\\) <code>x', y'', f', f''</code> \\(x', y'', f', f''\\) <code>x^\\prime, y^{\\prime\\prime}</code> \\(x^\\prime, y^{\\prime\\prime}\\) <code>\\dot{x}, \\ddot{x}</code> \\(\\dot{x}, \\ddot{x}\\) <code>\\hat a \\bar b \\vec c</code> \\(\\hat a \\bar b \\vec c\\) <code>\\overrightarrow{a b} \\overleftarrow{c d} \\widehat{d e f}</code> \\(\\overrightarrow{a b} \\overleftarrow{c d} \\widehat{d e f}\\) <code>\\overline{g h i} \\underline{j k l}</code> \\(\\overline{g h i} \\ \\underline{j k l}\\) <code>\\overset{\\frown} {AB}</code> \\(\\overset{\\frown} {AB}\\) <code>A \\xleftarrow{n+\\mu-1} B \\xrightarrow[T]{n\\pm i-1} C</code> \\(A \\xleftarrow{n+\\mu-1} B \\xrightarrow[T]{n\\pm i-1} C\\) <code>\\overbrace{ 1+2+\\cdots+100 }^{5050}</code> \\(\\overbrace{ 1+2+\\cdots+100 }^{5050}\\) <code>\\underbrace{ a+b+\\cdots+z }_{26}</code> \\(\\underbrace{ a+b+\\cdots+z }_{26}\\) <code>\\sum_{k=1}^N k^2</code> \\(\\sum_{k=1}^N k^2\\) <code>\\textstyle \\sum_{k=1}^N k^2</code> \\(\\textstyle \\sum_{k=1}^N k^2\\) <code>\\frac{\\sum_{k=1}^N k^2}{a}</code> \\(\\frac{\\sum_{k=1}^N k^2}{a}\\) <code>\\frac{\\displaystyle \\sum_{k=1}^N k^2}{a}</code> \\(\\frac{\\displaystyle \\sum_{k=1}^N k^2}{a}\\) <code>\\frac{\\sum\\limits^{^N}_{k=1} k^2}{a}</code> \\(\\frac{\\sum\\limits^{^N}_{k=1} k^2}{a}\\) <code>\\prod_{i=1}^N x_i</code> \\(\\prod_{i=1}^N x_i\\) <code>\\textstyle \\prod_{i=1}^N x_i</code> \\(\\textstyle \\prod_{i=1}^N x_i\\) <code>\\coprod_{i=1}^N x_i</code> \\(\\coprod_{i=1}^N x_i\\) <code>\\textstyle \\coprod_{i=1}^N x_i</code> \\(\\textstyle \\coprod_{i=1}^N x_i\\) <code>\\lim_{n \\to \\infty}x_n</code> \\(\\lim_{n \\to \\infty}x_n\\) <code>\\textstyle \\lim_{n \\to \\infty}x_n</code> \\(\\textstyle \\lim_{n \\to \\infty}x_n\\) <code>\\int\\limits_{1}^{3}\\frac{e^3/x}{x^2}\\, dx</code> \\(\\int\\limits_{1}^{3}\\frac{e^3/x}{x^2}\\, dx\\) <code>\\int_{1}^{3}\\frac{e^3/x}{x^2}\\, dx</code> \\(\\int_{1}^{3}\\frac{e^3/x}{x^2}\\, dx\\) <code>\\textstyle \\int\\limits_{-N}^{N} e^x dx</code> \\(\\textstyle \\int\\limits_{-N}^{N} e^x dx\\) <code>\\textstyle \\int_{-N}^{N} e^x dx</code> \\(\\textstyle \\int_{-N}^{N} e^x dx\\) <code>\\iint\\limits_D dx\\,dy</code> \\(\\iint\\limits_D dx\\,dy\\) <code>\\iiint\\limits_E dx\\,dy\\,dz</code> \\(\\iiint\\limits_E dx\\,dy\\,dz\\) <code>\\iiiint\\limits_F dx\\,dy\\,dz\\,dt</code> \\(\\iiiint\\limits_F dx\\,dy\\,dz\\,dt\\) <code>\\int_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy</code> \\(\\int_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy\\) <code>\\oint_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy</code> \\(\\oint_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy\\) <code>\\bigcap_{i=1}^n E_i</code> \\(\\bigcap_{i=1}^n E_i\\) <code>\\bigcup_{i=1}^n E_i</code> \\(\\bigcup_{i=1}^n E_i\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#display-attribute","title":"Display Attribute","text":""},{"location":"%E6%95%B0%E5%AD%A6/latex/#fractions-matrices-multilines","title":"Fractions, Matrices, Multilines","text":"Source Rendering <code>\\frac{2}{4}=0.5</code> or <code>{2 \\over 4}=0.5</code> \\(\\frac{2}{4}=0.5\\) <code>\\tfrac{2}{4} = 0.5</code> \\(\\tfrac{2}{4} = 0.5\\) <code>\\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a</code> \\(\\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a\\) <code>\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a</code> \\(\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a\\) <code>\\cfrac{x}{1 + \\cfrac{\\cancel{y}}{\\cancel{y}}} = \\cfrac{x}{2}</code> \\(\\cfrac{x}{1 + \\cfrac{\\cancel{y}}{\\cancel{y}}} = \\cfrac{x}{2}\\) <code>\\binom{n}{k}</code> \\(\\binom{n}{k}\\) <code>\\tbinom{n}{k}</code> \\(\\tbinom{n}{k}\\) <code>\\dbinom{n}{k}</code> \\(\\dbinom{n}{k}\\) <code>\\begin{matrix} x &amp; y \\\\ z &amp; v \\end{matrix}</code> \\(\\begin{matrix} x &amp; y \\\\ z &amp; v \\end{matrix}\\) <code>\\begin{vmatrix} x &amp; y \\\\ z &amp; v \\end{vmatrix}</code> \\(\\begin{vmatrix} x &amp; y \\\\ z &amp; v \\end{vmatrix}\\) <code>\\begin{Vmatrix} x &amp; y \\\\ z &amp; v \\end{Vmatrix}</code> \\(\\begin{Vmatrix} x &amp; y \\\\ z &amp; v \\end{Vmatrix}\\) <code>\\begin{bmatrix} 0 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 \\end{bmatrix}</code> \\(\\begin{bmatrix} 0 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 \\end{bmatrix}\\) <code>\\begin{Bmatrix} x &amp; y \\\\ z &amp; v \\end{Bmatrix}</code> \\(\\begin{Bmatrix} x &amp; y \\\\ z &amp; v \\end{Bmatrix}\\) <code>\\begin{pmatrix} x &amp; y \\\\ z &amp; v \\end{pmatrix}</code> \\(\\begin{pmatrix} x &amp; y \\\\ z &amp; v \\end{pmatrix}\\) <code>\\bigl( \\begin{smallmatrix} a&amp;b\\\\ c&amp;d \\end{smallmatrix} \\bigr)</code> \\(\\bigl( \\begin{smallmatrix} a&amp;b\\\\ c&amp;d \\end{smallmatrix} \\bigr)\\) <code>f(n) = \\begin{cases} n/2, &amp; \\text{if }n\\text{ is even} \\\\ 3n+1, &amp; \\text{if }n\\text{ is odd} \\end{cases}</code> \\(f(n) = \\begin{cases} n/2, &amp; \\text{if }n\\text{ is even} \\\\ 3n+1, &amp; \\text{if }n\\text{ is odd} \\end{cases}\\) <code>\\begin{cases} 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end{cases}</code> \\(\\begin{cases} 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end{cases}\\) <code>\\begin{align} f(x) &amp; = (a+b)^2 \\\\ &amp; = a^2+2ab+b^2 \\\\ \\end{align}</code> \\(\\begin{align} f(x) &amp; = (a+b)^2 \\\\ &amp; = a^2+2ab+b^2 \\\\ \\end{align}\\) <code>\\begin{alignat}{2} f(x) &amp; = (a-b)^2 \\\\ &amp; = a^2-2ab+b^2 \\\\ \\end{alignat}</code> \\(\\begin{alignat}{2} f(x) &amp; = (a-b)^2 \\\\ &amp; = a^2-2ab+b^2 \\\\ \\end{alignat}\\) <code>\\begin{align} f(a,b) &amp; = (a+b)^2 &amp;&amp; = (a+b)(a+b) \\\\ &amp; = a^2+ab+ba+b^2  &amp;&amp; = a^2+2ab+b^2 \\\\ \\end{align}</code> \\(\\begin{align} f(a,b) &amp; = (a+b)^2 &amp;&amp; = (a+b)(a+b) \\\\ &amp; = a^2+ab+ba+b^2  &amp;&amp; = a^2+2ab+b^2 \\\\ \\end{align}\\) <code>\\begin{alignat}{3} f(a,b) &amp; = (a+b)^2 &amp;&amp; = (a+b)(a+b) \\\\ &amp; = a^2+ab+ba+b^2  &amp;&amp; = a^2+2ab+b^2 \\\\ \\end{alignat}</code> \\(\\begin{alignat}{3} f(a,b) &amp; = (a+b)^2 &amp;&amp; = (a+b)(a+b) \\\\ &amp; = a^2+ab+ba+b^2  &amp;&amp; = a^2+2ab+b^2 \\\\ \\end{alignat}\\) <code>\\begin{array}{lcl} z &amp; = &amp; a \\\\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}</code> \\(\\begin{array}{lcl} z &amp; = &amp; a \\\\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}\\) <code>\\begin{array}{lcr} z &amp; = &amp; a \\\\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}</code> \\(\\begin{array}{lcr} z &amp; = &amp; a \\\\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}\\) <code>\\begin{alignat}{4} F:\\; &amp;&amp; C(X) &amp;&amp; \\;\\to\\;     &amp; C(X) \\\\ &amp;&amp; g    &amp;&amp; \\;\\mapsto\\; &amp; g^2 \\end{alignat}</code> \\(\\begin{alignat}{4} F:\\; &amp;&amp; C(X) &amp;&amp; \\;\\to\\;     &amp; C(X) \\\\ &amp;&amp; g    &amp;&amp; \\;\\mapsto\\; &amp; g^2 \\end{alignat}\\) <code>\\begin{alignat}{4} F:\\; &amp;&amp; C(X) &amp;&amp; \\;\\to\\;     &amp;&amp; C(X) \\\\ &amp;&amp; g    &amp;&amp; \\;\\mapsto\\; &amp;&amp; g^2 \\end{alignat}</code> \\(\\begin{alignat}{4} F:\\; &amp;&amp; C(X) &amp;&amp; \\;\\to\\;     &amp;&amp; C(X) \\\\ &amp;&amp; g    &amp;&amp; \\;\\mapsto\\; &amp;&amp; g^2 \\end{alignat}\\) <code>\\begin{array}{                                                                                                 | c                                                                                                               | c | c | } a &amp; b &amp; S \\\\ \\hline 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 \\\\ 1 &amp; 0 &amp; 1 \\\\ 1 &amp; 1 &amp; 0 \\\\ \\end{array}</code> \\(\\begin{array}{\\|c\\|c\\|c\\|} a &amp; b &amp; S \\\\ \\hline 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 \\\\ 1 &amp; 0 &amp; 1 \\\\ 1 &amp; 1 &amp; 0 \\\\ \\end{array}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#parenthesizing-big-expressions-brackets-bars","title":"Parenthesizing Big Expressions, Brackets, Bars","text":"Source Rendering <code>\\left ( \\frac{a}{b} \\right )</code> \\(\\left ( \\frac{a}{b} \\right )\\) <code>\\left [ \\frac{a}{b} \\right ] \\quad</code> <code>\\left \\lbrack \\frac{a}{b} \\right \\rbrack</code> \\(\\left [ \\frac{a}{b} \\right ] \\quad \\left \\lbrack \\frac{a}{b} \\right \\rbrack\\) <code>\\left \\{ \\frac{a}{b} \\right \\} \\quad</code> <code>\\left \\lbrace \\frac{a}{b} \\right \\rbrace</code> \\(\\left \\{ \\frac{a}{b} \\right \\} \\quad \\left \\lbrace \\frac{a}{b} \\right \\rbrace\\) <code>\\left \\langle \\frac{a}{b} \\right \\rangle</code> \\(\\left \\langle \\frac{a}{b} \\right \\rangle\\) <code>\\left                                                                                                                                                                          | \\frac{a}{b} \\right \\vert \\quad</code> <code>\\left \\Vert \\frac{c}{d} \\right \\|</code> $\\left <code>\\left \\lfloor \\frac{a}{b} \\right \\rfloor \\quad</code> <code>\\left \\lceil \\frac{c}{d} \\right \\rceil</code> \\(\\left \\lfloor \\frac{a}{b} \\right \\rfloor \\quad \\left \\lceil \\frac{c}{d} \\right \\rceil\\) <code>\\left / \\frac{a}{b} \\right \\backslash</code> \\(\\left / \\frac{a}{b} \\right \\backslash\\) <code>\\left \\uparrow \\frac{a}{b} \\right \\downarrow \\quad</code> <code>\\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\quad</code> <code>\\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow</code> \\(\\left \\uparrow \\frac{a}{b} \\right \\downarrow \\quad \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\quad \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow\\) <code>\\left [ 0,1 \\right )</code> <code>\\left \\langle \\psi \\right                                                                                                                               |</code> \\(\\left [ 0,1 \\right )\\) <code>\\left . \\frac{A}{B} \\right \\} \\to X</code> \\(\\left . \\frac{A}{B} \\right \\} \\to X\\) <code>( \\bigl( \\Bigl( \\biggl( \\Biggl( \\dots \\Biggr] \\biggr] \\Bigr] \\bigr] ]</code> \\(( \\bigl( \\Bigl( \\biggl( \\Biggl( \\dots \\Biggr] \\biggr] \\Bigr] \\bigr] ]\\) <code>\\{ \\bigl\\{ \\Bigl\\{ \\biggl\\{ \\Biggl\\{ \\dots</code> <code>\\Biggr\\rangle \\biggr\\rangle \\Bigr\\rangle \\bigr\\rangle \\rangle</code> \\(\\{ \\bigl\\{ \\Bigl\\{ \\biggl\\{ \\Biggl\\{ \\dots \\Biggr\\rangle \\biggr\\rangle \\Bigr\\rangle \\bigr\\rangle \\rangle\\) <code>\\| \\big\\| \\Big\\| \\bigg\\| \\Bigg\\| \\dots \\Bigg\\| \\bigg\\| \\Big\\| \\big\\| \\|</code> \\(\\| \\big\\| \\Big\\| \\bigg\\| \\Bigg\\| \\dots \\Bigg\\| \\bigg\\| \\Big\\| \\big\\| \\|\\) <code>\\lfloor \\bigl\\lfloor \\Bigl\\lfloor \\biggl\\lfloor \\Biggl\\lfloor \\dots</code> <code>\\Biggr\\rceil \\biggr\\rceil \\Bigr\\rceil \\bigr\\rceil \\ceil</code> \\(\\lfloor \\bigl\\lfloor \\Bigl\\lfloor \\biggl\\lfloor \\Biggl\\lfloor \\dots \\Biggr\\rceil \\biggr\\rceil \\Bigr\\rceil \\bigr\\rceil \\rceil\\) <code>\\uparrow \\big\\uparrow \\Big\\uparrow \\bigg\\uparrow \\Bigg\\uparrow \\dots</code> <code>\\Bigg\\Downarrow \\bigg\\Downarrow \\Big\\Downarrow \\big\\Downarrow \\Downarrow</code> \\(\\uparrow \\big\\uparrow \\Big\\uparrow \\bigg\\uparrow \\Bigg\\uparrow \\dots \\Bigg\\Downarrow \\bigg\\Downarrow \\Big\\Downarrow \\big\\Downarrow \\Downarrow\\) <code>\\updownarrow \\big\\updownarrow \\Big\\updownarrow \\bigg\\updownarrow \\Bigg\\updownarrow \\dots</code> <code>\\Bigg\\Updownarrow \\bigg\\Updownarrow \\Big\\Updownarrow \\big\\Updownarrow \\Updownarrow</code> \\(\\updownarrow \\big\\updownarrow \\Big\\updownarrow \\bigg\\updownarrow \\Bigg\\updownarrow \\dots \\Bigg\\Updownarrow \\bigg\\Updownarrow \\Big\\Updownarrow \\big\\Updownarrow \\Updownarrow\\) <code>/ \\big/ \\Big/ \\bigg/ \\Bigg/ \\dots</code> <code>\\Bigg\\backslash \\bigg\\backslash \\Big\\backslash \\big\\backslash \\backslash</code> \\(/ \\big/ \\Big/ \\bigg/ \\Bigg/ \\dots \\Bigg\\backslash \\bigg\\backslash \\Big\\backslash \\big\\backslash \\backslash\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#alphabets-and-typefaces","title":"Alphabets and Typefaces","text":""},{"location":"%E6%95%B0%E5%AD%A6/latex/#greek-alphabet","title":"Greek Alphabet","text":"Source Rendering <code>\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta</code> \\(\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta\\) <code>\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi</code> \\(\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi\\) <code>\\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega</code> \\(\\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega\\) <code>\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta</code> \\(\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta\\) <code>\\iota \\kappa \\lambda \\mu \\nu \\xi \\omicron \\pi</code> \\(\\iota \\kappa \\lambda \\mu \\nu \\xi \\omicron \\pi\\) <code>\\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega</code> \\(\\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega\\) <code>\\varGamma \\varDelta \\varTheta \\varLambda \\varXi \\varPi \\varSigma \\varPhi \\varUpsilon \\varOmega</code> \\(\\varGamma \\varDelta \\varTheta \\varLambda \\varXi \\varPi \\varSigma \\varPhi \\varUpsilon \\varOmega\\) <code>\\varepsilon \\digamma \\varkappa \\varpi \\varrho \\varsigma \\vartheta \\varphi</code> \\(\\varepsilon \\digamma \\varkappa \\varpi \\varrho \\varsigma \\vartheta \\varphi\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#hebrew-symbols","title":"Hebrew Symbols","text":"Source Rendering <code>\\aleph \\beth \\gimel \\daleth</code> \\(\\aleph \\beth \\gimel \\daleth\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#blackboard-boldscripts","title":"Blackboard Bold/Scripts","text":"Source Rendering <code>\\mathbb{ABCDEFGHI}</code> \\(\\mathbb{ABCDEFGHI}\\) <code>\\mathbb{JKLMNOPQR}</code> \\(\\mathbb{JKLMNOPQR}\\) <code>\\mathbb{STUVWXYZ}</code> \\(\\mathbb{STUVWXYZ}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#boldface","title":"Boldface","text":"Source Rendering <code>\\mathbf{ABCDEFGHI}</code> \\(\\mathbf{ABCDEFGHI}\\) <code>\\mathbf{JKLMNOPQR}</code> \\(\\mathbf{JKLMNOPQR}\\) <code>\\mathbf{STUVWXYZ}</code> \\(\\mathbf{STUVWXYZ}\\) <code>\\mathbf{abcdefghijklm}</code> \\(\\mathbf{abcdefghijklm}\\) <code>\\mathbf{nopqrstuvwxyz}</code> \\(\\mathbf{nopqrstuvwxyz}\\) <code>\\mathbf{0123456789}</code> \\(\\mathbf{0123456789}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#boldface-greek","title":"Boldface (Greek)","text":"Source Rendering <code>\\boldsymbol{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta}</code> \\(\\boldsymbol{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta}\\) <code>\\boldsymbol{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi}</code> \\(\\boldsymbol{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi}\\) <code>\\boldsymbol{\\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega}</code> \\(\\boldsymbol{\\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega}\\) <code>\\boldsymbol{\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta}</code> \\(\\boldsymbol{\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta}\\) <code>\\boldsymbol{\\iota \\kappa \\lambda \\mu \\nu \\xi \\omicron \\pi}</code> \\(\\boldsymbol{\\iota \\kappa \\lambda \\mu \\nu \\xi \\omicron \\pi}\\) <code>\\boldsymbol{\\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega}</code> \\(\\boldsymbol{\\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega}\\) <code>\\boldsymbol{\\varepsilon\\digamma\\varkappa\\varpi}</code> \\(\\boldsymbol{\\varepsilon\\digamma\\varkappa\\varpi}\\) <code>\\boldsymbol{\\varrho\\varsigma\\vartheta\\varphi}</code> \\(\\boldsymbol{\\varrho\\varsigma\\vartheta\\varphi}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#italics-default-for-latin-alphabet","title":"Italics (default for Latin alphabet)","text":"Source Rendering <code>\\mathit{0123456789}</code> \\(\\mathit{0123456789}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#greek-italics-default-for-lowercase-greek","title":"Greek Italics (default for lowercase Greek)","text":"Source Rendering <code>\\mathit{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta}</code> \\(\\mathit{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta}\\) <code>\\mathit{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi}</code> \\(\\mathit{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi}\\) <code>\\mathit{\\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega}</code> \\(\\mathit{\\Sigma\\Tau\\Upsilon\\Phi\\Chi\\Psi\\Omega}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#greek-uppercase-boldface-italics","title":"Greek Uppercase Boldface Italics","text":"Source Rendering <code>\\boldsymbol{\\varGamma \\varDelta \\varTheta \\varLambda}</code> \\(\\boldsymbol{\\varGamma \\varDelta \\varTheta \\varLambda}\\) <code>\\boldsymbol{\\varXi \\varPi \\varSigma \\varUpsilon \\varOmega}</code> \\(\\boldsymbol{\\varXi \\varPi \\varSigma \\varUpsilon \\varOmega}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#roman-typeface","title":"Roman Typeface","text":"Source Rendering <code>\\mathrm{ABCDEFGHI}</code> \\(\\mathrm{ABCDEFGHI}\\) <code>\\mathrm{JKLMNOPQR}</code> \\(\\mathrm{JKLMNOPQR}\\) <code>\\mathrm{STUVWXYZ}</code> \\(\\mathrm{STUVWXYZ}\\) <code>\\mathrm{abcdefghijklm}</code> \\(\\mathrm{abcdefghijklm}\\) <code>\\mathrm{nopqrstuvwxyz}</code> \\(\\mathrm{nopqrstuvwxyz}\\) <code>\\mathrm{0123456789}</code> \\(\\mathrm{0123456789}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#sans-serif","title":"Sans Serif","text":"Source Rendering <code>\\mathsf{ABCDEFGHI}</code> \\(\\mathsf{ABCDEFGHI}\\) <code>\\mathsf{JKLMNOPQR}</code> \\(\\mathsf{JKLMNOPQR}\\) <code>\\mathsf{STUVWXYZ}</code> \\(\\mathsf{STUVWXYZ}\\) <code>\\mathsf{abcdefghijklm}</code> \\(\\mathsf{abcdefghijklm}\\) <code>\\mathsf{nopqrstuvwxyz}</code> \\(\\mathsf{nopqrstuvwxyz}\\) <code>\\mathsf{0123456789}</code> \\(\\mathsf{0123456789}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#sans-serif-greek-capital-only","title":"Sans Serif Greek (capital only)","text":"Source Rendering <code>\\mathsf{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta}</code> \\(\\mathsf{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta}\\) <code>\\mathsf{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi}</code> \\(\\mathsf{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi}\\) <code>\\mathsf{\\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega}</code> \\(\\mathsf{\\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#calligraphyscript","title":"Calligraphy/Script","text":"Source Rendering <code>\\mathcal{ABCDEFGHI}</code> \\(\\mathcal{ABCDEFGHI}\\) <code>\\mathcal{JKLMNOPQR}</code> \\(\\mathcal{JKLMNOPQR}\\) <code>\\mathcal{STUVWXYZ}</code> \\(\\mathcal{STUVWXYZ}\\) <code>\\mathcal{abcdefghi}</code> \\(\\mathcal{abcdefghi}\\) <code>\\mathcal{jklmnopqr}</code> \\(\\mathcal{jklmnopqr}\\) <code>\\mathcal{stuvwxyz}</code> \\(\\mathcal{stuvwxyz}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#fraktur-typeface","title":"Fraktur Typeface","text":"Source Rendering <code>\\mathfrak{ABCDEFGHI}</code> \\(\\mathfrak{ABCDEFGHI}\\) <code>\\mathfrak{JKLMNOPQR}</code> \\(\\mathfrak{JKLMNOPQR}\\) <code>\\mathfrak{STUVWXYZ}</code> \\(\\mathfrak{STUVWXYZ}\\) <code>\\mathfrak{abcdefghijklm}</code> \\(\\mathfrak{abcdefghijklm}\\) <code>\\mathfrak{nopqrstuvwxyz}</code> \\(\\mathfrak{nopqrstuvwxyz}\\) <code>\\mathfrak{0123456789}</code> \\(\\mathfrak{0123456789}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#small-scriptstyle-text","title":"Small Scriptstyle Text","text":"Source Rendering <code>{\\scriptstyle\\text{abcdefghijklm}}</code> \\({\\scriptstyle\\text{abcdefghijklm}}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#mixed-text-faces","title":"Mixed Text Faces","text":"Source Rendering <code>x y z</code> \\(x y z\\) <code>\\text{x y z}</code> \\(\\text{x y z}\\) <code>\\text{if} n \\text{is even}</code> \\(\\text{if} n \\text{is even}\\) <code>\\text{if }n\\text{ is even}</code> \\(\\text{if }n\\text{ is even}\\) <code>\\text{if}~n\\ \\text{is even}</code> \\(\\text{if}~n\\ \\text{is even}\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#color","title":"Color","text":"<p>Equations can use color with the <code>\\color</code> command. For example:</p> <p>-<code>{\\color{Blue}x^2}+{\\color{Orange}2x}-{\\color{LimeGreen}1}</code></p> \\[ {\\color{Blue}x^2}+{\\color{Orange}2x}-{\\color{LimeGreen}1} \\] <ul> <li><code>x_{1,2}=\\frac{{\\color{Blue}-b}\\pm\\sqrt{\\color{Red}b^2-4ac}}{\\color{Green}2a }</code></li> </ul> \\[ x_{1,2}=\\frac{{\\color{Blue}-b}\\pm\\sqrt{\\color{Red}b^2-4ac}}{\\color{Green}2a} \\] <p>There are several alternate notations styles</p> <ul> <li><code>{\\color{Blue}x^2}+{\\color{Orange}2x}-{\\color{LimeGreen}1}</code> works with both texvc and MathJax</li> </ul> \\[ {\\color{Blue}x^2}+{\\color{Orange}2x}-{\\color{LimeGreen}1} \\] <ul> <li><code>\\color{Blue}x^2\\color{Black}+\\color{Orange}2x\\color{Black}-\\color{LimeGreen}1</code> works with both texvc and MathJax</li> </ul> \\[ \\color{Blue}x^2\\color{Black}+\\color{Orange}2x\\color{Black}-\\color{LimeGreen}1 \\] <ul> <li><code>\\color{Blue}{x^2}+\\color{Orange}{2x}-\\color{LimeGreen}{1}</code> only works with MathJax</li> </ul> \\[ \\color{Blue}{x^2}+\\color{Orange}{2x}-\\color{LimeGreen}{1} \\]"},{"location":"%E6%95%B0%E5%AD%A6/latex/#formatting-issures","title":"Formatting Issures","text":""},{"location":"%E6%95%B0%E5%AD%A6/latex/#spacing","title":"Spacing","text":"Source Rendering <code>a \\qquad b</code> \\(a \\qquad b\\) <code>a \\quad b</code> \\(a \\quad b\\) <code>a\\ b</code> \\(a\\ b\\) <code>a \\text{ } b</code> \\(a \\text{ } b\\) <code>a\\;b</code> \\(a\\;b\\) <code>a\\,b</code> \\(a\\,b\\) <code>ab</code> \\(ab\\) <code>a b</code> \\(a b\\) <code>\\mathit{ab}</code> \\(\\mathit{ab}\\) <code>a\\!b</code> \\(a\\!b\\)"},{"location":"%E6%95%B0%E5%AD%A6/latex/#reference","title":"Reference","text":"<ul> <li>(Help:Displaying a formula)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BB%A3%E6%95%B0%E9%87%8D%E6%95%B0%E4%B8%8E%E5%87%A0%E4%BD%95%E9%87%8D%E6%95%B0%E7%9A%84%E5%85%B3%E7%B3%BB/","title":"\u4ee3\u6570\u91cd\u6570\u4e0e\u51e0\u4f55\u91cd\u6570\u7684\u5173\u7cfb","text":"<p>\u4ee3\u6570\u91cd\u6570\u4e0e\u51e0\u4f55\u91cd\u6570\u7684\u5173\u7cfb </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/","title":"\u4f18\u5316\u95ee\u9898","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_1","title":"\u6700\u4f18\u5316\u95ee\u9898\u7684\u5b9a\u4e49","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_2","title":"\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u89e3\u51b3\u7b49\u5f0f\u7ea6\u675f","text":"<p>\u5c06\u4e00\u4e2a\u6709n\u4e2a\u53d8\u91cf\u4e0ek\u4e2a\u7ea6\u675f\u6761\u4ef6\u7684\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6709n + k\u4e2a\u53d8\u91cf\u7684\u65b9\u7a0b\u7ec4\u7684\u6781\u503c\u95ee\u9898\uff0c\u5176\u53d8\u91cf\u4e0d\u53d7\u4efb\u4f55\u7ea6\u675f\u3002\u8fd9\u79cd\u65b9\u6cd5\u5f15\u5165\u4e86\u4e00\u4e2a\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff1a\u7ea6\u675f\u65b9\u7a0b\u7684\u68af\u5ea6\uff08gradient\uff09\u7684\u7ebf\u6027\u7ec4\u5408\u91cc\u6bcf\u4e2a\u5411\u91cf\u7684\u7cfb\u6570\u3002  </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#kkt","title":"KKT\u6761\u4ef6\u89e3\u51b3\u4e0d\u7b49\u5f0f\u7ea6\u675f","text":"<p>KKT\u6761\u4ef6\u4e13\u95e8\u7528\u4e8e\u89e3\u51b3\u4e0d\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u7684\uff0c\u5728\u4e0a\u9762\uff0c\u6211\u4eec\u63d0\u5230\u4e86\u5bf9\u4e8e\u5355\u4e2a\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u95ee\u9898\u6c42\u89e3\u6700\u4f18\u7684\u65b9\u6cd5\uff0c\u53ef\u76f4\u63a5\u5c06\u7b49\u5f0f\u7ea6\u675f\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u6362\u6210\u65e0\u7ea6\u675f\uff0c\u4f46\u662f\u5bf9\u4e8e\u542b\u6709\u4e0d\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u548c\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u7684\u95ee\u9898\uff0c\u5219\u9700\u8981\u5f15\u5165KKT\u6761\u4ef6\u3002  \u5c06\u7ea6\u675f\u95ee\u9898\u8f6c\u4e3a\u65e0\u7ea6\u675f\u95ee\u9898\u7684\u505a\u6cd5\u5206\u4e24\u6b65\uff1a - \u5148\u628a\u4e0d\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u8f6c\u5316\u4e3a\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u3002-&gt; \u5f15\u5165 \u677e\u5f1b\u53d8\u91cf\uff0c\u5373KKT\u4e58\u5b50 - \u518d\u628a\u7b49\u5f0f\u7ea6\u675f\u8f6c\u5316\u4e3a\u65e0\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002 -&gt;  \u5f15\u5165\u62c9\u683c\u6717\u65e5\u4e58\u5b50</p> <p>  \u4e0a\u9762\u7684(a\u6761\u4ef6)\u7684\u7531\u6765\u662f\uff1a - \u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u6700\u4f18\u89e3\u843d\u5728\u51fd\u6570\u5185\u90e8\uff0c\u6b64\u65f6\u7684\u7ea6\u675f\u6761\u4ef6\u5df2\u7ecf\u4e0d\u8d77\u4f5c\u7528\u4e86\uff0c\u56e0\u6b64\u9700\u8981\u6d88\u9664\u8be5\u7ea6\u675f\u6761\u4ef6\uff0c\u4fdd\u8bc1\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\u53ea\u548c\u5728\u8fb9\u754c\u4e0a\u7684\u89e3\u7684\u68af\u5ea6\u5171\u7ebf\u53cd\u5411\uff0c\u6240\u4ee5\u8ba9\u4e58\u5b50\u4e3a0\uff0c\u6545\u5f97\u5230(a\u6761\u4ef6)\u3002 - \u6700\u4f18\u89e3\u5728\u7ea6\u675f\u66f2\u7ebf\u4e0a\u65f6\uff0c\u5176\u8868\u8fbe\u5f0f\u4e3a0\uff0c\u6240\u4ee5\u4e58\u5b50\u4e0d\u5fc5\u4e3a0\uff0c\u56de\u5230\u4e86\u7b49\u5f0f\u7ea6\u675f\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u3002\u8be5\u6761\u4ef6\u4e5f\u79f0\u4e3aKKT\u7684\u5bf9\u5076\u4e92\u8865\u6761\u4ef6\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff1a\u5bf9\u4e8e\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u89e3\u5728\u8fb9\u754c\u4e0a\uff0c\u90a3\u4e48\u7b49\u540c\u4e8e\u7b49\u5f0f\u7ea6\u675f\uff0c\u628a\u4ed6\u5199\u8fdb\u62c9\u683c\u6717\u65e5\u51fd\u6570\u4e2d\uff0c\u4fdd\u8bc1\u68af\u5ea6\u5171\u7ebf\u53cd\u5411\u3002\u4e00\u79cd\u662f\u89e3\u5728\u8fb9\u754c\u5185\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6ca1\u6709\u7ea6\u675f\uff0c\u90a3\u4e48\u4e0d\u5e94\u8be5\u5199\u5165\u62c9\u683c\u6717\u65e5\u51fd\u6570\u4e2d\u3002\u800c\u677e\u5f1b\u4e92\u8865\u6761\u4ef6\u5c31\u662f\u63a7\u5236\u8981\u4e0d\u8981\u628a\u7ea6\u675f\u5199\u5165\u62c9\u683c\u6717\u65e5\u51fd\u6570\u4e2d\uff08\u5728\u8fb9\u754c\u5185g\uff08x\uff09 &lt;0 \uff0c\u90a3\u4e48\u4e58\u5b50\u4e3a0\uff0c\u4e0d\u5199\u5165\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff1b\u5728\u8fb9\u754c\u4e0ag\uff08x\uff09=0\uff0c\u4e58\u5b50\u4e0d\u4e3a0\uff0c\u5199\u5165\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff09\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_3","title":"\u5bf9\u5076\u95ee\u9898\u4e0e\u539f\u95ee\u9898","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u51f8\u95ee\u9898\uff0c\u539f\u59cb\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u7b49\u4ef7\uff0c\u5bf9\u5076\u95f4\u9699\u4e3a0\u3002  </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_4","title":"\u5bf9\u5076\u7406\u8bba","text":"<p><code>\u5bf9\u5076\u95ee\u9898\u7684\u610f\u4e49\u5728\u4e8e\u65e0\u8bba\u539f\u95ee\u9898\u662f\u51f8\u8fd8\u662f\u975e\u51f8\uff0c\u5bf9\u5076\u95ee\u9898\u90fd\u662f\u51f8\u4f18\u5316\u95ee\u9898\u3002\u901a\u8fc7\u5c06\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898\uff0c\u6709\u5c06\u590d\u6742\u95ee\u9898\u7b80\u5355\u5316\u7684\u53ef\u80fd\u6027\uff0c\u5e76\u80fd\u591f\u6c42\u5f97\u539f\u95ee\u9898\u7684\u5168\u5c40\u6700\u4f18\u89e3\u3002</code> \u535a\u5ba2 \u77e5\u4e4e\u535a\u5ba2</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_5","title":"\u5bf9\u5076\u7406\u8bba\uff08\u7ebf\u6027\u89c4\u5212\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#0","title":"\u5f31\u5bf9\u5076\u5b9a\u7406\uff08\u5bf9\u5076\u95f4\u9699&gt;=0\uff09\uff1a","text":"<p>min \u95ee\u9898\u53ef\u884c\u89e3\u7684\u76ee\u6807\u503c  &gt;= max\u95ee\u9898\u53ef\u884c\u89e3\u7684\u76ee\u6807\u503c\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u4e3a\u5bf9\u5076\u95f4\u9699\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#0_1","title":"\u5f3a\u5bf9\u5076\u5b9a\u7406(\u5bf9\u5076\u95f4\u9699=0)\uff1a","text":"<p>\u539f\u95ee\u9898\u4e0e\u5bf9\u5076\u95ee\u9898\u53ea\u8981\u6709\u4e00\u4e2a\u6709\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e24\u4e2a\u90fd\u6709\u6700\u4f18\u89e3\uff0c\u4e14\u6700\u4f18\u89e3\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u503c\u76f8\u7b49\uff0c\u5373\u5bf9\u5076\u95f4\u9699\u4e3a0.</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_6","title":"\u6700\u4f18\u6027\u5b9a\u7406\uff1a","text":"<p>\u5982\u679c\u539f\u95ee\u9898\u7684\u53ef\u884c\u89e3x\u548c\u5bf9\u5076\u95ee\u9898\u7684\u53ef\u884c\u89e3y\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u503c\u76f8\u7b49\uff0c\u4ed6\u4eec\u4ed6\u4eec\u90fd\u662f\u6700\u4f18\u89e3\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_7","title":"\u4e92\u8865\u677e\u5f1b\u5b9a\u7406","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_8","title":"\u5bf9\u5076\u7ebf\u6027\u89c4\u5212","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_9","title":"\u5bf9\u5076\u7406\u8bba\uff08\u975e\u7ebf\u6027\u89c4\u5212\uff09","text":"<p><code>\u5bf9\u5076\u95ee\u9898\u7684\u6781\u5927\u503c\u7b49\u4e8e\u539f\u95ee\u9898\u7684\u6781\u5c0f\u503c\u3002\u8fd9\u79cd\u73b0\u8c61\u5bf9\u4e8e\u7ebf\u6027\u89c4\u5212\u4e2d\u7684\u5bf9\u5076\u662f\u5fc5\u7136\u7684\uff1b\u4f46\u662f\u5bf9\u4e8e\u975e\u7ebf\u6027\u89c4\u5212\uff0c\u8fd9\u4e00\u7ed3\u8bba\u5e76\u4e0d\u662f\u666e\u904d\u6210\u7acb\u3002</code></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_10","title":"\u5171\u8f6d\u51fd\u6570\uff08\u5bf9\u5076\u51fd\u6570\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_11","title":"\u62c9\u683c\u6717\u65e5\u5bf9\u5076","text":"<p>\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\u662f\u5173\u4e8e\u4e58\u5b50\\(\\lambda\\) \u548c\\(\\nu\\) \u7684\u4eff\u5c04\u51fd\u6570\uff0c\u4eff\u5c04\u51fd\u6570\u53d6\u4e0b\u786e\u754c\uff0c\u662f\u51f9\u51fd\u6570\uff0c\u800c\u5bf9\u5076\u95ee\u9898\u7684\u7ea6\u675f\u662f\u51f8\u7684\uff0c\u56e0\u6b64\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\u4e00\u5b9a\u662f\u51f8\u4f18\u5316\u95ee\u9898\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#0_2","title":"\u5f31\u5bf9\u5076\u5b9a\u7406(\u5bf9\u5076\u95f4\u9699&gt;=0)","text":"<p>\u5728\u89e3\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u5f31\u5bf9\u5076\u603b\u662f\u6210\u7acb\u7684\u3002</p> <p>\u540c\u7ebf\u6027\u89c4\u5212\u5bf9\u5076\u7406\u8bba\uff1a - min \u95ee\u9898\u53ef\u884c\u89e3\u7684\u76ee\u6807\u503c  &gt;= max\u95ee\u9898\u53ef\u884c\u89e3\u7684\u76ee\u6807\u503c\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u4e3a\u5bf9\u5076\u95f4\u9699\u3002</p> <ul> <li>\u5982\u679cmin \u95ee\u9898\u53ef\u884c\u89e3\u7684\u76ee\u6807\u503c  &lt;=  max\u95ee\u9898\u53ef\u884c\u89e3\u7684\u76ee\u6807\u503c\uff0c\u90a3\u4e48\u53ef\u884c\u89e3\u5373\u4e3a\u6700\u4f18\u89e3</li> </ul> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#0_3","title":"\u5f3a\u5bf9\u5076\u5b9a\u7406(\u5bf9\u5076\u95f4\u9699=0)","text":"<p>\u5bf9\u4e8e\u51f8\u4f18\u5316\u95ee\u9898\uff0c\u5982\u679c\u6709slater\u70b9\uff0c\u6ee1\u8db3\u5f3a\u5bf9\u5076\uff0c\u539f\u95ee\u9898\u7684\u6781\u5c0f\u503c\u4e0e\u5bf9\u5076\u95ee\u9898\u7684\u6781\u5927\u503c\u662f\u76f8\u7b49\u7684\uff08\u7b49\u4ef7\u7684\uff09\u3002 \u5982\u679c\u6ee1\u8db3\u5f3a\u5bf9\u5076\uff0c\u53ef\u4ee5\u901a\u8fc7\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\u6765\u5f97\u5230\u539f\u59cb\u95ee\u9898\u7684\u89e3\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#slaterslater","title":"slater\u6761\u4ef6\uff08\u5728\u539f\u95ee\u9898\u662f\u51f8\u4f18\u5316\u95ee\u9898\u65f6\uff0cSlater \u6761\u4ef6\u662f\u5f3a\u5bf9\u5076\u6210\u7acb\u7684\u5145\u5206\u4e0d\u5fc5\u8981\u6761\u4ef6\uff09","text":"<p>\u901a\u4fd7\u89e3\u91ca\uff1aslater\u6761\u4ef6\u7684\u70b9\u4e3a\u4e25\u683c\u53ef\u884c\u70b9\uff0c\u5373&lt;=\u4e2d\u7684=\u53bb\u6389\u3002\u5982\u679c\u5b58\u5728\u4e25\u683c\u53ef\u884c\u70b9\uff0c\u5219\u6ee1\u8db3slater\u6761\u4ef6\u3002</p> <p></p> <p>\u53ea\u8981\u80fd\u627e\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u70b9\u4f7f\u539f\u51f8\u95ee\u9898\u7b49\u5f0f\u7ea6\u675f\u4f9d\u7136\u6210\u7acb\u4e14\u4e0d\u7b49\u5f0f\u7ea6\u675f\u90fd\u4e25\u683c\u5c0f\u4e8e\u00a00\u00a0\u5373\u53ef\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u5927\u591a\u6570\u4e00\u822c\u7684\u539f\u51f8\u95ee\u9898\uff0c\u5f3a\u5bf9\u5076\u90fd\u662f\u6210\u7acb\u7684\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#kkt_1","title":"KKT\u6761\u4ef6","text":"<ul> <li>\u5bf9\u4e8e\u51f8\u4f18\u5316\u95ee\u9898\uff1aKKT\u662f\u5f3a\u5bf9\u5076\u7684\u5145\u8981\u6761\u4ef6</li> <li>\u5bf9\u4e8e\u975e\u51f8\u4f18\u5316\u95ee\u9898\uff1a\u82e5\u539f\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u6ee1\u8db3\u5f3a\u5bf9\u5076\uff0c\u5219\u4e00\u5b9a\u6ee1\u8db3 KKT \u6761\u4ef6\uff0c\u53cd\u4e4b\u4e0d\u6210\u7acb</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_12","title":"\u603b\u7ed3","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_13","title":"\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u6cd5","text":"<p>\u672c\u8d28\u662f\u901a\u8fc7\u6c42\u89e3\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u5bf9\u5076\u95ee\u9898(\u51f8\u95ee\u9898\u7684\u5bf9\u5076\u548c\u539f\u95ee\u9898\u7684\u89e3\u4e00\u81f4)\uff0c\u8be5\u5bf9\u5076\u95ee\u9898\u6ca1\u6709\u7ea6\u675f\uff0c\u5176\u89e3\u4e3a\u539f\u95ee\u9898\u7684\u89e3\u3002</p> <p>\u8fdb\u4e00\u6b65\u7406\u89e3\uff1a\u539f\u95ee\u9898\u7684\u89e3=\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u89e3=\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u89e3=\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u5bf9\u5076\u51fd\u6570\u7684\u89e3\u3002  \u589e\u5e7f\u62c9\u683c\u6717\u65e5\u6cd5\uff1a\u5199\u51fa\u62c9\u683c\u6717\u65e5\u51fd\u6570\u5bf9\u5076\u51fd\u6570\uff0c\u662f\u4e00\u4e2a\\(max_{\\lambda} min_xL(x,\\lambda)\\) \u7684\u95ee\u9898\u3002\u5177\u4f53\u7684\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570\u770b\u5bf9\u5076\u7406\u8bba\uff08\u975e\u7ebf\u6027\u89c4\u5212\uff09\u3002\u8be5\u65b9\u6cd5\u5c31\u662f\u4ea4\u66ff\u4ece\u5185\u5411\u5916\u66f4\u65b0x\u548c\\(\\lambda\\)</p> <ul> <li>\u7b2c\u4e00\u6b65\uff1a\u56fa\u5b9a\\(\\lambda\\)\uff0c\u6c42\\(min_xL(x,\\lambda)\\) </li> <li>\u7b2c\u4e8c\u6b65\uff1a\u56fa\u5b9ax\uff0c\u66f4\u65b0\\(\\lambda\\)\uff0c\u66f4\u65b0\u7684\u65b9\u5411\u662f\u5bf9\\(\\lambda\\)\u6c42\u5bfc\uff0c\u5373\\(Ax^{k+1} - b\\)\uff0c\\(\\rho\\)\u662f\u6b65\u957f\uff0c\u56e0\u4e3a\u6c42max\uff0c\u6240\u4ee5\u662f+\u53f7\u3002</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#admm","title":"ADMM\uff08\u4ea4\u66ff\u65b9\u5411\u4e58\u5b50\u6cd5\uff09","text":"<p>ADMM\u8981\u6c42\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u51f8\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u5149\u6ed1\u3002ADMM\u548cALM\u90fd\u662f\u539f\u59cb\u5bf9\u5076\u65b9\u6cd5\u3002 </p> <p>ADMM\u548c\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u6cd5\u4e00\u6837\uff0c\u4e4b\u6240\u4ee5\u53eb\u4ea4\u66ff\u65b9\u5411\uff0c\u662f\u56e0\u4e3a\u628a\u539f\u6765\u4e00\u4e2a\u53d8\u91cfx\u53d8\u4e3a\u4e86\u4e24\u4e2a\u53d8\u91cfx\uff0cz\uff0c\u4ea4\u66ff\u66f4\u65b0x\u548cz\uff0c\u4ee5\u53ca\u4e58\u5b50\u3002\u672c\u8d28\u8fd8\u662f\u901a\u8fc7\u6c42\u89e3\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u5bf9\u5076\u95ee\u9898(\u51f8\u95ee\u9898\u7684\u5bf9\u5076\u548c\u539f\u95ee\u9898\u7684\u89e3\u4e00\u81f4)\uff0c\u8be5\u5bf9\u5076\u95ee\u9898\u6ca1\u6709\u7ea6\u675f\uff0c\u5176\u89e3\u4e3a\u539f\u95ee\u9898\u7684\u89e3\u3002\uff1a</p> \\[ max_\\lambda min _{x,z} L(x,z,\\lambda) \\] <p></p> <p><code>\u8865\u5145:ADMM\u76f8\u5f53\u4e8e\u628a\u4e00\u4e2a\u5927\u7684\u95ee\u9898\u5206\u6210\u4e86\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u7f29\u5c0f\u4e86\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u5206\u800c\u6cbb\u4e4b\u3002\u5b9e\u9645\u4e0a\u6709\u4e9b\u7b97\u6cd5\u7528ADMM\u7684\u601d\u8def\uff0c\u4f60\u770b\u4eceALM\u5230ADMM\u76f8\u5f53\u4e8e\u589e\u52a0\u4e00\u4e2a\u53d8\u91cfz\uff0c\u589e\u52a0\u4e00\u4e2astep\u5c31\u5927\u5927\u63d0\u5347\u4e86\u7b97\u6cd5\u6027\u80fd\uff0c\u5982\u679c\u6211\u518d\u589e\u52a0\u4e00\u4e2a\u53d8\u91cf\u4e00\u4e2astep\u5462~\uff1f\u4f46\u6709\u5de5\u4f5c\u6307\u51fa\u7406\u8bba\u4e0a\u53ea\u6709\u4e24\u4e2ablock\u7684ADMM\u80fd\u591f\u4fdd\u8bc1\u6536\u655b</code></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#tkkt","title":"\u5185\u70b9\u6cd5\uff08\u6d89\u53ca\u5230\u4e0d\u7b49\u5f0f\u7ea6\u675f\u7684\u8f6c\u5316t\uff0c\u4ee5\u53caKKT\u65b9\u7a0b\u7ec4\u7684\u6c42\u89e3\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#t","title":"\u969c\u788d\u51fd\u6570\uff08t\u4e3b\u8981\u662f\u7528\u6765\u53bb\u6389\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff09","text":"<p>\u7406\u8bba\u4e0a\u6765\u8bf4\u4e00\u4e2at\u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u89e3\uff0c\u5047\u5982\u8bf4\u6211\u4eec\u8ba9t\u8fde\u7eed\u53d8\u6362\uff0c\u90a3\u4e48\u8fd9\u4e2a\u89e3\u4e5f\u4f1a\u8fde\u7eed\u53d8\u6362\uff0c\u5c31\u4f1a\u5f62\u6210\u4e00\u6761\u5f27\u7ebf\u3002\u8fd9\u4e00\u6761\u5f27\u7ebf\u6211\u4eec\u53eb\u4e2d\u5fc3\u8def\u5f84\uff08central path\uff09\u3002</p> <p>\u5c4f\u969c\u6cd5\u662f\u4e3a\u4e86\u53bb\u6389\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u5982\u679c\u8fd8\u5269\u4e0b\u7684\u7b49\u5f0f\u7ea6\u675f\uff0c\u53ef\u4ee5\u7528KKT\u6c42\u89e3\uff0c\u4e5f\u53ef\u4ee5\u7528\u5916\u7f5a\u60e9\u7f5a\u3002\u5982\u679c\u6ca1\u6709\u7b49\u5f0f\u7ea6\u675f\uff0c\u90a3\u4e48\u5c31\u662f\u6c42\u89e3\u4e00\u4e2a\u65e0\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002</p> <p>\u4e0b\u9762\u4e3e\u4e00\u4e2a\u5185\u70b9\u6cd5\u4e2d\uff0c\u7528\u5185\u70b9\u628a\u4e0d\u7b49\u5f0f\u7ea6\u675f\u53bb\u6389\u540e\uff0c\u7528KKT\u53bb\u5904\u7406\u7b49\u6570\u7ea6\u675f\u7684\u4f8b\u5b50\u3002  \u6c42\u89e3\u65b9\u6cd5\uff1a </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#t_1","title":"\u539f\u59cb\u5bf9\u5076\u5185\u70b9\uff08t\u4e3b\u8981\u7528\u6765\u6539\u5584\u4e92\u8865\u677e\u5f1b\uff09","text":"<p>\u4e4b\u6240\u4ee5\u53eb\u539f\u59cb\u5bf9\u5076\u662f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5bf9\u5076\u95f4\u9699\u4e3a0\uff0c\u4e4b\u6240\u4ee5\u53eb\u5185\u70b9\u662f\u56e0\u4e3a\u6211\u4eec\u7528\u5230\u4e86\u5185\u70b9\u6cd5\u4e2d\u7684t\u3002\u8fd9\u91cc\u7684t\u4e0d\u518d\u662f\u8f6c\u5316\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u800c\u662f\u7528\u6765\u6539\u5584\u4e92\u8865\u677e\u5f1b\u6761\u4ef6\u3002</p> <ul> <li>\u5982\u679c\u95ee\u9898\u662f\u51f8\u7684\uff0c\u4e14\u6ee1\u8db3scater\u6761\u4ef6\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3\u5f3a\u5bf9\u5076\u5bf9\u5076\u95f4\u96990\uff0c\u4e5f\u5c31\u662f\u5bf9\u5076\u95ee\u9898\u548c\u539f\u95ee\u9898\u7b49\u4ef7</li> <li>\u6240\u4ee5\u89e3\u5bf9\u5076\u95ee\u9898\uff0c\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u4e00\u5b9a\u662f\u51f8\u7684\uff0c\u56e0\u4e3amaxmin\u9010\u70b9\u4e0b\u786e\u754c\u662f\u4fdd\u51f8\u8fd0\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u53bb\u6c42\u5bf9\u5076\u95ee\u9898</li> <li>\u6270\u52a8kkt\u6761\u4ef6\uff08\u5373\u539f\u6765\u7684\u677e\u5f1b\u4e92\u8865\u4e0d\u518d\u4e3a0\uff0c\u800c\u662f-1/t\uff09\u5199\u51fa\u6765\uff0c\u5199\u6210\u65b9\u7a0b\u7ec4\uff0c\u7528\u725b\u987f\u6cd5\u53bb\u89e3\u3002</li> <li>\u725b\u987f\u6cd5\u6c42\u89e3\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u65b9\u5411\uff0c\u5728\u6bcf\u4e00\u8f6e\u8fed\u4ee3\u4e2d\uff0c\u677e\u5f1b\u4e92\u8865\u4e0d\u7b49\u4e8e0\uff0c\u800c\u662f-1/t\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u5b83\u53bb\u903c\u8fd10\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u5076\u95f4\u9699\u53bb\u903c\u8fd10\uff0c\u4e00\u65e6\u63a5\u8fd10\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5bf9\u5076\u95f4\u9699\u7cfb\u63a5\u8fd10\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u627e\u5230\u4e86\u539f\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</li> </ul> <p>\u6838\u5fc3\u516c\u5f0f\uff0c\u6bcf\u4e00\u8f6e\u53bb\u66f4\u65b0t\uff0c\u5224\u65ad\u6839\u636e\u5f53\u524dt\u8ba1\u7b97KKT\u65b9\u7a0b\u7ec4\u7684\u725b\u987f\u4e0b\u964d\u65b9\u5411\uff0c\u7b97\u51fa\u6765\u7684\u4ee3\u7406\u5bf9\u5076\u95f4\u9699\u662f\u5426\u63a5\u8fd10\u3002 </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/#_14","title":"\u4f18\u7f3a\u70b9\u5bf9\u6bd4","text":"<ol> <li>\u7528\u4e8c\u6b21\u60e9\u7f5a\u6765\u8fd1\u4f3c\u7ea6\u675f\u95ee\u9898\u5728\u6700\u4f18\u70b9\u9644\u8fd1\u9700\u8981\u60e9\u7f5a\u9879\u7684\u7cfb\u6570\u8d8b\u8fd1\u4e8e\u65e0\u7a77\uff0c\u800c\u8fd9\u79cd\u8981\u6c42\u4f1a\u4f7f\u5f97\u6d77\u68ee\u77e9\u9635\u5f88\u5927\uff0c\u56e0\u6b64\u8fd1\u4f3c\u7684\u76ee\u6807\u51fd\u6570\u5f88\u4e0d\u7a33\u5b9a\u3002\u53ef\u4ee5\u7528ALM\u6216\u8005ADMM\u7684\u5bf9\u5076\u4e0a\u5347\u89e3\u51b3\u3002</li> <li>\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u548c\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u7f5a\u51fd\u6570\u4f7f\u76ee\u6807\u51fd\u6570\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u3002</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/","title":"\u5176\u4ed6\u51e0\u4f55\u77e5\u8bc6","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_1","title":"\u4e00\u4e2a\u70b9\u5728\u4e00\u4e2a\u7ebf\u6bb5\u4e0a\u7684\u6295\u5f71","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_2","title":"\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_3","title":"\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\uff08\u4e09\u79cd\u60c5\u51b5\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_4","title":"\u7ebf\u6bb5\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\uff08\u56db\u4e2a\u70b9\u5230\u5bf9\u65b9\u7ebf\u6bb5\u7684\u6700\u5c0f\u503c\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_5","title":"\u76f4\u7ebf\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\uff08\u4e24\u4e2a\u76f4\u7ebf\u4e2d\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\u7684\u5411\u91cf\u7684\u6a21\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_6","title":"\u786e\u5b9a\u70b9\u5728\u7ebf\u6bb5\u7684\u54ea\u4e2a\u65b9\u5411\uff08\u4e94\u79cd\u60c5\u51b5\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_7","title":"\u786e\u5b9a\u70b9\u5728\u4e24\u4e2a\u7ebf\u6bb5\u7684\u54ea\u4e2a\u65b9\u5411","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_8","title":"\u6c42\u4e24\u6761\u7ebf\u6bb5\u7684\u4ea4\u70b9","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_9","title":"\u79bb\u6563\u70b9\u6c42\u66f2\u7387","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#polyliner-tree","title":"\u6c42\u70b9\u5230polyline\u7684\u6700\u77ed\u8ddd\u79bb\uff08R-tree\u52a0\u901f\uff09","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#polygon","title":"\u5224\u65ad\u70b9\u662f\u5426\u5728polygon\u5185","text":"<p>\u5c04\u7ebf\u6cd5\uff1a </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_10","title":"\u5224\u65ad\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4","text":"<p>\u53c9\u4e58\u6cd5\uff1a\u53c9\u4e58\u53ef\u4ee5\u5224\u65ad\u70b9\u5728\u7ebf\u6bb5\u7684\u54ea\u4e00\u4fa7\uff0c\u5982\u679c\u4e24\u4e2a\u7ebf\u6bb5\u76f8\u4ea4\uff0c\u90a3\u4e48\u7ebf\u6bb5AB\u7684AB\u70b9\u5728\u7ebf\u6bb5CD\u7684\u4e24\u4fa7\uff0c\u7ebf\u6bb5CD\u7684CD\u70b9\u5728\u7ebf\u6bb5AB\u7684\u4e24\u4fa7\u3002 </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_11","title":"\u5224\u65ad\u7ebf\u6bb5\u4e0e\u5e73\u9762\u662f\u5426\u76f8\u4ea4","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_12","title":"\u5224\u65ad\u76f4\u7ebf\u662f\u5426\u5e73\u884c","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#_13","title":"\u5750\u6807\u8f6c\u6362","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#egoboot","title":"ego\u7cfb\u8f6cboot\u7cfb","text":"<p>egopose:\u65cb\u8f6c\u77e9\u9635R,\u5e73\u79fb\u5411\u91cfT ego\u7cfb\u7684\u70b9\uff1a\\(x_{ego},y_{ego}\\) \u8f6c\u5230boot\u7cfb\uff1a $$ \\begin{bmatrix}   x_{boot} \\   y_{boot} \\end{bmatrix} = R  \\begin{bmatrix}   x_{ego} \\  y_{ego} \\end{bmatrix} + T $$ \u9f50\u6b21\u5750\u6807\u5f62\u5f0f\uff1a </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%85%B6%E4%BB%96%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86/#bootego","title":"boot\u7cfb\u8f6cego\u7cfb","text":"<p>egopose:\u65cb\u8f6c\u77e9\u9635R,\u5e73\u79fb\u5411\u91cfT boot\u7cfb\u7684\u70b9\uff1a\\(x_{boot},y_{boot}\\) \u8f6c\u5230ego\u7cfb\uff1a $$ \\begin{bmatrix}   x_{ego} \\   y_{ego} \\end{bmatrix} = R^{-1} \\left( \\begin{bmatrix}   x_{boot} \\  y_{boot} \\end{bmatrix} - T \\right) $$</p> <p>\u9f50\u6b21\u5750\u6807\u5f62\u5f0f </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%9A%E4%BD%93%E8%BF%90%E5%8A%A8%E5%AD%A6/","title":"\u521a\u4f53\u8fd0\u52a8\u5b66","text":"<p>\u5728\u521a\u4f53\u52a8\u529b\u5b66\u4e2d\uff0c\u5982\u679c\u4f60\u77e5\u9053\u4e00\u4e2a\u521a\u4f53\u4e0a\u67d0\u4e00\u70b9\uff08\u4f8b\u5982\u70b9A\uff09\u7684\u7ebf\u901f\u5ea6\u548c\u521a\u4f53\u7684\u89d2\u901f\u5ea6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u5173\u7cfb\u5f0f\u6765\u8ba1\u7b97\u521a\u4f53\u4e0a\u4efb\u4f55\u5176\u4ed6\u70b9\uff08\u4f8b\u5982\u70b9B\uff09\u7684\u7ebf\u901f\u5ea6\u3002\u57fa\u672c\u7684\u5173\u7cfb\u5f0f\u662f\uff1a</p> \\[ \\vec{V_B} = \\vec{V_A} + \\vec{\\omega} \\times \\vec{r_{B/A}} \\] <p>\u5176\u4e2d\uff1a - \\(\\vec{V_B}\\) \u662f\u70b9B\u7684\u7ebf\u901f\u5ea6\uff08\u6211\u4eec\u60f3\u8981\u627e\u7684\uff09\u3002 - \\(\\vec{V_A}\\) \u662f\u70b9A\u7684\u5df2\u77e5\u7ebf\u901f\u5ea6\u3002 - \\(\\vec{\\omega}\\) \u662f\u521a\u4f53\u7684\u5df2\u77e5\u89d2\u901f\u5ea6\u3002 - \\(\\times\\) \u4ee3\u8868\u5411\u91cf\u53c9\u79ef\u3002 - \\(\\vec{r_{B/A}}\\) \u662f\u4ece\u70b9A\u5230\u70b9B\u7684\u4f4d\u7f6e\u77e2\u91cf\u3002</p> <p>\u89e3\u91ca\u4e00\u4e0b\u5404\u4e2a\u90e8\u5206\u7684\u542b\u4e49\uff1a - \\(\\vec{V_A}\\) \u662f\u5df2\u77e5\u7684\uff0c\u5b83\u662f\u70b9A\u7684\u7ebf\u901f\u5ea6\u3002 - \\(\\vec{\\omega} \\times \\vec{r_{B/A}}\\) \u8fd9\u90e8\u5206\u662f\u7531\u4e8e\u521a\u4f53\u7684\u65cb\u8f6c\u4ea7\u751f\u7684B\u70b9\u7684\u7ebf\u901f\u5ea6\u3002\u8fd9\u662f\u5229\u7528\u5411\u91cf\u53c9\u79ef\u627e\u5230B\u70b9\u7531\u4e8e\u521a\u4f53\u7ed5A\u70b9\u65cb\u8f6c\u5f15\u8d77\u7684\u7ebf\u901f\u5ea6\u3002</p> <p>\u6ce8\u610f\uff1a - \u5411\u91cf\u53c9\u79ef\u7684\u65b9\u5411\u9075\u5faa\u53f3\u624b\u6cd5\u5219\uff0c\u5373\u5982\u679c\u4f60\u7528\u4f60\u7684\u53f3\u624b\u6307\u4ece\\(\\vec{\\omega}\\)\u65b9\u5411\u5f2f\u66f2\u81f3\\(\\vec{r_{B/A}}\\)\u65b9\u5411\uff0c\u4f60\u7684\u5927\u62c7\u6307\u6307\u5411\u7684\u65b9\u5411\u5c31\u662f\\(\\vec{\\omega} \\times \\vec{r_{B/A}}\\)\u7684\u65b9\u5411\u3002 - \u5411\u91cf\u7684\u5927\u5c0f\u53ef\u4ee5\u7528\u6807\u91cf\u7684\u65b9\u5f0f\u5199\u51fa\uff0c\u65b9\u5411\u5219\u901a\u5e38\u7528\u5355\u4f4d\u5411\u91cf\u8868\u793a\u3002</p> <p>\u4e3a\u4e86\u5e94\u7528\u8fd9\u4e2a\u516c\u5f0f\uff0c\u4f60\u9700\u8981\u77e5\u9053A\u70b9\u5230B\u70b9\u7684\u4f4d\u7f6e\u77e2\u91cf\\(\\vec{r_{B/A}}\\)\uff0c\u8fd9\u901a\u5e38\u7531\u70b9B\u7684\u5750\u6807\u51cf\u53bb\u70b9A\u7684\u5750\u6807\u5f97\u5230\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u6240\u6709\u7684\u8fd9\u4e9b\u53d8\u91cf\u90fd\u662f\u77e2\u91cf\uff0c\u610f\u5473\u7740\u5b83\u4eec\u6709\u5927\u5c0f\u548c\u65b9\u5411\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;Eigen/Dense&gt;\n\nint main() {\n    // \u5b9a\u4e49\u5df2\u77e5\u53c2\u6570\n    Eigen::Vector3d V_A(1, 2, 3);  // A\u70b9\u7684\u901f\u5ea6 (\u5355\u4f4d: \u7c73/\u79d2)\n    Eigen::Vector3d omega(0, 0, 1);  // \u89d2\u901f\u5ea6 (\u5355\u4f4d: \u5f27\u5ea6/\u79d2)\n    Eigen::Vector3d r_A(1, 0, 0);  // A\u70b9\u7684\u4f4d\u7f6e\u5411\u91cf (\u5355\u4f4d: \u7c73)\n    Eigen::Vector3d r_B(2, 2, 0);  // B\u70b9\u7684\u4f4d\u7f6e\u5411\u91cf (\u5355\u4f4d: \u7c73)\n\n    // \u8ba1\u7b97\u4eceA\u70b9\u5230B\u70b9\u7684\u4f4d\u7f6e\u5411\u91cf\n    Eigen::Vector3d r_BA = r_B - r_A;\n\n    // \u8ba1\u7b97B\u70b9\u7684\u901f\u5ea6\n    Eigen::Vector3d V_B = V_A + omega.cross(r_BA);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    std::cout &lt;&lt; \"Velocity of point B: \\n\" &lt;&lt; V_B &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/","title":"\u5224\u65ad\u662f\u5426\u76f8\u4ea4","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/#_1","title":"\u5224\u65ad\u4e24\u4e2a\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4","text":"<p>\u5feb\u901f\u6392\u65a5+\u8de8\u7acb\u5b9e\u9a8c</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/#_2","title":"\u5feb\u901f\u6392\u65a5\u5b9e\u9a8c","text":"<p>\u6211\u4eec\u9996\u5148\u5224\u65ad\u4e24\u6761\u7ebf\u6bb5\u5728 x \u4ee5\u53ca y \u5750\u6807\u7684\u6295\u5f71\u662f\u5426\u6709\u91cd\u5408\u3002\u00a0 \u4e5f\u5c31\u662f\u5224\u65ad\u4e0b\u4e00\u4e2a\u7ebf\u6bb5\u4e2d x \u8f83\u5927\u7684\u7aef\u70b9\u662f\u5426\u5c0f\u4e8e\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u4e2d x \u8f83\u5c0f\u7684\u6bb5\u70b9\uff0c\u82e5\u662f\uff0c\u5219\u8bf4\u660e\u4e24\u4e2a\u7ebf\u6bb5\u5fc5\u7136\u6ca1\u6709\u4ea4\u70b9\uff0c\u540c\u7406\u5224\u65ad\u4e0b y\u3002</p> <p>  \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4ee3\u7801\u8868\u793a\u5982\u4e0b\uff1a</p> <pre><code>max(C.x,D.x)&lt;min(A.x,B.x) || max(C.y,D.y)&lt;min(A.y,B.y) ||max(A.x,B.x)&lt;min(C.x,D.x) || max(A.y,B.y)&lt;min(C.y,C.y)\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/#_3","title":"\u8de8\u7acb\u5b9e\u9a8c","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a\u5411\u91cf\uff1aP = (x1, y1)\uff0cQ = ( x2, y2 )\uff0c\u77e2\u91cf\u53c9\u79ef\u5b9a\u4e49\u4e3a\uff1aP \u00d7 Q = x1y2 - x2y1\u3002</p> <p>\u53c9\u79ef\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u6027\u8d28\u662f\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u7b26\u53f7\u5224\u65ad\u4e24\u77e2\u91cf\u76f8\u4e92\u4e4b\u95f4\u7684\u987a\u9006\u65f6\u9488\u5173\u7cfb\uff1a\u00a0 \u3000\u3000\u82e5 P \u00d7 Q &gt; 0 , \u5219 P \u5728 Q \u7684\u987a\u65f6\u9488\u65b9\u5411\u3002\u00a0 \u3000\u3000\u82e5 P \u00d7 Q &lt; 0 , \u5219 P \u5728 Q \u7684\u9006\u65f6\u9488\u65b9\u5411\u3002\u00a0 \u3000\u3000\u82e5 P \u00d7 Q = 0 , \u5219 P \u4e0e Q \u5171\u7ebf\uff0c\u4f46\u53ef\u80fd\u540c\u5411\u4e5f\u53ef\u80fd\u53cd\u5411\u3002</p> <p>\u8de8\u7acb\u5b9e\u9a8c\u539f\u7406\uff0c\u4e3b\u8981\u539f\u7406\uff1a</p> <p>\u8fdb\u884c\u53c9\u79ef\u8fd0\u7b97\uff0c\u5411\u91cfAC\u00d7\u5411\u91cfAB\uff0c\u5411\u91cfAD\u00d7\u5411\u91cfAB\uff0c\u5982\u679c\u4e24\u4e2a\u5411\u91cf\uff08AC\uff0cAD\uff09\u90fd\u6392\u5728\u4e24\u8fb9\uff0c\u90a3\u4e48\u4e24\u4e2a\u7ed3\u679c\u5219\u5206\u522b\u6307\u5411\u7eb8\u5185\u548c\u7eb8\u5916\uff0c\u8fd9\u6837\uff0c\u5c06\u4e0a\u9762\u53c9\u79ef\u7684\u7ed3\u679c\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8d1f\u503c\u3002 \u5f53\u6700\u7ec8\u70b9\u79ef\u7b49\u4e8e0\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u4e24\u6761\u91cd\u5408\uff0c\u8fd9\u65f6\u4e5f\u7b26\u5408\u6761\u4ef6\uff08\u7531\u4e8e\u901a\u8fc7\u4e86\u7b2c\u4e00\u6b65\u7684\u5feb\u901f\u6392\u65a5\u5b9e\u9a8c\uff09 \u4ea4\u6362\u4e24\u6761\u76f4\u7ebf\uff0c\u540c\u7406\u3002 \u7efc\u4e0a\uff0c\u6700\u7ec8\u70b9\u79ef\u5c0f\u4e8e0\u7684\u60c5\u51b5\u4e3a\u4e24\u6761\u76f4\u7ebf\u76f8\u4ea4\u7684\u60c5\u51b5\u3002</p> <pre><code>// An highlighted block\n#include&lt;iostream&gt;\nusing namespace std;\n\nstruct Line {\n    double x1;\n    double y1;\n    double x2;\n    double y2;\n};\n\n// \u5feb\u901f\u6392\u65a5\u5b9e\u9a8c  Rapid rejection experiments\nbool RapidRejExper(Line&amp; l1, Line&amp; l2) {\n    //l1\u7684\u6700\u5927x\uff0cy\u5c0f\u4e8el2\u7684\u6700\u5c0fx\uff0cy\uff08l1\u5728\u5de6\u8fb9\u548c\u4e0a\u8fb9\uff09\n    //l2\u7684\u6700\u5927x\uff0cy\u5c0f\u4e8el1\u7684\u6700\u5c0fx\uff0cy\n    if ((l1.x1 &gt; l1.x2 ? l1.x1 : l1.x2) &lt; (l2.x1 &lt; l2.x2 ? l2.x1 : l2.x2) ||\n        (l1.y1 &gt; l1.y2 ? l1.y1 : l1.y2) &lt; (l2.y1 &lt; l2.y2 ? l2.y1 : l2.y2) ||\n        (l2.x1 &gt; l2.x2 ? l2.x1 : l2.x2) &lt; (l1.x1 &lt; l1.x2 ? l1.x1 : l1.x2) ||\n        (l2.y1 &gt; l2.y2 ? l2.y1 : l2.y2) &lt; (l1.y1 &lt; l1.y2 ? l1.y1 : l1.y2)) {\n        return false;\n    }\n    return true;\n}\n\n// \u8de8\u7acb\u5b9e\u9a8c\nbool Cross(Line&amp; l1, Line&amp; l2) {\n    if ((((l1.x1 - l2.x1) * (l2.y2 - l2.y1) - (l1.y1 - l2.y1) * (l2.x2 - l2.x1)) *\n        ((l1.x2 - l2.x1) * (l2.y2 - l2.y1) - (l1.y2 - l2.y1) * (l2.x2 - l2.x1))) &gt; 0 ||\n        (((l2.x1 - l1.x1) * (l1.y2 - l1.y1) - (l2.y1 - l1.y1) * (l1.x2 - l1.x1)) *\n            ((l2.x2 - l1.x1) * (l1.y2 - l1.y1) - (l2.y2 - l1.y1) * (l1.x2 - l1.x1))) &gt; 0)\n    {\n        return false;\n    }\n    return true;\n}\n\n\nint main() {\n    Line l1, l2;\n    cin &gt;&gt; l1.x1 &gt;&gt; l1.y1 &gt;&gt; l1.x2 &gt;&gt; l1.y2;\n    cin &gt;&gt; l2.x1 &gt;&gt; l2.y1 &gt;&gt; l2.x2 &gt;&gt; l2.y2;\n    if (RapidRejExper(l1, l2) &amp;&amp; Cross(l1, l2)) {\n        cout &lt;&lt; \"Yes\";\n    }\n    else {\n        cout &lt;&lt; \"No\";\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/#_4","title":"\u5224\u65ad\u4e24\u4e2a\u77e9\u5f62\u662f\u5426\u76f8\u4ea4","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/#aa-box","title":"\u4e0d\u8003\u8651\u65cb\u8f6c\uff08AA-BOX\uff09\uff1a","text":"<p>\u53cd\u5411\u8003\u8651\uff1a\u5982\u679c\u4e0d\u76f8\u4ea4\u53ea\u6709\u56db\u79cd\u60c5\u51b5\uff1a</p> <p>A\u5728B\u7684\u5de6\u8fb9 \uff08A.r &lt; B.x\uff09 A\u5728B\u7684\u53f3\u8fb9 ( B.r &lt; A.x) A\u5728B\u7684\u4e0a\u8fb9 \uff08A.b &lt; B.y \uff09 A\u5728B\u7684\u4e0b\u8fb9 \uff08B.b &lt; A.y \uff09</p> <p>\u4e0a\u8ff0\u56db\u4e2a\u6761\u4ef6\uff0c\u53ea\u8981\u6ee1\u8db3\u4e00\u4e2a\u5c31\u4e0d\u76f8\u4ea4\u3002\u56e0\u6b64\u53d6\u6216\uff1a A.r &lt; B.x || B.r &lt; A.x || A.b &lt; B.y || B.b &lt;A.y</p> <p>\u53d6\u53cd\u5c31\u662f\u76f8\u4ea4\uff1a \uff01(A.r &lt; B.x || B.r &lt; A.x || A.b &lt; B.y || B.b &lt;A.y)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/#_5","title":"\u8003\u8651\u65cb\u8f6c\uff1a","text":"<p>GJK\u7b49\u65b9\u6cd5</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%8F%E6%96%B9%E5%B7%AE%E7%9F%A9%E9%98%B5/","title":"\u534f\u65b9\u5dee\u77e9\u9635","text":"<p> \u8fd8\u8981\u9664\u4ee5\u6570\u636e\u7684\u4e2a\u6570\uff08\u4e0d\u662f\u7279\u5f81\u7684\u4e2a\u6570\uff09 \u4e5f\u53ef\u4ee5\u5199\u6210\u00a0 \uff08X*X^T\uff09/n\u00a0 \u5176\u4e2dX\u4e2d\u6bcf\u4e00\u5217\u4e3a\u4e00\u4e2a\u5217\u5411\u91cf\u4ee3\u8868\u4e00\u4e2a\u6570\u636e\u7684\u5404\u4e2a\u7ef4\u5ea6-\u5747\u503c</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E6%8D%A2/","title":"\u56db\u5143\u6570\u4e0e\u6b27\u62c9\u89d2\u3001\u65cb\u8f6c\u77e9\u9635\u7684\u8f6c\u6362","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E6%8D%A2/#_1","title":"\u56db\u5143\u6570","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E6%8D%A2/#_2","title":"\u56db\u5143\u6570\u4e0e\u6b27\u62c9\u89d2\u7684\u8f6c\u6362","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E6%8D%A2/#_3","title":"\u6b27\u62c9\u89d2\u4e0e\u8f6c\u65cb\u8f6c\u77e9\u9635","text":"<p>\u5e38\u7528\u65cb\u8f6c\u987a\u5e8f\u662fZ-Y-X\uff0c\u5bf9\u5e94rpy\uff0c\u6307\u7684\u5c31\u662f\u5185\u65cb\uff08\u7ed5\u81ea\u8eab\u8f74\uff09Z-Y-X\u987a\u5e8f\u3002\u800c\u6b27\u62c9\u89d2\u8f6c\u6362\u6210\u65cb\u8f6c\u77e9\u9635\uff08\u76f8\u5bf9\u4e8e\u4e16\u754c\u5750\u6807\u7cfb\u7684\u65cb\u8f6c\u77e9\u9635\uff09\u901a\u5e38\u662f\u6309\u5916\u65cb\u65b9\u5f0f\uff08\u7ed5\u56fa\u5b9a\u8f74\uff09\uff0c\u5373X-Y-Z\u987a\u5e8f\uff0c\u6240\u4ee5\u65cb\u8f6c\u77e9\u9635\u4e3a\uff1a </p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E6%8D%A2/#_4","title":"\u56db\u5143\u6570\u4e0e\u65cb\u8f6c\u77e9\u9635","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E6%8D%A2/#axis-angle","title":"Axis-Angle\u4e0e\u56db\u5143\u6570","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/","title":"\u6392\u5217\u7ec4\u5408","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/#_1","title":"\u6392\u5217","text":"<p>\u4ecen\u4e2a\u7269\u54c1\u4e2d\u9009k\u4e2a\uff0c\u6709\u987a\u5e8f\uff1a</p> \\[ A_n^{k} = \\frac{{n!}}{{(n-k)!}} \\] <p>\u5176\u4e2d \"n\" \u662f\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u603b\u6570\uff0c\"r\" \u662f\u6211\u4eec\u60f3\u4ece\u4e2d\u9009\u62e9\u6392\u5217\u7684\u5143\u7d20\u7684\u6570\u91cf\uff0c\"!\" \u8868\u793a\u9636\u4e58\uff0c\u5373 \\(n! = n \\times (n-1) \\times \\dots \\times 3 \\times 2 \\times 1\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/#combination","title":"\u7ec4\u5408 (Combination)","text":"<p>\u7ec4\u5408\u4e0d\u5173\u5fc3\u5143\u7d20\u7684\u987a\u5e8f\u3002</p> \\[ C_n^{k}  = \\binom{n}{r} = \\frac{{n!}}{{k!(n-k)!}} \\] <p>\u8fd9\u91cc \\(\\binom{n}{r}\\) \u8bfb\u4f5c \"n choose r\"\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%96%B9%E5%B7%AE%E4%B8%8E%E5%9D%87%E5%80%BC%E7%9A%84%E5%85%B3%E7%B3%BB/","title":"\u65b9\u5dee\u4e0e\u5747\u503c\u7684\u5173\u7cfb","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E6%AD%A3%E5%AE%9A%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%87%B8%E4%BC%98%E5%8C%96/","title":"\u6b63\u5b9a\u77e9\u9635\u4e0e\u51f8\u4f18\u5316","text":"<p>\u51f8\u4f18\u5316\u76f8\u5173</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%AD%A3%E5%AE%9A%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%87%B8%E4%BC%98%E5%8C%96/#1","title":"1 \u51f8\u4f18\u5316\u95ee\u9898\u7684\u5b9a\u4e49\uff1a","text":"<p>\u76ee\u6807\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u4f18\u5316\u53d8\u91cf\u7684\u53ef\u884c\u57df\u662f\u51f8\u96c6\uff0c\u8fd9\u6837\u7684\u95ee\u9898\u79f0\u4e3a\u51f8\u4f18\u5316\u95ee\u9898\u3002</p> <p>\u51f8\u4f18\u5316\u4e00\u5b9a\u6709\u5168\u5c40\u6700\u5c0f\u503c\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u7684hessian\u77e9\u9635\u662f\u6b63\u5b9a\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u4e00\u5b9a\u6709\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u7684hessian\u77e9\u9635\u662f\u8d1f\u5b9a\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u4e00\u5b9a\u6709\u5168\u5c40\u6700\u5927\u503c\u3002 \u5982\u679chessian\u77e9\u9635\u4e0d\u5b9a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u6709\u978d\u70b9\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%AD%A3%E5%AE%9A%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%87%B8%E4%BC%98%E5%8C%96/#2","title":"2\u6b63\u5b9a\u77e9\u9635\u7684\u5224\u65ad\u65b9\u6cd5","text":"<ul> <li>\u6b63\u5b9a\u77e9\u9635 Positive definite matrices</li> </ul> <p>\u7ed9\u5b9a\u4e00\u4e2a2x2\u77e9\u9635\u00a0\uff0c\u6709\u56db\u4e2a\u9014\u5f84\u5224\u5b9a\u77e9\u9635\u662f\u5426\u6b63\u5b9a\u77e9\u9635\uff1a</p> <ol> <li>\u7279\u5f81\u503c\uff1a\u00a0\u5168\u90e8\u5927\u4e8e0</li> <li>\u884c\u5217\u5f0f\u6240\u6709\u5b50\u884c\u5217\u5f0f\u5927\u4e8e0</li> <li>\u8868\u8fbe\u5f0f\u00a0\\(x^TAx&gt;0\\)\uff08x=0\u9664\u5916\uff09\u3002\u901a\u5e38\u8fd9\u5c31\u662f\u6b63\u5b9a\u7684\u5b9a\u4e49\uff0c\u800c\u524d\u4e09\u6761\u662f\u7528\u6765\u9a8c\u8bc1\u6b63\u5b9a\u6027\u7684\u6761\u4ef6\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a</li> </ol> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%AD%A3%E5%AE%9A%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%87%B8%E4%BC%98%E5%8C%96/#3","title":"3 \u51f8\u51fd\u6570\u548c\u51f8\u96c6\u7684\u5b9a\u4e49","text":"<p>\u51f8\u51fd\u6570&gt;=0\uff0c\u5f3a\u51f8\u51fd\u6570&gt;0s</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%AD%A3%E5%AE%9A%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%87%B8%E4%BC%98%E5%8C%96/#4","title":"4. \u6b63\u5b9a\u77e9\u9635\u4e0e\u51f8\u4f18\u5316\u7684\u5173\u7cfb\uff1a","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\uff0c\u5982\u679c\u76ee\u6807\u51fd\u6570\u7684\u4e8c\u9636\u5bfc\u6570\u662f\u534a\u6b63\u5b9a\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u662f\u51f8\u51fd\u6570\u3002 \u6bd4\u5982\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff0c \\(\\(f(x) = \\frac{1}{2}(x-x_0)^T H(x-x_0)+ g^T(x-x_0)+c\\)\\) $$st. Ax \\leq b $$</p> <ul> <li> <p>\u5bf9\u4e8eH\u77e9\u9635\uff0c\u5982\u679c\u662f\u534a\u6b63\u5b9a\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u5168\u5c40\u6700\u5c0f\u503c\u7684x\u53ef\u80fd\u4e0d\u552f1\uff0c\u53ef\u80fd\u591a\u4e2ax\u6216\u8005\u65e0\u7a77\u591a\u4e2ax\u90fd\u6ee1\u8db3\u5168\u5c40\u6700\u5c0f\u503c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f18\u5316\u7b97\u6cd5\u53ef\u80fd\u4f1a\u6536\u655b\u5230\u4efb\u610f\u4e00\u4e2a\u5168\u5c40\u6700\u5c0f\u503c\u6216\u8005\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u800c\u65e0\u6cd5\u4fdd\u8bc1\u627e\u5230\u552f\u4e00\u7684\u5168\u5c40\u6700\u5c0f\u503c\u3002</p> </li> <li> <p>\u5982\u679cH\u77e9\u9635\u662f\u6b63\u5b9a\u7684\uff0c\u90a3\u4e48\u5b58\u5728\u552f\u4e00\u7684\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u5bf9\u5e94\u552f\u4e00\u4e00\u4e2ax\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%B3%B0%E5%8B%92%E5%B1%95%E5%BC%80%E4%B8%8Ejacobi%E7%9F%A9%E9%98%B5/","title":"\u6cf0\u52d2\u5c55\u5f00\u4e0ejacobi\u77e9\u9635","text":"<ol> <li>\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\u6cf0\u52d2\u5c55\u5f00\u53ea\u5728\u53c2\u8003\u70b9\u9644\u8fd1\u662f\u51c6\u786e\u7684\uff0c\u5982\u679c\u4e0d\u5728\u9644\u8fd1\u5219\u4e0d\u51c6\u786e</li> <li>\u4e00\u5143\u51fd\u6570\u7684\u6cf0\u52d2\u5c55\u5f00</li> <li>\u591a\u5143\u51fd\u6570\u7684\u6cf0\u52d2\u5c55\u5f00 </li> </ol> <p>4.jacobi\u77e9\u9635 </p> <p>\u4e00\u9636\u6cf0\u52d2\u5c55\u5f00 </p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/000_summary/","title":"Summary","text":"<p>There are the notes I took while learning the book The Calculus Lifesaver</p> <p>TODO:</p> <ul> <li> add last chapter of the book</li> <li> add mind map for this course</li> </ul> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/","title":"Functions","text":"<p>A <code>function</code> is a rule for transforming an object into another object. The object you start with is called the <code>input</code>, and comes from some set called the <code>domain</code>. What you get back is called the <code>output</code>; it comes from some set called the <code>codomain</code>, and the output's value is within a <code>range</code>. A function must assign a unique output for each valid input.</p> <p>We say that a function \\(f\\) is:</p> <ul> <li><code>even</code>, if \\(f(-x) = f(x)\\) for all \\(x\\) in the domain of \\(f\\); </li> <li><code>odd</code>, if \\(f(-x) = -f(x)\\) for all \\(x\\) in the domain of \\(f\\).</li> </ul> <p>The graph of an even function has mirror symmetry about the y-axis and the graph of an odd function has \\(180^\\circ\\) point symmetry about the origin.</p> <p>Let's look at some common functions and their graphs.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#linear-functions","title":"Linear Functions","text":"<p>Functions of the form \\(f(x) = mx + b\\) are called <code>linear</code>. There's a good reason for this: the graph of these functions are lines. The slop of the line is given by \\(m\\), and the y-intercept is equal to \\(b\\). To sketch the graph of a linear function, you only need to identify two points on the graph. Set \\(x = 0\\), you get a point \\((0, b)\\), and set \\(y = 0\\) you get another point \\((-\\frac{b}{a}, 0)\\). Examples are like this:</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#polynomials","title":"Polynomials","text":"<p>These are functions built out of nonnegative integer powers of \\(x\\). You start with the building blocks \\(1\\), \\(x\\), \\(x^2\\), \\(x^3\\), and so on, and you are allowed to multiply these basic functions by numbers and add a finite number of them together. The amount that you multiply the building block \\(x^n\\) by is called the <code>coefficient</code> of \\(x^n\\). The highest number \\(n\\) such that \\(x^n\\) has a non zero coefficient is called the <code>degree</code> of the polynomial. The mathematical way to write a general polynomial of degree \\(n\\) is:</p> \\[ p(x) = a_n x^n + a_{n - 1}x^{n - 1} + ... + a_2x^2 + a_1x + a_0 \\] <p>where \\(a_n\\) is the coefficient of \\(x^n\\), \\(a_{n - 1}\\) is the coefficient of \\(x^{n - 1}\\), ans so on down to \\(a_0\\), which is the coefficient of \\(1\\).</p> <p>Since the functions \\(x^n\\) are the building blocks of all polynomials, you should know what their graphs look like. The even powers mostly look similar to each other, and the same can be said for the odd powers. Here's what the graphs look like, from \\(x^0\\) up to \\(x^7\\):</p> <p></p> <p>Sketching the graphs of more general polynomials is more difficult. Even finding the x-intercepts is often impossible unless the polynomial is very simple. There is one aspect of the graph that is fairly straightforward, which is what happens at the far left and right sides of the graph. This is determined by the so-called <code>leading coefficient</code>, which is the coefficient of the highest-degree term.In fact, it only matters whether the leading coefficient is positive or negative. It also matters whether the degree of the polynomial is odd or even; so there are four possibilities for what the edges of the graph can look like:</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#rational-functions","title":"Rational functions","text":"<p>The functions with the form:</p> \\[ f(x) = \\frac{p(x)}{q(x)} \\] <p>are called <code>Rational functions</code>, where <code>p</code> and <code>q</code> are polynomials. Rational functions will pop up in many different contexts, and the graphs can look really different depending on the polynomials <code>p</code> and <code>q</code>. The simplest examples of rational functions are polynomials themselves, which arise when <code>q(x)</code> is the constant polynomial \\(1\\). The next simplest examples are the functions \\(\\frac{1}{x^n}\\), where \\(n\\) is a positive integer. Let's look at some of the graph of these functions:</p> <p></p> <p>The odd powers look similar to each other, and the even powers look similar to each other too. </p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#exponential-functions","title":"Exponential functions","text":"<p>Functions with the form:</p> \\[ f(x) = a \\cdot b^x \\] <p>are called <code>Exponential functions</code>, where \\(a\\) is a coefficient, \\(b\\) is a positive real number, and \\(x\\) occurs as an <code>exponent</code>.</p> <p>The graph of \\(f(x) = b^x\\) for any other base \\(b &gt; 0\\) looks similar to this:</p> <p></p> <p>and the graph of \\(f(x) = b^{-x}\\) is just the reflection of \\(f(x) = b^{x}\\) in <code>y-axis</code>.</p> <p></p> <p>If \\(a\\) is negtive, the graph will be the reflection of its positive one.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#logarithm-functions","title":"Logarithm functions","text":"<p>When a functions has the form:</p> \\[ f(x) = a \\cdot \\log_b(x) \\] <p>we called it a <code>logarithm function</code>. Logarithm functions are the inverse functions of the exponential functions. Using the line \\(y = x\\) as a mirror, the graph of \\(y = \\log_{2}(x)\\) looks like this:</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#trig-functions","title":"Trig functions","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#definitions","title":"Definitions","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#radians","title":"Radians","text":"<p>The first thing we need to know is the notion of <code>radian</code>. Instead of saying that there are 360 degrees in a full revolution, we'll say that there are \\(2\\pi\\) radians. The arc length of a wedge of the circle is the angle of the wedge:</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#trigonometry-functions","title":"Trigonometry Functions","text":"<p>Suppose you have a right-angled triangle and one of the angles, other than the right angle, is labeled \\(\\theta\\), like this:</p> <p></p> <p>the formulas are defined:</p> \\[ \\sin(\\theta) = \\frac{opposite}{hypotenuse}, \\cos(\\theta) = \\frac{adjacent}{hypotenuse}, \\tan(\\theta) = \\frac{opposite}{adjacent} \\] <p>We'll also be using the reciprocal functions, which are defined as:</p> \\[ \\csc(x) = \\frac{1}{\\sin(x)}, \\sec(x) = \\frac{1}{\\cos(x)}, \\cot(x) = \\frac{1}{\\tan(x)} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#value-of-trigonometry","title":"Value of Trigonometry","text":"<p>Now it's time to figure out the value of trig functions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#with-the-domain-of-0-fracpi2","title":"With the Domain of \\(0 - \\frac{\\pi}{2}\\)","text":"<p>It may be really difficult to calculate the value of trig functions with out a calculator, but some common angles's vlaue you must keep in mind:</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#with-the-domain-of-0-2pi","title":"With the Domain of \\(0 - 2\\pi\\)","text":"<p>If an angle is bigger than \\(2\\pi\\), for example, \\(\\frac{7\\pi}{6}\\), we can draw it on the coordinate plane:</p> <p></p> <p>So the angle \\(7\\pi/6\\) is in the third quadrant. We've chosen the point on the ray which has distance \\(r = 1\\) from the origin, then dropped a perpendicular. The angle between the ray and the \\(-\\pi\\) axis is \\(\\pi / 6\\), and we already know that \\(\\sin(\\theta) = \\frac{y}{1}\\), \\(y &lt; 0\\), so we got:</p> \\[ \\sin(\\frac{7\\pi}{6}) = -\\sin(\\frac{\\pi}{6}) = -\\frac{1}{2} \\] <p>The key in the previous example is that \\(\\sin(\\frac{7\\pi}{6})\\) is related to \\(\\sin(\\frac{\\pi}{6})\\), where \\(\\frac{\\pi}{6}\\) is the reference angle for \\(\\frac{7\\pi}{6}\\). It's not difficult to find that the trig functions of any anlge is puls or minus value of the reference angle. This can be described as the <code>ASTC Method</code>:</p> <p></p> <p>The letters <code>ASTC</code> on the diagram are all you need to remember. <code>A</code> stands for <code>All</code>, meaning all the functions are positive in the first quadrant; the other letters obviously stand for sin, tan, and cos, respectively.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#with-the-domain-outside-0-2pi","title":"With the Domain outside \\(0 - 2\\pi\\)","text":"<p>If the angle is bigger than \\(2\\pi\\) or less than \\(0\\), we can simple add or subtract multiples of \\(2\\pi\\) until you get between \\(0\\) and \\(2\\pi\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#graphs","title":"Graphs","text":"<p>It's really useful to remember what the graphs of the sin, cos, and tan functions look like. These functions are all <code>periodic</code>, meaning that they repeat themselves over and over again from left to right:</p> <p> </p> <p>It's also worthwhile learning the graph of \\(y = \\sec(x)\\), \\(y = \\csc(x)\\), and \\(y = \\cot(x)\\):</p> <p> </p> <p>From their graphs, we can get the following symmetry properties:</p> <p>\\(\\sin(x)\\), \\(\\tan(x)\\), \\(\\cot(x)\\), and \\(csc(x)\\) are odd functions of \\(x\\). \\(\\cot(x)\\) and \\(\\sec(x)\\) are even functions of \\(x\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#identities","title":"Identities","text":"<p>There are relations between trig functions which will come in handy. </p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#tan-and-cot","title":"\\(tan\\) and \\(cot\\)","text":"<p>First, tan and cot may be expressed in terms of sin and cos as follows:</p> \\[ \\tan(x) = \\frac{\\sin(x)}{\\cos(x)}, \\cot(x) = \\frac{\\cos(x)}{\\sin(x)} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#pythagoras-theorem","title":"Pythagoras' Theorem","text":"<p>The most important of all the trig identities is <code>Pythagoras' Theorem</code>:</p> \\[ \\cos^2(x) + \\sin^2(x) = 1 \\] <p>Now divide this equation by \\(\\cos^2(x)\\), we got:</p> \\[ 1 + \\tan^2(x) = \\sec^2(x) \\] <p>If you dived the <code>Pythagorean equation</code> above by \\(\\sin^2(x)\\), you got:</p> \\[ \\cot^2(x) + 1 = \\csc^2(x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#trig-functions-and-co-trig-functions","title":"trig functions and co-trig functions","text":"<p>There are some more relationships between trig functions. Have you noticed that some of the names begin with the syllable <code>co</code>? This is short for the word <code>complementary</code>. The fact is that we have the following general relationship:</p> \\[ trig functions(x) = co-trig functions(\\frac{\\pi}{2} - x) \\] <p>So in particular, we have</p> \\[ \\sin(x) = \\cos(\\frac{\\pi}{2} - x), \\tan(x) = \\cot(\\frac{\\pi}{x} - x), \\sec(x) = \\csc(\\frac{\\pi}{2} - x) \\] <p>It even works when the trig function is already a <code>co</code>:</p> \\[ \\cos(x) = \\sin(\\frac{\\pi}{2} - x), \\cot(x) = \\tan(\\frac{\\pi}{2} - x), \\csc(x) = \\sec(\\frac{\\pi}{2} - x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/00_functions/#sums-of-angles","title":"Sums of Angles","text":"<p>Specifically, you should remember that:</p> \\[ \\sin(A + B) = \\sin(A)\\cos(B) + \\cos(A)\\sin(B) \\] \\[ \\cos(A + B) = \\cos(A)\\cos(B) - \\sin(A)\\sin(B) \\] <p>It's useful to remember that you can switch all the pluses and minuses to get some related formulas:</p> \\[ \\sin(A - B) = \\sin(A)\\cos(B) - \\cos(A)\\sin(B) \\] \\[ \\cos(A - B) = \\cos(A)\\cos(B) + \\sin(A)\\sin(B) \\] <p>And if \\(A = B\\), we got:</p> \\[ \\sin(2x) = 2\\sin(x)\\cos(x) \\] \\[ \\cos(2x) = 2\\cos^2(x) - 1 = 1 - 2\\sin^2(x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/","title":"Limits","text":"<p>Calculus wouldn't exist without the concept of limits. It turns out that it's pretty tricky to define a limit properly, but you can get an intuitive understanding of limits even without going into the glory details</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#the-basic-idea","title":"The basic idea","text":"<p>We start with some function \\(f\\) and a point on the \\(x\\)-axis which we call \\(a\\). Here is what we'd like to understand:</p> <p>What does \\(f(x)\\) look like when \\(x\\) is really close to \\(a\\), but not equal to \\(a\\) ? </p> <p>Suppose that we have a a function \\(f\\) with domain \\(\\mathbb{R}\\backslash\\{2\\}\\), and set \\(f(x) = x - 1\\) on this domain. Formally we wright:</p> \\[ f(x) = x - 1 \\quad when \\quad x \\ne 2 \\] <p>The graph of the function is like:</p> <p></p> <p>You can get as close as you want to \\(1\\), without actually getting to \\(1\\) by letting \\(x\\) be close enough to \\(2\\). Without getting bogged down, we just write:</p> \\[ \\lim_{x \\to 2}f(x) = 1 \\] <p>which read as:</p> <p>the limit, as \\(x\\) goes to \\(2\\), of \\(f(x)\\) is equal to \\(1\\). As \\(x\\) journeys along the number line from the left or the right toward the number \\(2\\), the value of \\(f(x)\\) gets very very close to \\(1\\)(and stays close!).</p> <p>And what if the function has special value at limit point? For example, we have:</p> \\[ g(x) =  \\begin{cases} x - 1 &amp; if \\quad x \\ne 2, \\\\ 3 &amp; if \\quad x = 2. \\end{cases} \\] <p>What is \\(\\lim_{x \\to 2}g(x)\\)? The tricky here is that the value of \\(g(x)\\) is irrenlevent with \\(\\lim_{x \\to 2}g(x)\\), it's only the values of \\(g(x)\\) where  \\(x\\) is close to \\(2\\), not actually at 2, which matter.</p> <p>So, \\(\\lim_{x \\to 2}g(x) = 1\\) as before, even though \\(g(x) = 3\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#left-hand-and-right-hand-limits","title":"Left-hand and right-hand limits","text":"<p>If we have a function graph like this: </p> <p>Of course \\(h(x) = 2\\) is irrelevant as far as the limiting behavior is concerned.  </p> <p>Imagine that you're the hiker in the picture, climbing up and down the hill. The value of \\(h(x)\\) tells you how high up you are when your horizontal position is at \\(x\\). So if you walk right ward from the left of the picture, you get the <code>left-hand limit</code> of \\(h(x)\\) at \\(x = 3\\) is equal to \\(1\\). On the other hand, if you are walking leftward from the right-hand side of the picutre, your height becomes close to \\(-2\\) as your horizontal position gets close to \\(x =3\\). This means that the <code>right-hand limit</code> is equal to \\(-2\\).</p> <p>We can summarize our findings from above by writing: $$ \\lim_{x \\to 3^-} h(x) = 1 $$</p> <p>and</p> \\[ \\lim_{x \\to 3^+} h(x) = -2 \\] <p>The minus sign after \\(3\\) means the limit is a <code>left-hand limit</code>, and the plus sign means the limit is a <code>right-hand limit</code>.</p> <p>The regular two-sided limit at \\(x = a\\) exists exactly when both left-hand and right-hand limits at \\(x = a\\) exist and are equal to each other. If the left-hand limit and right-hand limit are not equal, the two-sided limit does not exist, written as:</p> \\[ \\lim_{x \\to 3} h(x) = DNE \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#limits-at-infty-and-infty","title":"Limits at \\(\\infty\\) and \\(-\\infty\\)","text":"<p>In above parts we've concentrated on the behavior of a function near a point \\(x = a\\), however sometimes it's important to understand how a function behaves when \\(x\\) gets really huge. We defines the <code>large</code> and <code>small</code> number as this:</p> <p>A number is</p> <ul> <li><code>large</code>, if its absolute value is really big number;</li> <li><code>small</code>, if it is really close to \\(0\\)(but not actually equal to \\(0\\)).</li> </ul> <p>We can say the limit at infinity as:</p> <ul> <li>\"f has a right-hand horizontal asymptote at y = L\", means:</li> </ul> \\[ \\lim_{x \\to \\infty} f(x) = L \\] <ul> <li>\"f has a left-hand horizontal asymptote at y = M\", means:</li> </ul> \\[ \\lim_{x \\to -\\infty} f(x) = M \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#two-common-misconceptions-about-asymptotes","title":"Two common misconceptions about asymptotes","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#a-function-doesnt-have-to-have-the-same-horizontal-asymptote-on-the-left-as-on-the-right","title":"A function doesn't have to have the same horizontal asymptote on the left as on the right.","text":"<p>For example, the graph of \\(y = tan^{-1}(x)\\) looks like:</p> <p></p> <p>it has the limit of:</p> <ul> <li>\\(\\lim_{x \\to \\infty} tan^{-1}(x) = \\frac{\\pi} {2}\\)</li> <li>\\(\\lim_{x \\to -\\infty} tan^{-1}(x) = -\\frac{\\pi} {2}\\)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#a-function-can-cross-its-asymptote","title":"A function can cross its asymptote.","text":"<p>The graph of \\(y = \\frac{\\sin(x)}{x}\\) is like:</p> <p></p> <p>and it crosses its aymptote many times.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/01_limits/#the-sandwich-principle","title":"The sandwich principle","text":"<p>The <code>sandwich principle</code>, also known as <code>squeeze principle</code>, says that:</p> <p>If a function \\(f\\) is sandwiched between two functions \\(g\\) and \\(h\\) that converge to the same limit \\(L\\) as \\(x \\to a\\), then \\(f\\) also converges to \\(L\\) as \\(x \\to a\\).</p> <p>There is a similar version of the sandwich principle for one-sided limits, except this time the inequality \\(g(x) &lt; f(x) &lt; h(x)\\) only has to hold for \\(x\\) on the side of \\(a\\) that you care about. </p> <p>For example, the function \\(f(x) = x sin(\\frac{1}{x})\\) is sandwiched by \\(h(x) = x\\) and \\(g(x) = -x\\):</p> <p></p> <p>we can say that:</p> \\[ \\lim_{x \\to +0} x \\sin(\\frac{1}{x}) = 0. \\] <p>In summary if:</p> \\[ g(x) \\le f(x) \\le h(x) \\] <p>for all \\(x\\) near \\(a\\), and</p> \\[ \\lim_{x \\to a} g(x) = \\lim_{x \\to a} h(x) = L \\] <p>then:</p> \\[ \\lim_{x \\to a} f(x) = L. \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/02_limits_polynomials/","title":"Limit Problems of Polynomials","text":"<p>When you're talking about the limit of a ratio of two polynomials, it's really important to notice where the limit is being taken. In particular, the techniques for dealing with \\(x \\to \\infty\\) and \\(x \\to a\\) (some finite \\(a\\)) are completely different.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/02_limits_polynomials/#limits-involving-rational-functions-as-x-to-a","title":"Limits Involving Rational Functions as \\(x \\to a\\)","text":"<p>If the denominator is not \\(0\\), you can just substitute the variable \\(x\\) with its value:</p> \\[ \\lim_{x \\to -1} \\frac{x^2 - 3x + 2} {x - 2} = \\frac{(-1)^2 - 3(-1) + 2}{-1 - 2} = \\frac{6}{-3} = -2 \\] <p>But if you want to find:</p> \\[ \\lim_{x \\to 2} \\frac{x^2 - 3x + 2} {x - 2} \\] <p>the substitutiong method may not work, you'll get \\((4 - 6 + 2) / (2 - 2)\\), which is \\(0 / 0\\). This is called an indeterminate form. The technique we used to solve this is called <code>factoring</code>:</p> \\[ \\lim_{x \\to 2} \\frac{x^2 - 3x + 2} {x - 2} = \\lim_{x \\to -2} \\frac{(x - 2)(x - 1)} {x - 2} = \\lim_{x - 2}(x - 1) \\] <p>Now we plug \\(x = 2\\) into the expression \\((x - 1)\\), then we get \\(1\\). That's the value of the limit we're looking for.</p> <p>In addition to knowing how to factor quadratics, it's really useful to know the formula for the difference of two cubes:</p> \\[ a^3 - b^3 = (a - b)(a^2 + ab + b^2) \\] <p>But what if the denominator is \\(0\\) but the numerator is not \\(0\\)? There are four types of behavior that could arise: </p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/02_limits_polynomials/#limits-involving-square-roots-as-x-to-a","title":"Limits Involving Square Roots as \\(x \\to a\\)","text":"<p>Consider the following limit:</p> \\[ \\lim_{x \\to 5} \\frac{\\sqrt{x^2 - 9} - 4} {x - 5} \\] <p>If you plug in \\(x = 5\\), you get the indeterminate form \\(0 / 0\\). What you need to do is multiply and divide by \\(\\sqrt{x^2 - 9} + 4\\), which is called <code>conjugate expression</code> of \\(\\sqrt{x^2 - 9} - 4\\):</p> \\[ \\lim_{x \\to 5} \\frac{\\sqrt{x^2 - 9} - 4} {x - 5} = \\lim_{x \\to 5} \\frac{\\sqrt{x^2 - 9} - 4} {x - 5} \\times \\frac{\\sqrt{x^2 - 9} + 4} {\\sqrt{x^2 - 9} + 4} = \\lim_{x \\to 5} \\frac{x + 5} {\\sqrt{x^2 - 9} + 4} = \\frac{10}{8} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/02_limits_polynomials/#limits-involving-rational-functions-as-x-to-infty","title":"Limits Involving Rational Functions as \\(x \\to \\infty\\)","text":"<p>In symbols, we are now trying to find limits of the form:</p> \\[ \\lim_{x \\to \\infty} \\frac{p(x)}{q(x)} \\] <p>where p and q are polynomials.</p> <p>The very important property of a polynomial:</p> <p>When x is large, the leading term dominates.</p> <p>And we have the theoram:</p> \\[ \\lim_{x \\to \\infty} \\frac{C}{x^n} = 0 \\] <p>For example, the limit is solved:</p> \\[ \\lim_{x \\to \\infty} \\frac{3x^3 - 1000x^2 + 5x - 7} {3x^3} = \\lim_{x \\to \\infty}(1 - \\frac{1000}{3x} + \\frac{5}{3x^2} - \\frac{7}{3x^3}) = 1 - 0 + 0 + 0 = 1 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/02_limits_polynomials/#limits-involving-poly-type-function-as-x-to-infty","title":"Limits Involving Poly-type Function as \\(x \\to \\infty\\)","text":"<p>The principles for poly-type functions are similar to those for polynomials, except that this time it may not be so clear what the leading term is.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/02_limits_polynomials/#limits-involving-rational-functions-as-x-to-infty_1","title":"Limits Involving Rational Functions as \\(x \\to -\\infty\\)","text":"<p>Now we solve the limits of the form:</p> \\[ \\lim_{x \\to \\infty} \\frac{p(x)} {q(x)} \\] <p>where p and q are polynomials or even poly-type functions.</p> <p>All the principles we've been using apply equally well here.</p> <p>The only situation we need to pay attention is:</p> <p>if \\(x &lt; 0\\) and you want to write \\(^n\\sqrt{x^y} = x^m\\), the only time you need a minus sign in front of \\(x^m\\) is when \\(n\\) is even and m is odd.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/","title":"Continuity and Differentiability","text":"<p>Now we're going to look at two types of <code>smoothness</code>:</p> <ul> <li><code>continuity</code>, which means the graph now has to be drawn in one piece, whithout taking the pen off the page;</li> <li><code>differentiability</code>, which means there are no sharp corners in the graph.</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#continuity","title":"Continuity","text":"<p>The intuition of continuity is that you can draw the graph of the function in one piece without lifting your pen off the page.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#continuity-at-a-point","title":"Continuity at A Point","text":"<p>When we talk about continuity at a point, we want a stream of points \\((x, f(x))\\) which get closer and closer to the point \\((a, f(a))\\). In other words, as \\(x \\to a\\) we need \\(f(x) \\to f(a)\\). We can now give a proper definition:</p> <p>A function \\(f\\) is <code>continuity</code> at \\(x = a\\) if \\(\\lim_{x \\to a} f(x) = f(a)\\)</p> <p>So if a function is continuity, it requires:</p> <ol> <li>The two-side limit \\(\\lim_{x \\to a}f(x)\\) exists(and is finite);</li> <li>The function is defined at \\(x = a\\); that is, \\(f(a)\\) exists(and is finite);</li> <li>The two above quantities are equal: \\(\\lim_{x \\to a}f(x) = f(a)\\)</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#continuity-on-an-interval","title":"Continuity on An Interval","text":"<p>We now know what it means for a function to be continuous at a single point, we extend this definition and say that a function \\(f\\) is continuous on the interval \\((a, b)\\) if it is continuous at every point in the interval.</p> <p>We say a function \\(f\\) is continuous on \\([a, b]\\) if:</p> <ol> <li>the function \\(f\\) is continuous at every point in \\((a, b)\\);</li> <li>the function \\(f\\) is right-continuous at \\(x = a\\), that is, \\(\\lim_{x \\to a^+}f(x)\\) exists(and is finite), \\(f(a)\\) exists, and these two quantities are equal; </li> <li>the function \\(f\\) is left-continuous at \\(x = a\\), that is, \\(\\lim_{x \\to b^-}f(x)\\) exists(and is finite), \\(f(b)\\) exists, and these two quantities are equal. ;</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#the-intermediate-value-theoremivt","title":"The Intermediate Value Theorem(IVT)","text":"<p>Knowing that a function is continuous brings some benefits:</p> <ol> <li>Intermediate Value Theoram(IVT);</li> <li>Max-Min Theorem.</li> </ol> <p>We can state the Intermediate Value Theorem as:</p> <p>If \\(f\\) is continuous on \\([a, b]\\) and \\(f(a) &lt; 0\\) and \\(f(b) &gt; 0\\), then there is at least one number \\(c\\) in the interval \\((a, b)\\) such that \\(f(c) = 0\\). The same is true if instread \\(f(a) &gt; 0\\) and \\(f(b) &lt; 0\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#maxima-and-minima-of-continuous-functions","title":"Maxima and Minima of Continuous Functions","text":"<p>The Max-Min Theorem can be stated as:</p> <p>If \\(f\\) is continuous on \\([a, b]\\), then \\(f\\) has at least one maximum and one minimum on \\([a, b]\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#differentiability","title":"Differentiability","text":"<p>The differentiablility essentially means that the function has a derivative.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#instantaneous-velocity","title":"Instantaneous Velocity","text":"<p>How can we measure the velocity of the car at a given instant? The idea is to take the average velocity of the car over smaller and smaller time periods.</p> <p>Suppose that \\(u\\) is a short time later than \\(t\\), let's write \\(v_{t \\leftrightarrow u}\\) to mean the average velocity of the car during the time interval beginning at time \\(t\\) and ending at time \\(u\\). Now we just push \\(u\\) closer and closer to \\(t\\):</p> \\[ v_{t \\leftrightarrow u} = \\frac{P_u - P_t} {u - t} = \\frac{f(u) - f(t)} {u - t} \\] <p>Notice that the denominator \\(u - t\\) is the length of time involved, we can just take a limit as \\(u \\to t\\):</p> \\[ v_{t} = \\lim_{u \\to t} \\frac{f(u) - f(t)} {u - t} \\] <p>Since \\(u\\) is very close to \\(t\\), we can just write the equotion as:</p> \\[ v_{t} = \\lim_{h \\to 0} \\frac{f(t + h) - f(t)} {h} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#tanget-lines","title":"Tanget Lines","text":"<p>We pick a number \\(z\\) which is close to \\(x\\) and plot the point \\((z, f(z))\\) on the curve and draw the graph:</p> <p></p> <p>Since the slope is the rise over the run, the slope of the dashed line is:</p> \\[ \\frac{f(z) - f(x)} {z - x} \\] <p>Let's set \\(h = z - x\\) then we see that as \\(z \\to x\\), we have \\(h \\to 0\\), so we also have:</p> \\[ slope\\_of\\_tangent\\_line\\_through (x, f(x)) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)} {h} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#the-derivative-function","title":"The Derivative Function","text":"<p>In the following picture, I've drawn in the tangent lines through three different points on the curve: </p> <p>These lines have different slopes. That is, the slope of the tangent line <code>depends</code> on which value of \\(x\\) you start with. Another way of saying this is that the slope of the tangent line through \\((x, f(x))\\) is itself a function of \\(x\\). This function is called the <code>derivative</code> of \\(f\\) and is witten as \\(f'\\):</p> \\[ f'(x) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)} {h} \\] <p>If \\(y = f(x)\\), then you can write \\(\\frac{dy}{dx}\\) instead of \\(f'(x)\\). For example, if \\(y = x^2\\), then \\(\\frac{dy}{dx} = 2x\\). In fact, if you replace \\(y\\) by \\(x^2\\), you get a variety of different ways of expressing the same thing:</p> \\[ f'(x) = \\frac{dy}{dy}{dx} = \\frac{d(x^)} {dy} = \\frac{d}{dx}(x^2) = 2x \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/03_continuity_and_differentiability/#differentiability-and-continuity","title":"Differentiability and Continuity","text":"<p>Now it's time to relate the two big concepts in this chapter:</p> <p>If a function \\(f\\) is differentiable at \\(x\\), then it's continuous at \\(x\\).</p> <p>To prove this claim, we have known that \\(f\\) is continuous at \\(x\\):</p> \\[ \\lim_{u \\to x} f(u) = f(x) \\] <p>as \\(u \\to x\\) we can also replace above equation as:</p> \\[ \\lim_{h \\to 0} f(x + h) = f(x) \\] <p>Now we are aware of our destination, let's start with what we actually know that \\(f\\) is differentiable at \\(x\\), which means that \\(f'(x)\\) exists:</p> \\[ \\lim_{h \\to 0} \\frac{f(x + h) - f(x)}{h} = f'(x) \\] \\[ \\lim_{h \\to 0} \\frac{f(x + h) - f(x)}{h} \\times h = \\lim_{h \\to 0}f'(x) \\times h \\] \\[ \\lim_{h \\to 0} f(x + h) - f(x) = \\lim_{h \\to 0}f'(x) \\times h = 0 \\] <p>so we got:</p> \\[ \\lim_{h \\to 0} f(x + h) = f(x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/","title":"Differentiation Problems","text":"<p>Finding derivatives from the formula is possible but cumbersome, so we'll look at a few rules that make life a lot easier.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#using-the-definition","title":"Using the Definition","text":"<p>The basic way to find derivatives is to use its definition:</p> \\[ f'(x) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)} {h} \\] <p>so the derivative of \\(f(x) = \\frac{1}{x}\\) is:</p> \\[ \\begin{align} f'(x)  &amp;= \\lim_{h \\to 0} \\frac {\\frac{1}{x + h} - \\frac{1}{x}} {h} \\\\ &amp;= \\lim_{h \\to 0} \\frac{\\frac{x - (x + h)}{x(x + h)}} {h} \\\\ &amp;= \\lim_{h \\to 0} \\frac{-h} {hx(x + h)} \\\\ &amp;= \\lim_{h \\to 0} \\frac{-1} {x(x + h)} \\\\ &amp;= -\\frac{1}{x^2} \\end{align} \\] <p>In fact, if we replace \\(x^n\\) to \\(x\\) to get \\(f(x) = x^n\\) we can get more general equation:</p> \\[ \\begin{align} f'(x)  &amp;= \\lim_{h \\to 0} \\frac{f(x + h) - f(x)} {h} \\\\ &amp;= \\lim_{h \\to 0} \\frac{(x + h)^n - x^n} {h} \\\\ &amp;= \\lim_{h \\to 0} \\frac{x^n + nhx^{n - 1} + h^2 \\times (something...) - x^n} {h} \\\\ &amp;= \\lim_{h \\to 0} \\frac{nhx^{n - 1} + h^2 \\times (something...)} {h} \\\\ &amp;= \\lim_{h \\to 0} (nx^{n - 1} + h \\times (something...)) \\\\ &amp;= nx^{n - 1} \\end{align} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#using-rules","title":"Using rules","text":"<p>Let's define a function \\(f\\) as following:</p> \\[ f(x) = \\frac{3x^7 + x^4\\sqrt{2x^5 + 14x^{\\frac{4}{3}} - 23x + 9}} {6x^2 - 4} \\] <p>The key to differentiating a function is to understand how it is synthesized from simpler functions. Here are some rules we can use.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#constant-multiples-of-functions","title":"Constant multiples of functions","text":"<p>You just multiply by the constant after your differentiate.</p> \\[ (nf(x))' = nf'(x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#sums-and-differences-of-functions","title":"Sums and differences of functions","text":"<p>You just differentiate each piece and then add or subtract.</p> \\[ (f(x) + g(x))' = f'(x) + g'(x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#products-of-functions-via-product-rule","title":"Products of functions via product rule","text":"<p>To solve the problems involving products of functions, you have to mix and match. That is the product rule(version 1):</p> \\[ (f(x)g(x))' = f'(x)g(x) + f(x)g'(x) \\] <p>If we replace \\(f(x)\\) with \\(u\\) and \\(g(x)\\) with \\(v\\), we got(version 2);</p> \\[ \\frac{dy} {dx} = v\\frac{du}{dx} + u\\frac{dv}{dx} \\] <p>What if you have a product of three terms? We have the product rule for three terms(three variable):</p> \\[ \\frac{duvw} {dx} = \\frac{du}{dx}vw + u\\frac{dv}{dx}w + uv\\frac{dw}{dx} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#quotients-of-functions-via-the-quotient-rule","title":"Quotients of functions via the quotient rule","text":"<p>Quotients are handled in a way similar to products, except that the rule is a little different. The form of quotients is \\(h(x) = \\frac{f(x)}{g(x)}\\), here is the quotient rule(version 1):</p> \\[ (\\frac{f(x)} {g(x)})' = \\frac{f'(x)g(x) - f(x)g'(x)} {(g(x))^2} \\] <p>There is also another version(version 2):</p> \\[ \\frac{d}{dx}(\\frac{u}{v}) = \\frac{v\\frac{du}{x} - u\\frac{dv}{dx}} {v^2} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#composition-of-functions-via-the-chain-rule","title":"Composition of functions via the chain rule","text":"<p>The Chain rule is discrebed as(version 1):</p> \\[ (f(g(x)))' = f'(g(x))g'(x) \\] <p>And replace \\(f\\) and \\(g\\) with \\(y\\) and \\(u\\), we can invoke the other version of the chain rule(version 2):</p> \\[ \\frac{dy}{dx} = \\frac{dy}{du}\\frac{du}{dx} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/04_solve_diff/#derivatives-of-piecewise-defined-functions","title":"Derivatives of Piecewise-Defined Functions","text":"<p>Consider the following piecewise-defined function:</p> \\[ f(x) = \\begin{cases} 1, &amp;if \\quad x \\le 0, \\\\ x^2 + 1, &amp;if \\quad x &gt; 0. \\\\ \\end{cases} \\] <p></p> <p>To check that a piecewise-defined function is differentiable at a point where the pieces join together, you need to check:</p> <ul> <li>pieces agree at the join point(for continuity);</li> <li>the derivatives of the pieces agree at the join point.</li> </ul> <p>Otherwise it's not differentiable at the join point.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/05_trig_derivative/","title":"Trig Limits and Derivatives","text":"<p>So far, most of our limits and derivativess have involved only polynomials or poly-type functions. Lets expand our horizons by looking aat trig functions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/05_trig_derivative/#limits-involving-trig-functions","title":"Limits Involving Trig Functions","text":"<p>Consider the following two limits:</p> \\[ \\lim_{x \\to 0} \\frac{sin(5x)} {x} \\] <p>and </p> \\[ \\lim_{x \\to \\infty} \\frac{sin(5x)} {x} \\] <p>They look almost the same, the only difference is that the first limit is taken as \\(x \\to 0\\) while the second it taken as \\(x \\to \\infty\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/05_trig_derivative/#the-small-case","title":"The small case","text":"<p>We know that \\(sin(0) = 0\\), so what does \\(sin(x)\\) look like when \\(x\\) is near \\(0\\)? It turns out that \\(sin(x)\\) is approximately the same as \\(x\\) itself:</p> <p></p> <p>The graphs of \\(y = sin(x)\\) and \\(y = x\\) are very similar, especially when \\(x\\) is close to \\(0\\). So we have the conclusion:</p> \\[ \\lim_{x \\to 0} \\frac{sin(x)} {x} = 1 \\] <p>How about \\(cos(x)\\)? Well, \\(cos(0) = 1\\), so we write:</p> \\[ \\lim_{x \\to 0} cos(x) = 1 \\] <p>As for \\(tan(x)\\), we can write \\(tan(x)\\) as \\(\\frac{sin(x)}{cos(x)}\\) and get the equation:</p> \\[ \\lim_{x \\to 0} \\frac{tan(x)} {x} = 1 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/05_trig_derivative/#the-large-case","title":"The large case","text":"<p>As we all know:</p> \\[ -1 \\le sin(x) \\le 1 \\] <p>So the limit is:</p> \\[ \\lim_{x \\to \\infty} \\frac{sin(x)} {x} = 0 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/05_trig_derivative/#derivatives-involving-trig-functions","title":"Derivatives Involving Trig Functions","text":"<p>Using the definition of derivative:</p> \\[ f'(x) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)} {h} \\] <p>and the conclusion above:</p> \\[ \\lim_{h \\to 0} \\frac{sin(h)} {h} = 1 \\] <p>we can get:</p> \\[ \\begin{align} sin'(x)  &amp;= \\lim_{h \\to 0} \\frac{sin(x + h) - sin(x)} {h} \\\\ &amp;= \\lim_{h \\to 0} \\frac {sin(x)cos(h) + cos(x)sin(h) - sin(x)} {h} \\\\ &amp;= \\lim_{h \\to 0} (sin(x)(\\frac{cos(h) - 1} {h}) + cos(x)(\\frac{sin(h)}{h})) \\\\ &amp;= \\lim_{h \\to 0} (sin(x) \\times 0 + cos(x) \\times 1) \\\\ &amp;= cos(x) \\end{align} \\] <p>Use the samme method, we can get other equations:</p> \\[ \\begin{align} cos'(x) &amp;= -sin(x) \\\\ tan'(x) &amp;= \\frac{1}{cos^2(x)} = sec^2(x) \\\\ sec'(x) &amp;= sec(x)tan(x) \\\\ csc'(x) &amp;= -csc(x)cot(x) \\\\ cot'(x) &amp;= -csc^2(x) \\end{align} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/","title":"Exponentials and Logarithms","text":"<p>It turns out that there's a special base, the number \\(e\\), that works out particularly nicely, doing calculus with \\(e^x\\) and \\(log_e(x)\\) is much easier than dealing with \\(2^x\\) or \\(log_3(x)\\). Let's spend some time looking at \\(e\\) and its calculus.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#the-basics","title":"The Basics","text":"<p>Before you start doing calculus with exponentials, you really need to understand their properties.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#exponentials","title":"Exponentials","text":"<p>The rough idea is that we'll take a positive number, called the <code>base</code>, and raise it to a power called the <code>exponent</code>:</p> \\[ base^{exponent} \\] <p>For any base \\(b &gt; 0\\) and real numbers \\(x\\) and \\(y\\):</p> <ul> <li>\\(b^0 = 1\\)</li> <li>\\(b^1 = b\\)</li> <li>\\(b^xb^y = b^{x + y}\\)</li> <li>\\(\\frac{b^x}{b^y} = b^{x - y}\\)</li> <li>\\((b^x)^y = b^{xy}\\)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#logarithms","title":"Logarithms","text":"<p>\\(\\log_b{y}\\) is the power you have to raise the base \\(b\\) to in order to get \\(y\\), which means that \\(x = \\log_by\\) is the solution of the equation \\(b^x = y\\) for given \\(b\\) and \\(y\\):</p> \\[ b^{\\log_b(y)} = y \\] <p>Here are the rules valid for any base \\(b &gt; 1\\) and positive real numbers \\(x\\) and \\(y\\):</p> <ul> <li>\\(\\log_b(1) = 0\\)</li> <li>\\(\\log_b(b) = 1\\)</li> <li>\\(\\log_b(xy) = \\log_b(x) + \\log_b(y)\\)</li> <li>\\(\\log_b(x/y) = \\log_b(x) - \\log_b(y)\\)</li> <li>\\(\\log_b(x^y) = y\\log_b(x)\\)</li> <li>\\(\\log_b(x) = \\frac{\\log_c(x)} {\\log_c(b)}\\)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#definition-of-e","title":"Definition of \\(e\\)","text":"<p>The \\(e\\) is a special constant number like \\(\\pi\\). One way of seeing where \\(e\\) comes from involves a bit of a finance lesson.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#a-question-about-compound-interest","title":"A question about compound interest","text":"<p>A long time ago, a dude named Bernoulli answers a question about compound interest. Here is the setup for his question. Let's suppose you have a bank account that pays interest at a generous rate of \\(12%\\) annually, compounded once a year. You put in an initial deposit; every year, your fortune increase by \\(12%\\). This means that after \\(n\\) years, your fortune has increased by a factor of \\((1 + 0.12)^n\\). In particular, after one year, your fortune is just \\((1 + 0.12) = 1.12\\) times the original amount. If you started with $100, you'd finish the year with $112.</p> <p>Now suppose you find another bank that also offers an annual interest rate of \\(12%\\), but now it compounds twice a year. Of course you aren't going to get \\(12%\\) for half a year; you have to divide that by \\(2\\). Basically this means that you are getting \\(6%\\) interest for every 6 months. So if you put money into this bank account, then after one year it has compounded twice at \\(6%\\); the result is that your fortune has expanded by a factor of \\((1 + 0.06)^2 = 1.1236\\). So if you started with $100, you'd finish with $112.36.</p> <p>The second account is a little better than the first. It makes sense when you think about it--compounding is beneficial, so compounding more often at the same annual rate should be better. Let's try 3 times a year at the annual rate of \\(12%\\). We take \\(12%\\) and divide by \\(3\\) to get \\(4%\\), then compound three times; our fortune has increased by \\((1 + 0.04)^3\\), which works out to be \\(1.124864\\). This is a little higher still. How about 4 times a year? That'd be \\((1 + 0.03)^4\\), which is approximately \\(1.1255\\). That's even higher. Now, the question is, where does it stop? If you compound more and more often at the same annual rate, do you get wads and wads of cash after a year, or is there some limitation on all this?</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#the-answer-to-our-question","title":"The answer to our question","text":"<p>Let's turn to some symbols. First, let's suppose that we are compounding n times a year at an annual rate of \\(r\\), this means that each time we compound, the amount of compounding is \\(r / n\\). After this happens n times in one year, our original fortune has grown by a factor of:</p> \\[ (1 + \\frac{r}{n})^n \\] <p>We would like to know what happens in the limit as \\(n \\to \\infty\\):</p> \\[ L = \\lim_{n \\to \\infty} (1 + \\frac{r}{n})^n \\] <p>If this limit turns out to be finite, then by compounding more and more often, you could get more and more money in a single year. On the other hand, if it turns out to be finite, we'll have to conclude that there is a limitation on how much we can increase our fortune with an annual interest rate of \\(r\\), no matter how often we compound.</p> <p>First, lets' set \\(h = \\frac{r}{n}\\), so that \\(n = \\frac{r}{h}\\). Then as \\(n \\to \\infty\\), we seet that \\(h \\to 0^+\\)(since \\(r\\) is constant), so:</p> \\[ L = \\lim_{h \\to 0^+}(1 + h)^{\\frac{r}{h}} \\] <p>Use the exponential rule:</p> \\[ L = \\lim_{h \\to 0^+}((1 + h)^{\\frac{1}{h}})^r \\] <p>Let's pull a huge rabbit out of the hat and set:</p> \\[ e = \\lim_{h \\to 0^+}(1 + h)^{\\frac{1}{h}} \\] <p>and we have:</p> \\[ L = \\lim_{h \\to 0^+}((1 + h)^{\\frac{1}{h}})^r = e^r \\] <p>The number \\(e\\) turns out to be an irrational number whose decimal expansion begins like this:</p> \\[ e = 2.71828182845904523... \\] <p>The base \\(e\\) logarithm is called the <code>natural logarithm</code>. Since we have a new base \\(e\\), and a new way of writing logarithms in that base, the basic rules of logarithm can be rewritten as:</p> <ul> <li>\\(e^{\\ln(x)} = x\\)</li> <li>\\(\\ln(e^x) = x\\)</li> <li>\\(\\ln(1) = 0\\)</li> <li>\\(\\ln(e) = 1\\)</li> <li>\\(\\ln(xy) = \\ln(x) + \\ln(y)\\)</li> <li>\\(\\ln(\\frac{x}{y}) = \\ln(x) - \\ln(y)\\)</li> <li>\\(\\ln(x^y) = y\\ln(x)\\)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#differentiation-of-logs-and-exponentials","title":"Differentiation of Logs and Exponentials","text":"<p>With the definition of limit, we can find the derivatives of logs and exponentials:</p> <ul> <li>\\((\\ln(x))' = \\frac{1}{x}\\)</li> <li>\\((\\log_b(x))' = \\frac{1}{x\\ln(b)}\\)</li> <li>\\((e^x)' = e^x\\)</li> <li>\\((b^x)' = b^xln(b)\\)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#behavior-of-exponentials-near-0","title":"Behavior of exponentials near 0","text":"<p>In fact, we know that:</p> \\[ \\lim_{x \\to 0} e^{x^2} = e^0 = 1 \\] <p>But what about the limit:</p> \\[ \\lim_{h \\to 0} \\frac{e^h - 1} {h} \\] <p>Well, try setting \\(f(x) = e^x\\), we have:</p> \\[ f'(x) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)} {h} = \\lim_{h \\to 0} \\frac{e^{x + h} - e^x} {h} = e^x \\] <p>Simplify the equation, we have:</p> \\[ \\lim_{h \\to 0} \\frac{e^h - 1} {h} = 1 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#behavior-of-logarithms-near-1","title":"Behavior of logarithms near 1","text":"<p>It turns out that the situation is pretty simillar to the case of exponentials near 0:</p> \\[ \\lim_{h \\to 0} \\frac{\\ln(1 + h)} {h} = 1 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#behavior-of-exponentials-near-infty-or-infty","title":"Behavior of exponentials near \\(\\infty\\) or \\(-\\infty\\)","text":"<p>Let's take a look at the graph of \\(y = e^x\\):</p> <p></p> <p>and get the conclusion:</p> \\[ \\lim_{x \\to \\infty} e^x = \\infty \\] <p>and</p> \\[ \\lim_{x \\to -\\infty} e^x = 0 \\] <p>What if we the base \\(e\\) is replaced by some other base?</p> \\[ \\lim_{x \\to \\infty} r^x =  \\begin{cases} \\infty, &amp; if \\quad r &gt; 1, \\\\ 1, &amp; if \\quad r = 1, \\\\ 0, &amp; if \\quad r &lt; 1. \\end{cases} \\] <p>In addtion to all equations above, as <code>Exponentials grow quickly</code>:</p> \\[ \\lim_{x \\to \\infty} \\frac{x^n}{e^x} = 0 \\] <p>no matter how large \\(n\\) is.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#behavior-of-logs-near-infty","title":"Behavior of logs near \\(\\infty\\)","text":"<p>The sage continues. Here is the graph of \\(y = \\ln(x)\\):</p> <p></p> \\[ \\lim_{x \\to \\infty} \\ln(x) = \\infty \\] <p>And as the logs grow slowly, if \\(a &gt; 0\\):</p> \\[ \\lim_{x \\to \\infty} \\frac{\\ln(x)} {x^a} = 0 \\] <p>no matter how small \\(a\\) is.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/06_exp_and_log/#behavior-of-logs-near-0","title":"Behavior of logs near 0","text":"<p>Logs grow slowly at \\(0\\), so if \\(a &gt; 0\\):</p> \\[ \\lim_{x \\to 0^+} x^a\\ln(x) = 0 \\] <p>no matter how small \\(a\\) is.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/","title":"Extrema of Functions","text":"<p>We have seen how to differentiate functions from several different families, now we can use this knowledge to help us understand the maxima and minima of functions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/#extrema-of-functions_1","title":"Extrema of Functions","text":"<p>If we say \\(x = a\\) is an <code>extremum</code> of a function \\(f\\), this means that \\(f\\) has a maximum or minimum at \\(x = a\\). (The plural of \"extremum\" is \"extrema\", of course.)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/#definition","title":"Definition","text":"<p>The basic idea of a maximum is that it occurs when the function value is highest:</p> <p></p> <p>Let's say that a</p> <ul> <li><code>global maximum</code>(or absolute maximum) occurs at \\(x = a\\) if \\(f(a)\\) is the highest value of \\(f\\) on the entire domain of \\(f\\);</li> <li><code>local maximum</code>(or relative maximum) occurs at \\(x = a\\) if \\(f(a)\\) is the highest value of \\(f\\) on some small interval containing a.</li> </ul> <p>Every global maximum is also a local maximum.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/#the-extreme-value-theorem","title":"The Extreme Value Theorem","text":"<p>Let's say that \\(x = c\\) is a critical point for the function \\(f\\) is either \\(f'(c) = 0\\) or \\(f'(c) = DNE\\). Then we have the <code>Extreme Value Theorem</code>:</p> <p>Suppose that \\(f\\) is defined on \\((a,b)\\) and \\(c\\) is in \\((a, b)\\). If \\(c\\) is a local maximum or minimum of \\(f\\), then \\(c\\) must be a critical point for \\(f\\). That is, either \\(f'(c) = 0\\) or \\(f'(c) = DNE\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/#how-to-find-global-maxima-and-mimima","title":"How to Find Global Maxima and Mimima","text":"<p>In glory detail, here's how to find the global maximum and minimum of the function \\(f\\) with domain \\([a, b]\\):</p> <ol> <li>Find \\(f'(x)\\). Make a list of all the points in \\((a, b)\\) where \\(f'(x) = 0\\) or \\(f'(x) = DNE\\). That is, make a list of all the critical points in the interval \\((a, b)\\).</li> <li>Add the endpoints \\(x = a\\) and \\(x = b\\) to the list.</li> <li>For each of the points in the list, find the y-coordinates by substituting into the equation \\(y = f(x)\\).</li> <li>Pick the highest y-coordinate and note all the values of x from the list coresponding to that y-coordinate. These are the global maxima.</li> <li>Do the same for the lowest y-coordinate to find the global minima.</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/#rolles-theorem","title":"Rolle's Theorem","text":"<p>Suppose that \\(f\\) is continuous on \\([a, b]\\) and differentiable on \\((a, b)\\). If \\(f(a) = f(b)\\), then there must be at least one number \\(c\\) in \\((a, b)\\) such that \\(f'(c) = 0\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/07_extrema/#the-mean-value-theorem","title":"The Mean Value Theorem","text":"<p>Suppose that \\(f\\) is continuous on \\([a, b]\\) and differentiable on \\((a, b)\\). Then there's at least one number \\(c\\) in \\((a, b)\\) such that:</p> \\[ f'(c) = \\frac{f(b) - f(a)} {b - a} \\] <p>The Mean Value Theorem looks a lot like Rolle's Theorem. In fact, the conditions for applying the two theorems are almost the same. In both cases, your function \\(f\\) has to be continuous on a closed interval \\([a, b]\\) and differentiable on \\((a, b)\\). Rolle's Theorem also requires that \\(f(a) = f(b)\\), but Mean Value Theorem doesn't require that. In fact, if you apply the Mean Value Theorem to a function \\(f\\) statisfying \\(f(a) = f(b)\\), you'll see that \\(f(b) - f(a) = 0\\), so you get a number \\(c\\) in \\((a, b)\\) statisfying \\(f'(c) = 0\\). So Mean Value Theorem reduces to Rolle's Theorem.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/08_optim_and_linear/","title":"Optimization and Linearization","text":"<p>Basically, optimization involves finding the best situation possible, wether that be the cheapest way to build a bridge without falling down or something as mundane as finding the fastest driving route to a specific destination.</p> <p>Linearization is a useful technique for finding approximate values of hard-to-calculate quantities.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/08_optim_and_linear/#optimization","title":"Optimization","text":"<p>To \"optimize\" something means to make it as good as possible. The term \"optimize\" just means \"maximize or minimize, as appropriate.\"</p> <p>In general, here's the way to tackle optimization problems:</p> <ol> <li>Identify all the variables you might possibly need. One of them should be the quantity you want to maximize or minimize--make sure you know which one! Let's call it Q for now, although of course it might be another letter like P, m, or \\(\\alpha\\).</li> <li>Get a fell for the extremes of the situation, seeing how far you can push your variables.</li> <li>Write down equations relating the variables. One of them should be an equation for Q.</li> <li>Try to make Q a function of only one variable, using all your equations to eliminate the other variables.</li> <li>Differentiate Q with respect to that variable, then find the critical points; remember, these occur where the derivative if 0 or \\(DNE\\).</li> <li>Find the values of Q at all the critical points and at the endpoints. Pick out the maximum and minimum values. As a verification, use a table of signs or the sign of the second derivative to classify the critical points.</li> <li>Write out a summary of what you've found, identifying the variables in words rather than symbols(wherever possible).</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/08_optim_and_linear/#linearization","title":"Linearization","text":"<p>The general method is to use the formula:</p> \\[ f(a + \\Delta x) \\cong f(a) + f'(x)\\Delta x \\] <p>For example, you want to find the value of \\(\\sqrt{11}\\), let</p> <ul> <li>\\(f(x) = \\sqrt{x}\\),</li> </ul> <p>then:</p> <ul> <li>\\(f'(x) = \\frac{1}{2\\sqrt{x}}\\),</li> <li>\\(\\Delta x = 2\\),</li> <li>\\(a = 3\\),</li> </ul> <p>We get:</p> \\[ \\sqrt{11} = f(9 + 2) \\cong f(9) + f'(9)\\Delta x = 3 + \\frac{1}{3} \\] <p>Here is the graph of the situation:</p> <p></p> <p>The graph shows the curve \\(y = f(x)\\) and the linearization \\(y = L(x)\\), which is the tangent line to the curve at \\(x = a\\). We want to estimate the value of \\(f(a + \\Delta x)\\). That's the height of the point \\(F\\) in the above picture. As an approximate value, we're actually using \\(L(x + \\Delta x)\\), which is the height of \\(P\\) in the picture. The difference between the two quantities is labeled \"error\".</p> <p>Since \\(L(a + \\Delta x) = f(a) + f'(a) \\Delta x\\), we see that:</p> \\[ df = f'(a) \\Delta x \\] <p>The quantities \\(df\\) is called the differential of \\(f\\) at \\(x = a\\).</p> <p>We set:</p> \\[ r(x) = f(x) - L(x) \\] <p>where \\(r(x)\\) is the error in using the linearization at \\(x = a\\) in order to estimate \\(f(x)\\). It turns out that if the second derivative of \\(f\\) exists, at least between x and a, then there's a nice formula for \\(r(x)\\):</p> \\[ r(x) = \\frac{1}{2} f''(x)(x - a)^2 \\] <p>The above formula is related to the Mean Value Theorem.</p> <ul> <li>if \\(f'' &gt; 0\\) between a and x, then using the linearization leads to an underestimate(\\(L(x) &lt; f(x)\\)).</li> <li>if \\(f'' &lt; 0\\) between a and x, then using the linearization leads to an overestimate(\\(L(x) &gt; f(x)\\)).</li> </ul> <p>If we find the maximum M in \\([a, x]\\), we get the folowing:</p> \\[ |error| \\le \\frac{1}{2} M |x - a|^2 \\] <p>In summary, the basic strategy for estimating, or approximating, anasty number:</p> <ol> <li>Write down the main formula:</li> </ol> \\[ f(x) \\cong L(x) = f(a) + f'(a)(x - a) \\] <ol> <li>Choose a function \\(f\\), and a number \\(x\\) such that the nasty number is equal to \\(f(x)\\). Also, choose \\(a\\) to \\(x\\) such that \\(f(a)\\) can easily be computed.</li> <li>Differentiate \\(f\\) to find \\(f'\\)</li> <li>In the above formula, replace \\(f\\) and \\(f'\\) by the actual functions, and \\(a\\) by the actual number you've chosen.</li> <li>Finally, plug in the value of \\(x\\) from step 2 above. Also note that the differential \\(df\\) is the quantity \\(f'(a)(x - a)\\)</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/08_optim_and_linear/#newtons-method","title":"Newton's Method","text":"<p>Here's another useful application of linearization. Suppose that you have an equation of the form \\(f(x) = 0\\) that you'd like to solve, but you just can't solve the darned thing. So you do the next best thing: you take a guess at a solution, which you can call \\(a\\). The situation might look like this:</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/09_l_hopital_rule/","title":"L'Hopital's Rule and Limits","text":"<p>We've used limits to find derivatives. Now we'll turn things upside-down and use derivatives to find limits, by way of a nive technique called <code>L'Hopital's Rule</code>.</p> <p>Most of the limits we've looked at are naturally in one of the following forms:</p> <ul> <li>\\(\\lim_{x \\to a}\\frac{f(x)}{g(x)}\\)</li> <li>\\(\\lim_{x \\to a}(f(x) - g(x))\\)</li> <li>\\(\\lim_{x \\to a}f(x)g(x)\\)</li> <li>\\(\\lim_{x \\to a}f(x)^{g(x)}\\)</li> </ul> <p>Sometimes you can just substitute \\(x = a\\) and evaluate the limit directly, effectively using the continuity of \\(f\\) and \\(g\\). This method doesn't always work, for example:</p> \\[ \\lim_{x \\to 3} \\frac{x^2 - 9}{x - 3} \\] <p>replacing \\(x\\) by 3 gives the indeterminate form \\(\\frac{0}{0}\\).</p> <p>It turns out that the first type, involving the ratio \\(\\frac{f(x)}{g(x)}\\), is the most suitable for applying the rule, so we'll call it <code>Type A</code>. The next two types, involving \\(f(x) - g(x)\\) and \\(f(x)g(x)\\), both reduce directly to <code>Type A</code>, so we'll call them <code>Type B1</code> and <code>Type B2</code> respectively. Finally, we'll say that limits involving exponentials like \\(f(x)^{g(x)}\\) are <code>Type C</code>, since you can solve them by reducing them to <code>Type B2</code> and then back to <code>Type A</code>.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/09_l_hopital_rule/#type-a00-or-pm-infty-pm-infty","title":"Type A(\\(0/0\\) or \\(\\pm \\infty/ \\pm \\infty\\))","text":"<p>Consider limits of the form:</p> \\[ \\lim_{x \\to a} \\frac{f(x)}{g(x)} \\] <p>where \\(f\\) and \\(g\\) are nice differentiable functions. If \\(g(a) \\ne 0\\), everything's great, you just substitude \\(x = a\\) to see the limit is \\(\\frac{f(a)}{g(a)}\\). </p> <p>The only other possibility is that \\(f(a) = 0\\) and \\(g(a) = 0\\). That is, the fraction \\(\\frac{f(a)}{g(a)}\\) is the indeterminate form \\(\\frac{0}{0}\\).  Let's return to the definition of limits:</p> \\[ f'(x) = lim_{h \\to 0} \\frac{f(x + h) - f(x)}{h} \\] <p>Since \\(f\\) and \\(g\\) are differentiable, we can find the linearization of both of them at \\(x = a\\). In fact, as we saw in the previous chapter, if \\(x\\) is close to \\(a\\), then:</p> \\[ f(x) \\cong f(a) + f'(a)(x - a) \\] <p>and </p> \\[ g(x) \\cong g(a) + g'(a)(x - a) \\] <p>Now we assume that \\(f(a)\\) and \\(g(a)\\) are both \\(0\\). This means:</p> \\[ f(x) \\cong f'(a)(x - a) \\] <p>and </p> \\[ g(x) \\cong g'(a)(x - a) \\] <p>If you divide the first equation by the second one, then assuming that \\(x \\ne a\\), we get:</p> \\[ \\frac{f(x)}{g(x)} \\cong \\frac{f'(a)(x - a)}{g'(a)(x - a)} = \\frac{f'(a)}{g'(a)} \\] <p>The closer \\(x\\) is to \\(a\\), the better the approximation. This leads to one version of l'Hopital's Rule:</p> <p>If \\(f(a) = g(a) = 0\\), then</p> \\[ \\lim_{x \\to a}\\frac{f(x)}{g(x)} = \\lim_{x \\to a}\\frac{f'(x)}{g'(x)} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/09_l_hopital_rule/#type-b1infty-infty","title":"Type B1(\\(\\infty - \\infty\\))","text":"<p>Here is a limit form:</p> \\[ \\lim_{x \\to 0}(\\frac{1}{sin(x)} - \\frac{1}{x}) \\] <p>As \\(x \\to 0^+\\), both \\(1/sin(x)\\) and \\(1/x\\) go to \\(\\infty\\). As \\(x \\to 0^-\\), both quantities go to \\(-\\infty\\). We can reduce this to <code>Type A</code>, just take a common denominator:</p> \\[ \\lim_{x \\to 0}(\\frac{1}{sin(x)} - \\frac{1}{x}) = \\lim_{x \\to 0} \\frac{x - sin(x)}{xsin(x)} \\] <p>Now you can put \\(x = 0\\) and see \\(0/0\\) case. So we can apply l'Hopital's Rule:</p> \\[ \\lim_{x \\to 0} (\\frac{1}{sin(x)} - \\frac{1}{x}) = \\lim_{x \\to 0} \\frac{x - sin(x)}{xsin(x)} = \\lim_{x \\to 0}\\frac{1 - cos(x)}{sin(x) + xcos(x)} = \\lim_{x \\to 0} \\frac{sin(x)}{cos(x) + cos(x) - xsin(x)} = 0 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/09_l_hopital_rule/#type-b2-0-times-pm-infty","title":"Type B2 (\\(0 \\times \\pm \\infty\\))","text":"<p>Here's the example:</p> \\[ \\lim_{x \\to 0^+} x\\ln(x) \\] <p>The idea is to move \\(x\\) into a new denominator by putting it there as \\(\\frac{1}{x}\\):</p> \\[ \\lim_{x \\to 0^+} x\\ln(x) = \\lim_{x \\to 0^+} \\frac{\\ln(x)}{1/x} \\] <p>Now the form is \\(-\\infty / \\infty\\), so we can use the l'Hopital's Rule:</p> \\[ \\lim_{x \\to 0^+}x\\ln(x) = \\lim_{x \\to 0^+}\\frac{\\ln(x)}{1/x} = \\lim_{x \\to 0^+}\\frac{1/x}{-1/x^2} = 0 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/09_l_hopital_rule/#type-c1pm-infty-00-infty0","title":"Type C(\\(1^{\\pm \\infty}, 0^0, \\infty^0\\))","text":"<p>Finally, the trickiest type involves limits like:</p> \\[ \\lim_{x \\to 0^+} x^{sin(x)} \\] <p>where both the base and exponent involve the dummy variable. The idea is to take the logarithm of the quatity \\(x^{sin(x)}\\) first, and work out its limit as \\(x \\to 0^+\\):</p> \\[ \\lim_{x \\to 0^+}ln(x^{sin(x)}) = \\lim_{x \\to 0^+}{sin(x)}\\ln(x) = \\lim_{x \\to 0^+}ln(\\frac{\\ln(x)}{csc(x)}) = \\lim_{x \\to 0^+}ln(\\frac{1/x}{-csc(x)cot(x)}) = ln(-1 \\times 0) = ln(0) = 1 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/10_calculus/","title":"The Fundamental Theorems of Calculus","text":"<p>Now it's time to get some facts straight about definite integrals.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/10_calculus/#the-basic-idea","title":"The Basic Idea","text":"<p>We start off with some function \\(f\\) and an interval \\([a, b]\\). Take the graph of \\(y = f(x)\\), and consider the region between the curve, the x-axis, and the two vertical lines \\(x = a\\) and \\(x = b\\):</p> <p></p> <p>It would be nice to have a compact way to express the area of the shaded region. Let's say the the area of the shaded region above, is</p> \\[ \\int_{a}^b f(x)dx \\] <p>This is a <code>definite integral</code>. You would read it out loud as <code>the integral from a to b of f(x) with respect to x</code>.</p> <ul> <li>\\(f(x)\\) is called <code>integrand</code>, and tells you what the curved part looks like;</li> <li>\\(a\\) and \\(b\\) is called <code>limits of integration</code> or <code>endpoints of integration</code>, tell you where the two vertical lines go;</li> <li>\\(dx\\) tells you that x is the variable on the horizontal axis.</li> </ul> <p>What if the function dips below the x-axis? Actually, the part of the area below the x-axis counts as negtive area. In general, the integral gives the total amount of signed area.</p> <p>And, if \\(f\\) is an odd function, then:</p> \\[ \\int_{-a}^a f(x) dx = 0 \\] <p>\\(a\\) can be any number.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/10_calculus/#definition-of-the-definite-integral","title":"Definition of the Definite Integral","text":"<p>We have a nice working definition of the definite integral in terms of area, but that doesn't really help us to calculate specific integrals. We can state the definition:</p> \\[ \\int_a^b f(x) dx = \\lim_{mesh \\to 0} \\sum_{j = 1}^n f(c_j)(x_j - x_{j - 1}) \\] <p>where \\(a = x_0 &lt; x_1 &lt; \\cdots &lt; x_{n - 1} &lt; x_n = b\\) and \\(c_j\\) is in \\([x_{j - 1}, x_j]\\) for each \\(j = 1, \\cdots, n\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/10_calculus/#properties-of-definite-integral","title":"Properties of Definite Integral","text":"<ul> <li>If you reverse the limits of integration, you need to put in a minus sign out front.</li> </ul> \\[ \\int_{b}^{a} f(x) dx = -\\int_{a}^{b} f(x) dx \\] <ul> <li>If the limits of integration are equal, the integration is 0.</li> </ul> \\[ \\int_{a}^{a} f(x) dx = 0 \\] <ul> <li>You can split an integral into two pieces.</li> </ul> \\[ \\int_{a}^{b} f(x) dx = \\int_{a}^{c} f(x) dx + \\int_{c}^{b} f(x) dx \\] <ul> <li>Constants can move through integral signs.</li> </ul> \\[ \\int_{a}^{b} C f(x) dx = C \\int_{a}^{b} f(x) dx \\] <ul> <li>Integrals respect sums and differences.</li> </ul> \\[ \\int_{a}^{b} (f(x) + g(x)) dx = \\int_{a}^{b} f(x) dx + \\int_{a}^{b} g(x) dx \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/10_calculus/#averages-and-the-mean-value-theorem-for-integrals","title":"Averages and the Mean Value Theorem for Integrals","text":"<p>Let's return to average velocities. All you have to do is to find the displacement and divide it by the total time. If the time interval goes from a to b, and the velocity at time t is \\(v(t)\\), then we've already seen that:</p> \\[ displacement = \\int_{a}^{b} v(t) dt \\] <p>Since the total time is \\(b - a\\), we have</p> \\[ average \\quad velocity = \\frac{displacement} {total time} = \\frac{1}{b - a} \\int_a^b v(t) dt \\] <p>More general, we can define the average value of an integrable function \\(f\\) on the interval \\([a, b]\\) as follow:</p> \\[ average \\quad value \\quad of \\quad f \\quad on \\quad [a, b] = \\frac{1}{b - a} \\int_a^b f(x) dx \\] <p>As for a function, the average theorem actually says that the following two areas are equal:</p> <p></p> <p>Let's label the correspongding point on the x-axis as c, like this:</p> <p></p> <p>So we have \\(f(x) = f_{av}\\). It turns out that if \\(f\\) is continuous, then there is always such a number c(Mean Value Theorem for integral):</p> <p>If \\(f\\) is continous on \\([a, b]\\), then there exists c in \\((a, b)\\) such that:</p> \\[ f(c) = \\frac{1}{b - a} \\int_{a}^{b} f(x) dx \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/","title":"Techniques to Solve Integration Problems","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#substitution","title":"Substitution","text":"<p>Substitution, also known as \"change of variables\", comes from the chain rule. What saves us in the case of \\(\\int 2x e^{x^2} dx\\) is the presence of the 2x factor, which is exactly what popped out when we used the chain rule to differentiate \\(e^{x^2}\\). Now imagine starting with an indefinite integral like this:</p> \\[ \\int x^2 cos(x^3) dx \\] <p>The derivative of the quantity \\(x^3\\) is \\(3x^2\\). This almost matches the factor \\(x^2\\) in the integrand, it's only the constant 3 that makes things a little more difficult. Still, constants can move in or out of integrals, so that should not be a problem.</p> <p>Start off by setting \\(t = x^3\\), we can get:</p> \\[ \\int x^2 cos(x^3) dx = \\int cost(x^3) (x^2 dx) = \\int cos(t) (\\frac{1}{3} dt) \\] <p>The middle step isn't really necessary, but it helps to see \\(x^2\\) \\(dx\\) next to each other so that you can justify replacing theme by \\(\\frac{1}{3} dt\\). Anyway, now we can drag the factor of \\(\\frac{1}{3}\\) outside the integral, then integrate:</p> \\[ \\int x^2 cos(x^3) dx = \\int cos(t) \\frac{1}{3} dt = \\frac{1}{3} \\int cos(t) dt = \\frac{1}{3} + C \\] <p>It's pretty lazy to leave the answer as \\(\\frac{1}{3} sin(t) + C\\). We started in x-land, then migrated over to t-land; now we have to come back to x-land. This isn't hard to do: just replace t by \\(x^3\\) once agin:</p> \\[ \\int x^2 cos(x^3) dx = \\frac{1}{3} sin(x^3) + C \\] <p>In general, if \\(f\\) is a differentiable function, then:</p> \\[ \\int \\frac{f'(x)}{f(x)} dx = \\ln |f(x)| + C \\] <p>And for the type of \\(\\sqrt[n]{ax + b}\\), we can set \\(t = \\sqrt[n]{ax + b}\\) and differentiate both sides of \\(t^n = ax + b\\)</p> <p>To summarize the method of substitution:</p> <ul> <li>for indefinite integrals, change everytyhing to do with \\(x\\) and \\(dx\\) to stuff involving \\(t\\) and \\(dt\\), do the new integral, then change back to \\(x\\) stuff;</li> <li>for definite integrals, change everything to do with \\(x\\) and \\(dx\\) to stuff involving \\(t\\) and \\(dt\\), and change the limits of integration to the corresponding \\(t\\) values as well, then do the new integral(no need to go back to x-land here).</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#integration-by-parts","title":"Integration by Parts","text":"<p>We saw how to reverse the chain rule by using the method of substitution. There is also a way to reverse the product rule, which is called integration by parts.</p> <p>The product rule is:</p> \\[ \\frac{d}{dx} (uv) = v \\frac{du}{dx} + u \\frac{dv}{dx} \\] <p>Let's rearrange this equation and then integrate both sides with respect to \\(x\\):</p> \\[ \\int u \\frac{dv}{dx} dx = \\int \\frac{d}{x} (uv) dx - \\int v \\frac{du}{dx} \\] <p>The first term on the right-hand side is the antiderivative of the derivative of \\(uv\\), so it's just equal to \\(uv + C\\). The \\(+C\\) is unnecessary, though, because the second term ont the right-hand side is already an indefinite integral, so we have:</p> \\[ \\int u \\frac{dv}{dx} dx = uv - \\int v \\frac{du}{dx} \\] <p>If we replace \\(\\frac{dv}{dx} dx\\) by \\(dv\\), and replace \\(\\frac{du}{dx}\\) by \\(du\\), we get the formula:</p> \\[ \\int u dv = uv - \\int v du \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#partial-fractions","title":"Partial Fractions","text":"<p>Let's focus our attention on how to integrate a rational function. So we want to find an integral like:</p> \\[ \\int \\frac{p(x)}{q(x)} dx \\] <p>where \\(p\\) and \\(q\\) are polynomials.</p> <p>Here is the complete method for finding the integral of a rational functions:</p> <ul> <li>Step1, check degrees, divide if necessary: check to see if the degree of the numerator is less than the degree of the denominator. If it is, then you're golden, go to step 2. If not do a long division, then to step 2. </li> <li>Step2, factor the denominator: use the quadratic formula, or guess roots and divide, to factor the denominator of your integrand.</li> <li> <p>Step3, the form: write down the \"form\", with undetermined constants, </p> <ul> <li>\\(\\frac{A}{x + a}\\)</li> <li>\\(\\frac{A}{(x + a)^2} + \\frac{B}{x + a}\\)</li> <li>\\(\\frac{Ax + B}{x^2 + ax + b}\\)</li> <li>\\(\\frac{A}{(x + a)^3} + \\frac{B}{(x + a)^2} + \\frac{C}{x + a}\\)</li> </ul> </li> <li> <p>Step4, evaluate constants: multiply both sides of this equation by the denominator, then find the constants by:</p> <ul> <li>substituting clever values of x;</li> <li>equating coefficients;</li> <li>some combination of aboves.</li> </ul> </li> <li> <p>Step5, integrate terms with linear powers on the bottom: solve any integrals whose denominators are powers of linear functions; the answers will involve logs or negative powers of the linear term.</p> </li> <li> <p>Step6, integrate terms with quadratics on the bottom: for each integral with nonfactorable quadratic term in the denominator, complete the square, make a change of variable, then possibly split up into two integrals. This formula is very useful most of the time:</p> </li> </ul> \\[ \\int \\frac{1}{t^2 + a^2} dt = \\frac{1}{a} tan^{-1}(\\frac{t}{a}) + C \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#integrals-involving-trig-identities","title":"Integrals Involving Trig Identities","text":"<p>There are three families of trig identities which are particularly useful in evaluating integrals.</p> <p>The first family arises from the double-angle formular for \\(cos(2x)\\). We have known that \\(cos(2x) = 2cos^2(x) - 1\\) and \\(cos(2x) = 1 - 2sin^2(x)\\). So we have:</p> \\[ cos^2(x) = \\frac{1}{2}(1 + cos(2x)) \\] \\[ sin^2(x) = \\frac{1}{2}(1 - cos(2x)) \\] <p>The second family of trig identities involving Pythagorean identities:</p> \\[ sin^2(x) + cos^2(x) = 1 \\] \\[ tan^2(x) + 1 = sec^2(x) \\] \\[ 1 + cot^2(x) = csc^2(x) \\] <p>Let's look at the third family of identities, the so-called products-to-sums identities:</p> \\[ cos(A) cos(B) = \\frac{1}{2}(cos(A - B) + cos(A + B)) \\] \\[ sin(A) sin(B) = \\frac{1}{2}(cos(A - B) - cos(A + B)) \\] \\[ sin(A) cos(B) = \\frac{1}{2}(sin(A - B) + sin(A + B)) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#integrals-involving-powers-of-trig-functions","title":"Integrals Involving Powers of Trig Functions","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#powers-of-sin-andor-cos","title":"Powers of \\(sin\\) and/or \\(cos\\)","text":"<p>If one of the powers of \\(sin(x)\\) or \\(cos(x)\\) is odd, then grab it. If you've grabbed your odd power, then you need to pull out one power to go with the \\(dx\\); then deal with what's left by using one of the identities:</p> \\[ cos^2(x) = 1 - sin^2(x) \\] \\[ sin^2(x) = 1 - cos^2(x) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#powers-of-tan","title":"Powers of \\(tan\\)","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#powers-of-sec","title":"Powers of \\(sec\\)","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#powers-of-cot","title":"Powers of \\(cot\\)","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#powers-of-csc","title":"Powers of \\(csc\\)","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#reduction-formula","title":"Reduction formula","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#integrals-involving-trig-substitutions","title":"Integrals Involving Trig Substitutions","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#type-1-sqrta2-x2","title":"Type 1: \\(\\sqrt{a^2 - x^2}\\)","text":"<p>If you have an integral involving an odd power of \\(\\sqrt{a^2 - x^2}\\), the correct substitution to use is \\(x = a sin(\\theta)\\). The reason that this substituation is effective is that:</p> \\[ a^x - x^2 = a^2 - a^2 sin^2(\\theta) = a^2 (1 - sin^2(\\theta)) = a^2 cos^2 (\\theta) \\] <p>and we can get \\(dx = a cos(\\theta)d\\theta\\). Now you can easily take a square root.</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#type-2-sqrta2-x2","title":"Type 2: \\(\\sqrt{a^2 + x^2}\\)","text":"<p>If an integral involves an odd power of \\(\\sqrt{x^2 + a^2}\\), the correct substitution is \\(x = a tan(\\theta)\\), this works because:</p> \\[ x^2 + a^2 = a^2 tan^2(\\theta) + a^2 = a^2 (tan^2(\\theta) + 1) = a^2 sec^2 (\\theta) \\] <p>Also, we'll need to know that \\(dx = a sec^2(\\theta) d\\theta\\). </p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/11_tech_to_solve_int/#type-3-sqrtx2-a2","title":"Type 3: \\(\\sqrt{x^2 - a^2}\\)","text":"<p>Finally, as for \\(\\sqrt{x^2 - a^2}\\), the correct substitution is \\(x = a sec(\\theta)\\)</p> \\[ x^2 - a^2 = a^2 sec^2(\\theta) - a^2 = a^2 (sec^2(\\theta) - 1) = a^2 tan^2(\\theta) \\] <p>To take the substitution, we'll also need the fact that \\(dx = a sec(\\theta)tan(\\theta)d\\theta\\)</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/12_improper_integral/","title":"Improper Integrals","text":"<p>The integral \\(\\int_{a}^{b} f(x) dx\\) is improper if any of the following conditions apply:</p> <ol> <li>\\(f\\) isn't bounded in the closed interval \\([a, b]\\);</li> <li>\\(b = \\infty\\);</li> <li>\\(a = -\\infty\\).</li> </ol> <p>If \\(f(x)\\) is unbounded for \\(x\\) near some number \\(c\\), we'll say that \\(f\\) has a blow-up point at \\(x = c\\).</p> <p></p> <p>We can define the integral of improper integral if we have a blow-up point at \\(x = a\\):</p> \\[ \\int_{a}^{b} f(x) dx = \\lim_{\\epsilon \\to 0^+} \\int_{a + \\epsilon}^{b} f(x) dx \\] <p>If the limit is \\(L\\) as \\(\\epsilon \\to 0^+\\), we say that \\(\\int_{a}^{b} f(x) dx\\) converge to L. If there's no limit, we say that the above integral diverges.</p> <p>Now we still have to look at what happens when one or both of the limits of integration are infinite, this means that the region of integration is unbounded:</p> \\[ \\int_{a}^{\\infty} f(x) dx \\] <p>In symbols, we are define:</p> \\[ \\int_{a}^{\\infty} f(x) dx = \\lim_{N \\to \\infty} \\int_{a}^{N} f(x) dx \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/12_improper_integral/#the-comparison-testtheory","title":"The Comparison Test(Theory)","text":"<p>Suppose we have two functions which are never negative, at least in some region of interest. If the first function is bigger than the second function, and the integral of the second function diverges, then the first function also diverges.</p> <p>Mathematically, it looks like this: if \\(f(x) \\ge g(x) \\ge 0\\) for \\(x\\) in the interval \\((a, b)\\), and we know that \\(\\int_{a}^{b} g(x) dx\\) diverges, then so does \\(\\int_{a}^{b} f(x) dx\\).</p> \\[ \\int_{a}^{b} f(x) dx \\ge \\int_{a}^{b} g(x) dx = \\infty \\] <p></p> <p>On the other hand, for convergence, if \\(0 \\le f(x) \\le g(x)\\) on \\((a, b)\\) and \\(\\inf_{a}^{b} g(x) dx\\) converges, then so does \\(\\int_{a}^{b} f(x) dx\\):</p> \\[ \\int_{a}^{b} f(x) dx \\le \\int_{a}^{b} g(x) dx &lt; \\infty \\] <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/12_improper_integral/#the-limit-comparison-testtheory","title":"The Limit Comparison Test(Theory)","text":"<p>Suppose we have two function \\(f\\) and \\(g\\) such that:</p> \\[ \\lim_{x \\to a} \\frac{f(x)} {g(x)} = 1 \\] <p>We'll say that \\(f(x) \\sim g(x)\\) as \\(x \\to a\\) if the limit of the ratio is 1.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/12_improper_integral/#the-p-testtheory","title":"The p-Test(Theory)","text":"<p>Now that we have the comparison test and limit comparison test, we need to know how to use them. The question is, what are some functions we could choose as g? Well, the most useful are the functions \\(\\frac{1}{x^p}\\) for some \\(p &gt; 0\\). Since these functions are so easy to integrate, we can use the limit formula to get the p-test:</p> <ul> <li>p-test, \\(\\int^{\\infty}\\) version: For any finite \\(a &gt; 0\\), the integral below converges if \\(p &gt; 1\\) and diverges if \\(p &lt; 1\\)</li> </ul> \\[ \\int_{a}^{\\infty} \\frac{1}{x^p} dx \\] <ul> <li>p-test, \\(\\int_{0}\\) version: For any finite \\(a &gt; 0\\), the integral below converges if \\(p &lt; 1\\) and diverges if \\(p &gt; 1\\)</li> </ul> \\[ \\int_{0}^{a} \\frac{1}{x^p} dx \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/","title":"Sequences and Series","text":"<p>Infinite series are pretty similar to improper integrals.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#convergence-and-divergence-of-sequences","title":"Convergence and Divergence of Sequences","text":"<p>A sequence is a collection of numbers in order. It might have a finite number of terms, or it might go on forever, in which case it is called an <code>infinite sequence</code>. For example:</p> \\[ 0, 1, 2, 3, 4, ... \\] <p>Sequences are normally written using subscript notation, where \\(a_1\\) denotes the first element of the series, \\(a_2\\) the second, \\(a_3\\) the third, and so on.</p> <p>Given an infinite sequence, our main focus is going to be on the limiting behavior of the values of the sequence as the index \\(n\\) tends to infinity. That is, what happens to the sequence as you look farther and farther along it? In math notation, does</p> \\[ \\lim_{n \\to \\infty} a_n \\] <p>exist, and if so, what is it?</p> <p>The basic idea is that the statement</p> \\[ \\lim_{n \\to \\infty} a_n = L \\] <p>means that \\(a_n\\) might wander around for a little while, but eventually gets very close to \\(L\\) and stays at least as close to \\(L\\) for ever after. If there's such a number \\(L\\), then the sequence \\(\\{a_n\\}\\) <code>converges</code>; otherwise it <code>diverges</code>. Just like functions, sequences can diverge to \\(\\infty\\) or \\(-\\infty\\), or they can oscillate around and not get close to any particular value.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#two-important-sequences","title":"Two important sequences","text":"<p>Pick some constant number \\(r\\) and consider the sequence given by \\(a_n = r^n\\) starting at \\(n = 0\\). This is a <code>geometric progression</code>.</p> <p>These are all special cases of the general rule, which is as follows:</p> \\[ \\lim_{n \\to \\infty} r^n =  \\begin{cases} = 0 &amp; if \\quad -1 &lt; r &lt; 1, \\\\ = 1 &amp; if \\quad r = 1, \\\\ = \\infty &amp; if \\quad r &gt; 1, \\\\ = DNE &amp; if \\quad r \\le -1. \\end{cases} \\] <p>In particular, if \\(k\\) is any constant, then</p> \\[ \\lim_{n \\to \\infty} (1 + \\frac{k}{n})^n = e^k \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#convergence-and-divergence-of-series","title":"Convergence and Divergence of Series","text":"<p>A series is just a sum. We'd like to add up all of the terms of a sequence \\(a_n\\). Let's define a new sequence, which we'll call \\(\\{A_N\\}\\), by setting:</p> \\[ A_N = a_1 + a_2 + a_3 + \\cdots + a_{N - 1} + a_{N} \\] <p>The new sequence is called the sequence of <code>partial sums</code>. The weird equaton now looks like this:</p> \\[ a_1 + a_2 + a_3 + \\cdots = \\lim_{N \\to \\infty} A_N \\] <p>If the limit exists and equals \\(L\\), then we'll say that the seriess on the left-hand side <code>converges</code> to \\(L\\). If the limit doesn't exist, then the series <code>diverges</code>.</p> <p>The formula for \\(A_N\\) is:</p> \\[ A_N = a_1 + a_2 + a_3 + \\cdots + a_{N - 1} + a_N = \\sum_{n = 1}^N a_n \\] <p>The infinite seriess is written as:</p> \\[ a_1 + a_2 + a_3 + \\cdots = \\sum_{n = 1} ^{\\infty} a_n \\] <p>So, here's how to define the value of an infinite series using sigma notation:</p> \\[ \\sum_{n = 1} ^{\\infty} a_n = \\lim_{N \\to \\infty} \\sum_{n = 1} ^N a_n \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#geometric-seriestheory","title":"Geometric series(theory)","text":"<p>Let's look at an important example of an infinite series. Suppose we start with the geometric progression \\(1, r, r^2, r^3, \\cdots\\), we can use this sequence as the terms of an infinit series:</p> \\[ 1 + r + r^2 + r^3 + \\cdots = \\sum_{n = 0} ^{\\infty} r^n \\] <p>This is called a <code>geometric series</code>. It turns out that the geometric series:</p> \\[ \\sum_{n = 0}^{\\infty} r^n = \\frac{1}{1 - r} \\] <ul> <li>if \\(-1 &lt; r &lt; 1\\);</li> <li>otherwise, if \\(r \\ge 1\\) or \\(r \\le -1\\), the series diverges.</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#the-n-th-term-testtheory","title":"The n-th Term Test(Theory)","text":"<p>For a series to converge, the sequence of partial sums has to have a limit. The partial sum after N steps represents your position after you have taken N steps. If you  finally converge to some special limiting position as you keep on taking more and more steps, then your steps have to become really really small.</p> <p>So your step sizes, which are just given by the sequence \\(\\{a_n\\}\\), eventually have to become very small, at least if you want your series to converge. This leads to the <code>n-th term</code> test:</p> <p>if \\(\\lim_{n \\to \\infty} a_n != 0\\), or the limit doesn't exist, then the seriess \\(\\sum_{n = 1}^{\\infty} a_n\\) diverges.</p> <p>Just beware:</p> <p>the n-th term test cannot be used to show that a series converges!</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#the-p-testtheory","title":"The p-test(Theory)","text":"<p>The p-test is basically the same as the p-test for improper integrals with problem spot at \\(\\infty\\):</p> \\[ \\sum_{n = a}^{\\infty} \\frac{1}{n^p} \\begin{cases} converges &amp; if \\quad p &gt; 1, \\\\ diverges &amp; if \\quad p \\le 1. \\end{cases} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#new-tests-for-series","title":"New Tests for Series","text":"<p>The tests above are from improper integral. Here are four tests for convergence of series which have no corresponding improper integral versions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#the-ratio-test","title":"The ratio test","text":"<p>To test the series \\(\\sum_{n=1}^{\\infty}a_n\\), let's consider a new sequence \\(b_n\\), and </p> \\[ b_n = |\\frac{a_{n + 1}}{a_n}| \\] <p>The the series \\(\\{\\sum_{n=1}^{\\infty}a_n\\}\\):</p> <ul> <li>converges, if the sequence \\({b_n}\\) converges to a number less than \\(1\\);</li> <li>diverges, if the sequence \\({b_n}\\) converges to a number greater than \\(1\\);</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#the-root-test","title":"The root test","text":"<p>The root test(also called the n-th root test) is a close cousin of the ratio test. Instead of considering ratios of successive terms, just consider the n-th root of the absolute value of n-th term.</p> <p>Starting with a series \\(\\sum_{n = 1}^{\\infty} a_n\\), let's make a new sequence given by:</p> \\[ b_n = |a_n|^{\\frac{1}{n}} \\] <p>If the limit of sequence \\(\\{b_n\\}\\) converges and is:</p> <ul> <li>less than 1, then the series \\(\\sum_{n=1}^{\\infty} a_n\\) converges;</li> <li>greater than 1, then the series \\(\\sum_{n=1}^{\\infty} a_n\\) diverges;</li> <li>equals 1, then you can't tell what the hecks is going on.</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#the-integral-test","title":"The integral test","text":"<p>If \\(f\\) is a decreasing positive function such that \\(f(n) = a_n\\) for all positive integers \\(n\\), then:</p> \\[ \\int_{1}^{\\infty} f(x) dx \\] <p>and</p> \\[ \\sum_{n = 1}^{\\infty} a_n \\] <p>either both converge or both diverge.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#the-alternating-series-test","title":"The alternating series test","text":"<p>The <code>alternating series test</code> says that if a series \\(\\sum_{n = 1}^{\\infty}\\), and the absolute values of its terms are decreasing to \\(0\\), then the series converges.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/13_sequances_and_series/#how-to-solve-series-problems","title":"How to Solve Series Problems","text":"<ol> <li><code>Is the series geometric?</code> If your series only involves exponentials like \\(2^n\\) or \\(e^{3n}\\), it might be a geometric series, or it might be the sum of one or more geometric series.</li> <li><code>Do the terms got to 0?</code> If the series isn't geometric, try n-th term test.</li> <li><code>Are there negative terms in the series?</code> If so, you may have to use the absolute convergence test or the alternating series test.</li> <li><code>Are factorials involved?</code> If so, use ratio test</li> <li><code>Are there tricky exponentials with n in the base and the exponent?</code> If so, try root test.</li> <li><code>Do the terms have a factor ef exactly $1/n$ as well as logarithms?</code>, In this case, try integral test.</li> <li><code>Do none of the above tests seem to work?</code> You may have to use the comparison test or the limit comparison test.</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Calculus/14_taylor/","title":"Tylor Polynomials, Tylor Series and Power Series","text":""},{"location":"%E6%95%B0%E5%AD%A6/Calculus/14_taylor/#approximations-and-taylor-polynomials","title":"Approximations and Taylor Polynomials","text":"<p>Here's a nice fact: for any real number x, we have:</p> \\[ e^x \\cong 1 + x + \\frac{x^2}{2} + \\frac{x^3}{6} \\] <p>Also, the closer x is to 0, the better the approximation.</p> <p>Let's say we have some function \\(f\\) which is very smooth, so that it can be repeatedly differentiated as many times as you like without causing any problems. Here is the question: what is the equation of the line which best approximates the curve \\(y = f(x)\\) near the point \\((a, f(a))\\)? The answer to this question is that the line we're looking for is the tangent line to the curve at the point \\((a, f(a))\\):</p> \\[ y = f(a) + f'(a)(x - a) \\] <p></p> <p>Why stick to lines? What is the equation of the quadratic which best approximates the curve \\(y = f(x)\\) near \\((a, f(a))\\)? It turns out that the formula for the quadratic which best approximates the curve \\(y = f(x)\\) for \\(x\\) near \\(a\\) is given by:</p> \\[ y = f(a) + f'(a)(x - a) + \\frac{f''(a)}{2} (x - a)^2 \\] <p>This is actually a quadratic in \\(x\\), because if you expand \\((x -a)^2\\), the highest power of \\(x\\) floating around is \\(x^2\\)</p> <p>Let's call the quadratic \\(P_2\\):</p> \\[ P_2(x) = f(a) + f'(a) (x - a) + \\frac{f''(a)}{2} (x -  a)^2 \\] <p>Let's continue the same pattern, except that we'll use some arbitrary degree \\(N\\) instead of just 1 or 2. So, here's our question: which polynomial of degree \\(N\\) or less gives the best approximation to \\(f(x)\\) for values of \\(x\\) near \\(a\\)? The answer is given by A Tylor approximation theorem:</p> <p>If \\(f\\) is smooth at \\(x = a\\), then of all the polynomials of degree \\(N\\) or less, the one which best approximates \\(f(x)\\) for \\(x\\) near \\(a\\) is given by:</p> \\[ P_N(x) = f(a) + f'(a)(x - a) + \\frac{f''(a)}{2!}(x - a)^2 + \\frac{f^{(3)}(a)}{3!} (x - a)^3 + \\cdots + \\frac{f^{(n)}(a)}{N!} (x - a)^N \\] <p>In sigma notation, the formula looks like this:</p> \\[ P_N(x) = \\sum_{n = 0}^{N} \\frac{f^{(n)}(a)}{n!} (x - a)^n \\] <p>We call the polynomial \\(P_N\\) <code>the Nth-order Taylor polynomial of $f(x)$</code></p> <p>Now we have a approximation for \\(f(x)\\), but how good is it? Here comes another formula for the error, the <code>Taylor' Theorem</code>:</p> <p>In above contents we have a function's Nth-order Taylor polynomial about \\(x = a\\):</p> \\[ P_N(x) = \\sum_{n = 0}^{N} \\frac{f^{(n)}(a)}{n!} (x - a)^n \\] <p>We want to use the value of \\(P_N(x)\\) to approximate the true value \\(f(x)\\), so we consider the error term, which is the difference between the true value and the approximate value:</p> \\[ R_N(x) = f(x) - P_N(x) \\] <p>Actually, \\(R_N(x)\\) is called the <code>Nth-order term</code>, it's also referred to as the <code>Nth-order remainder term</code>. Tylor's Theorem gives an alternative formula for \\(R_N(x)\\):</p> \\[ R_N(x) = \\frac{f^{(N + 1)}(c)}{(N + 1)!} (x - a)^{N + 1} \\] <p>where \\(c\\) is some number which lies between \\(x\\) and \\(a\\).</p> <p>Since \\(f(x) = P_N(x) + R_N(x)\\), we can write:</p> \\[ f(x) = \\sum_{n = 0}^{N} \\frac{f^{(n)}(a)} {n!} (x - a)^n + \\frac{f^{(N + 1)}(c)} {(N + 1)!} (x - a)^{N + 1} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/00_summary/","title":"Summary","text":"<p>Here are the notes for the MIT Linear Algebra.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/01_geometry_of_linear_equations/","title":"The Geometry of Linear Equations","text":"<p>The fundamental problem of n linear equations in n unknowns, for example:</p> \\[ \\begin{align} 2x - y = 0 \\\\ -x + 2y = 3 \\end{align} \\] <p>In this first lecture on linear algebra we view this problem in three ways.</p> <p>The system above is two dimensional(\\(n = 2\\)). By adding a third variable z we could expand it to three dimensions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/01_geometry_of_linear_equations/#row-picture","title":"Row Picture","text":"<p>Plot the points that satisfy each equation. The interaction of the plots(if they do intersect) represents the solution to the system of equations. Looking at the figure below we see that the solution to this system of equations is \\(x = 1, y = 2\\).</p> <p></p> <p>We plug this solution into the original system of equations to check our work:</p> \\[ \\begin{align} 2 \\times 1 - 2 = 0 \\\\ -1 + 2 \\times 2 = 3 \\end{align} \\] <p>The solution to a three dimensional system of equations is the common point of intersection of three planes(if there is one).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/01_geometry_of_linear_equations/#column-picture","title":"Column Picture","text":"<p>In the column picture we rewrite the system of linear equations as a single equation by turning the coefficients in the columns of the system into vectors.</p> \\[ x \\begin{bmatrix} 2 \\\\ -1 \\end{bmatrix} + y \\begin{bmatrix} -1 \\\\ 2 \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 3 \\end{bmatrix} \\] <p>Given two vector \\(\\mathbf{c}\\) and \\(\\mathbf{d}\\) and scalars \\(x\\) and \\(y\\), the sum \\(x\\mathbf{c} + y\\mathbf{d}\\) is called a <code>linear combination</code> of \\(\\mathbf{c}\\) and \\(\\mathbf{d}\\). Linear combinations are important throughout this course.</p> <p>Geometrically, we want to find numbers \\(x\\) and \\(y\\) so that \\(x\\) copies of vector \\(\\begin{bmatrix} 2 \\\\ -1 \\end{bmatrix}\\) added to \\(y\\) copies of vector \\(\\begin{bmatrix} -1 \\\\ 2 \\end{bmatrix}\\) equals the vector \\(\\begin{bmatrix} 0 \\\\ 3 \\end{bmatrix}\\). As we see from the figure below, \\(x = 1\\) and \\(x = 2\\), agreeing with the row picture.</p> <p></p> <p>In three dimensions, the column picture requires us to find a linear combination of three 3-dimensional vectors that equals the vector \\(\\mathbf{b}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/01_geometry_of_linear_equations/#matrix-picture","title":"Matrix Picture","text":"<p>We write the system of equations:</p> \\[ \\begin{align} 2x - y = 0 \\\\ -x + 2y = 3 \\end{align} \\] <p>as a single equation by using matrices and vectors:</p> \\[ \\begin{bmatrix} 2 &amp; -1 \\\\ -1 &amp; 2\\end{bmatrix} \\begin{bmatrix} x \\\\ y\\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 3\\end{bmatrix} \\] <p>The matrix \\(A = \\begin{bmatrix} 2 &amp; -1 \\\\ -1 &amp; 2 \\end{bmatrix}\\) is called the <code>coefficient matrix</code>. The vector \\(x = \\begin{bmatrix} x \\\\ y\\end{bmatrix}\\) is the vector of unknowns. The values on the right hand side of the equations form the vector \\(\\mathbf{b}\\):</p> \\[ A \\mathbf{x} = \\mathbf{b} \\] <p>The three dimensional matrix picture is very like the two dimensional one, except that the vectors and matrices increase in size.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/01_geometry_of_linear_equations/#matrix-multiplication","title":"Matrix Multiplication","text":"<p>How do we multiply a matrix \\(A\\) by a vector \\(\\mathbf{x}\\)?</p> \\[ \\begin{bmatrix} 2 &amp; 5 \\\\ 1 &amp; 3\\end{bmatrix} \\begin{bmatrix} 1 \\\\ 2\\end{bmatrix} = ? \\] <p>One method is to think of the entries of \\(\\mathbf{x}\\) as the coefficients of a linear combination of the column vectors of the matrix:</p> \\[ \\begin{bmatrix} 2 &amp; 5 \\\\ 1 &amp; 3\\end{bmatrix} \\begin{bmatrix} 1 \\\\ 2\\end{bmatrix} = 1 \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + 2 \\begin{bmatrix} 5 \\\\ 3 \\end{bmatrix} = \\begin{bmatrix} 12 \\\\ 7 \\end{bmatrix} \\] <p>This technique shows that \\(A \\mathbf{x}\\) is a linear combination of the columns of \\(A\\).</p> <p>You may also calculate the product \\(A\\mathbf{x}\\) by taking the dot product of each row of \\(A\\) with the vector \\(\\mathbf{x}\\):</p> \\[ \\begin{bmatrix} 2 &amp; 5 \\\\ 1 &amp; 3\\end{bmatrix} \\begin{bmatrix} 1 \\\\ 2\\end{bmatrix} = \\begin{bmatrix} 2 \\cdot 1 + 5 \\cdot 2 \\\\ 1 \\cdot 1 + 3 \\cdot 2 \\end{bmatrix} = \\begin{bmatrix} 12 \\\\ 7 \\end{bmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/01_geometry_of_linear_equations/#linear-independence","title":"Linear Independence","text":"<p>In the column and matrix pictures, the right hand side of the equation is a vector \\(\\mathbf{b}\\). Given a matrix \\(A\\), can we solve:</p> \\[ A \\mathbf{x} = \\mathbf{b} \\] <p>for every possible vector \\(\\mathbf{b}\\)? In other words, do the linear combination of the column vectors fill the \\(xy\\)-plane(or space, in the three dimensional case)?</p> <p>If the answer is \"no\", we say that \\(A\\) is a <code>singular matrix</code>. In this singular case its column vectors are <code>linear dependent</code>; all linear combinations of those vectors lie on a point or line(in two dimensions) or plane(in three dimensions). The combinations don't fill the whole space.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/02_overview/","title":"An Overview of Linear Algebra","text":"<p>Linear algebra progresses from vectors to matrices to subspaces.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/02_overview/#vectors","title":"Vectors","text":"<p>What do you do with vectors? Take combinations.</p> <p>We can multiply vectors by scalars, add, and subtract. Given vectors \\(\\mathbf{u}\\), \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) we can form the <code>linear combination</code> \\(x_1 \\mathbf{u} + x_2\\mathbf{v} + x_3\\mathbf{w} = \\mathbf{b}\\).</p> <p>An example in \\(\\mathbb{R}^3\\) would be:</p> \\[ \\mathbf{u} = \\begin{bmatrix} 1 \\\\ -1 \\\\ 0 \\end{bmatrix}, \\mathbf{v} = \\begin{bmatrix} 0 \\\\ 1 \\\\ -1 \\end{bmatrix}, \\mathbf{w} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 1 \\end{bmatrix} \\] <p>The collection of all multiples of \\(\\mathbf{u}\\) forms a line through the origin. The collection of all multiples of \\(\\mathbf{v}\\) forms another line. The collection of all combinations of \\(\\mathbf{u}\\) and \\(\\mathbf{v}\\) forms a plane. Taking all combinations of some vectors creates a <code>subspace</code>.</p> <p>We could continue like this, or we can use a matrix to add in all multiples of \\(\\mathbf{w}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/02_overview/#matrices","title":"Matrices","text":"<p>Create a matrix \\(A\\) with vectors \\(\\mathbf{u}\\), \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) in its colums:</p> \\[ A = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ -11 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\end{bmatrix} \\] <p>The product:</p> \\[ A \\mathbf{x} =  \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ -1 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} =  \\begin{bmatrix} x_1 \\\\ -x_1 + x_2 \\\\ -x_2 + x_3 \\end{bmatrix} \\] <p>equals the sum \\(x_1\\mathbf{u} + x_2\\mathbf{v} + x_3\\mathbf{w} = \\mathbf{b}\\). The product of a matrix and a vector is a combination of the columns of the matrix. (This particular matrix A is a <code>difference matrix</code> because the components of \\(A\\mathbf{x}\\) are differences of the components of that vector.)</p> <p>When we say \\(x_1 \\mathbf{u} + x_2 \\mathbf{v} + x_3 \\mathbf{w} = \\mathbf{b}\\), we're thinking about multiplying numbers by vectors; when we say \\(A\\mathbf{x} = \\mathbf{b}\\), we're thinking about multiplying a matrix(whose columns are \\(\\mathbf{u}\\), \\(\\mathbf{v}\\), and \\(\\mathbf{w}\\)) by the numbers. The calculations are the same, but our perspective has changed.</p> <p>For any input vector \\(\\mathbf{x}\\), the output of the operation \"multiplication by A\" is some vector \\(\\mathbf{b}\\):</p> \\[ A \\begin{bmatrix} 1 \\\\ 4 \\\\ 9 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 3 \\\\ 5 \\end{bmatrix} \\] <p>A deeper question is to start with a vector \\(\\mathbf{b}\\) and ask \"for what vectors \\(\\mathbf{x}\\) does \\(A\\mathbf{x} = \\mathbf{b}\\)?\" In our example, this means solving three equations in three unknowns, solving:</p> \\[ A\\mathbf{x} = \\begin{bmatrix} 1 &amp; 0 &amp; \\\\ -1 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} = \\begin{bmatrix} x_1 \\\\ x_2 - x_1 \\\\ x_3 - x_2 \\end{bmatrix} = \\begin{bmatrix} b_1 \\\\ b_2 \\\\ b_3 \\end{bmatrix} \\] <p>is equivalent to solving:</p> \\[ \\begin{align} x_1 = b_1 \\\\ x_2 - x_1 = b_2 \\\\ x_3 - x_2 = b_3 \\end{align} \\] <p>In vector form, the solution is:</p> \\[ \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} = \\begin{bmatrix} b_1 \\\\ b_1 + b_2 \\\\ b_1 + b_2 + b_3 \\end{bmatrix} \\] <p>But this just says:</p> \\[ \\mathbf{x} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 \\end{bmatrix} \\begin{bmatrix} b_1 \\\\ b_2 \\\\ b_3 \\end{bmatrix} \\] <p>or</p> \\[ \\mathbf{x} = A^{-1} \\mathbf{b} \\] <p>If the matrix \\(A\\) is invertible, we can multiply on both sides by \\(A^{-1}\\) to find the unique solution \\(\\mathbf{x}\\) to \\(A\\mathbf{x} = \\mathbf{b}\\). We might say that \\(A\\) represents a transform \\(\\mathbf{x} \\to \\mathbf{b}\\) that has an inverse transform \\(\\mathbf{b} \\to \\mathbf{x}\\).</p> <p>In particular, if \\(\\mathbf{b} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\\) then \\(\\mathbf{x} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\\)</p> <p>The second example has the same columns \\(\\mathbf{u}\\) and \\(\\mathbf{v}\\) and replaces column vector \\(\\mathbf{w}\\):</p> \\[ C = \\begin{bmatrix} 1 &amp; 0 &amp; -1 \\\\ -1 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\end{bmatrix} \\] <p>Then</p> \\[ C\\mathbf{x} = \\begin{bmatrix} 1 &amp; 0 &amp; -1 \\\\ -1 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} = \\begin{bmatrix} x_1 - x_3 \\\\ x_2 - x_1 \\\\ x_3 - x_2 \\end{bmatrix} \\] <p>And our system of three equations in three unknowns become circular.</p> <p>Where before \\(A\\mathbf{x} = \\mathbf{0}\\) implied \\(\\mathbf{x} = \\mathbf{0}\\), there are non-zero vectors \\(\\mathbf{x}\\) for which \\(C\\mathbf{x} = \\mathbf{0}\\). For any vector \\(\\mathbf{x}\\) which \\(x_1 = x_2 = x_3, C\\mathbf{x} = \\mathbf{0}\\). This is a significant difference; we can't multiply both sides of \\(C\\mathbf{x} = \\mathbf{0}\\) by an inverse to find a non-zero solution \\(\\mathbf{x}\\).</p> <p>The system of equations encoded in \\(C\\mathbf{x} = \\mathbf{b}\\) is:</p> \\[ \\begin{align} x_1 - x_3 = b_1 \\\\ x_2 - x_1 = b_2 \\\\ x_3 - x_2 = b_3 \\end{align} \\] <p>If we all these three equations together, we get:</p> \\[ 0 = b_1 + b_2 + b_3 \\] <p>This tells us that \\(C\\mathbf{x} = \\mathbf{b}\\) has a solution \\(\\mathbf{x}\\) only when the components of \\(\\mathbf{b}\\) sum to \\(0\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/02_overview/#subspaces","title":"Subspaces","text":"<p>Geometrically, the columns of \\(C\\) lie in the same  plane(they are <code>dependent</code>, the columns of \\(A\\) are <code>independent</code>). There are many vectors in \\(\\mathbb{R}^3\\) which do not lie in that plane. Those vectors cannot be written as a linear combination of the columns of \\(C\\) and so correspond to values of \\(\\mathbf{b}\\) for which \\(C\\mathbf{x} = \\mathbf{b}\\) has no solution \\(\\mathbf{x}\\). The linear combinations of the columns of \\(C\\) form a two dimensional <code>subspace</code> of \\(\\mathbb{R}^3\\).</p> <p>This plane of combinations of \\(\\mathbf{u}\\), \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) can be described as \"all vectors \\(C\\mathbf{x}\\)\". But we know that the vectors \\(\\mathbf{b}\\) for which \\(C\\mathbf{x} = \\mathbf{b}\\) satisfy the condition \\(b_1 + b_2 + b_3 = 0\\). So the plane of all combinations of \\(\\mathbf{u}\\) and \\(\\mathbf{v}\\) consists of all vectors whose components sum to \\(0\\).</p> <p>If we take all combinations of:</p> \\[ \\mathbf{u} = \\begin{bmatrix} 1 \\\\ -1 \\\\ 0\\end{bmatrix}, \\mathbf{v} = \\begin{bmatrix} 0 \\\\ 1 \\\\ -1\\end{bmatrix}, \\mathbf{w} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 1\\end{bmatrix} \\] <p>we get the entire space \\(\\mathbb{R}^3\\); the equation \\(A\\mathbf{x} = \\mathbf{b}\\) has a solution for every \\(\\mathbf{b}\\) in \\(\\mathbb{R}^3\\). We say that \\(\\mathbf{u}\\), \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) form a <code>basis</code> for \\(\\mathbb{R}^3\\).</p> <p>A <code>basis</code> for \\(\\mathbb{R}^n\\) is a collection of \\(n\\) independent vectors in \\(\\mathbb{R}^n\\). Equaivalently, a <code>basis</code> is a collection of \\(n\\) vectors whose combinations cover the whole space. Or, a collection of vectors forms a basis whenever a matrix which has those vectors as its columns is invertible.</p> <p>A <code>vector space</code> is a collection of vectors that is closed under linear combinations. A <code>subspace</code> is a vector space inside another vector space; a plane through the origin in \\(\\mathbb{R}^3\\) is an example of a subspace. A subspace could be equal to the space it's contained in; the smallest subspace contians only the zero vector.</p> <p>The subspace of \\(\\mathbb{R}^3\\) are:</p> <ul> <li>the origin;</li> <li>a line through the origin;</li> <li>a plane through the origin;</li> <li>all of \\(\\mathbb{R}^3\\).</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/02_overview/#conclusion","title":"Conclusion","text":"<p>When you look at a matrix, try to see \"what is it doing\".</p> <p>Matrices can be rectangular; we can have seven equations in three unknowns. Rectangular matrices are not invertible, but the symmetric, square matrix \\(A^TA\\) that often appears when studying rectangular matrices may be invertible.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/03_elimination/","title":"Elimination with Matrices","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/03_elimination/#method-of-elimination","title":"Method of Elimination","text":"<p><code>Elimination</code> is the technique most commonly used by computer software to solve systems of linear equations. It finds a solution \\(\\mathbf{x}\\) to \\(A\\mathbf{x} = \\mathbf{b}\\) whenever the matrix \\(A\\) is invertible. In the example used in class:</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 3 &amp; 8 &amp; 1 \\\\ 0 &amp; 4 &amp; 1 \\end{bmatrix} \\] <p>and</p> \\[ \\mathbf{b} = \\begin{bmatrix} 2 \\\\ 12 \\\\ 2 \\end{bmatrix} \\] <p>The steps are:</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 3 &amp; 8 &amp; 1 \\\\ 0 &amp; 4 &amp; 1 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 2 &amp; -2 \\\\ 0 &amp; 4 &amp; 1 \\end{bmatrix} \\to U = \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 2 &amp; -2 \\\\ 0 &amp; 0 &amp; 5 \\end{bmatrix} \\] <p>The number \\(1\\) in the upper left corner of \\(A\\) is called the <code>first pivot</code>. We recopy the first row, then multiply the numbers in it by an appropriate value(in this case, 3) and substract those values from the numbers in the second row. The first number in the second row becomes \\(0\\). We have thus <code>eliminated</code> the \\(3\\) in row 2 and column 1.</p> <p>The next step is to perform another elimination to get a \\(0\\) in row 3 column 1; here this is already the case.</p> <p>The <code>second pivot</code> is the value 2 which now appears in row 2 column 2. We find a multiplier (in this case 2) by which we multiply the second row to eliminate the 4 in row 3 column 2. The <code>third pivot</code> is then the 5 now in row 3 column 3.</p> <p>We started with an invertible matrix \\(A\\) and ended with an <code>upper triangular</code> matrix \\(U\\); the lower left portion of \\(U\\) is filled with zeros. Pivots \\(1, 2, 5\\) are on the <code>diagonal</code> of \\(U\\).</p> <p>When calculating by hand, we can substract the vector \\(\\mathbf{b} = \\begin{bmatrix} 2 \\\\ 12 \\\\ 2 \\end{bmatrix}\\) efficiently by <code>augmenting</code> the matrxi \\(A\\), appending the vector \\(\\mathbf{b}\\) as a fourth or final column:</p> \\[ \\begin{bmatrix} 1 &amp; 2 &amp; 1  &amp; \\vdots &amp; 2 \\\\ 3 &amp; 8 &amp; 1 &amp; \\vdots &amp; 12 \\\\ 0 &amp; 4 &amp; 1 &amp; \\vdots &amp; 2 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 1 &amp; \\vdots &amp; 2 \\\\ 0 &amp; 2 &amp; -2 &amp; \\vdots &amp; 6 \\\\ 0 &amp; 4 &amp; 1 &amp; \\vdots &amp; 2 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 1 &amp; \\vdots &amp; 2 \\\\ 0 &amp; 2 &amp; -2 &amp; \\vdots &amp; 6 \\\\ 0 &amp; 0 &amp; 5 &amp; \\vdots &amp; -10 \\end{bmatrix} \\] <p>Finally, we have \\(U = \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 2 &amp; -2 \\\\ 0 &amp; 0 &amp; 5 \\end{bmatrix}\\) from \\(A\\) and \\(\\mathbf{c} = \\begin{bmatrix} 2 \\\\ 6 \\\\ -10 \\end{bmatrix}\\) comes from \\(\\mathbf{b}\\).</p> <p>The equation \\(U\\mathbf{x} = \\mathbf{c}\\) is easy to solve by <code>back substitution</code>:</p> \\[ \\begin{align} x + 2y + z = 2 \\\\ 2y - 2z = 6 \\\\ 5z = -10 \\end{align} \\] <p>We have \\(z = -2, y = 1\\) and \\(x = 2\\). This is also the solution to the original system \\(A\\mathbf{x} = \\mathbf{b}\\)</p> <p>The <code>determinant</code> of \\(U\\) is the product of the pivots. We will see this again.</p> <p>Pivots may not be \\(0\\). If there is a zero in the pivot position, we must exchange that row with one below to get a non-zero value in the pivot position.</p> <p>If there is a zero in the pivot position and no non-zero value below it, then the matrix \\(A\\) is <code>not invertible</code>. Elimination can not be used to find a unique solution to this system of equations--it doesn't exist.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/03_elimination/#elimination-matrices","title":"Elimination Matrices","text":"<p>The product of a matrix(3x3) and a column vector(3x1) is a column vector(3x1) that is a linear combination of the columns of the matrix.</p> <p>The product of a row(1x3) and a matrix(3x3) is a row(1x3) that is a linear combination of the rows of the matrix.</p> <p>We can subtract 3 times row 1 of matrix A from row 2 of A by calculating the matrix product:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ -3 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 3 &amp; 8 &amp; 1 \\\\ 0 &amp; 4 &amp; 1 \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 2 &amp; -2 \\\\ 0 &amp; 4 &amp; 1 \\end{bmatrix} \\] <p>The <code>elimination matrix</code> used to eliminate the entry in row m column n is denoted \\(E_{mn}\\). The calculation above took us from \\(A\\) to \\(E_{21}A\\). The three elimination steps leading to \\(U\\) were \\(E_{32}(E_{31}(E_{21}A)) = U\\), where \\(E_{31} = I\\). Thus \\(E_{32}(E_{21}A) = U\\).</p> <p>Matrix multiplication is <code>associative</code>, so we can also write \\((E_{32}E_{21})A = U\\). The product \\(E_{32}E_{21}\\) tells us how to get from \\(A\\) to \\(U\\). The <code>inverse</code> of matrix \\(E_{32}E_{21}\\) tells us how to get from \\(U\\) to \\(A\\).</p> <p>If we solve \\(U\\mathbf{x} = EA\\mathbf{x} = E\\mathbf{b}\\), then it is also true that \\(A\\mathbf{x} = \\mathbf{b}\\). This is why the method of elimination works: all steps can be reversed.</p> <p>A <code>permutation matrix</code> exchanges two rows of matrix:</p> \\[ P = \\begin{bmatrix} 0 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>The first and second rows of the matrix \\(PA\\) are the second and first rows of the matrix \\(A\\). The matrix \\(P\\) is constructed by exchanging rows of the identity matrix.</p> <p>To exchange the columns of a matrix, multiply on the right (as in \\(AP\\)) by a permutation matrix. Note that matrix multiplication is not <code>commutative</code>: \\(PA \\ne AP\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/03_elimination/#inverse","title":"Inverse","text":"<p>We have a matrix:</p> \\[ E_{21} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ -3 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>which substracts 3 times row 1 from row 2. To \"undo\" this operation, we must add 3 times row 1 to row 2 using the inverse matrix:</p> \\[ E_{21}^{-1} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 3 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>In fact, \\(E_{21}^{-1}E_{21} = I\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/","title":"Multiplication and Inverse Matrices","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#matrix-multiplication","title":"Matrix Multiplication","text":"<p>We discuss four different ways of thinking about the product of two matrices. </p> \\[ AB = C \\] <p>If \\(A\\) is an \\(m \\times n\\) matrix and \\(B\\) is an \\(n \\times p\\) matrix, then \\(C\\) is an \\(m \\times p\\) matrix. We use \\(c_{ij}\\) to denote the entry in row i and column j of matrix \\(C\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#standard-row-times-column","title":"Standard (row times column)","text":"<p>The standard way of describing a matrix product is to say that \\(c_{ij}\\) equals the dot product  of row i of matrix A and column j of matrix B:</p> \\[ c_{ij} = \\sum_{k = 1}^{n} a_{ik}b_{kj} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#columns","title":"Columns","text":"<p>The product of matrix A and column j of matrix B equals column j of matrix C. This tells us that the columns of C are combinations of columns of A.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#rows","title":"Rows","text":"<p>The product of row i of matrix A and matrix B equals row i of matrix C. So the rows of C are combinations of rows of B.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#column-times-row","title":"Column Times Row","text":"<p>A column of A is an \\(m \\times 1\\) vector and a row of B is a \\(1 \\times p\\) vector. Their product is a matrix:</p> \\[ \\begin{bmatrix} 2 \\\\ 3 \\\\ 4 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 6 \\end{bmatrix} = \\begin{bmatrix} 2 &amp; 12 \\\\ 3 &amp; 18 \\\\ 4 &amp; 24 \\end{bmatrix} \\] <p>The columns of this matrix are multiplies of the column of A and the rows are multiplies of the row of B. If we think of the entries in these rows as the coordinates \\((2, 12)\\) or \\((3, 18)\\) or \\((4, 24)\\), all these points lie on the same line; similarly for the two column vectors. Later we'll see that this is equaivalent to saying that the <code>row space</code> of this matrix is a single line, as is the <code>column space</code>.</p> <p>The product of A and B is the sum of these \"column times rows\" matrices:</p> \\[ AB = \\sum_{k = 1}^{n} \\begin{bmatrix} a_{1k} \\\\ \\vdots \\\\ a_{mk}\\end{bmatrix} \\begin{bmatrix} b_{k1} &amp; \\cdots &amp; b_{kn}\\end{bmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#blocks","title":"Blocks","text":"<p>If we subdivide A and B into blocks that match properly, we can write the product \\(AB = C\\) in terms of products of the blocks:</p> \\[ \\begin{bmatrix} A_1 &amp; A_2 \\\\ A_3 &amp; A_4 \\end{bmatrix} \\begin{bmatrix} B_1 &amp; B_2 \\\\ B_3 &amp; B_4 \\end{bmatrix} =\\begin{bmatrix} C_1 &amp; C_2 \\\\ C_3 &amp; C_4 \\end{bmatrix} \\] <p>Here \\(C_1 = A_1B_1 + A_2B_3\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#inverses","title":"Inverses","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#square-matrices","title":"Square Matrices","text":"<p>If \\(A\\) is a square matrix, the most important question you can ask it is whether it has an inverse \\(A^{-1}\\). If it does, then \\(A^{-1}A = I = AA^{-1}\\) and we say that \\(A\\) is <code>invertible</code> or <code>nonsingular</code>.</p> <p>If \\(A\\) is <code>singular</code>, its determinant is zero and we can find some non-zero vector \\(\\mathbf{x}\\) for which \\(A\\mathbf{x} = 0\\). For example:</p> \\[ \\begin{bmatrix} 1 &amp; 3 \\\\ 2 &amp; 6 \\end{bmatrix} \\begin{bmatrix} 3 \\\\ -1 \\end{bmatrix} =  \\begin{bmatrix} 0 \\\\ 0 \\end{bmatrix} \\] <p>In this example, three times the column minus one times the second column equals the zero vector; the two column vectors lie on the same line.</p> <p>Finding the inverse of a matrix is closely related to solving systems of linear equations:</p> \\[ \\begin{bmatrix} 1 &amp; 3 \\\\ 2 &amp; 7 \\end{bmatrix} \\begin{bmatrix} a &amp; c \\\\ b &amp; d \\end{bmatrix} =  \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; 1 \\end{bmatrix} \\] \\[ A A^{-1} = I \\] <p>can be read as saying \"A times column j of \\(A^{-1}\\) equals column j of the identity matrix\". This is just a special form of the equation \\(A\\mathbf{x} =\\mathbf{b}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/04_multi_inverse/#gauss-jordan-elimination","title":"Gauss-Jordan Elimination","text":"<p>We can use the method of elimination to solve two or more linear equations at the same time. Just augment the matrix with the whole identity matrix \\(I\\):</p> \\[ \\begin{bmatrix} 1 &amp; 3 &amp; \\vdots &amp; 1 &amp; 0 \\\\ 2 &amp; 7 &amp; \\vdots &amp; 0 &amp; 1 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 3 &amp; \\vdots &amp; 1 &amp; 0 \\\\ 0 &amp; 1 &amp; \\vdots &amp; -2 &amp; 1 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 0 &amp; \\vdots &amp; 7 &amp; -3 \\\\ 0 &amp; 1 &amp; \\vdots &amp; -2 &amp; 1 \\end{bmatrix} \\] <p>Once we have used Gauss's elimination method to convert the origin matrix to upper triangular form, we go on to use Jorden's idea of eliminating entries  in the upper right portion of the matrix.</p> \\[ A^{-1} = \\begin{bmatrix} 7 &amp; -3 \\\\ -2 &amp; 1 \\end{bmatrix} \\] <p>As in the last lecture, we can write the results of the elimination method as the product of a number of elimination matrix \\(E_{ij}\\) whith the matrix \\(A\\). Letting \\(E\\) be the product of all \\(E_{ij}\\), we write the result of this Guass-Jorden elimination using block matrix \\(E [A | I] = [I | E]\\). But if \\(EA = I\\), then \\(E = A^{-1}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/05_a_lu/","title":"Factorization into A=LU","text":"<p>One goal of today's lecture is to understand Gaussian elimination int terms of matrices; to find a matrix \\(L\\) such that \\(A = LU\\). We start with some useful facts about matrix multiplication.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/05_a_lu/#inverse-of-a-product","title":"Inverse of a product","text":"<p>The inverse of a matrix product \\(AB\\) is \\(B^{-1}A^{-1}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/05_a_lu/#transpose-of-a-product","title":"Transpose of a product","text":"<p>We obtain the <code>transpose</code> of a matrix by exchanging its rows and columns. In other words, the entry in row \\(i\\) column \\(j\\) of \\(A\\) is the entry in row \\(j\\) column \\(i\\) of \\(A^T\\).</p> <p>The transpose of a matrix product \\(AB\\) is \\(B^TA^T\\). For any invertible matrix \\(A\\), the inverse of \\(A^T\\) is \\((A^{-1})^T\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/05_a_lu/#a-lu","title":"A = LU","text":"<p>We've seen how to use elimination to convert a suitable matrix \\(A\\) into upper triangular matrix \\(U\\). This leads to the factorization \\(A = LU\\), which is very helpful in understanding the matrix \\(A\\).</p> <p>Recall that (when there are no row exchanges) we can describe the elimination of the entries of matrix \\(A\\) in terms of multiplication by a succession of elimination matrices \\(E_{ij}\\), so that \\(A \\to E_{21}A \\to E_{31}E_{21}A \\to \\cdots \\to U\\). In the two by two case this looks like:</p> \\[ E_{21} \\quad A \\quad = \\quad U \\] \\[ \\begin{bmatrix} 1 &amp; 0 \\\\ -4 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 2 &amp; 1 \\\\ 8 &amp; 7 \\end{bmatrix} = \\begin{bmatrix} 2 &amp; 1 \\\\ 0 &amp; 3 \\end{bmatrix} \\] <p>We can convert this to a factorization \\(A = LU\\) by \"canceling\" the matrix \\(E_{21}\\); multiply by its inverse to get \\(E_{21}^{-1}E_{21}A = E_{21}^{-1}U\\).</p> \\[ A \\quad = \\quad L \\quad U \\] \\[ \\begin{bmatrix} 2 &amp; 1 \\\\ 8 &amp; 7 \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 0 \\\\ 4 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 2 &amp; 1 \\\\ 0 &amp; 7 \\end{bmatrix} \\] <p>The matrix \\(U\\) is <code>upper triangular</code> with pivots on the diagonal. The matrix \\(L\\) is <code>lower triangular</code> and has ones on the diagonal. Sometimes we will also want to factor out a diagonal matrix whose entries are the pivots:</p> \\[ A \\qquad = \\qquad L \\qquad D \\qquad U' \\] \\[ \\begin{bmatrix} 2 &amp; 1 \\\\ 8 &amp; 7 \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 0 \\\\ 4 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 2 &amp; 0 \\\\ 0 &amp; 3 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 1/2 \\\\ 0 &amp; 1 \\end{bmatrix} \\] <p>In the three dimensional case, if \\(E_{32}E_{31}E_{21}A = U\\) then \\(A = E_{21}^{-1}E_{31}^{-1}E_{32}^{-1}U = LU\\).</p> <p>For example, suppose \\(E_{31}\\) is the identity matrix and \\(E_{32}\\) and \\(E_{21}\\) are as shown below:</p> \\[ E_{32} \\qquad E_{21} \\qquad = \\qquad E \\] \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; -5 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ -2 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ -2 &amp; 1 &amp; 0 \\\\ 10 &amp; -5 &amp; 1 \\end{bmatrix} \\] <p>The \\(10\\) in the below left corner arises because we subtracted twice the first row from the second row from the second row, then subtracted five times the new second row from the third.</p> <p>The factorization \\(A = LU\\) is preferable to the statement \\(EA = U\\) because the combination of row subtractions does not have the effect on \\(L\\) that it did on \\(E\\). Here \\(L = E^{-1} = E_{21}^{-1}E_{32}^{-1}\\):</p> \\[ E_{21}^{-1} \\qquad E_{32}^{-1} \\qquad = \\qquad L \\] \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 2 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 5 &amp; 1 \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 2 &amp; 1 &amp; 0 \\\\ 0 &amp; 5 &amp; 1 \\end{bmatrix} \\] <p>Notice the \\(0\\) in row three column one of \\(L = E^{-1}\\), where \\(E\\) had a \\(10\\). If there are no row exchanges, the multipliers from the elimination matrices are copied directly into \\(L\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/05_a_lu/#how-expensive-is-elimination","title":"How expensive is elimination?","text":"<p>Some application require inverting very large matrices. This is done using a computer, of course. How hard will the compulter have to work? How long will it take?</p> <p>When using elimination to find the factorization \\(A = LU\\) we just saw that we can build \\(L\\) as we go by keeping track of row subtractions. We have to remember \\(L\\) and (the matrix which will become) \\(U\\); we don't have to store \\(A\\) or \\(E_{ij}\\) in the computer's memory. How many operations does the computer perform during the elimination process for an \\(n \\times n\\) matrix? A typical operation is to multiply one row and then subtract it from another, which requires on the order of \\(n\\) operations. There are \\(n\\) rows, so the total number of operaations used in eliminating entries in the first column is about \\(n^2\\). The second row and column are shorter; that product costs about \\((n - 1)^2\\) operations, and so on. The total number of operations needed to factor \\(A\\) into \\(LU\\) is on the order of \\(n^3\\):</p> \\[ 1^2 + 2^2 + \\cdots + (n - 1)^2 + n^2 = \\sum_{i = 1}^n i^2 \\approx \\int_{0}^n x^2 dx = \\frac{1}{3} n^3 \\] <p>While we're factoring \\(A\\) we're also operating on \\(\\mathbf{b}\\). That costs about \\(n^2\\) operations, which is hardly worth couting compared to \\(\\frac{1}{3}n^3\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/05_a_lu/#row-exchanges","title":"Row exchanges","text":"<p>What if there are row exchanges? In other words, what happens if there's a zero in a pivot position? To swap two rows, we multiply on the left by a permutation matrix. Fro example,</p> \\[ P_{12} = \\begin{bmatrix} 0 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>swaps the first and second rows of a \\(3 \\times 3\\) matrix. The inverse of any permu7tation matrix \\(P\\) is \\(P^{-1} = P^T\\).</p> <p>There are \\(n!\\) different ways to permute the rows of an \\(n \\times n\\) matrix (including the permutation that leaves all rows fixed) so there are \\(n!\\) permutation matrices. These matrices form a <code>multiplicative group</code>.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/","title":"Transpose, permutations, spaces R^n","text":"<p>In this lecture we introduce vector spaces and their subspaces.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/#permutations","title":"Permutations","text":"<p>Multiplication by a permutation matrix \\(P\\) swaps the rows of a matrix; when applying the method of elimination we use permutation matrices to move zeros out of pivot positions. Our factorization \\(A = LU\\) then becomes \\(PA = LU\\), where \\(P\\) is a permutation matrix which reorders any number of rows of \\(A\\). Recall that \\(P^{-1} = P^T\\), i.e. that \\(P^TP = I\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/#transposes","title":"Transposes","text":"<p>When we take the transpose of a matrix, its rows become columns and its columns become rows. If we denote the entry in row \\(i\\) and column \\(j\\) of matrix \\(A\\) by \\(A_{ij}\\), then we can describe \\(A^T\\) by \\(A^T_{ij} = A_{ij}\\). For example:</p> \\[ \\begin{bmatrix} 1 &amp; 3 \\\\ 2 &amp; 3 \\\\ 4 &amp; 1 \\\\ \\end{bmatrix}^T = \\begin{bmatrix} 1 &amp; 2 &amp; 4\\\\ 3 &amp; 3 &amp; 1\\\\ \\end{bmatrix} \\] <p>A matrix \\(A\\) is <code>symmetric</code> if \\(A^T = A\\). Given any matrix \\(R\\)(not necessarily square) the product \\(R^TR\\) is always symmetric, because \\((R^TR)^T = R^T(R^T)^T = R^TR\\).(Note that \\((R^T)^T = R\\).)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/#vector-spaces","title":"Vector spaces","text":"<p>We can add vectors and multiply them by numbers, which means we can discuss <code>linear combinations</code> of vectors. These combinationss follow the rules of a <code>vector space</code>.</p> <p>One such vector space is \\(\\mathbb{R}^2\\), the set of all vectors with exactly two real number components. We depict the vector \\(\\begin{bmatrix}a \\\\ b \\end{bmatrix}\\) by drawing an arrow from the origin to the point \\((a, b)\\) which is \\(a\\) units to the right of the origin and \\(b\\) units above it, and we call \\(\\mathbb{R}^2\\) the <code>x-y plane</code>.</p> <p>Another example of a space is \\(\\mathbb{R}^n\\), the set of (column) vectors with \\(n\\) real number components.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/#closure","title":"Closure","text":"<p>The collection of vectors with exactly two <code>positive</code> real valued components is <code>not</code> a vector space. The sum of any two vectors in that collection is again in the collection, but multiplying any vector by, say, \\(-5\\), gives a vector that's not in the collection. We say that this collection of positive vectors is <code>closed</code> under addition but not under multiplication.</p> <p>If a collection of vectors is closed under linear combinations(i.e. under addtion and multiplication by any real numbers), and if multiplication and addtion behave in a reasonable way, then we call that collection a <code>vector space</code>.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/#subspaces","title":"Subspaces","text":"<p>A vector space that is contained inside of another vector space is called a <code>subspace</code> of that space. For example, take any non-zero vector \\(\\mathbf{v}\\) in \\(\\mathbb{R}^2\\). Then the set of all vectors \\(c\\mathbf{v}\\), where \\(c\\) is a real number, forms a subspace of \\(\\mathbb{R}^2\\). This collection of vectors describes a line through \\(\\begin{bmatrix}0 \\\\ 0\\end{bmatrix}\\) in \\(\\mathbb{R}^2\\) and is closed under addition.</p> <p>A line in \\(\\mathbb{R}^2\\) that does not pass through the origin is <code>not</code> a subspace of \\(\\mathbb{R}^2\\). Multiplying any vector on that line by \\(0\\) gives the zero vector, which does not lie on the line. Every subspace must contain the zero vector because vector spaces are closed under multiplication.</p> <p>The subspaces of \\(\\mathbb{R}^2\\) are:</p> <ol> <li>all of \\(\\mathbb{R}^2\\);</li> <li>any line through \\(\\begin{bmatrix} 0 \\\\ 0\\end{bmatrix}\\);</li> <li>the zero vector(\\(Z\\)) alone.</li> </ol> <p>The subspaces of \\(\\mathbb{R}^3\\) are:</p> <ol> <li>all of \\(\\mathbb{R}^3\\);</li> <li>any plane through \\(\\begin{bmatrix} 0 \\\\ 0 \\\\ 0\\end{bmatrix}\\);</li> <li>any line through \\(\\begin{bmatrix} 0 \\\\ 0 \\\\ 0\\end{bmatrix}\\);</li> <li>the zero vector(\\(Z\\)) alone.</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/06_trans_perm/#column-space","title":"Column space","text":"<p>Given a matrix \\(A\\) with columns in \\(\\mathbb{R}^3\\), these columns and all their linear combinations form a subspace of \\(\\mathbb{R}^3\\). This is the <code>column space</code> \\(C(A)\\). If \\(A = \\begin{bmatrix} 1 &amp; 3 \\\\ 2 &amp; 3 \\\\ 4 &amp; 1 \\end{bmatrix}\\), the column space of \\(A\\) is the plane through the origin in \\(\\mathbb{R}^3\\) containing \\(\\begin{bmatrix} 1 \\\\ 2 \\\\ 4\\end{bmatrix}\\) and \\(\\begin{bmatrix} 3 \\\\ 3 \\\\ 1\\end{bmatrix}\\).</p> <p>Our next task will be to understand the equation \\(A\\mathbf{x} = \\mathbf{b}\\) in terms of subspaces and the column space of \\(A\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/07_col_null_space/","title":"Column Space and Nullspace","text":"<p>In this lecture we continue to study subspaces, particularly the column space and nullspace of a matrix.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/07_col_null_space/#review-of-subspaces","title":"Review of subspaces","text":"<p>A vector space is a collection of vectors which is closed under linear combinations. In other words, for any two vectors \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) in the space and any two real numbers \\(c\\) and \\(d\\), the vector \\(c\\mathbf{v} + d\\mathbf{w}\\) is also in the vector space. A subspace is a vector space contianed inside a vector space.</p> <p>A plane \\(P\\) containing \\(\\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\\) and a line \\(L\\) containing \\(\\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\\) are both subspaces of \\(\\mathbb{R}^3\\). The union \\(P \\cup L\\) of those two subspaces is generally not a subspace, because the sum of a vector in \\(P\\) and a vector in \\(L\\) is probably not contained in \\(P \\cup L\\). The intersection \\(S \\cap T\\) of two subspace \\(S\\) and \\(T\\) is a subspace. To prove this, use the fact that both \\(S\\) and \\(T\\) are closed under linear combinations to show that their intersection is closed under linear combinations.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/07_col_null_space/#column-space-of-a","title":"Column space of A","text":"<p>The <code>column space</code> of a matrix \\(A\\) is the vector space made up of all linear combinations of the columns of \\(A\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/07_col_null_space/#solving-ax-b","title":"Solving Ax = b","text":"<p>Given a matrix \\(A\\), for what vectors \\(\\mathbf{b}\\) does \\(A\\mathbf{x} = \\mathbf{b}\\) have a solution \\(\\mathbf{x}\\)?</p> \\[ A = \\begin{bmatrix} 1 &amp; 1 &amp; 2 \\\\ 2 &amp; 1 &amp; 3 \\\\ 3 &amp; 1 &amp; 4 \\\\ 4 &amp; 1 &amp; 5 \\end{bmatrix} \\] <p>Then \\(A\\mathbf{x} = \\mathbf{b}\\) does not have a solution for every choice of \\(\\mathbf{b}\\) because solving \\(A\\mathbf{x} = \\mathbf{b}\\) is equivalent to solving four linear equations in three unknowns. If there is a solution \\(\\mathbf{x}\\) to \\(A\\mathbf{x} = \\mathbf{b}\\), then \\(\\mathbf{b}\\) must be a linear combination of the columns of \\(A\\). Only three columns cannot fill the entire four dimensional vector space, some vectors \\(\\mathbf{b}\\) can not be expressed as linear combinations of columns of \\(A\\).</p> <p>Big question: what \\(\\mathbf{b}\\)'s allow \\(A\\mathbf{x} = \\mathbf{b}\\) to be solved?</p> <p>A useful approach is to choose \\(\\mathbf{x}\\) and find the vector \\(\\mathbf{b} = A\\mathbf{x}\\)  corresponding to that solution. The components of \\(\\mathbf{x}\\) are just the coefficients in a linear combination of columns of \\(A\\).</p> <p>The system of linear equations \\(A\\mathbf{x} = \\mathbf{b}\\) is <code>solvable</code> exactly when \\(\\mathbf{b}\\) is a vector in the <code>column space</code> of \\(A\\).</p> <p>For our example matrix \\(A\\), what can we say about the column space of \\(A\\)? Are the columns of \\(A\\) <code>independent</code>? In other words, does each column contribute something new to the subspace?</p> <p>The third column of \\(A\\) is the sum of the first two columns, so does not add anything to the subspace. The column space of our matrix \\(A\\) is a two dimensional subspace of \\(\\mathbb{R}^4\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/07_col_null_space/#nullspace-of-a","title":"Nullspace of A","text":"<p>The <code>nullspace</code> of a matrix is the collection of all solutions \\(\\mathbf{x} = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix}\\) to the equation \\(A\\mathbf{x} = \\mathbf{0}\\).</p> <p>The column space of the matrix in our example was a subspace of \\(\\mathbb{R}^4\\). The nullspace of \\(A\\) is a subspace of \\(\\mathbb{R}^3\\). To see that it's a vector space, check that any sum or multiple of solutions to \\(A\\mathbf{x} = \\mathbf{0}\\) is also a solution:</p> \\[ A(\\mathbf{x}_ 1 + \\mathbf{x}_ 2) = A\\mathbf{x}_ 1 + A\\mathbf{x}_ 2 = \\mathbf{0} + \\mathbf{0} = \\mathbf{0} \\] \\[ A(c\\mathbf{x}) = cA\\mathbf{x} = \\mathbf{0} \\] <p>In the example:</p> \\[ \\begin{bmatrix} 1 &amp; 1 &amp; 2 \\\\ 2 &amp; 1 &amp; 3 \\\\ 3 &amp; 1 &amp; 4 \\\\ 4 &amp; 1 &amp; 5 \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix} \\] <p>The nullspace \\(N(A)\\) consists of all multiples of \\(\\begin{bmatrix} 1 \\\\ 1 \\\\ -1 \\end{bmatrix}\\); column 1 plus column 2 minus column 3 equals the zero vector. This nullspace is a line in \\(\\mathbb{R}^3\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/07_col_null_space/#other-values-of-b","title":"Other values of b","text":"<p>The solutions to the equation:</p> \\[ \\begin{bmatrix} 1 &amp; 1 &amp; 2 \\\\ 2 &amp; 1 &amp; 3 \\\\ 3 &amp; 1 &amp; 4 \\\\ 4 &amp; 1 &amp; 5 \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\end{bmatrix} \\] <p>do not form a subspace. The zero vector is not a solution to this equation. The set of solutions forms a line in \\(\\mathbb{R}^3\\) that passes through the points \\(\\begin{bmatrix} 1 \\\\ 0 \\\\ 0  \\end{bmatrix}\\) and \\(\\begin{bmatrix} 0 \\\\ -1 \\\\ 1 \\end{bmatrix}\\) but not \\(\\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/08_ax_0/","title":"Soving Ax = 0: pivot variables, special solutions","text":"<p>We have definition for the column space and the nullspace of a matrix, but how do we compute these subspaces?</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/08_ax_0/#computing-the-nullspace","title":"Computing the nullspace","text":"<p>The <code>nullspace</code> of a matrix \\(A\\) is made up of the vectors \\(\\mathbf{x}\\) for which \\(A\\mathbf{x} = \\mathbf{0}\\).</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 2 &amp; 4 &amp; 6 &amp; 8 \\\\ 3 &amp; 6 &amp; 8 &amp; 10 \\end{bmatrix} \\] <p>(Note that the columns of this matrix \\(A\\) are not independent.) Our algorithm for computing the nullspace of this matrix uses the method of elimination, despite the fact that \\(A\\) is not invertible. We don't need to use an augmented matrix because the right side (the vector \\(\\mathbf{b}\\)) is \\(\\mathbf{0}\\) in this computation.</p> <p>The row operations used in the method of elimination don't change the solution to \\(A\\mathbf{x} = \\mathbf{b}\\) so they don't change the nullspace. (They do affect the column space.)</p> <p>The first step of elimination gives us:</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 2 &amp; 4 &amp; 6 &amp; 8 \\\\ 3 &amp; 6 &amp; 8 &amp; 10 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\end{bmatrix} \\] <p>We don't find a pivot in the second column, so our next pivot is the 2 in the third column of the second row:</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\\\ \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} = U \\] <p>The matrix \\(U\\) is in <code>echelon</code>(staircase) form. The third row is zero because row 3 was a linear combination of rows 1 and 2; it was eliminated.</p> <p>The <code>rank</code> of a matrix A equals the number of pivots it has. In this example, the rank of \\(A\\) (and of \\(U\\)) is \\(2\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/08_ax_0/#special-solutions","title":"Special solutions","text":"<p>Once we've found \\(U\\), we can back-substitution to find the solution \\(\\mathbf{x}\\) to the equation \\(U\\mathbf{x} = \\mathbf{0}\\). In our example, columns 1 and 3 are <code>pivot columns</code> containing pivots, and columns 2 and 4 are <code>free columns</code>. We can assign any value to \\(x_2\\) and \\(x_4\\); we call these <code>free variables</code>. Suppose \\(x_2 = 1\\) and \\(x_4 = 0\\). Then:</p> \\[ 2 x_3 + 4 x_4 = 0 \\to x_3 = 0 \\] <p>and:</p> \\[ x_1 + 2x_2 + 2x_3 + 2x_4 = 0 \\to x_1 = -2 \\] <p>So one solution is \\(\\mathbf{x} = \\begin{bmatrix} -2 \\\\ 1 \\\\ 0 \\\\ 0 \\end{bmatrix}\\) (because the second column is just twice the first column). Any multiple of this vector is in the nullspace.</p> <p>Letting a different free variable equal 1 and setting the other free variables equal to zero gives us other vectors in the nullspace. For example:</p> \\[ \\mathbf{x} = \\begin{bmatrix} 2 \\\\ 0 \\\\ -2 \\\\ 1 \\end{bmatrix} \\] <p>has \\(x_4 = 1\\) and \\(x_2 = 0\\). The nullspace of \\(A\\) is the collection of all linear combinations of these \"special solution\" vectors.</p> <p>The rank \\(r\\) of \\(A\\) equals the number of pivot columns, so the number of free columns is \\(n - r\\): the number of columns(variables) minus the number of pivot columns. This equals the number of special solution vectors and the dimension of the nullspace.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/08_ax_0/#reduced-row-echelon-form","title":"Reduced row echelon form","text":"<p>By continuing to use the method of elimination we can convert \\(U\\) to a matrix \\(R\\) in <code>reduced row echelon form</code>(rref), which pivots equal to 1 and zeros above and below the pivots.</p> \\[ U = \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 0 &amp; -2 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 0 &amp; -2 \\\\ 0 &amp; 0 &amp; 1 &amp; 2 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} = R \\] <p>By exchanging some columns, \\(R\\) can be rewritten with a copy of the identity matrix in the upper left corner, possibly followed by some free columns on the right. If some rows of \\(A\\) are linearly dependent, the lower rows of the matrix \\(R\\) will be filled with zeros:</p> \\[ R = \\begin{bmatrix} I &amp; F \\\\ 0 &amp; 0 \\end{bmatrix} \\] <p>Here \\(I\\) is an \\(r\\) by \\(r\\) square matrix.</p> <p>If \\(N\\) is the <code>nullspace matrix</code> \\(N = \\begin{bmatrix} -F \\\\ I \\end{bmatrix}\\) then \\(RN = 0\\). Here \\(I\\) is an \\(n - r\\) by \\(n - r\\) square matrix and \\(0\\) is an \\(m\\) by \\(n - r\\) matrix. The columns of \\(N\\) are the special solutions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/","title":"Solving Ax = b: row reduced form R","text":"<p>When does \\(A\\mathbf{x} = \\mathbf{b}\\) have solutions \\(\\mathbf{x}\\), and how can we describe those solutions?</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#solvability-conditions-on-b","title":"Solvability conditions on b","text":"<p>We again use the exmaple:</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 \\\\ 2 &amp; 4 &amp; 6 &amp; 8 \\\\ 3 &amp; 6 &amp; 8 &amp; 10 \\end{bmatrix} \\] <p>The third row of \\(A\\) is the sum of its first and second rows, so we know that if \\(A\\mathbf{x} = \\mathbf{b}\\) the third component of \\(\\mathbf{b}\\) equals the sum of its first and second components. If \\(\\mathbf{b}\\) does not satisfy \\(b_3 = b_1 + b_2\\) the system has no solution. If a combination of the rows of \\(A\\) gives the zero row, then the same combination of the entries of \\(\\mathbf{b}\\) must equal zero.</p> <p>One way to find out whether \\(A\\mathbf{x} = \\mathbf{b}\\) is solvable is to use elimination on the augmented matrix. If a row of \\(A\\) is completely eliminated, so is the corresponding entry in \\(\\mathbf{b}\\). In our example, row 3 of \\(A\\) is completely eliminated:</p> \\[ \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 &amp; b_1 \\\\ 2 &amp; 4 &amp; 6 &amp; 8 &amp; b_2 \\\\ 3 &amp; 6 &amp; 8 &amp; 10 &amp; b_3 \\end{bmatrix} \\to \\begin{bmatrix} 1 &amp; 2 &amp; 2 &amp; 2 &amp; b_1 \\\\ 0 &amp; 0 &amp; 2 &amp; 4 &amp; b_2 - 2b_1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; b_3 - b_2 - b_1 \\\\ \\end{bmatrix} \\] <p>If \\(A\\mathbf{x} = \\mathbf{b}\\) has a solution, then \\(b_3 - b_2 - b_1 = 0\\). For example, we could choose \\(\\mathbf{b} = \\begin{bmatrix} 1 \\\\ 5 \\\\ 6 \\end{bmatrix}\\).</p> <p>From an earlier lecture, we know that \\(A\\mathbf{x} = \\mathbf{b}\\) is solvable exactly when \\(\\mathbf{b}\\) is in the column space \\(C(A)\\). We have these two conditions on \\(\\mathbf{b}\\); in fact they are equivalent.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#complete-solution","title":"Complete solution","text":"<p>In order to find all solutions to \\(A\\mathbf{x} = \\mathbf{b}\\) we first check that the equation is solvable, then find a particular solution. We get the complete solution of the equation by adding the particular solution to all the vectors in the nullspace.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#a-particular-solution","title":"A particular solution","text":"<p>One way to find a particular solution to the equation \\(A\\mathbf{x} = \\mathbf{b}\\) is to set all free variables to zero, then solve for the pivot variables. For our example matrix \\(A\\), we let \\(x_2 = x_4 = 0\\) to get the system of equations:</p> \\[ \\begin{align} x_1 + 2x_3 &amp;= 1 \\\\ 2x_3 &amp;= 3 \\\\ \\end{align} \\] <p>which has the solution \\(x_3 = 3/2\\), \\(x_1 = -2\\). Our particular solution is:</p> \\[ x_p = \\begin{bmatrix} -2 \\\\ 0 \\\\ 3/2 \\\\ 0 \\\\ \\end{bmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#combined-with-the-nullspace","title":"Combined with the nullspace","text":"<p>The general solution to \\(A\\mathbf{x} = \\mathbf{b}\\) is given by \\(x_{complete} = x_p + x_n\\), where \\(x_n\\) is a generic vector in the nullspace. To see this, we add \\(Ax_p = \\mathbf{b}\\) to \\(Ax_n = \\mathbf{0}\\) and get \\(A(x_p + x_n) = \\mathbf{b}\\) for every vector \\(x_n\\) in the nullspace.</p> <p>Last lecture we learned that the nullspace of \\(A\\) is the collection of all combinations of the special solutions \\(\\begin{bmatrix} -2 \\\\ 1 \\\\ 0 \\\\ 0 \\end{bmatrix}\\) and \\(\\begin{bmatrix} 2 \\\\ 0 \\\\ -2 \\\\ 1 \\end{bmatrix}\\). So the complete solution to the equation \\(A\\mathbf{x} = \\begin{bmatrix} 1 \\\\ 5 \\\\ 6\\end{bmatrix}\\) is:</p> \\[ x_{complete} = \\begin{bmatrix} -2 \\\\ 0 \\\\ 3/2 \\\\ 0 \\\\ \\end{bmatrix} + c_1 \\begin{bmatrix} -2 \\\\ 1 \\\\ 0 \\\\ 0 \\\\ \\end{bmatrix} + c_2 \\begin{bmatrix} 2 \\\\ 0 \\\\ -2 \\\\ 1 \\\\ \\end{bmatrix} \\] <p>where \\(c_1\\) and \\(c_2\\) are real numbers.</p> <p>The nullspace of \\(A\\) is a two dimensional subspace of \\(\\mathbb{R}^4\\), and the solutions to the equation \\(A\\mathbf{x} = \\mathbf{b}\\) form a plane parallel to that through \\(x_p = \\begin{bmatrix} -2 \\\\ 0 \\\\ 3/2 \\\\ 0 \\end{bmatrix}\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#rank","title":"Rank","text":"<p>The rank of a matrix equals the number of pivots of that matrix. If \\(A\\) is an \\(m\\) by \\(n\\) matrix of rand \\(r\\), we know:</p> <ul> <li>\\(r \\le m\\)</li> <li>\\(r \\le n\\)</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#full-column-rank","title":"Full column rank","text":"<p>If \\(r = n\\), then from the previous lecture we know that the nullspace has dimension \\(n - r = 0\\) and contains only the zero vector. There are no free variables or special solutions.</p> <p>If \\(A\\mathbf{x} = \\mathbf{b}\\) has solution, it is unique; there is either 0 or 1 solution. Examples like this, in which the columns are independent, are common in applications.</p> <p>We know \\(r \\le m\\), so if \\(r = n\\) the number of columns of the matrix is less than or equal to the number of rows. The row reduced echelon form of the matrix will look like \\(R = \\begin{bmatrix} I \\\\ 0 \\end{bmatrix}\\). For any vector \\(\\mathbf{b}\\) in \\(\\mathbb{R}^m\\) that's not a linear combination of the columns of \\(A\\), there is no solution to \\(A\\mathbf{x} = \\mathbf{b}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#full-row-rank","title":"Full row rank","text":"<p>If \\(r = m\\), then the reduced matrix \\(R = \\begin{bmatrix} I &amp; F\\end{bmatrix}\\) has no rows of zeros and so there are no requirements for the entries of \\(\\mathbf{b}\\) to satisfy. The equation \\(A\\mathbf{x} = \\mathbf{b}\\) is solvable for every \\(\\mathbf{b}\\). There are \\(n - r = n - m\\) free variables, so there are \\(n - m\\) special solutions to \\(A\\mathbf{x} = \\mathbf{b}\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#full-row-and-column-rank","title":"Full row and column rank","text":"<p>If \\(r = m = n\\) is the number of pivots of \\(A\\), then \\(A\\) is an invertible square matrix and \\(R\\) is the identity matrix. The nullspace has dimension zero, and \\(A\\mathbf{x} = \\mathbf{b}\\) has a unique solution for every \\(\\mathbf{b}\\) in \\(\\mathbb{R}^m\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/09_ax_b/#summary","title":"Summary","text":"<p>If \\(R\\) is in row reduced form with pivot columns first(rref), the table below summarizes our results.</p> r = m = n r = n &lt; m r = m &lt; n r &lt; m, r &lt; n R \\(I\\) \\begin{bmatrix} I \\\\ 0 \\end{bmatrix} \\begin{bmatrix} I &amp; F \\end{bmatrix} \\begin{bmatrix} I &amp; F \\\\ 0 &amp; 0 \\end{bmatrix} #solutions to \\(Ax = b\\) 1 0 or 1 infinite 0 or infinite"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/","title":"Independence, Basis and Dimension","text":"<p>What does it mean for vectors to be independent? How does the idea of independence help us describe subspaces like the nullspace?</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/#linear-independence","title":"Linear independence","text":"<p>Suppose \\(A\\) is an \\(m\\) by \\(n\\) matrix with \\(m &lt; n\\)(so \\(A\\mathbf{x} = \\mathbf{b}\\) has more unknowns than equations). \\(A\\) has at least one free variable, so there are nonzero solutions to \\(A\\mathbf{x} = \\mathbf{0}\\). A combination of the columns is zero, so the columns of this \\(A\\) are <code>dependent</code>.</p> <p>We say vectors \\(\\mathbf{x}_ 1, \\mathbf{x}_ 2, \\cdots, \\mathbf{x}_n\\) are <code>linear independent</code> (or just <code>independent</code>) if \\(c_1\\mathbf{x}_ 1 + c_2\\mathbf{x}_2 + \\cdots + c_n\\mathbf{x}_n = \\mathbf{0}\\) only when \\(c_1, c_2, \\cdots, c_n\\) are all \\(0\\). When those vectors are the columns of \\(A\\), the only solution to \\(A\\mathbf{x} = \\mathbf{0}\\) is \\(\\mathbf{x} = \\mathbf{0}\\).</p> <p>Two vectors are independent if they do not lie on the same line. Three vectors are independent if they do not lie on the same plane. Thinking of \\(A\\mathbf{x}\\) as a linear combination of the column vectors of \\(A\\), we see that the column vectors of \\(A\\) are independent exactly when the nullspace of \\(A\\) contains only the zero vector.</p> <p>If the columns of \\(A\\) are independent then all columns are pivot columns, the rank of \\(A\\) is \\(n\\), and there are no free variables. If the columns of \\(A\\) are dependent then the rank of \\(A\\) is less than \\(n\\) and there are free variables.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/#spanning-a-space","title":"Spanning a space","text":"<p>Vectors \\(\\mathbf{v}_1, \\mathbf{v}_2, \\cdots, \\mathbf{v}_k\\) <code>span</code> a space when the space consists of all combinations of those vectors. For example, the columns vectors of \\(A\\) span the column space of \\(A\\).</p> <p>If vectors \\(\\mathbf{v}_1, \\mathbf{v}_2, \\cdots, \\mathbf{v}_k\\) span a space \\(S\\), then \\(S\\) is the smallest space containing those vectors.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/#basis-and-dimension","title":"Basis and dimension","text":"<p>A <code>basis</code> for a vector space is a sequence of vectors \\(\\mathbf{v}_1, \\mathbf{v}_2, \\cdots, \\mathbf{v}_d\\) with two properties:</p> <ul> <li>\\(\\mathbf{v}_1, \\mathbf{v}_2, \\cdots, \\mathbf{v}_d\\) are independent;</li> <li>\\(\\mathbf{v}_1, \\mathbf{v}_2, \\cdots, \\mathbf{v}_ d\\) span the vector space.</li> </ul> <p>The basis of a space tells us everything we need to know about that space.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/#example-mathbbr3","title":"Example: \\(\\mathbb{R}^3\\)","text":"<p>One basis for \\(\\mathbb{R}^3\\) is \\({ \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\end{bmatrix}, \\begin{bmatrix} 0 \\\\ 1 \\\\ 0 \\end{bmatrix}, \\begin{bmatrix} 0 \\\\ 0 \\\\ 1 \\end{bmatrix}}\\). These are independent because:</p> \\[ c_1 \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\end{bmatrix} + c_2 \\begin{bmatrix} 0 \\\\ 1 \\\\ 0 \\end{bmatrix} + c_3 \\begin{bmatrix} 0 \\\\ 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix} \\] <p>is only possible when \\(c_1 = c_2 = c_3 = 0\\). These vectors span \\(\\mathbb{R}^3\\).</p> <p>As discussed at previous lecture, the vector \\(\\begin{bmatrix} 1 \\\\ 1 \\\\ 2 \\end{bmatrix}\\), \\(\\begin{bmatrix} 2 \\\\ 2 \\\\ 5 \\end{bmatrix}\\) and \\(\\begin{bmatrix} 3 \\\\ 3 \\\\ 8 \\end{bmatrix}\\) do not form a basis for \\(\\mathbb{R}^3\\) because these are the column vectors of a matrix that has two identical rows. The three vectors are not linearly independent.</p> <p>In general, \\(n\\) vectors in \\(\\mathbb{R}^n\\) form a basis if they are the column vectors of an invertible matrix.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/#basis-for-a-subspace","title":"Basis for a subspace","text":"<p>The vectors \\(\\begin{bmatrix} 1 \\\\ 1 \\\\ 2 \\end{bmatrix}\\) and \\(\\begin{bmatrix} 2 \\\\ 2 \\\\ 5 \\end{bmatrix}\\) span a plane in \\(\\mathbb{R}^3\\) but they cannot form a basis for \\(\\mathbb{R}^3\\). Given a space, every basis for that space has the same number of vectors; that number is the <code>dimension</code> of the space. So there are exactly \\(n\\) vectors in every basis for \\(\\mathbb{R}^n\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/10_ind_basis_dim/#bases-of-a-column-space-and-nullspace","title":"Bases of a column space and nullspace","text":"<p>Suppose:</p> \\[ A =  \\begin{bmatrix} 1 &amp; 2 &amp; 3 &amp; 1 \\\\ 1 &amp; 1 &amp; 2 &amp; 1 \\\\ 1 &amp; 2 &amp; 3 &amp; 1 \\\\ \\end{bmatrix} \\] <p>By definition, the four column vectors of \\(A\\) span the column space of \\(A\\). The third and fourth column vectors are dependent on the first and second, and the first two columns are independent. Therefore, the first two column vectors are the pivot columns. They form a basis for the column space \\(C(A)\\). The matrix has rank 2. In fact, for any matrix \\(A\\) we can say:</p> \\[ rank(A) = \\text{number of pivot columns of } A = \\text{dimension of } C(A) \\] <p>Note that matrices have a rank but not a dimension. Subspaces have a dimension but not a rank.</p> <p>The column vectors of this \\(A\\) are not independent, so the nullspace \\(N(A)\\) contains more than just the zero vector. Because the third column is the sum of the first two, we know that the vector \\(\\begin{bmatrix} -1 \\\\ -1 \\\\ 1 \\\\ 0 \\end{bmatrix}\\) is in the nullspace. Similarly, \\(\\begin{bmatrix} -1 \\\\ 0 \\\\ 0 \\\\ 1 \\end{bmatrix}\\) is also in \\(N(A)\\). These are the two special solutions to \\(A \\mathbf{x} = \\mathbf{0}\\). We'll see that:</p> \\[ \\text{dimension of } N(A) = \\text{number of free variables} = n - r \\] <p>so we know that the dimension of \\(N(A)\\) is \\(4 - 2 = 2\\). These two special solutions form a basisi for the nullspace.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/","title":"The Four Fundamental Subspaces","text":"<p>In this lecture we discuss the four fundamental spaces associated with a matrix and the relations between them.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#four-subspaces","title":"Four subspaces","text":"<p>Any \\(m\\) by \\(n\\) matrix \\(A\\) determines four subspaces (possibly containing only zero vectors);</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#column-space-ca","title":"Column space, C(A)","text":"<p>\\(C(A)\\) consists of all combinations of the columns of \\(A\\) and is a vector space in \\(\\mathbb{R}^m\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#nullspace-na","title":"Nullspace, N(A)","text":"<p>This consists of all solutions \\(\\mathbf{x}\\) of the equation \\(A\\mathbf{x} = \\mathbf{0}\\) and lies in \\(\\mathbf{R}^n\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#row-space-rat","title":"Row space, R(A^T)","text":"<p>The combinations of the row vectors of \\(A\\) form a subspace of \\(\\mathbf{R}^n\\). We equate this with \\(C(A^T)\\), the column space of the transpose of \\(A\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#left-nullspace-nat","title":"Left nullspace, N(A^T)","text":"<p>We call the nullspace of \\(A^T\\) the <code>left nullspace</code> of \\(A\\). This is a subspace of \\(\\mathbb{R}^m\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#basis-and-dimension","title":"Basis and Dimension","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#column-space","title":"Column space","text":"<p>The \\(r\\) pivot columns form a basis for \\(C(A)\\):</p> \\[ \\text{dim } C(A) = r \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#nullspace","title":"Nullspace","text":"<p>The special solutions to \\(A\\mathbf{x} = \\mathbf{0}\\) correspond to free variables and form a basis for \\(N(A)\\). An \\(m\\) by \\(n\\) matrix has \\(n - r\\) free variables:</p> \\[ \\text{dim } N(A) = n - r \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#row-space","title":"Row space","text":"<p>We could perform row reduction on \\(A^T\\), but instead we make use of \\(R\\), the row reduced echelon form of \\(A\\).</p> \\[ A = \\begin{bmatrix} 1 &amp; 2 &amp; 3 &amp; 1 \\\\ 1 &amp; 1 &amp; 2 &amp; 1 \\\\ 1 &amp; 2 &amp; 3 &amp; 1 \\\\ \\end{bmatrix} \\to \\cdots \\to \\begin{bmatrix} 1 &amp; 0 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} = \\begin{bmatrix} I &amp; F \\\\ 0 &amp; 0 \\\\ \\end{bmatrix} = R \\] <p>Although the column spaces of \\(A\\) and \\(R\\) are different, the row space of \\(R\\) is the same as the row space of \\(A\\). The rows of \\(R\\) are combinations of the rows of \\(A\\), and because reduction is reversible the rows of \\(A\\) are combinations of the rows of \\(R\\).</p> <p>The first \\(r\\) rows of \\(R\\) are the <code>echelon</code> basis for the row space of \\(A\\):</p> \\[ \\text{dim } C(A^T) = r \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#left-nullspace","title":"Left nullspace","text":"<p>The matrix \\(A^T\\) has \\(m\\) columns. We just saw that \\(r\\) is the rank of \\(A^T\\), so the number of free columns of \\(A^T\\) must be \\(m - r\\):</p> \\[ \\text{dim } N(A^T) = m - r \\] <p>The left nullspace is the collection of vectors \\(y\\) for which \\(A^Ty = 0\\). Equivalently, \\(y^TA = 0\\); there \\(y\\) and \\(0\\) are row vectors. We say <code>left nullspace</code> because \\(y^T\\) is on the left of \\(A\\) in this equation.</p> <p>To find a basis for the left nullspace we reduce an augmented version of \\(A\\):</p> \\[ \\begin{bmatrix} A_{m \\times n} &amp; I_{m \\times n} \\end{bmatrix} \\to \\begin{bmatrix} R_{m \\times n} &amp; E_{m \\times n} \\end{bmatrix} \\] <p>From this we get the matrix \\(E\\) for which \\(EA = R\\). (If \\(A\\) is a square, invertible matrix then \\(E = A^{-1}\\).) In our example,</p> \\[ EA = \\begin{bmatrix} -1 &amp; 2 &amp; 0 \\\\ 1 &amp; -1 &amp; 0 \\\\ -1 &amp; 0 &amp; 1 \\\\ \\end{bmatrix} \\begin{bmatrix} 1 &amp; 2 &amp; 3 &amp; 1\\\\ 1 &amp; 1 &amp; 2 &amp; 1\\\\ 1 &amp; 2 &amp; 3 &amp; 1\\\\ \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 0 &amp; 1 &amp; 1\\\\ 0 &amp; 1 &amp; 1 &amp; 0\\\\ 0 &amp; 0 &amp; 0 &amp; 0\\\\ \\end{bmatrix} =R \\] <p>The bottom \\(m - r\\) rows of \\(E\\) describe linear dependencies of rows of \\(A\\), because the bottom \\(m - r\\) rows of \\(R\\) are zero. Here \\(m - r = 1\\)(one zero row in R).</p> <p>The bottom \\(m - r\\) rows of \\(E\\) satisfy the equation \\(\\mathbf{y}^TA=\\mathbf{0}\\) and form a basis for the left nullspace of \\(A\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/11_four_subspace/#new-vector-space","title":"New vector space","text":"<p>The collection of all \\(3 \\times 3\\) matrices forms a vector space; call it \\(M\\). We can add matrices and multiply them by scalars and there's a zero matrix(additive identity). If we ignore the fact that we can multiply matrices by each other, they behave just like vectors.</p> <p>Some subspace of \\(M\\) include:</p> <ul> <li>all upper trianglar matrices;</li> <li>all symmetric matrices;</li> <li>D, all diagonal matrices</li> </ul> <p>\\(D\\) is the intersection of the first two spaces. Its dimension is \\(3\\); one basis for \\(D\\) is:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 3 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 7 \\\\ \\end{bmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/","title":"Matrix spaces, Rand 1 and Small World Graphs","text":"<p>We've talked a lot about \\(\\mathbb{R}^n\\), but we can think about vector spaces made up of any sort of <code>vectors</code> that allow addition and scalar multiplication.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/#new-vector-spaces","title":"New vector spaces","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/#3-by-3-matrices","title":"3 by 3 matrices","text":"<p>We were looking at the space \\(M\\) of all 3 by 3 matrices. We identified some subspaces:</p> <ul> <li>the symmetric 3 by 3 matrices \\(S\\),</li> <li>the upper triangular 3 by 3 matrices \\(U\\)</li> <li>and the intersection \\(D\\) of these two spaces - the space of diagonal 3 by 3 matrices.</li> </ul> <p>The dimension of \\(M\\) is 9; we must choose 9 numbers to specify an element of \\(M\\). The space \\(M\\) is very similar to \\(\\mathbb{R}^9\\). A good choice of basis is:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\cdots \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ \\end{bmatrix} \\] <p>The subspace of symmetric matrices \\(S\\) has dimension 6. When choosing an element of \\(S\\) we pick three numbers on the diagonal and three in the upper right, which tell us what must appear in the lower left of the matrix. One basis for \\(S\\) is the collection:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 1 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ \\end{bmatrix} \\] <p>The dimension of \\(U\\) is again 6; we have the same amount of freedom in selecting the entries of an upper triangular matrix as we did in choosing a symmetric matrix. A basis for \\(U\\) is:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ \\end{bmatrix} \\] <p>This happens to be a subset of the basis we chose for \\(M\\), but there is no basis for \\(S\\) that is subset of the basis we chose for M.</p> <p>The subspace \\(D = S \\cap U\\) of diagonal 3 by 3 matrices has dimension 3. Because of the way we chose bases for \\(U\\) and \\(S\\), a good basis for \\(D\\) is the intersection of those bases.</p> <p>Is \\(S \\cup U\\), the set of 3 by 3 matrices which are either symmetric or upper triangular, a subspace of \\(M\\)? No. This is like taking two liness in \\(\\mathbb{R}^2\\) and asking if together they form a subspace; we have to fill in between them. If we take all possible sums of elements of \\(S\\) and elements of \\(U\\) we get what we call the sum \\(S + U\\). This is a subspace of \\(M\\). In fact, \\(S + U = M\\). For unions and sums, dimensions follow this rule:</p> \\[ \\text{dim } S + \\text{dim } U = \\text{dim } S \\cup U + \\text{dim } S \\cap U \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/#differential-equations","title":"Differential equations","text":"<p>Another example of a vector space that's not \\(\\mathbb{R}^n\\) appears in differential equations.</p> <p>We can think of the solution \\(y\\) to \\(\\frac{d^2y}{dx^2} + y = 0\\) as the elements of a nullspace. Some solutions are:</p> \\[ y = cos(x), y = sin(x), y = e^{ix} \\] <p>The complete solution is:</p> \\[ y = c_1 cos(x) + c_2 sin(x) \\] <p>where \\(c_1\\) and \\(c_2\\) can be any complex numbers. This solution space is a two dimension vector space with basis vectors \\(cos(x)\\) and \\(sin(x)\\). Even though these don't <code>look like</code> vectors, we can build a vector space from them because they can be added and multiplied by a constant.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/#rank-4-matrices","title":"Rank 4 matrices","text":"<p>Now let \\(M\\) be the space of \\(5 \\times 17\\) matrices. The subset of \\(M\\) containing all rank 4 matrices is not a subspace, even if we include the zero matrix, because the sum of two rank 4 matrices may not have rank 4.</p> <p>In \\(\\mathbb{R}^4\\), the set of all vectors \\(\\mathbf{v} = \\begin{bmatrix} v_1 \\\\ v_2 \\\\ v_3 \\\\ v_4 \\end{bmatrix}\\) for which \\(v_1 + v_2 + v_3 + v_4 = 0\\) is a subspace. It contains the zero vector and is closed under addition and scalar multiplication. It is the nullspace of the matrix \\(A = \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\end{bmatrix}\\). Because A has rank 1, the dimension of this nullspace is \\(n - r = 3\\). The subspace has the basis of special solutions:</p> \\[ \\begin{bmatrix} -1 \\\\ 1 \\\\ 0 \\\\ 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} -1 \\\\ 0 \\\\ 1 \\\\ 0 \\\\ \\end{bmatrix} , \\begin{bmatrix} -1 \\\\ 0 \\\\ 0 \\\\ 1 \\\\ \\end{bmatrix} \\] <p>The column space of \\(A\\) is \\(\\mathbb{R}^1\\). The left nullspace contains only the zero vector, has dimension zero, and its basis is the empty set. The row space of \\(A\\) has dimension 1.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/#rank-one-matrices","title":"Rank one matrices","text":"<p>The rank of a matrix is the dimension of its column(or row) space. The matrix</p> \\[ A = \\begin{bmatrix} 1 &amp; 4 &amp; 5 \\\\ 2 &amp; 8 &amp; 10 \\\\ \\end{bmatrix} \\] <p>has rank 1 because of its columns is a multiple of the first column.</p> \\[ A = \\begin{bmatrix} 1 \\\\ 2 \\\\ \\end{bmatrix} \\begin{bmatrix} 1 &amp; 4 &amp; 5 \\end{bmatrix} \\] <p>Every rank 1 matrix A can be written \\(A = \\mathbf{U}\\mathbf{V}^T\\), where \\(\\mathbf{U}\\) and \\(\\mathbf{V}\\) are column vectors. We'll use rank 1 matrices as building blocks for more complex matrices.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/12_matrix_space/#small-world-graphs","title":"Small world graphs","text":"<p>In this class, a <code>graph</code> G is a collection of nodes joined by edges:</p> \\[ G = \\{nodes, edges\\} \\] <p>A typical graph appears in figure below.</p> <p></p> <p>Another example of a graph is one in which each node is a person. Two nodes are connected by an edge if the people are friends. We can ask how close two people are to each other in the graph, what's the smallest number of friend to friend connections joining them? The question \"what's the farthest distance between two people in the graph?\" lies behind phrases like \"six degrees of separation\" and \"it's a small world\".</p> <p>Another graph is the world wide web: its nodes are websites and its edges are linkes.</p> <p>We'll describe graphs in terms of matrices, which will make it easy to answer questions about distance between nodes.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/13_graph/","title":"Graphs, Networks and Incidence Matrices","text":"<p>When we use linear algebra to understand physical systems, we often find more structure in the matrices and vectors than appears in the examples we make up in class. There are many applications of linear algebra; for example, chemists might use row reduction to get a clearer picture of what elements go into a complicated reaction. In this lecture we explore the linear algebra associated with electrical networks.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/13_graph/#graphs-and-networks","title":"Graphs and networks","text":"<p>A <code>graph</code> is a collection of nodes joined by edges; figure below shows one small graph with 4 nodes and 5 edges:</p> <p></p> <p>We put an arrow on each edge to indicate that the positive direction for currents running through the graph.</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/13_graph/#incidence-matrices","title":"Incidence matrices","text":"<p>The <code>incidence matrix</code> of this directed graph has one column for each node of the graph and one row for each edge of the graph:</p> \\[ A = \\begin{bmatrix} -1 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; -1 &amp; 0 &amp; 0 \\\\ -1 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; -1 &amp; 1 \\\\ \\end{bmatrix} \\] <p>If an edge runs from node \\(a\\) to node \\(b\\), the row corresponding to that edge has \\(-1\\) in column \\(a\\) and \\(1\\) in column \\(b\\); all other entries in that row are \\(0\\). If we were studying a larger graph we would get a larger matrix but it would be <code>sparse</code>; most of the entries in that matrix would be 0. This is one of the ways matrices arising from the applications might have extra structure.</p> <p>Note that nodes \\(1, 2\\) and \\(3\\) and edge \\((1), (2)\\) and \\((3)\\) form a loop. The matrix describing just those nodes and edges looks like:</p> \\[ \\begin{bmatrix} -1 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 &amp; 0 \\\\ -1 &amp; 0 &amp; 1 &amp; 0 \\\\ \\end{bmatrix} \\] <p>Note that the third row is the sum of the first two rows; loops in the graph corresponds to linearly dependent rows of the matrix.</p> <p>To find the nullspace of A, we solve \\(A\\mathbf{x}= \\mathbf{0}\\):</p> \\[ A\\mathbf{x}= \\begin{bmatrix} x_2 - x_1 \\\\ x_3 - x_2 \\\\ x_3 - x_1 \\\\ x_4 - x_1 \\\\ x_4 - x_3 \\\\ \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ \\end{bmatrix} \\] <p>If the components \\(x_i\\) of the vector \\(\\mathbf{x}\\) describe the electrical potential at the nodes \\(i\\) of the graph, then \\(A\\mathbf{x}\\) is a vector discribing the <code>difference</code> in potential across each edge of the graph. We see \\(A\\mathbf{x} = \\mathbf{0}\\) when \\(x_1 = x_2 = x_3 = x_4\\), so the nullspace has dimension 1. In terms of an electrical network, the potential difference is zero on each edge if each node has the same potential. We can't tell what that potential is by observing the flow of electricity through the network, but if one node of the network is grounded then its potential is zero. From that we can determine the potential of all other nodes of the graph.</p> <p>The matrix has 4 columns and a 1 dimensional nullspace, so its rank is 3. The first, second and fourth columns are its pivot columns; these edges connect all the nodes of the graph without forming a loop - a graph with no loops is called a <code>tree</code>.</p> <p>The left nullspace of \\(A\\) consists of the solutions \\(\\mathbf{y}\\) to the equation: \\(A^T \\mathbf{y} = \\mathbf{0}\\). Since \\(A^T\\) has 5 columns and rank 3 we know that the dimension of \\(N(A^T)\\) is \\(m - r = 2\\). Note that 2 is the number of loops in the graph and \\(m\\) is the number of edges. The rank \\(r\\) is \\(n - 1\\), one less than the number of nodes. This gives us:</p> \\[ \\# loops = \\# edges - (\\# nodes - 1) \\] <p>or</p> \\[ \\text{number of nodes } - \\text{number of edges } + \\text{number of loops } = 1 \\] <p>This is Eular's formula for connected graphs.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Ax-equal-b-and-the-Four-Subspaces/13_graph/#kirchhoffs-law","title":"Kirchhoff's law","text":"<p>In our example of an electrical network, we started with the potentials \\(x_i\\) of the nodes. The matrix \\(A\\) then told us something about potential differences. An engineer could create a matrix \\(C\\) using Ohm's law and information about the conductance of the edges and use that matrix to determine the current \\(y_i\\) on each edge. <code>Kirchhoff's Current Law</code> then says that \\(A^T\\mathbf{y} = \\mathbf{0}\\), where \\(\\mathbf{y}\\) is the vector with components \\(y_1, y_2, y_3, y_4, y_5\\). Vectors in the nullspace of \\(A^T\\) correspond to collections of currents that satisfy Kirchhoff's law.</p> <p></p> <p>Written out, \\(A^T\\mathbf{y} = \\mathbf{0}\\) looks like:</p> \\[ \\begin{bmatrix} -1 &amp; 0 &amp; -1 &amp; -1 &amp; 0 \\\\ 1 &amp; -1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 1 &amp; 0 &amp; -1 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\\\ \\end{bmatrix} \\begin{bmatrix} y_1 \\\\ y_2 \\\\ y_3 \\\\ y_4 \\\\ y_5 \\\\ \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ \\end{bmatrix} \\] <p>Multiplying the first row by the column vector \\(\\mathbf{y}\\) we get \\(-y_1 - y_3 - y_4 = 0\\). This tells us that the total current flowing out of node 1 is zero - its a balance equation, or conservation law. Multiplying the second row by \\(\\mathbf{y}\\) tells us \\(y_1 - y_2 = 0\\); the current coming into node 2 is balanced with the current going out. Multiplying the bottom rows, we get \\(y_2 + y_3 - y_5 = 0\\) and \\(y_4 + y_5 = 0\\).</p> <p>We could use the method of elimination on \\(A^T\\) to find its column space, but we already know the rank. To get a basis for \\(N(A^T)\\) we just need to ind two independent vectors in this space. Looking at the equations \\(y_1 - y_2 = 0\\) we might guess \\(y_1 = y_2 = 1\\). Then we could use the conservation laws for node 3 to guess \\(y_3 = -1\\) and \\(y_5 = 0\\). We satisfy the conservation conditions on node 4 with \\(y_4 = 0\\), giving us a basis vector \\(\\begin{bmatrix}1 \\\\ 1 \\\\ -1 \\\\ 0 \\\\ 0 \\end{bmatrix}\\). This vector represents one unit of current flowing around the loop joining nodes 1, 2 and 3; a multiple of this vector represents a different amount of current around the same loop.</p> <p>We find a second basis vector for \\(N(A^T)\\) by looking at the loop formed by nodes 1, 3 and 4:  \\(\\begin{bmatrix}0 \\\\ 0 \\\\ 1 \\\\ -1 \\\\ 1 \\end{bmatrix}\\). The vector \\(\\begin{bmatrix}0 \\\\ 0 \\\\ 1 \\\\ -1 \\\\ 1 \\end{bmatrix}\\) that represents a current around the outer loop is also in the nullspace, but it is the sum of the first two vectors we found.</p> <p>We've almost completely convered the mathematics of simple circuits. More complex circuits might have batteries in the edge, or current sources between nodes. Adding current sources changes the \\(A^T\\mathbf{y}=\\mathbf{0}\\) in Kirchhoff's current law to \\(A^T \\mathbf{y} = \\mathbf{f}\\). Combining the equation \\(\\mathbf{e}= A\\mathbf{x}\\), \\(\\mathbf{y} = C\\mathbf{e}\\) and \\(A^T\\mathbf{y} = \\mathbf{f}\\) gives us:</p> \\[ A^T C A \\mathbf{x} = \\mathbf{f} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/14_orthogonal/","title":"Orthogonal vectors and subspaces","text":"<p>In this lecture we learn what it means for vectors, bases and subspaces to be <code>orthogonal</code>. The symbol for this is \\(\\bot\\).</p> <p>The <code>big picture</code> of this course is that the row space of a matrix is orthogonal to its nullspace, and its column space is orthogonal to its left nullspace.</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/14_orthogonal/#orthogonal-vectors","title":"Orthogonal vectors","text":"<p><code>Orthogonal</code> is just another word for <code>perpendicular</code>. Two vectors are <code>orthogonal</code> if the angle between them is 90 degrees. If two vectors are orthogonal, they form a right triangle whose hypotenuse is the sum of the vectors. Thus, we can use the <code>Pythagorean theorem</code> to prove that the <code>dot product</code> \\(\\mathbf{x}^T\\mathbf{y} = \\mathbf{y}^T \\mathbf{x}\\) is \\(zero\\) exactly when \\(\\mathbf{x}\\) and \\(\\mathbf{y}\\) are orthogonal. (The length squared \\(||\\mathbf{x}||^2\\) equals \\(\\mathbf{x}^T\\mathbf{x}\\)).</p> <p>Note that all vectors are orthogonal to the zero vector.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/14_orthogonal/#orthogonal-subspaces","title":"Orthogonal subspaces","text":"<p>Subspace \\(S\\) is <code>orthogonal</code> to subspace \\(T\\) means: every vector in \\(S\\) is orthogonal to every vector in \\(T\\). The blackboard is not orthogonal to the floor; two vectors in the line where the blackboard meets the floor aren't orthogonal to each other.</p> <p>In the plane, the space containing only the zero vector and any line through the origin are orthogonal subspaces. A line through the origin and the whole plane are never orthogonal subspaces. Two lines through the origin are orthogonal subspaces if they meet at right angles.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/14_orthogonal/#nullspace-is-perpendicular-to-row-space","title":"Nullspace is perpendicular to row space","text":"<p>The row space of a matrix is orthogonal to the nullspace, because the definition of nullspace is the subspace with all the \\(\\mathbf{x}\\)s that meet \\(A\\mathbf{x}= \\mathbf{0}\\), which means the dot product of \\(\\mathbf{x}\\) with each row of \\(A\\) is \\(0\\). Then the product of \\(\\mathbf{x}\\) with any combination of rows of \\(A\\) must be \\(0\\).</p> <p>The column space is orthogonal to the left nullspace of \\(A\\) because the row space of \\(A^T\\) is perpendicular to the nullspace of \\(A^T\\).</p> <p>In some sense, the row space and the nullspace of a matrix subdivide \\(\\mathbb{R}^n\\) into two perpendicular subspaces. For \\(A=\\begin{bmatrix} 1 &amp; 2 &amp; 5 \\\\ 2 &amp; 4 &amp; 10 \\end{bmatrix}\\), the row space has dimension \\(1\\) and basis \\(\\begin{bmatrix} 1 \\\\ 2 \\\\ 5 \\end{bmatrix}\\) and the nullspace has dimension \\(2\\) and is the plane through the origin perpendicular to the vector \\(\\begin{bmatrix} 1 \\\\ 2 \\\\ 5 \\end{bmatrix}\\).</p> <p>Not only is the nullspace orthogonal to the row space, their dimensions add up to the dimension of the whole space. We say that the nullspace and the row space are <code>orthogonal complements</code> in \\(\\mathbb{R}^n\\). The nullspace contains all the vectors that are perpendicular to the row space, and vice versa.</p> <p>We could say that this is part two of the fundamental theorem of linear algebra. Part one gives the dimensions of the four subspaces, part two says those subspaces come in orthogonal pairs, and part three will be about orthogonal bases for these subspaces.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/14_orthogonal/#nata-na","title":"N(A^TA) = N(A)","text":"<p>Due to measurement error, \\(A\\mathbf{x} = \\mathbf{b}\\) is often unsolvable if \\(m &gt; n\\). Our next challenge is to find the best possible solution in this case. The matrix \\(A^TA\\) plays a key role in this effort: the central equation is</p> \\[ A^TA \\hat{\\mathbf{x}} = A^T \\mathbf{b} \\] <p>We know that \\(A^TA\\) is square \\(n \\times n\\) and symmetric. When is it invertible?</p> <p>Suppose \\(A = \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 2 \\\\ 1 &amp; 5 \\end{bmatrix}\\). Then:</p> \\[ A^T A = \\begin{bmatrix} 1 &amp; 1 &amp; 1 \\\\ 1 &amp; 2 &amp; 5 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 2 \\\\ 1 &amp; 5 \\end{bmatrix} = \\begin{bmatrix} 3 &amp; 8 \\\\ 8 &amp; 30 \\end{bmatrix} \\] <p>is invertible. \\(A^TA\\) is not always invertible. In fact:</p> \\[ N(A^TA) = N(A) \\] \\[ \\text{rank of } A^T A = \\text{rank of } A \\] <p>We conclude that \\(A^TA\\) is invertible exaclty when \\(A\\) has independent columns.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/15_proj_subspace/","title":"Projections onto Subspaces","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/15_proj_subspace/#projection","title":"Projection","text":"<p>If we have a vector \\(\\mathbf{b}\\) and a line determined by a vector \\(\\mathbf{a}\\), how do we find the point on the line that is closet to \\(\\mathbf{b}\\)?</p> <p></p> <p>We can see from the figure that this closet point \\(p\\) is at the intersection formed by a line through \\(\\mathbf{b}\\) that is orthogonal to \\(\\mathbf{a}\\). If we think of \\(\\mathbf{p}\\) as an approximation of \\(\\mathbf{b}\\), then the length of \\(\\mathbf{e} = \\mathbf{b} - \\mathbf{p}\\) is the error in that approximation.</p> <p>We could try to find \\(\\mathbf{p}\\) using trigonometry or calculus, but it's easier to use linear algebra. Since \\(\\mathbf{p}\\) lies on the line through \\(\\mathbf{a}\\), we know \\(\\mathbf{p} = \\mathbf{a}x\\) for some number \\(x\\). We also know that \\(\\mathbf{a}\\) is perpendicular to \\(\\mathbf{e} = \\mathbf{b} - \\mathbf{a}x\\):</p> \\[ \\begin{align} \\mathbf{a}^T (\\mathbf{b} - \\mathbf{a}x) &amp;= 0 \\\\ \\mathbf{a}^T\\mathbf{a}x &amp;= \\mathbf{a}^T\\mathbf{b} \\\\ x &amp;= \\frac{\\mathbf{a}^T\\mathbf{b}}{\\mathbf{a}^T\\mathbf{a}} \\end{align} \\] <p>and</p> \\[ \\mathbf{p} = \\mathbf{a}x = \\mathbf{a} \\frac{\\mathbf{a}^T\\mathbf{b}}{\\mathbf{a}^T\\mathbf{a}} \\] <p>Doubling \\(\\mathbf{b}\\) will double \\(\\mathbf{p}\\), doubling \\(\\mathbf{a}\\) does not affect \\(\\mathbf{p}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/15_proj_subspace/#projection-matrix","title":"Projection Matrix","text":"<p>We'd like to write this projection in terms of a <code>projection matrix</code> \\(P\\):</p> \\[ \\mathbf{p} = P\\mathbf{b} \\] <p>As</p> \\[ \\mathbf{p} = \\mathbf{a}x = \\mathbf{a} \\frac{\\mathbf{a}^T\\mathbf{b}}{\\mathbf{a}^T\\mathbf{a}} \\] <p>so the matrix is:</p> \\[ P = \\frac{\\mathbf{a}\\mathbf{a}^T}{\\mathbf{a}^T\\mathbf{a}} \\] <p>Note that \\(\\mathbf{a}\\mathbf{a}^T\\) is a \\(3 \\times 3\\) matrix, not a number; matrix multiplication is not commutative.</p> <p>The column space of \\(P\\) is spanned by \\(\\mathbf{a}\\) because for any \\(\\mathbf{b}\\), \\(P\\mathbf{b}\\) lies on the line determined by \\(\\mathbf{a}\\). The rank of \\(P\\) is \\(1\\). \\(P\\) is symmetric. \\(P^2\\mathbf{b} = P\\mathbf{b}\\) because the projection of a vector already on the line through \\(\\mathbf{a}\\) is just that vector. In general, projection matrices have the properties:</p> \\[ P^T = P \\] \\[ P^2 = P \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/15_proj_subspace/#why-projection","title":"Why Projection?","text":"<p>As we know, the equation \\(A\\mathbf{x} = \\mathbf{b}\\) may have no solution. The vector \\(A\\mathbf{x}\\) is always in the column space of \\(A\\), and \\(\\mathbf{b}\\) is unlikely to be in the column space. So, we project \\(\\mathbf{b}\\) onto a vector \\(\\mathbf{p}\\) in the column space of \\(A\\) and solve \\(A\\mathbf{\\hat{x}} = \\mathbf{p}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/15_proj_subspace/#projection-in-higher-dimension","title":"Projection in Higher Dimension","text":"<p>In \\(\\mathbb{R}^3\\), how do we project a vector \\(\\mathbf{b}\\) onto the closet point \\(\\mathbf{p}\\) in a plane?</p> <p>If \\(\\mathbf{a_1}\\) and \\(\\mathbf{a_2}\\) form a basis for the plane, then that plane is the column space of the matrix \\(A = \\begin{bmatrix} \\mathbf{a_1} &amp; \\mathbf{a_2} \\end{bmatrix}\\).</p> <p>We know that \\(\\mathbf{b} = \\hat{x_1}\\mathbf{a_1} + \\hat{x_2}\\mathbf{a_2} = A\\mathbf{\\hat{x}}\\). We want to find \\(\\mathbf{\\hat{x}}\\). There are many ways to show that \\(\\mathbf{e} = \\mathbf{b} - \\mathbf{p} = \\mathbf{b} - A\\mathbf{\\hat{x}}\\) is orthogonal to the plane we're projecting onto, after wihch we can use the fact that \\(\\mathbf{e}\\) is perpendicular to \\(\\mathbf{a_1}\\) and \\(\\mathbf{a_2}\\):</p> \\[ \\begin{align} \\mathbf{a_1}^T (\\mathbf{b} - A\\mathbf{\\hat{x}}) = 0 \\\\ \\mathbf{a_2}^T (\\mathbf{b} - A\\mathbf{\\hat{x}}) = 0 \\\\ \\end{align} \\] <p>In matrix form:</p> \\[ A^T (\\mathbf{b} - A \\mathbf{\\hat{x}}) = 0 \\] <p>When we were projecting onto a line, \\(A\\) only had one column and so this equation looked like: </p> \\[ A^T (\\mathbf{b} - A \\mathbf{\\hat{x}}) = 0 \\] <p>Note that \\(\\mathbf{e} = \\mathbf{b} - A\\mathbf{\\hat{x}}\\) is in the nullspace of \\(A^T\\) and so is in the left nullspace of \\(A\\). We know that everything in the left nullspace of \\(A\\) is perpendicular to the column space of \\(A\\), so this is another confirmation that our calculation are correct.</p> <p>We can rewrite the equation \\(A^T(\\mathbf{b} - A\\mathbf{\\hat{x}})\\) as:</p> \\[ A^TA\\mathbf{\\hat{x}} = A^T \\mathbf{b} \\] <p>When projecting onto a line, \\(A^TA\\) was just a number; now it is a square matrix.</p> <p>So instead of dividing by \\(\\mathbf{a}^T\\mathbf{a}\\) we now have to multiply by \\((A^TA)^{-1}\\).</p> <p>In \\(n\\) dimensions:</p> \\[ \\begin{align} \\mathbf{\\hat{x}} &amp;= (A^TA)^{-1}A^T\\mathbf{b} \\\\ \\mathbf{p} = A\\mathbf{\\hat{x}} &amp;= A(A^TA)^{-1}A^T\\mathbf{b} \\\\ P &amp;= A(A^TA)^{-1}A^T \\end{align} \\] <p>It's tempting to try to simplify these expressions, but if \\(A\\) isn't a square matrix we can't say that \\((A^TA)^{-1} = A^{-1}(A^T)^{-1}\\).</p> <p>If \\(A\\) does happen to be a square, invertible matrix then it's column space is the whole space and contains \\(\\mathbf{b}\\). In this case \\(P\\) is the identity, as we find when we simplify. It is still true that:</p> \\[ \\begin{align} P^T = P \\\\ P^2 = P \\\\ \\end{align} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/15_proj_subspace/#least-squares","title":"Least Squares","text":"<p>Suppose we're given a collection of data points \\((t, b)\\):</p> \\[ \\{(1, 1), (2, 2), (3, 2)\\} \\] <p>and we want to find the closet line \\(b = C + Dt\\) to that collection. If the line went through all three points, we'd have:</p> \\[ \\begin{align} C + D = 1 \\\\ C + 2D = 2 \\\\ C + 3D = 2 \\\\ \\end{align} \\] <p>Which is equivalent to:</p> \\[ \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 2 \\\\ 1 &amp; 3 \\\\ \\end{bmatrix} \\begin{bmatrix} C \\\\ D \\\\ \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 2 \\\\ \\end{bmatrix} \\] \\[ A \\mathbf{x} = \\mathbf{b} \\] <p>In our example the line does not go through all three points, so this equation is not solvable. Instead we'll solve:</p> \\[ A^TA\\mathbf{\\hat{x}} = A^T \\mathbf{b} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/16_least_square/","title":"Projection Matrices and Least Squares","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/16_least_square/#projections","title":"Projections","text":"<p>Last lecture, we learned that \\(P = A(A^TA)^{-1}A^T\\) is the matrix that projects a vector \\(\\mathbf{b}\\) onto the space spanned by the columns of \\(A\\). If \\(\\mathbf{b}\\) is perpendicular to the column space, then it's in the left nullspace \\(N(A^T)\\) of \\(A\\) and \\(P\\mathbf{b} = \\mathbf{0}\\). If \\(\\mathbf{b}\\) is in the column space then \\(\\mathbf{b} = A\\mathbf{x}\\) for some \\(\\mathbf{x}\\), and \\(P\\mathbf{b} = \\mathbf{b}\\).</p> <p>A typical vector will have a component \\(\\mathbf{p}\\) in the column space and a component \\(\\mathbf{e}\\) perpendicular to the column space (in the left nullspace); its projection is just the component in the column space.</p> <p>The matrix projecting \\(\\mathbf{b}\\) onto \\(N(A^T)\\) is \\(I - P\\):</p> \\[ \\mathbf{e} = \\mathbf{b} - \\mathbf{p} = (I - P)\\mathbf{b} \\] <p>Naturally, \\(I - P\\) has all the properties of a projection matrix.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/16_least_square/#least-squares","title":"Least Squares","text":"<p>We want to find the closet line \\(b = C + Dt\\) to the points \\((1, 1), (2, 2)\\) and \\((3, 2)\\). The process we're going to use is called <code>linear regression</code>; this technique is most useful if none of the data points are <code>outlier</code>.</p> <p>By <code>closet</code> line we mean one that minimizes the error represented by the distance from the points to the line. We measure that error by adding up the squares of these distances. In other words, we want to minimize</p> \\[ ||A\\mathbf{x} - \\mathbf{b}||^2 = ||\\mathbf{e}||^2 \\] <p>If the line went through all three points, we'd have:</p> \\[ \\begin{align} C + D = 1 \\\\ C + 2D = 2 \\\\ C + 3D = 2 \\\\ \\end{align} \\] <p>but this system is unsolvable. It's equivalent to \\(A \\mathbf{x} = \\mathbf{b}\\), where:</p> \\[ A = \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 2 \\\\ 1 &amp; 3 \\end{bmatrix}, \\mathbf{x} = \\begin{bmatrix} C \\\\ D \\end{bmatrix}, \\mathbf{b} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 2\\end{bmatrix} \\] <p>There are two ways of viewing this. In the space of the line we're trying to find, \\(e_1, e_2\\) and \\(e_3\\) are the vertical distance from the data points to the line. The components \\(p_1\\), \\(p_2\\) and \\(p_3\\) are the values of \\(C + Dt\\) near each data point; \\(\\mathbf{p} \\approx \\mathbf{b}\\).</p> <p>In the other view we have a vector \\(\\mathbf{b}\\) in \\(\\mathbb{R}^3\\), its projection \\(\\mathbf{p}\\) onto the column space of \\(A\\), and its projection \\(\\mathbf{e}\\) onto \\(N(A^T)\\).</p> <p>We will now find \\(\\mathbf{\\hat{x}} = \\begin{bmatrix} \\hat{C} \\\\ \\hat{D} \\end{bmatrix}\\) and \\(\\mathbf{b}\\). We know:</p> \\[ A^TA\\mathbf{\\hat{x}} = A^T\\mathbf{b} \\] \\[ \\begin{bmatrix} 3 &amp; 6 \\\\ 6 &amp; 14 \\\\ \\end{bmatrix} \\begin{bmatrix} \\hat{C} \\\\ \\hat{D} \\\\ \\end{bmatrix} = \\begin{bmatrix} 5 \\\\ 11 \\\\ \\end{bmatrix} \\] <p>From this we get the <code>normal equations</code>:</p> \\[ \\begin{align} 3 \\hat{C} + 6 \\hat{D} = 5 \\\\ 6 \\hat{C} + 14 \\hat{D} = 11 \\\\ \\end{align} \\] <p>We solve these to find \\(\\hat{D} = 1 / 2\\) and \\(\\hat{C} = 2 / 3\\).</p> <p>We could also have used calculus to find the minimum of the following function of two variables:</p> \\[ e_1^2 + e_2^2 + e_3^2 = (C + D - 1)^2 + (C + 2D - 2)^2 + (C + 3D - 2)^2 \\] <p>Either way, we end up solving a system of linear equations to find that the closet line to our points is</p> \\[ b = \\frac{2}{3} + \\frac{1}{2}t \\] <p>this gives us:</p> i \\(p_i\\) \\(e_i\\) 1 7/6 -\u2159 2 5/3 \u2153 3 13/6 -\u2159 <p>or</p> \\[ \\begin{align} \\mathbf{p} = \\begin{bmatrix} 7/6 \\\\ 5/3 \\\\ 13/6 \\end{bmatrix} \\\\ \\mathbf{e} = \\begin{bmatrix} -1/6 \\\\ 2/6 \\\\ -1/6 \\end{bmatrix} \\\\ \\end{align} \\] <p>Note that \\(\\mathbf{p}\\) and \\(\\mathbf{e}\\) are orthogonal, and also that \\(\\mathbf{e}\\) is perpendicular to the columns of \\(A\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/16_least_square/#the-matrix-ata","title":"The matrix \\(A^TA\\)","text":"<p>We've been assuming that the matrix \\(A^TA\\) is invertable. Is this justified?</p> <p>If \\(A\\) has independent columns, then \\(A^TA\\) is invertible.</p> <p>To prove this, we assume that</p> \\[ A^TA\\mathbf{x} = \\mathbf{0} \\] <p>then show that it must be true that</p> \\[ \\mathbf{x} = \\mathbf{0} \\] <p>So we got:</p> \\[ \\begin{align} A^TA\\mathbf{x} = \\mathbf{0} \\\\ \\mathbf{x}^TA^TA\\mathbf{x} = \\mathbf{x}^T\\mathbf{0} \\\\ (A\\mathbf{x})^T(A\\mathbf{x}) = \\mathbf{0} \\\\ A\\mathbf{x} = \\mathbf{0} \\end{align} \\] <p>Since \\(A\\) has independent columns, \\(A\\mathbf{x} = \\mathbf{0}\\) only when \\(\\mathbf{x} = \\mathbf{0}\\). </p> <p>As long as the columns of \\(A\\) are independent, we can use linear regression to find approximate solutions to unsolvable systems of linear equations. The columns of \\(A\\) are guaranteed to be independent if they are <code>orthonormal</code>, i.e. if they are perpendicular unit vectors like:</p> \\[ \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\end{bmatrix}, \\begin{bmatrix} 0 \\\\ 1 \\\\ 0 \\end{bmatrix}, \\begin{bmatrix} 0 \\\\ 0 \\\\ 1 \\end{bmatrix} \\] <p>or like:</p> \\[ \\begin{bmatrix} cos{\\theta} \\\\ sin{\\theta} \\end{bmatrix}, \\begin{bmatrix} -sin\\theta \\\\ cos\\theta \\end{bmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/17_gram_schmidt/","title":"Orthogonal Matrices and Gram-Schmidt","text":"<p>In this lecture we finish introducing orthogonality. Using an orthonormal basis or a matrix with orthonormal columns makes calculations much easier. The Gram-Schmidt process starts with any basis and produces an orthonormal basis that spans the same space as the original basis.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/17_gram_schmidt/#orthonormal-vectors","title":"Orthonormal Vectors","text":"<p>The vectors \\(\\mathbf{q_1}, \\mathbf{q_2}, \\cdots, \\mathbf{q_n}\\) are <code>orthonormal</code> if:</p> \\[ \\mathbf{q_i}^T \\mathbf{q_j} = \\begin{cases} 0,\\text{ if } i \\ne j \\\\ 1,\\text{ if } i = j \\\\ \\end{cases} \\] <p>In other words, they all have (normal) length \\(1\\) and are perpendicular(orthonormal) to each other. Orthonormal vectors are always independent.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/17_gram_schmidt/#orthonormal-matrix","title":"Orthonormal Matrix","text":"<p>If the columns of \\(Q = [\\mathbf{q_1} \\cdots \\mathbf{q_n}]\\) are orthonormal, then \\(Q^TQ = I\\) is the identity.</p> <p>Matrices with orthonormal columns are a new class of important matrices to add to those on our list:</p> <ul> <li>triangular</li> <li>diagonal</li> <li>permutation</li> <li>symmetric</li> <li>reduced row echelon</li> <li>projection</li> </ul> <p>We'll call them <code>orthonormal matrices</code>.</p> <p>A square orthonormal matrix \\(Q\\) is called an <code>orthogonal matrix</code>. If \\(Q\\) is square, then \\(Q^TQ = I\\) tells us that:</p> \\[ Q^T = Q^{-1} \\] <p>For example, if \\(Q = \\begin{bmatrix} 0 &amp; 0 &amp; 1 \\\\ 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\end{bmatrix}\\) then \\(Q^T = \\begin{bmatrix} 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ 1 &amp; 0 &amp; 0 \\end{bmatrix}\\). Both \\(Q\\) and \\(Q^T\\) are orthogonal matrices, and their product is the identity.</p> <p>The matrix \\(Q = \\begin{bmatrix} cos\\theta &amp; -sin\\theta \\\\ sin\\theta &amp; cos\\theta \\end{bmatrix}\\) is orthogonal. The matrix \\(\\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix}\\) is not, but we can adjust that matrix to get the orthogonal matrix \\(Q = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix}\\). We can use the same tactic to find some larger orthogonal matrices called <code>Hadamard matrices</code>:</p> \\[ Q = \\frac{1}{2} \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 1 &amp; -1 &amp; 1 &amp; -1 \\\\ 1 &amp; 1 &amp; -1 &amp; -1 \\\\ 1 &amp; -1 &amp; -1 &amp; 1 \\\\ \\end{bmatrix} \\] <p>An example of a rectangular matrix with orthonormal columns is:</p> \\[ Q = \\frac{1}{3} \\begin{bmatrix} 1 &amp; -2 \\\\ 2 &amp; -1 \\\\ 2 &amp; 2 \\\\ \\end{bmatrix} \\] <p>We can extend this to a (square) orthogonal matrix:</p> \\[ \\frac{1}{3} \\begin{bmatrix} 1 &amp; -2 &amp; 2 \\\\ 2 &amp; -1 &amp; -2 \\\\ 2 &amp; 2 &amp; 1 \\\\ \\end{bmatrix} \\] <p>These examples are particularly nice because they don't include complicated square roots.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/17_gram_schmidt/#orthonormal-columns-are-good","title":"Orthonormal Columns are Good","text":"<p>Suppose \\(Q\\) has orthonormal columns, The matrix that projects onto the column space of \\(Q\\) is:</p> \\[ P = Q(Q^TQ)^{-1}Q^T \\] <p>If the columns of \\(Q\\) are orthonormal, then \\(Q^TQ = I\\) and \\(P = QQ^T\\). If \\(Q\\) is square, then \\(P = I\\) because the columns of \\(Q\\) span the entire space.</p> <p>Many equations become trivial when using a matrix with orthonormal columns. If our basis is orthonormal, the projection component \\(\\hat{x_i}\\) is just \\(\\mathbf{q_i}^T\\mathbf{b}\\) because \\(A^TA\\hat{x} = A^T\\mathbf{b}\\) becomes \\(\\mathbf{\\hat{x}} = Q^T\\mathbf{b}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/17_gram_schmidt/#gram-schmidt","title":"Gram-Schmidt","text":"<p>With elimination, our goal was <code>make the matrix triangular</code>. Now our goal is <code>make the matrix orthonormal</code>.</p> <p>We start with two independent vectors \\(\\mathbf{a}\\) and \\(\\mathbf{b}\\) and want to find orthonormal vectors \\(\\mathbf{q_1}\\) and \\(\\mathbf{q_2}\\) that span the same plane. We start by finding orthogonal vectors \\(\\mathbf{A}\\) and \\(\\mathbf{B}\\) that span the same space as \\(\\mathbf{a}\\) and \\(\\mathbf{b}\\). Then the unit vectors \\(\\mathbf{q_1} = \\frac{\\mathbf{A}}{||\\mathbf{A}||}\\) and \\(\\mathbf{q_2} = \\frac{\\mathbf{B}}{||\\mathbf{B}||}\\) from the desired orthonormal basis.</p> <p>Let \\(\\mathbf{A} = \\mathbf{a}\\). We get a vector orthogonal to \\(\\mathbf{A}\\) in the space spanned by \\(\\mathbf{a}\\) and \\(\\mathbf{b}\\) by projecting \\(\\mathbf{b}\\) onto \\(\\mathbf{a}\\) and letting \\(\\mathbf{B} = \\mathbf{b} - \\mathbf{p}\\). (\\(\\mathbf{B}\\) is what we previously called \\(\\mathbf{e}\\).)</p> \\[ \\mathbf{B} = \\mathbf{b} - \\frac{\\mathbf{A}^T\\mathbf{b}}{\\mathbf{A}^T\\mathbf{A}} \\mathbf{A} \\] <p>If we multiply both sides of this equation by \\(\\mathbf{A}^T\\), we see that \\(\\mathbf{A}^T\\mathbf{B} = \\mathbf{0}\\)</p> <p>What if we had started with three independent vectors, \\(\\mathbf{a}\\), \\(\\mathbf{b}\\) and \\(\\mathbf{c}\\)? Then we'd find a vector \\(\\mathbf{C}\\) orthogonal to both \\(\\mathbf{A}\\) and \\(\\mathbf{B}\\) by subtracting from \\(\\mathbf{c}\\) its components in the \\(\\mathbf{A}\\) and \\(\\mathbf{B}\\) directions:</p> \\[ \\mathbf{C} = \\mathbf{c} - \\frac{\\mathbf{A}^T \\mathbf{c}} {\\mathbf{A}^T\\mathbf{A}} \\mathbf{A} - \\frac{\\mathbf{B}^T \\mathbf{c}} {\\mathbf{B}^T \\mathbf{B}} \\mathbf{B} \\] <p>For example, suppose \\(\\mathbf{a} = \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\end{bmatrix}\\) and \\(\\mathbf{b} = \\begin{bmatrix} 1 \\\\ 0 \\\\ 2 \\end{bmatrix}\\). Then \\(\\mathbf{A} = \\mathbf{a}\\) and:</p> \\[ \\begin{align} \\mathbf{B} &amp; = \\begin{bmatrix} 1 \\\\ 0 \\\\ 2 \\end{bmatrix} - \\frac{\\mathbf{A}^T \\mathbf{b}} {\\mathbf{A}^T\\mathbf{A}} \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\end{bmatrix} \\\\ &amp; = \\begin{bmatrix} 1 \\\\ 0 \\\\ 2 \\end{bmatrix} - \\frac{3}{3} \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\end{bmatrix} \\\\ &amp; = \\begin{bmatrix} 0 \\\\ -1 \\\\ 1 \\end{bmatrix} \\end{align} \\] <p>Normalizing, we get:</p> \\[ Q = [ \\mathbf{q_1} \\mathbf{q_2}] = \\begin{bmatrix} 1/\\sqrt{3} &amp; 0 \\\\ 1/\\sqrt{3} &amp; -1/\\sqrt{2} \\\\ 1/\\sqrt{3} &amp; 1/\\sqrt{2} \\\\ \\end{bmatrix} \\] <p>The column space of \\(Q\\) is the plane spanned by \\(\\mathbf{a}\\) and \\(\\mathbf{b}\\).</p> <p>When we studied elimination, we wrote the process in terms of matrices and found \\(A = LU\\). A similar equation \\(A = QR\\) relates our starting matrix \\(A\\) to the result \\(Q\\) of the Gram-Schmidt process. Where \\(L\\) was lower triangular, \\(R\\) is upper triangular.</p> <p>Suppose \\(A = [ \\mathbf{a_1} \\mathbf{a_2} ]\\), then:</p> \\[ A = Q R \\] \\[ \\begin{bmatrix} \\mathbf{a_1} &amp; \\mathbf{a_2} \\end{bmatrix} = \\begin{bmatrix} \\mathbf{q_1} &amp; \\mathbf{q_2} \\end{bmatrix} \\begin{bmatrix} \\mathbf{a_1}^T\\mathbf{q_1} &amp; \\mathbf{a_2}^T\\mathbf{q_1} \\\\ \\mathbf{a_1}^T\\mathbf{q_2} &amp; \\mathbf{a_2}^T\\mathbf{q_2} \\\\ \\end{bmatrix} \\] <p>If \\(R\\) is upper triangular, then it should be true that \\(\\mathbf{a_1}^T\\mathbf{q_2} = 0\\). This must be true because we chose \\(\\mathbf{q_1}\\) to be a unit vector in the direction of \\(\\mathbf{a_1}\\). All the latter \\(\\mathbf{q_i}\\) were chosen to be perpendicular to the earlier ones.</p> <p>Notice that \\(R = Q^TA\\). This makes sense; \\(Q^TQ = I\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/18_property_determinant/","title":"Properties of Determinants","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/18_property_determinant/#determinants","title":"Determinants","text":"<p>Now halfway through the course, we leave behind rectangular matrices and focus on square ones. Our next big topics are determinants and eigenvalues.</p> <p>The <code>determinant</code> is a number associated with any square matrix; we'll write it as <code>det A</code> or \\(|A|\\). The determinant encodes a lot of information about the matrix; the matrix is invertible exactly when the determinant is non-zero.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/18_property_determinant/#properties","title":"Properties","text":"<p>Rather than start with a big formula, we'll list the properties of the determinant. We already know that \\(\\begin{vmatrix} a &amp; b \\\\ c &amp; d  \\end{vmatrix} = ad - bc\\); these properties will give us a formula for the determinant of square matrices of all sizes.</p> <p>1 . |I| = 1</p> <p>2 . If you exchange two rows of a matrix, you reverse the sign of its determinant from positive to negative or from negative to positive.</p> \\[ \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\\\ \\end{vmatrix} = - \\begin{vmatrix} c &amp; d \\\\ a &amp; b \\\\ \\end{vmatrix} \\] <p>3 . (a) If we multiply one row of a matrix by \\(t\\), the determinant is multiplied by \\(t\\):</p> \\[ \\begin{vmatrix} ta &amp; tb \\\\ c &amp; d \\\\ \\end{vmatrix} = t \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\\\ \\end{vmatrix} \\] <p>3 . (b) The determinant behaves like a linear function on the rows of the matrix:</p> \\[ \\begin{vmatrix} a + a' &amp; b + b' \\\\ c &amp; d \\\\ \\end{vmatrix} = \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\\\ \\end{vmatrix} + \\begin{vmatrix} a' &amp; b' \\\\ c &amp; d \\\\ \\end{vmatrix} \\] <p>Property 1 tells us that \\(\\begin{vmatrix} 1 &amp; 0 \\\\ 0 &amp; 1 \\end{vmatrix} = 1\\).  Property 2 tells us that \\(\\begin{vmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{vmatrix} = -1\\). The determinant of a permutation matrix \\(P\\) is \\(1\\) or \\(-1\\) depending o whether \\(P\\) exchanges an even or odd number of rows.</p> <p>From these three properties we can deduce many others:</p> <p>4 . If two rows of a matrix are equal, its determinant is zero.</p> \\[ \\begin{vmatrix} a &amp; b \\\\ a &amp; b \\\\ \\end{vmatrix} = 0 \\] <p>This is because of property 2, the exchange rule. On the one hand, exchanging the two identical rows does not change the determinant. On the other hand, exchanging the two rows changes the sign of the determinant. Therefore the determinant must be \\(0\\).</p> <p>5 . If \\(i \\ne j\\), subtracting \\(t\\) times row \\(i\\) from row \\(j\\) doesn't change the determinant.</p> <p>In two dimensions, this argument looks like:</p> \\[ \\begin{align} \\begin{vmatrix} a &amp; b \\\\ c - ta &amp; d - tb \\\\ \\end{vmatrix} &amp;= \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\\\ \\end{vmatrix} - \\begin{vmatrix} a &amp; b \\\\ ta &amp; tb \\\\ \\end{vmatrix} \\text{   property 3(b)} \\\\ &amp;= \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\\\ \\end{vmatrix} - t \\begin{vmatrix} a &amp; b \\\\ a &amp; b \\\\ \\end{vmatrix} \\text{  property 3(a)} \\\\ &amp;= \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\\\ \\end{vmatrix} \\text{  property 4} \\end{align} \\] <p>The proof for higher dimensional matrices is similar.</p> <p>6 . If \\(A\\) has a row that is all zeros, then \\(\\det A = 0\\).</p> <p>We get this from property 3(a) by letting \\(t = 0\\).</p> <p>7 . The determinant of a triangular matrix is the product of the diagonal entries(pivots) \\(d_1, d_2, \\cdots, d_n\\).</p> <p>Property 5 tells us that the determinant of the triangular matrix won't change if we use elimination to convert it to a diagonal matrix with the entries \\(d_i\\) on its diagonal. Then property 3(a) tells us that the determinant of this digonal matrix is the product \\(d_1d_2 \\cdots d_n\\) times the determinant of the identity matrix. Property 1 completes the arguments.</p> <p>Note that we cannot use elimination to get a diagonal matrix if one of the \\(d_i\\) is zero. In that case elimination will give us a row of zeros and property 6 gives us the conclusion we want.</p> <p>8 . \\(\\det A = 0\\) exactly when \\(A\\) is singular.</p> <p>If \\(A\\) is singular, then we can use elimination to get a row of zeros, and property 6 tells us that determinant is zero.</p> <p>If \\(A\\) is not singular, then elimination produces a full set of pivots \\(d_1, d_2, \\cdots, d_n\\) and the determinant is \\(d_1d_2 \\cdots d_n \\ne 0\\) (with minus signs from row exchanges).</p> <p>We now have a very practical formula for the determinant of a non-singular matrix. In fact, the way computers find the determinants of large matrices is to first perform elimination (keeping track of whether the row exchanges is odd or even) and then multiply the pivots:</p> \\[ \\begin{bmatrix} a &amp; b \\\\ c &amp; d \\end{bmatrix} \\to \\begin{bmatrix} a &amp; b \\\\ 0 &amp; d - \\frac{c}{a}b \\end{bmatrix} \\] <p>where \\(a \\ne 0\\), so</p> \\[ \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix} = a(d - \\frac{c}{a}b) = ad - bc \\] <p>9 . \\(\\det AB = (\\det A)(\\det B)\\)</p> <p>This is very useful. Although the determinant of a sum does not equal the sum of the determinants, it is true that the determinant of a product equals the product of the determinants.</p> <p>For example:</p> \\[ \\det A^{-1} = \\frac{1}{\\det A} \\] <p>because \\(A^{-1}A = 1\\). (Note that if \\(A\\) is singular then \\(A^{-1}\\) does not exist and \\(\\det A^{-1}\\) is undefined.) </p> <p>Also, \\(\\det A^2 = (\\det A)^2\\) and \\(\\det 2A = 2^n \\det A\\) (applying property 3 to each row of the matrix). This reminds us of volume, if we double the length, width and height of a tree dimensional box, we increase its volume by a multiple of \\(2^3 = 8\\).</p> <p>10 . \\(\\det A^T = \\det A\\)</p> \\[ \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix} = \\begin{vmatrix} a &amp; c \\\\ b &amp; d \\end{vmatrix} = ad - bc \\] <p>This lets us translate properties(2, 3, 4, 5, 6) involving rows into statements about columns. For instance, if a column of a matrix is all zeros then then the determinant of that matrix is zero.</p> <p>To see why \\(|A^T| = |A|\\), use elimination to write \\(A = LU\\). The statement becomes \\(|U^TL^T| = |LU|\\). Rule 9 then tells us \\(|U^T||L^T| = |L||U|\\).</p> <p>Matrix \\(L\\) is a lower triangular matrix with \\(1\\)'s on the diagonal, so rule 5 tells us that \\(|L| = |L^T| = 1\\). Because \\(U\\) is upper triangular, rule 5 tells us that \\(|U| = |U^T|\\). Therefore \\(|U^T||L^T| = |L||U|\\) and \\(|A^T| = |A|\\).</p> <p>We have one loose end to worry about. Rule 2 told us that a row exchange changes the sign of the determinant. If it's possible to do seven row exchanges and get the same matrix you would by doging ten row changes, then we could prove that the determinant equals its negative. To complete the proof that the determinant is well defined by properties 1, 2 and 3 we'd need to show that the result of an odd number of row exchanges (odd permutation) can never be the same as the result of an even number of row exchanges(even permutation).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/19_cofactor/","title":"Determinant Formulas and Cofactors","text":"<p>Now that we know the properties of the determinant, it's time to learn some(rather messy) formulas for computing it.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/19_cofactor/#formula-for-the-determinant","title":"Formula for the Determinant","text":"<p>We know that the determinant has the following three properties:</p> <ol> <li>\\(det I = 1\\)</li> <li>Exchanging rows reverses the sign of the determinant.</li> <li>The determinant is linear in each row separately.</li> </ol> <p>Last class we listed seven consequences of these properties. We can use these ten properties to find a formula for the determinant of a 2 by 2 matrix:</p> \\[ \\begin{align} \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix} &amp;= \\begin{vmatrix} a &amp; 0 \\\\ c &amp; d\\end{vmatrix} + \\begin{vmatrix} 0 &amp; b \\\\ c &amp; d \\end{vmatrix} \\\\  &amp;= \\begin{vmatrix} a &amp; 0 \\\\ c &amp; 0\\end{vmatrix} + \\begin{vmatrix} a &amp; 0 \\\\ 0 &amp; d \\end{vmatrix} + \\begin{vmatrix} 0 &amp; b \\\\ c &amp; 0 \\end{vmatrix} + \\begin{vmatrix} 0 &amp; b \\\\ 0 &amp; d \\end{vmatrix} \\\\ &amp;= 0 + ad + (-cb) + 0 \\\\ &amp;= ad - bc \\end{align} \\] <p>By applying property 3 to separate the individual entries of each row we could get a formula for any other square matrix. However, for a 3 by 3 matrix we'll have to add the determinants of 27 different matrices! Many of those determinants are zero. The none-zero pieces are:</p> \\[ \\begin{align} \\begin{vmatrix} a_{11} &amp; a_{12} &amp; a_{13} \\\\ a_{21} &amp; a_{22} &amp; a_{23} \\\\ a_{31} &amp; a_{32} &amp; a_{33} \\\\ \\end{vmatrix} &amp; = \\begin{vmatrix} a_{11} &amp; 0 &amp; 0 \\\\ 0 &amp; a_{22} &amp; 0 \\\\ 0 &amp; 0 &amp; a_{33} \\\\ \\end{vmatrix} + \\begin{vmatrix} a_{11} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; a_{23} \\\\ 0 &amp; a_{32} &amp; 0 \\\\ \\end{vmatrix} + \\begin{vmatrix} 0 &amp; a_{12} &amp; 0 \\\\ a_{21} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; a_{33} \\\\ \\end{vmatrix} + \\begin{vmatrix} 0 &amp; a_{12} &amp; 0 \\\\ 0 &amp; 0 &amp; a_{23} \\\\ a_{31} &amp; 0 &amp; 0 \\\\ \\end{vmatrix} + \\begin{vmatrix} 0 &amp; 0 &amp; a_{13} \\\\ 0 &amp; a_{22} &amp; 0 \\\\ 0 &amp; a_{32} &amp; 0 \\\\ \\end{vmatrix} + \\begin{vmatrix} 0 &amp; 0 &amp; a_{13} \\\\ 0 &amp; a_{22} &amp; 0 \\\\ a_{31} &amp; 0 &amp; 0 \\\\ \\end{vmatrix} \\\\ &amp;= a_{11}a_{22}a_{33} - a_{11}a_{23}a_{32} - a_{12}a_{21}a_{33} + a_{12}a_{23}a_{31} + a_{13}a_{21}a_{32} - a_{13}a_{22}a_{31} \\end{align} \\] <p>Each of the non-zero pieces has one entry form each row in each column, as in a permutation matrix, Since the determinant of a permutation matrix is either 1 or -1, we can again use the property 3 to find the determinants of each of these summands and obtain our formula.</p> <p>One way to remember this formula is that the positive terms are products of entries going down and to the right in our original matrix, and the negtive terms are products going down and to the left. This rule of thumb doesn't work for matrices larger than 3 by 3.</p> <p>The number of parts with non-zero determinants was</p> <ul> <li>2(\\(2!\\)), in 2 by 2 case,</li> <li>6(\\(3!\\)), in 3 by 3 case,</li> <li>24(\\(4!\\)), in 4 by 4 case.</li> </ul> <p>This  is because there are n ways to choose an element from the first row(i.e. a value for \\(\\alpha\\)), after which there are only n - 1 ways to choose an element from the second row that avoids a zero determinant. Then there are n - 2 choices from the third row, n - 3 from the fourth, and so on.</p> <p>The big formula for computing the determinant of any square matrix is:</p> \\[ det A = \\sum_{n!\\text{ terms}} \\pm a_{1\\alpha} a_{2\\beta} a_{3\\gamma} \\cdots a_{n\\omega} \\] <p>where \\((\\alpha,\\beta,\\gamma,\\cdots,\\omega)\\) is some permutation of \\((1, 2, 3, \\cdots, n)\\). If we test this on the identity matrix, we find that all the terms are zero except the one corresponding to the trivial permutation \\(\\alpha=1, \\beta = 2, \\cdots, \\omega = n\\). This agrees with the first property: \\(det I = 1\\). It's possible to check all the other properties as well, but we won't do that here.</p> <p>Applying the method of elimination and multiplying the diagonal entries of the result (the pivots) is another good way to find the determinant of a matrix.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/19_cofactor/#example","title":"Example","text":"<p>In a matrix with many zero entries, many terms in the formula are zero. We can compute the determinant of:</p> \\[ \\begin{vmatrix} 0 &amp; 0 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 &amp; 1 \\\\ \\end{vmatrix} \\] <p>by choosing a non-zero entry from each row and column, multiplying those entries, giving the product the appropriate sign, then adding the results.</p> <p>The permutation corresponding to the diagonal running from \\(a_{14}\\) to \\(a_{41}\\) is (4, 3, 2, 1). This contributes 1 to the determinant of the matrix; the contribution is positive because it takes two row exchanges to convert the permutation (4, 3, 2, 1) to the identity (1, 2, 3, 4).</p> <p>Another non-zero term of of \\(\\sum \\pm a_{1\\alpha} a_{2\\beta} a_{3 \\gamma} a_{4 \\omega}\\) comes from the permutation (3, 2, 1, 4). This contributes -1 to the sum, because one exchange (of the first and third rows) leads to the identity.</p> <p>These are the only two non-zero terms in the sum, so the determinant is 0. We can confirm this by noting that row 1 minus row 2 plus row 3 minus row 4 equals zero.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/19_cofactor/#cofactor-formula","title":"Cofactor formula","text":"<p>The cofactor formula rewrites the big formula for the determinant of an n by n matrix in terms of the determinants of smaller matrices.</p> <p>In the 3 by 3 case, the formula looks like:</p> \\[ \\begin{align} det A &amp;= a_{11}(a_{22}a_{33} - a_{23}a_{32}) + a_{12}(-a_{21}a_{33} + a_{23}a_{31}) + a_{13}(a_{21}a_{32} - a_{22}a_{31}) &amp;= \\begin{vmatrix} a_{11} &amp; 0 &amp; 0 \\\\ 0 &amp; a_{22} &amp; a_{23} \\\\ 0 &amp; a_{32} &amp; a_{33} \\end{vmatrix} + \\begin{vmatrix} 0 &amp; a_{12} &amp; 0 \\\\ a_{21} &amp; 0 &amp; a_{23} \\\\ a_{31} &amp; 0 &amp; a_{33} \\end{vmatrix} + \\begin{vmatrix} 0 &amp; 0 &amp; a_{13} \\\\ a_{21} &amp; a_{22} &amp; 0 \\\\ a_{31} &amp; a_{32} &amp; 0 \\end{vmatrix} \\end{align} \\] <p>This comes from grouping all the multiples of \\(a_{ij}\\) in the big formula. Each element is multiplied by the <code>cofactors</code> in the parentheses following it. Note that each cofactor is (plus or minus) the determinant of a 2 by 2 matrix. That determinant is made up of products of elements in the rows and columns NOT containing \\(a_{1j}\\).</p> <p>In general, the cofactor \\(C_{ij}\\) of \\(a_{ij}\\) can be found by looking at all the terms in the big formula that contain \\(a_{ij}\\). \\(C_{ij}\\) equals \\((-1)^{i + j}\\) times the determinant of the n - 1 by n - 1 square matrix obtained by removing row i and column j. (\\(C_{ij}\\) is positive if i + j is even and negtive if i + j is odd.)</p> <p>For n by n matrices, the cofactor formula is:</p> \\[ det A = a_{11} C_{11} + a_{12} C_{12} + \\cdots + a_{1n} C_{1n} \\] <p>Applying this to a 2 by 2 matrix gives us:</p> \\[ \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix} = ad + b(-c) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/19_cofactor/#tridiagonal-matrix","title":"Tridiagonal Matrix","text":"<p>A <code>tridiagonal matrix</code> is one for which the only non-zero entries lie on or adjacent to the diagonal. For example, the 4 by 4 triagonal matrix of 1's is:</p> \\[ A_{4} = \\begin{vmatrix} 1 &amp; 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 \\end{vmatrix} \\] <p>What is the determinant of an n by n triagonal matrix of 1's?</p> \\[ \\begin{vmatrix} A_{1} \\end{vmatrix} = 1,  \\begin{vmatrix} A_{2} \\end{vmatrix} = \\begin{vmatrix} 1 &amp; 1 \\\\ 1 &amp; 1 \\end{vmatrix} = 0, \\begin{vmatrix} A_{3} \\end{vmatrix} = \\begin{vmatrix} 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 \\end{vmatrix} = -1 \\] \\[ \\begin{vmatrix} A_{4} \\end{vmatrix} = 1 \\begin{vmatrix} 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 \\end{vmatrix} - \\begin{vmatrix} 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 \\end{vmatrix} = |A_{3}| - 1 |A_{2}| = -1 \\] <p>In fact, \\(|A_{n}| = |A_{n - 1}| - |A_{n - 2}|\\). We get a sequence which repeats every six terms:</p> \\[ |A_1| = 1, |A_2| = 0, |A_3| = -1, |A_4| = -1, |A_5| = 0, |A_6| = 1, |A_7| = 1 \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/20_cramer/","title":"Cramer's Rule, Inverse Matrix, and Volume","text":"<p>We know a formula for and some properties of the determinant. Now we see how the determinant can be used.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/20_cramer/#formula-for-a-1","title":"Formula for A^-1","text":"<p>We know:</p> \\[ \\begin{bmatrix} a &amp; b \\\\ c &amp; d \\end{bmatrix}^{-1} = \\frac{1}{ad - bc} \\begin{bmatrix} d &amp; -b \\\\ -c &amp; a \\end{bmatrix} \\] <p>Can we get a formula for the inverse of a 3 by 3 or n by n matrix? We expect that \\(\\frac{1}{det A}\\) will be involved, as it is in the 2 by 2 matrix, and by lookin at the cofactor matrix \\(\\begin{bmatrix} d &amp; -c \\\\ -b &amp; a \\end{bmatrix}\\) we will guess that the cofactors will be involved.</p> <p>In fact:</p> \\[ A^{-1} = \\frac{1}{det A} C^T \\] <p>where C is the matrix of cofactors(<code>Notice the transpose!</code>). Cofactors of row one of a go into column 1 of \\(A^{-1}\\), and then we divide by the determinant.</p> <p>The determinant of A involves products with n terms and the cofactor matrix involves products of n - 1 terms. A and \\(\\frac{1}{det A} C^T\\) might cancel each other. This is much easier to see from our formula for the determinant than when using Gauss-Jordan elimination.</p> <p>To more formally verify the formula, we'll check that \\(AC^T = (det A) I\\). </p> \\[ AC^T =  \\begin{bmatrix} a_{11} &amp; \\cdots &amp; a_{1n} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; \\cdots &amp; a_{nn} \\\\ \\end{bmatrix} \\begin{bmatrix} C_{11} &amp; \\cdots &amp; C_{1n} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ C_{n1} &amp; \\cdots &amp; C_{nn} \\\\ \\end{bmatrix} \\] <p>The entry in the first row and first column of the product matrix is:</p> \\[ \\sum_{j = 1}^{n} a_{1j}C_{j1} = det A \\] <p>This is just the cofactor formula for the determinant. This happens for every entry on the diagonal of \\(AC^T\\).</p> <p>To finish proving that \\(AC^T = (det A)I\\), we just need to check that the off-diagonal entries of \\(AC^T\\) are zero. In the 2 by 2 case, multiplying the entries in row 1 of A by the entries in column 2 of \\(C^T\\) gives \\(a(-b) + b(a) = 0\\). This is the determinant of \\(A_{s} = \\begin{bmatrix} a &amp; b \\\\ a &amp; b \\end{bmatrix}\\). In higher dimensions, the product of the first of A and the last column of \\(C^T\\) equals the determinant of a matrix whose first and last rows are identical. This happens with all the off diagonal matrices, which confirms that \\(A^{-1} = \\frac{1}{det A} C^T\\).</p> <p>This formula helps us answer questions about how the inverse changes when the matrix changes.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/20_cramer/#cramers-rule-for-x-a-1-b","title":"Cramer's Rule for x = A^-1 b","text":"<p>We know that if \\(A\\mathbf{x} = \\mathbf{b}\\) and A is nonsingular, then \\(\\mathbf{x} = A^{-1} \\mathbf{b}\\). Applying the formula \\(A^{-1} = C^T / (det A)\\) gives us:</p> \\[ \\mathbf{x} = \\frac{1}{det A} C^T \\mathbf{b} \\] <p><code>Cramer's Rule</code> gives us another way of looking at this question. To derive this rule we break \\(\\mathbf{x}\\) down into its components. Because the i'th component of \\(C^T\\mathbf{b}\\) is a sum of cofactors times some number, it is the determinant of some matrix \\(B_{j}\\).</p> \\[ x_{j} = \\frac{det B_{j}} {det A} \\] <p>where \\(B_{j}\\) is the matrix created by starting with A and then replacing column j with \\(\\mathbf{b}\\), so:</p> \\[ B_{1} = \\begin{bmatrix} \\mathbf{b} &amp; \\text{last n - 1 columns of A} \\end{bmatrix} \\] \\[ B_{n} = \\begin{bmatrix} \\text{first n - 1 columns of A} &amp; \\mathbf{b} \\end{bmatrix} \\] <p>This agrees with our formula \\(x_{1} = \\frac{det B_{1}} {det A}\\). When taking the determinant of \\(B_{1}\\) we get a sum whose first term is \\(b_{1}\\) times the cofactor \\(C_{11}\\) of A.</p> <p>Computing inverses using Cramer's rule is usually less efficient than using elimination.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/20_cramer/#a-volume-of-box","title":"|A| = volume of box","text":"<p>Claim:</p> <p>\\(det A\\) is the volume of the box (parallelepiped) whose edges are  the column vectors of \\(A\\).</p> <p>We could usually well use the row vectors, forming a different box with the same volume.</p> <p>If \\(A = I\\), then the box is a unit cube and its volume is 1. Because this agrees with our claim, we can conclude that the volume obeys determinant property 1.</p> <p>If \\(A = Q\\) is an orthogonal matrix then the box is a unit in a different orientation with volume = \\(det Q = 1\\). Because Q is an orthogonal matrix, \\(Q^TQ = I\\) and so \\(det Q = \\pm 1\\).</p> <p>Swapping two columns of A does not change the volume of the box or (remember that \\(det A = det A^T\\)) the absolute value of the determinant(property 2). If we show that the volume of the box also obeys property 3 we'll have proven \\(|det A|\\) equals the volume of the box.</p> <p></p> <p>If we double the length of one column of \\(A\\), we double the volume of the box formed by its columns. Volume satisfies property 3(a).</p> <p>Property 3(b) says that the determinant is linear in the rows of the matrix:</p> \\[ \\begin{vmatrix} a + a' &amp; b + b' \\\\ c &amp; d \\end{vmatrix} = \\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix} + \\begin{vmatrix} a' &amp; b' \\\\ c &amp; d \\end{vmatrix} \\] <p></p> <p>Although it's not needed for our proof, we can also see that determinants obey property 4. If two edges of a box are equal, the box flattens out and has no volume.</p> <p>Important note: If you know the coordinates for the corners of a box, then computing the volume of the box is as easy as calculating a determinant. In particular, the area of a parallelogram with edges \\(\\begin{bmatrix} a \\\\ b \\end{bmatrix}\\) and \\(\\begin{bmatrix} c \\\\ d \\end{bmatrix}\\)  is \\(ad - bc\\). The area of a triangle with edges \\(\\begin{bmatrix} a \\\\ b \\end{bmatrix}\\) and \\(\\begin{bmatrix} c \\\\ d \\end{bmatrix}\\)  is half the area of that parallelogram, or \\(\\frac{1}{2} (ad - bc)\\). The area of a triangle with vertices at \\((x_{1}, y_{1}), (x_{2}, y_{2})\\) and \\((x_{3}, y_{3})\\) is:</p> \\[ \\frac{1}{2} \\begin{vmatrix} x_{1} &amp; y_{1} &amp; 1 \\\\ x_{2} &amp; y_{2} &amp; 1 \\\\ x_{3} &amp; y_{3} &amp; 1 \\\\ \\end{vmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/","title":"Eigenvalues and Eigenvectors","text":"<p>The subject of eigenvalues and eigenvectors will take up most of the rest of the course. We will again be working with square matrices. Eigenvalues are special numbers associated with a matrix and eigenvectors are special vectors.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#eigenvectors-and-eigenvalues","title":"Eigenvectors and Eigenvalues","text":"<p>A matrix A <code>acts on</code> vectors \\(\\mathbf{x}\\) like a function does, with input \\(\\mathbf{x}\\) and output \\(A\\mathbf{x}\\). <code>Eigenvectors</code> are vectors for which \\(A\\mathbf{x}\\) is parallel to \\(\\mathbf{x}\\). In other words:</p> \\[ A\\mathbf{x} = \\lambda \\mathbf{x} \\] <p>In this equation, \\(\\mathbf{x}\\) is an <code>eigenvector</code> of A and \\(\\lambda\\) is an <code>eigenvalue</code> of A.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#eigenvalue-0","title":"Eigenvalue 0","text":"<p>If the eigenvalue \\(\\lambda\\) equals 0 then \\(A\\mathbf{x} = 0 \\mathbf{x} = \\mathbf{0}\\). Vectors with eigenvalue 0 make up the nullspace of A; if A is singular, then \\(\\lambda = 0\\) is an eigenvalue of A.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#examples","title":"Examples","text":"<p>Suppose P is the matrix of a projection onto a plane. For any \\(\\mathbf{x}\\) in the plane \\(P\\mathbf{x} = \\mathbf{0}\\), so this is an eigenvector with eigenvalue \\(\\lambda = 0\\). The eigenvectors of P span the whole space(but his is not true for every matrix).</p> <p>The matrix \\(B = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}\\) has an eigenvector \\(\\mathbf{x} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}\\) with eigenvalue 1 and another eigenvector \\(\\mathbf{x} = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}\\) with eigenvalue -1. These eigenvectors span the space. They are perpendicular because \\(B = B^T\\) (as we will prove).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#deta-lambda-i-0","title":"det(A - \\lambda I) = 0","text":"<p>An n by n matrix will have n eigenvalues, and their sum will be the sum of the diagonal entries of the matrix, if we know one eigenvalue we can use this fact to find the second.</p> <p>Can we solve \\(A\\mathbf{x} = \\lambda \\mathbf{x}\\) for the eigenvalues and eigenvectors of A? Both \\(\\lambda\\) and \\(\\mathbf{x}\\) are unknown; we need to be clever to solve this problem:</p> \\[ \\begin{align} A\\mathbf{x} &amp;= \\lambda \\mathbf{x} \\\\ (A - \\lambda I) \\mathbf{x} &amp;= \\mathbf{0} \\end{align} \\] <p>In order for \\(\\mathbf{x}\\) to be an eigenvector, \\(A - \\lambda I\\) must be singular. In other words, \\(det (A - \\lambda I) = 0\\). We can solve this <code>characteristic equation</code> for \\(\\lambda\\) to get n solutions.</p> <p>If we're lucky, the solutions are distinct. If not, we have one or more <code>repeated eigenvalues</code>.</p> <p>Once we've found an eigenvlaue \\(\\lambda\\), we can use elimination to find the nullspace of \\(A - \\lambda I\\). The vectors in that nullspace are eigenvectors of A with eigenvalue \\(\\lambda\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#calculating-eigenvalues-and-eigenvectors","title":"Calculating Eigenvalues and Eigenvectors","text":"<p>Let \\(A = \\begin{bmatrix} 3 &amp; 1 \\\\ 1 &amp; 3 \\end{bmatrix}\\), then:</p> \\[ \\begin{align} det(A - \\lambda I) &amp; = \\begin{vmatrix} 3 - \\lambda &amp; 1 \\\\ 1 &amp; 3 - \\lambda \\end{vmatrix} \\\\ &amp;= (3 - \\lambda)^2 - 1 \\\\  &amp;= \\lambda^2 - 6\\lambda + 8 \\end{align} \\] <p>Note that the coefficient 6 is the trace (sum of diagonal entries) and 8 is the determinant of A. In general, the eigenvlaues of a 2 by 2 matrix are the solutions to:</p> \\[ \\lambda^2 - trac(A) * \\lambda + det A = 0 \\] <p>Just as the trace is the sum of the eigenvalues of a matrix, the product of the eigenvalues of any matrix equals its determinant.</p> <p>For \\(A = \\begin{bmatrix} 3 &amp; 1 \\\\ 1 &amp; 3 \\end{bmatrix}\\), the eigenvalues are \\(\\lambda_1 = 4\\) and \\(\\lambda_2 = 2\\). We find the eigenvectors \\(\\mathbf{x_1} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}\\) for \\(\\lambda_1 = 4\\) in the nullspace of \\(A - \\lambda_1 I = \\begin{bmatrix} -1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix}\\).</p> <p>\\(\\mathbf{x_2}\\) will be in the nullsapce of \\(A - 2I = \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 1 \\end{bmatrix}\\). The nullspace is an entire line; \\(\\mathbf{x_2}\\) could be any vector on that line. A natural choice is \\(\\mathbf{x_2} = \\begin{bmatrix} -1 \\\\ 1 \\end{bmatrix}\\).</p> <p>Note that these eigenvectors are the same as those of \\(B = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}\\). Adding \\(3I\\) to the matrix \\(B = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}\\) added 3 to each of its eigenvalues and did not change its eigenvectors, because \\(A\\mathbf{x} = (B + 3I)\\mathbf{x} = \\lambda\\mathbf{x} + 3\\mathbf{x} = (\\lambda + 3)\\mathbf{x}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#a-caution","title":"A caution","text":"<p>Similarly, if \\(A\\mathbf{x} = \\lambda\\mathbf{x}\\) and \\(B\\mathbf{x} = \\alpha \\mathbf{x}\\), \\((A + B)\\mathbf{x} = (\\lambda + \\alpha)\\mathbf{x}\\). It would be nice if the eigenvalues of a matrix sum were always the sums of eigenvalues, but this is only true if A and B have the same eigenvalues. The eigenvalues of the product AB aren't usually equal to the products \\(\\lambda(A)\\lambda(B)\\), either.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#complex-eigenvalues","title":"Complex eigenvalues","text":"<p>The matrix \\(Q = \\begin{bmatrix} 0 &amp; -1 \\\\ 1 &amp; 0 \\end{bmatrix}\\) rotates every vector in the plane by \\(90^{\\circ}\\). It has trace \\(0 = \\lambda_{1} + \\lambda_{2}\\) and determinant \\(1 = \\lambda_{1} * \\lambda_{2}\\). Its only real eigenvector is the zero vector; any other vector's direction changes when it is multiplied by Q. How will this affect our eigenvalue calculation?</p> \\[ \\begin{align} det(A - \\lambda I) &amp;= \\begin{vmatrix} - \\lambda &amp; - 1 \\\\ 1 &amp; - \\lambda \\end{vmatrix} \\\\ &amp;= \\lambda^2 + 1 \\end{align} \\] <p>\\(det (A - \\lambda I) = 0\\) has solutions \\(\\lambda_1 = i\\) and \\(\\lambda_2 = -i\\). If a matrix has a complex eigenvalues \\(a + bi\\) then the <code>complex conjugate</code> \\(a - bi\\) is also an eigenvalue of that matrix.</p> <p>Symmetric matrices have real eigenvalues. For <code>antisymmetric</code> matrices like Q, for which \\(A^T = -A\\), all eigenvalues are imaginary \\((\\lambda = bi)\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/21_eigen/#triangular-matrices-and-repeated-eigenvalues","title":"Triangular matrices and repeated eigenvalues","text":"<p>For triangular matrices such as \\(A = \\begin{bmatrix} 3 &amp; 1 \\\\ 0 &amp; 3 \\end{bmatrix}\\), the eigenvalues are exactly the entries on the diagonal. In this case, the eigenvalues are 3 and 3:</p> \\[ \\begin{align} det(A - \\lambda det I) &amp;= \\begin{vmatrix} 3 - \\lambda &amp; 1 \\\\ 0 &amp; 3 - \\lambda \\end{vmatrix} \\\\ &amp;= (3 - \\lambda)(3 - \\lambda) \\\\ &amp;= 0 \\end{align} \\] <p>so \\(\\lambda_{1} = 3\\) and \\(\\lambda_{2} = 3\\). To find the eigenvectors, solve:</p> \\[ (A - \\lambda I) \\mathbf{x} = \\begin{bmatrix} 0 &amp; 1 \\\\ 0 &amp; 0 \\end{bmatrix} \\mathbf{x} = \\mathbf{0} \\] <p>to get \\(\\mathbf{x_1} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}\\). There is no independent eigenvector \\(\\mathbf{x_2}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/","title":"Diagonalization and Powers of A","text":"<p>We know how to find eigenvalues and eigen vectors. In this lecture we learn to <code>diagonalize</code> any matrix that has \\(n\\) independent eigenvectors and see how diagonalization simplifies calculations. The lecture concludes by using eigenvalues and eigenvectors to solve <code>difference equations</code>.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/#diagonalizing-a-matrix-s-1aslambda","title":"Diagonalizing a Matrix S^-1AS=Lambda","text":"<p>If A has n linearly <code>independent eigenvectors</code>, we can put those vectors in the columns of a matrix S(square, invertible), then:</p> \\[ \\begin{align} AS &amp;= A \\begin{bmatrix} \\mathbf{x_1} &amp; \\mathbf{x_2} &amp; \\cdots &amp; \\mathbf{x_n} \\end{bmatrix} \\\\    &amp;= \\begin{bmatrix} \\lambda_1 \\mathbf{x_1} &amp; \\lambda_2 \\mathbf{x_2} &amp; \\cdots &amp; \\lambda_n \\mathbf{x_n} \\end{bmatrix} \\\\    &amp;= S \\begin{bmatrix} \\lambda_1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; \\lambda_2 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\cdots &amp; \\lambda_n \\end{bmatrix} \\\\    &amp;= S\\Lambda \\end{align} \\] <p>Note that \\(\\Lambda\\) is a diagonal matrix whose non-zero entries are the eigenvalues of \\(A\\). Because the columns of \\(S\\) are independent, \\(S^{-1}\\) exists and we can multiply both sides of \\(AS = S \\Lambda\\) by \\(S^{-1}\\):</p> \\[ S^{-1} AS = \\Lambda \\] <p>Equivalently,</p> \\[ A = S \\Lambda S^{-1} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/#powers-of-a","title":"Powers of A","text":"<p>What are the eigenvalues and eigenvectors of \\(A^2\\)?</p> \\[ \\begin{align} \\text{If } A\\mathbf{x} &amp;= \\lambda \\mathbf{x} \\\\ \\text{then } A^2 \\mathbf{x} &amp;= \\lambda A \\mathbf{x} = \\lambda^2 \\mathbf{x} \\\\ \\end{align} \\] <p>The eigenvalues of \\(A^2\\) are the squares of the eigenvalues of \\(A\\). The eigenvectors of \\(A^2\\) are the same as the eigenvectors of \\(A\\). If we write \\(A = S \\Lambda S^{-1}\\) then:</p> \\[ A^2 = S \\Lambda S^{-1} S \\Lambda S^{-1} = S \\Lambda^2 S^{-1} \\] <p>Similarly:</p> \\[ A^k = S \\Lambda^k S^{-1} \\] <p>tells us that raising the eigenvalues of \\(A\\) to the kth power gives us the eigenvalues of \\(A^k\\), and that the eigenvectors of \\(A^k\\) are the same as those of A.</p> <p>Theorem:</p> <p>If A has n independent eigenvectors with eigenvalues \\(\\lambda_i\\), then \\(A^{k} \\to 0\\) as \\(k \\to \\infty\\) if and only if all \\(|\\lambda_i| &lt; 1\\).</p> <p>A is guaranteed to have n independent eigenvectors (and be <code>diagonalizable</code>) if all its eigenvalues are different. Most matrices do have distinct eigenvalues.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/#repeated-eigenvalues","title":"Repeated Eigenvalues","text":"<p>If A has repeated eigenvalues, it may or may not have n independent eigenvectors. For example, the eigenvalues of the identity matrix are all 1, but that matrix still has n independent eigenvectors.</p> <p>If A is the triangular matrix \\(\\begin{bmatrix} 2 &amp; 1 \\\\ 0 &amp; 2 \\end{bmatrix}\\) its eigenvalues are 2 and 2. Its eigenvectors are in the nullspace of \\(A - \\lambda I = \\begin{bmatrix} 0 &amp; 1 \\\\ 0 &amp; 0 \\end{bmatrix}\\) which is spanned by \\(\\mathbf{x} = \\begin{bmatrix} 1 \\\\ 0\\end{bmatrix}\\). This particular A does not have two independent eigenvectors.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/#difference-equation-u_k-1-au_k","title":"Difference Equation u_{k + 1} = Au_{k}","text":"<p>Start with a given vector \\(\\mathbf{u_0}\\). We can create a sequence of vectors in which each new vector is A times the previous vector:</p> \\[ \\mathbf{u_{k + 1}} = A \\mathbf{u_{k}}. \\] <p>\\(\\mathbf{u_{k + 1}} = A \\mathbf{u_k}\\) is a <code>first order difference equation</code>, and \\(\\mathbf{u_k} = A^k \\mathbf{u_0}\\) is a solution to this system.</p> <p>We get a more statisfying solution if we write \\(\\mathbf{u_0}\\) as a combination of eigenvectors of A:</p> \\[ \\mathbf{u_0} = c_1 \\mathbf{x_1} + c_2 \\mathbf{x_2} + \\cdots + c_n \\mathbf{x_n} = S \\mathbf{c} \\] <p>Then:</p> \\[ A \\mathbf{u_0} = c_1 \\lambda_1 \\mathbf{x_1} + c_2 \\lambda_2 \\mathbf{x_2} + \\cdots + c_n \\lambda_n \\mathbf{x_n} = \\Lambda S \\mathbf{c} \\] <p>and:</p> \\[ \\mathbf{u_k} = A^k \\mathbf{u_0} = c_1 \\lambda_1^k \\mathbf{x_1} + c_2 \\lambda_2^k \\mathbf{x_2} + \\cdots + c_n \\lambda_n^k \\mathbf{x_n} = \\Lambda^k S \\mathbf{c} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/#fibonacci-sequence","title":"Fibonacci Sequence","text":"<p>The Fibonacci sequence is \\(0, 1, 1, 2, 3, 5, 8, 13, \\cdots\\). In general, \\(F_{k + 2} = F_{k + 1} + F_{k}\\). If we could understand this in terms of matrices, the eigenvalues of the matrices would tell us how fast the numbers in the sequence are increasing.</p> <p>\\(\\mathbf{u_{k + 1}} = A \\mathbf{u_{k}}\\) was a first order system. \\(F_{k + 2} = F_{k + 1} + F_{k}\\) is a <code>second order scalar equation</code>, but we can convert it to first order linear system by using a clever trick.</p> <p>If \\(\\mathbf{u_k} = \\begin{bmatrix} F_{k + 1} \\\\ F_{k}\\end{bmatrix}\\), then:</p> \\[ \\begin{align} F_{k + 2} &amp;= F_{k + 1} + F_{k} \\\\ F_{k + 1} &amp;= F_{k + 1} \\end{align} \\] <p>is equivalent to the first order system \\(\\mathbf{u_{k + 1}} = \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix} \\mathbf{u_{k}}\\).</p> <p>What are the eigenvalues and eigenvectors of \\(A = \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}\\)? Because A is systemmetric, its eigenvalues will be real and its eigenvectors will be orthogonal.</p> <p>Because A is a 2 by 2 matrix we know its eigenvalues sum to 1(the trace), and their product is \\(-1\\)(the determinant).</p> \\[ \\begin{vmatrix} A - \\lambda I \\end{vmatrix} = \\begin{vmatrix} 1 - \\lambda &amp; 1 \\\\ 1 &amp; -\\lambda \\\\ \\end{vmatrix} = \\lambda^2 - \\lambda - 1 \\] <p>Setting this to zero we find \\(\\lambda = \\frac{1 \\pm \\sqrt{1 + 4}}{2}\\); i.e. \\(\\lambda_1 = \\frac{1}{2} (1 + \\sqrt{5}) \\approx 1.618\\) and \\(\\lambda_2 = \\frac{1}{2} (1 - \\sqrt{5}) \\approx -0.618\\). The growth rate of the \\(F_k\\) is controlled by \\(\\lambda_1\\), the only eigenvalue with absolute value greater than 1. This tells us that for large k, \\(F_{k} \\approx c_1(\\frac{1 + \\sqrt{5}}{2})^k\\) for some constant \\(c_1\\). (Remember \\(\\mathbf{u_k} = A^k \\mathbf{u_0} = c_1 \\lambda_1^k x_1 + c_2 \\lambda_2^k x_2\\), and here \\(\\lambda_2^k\\) goes to zero since \\(|\\lambda_2| &lt; 1\\))</p> <p>To find the eigenvectors of A note that:</p> \\[ (A - \\lambda I) \\mathbf{x} = \\begin{bmatrix} 1 - \\lambda &amp; 1 \\\\ 1 &amp; -\\lambda \\end{bmatrix} \\mathbf{x} = 0 \\] <p>when \\(\\mathbf{x} = \\begin{bmatrix} \\lambda \\\\ 1 \\end{bmatrix}\\), so \\(\\mathbf{x_1} = \\begin{bmatrix} \\lambda_1 \\\\ 1 \\end{bmatrix}\\) and \\(\\mathbf{x_2} = \\begin{bmatrix} \\lambda_2 \\\\ 1 \\end{bmatrix}\\).</p> <p>Finally, \\(\\mathbf{u_0} = \\begin{bmatrix} F_1 \\\\ F_0 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} = c_1 \\mathbf{x_1} + c_2 \\mathbf{x_2}\\) tells us that \\(c_1 = -c_2 = \\frac{1}{5}\\).</p> <p>Because \\(\\begin{bmatrix} F_{k + 1} \\\\ F_{k} \\end{bmatrix} = \\mathbf{u_k} = c_1 \\lambda_1^k x_1 + c_2 \\lambda_2^k x_2\\), we get:</p> \\[ F_k = \\frac{1}{\\sqrt{5}}(\\frac{1 + \\sqrt{5}}{2})^k - \\frac{1}{\\sqrt{5}}(\\frac{1 - \\sqrt{5}}{2})^k \\] <p>Using eigenvalues and eigenvectors, we have found a <code>closed form expression</code> for the Fibonacci numbers.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/22_diag_a/#summary","title":"Summary","text":"<p>When a sequence evolves over time according to the rules of a <code>first order system</code>, the eigenvalues of the matrix of that system determine the long term behavior of the series. To get an exact formula for the series we find the eigenvectors of the matrix and then solve for the coefficient \\(c_1, c_2, \\cdots\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/23_diff_exp/","title":"Differential Equations and e^At","text":"<p>The system of equations below describes how the values of variables \\(u_{1}\\) and \\(u_{2}\\) affect each other over time:</p> \\[ \\begin{align} \\frac{du_{1}}{dt} = -u_{1} + 2 u_{2} \\\\ \\frac{du_{2}}{dt} = u_{1} - 2 u_{2} \\\\ \\end{align} \\] <p>Just as we applied linear algebra to solve a difference equation, we can use it to solve this differential equation. For example, the initial condition \\(u_{1} = 1\\), \\(u_{2} = 0\\) can be written \\(\\mathbf{u}(0) = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/23_diff_exp/#differential-equation-dudt-au","title":"Differential Equation du/dt = Au","text":"<p>By looking at the equations above, we might guess that over time \\(u_{1}\\) will decrease. We can get the same sort of information more safely by looking at the eigenvalues of the matrix \\(A = \\begin{bmatrix} -1 &amp; 2 \\\\ 1 &amp; -2 \\end{bmatrix}\\) of our system \\(\\frac{d\\mathbf{u}}{dt} = A \\mathbf{u}\\). Because A is singular and its trace is -3, we know that its eigenvalues are \\(\\lambda_1 = 0\\) and \\(\\lambda_2 = -3\\). The solution will turn out to include \\(e^{-3t}\\) and \\(e^{0t}\\). As t increases, \\(e^{-3t}\\) vanishes and \\(e^{0t} = 1\\) remains constant. Eigenvalues equal to zero have eigenvectors that are <code>steady state</code> solutions.</p> <p>\\(\\mathbf{x_1} = \\begin{bmatrix} 2 \\\\ 1\\end{bmatrix}\\) is an eigenvectors for which \\(A\\mathbf{x_1} = 0 \\mathbf{x_1}\\). To find an eigenvector corresponding to \\(\\lambda_2 = -3\\) we solve \\((A - \\lambda_2 I) \\mathbf{x_2} = \\mathbf{0}\\):</p> \\[ \\begin{align} \\begin{bmatrix} 2 &amp; 2 \\\\ 1 &amp; 1 \\end{bmatrix} \\mathbf{x_2} = 0 \\\\ so \\\\ \\mathbf{x_2} = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix} \\\\ \\end{align} \\] <p>and we can check that \\(A\\mathbf{x_2} = -3 \\mathbf{x_2}\\). The general solution to this system of differential equations will be:</p> \\[ \\mathbf{u}(t) = c_1 e^{\\lambda_1 t} \\mathbf{x_1} + c_2 e^{\\lambda_2 t} \\mathbf{x_2} \\] <p>Is \\(e^{\\lambda_1 t} \\mathbf{x_1}\\) really a solution to \\(\\frac{d\\mathbf{u}}{dt} = A\\mathbf{u}\\)? To find out, plug in \\(\\mathbf{u} = e^{\\lambda_1 t} \\mathbf{x_1}\\):</p> \\[ \\frac{d\\mathbf{u}}{dt} = \\lambda_1 e^{\\lambda_1 t} \\mathbf{x_1} \\] <p>which agrees with:</p> \\[ A\\mathbf{u} = e^{\\lambda_1 t} A \\mathbf{x_1} = \\lambda_1 e^{\\lambda_1 t} \\mathbf{x_1} \\] <p>The two \"pure\" terms \\(e^{\\lambda_1 t}\\mathbf{x_1}\\) and \\(e^{\\lambda_2 t} \\mathbf{x_2}\\) are analogous to the terms \\(\\lambda_i^k \\mathbf{x_i}\\) we saw in the solution \\(c_1 \\lambda_1^k \\mathbf{x_1} + c_2 \\lambda_2^k \\mathbf{x_2} + \\cdots + c_n \\lambda_n^k \\mathbf{x_n}\\) to the difference equation \\(\\mathbf{u_{k = 1}} = A \\mathbf{u_k}\\).</p> <p>Plugging in the values of the eigenvectors, we get:</p> \\[ \\mathbf{u}(t) = c_1 e^{\\lambda_1 t} \\mathbf{x_1} + c_2 e^{\\lambda_2 t} \\mathbf{x_2} = c_1 \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + c_2 e^{-3t} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix} \\] <p>We know \\(\\mathbf{u}(0) = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}\\), so at \\(t = 0\\):</p> \\[ \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} = c_1\\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + c_2 \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}. \\] <p>\\(c_1 = c_2 = 1/3\\) and \\(\\mathbf{u}(t) = \\frac{1}{3} \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + \\frac{1}{3} e^{-3t} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}\\) </p> <p>This tells us that the system starts with \\(u_1 = 1\\) and \\(u_2 = 0\\) but that as \\(t\\) approaches infinitely, \\(u_1\\) decays to \\(2/3\\) and \\(u_2\\) increases to \\(1/3\\). This might describe stuff moving from \\(u_1\\) to \\(u_2\\).</p> <p>The steady state of this system is \\(\\mathbf{u}(\\infty) = \\begin{bmatrix} 2/3 \\\\ 1/3\\end{bmatrix}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/23_diff_exp/#stability","title":"Stability","text":"<p>Not all systems have a steady state. The eigenvalues of A will tell us what sort of solutions to expect:</p> <ol> <li>Stability: \\(\\mathbf{u}(t) \\to 0\\) when \\(Re(\\lambda) &lt; 0\\).</li> <li>Steady state: One eigenvalue is 0 and all other eigenvalues have negtive real part.</li> <li>Blow up: if \\(Re(\\lambda) &gt; 0\\) for any eigenvalues \\(\\lambda\\).</li> </ol> <p>If 2 by 2 matrix \\(A = \\begin{bmatrix} a &amp; b \\\\ c &amp; d \\end{bmatrix}\\) has two eigenvalues with negative real part, its trace \\(a + d\\) is negative, the converse is not true: \\(\\begin{bmatrix} -2 &amp; 0 \\\\ 0 &amp; 1 \\end{bmatrix}\\) has negative trace but one of its eigenvalues is 1 and \\(e^{1t}\\) blows up. If A has a positive determinant and negative trace then the corresponding solutions must be stable.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/23_diff_exp/#applying-s","title":"Applying S","text":"<p>The final step of our solution to the system \\(\\frac{d\\mathbf{u}}{dt} = A \\mathbf{u}\\) was to solve:</p> \\[ c_1 \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + c_2 \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\] <p>In matrix form:</p> \\[ \\begin{bmatrix} 2 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix} \\begin{bmatrix} c_1 \\\\ c_2 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\] <p>or \\(S\\mathbf{c} = \\mathbf{u}(0)\\), where S is the eigenvector matrix. The components of \\(\\mathbf{c}\\) determine the contribution from each pure exponential solution, based on the initial conditions of the system.</p> <p>In the equation \\(\\frac{d\\mathbf{u}}{dt} = A\\mathbf{u}\\), the matrix A couples the pure solutions. We set \\(\\mathbf{u} = S \\mathbf{v}\\), where S is the matrix of eigenvectors of A, to get:</p> \\[ S\\frac{d\\mathbf{v}}{dt} = AS\\mathbf{v} \\] <p>or:</p> \\[ \\frac{d\\mathbf{v}}{dt} = S^{-1} AS \\mathbf{v} = \\Lambda \\mathbf{v} \\] <p>This diagonalizes the system: \\(\\frac{dv_i}{dt} = \\lambda_i v_i\\). The general solution is then:</p> \\[ \\begin{align} \\mathbf{v}(t) &amp;= e^{\\Lambda t}\\mathbf{v}(0) \\\\ \\mathbf{u}(t) &amp;= Se^{\\Lambda t}S^{-1} \\mathbf{v}(0) = e^{At} \\mathbf{u}(0) \\end{align} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/23_diff_exp/#matrix-exponential-eat","title":"Matrix Exponential e^At","text":"<p>What does \\(e^{At}\\) mean  if A is a matrix? We know that for a real number x:</p> \\[ e^x = \\sum_{n = 0}^{\\infty} \\frac{x^n}{n!} = 1 + x + \\frac{x^2}{2} + \\frac{x^3}{6} + \\cdots \\] <p>We can use the same formula to define \\(e^{At}\\):</p> \\[ e^{At} = I + At + \\frac{(At)^2}{2} + \\frac{(At)^3}{6} + \\cdots \\] <p>Similarly, if the eigenvalues of \\(At\\) are small, we can use the geometric series \\(\\frac{1}{1 - x} = \\sum_{n = 0}^{\\infty} x^n\\) to estimate \\((I - At)^{-1} = I + At + (At)^2 + (At)^3 + \\cdots\\)</p> <p>We've said that \\(e^{At} = Se^{\\Lambda t} S^{-1}\\). If A has n independent eigenvectors we can prove this from the definition of \\(e^{At}\\) by using the formula \\(A = S \\Lambda S^{-1}\\):</p> \\[ \\begin{align} e^{At} = &amp; I + At + \\frac{(At)^2}{2} + \\frac{(At)^3}{6} + \\cdots  \\\\ &amp;= SS^{-1} + S\\Lambda S^{-1} t + \\frac{S \\Lambda^2S^{-1}}{2}t^2 + \\frac{S \\Lambda^3S^{-1}}{6}t^3 + \\cdots \\\\ &amp;= S e^{\\Lambda t} S^{-1} \\end{align} \\] <p>It's impractical to add up infinitely many matrices. Fortunately, there is an easier way to comput \\(e^{\\Lambda t}\\). Remember that:</p> \\[ \\Lambda = \\begin{bmatrix} \\lambda_1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; \\lambda_2 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 &amp; \\lambda_n \\\\ \\end{bmatrix} \\] <p>When we plug this in to our formula for \\(e^{At}\\) we find that:</p> \\[ e^{\\Lambda t} =  \\begin{bmatrix} e^{\\lambda_1 t} &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; e^{\\lambda_2 t} \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 &amp; e^{\\lambda_n t}\\\\ \\end{bmatrix} \\] <p>This is another way to see the relationship between the stability of \\(\\mathbf{u}(t) = S e^{\\Lambda t} S^{-1} \\mathbf{v}(0)\\) and the eigenvalues of A.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/23_diff_exp/#second-order","title":"Second order","text":"<p>We can change the second order equation \\(y'' + b y' + ky = 0\\) into a 2 by 2 first order system using a method similar to the one we used to find a formula for the Fibonacci numbers. If \\(u = \\begin{bmatrix} y' \\\\ y \\end{bmatrix}\\), then:</p> \\[ u' = \\begin{bmatrix} y'' \\\\ y' \\end{bmatrix} = \\begin{bmatrix} -b &amp; -k \\\\ 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} y' \\\\ y \\end{bmatrix} \\] <p>We could use the methods we just learned to solve this system, and that would give us a solution to the second order scalar equation we started with.</p> <p>If we start with a kth order equation we get a k by k matrix with coefficients of the equation in the first row and 1's on a diagonal below that; the rest of the entries are 0.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/24_markov/","title":"Markov Matrices and Fourier Series","text":"<p>In this lecture we look at Markov matrices and Fourier series-two applications of eigenvalues and projections.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/24_markov/#eigenvalues-of-at","title":"Eigenvalues of A^T","text":"<p>The eigenvalues of A and the eigenvalues of \\(A^T\\) are the same:</p> \\[ (A - \\lambda I)^T = A^T - \\lambda I \\] <p>So property 10 of determinants tells us that \\(det(A - \\lambda I) = det(A^T - \\lambda I)\\). If \\(\\lambda\\) is an eigenvalue of A then \\(det (A^T - \\lambda I) = 0\\) and \\(\\lambda\\) is an eigenvalue of \\(A^T\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/24_markov/#markov-matrices","title":"Markov Matrices","text":"<p>A matrix like:</p> \\[ A = \\begin{bmatrix} 0.1 &amp; 0.01 &amp; 0.3 \\\\ 0.2 &amp; 0.99 &amp; 0.3 \\\\ 0.7 &amp; 0 &amp; 0.4 \\\\ \\end{bmatrix} \\] <p>in which all entries are non-negative and each column adds to 1 is called a <code>Markov Matrix</code>. These requirements come from Markov matrices' use in probability. Squaring or raising a Markov matrix to a power gives us another Markov matrix.</p> <p>When dealing with systems of differential equations, eigenvectors with the eigenvalue of 0 represented steady states. Here we're dealing with powers of matrices and get a steady state when \\(\\lambda = 1\\) is an eigenvalue.</p> <p>The constraint that the columns add to 1 guarantees that 1 is an eigenvalue. All other eigenvalues will be less than 1. Remember that (if A has n independent eigenvectors) the solution to \\(\\mathbf{u_k} = A^k \\mathbf{u_0}\\) is \\(\\mathbf{u_k} = c_1 \\lambda_1^k \\mathbf{x_1} + c_2 \\lambda_2^k \\mathbf{x_2} + \\cdots + c_n \\lambda_n^k \\mathbf{x_n}\\). If \\(\\lambda_1 = 1\\) and all others eigenvalues are less than one the system approaches the steady state \\(c_1\\mathbf{x_1}\\). This is the \\(\\mathbf{x_1}\\) component of \\(\\mathbf{u_0}\\).</p> <p>Why does the fact that the columns sum to 1 guarantee that 1 is an eigenvalue? If 1 is an eigenvalue of A, then:</p> \\[ A - 1I = \\begin{bmatrix} -0.9 &amp; 0.01 &amp; 0.03 \\\\ 0.2 &amp; -0.01 &amp; 0.03 \\\\ 0.7 &amp; 0 &amp; -0.6 \\\\ \\end{bmatrix} \\] <p>should be singular. Since we've substracted 1 from each diagonal entry, the sum of the entries in each column of \\(A - I\\) is 0. But then the sum of the rows of \\(A - I\\) must be the zero row, and so \\(A - I\\) is singular. The eigenvector \\(\\mathbf{x_1}\\) is in the nullspace of \\(A - I\\) and has eigenvalue 1. It's not very hard to find \\(\\mathbf{x_1} = \\begin{bmatrix} 0.6 \\\\ 33 \\\\ 0.7 \\end{bmatrix}\\).</p> <p>We're studying the equation \\(\\mathbf{u_{k + 1}} = A\\mathbf{u_k}\\)  where A is a Markov matrix. For example, \\(u_1\\) might be the population of (number of people in) Massachusetts and \\(u_2\\) might be the population of California. A might describe what fraction of the population moves from state to state, or the probability of a single person moving. We can't have negative numbers of people, so the entries of A will always be positive. We want to account for all the people in our model, so the columns of A add to \\(1 = 100%\\).</p> <p>For example:</p> \\[ \\begin{bmatrix} u_{Cal} \\\\ u_{Mass} \\end{bmatrix}_ {t = k + 1} = \\begin{bmatrix} 0.9 &amp; 0.2 \\\\ 0.1 &amp; 0.8 \\end{bmatrix} \\begin{bmatrix} u_{Cal} \\\\ u_{Mass}\\end{bmatrix}_ {t = k} \\] <p>assumes that there's a 90% chance that a person in California will stay in California and only a 10% chance that she or he will move, while there's a 20% percent chance that a Massachusetts resident will move to California. If our initial conditions are \\(\\begin{bmatrix} u_{Cal} \\\\ u_{Mass}\\end{bmatrix}_ {0} = \\begin{bmatrix} 0 \\\\ 1000 \\end{bmatrix}\\), then after one move \\(\\mathbf{u_1} = A \\mathbf{u_0}\\) is:</p> \\[ \\begin{bmatrix} u_{Cal} \\\\ u_{Mass} \\end{bmatrix}_ {1} = \\begin{bmatrix} 0.9 &amp; 0.2 \\\\ 0.1 &amp; 0.8 \\end{bmatrix} \\begin{bmatrix} 200 \\\\ 800 \\end{bmatrix} \\] <p>For the next few values of k, the Massachusetts population will decrease and the California population will increase while the total population remains constant at 1000.</p> <p>To understand the long term behavior of this system we'll need the eigenvectors and eigenvalues of \\(\\begin{bmatrix} 0.9 &amp; 0.2 \\\\ 0.1 &amp; 0.8\\end{bmatrix}\\). We know that one eigenvalue is \\(\\lambda_1 = 1\\). Because the trace \\(0.9 + 0.8 = 1.7\\) is the sum of the eigenvalues, we see that \\(\\lambda_2 = 0.7\\).</p> <p>Next we calculate the eigenvectors:</p> \\[ A - \\lambda_1 I = \\begin{bmatrix} -0.1 &amp; 0.2 \\\\ 0.2 &amp; -0.2\\end{bmatrix} \\mathbf{x_1} = \\mathbf{0} \\] <p>So we choose \\(\\mathbf{x_1} = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}\\). The eigenvalue 1 corresponds to the steady state solution, and \\(\\lambda_2 = 0.7 &lt; 1\\), so the system approches a limit in which \\(2/3\\) of 1000 people live in California and 1/ 3 of 1000 people are in Massachusetts. This will be the limit from any starting vector \\(\\mathbf{u_0}\\).</p> <p>To know how the population is distributed after a finite number of steps we look for an eigenvector corresponding to \\(\\lambda_2 = 0.7\\):</p> \\[ A - \\lambda_2 I = \\begin{bmatrix} 0.2 &amp; 0.2 \\\\ 0.1 &amp; 0.1 \\end{bmatrix} \\mathbf{x_1} = \\mathbf{0} \\] <p>so let \\(\\mathbf{x_2} = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}\\).</p> <p>From what we learned about difference equations we know that:</p> \\[ \\mathbf{u_k} = c_1 1^k \\begin{bmatrix} 2 \\\\ 1\\end{bmatrix} + c_2 (0.7)^k \\begin{bmatrix} -1 \\\\ 1\\end{bmatrix}. \\] <p>When \\(k = 0\\) we have:</p> \\[ \\mathbf{u_0} = \\begin{bmatrix} 0 \\\\ 1000 \\end{bmatrix} = c_1 \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + c_2 \\begin{bmatrix} -1 \\\\ 1 \\end{bmatrix}  \\] <p>so \\(c_1 = \\frac{1000}{3}\\) and \\(c_2 = \\frac{2000}{3}\\).</p> <p>In some applications Markov matrices are defined differently - their rows add to 1 rather than their columns. In this case, the calculations are the transpose of everything we've done here.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/24_markov/#fourier-series-and-projections","title":"Fourier Series and Projections","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/24_markov/#expansion-with-an-orthonormal-basis","title":"Expansion with an orthonormal basis","text":"<p>If we have an orthonormal basis \\(\\mathbf{q_1}, \\mathbf{q_2}, \\cdots, \\mathbf{q_n}\\) then we can write any vector \\(\\mathbf{v}\\) as:</p> \\[ \\mathbf{v} = x_1 \\mathbf{q}_ 1 + x_2 \\mathbf{q}_ 2 + \\cdots + x_n \\mathbf{q}_ n  \\] <p>where:</p> \\[ \\mathbf{q}_ i ^T \\mathbf{v} = x_1 \\mathbf{q}_ i ^T \\mathbf{q}_ 1 + x_2 \\mathbf{q}_ i ^T \\mathbf{q}_ 2 + \\cdots + x_n \\mathbf{q}_ i ^T \\mathbf{q}_ n = x_i \\] <p>Since \\(\\mathbf{q}_ i ^T \\mathbf{q}_ j = 0\\) unless \\(i = j\\), this equation gives \\(x_i = \\mathbf{q}_ i^T \\mathbf{v}\\) in terms of matrices, \\([\\mathbf{q}_ 1  \\cdots  \\mathbf{q}_ n] \\begin{bmatrix} x_1 \\\\ \\vdots \\\\ x_n \\end{bmatrix} = \\mathbf{v}\\), or \\(Q \\mathbf{x} = \\mathbf{v}\\). So \\(\\mathbf{x} = Q^{-1}\\mathbf{v}\\). Because the \\(q_i\\) from an orthonormal basis, \\(Q^{-1} = Q^{T}\\) and \\(\\mathbf{x} = Q^T \\mathbf{v}\\). This is another way to see that \\(x_i = \\mathbf{q}_ i ^T \\mathbf{v}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Least-Squares-Determinants-and-Eigenvalues/24_markov/#frourier-series","title":"Frourier series","text":"<p>The key idea above was that the basis of vector \\(\\mathbf{q}_ i\\) was orthonormal. Fourier series are built on this idea. We can describe a function \\(f(x)\\) in terms of trigonometric functions:</p> \\[ f(x) = a_0 + a_1 \\cos x + b_1 \\sin x + a_2 \\cos 2x + b_2 \\sin 2x + \\cdots \\] <p>This is <code>Fourier series</code> is an infinite sum and the previous example was finite, but the two are related by the fact that the cosines and sines in the Fourier series are orthogonal.</p> <p>We're now working in an infinite dimensional vector space. The vectors in this space are functions and the (orthogonal) basis vectors are \\(1, \\cos x, \\sin x, \\cos 2x, \\sin 2x, \\cdots\\)</p> <p>What does \"orthogonal\" mean in this context? How do we compute a dot product or <code>inner product</code> in this vector space? For vectors in \\(\\mathbb{R}^n\\) the inner product is \\(\\mathbf{v}^T \\mathbf{w} = v_1 w_1 + v_2 w_2 + \\cdots + v_n w_n\\). Functions are described by a continum of values \\(f(x)\\) rather than by a discrete collection of components \\(v_i\\). The best parallel to the vector dot product is:</p> \\[ f^Tg = \\int_0^{2\\pi} f(x)g(x) dx \\] <p>We integrate from 0 to \\(2\\pi\\) because Fourier series are periodic:</p> \\[ f(x) = f(x + 2\\pi) \\] <p>The inner product of two basis vectors is 0, as desired. For example,</p> \\[ \\int_0 ^{2\\pi} \\sin x \\cos x dx = \\frac{1}{2} (\\sin x)^2 |_ {0} ^{2\\pi} = 0 \\] <p>How do we find \\(a_0, a_1\\), etc. to find the coordinates or <code>Fourier coefficients</code> of a function in this space? The constant term \\(a_0\\) is the average value of the function. Because we're working with an orthonormal basis, we can use the inner product to find the coefficients \\(a_i\\).</p> \\[ \\begin{align} \\int_{0}^{2\\pi} = f(x) \\cos x dx &amp;= \\int_0 ^{2\\pi} (a_0 + a_1 \\cos x + b_1 \\sin x + a_2 \\cos 2x + \\cdots) \\cos x dx \\\\ &amp; = 0 + \\int_0^{2\\pi} a_1 \\cos^2 xdx + 0 + 0 + \\cdots \\\\ &amp; = a_1 \\pi \\end{align} \\] <p>We conclude that \\(a_1 = \\frac{1}{\\pi} \\int_0^{2\\pi} f(x) \\cos x dx\\). We can use the same technique to find any of the value \\(a_i\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/01_pos_def/","title":"Symmetric Matrices and Positive definiteness","text":"<p>Symmetric metrices are good, their eigenvalues are real and each has a complete set of orthonormal eigenvectors. Positive definite matrices are even better.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/01_pos_def/#symmetric-matrices","title":"Symmetric Matrices","text":"<p>A <code>symmetric matrices</code> is one for which \\(A = A^T\\). If a matrix has some special property (e.g. it's a Markov matrix), its eigenvalues and eigenvectors are likely to have special properties as well. For a symmetric matrix with real number entries, the  eigenvalues are real numbers and it's possible to choose a complete set of eigenvectors that are perpendicular (or even orthonormal).</p> <p>If A has n independent eigenvectors we dan write \\(A = S \\Lambda S^{-1}\\). If A is symmetric we can write \\(A = Q \\Lambda Q^{-1} = Q \\Lambda Q^T\\), where Q is an orthogonal matrix. Mathematicians call this the <code>spectral theorem</code> and think of the eigenvalues are the <code>spectrum</code> of the matrix. In mechanics it's called the <code>principal axis theorem</code>.</p> <p>In addition, any matrix of the form \\(Q \\Lambda Q^T\\) will be symmetric.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/01_pos_def/#real-eigenvalues","title":"Real Eigenvalues","text":"<p>Why are the eigenvalues of symmetric matrix real? Suppose A is sysmmetric and \\(A\\mathbf{x} = \\lambda \\mathbf{x}\\). Then we can conjugate to get \\(\\bar{A}\\bar{\\mathbf{x}} = \\bar{\\lambda} \\bar{\\mathbf{x}}\\). If the entries of A are real, this becomes \\(A \\bar{\\mathbf{x}} = \\bar{\\lambda} \\bar{\\mathbf{x}}\\). (This proves that complex eigenvalues of real valued matrices come in conjugate pairs.)</p> <p>Now transpose to get \\(\\bar{\\mathbf{x}}^T A^T = \\bar{\\mathbf{x}}^T \\bar{\\lambda}\\). Because A is symmetric we now have \\(\\bar{\\mathbf{x}}^T A = \\bar{\\mathbf{x}}^T \\bar{\\lambda}\\). Multiplying both sides of this equation on the right by \\(\\mathbf{x}\\) gives:</p> \\[ \\bar{\\mathbf{x}}^T A \\mathbf{x} = \\bar{\\mathbf{x}}^T \\bar{\\lambda} \\mathbf{x} \\] <p>On the other hand, we can multiply \\(A\\mathbf{x} = \\lambda \\mathbf{x}\\) on the left by \\(\\bar{\\mathbf{x}}^T\\) to get:</p> \\[ \\bar{\\mathbf{x}}^T A \\mathbf{x} = \\bar{\\mathbf{x}}^T \\lambda \\mathbf{x} \\] <p>Comparing the two equations we see that \\(\\bar{\\mathbf{x}}^T \\bar{\\lambda} \\mathbf{x} = \\bar{\\mathbf{x}}^T \\lambda \\mathbf{x}\\) and, unless \\(\\bar{\\mathbf{x}}^T \\mathbf{x}\\) is zero, we can conclude \\(\\lambda = \\bar{\\lambda}\\) is real.</p> <p>How do we know \\(\\bar{\\mathbf{x}}^T\\mathbf{x} \\ne 0\\)?</p> \\[ \\bar{\\mathbf{x}}^T \\mathbf{x} = \\begin{bmatrix} \\bar{x_1} &amp; \\bar{x_2} &amp; \\cdots &amp; \\bar{x_N} \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_n \\end{bmatrix} = |x_1|^2 + |x_2|^2 + \\cdots + |x_n|^2 \\] <p>If \\(\\mathbf{x} \\ne 0\\) then \\(\\bar{\\mathbf{x}}^T \\mathbf{x} \\ne 0\\).</p> <p>With complex vectors, as with complex numbers, multiplying by the conjugate is often helpful.</p> <p>Symmetric matrices with real entries have \\(A = A^T\\), real eigenvalues, and perpendicular eigenvectors. If A has complex entries, then it will have real eigenvalues and perpendicular eigenvectors if and only if \\(A = \\bar{A}^T\\). (The proof of this follows the same pattern.)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/01_pos_def/#projection-onto-eigenvectors","title":"Projection onto Eigenvectors","text":"<p>If \\(A = A^T\\), we can write:</p> \\[ \\begin{align} A &amp;= Q \\Lambda Q^T \\\\   &amp;= \\begin{bmatrix} \\mathbf{q}_ 1 &amp; \\mathbf{q}_ 2 &amp; \\cdots &amp; \\mathbf{q}_ n \\end{bmatrix} \\begin{bmatrix} \\lambda_1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; \\lambda_2 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; vdots \\\\ 0 &amp; 0 &amp; \\cdots &amp; \\lambda_n \\end{bmatrix} \\begin{bmatrix} \\mathbf{q}_ 1^T \\\\ \\mathbf{q}_ 2^T \\\\ \\vdots \\\\ \\mathbf{q}_ n ^T\\end{bmatrix}   &amp;= \\lambda_1 \\mathbf{q}_ 1 \\mathbf{q}_ 1^T + \\lambda_2 \\mathbf{q}_ 2 \\mathbf{q}_ 2^T + \\cdots + \\lambda_n \\mathbf{q}_ n \\mathbf{q}_ n^T \\end{align} \\] <p>The matrix \\(\\mathbf{q}_ k \\mathbf{q}_ k^T\\) is the projection matrix onto \\(\\mathbf{q}_ k\\), so every symmetric matrix is a combination of perpendicular projection matrices.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/01_pos_def/#information-about-eigenvalues","title":"Information about Eigenvalues","text":"<p>If we know that eigenvalues are real, we can ask whether they are positive or negative. (Remember that the signs of the eigenvalues are important in solving systems of differential equations).</p> <p>For every large matrices A, it's impractical to compute eigenvalues by solving \\(|A - \\lambda I| = 0\\). However, it's not hard to compute the pivots, and the signs of the pivots of a symmetric matrix are the same as the signs of the eigenvalues:</p> \\[ \\text{number of positive pivots} = \\text{number of positive eigenvalues} \\] <p>Because the eigenvalues of \\(A + bI\\) are just b more than the eigenvalues of A, we can use this fact to find which eigenvalues of a symmetric matrix are greater or less than any real number b. This tells us a lot about the eigenvalues of A even if we can't compute them directly.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/01_pos_def/#positive-definite-matrices","title":"Positive Definite Matrices","text":"<p>A <code>positive definite matrix</code> is a symmetric matrix A for which all eigenvalues are positive. A good way to tell if a matrix is positive definite is to check that all its pivots are positive.</p> <p>Let:</p> \\[ A = \\begin{bmatrix} 5 &amp; 2 \\\\ 2 &amp; 3 \\end{bmatrix} \\] <p>The pivots of this matrix are \\(5\\) and \\((det A) / 5 = 11 / 5\\). The matrix is symmetric and its pivots (and therefore eigenvalues) are positive, so A is a positive definite matrix. Its eigenvalues are the solution to:</p> \\[ |A - \\lambda I| = \\lambda^2 - 8\\lambda + 11 = 0 \\] <p>i.e. \\(4 \\pm \\sqrt{5}\\).</p> <p>The determinant of a positive definite matrix is always positive but the determinant of \\(\\begin{bmatrix} -1 &amp; 0 \\\\ 0 &amp; -3 \\end{bmatrix}\\) is also positive, and that matrix isn't positive definite. If all of the subdeterminants of A are positive (determinants of the k by k matrix in the upper left corner of A, where \\(1 \\le k \\le n\\)), then A is positive definite.</p> <p>The subject of positive definite matrices brings together what we've learned about pivots, determinants and eigenvalues of square matrices. Soon we'll have a chance to bring together what we've learned in this course and apply it to non-square matrices.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/","title":"Complex Matrices and Fast Fourier Transform","text":"<p>Matrices with all real entries can have complex eigenvalues! So we can't avoid working with complex numbers. In this lecture we learn to work with complex vectors and matrices.</p> <p>The most important complex matrix is the Fourier matrix \\(F_n\\), which is used for Fourier transforms. Normally, multiplication by \\(F_n\\) would require \\(n^2\\) multiplications. The fast Fourier Transform(FFT) reduces this to roughly \\(n logn\\) multiplications, a revolutionary improvement.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#complex-vectors","title":"Complex Vectors","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#length","title":"Length","text":"<p>Given a vector:</p> \\[ \\mathbf{z} = \\begin{bmatrix} z_1 \\\\ z_2 \\\\ \\vdots \\\\ z_n \\\\ \\end{bmatrix} \\in \\mathbb{C}^n \\] <p>with complex entries, how do we find its length? Our old definition:</p> \\[ \\mathbf{z}^T \\mathbf{z} = \\begin{bmatrix} z_1 &amp; z_2 &amp; \\cdots &amp; z_n \\end{bmatrix} \\begin{bmatrix} z_1 \\\\ z_2 \\\\ \\vdots \\\\ z_n \\\\ \\end{bmatrix} \\] <p>is no good; this quantity isn't always positive. For example:</p> \\[ \\begin{bmatrix} 1  &amp; i \\end{bmatrix} \\begin{bmatrix} 1 \\\\ i\\end{bmatrix} = 0 \\] <p>We don't want to define the length of \\(\\begin{bmatrix} 1 \\\\ i \\end{bmatrix}\\) to be 0. The correct definition is:</p> \\[ |\\mathbf{z}|^2 = \\bar{\\mathbf{z}}^T \\mathbf{z} = |z_1|^2 + |z_2|^2 + \\cdots + |z_n|^2 \\] <p>Then we have:</p> \\[ (length \\begin{bmatrix}1 \\\\ i \\end{bmatrix})^2 = \\begin{bmatrix}1 &amp; -i \\end{bmatrix} \\begin{bmatrix}1 \\\\ i\\end{bmatrix} = 2 \\] <p>To simplify our notation we write \\(|\\mathbf{z}|^2 = \\mathbf{z}^H\\mathbf{z}\\), where \\(\\mathbf{z}^H = \\bar{\\mathbf{z}}^T\\). The H comes from the name Hermite, and \\(\\mathbf{z}^H\\mathbf{z}\\) is read \"z Hermitian z\".</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#inner-product","title":"Inner Product","text":"<p>Similarly, the inner or dot product of two complex vectors is not just \\(\\mathbf{y}^T\\mathbf{x}\\). We must also take the complex conjugate of \\(\\mathbf{y}\\):</p> \\[ \\mathbf{y}^H \\mathbf{x} =  \\bar{\\mathbf{y}}^T \\mathbf{x} = \\bar{y}_ 1 x_1 + \\bar{y}_ 2 x_2 + \\cdots + \\bar{y}_ n x_n \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#complex-matrices","title":"Complex Matrices","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#hermitian-matrices","title":"Hermitian Matrices","text":"<p>Symmetric matrices are real valued matrices for which \\(A^T = A\\). If A is complex, a nicer property is \\(\\bar{A}^T = A\\); such a matrix is called <code>Hermitian</code> and we abbreviate \\(\\bar{A}^T\\) as \\(A^H\\). Note that the diagonal entries of a Hermitian matrix must be real. For example:</p> \\[ \\bar{A}^T = A = \\begin{bmatrix}2 &amp; 3 + i \\\\ 3 - i &amp; 5 \\end{bmatrix} \\] <p>Similar to symmetric matrices, Hermitian matrices have real eigenvalues and perpendicular eigenvectors.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#unitary-matrices","title":"Unitary Matrices","text":"<p>What does it mean for complex vectors \\(\\mathbf{q}_ 1 \\mathbf{q}_ 2, \\cdots, \\mathbf{q}_ n\\) to be perpendicular (or orthonormal)? We must use our new definition of the inner product. For a collection of \\(\\mathbf{q}_ j\\) in complex space to be orthonormal, we require:</p> \\[ \\bar{\\mathbf{q}}_ j \\bar{\\mathbf{q}}_ k = \\begin{cases} 0 &amp; j \\ne k \\\\ 1 &amp; j = k \\\\ \\end{cases} \\] <p>We can again define</p> \\[ Q = \\begin{bmatrix}\\mathbf{q}_ 1 &amp; \\mathbf{q}_ 2 &amp; \\cdots &amp; \\mathbf{q}_ n\\end{bmatrix} \\] <p>and then \\(Q^HQ = I\\). Just as \"Hermitian\" is the complex equivalent of \"Symmetric\", the term \"Unitary\" is analogous to \"orthogonal\". A <code>unitary matrix</code> is a square matrix with perpendicular columns of unit length.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#discrete-fourier-transform","title":"Discrete Fourier Transform","text":"<p>A <code>Fourier Series</code> is a way of writing a periodic function or signal as a sum of functions of different frequencies:</p> \\[ f(x) = a_0 + a_1 cos x + b_1 sin x + a_2 cos 2x + b_2 sin 2x + \\cdots \\] <p>When working with finite data sets, the <code>discrete Fourier transform</code> is the key to this decomposition.</p> <p>In electrical engineering and computer science, the rows and columns of a matrix are numbered starting with 0, not 1 (and ending with n - 1, not n). We'll follow this convention when discussing the Fourier matrix:</p> \\[ F_n = \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; \\cdots &amp; 1 \\\\ 1 &amp; w &amp; w^2 &amp; \\cdots &amp; w^{n - 1} \\\\ 1 &amp; w^2 &amp; w^4 &amp; \\cdots &amp; w^{2(n - 1)} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 1 &amp; w^{n - 1} &amp; w^{2(n - 1)} &amp; \\cdots &amp; w^{(n - 1)^2} \\end{bmatrix} \\] <p>Notice that \\(F_n = F_n^T\\) and \\((F_n)_ {jk} = w^{jk}\\), where \\(j, k = 0, 1, \\cdots, n - 1\\) and the complex number w is \\(w = e^{2\\pi i / n}\\) (so \\(w^n = 1\\)). The columns of this matrix are orthogonal.</p> <p>All the entries of \\(F_n\\) are on the unit circle in the complex plane, and raising each one to the nth power gives 1. We could write \\(w = cos(2\\pi / n) + i sin (2\\pi / n)\\), but that would just make it harder to compute \\(w^{jk}\\).</p> <p>Because \\(w^4 = 1\\) and \\(w = e^{2\\pi i / 4} = i\\), our best example of a Fourier matrix is:</p> \\[ F_4 = \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 1 &amp; i &amp; i^2 &amp; i^3 \\\\ 1 &amp; i^2 &amp; i^4 &amp; i^6 \\\\ 1 &amp; i^3 &amp; i^6 &amp; i^9 \\\\ \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 1 &amp; i &amp; -1 &amp; -i \\\\ 1 &amp; -1 &amp; 1 &amp; -1 \\\\ 1 &amp; -i &amp; -1&amp; i \\\\ \\end{bmatrix} \\] <p>To find the Fourier transform of a vector with four components (four data points) we multiply by \\(F_4\\).</p> <p>It's easy to check that the columns of \\(F_4\\) are orthogonal, as long as we remember to conjugate when computing the inner product. However, \\(F_4\\) is not unitary because each column has length 2. We could divide each entry by 2 to get a matrix whose clumns are orthogonal.</p> \\[ \\frac{1}{4} F_4^HF_4 = I \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#an-example","title":"An Example","text":"<p>The signal corresponding to a single impulse at time zero is (roughly) described by \\(\\begin{bmatrix}1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\\). To find the Fourier transform of this signal we compute:</p> \\[ \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 1 &amp; i &amp; -1 &amp; -i \\\\ 1 &amp; -1 &amp; 1 &amp; -1 \\\\ 1 &amp; -i &amp; -1&amp; i \\\\ \\end{bmatrix} \\begin{bmatrix} 1 \\\\  0 \\\\  0 \\\\  0 \\\\  \\end{bmatrix} = \\begin{bmatrix} 1 \\\\  1 \\\\  1 \\\\  1 \\\\  \\end{bmatrix} \\] <p>A single impulse has all frequencies in equal amounts.</p> <p>If we multiply by \\(F_4\\) again we almost get back to \\((1, 0, 0, 0)\\):</p> \\[ \\begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 1 &amp; i &amp; -1 &amp; -i \\\\ 1 &amp; -1 &amp; 1 &amp; -1 \\\\ 1 &amp; -i &amp; -1&amp; i \\\\ \\end{bmatrix} \\begin{bmatrix} 1 \\\\  1 \\\\  1 \\\\  1 \\\\  \\end{bmatrix} = 4 \\begin{bmatrix} 1 \\\\  0 \\\\  0 \\\\  0 \\\\  \\end{bmatrix} \\] <p>Because \\(\\frac{1}{\\sqrt{n}}F_n\\) is unitary, multiplying by \\(F_n\\) and dividing by scalar n inverts the transform.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/02_fft/#fast-fourier-transform","title":"Fast Fourier Transform","text":"<p>Fourier matrices can be broken down into chunks with lots of zero entries; Fourier probably didn't notice this. Gauss did, but didn't realize how significant a discovery this was.</p> <p>There's a nice relationship between \\(F_n\\) and \\(F_{2n}\\) related to the fact that \\(w_{2n}^2 = w_n\\):</p> \\[ F_{2n} = \\begin{bmatrix}I &amp; D \\\\ I &amp; -D \\end{bmatrix} \\begin{bmatrix} F_n &amp; 0 \\\\ 0 &amp; F_n \\end{bmatrix} P \\] <p>where D is a diagonal matrix and P is a 2n by 2n permutation matrix:</p> \\[ P = \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; \\cdots &amp; 0 &amp; 0 \\\\ &amp; &amp; &amp;\\vdots \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\cdots &amp; 1 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; \\cdots &amp; 0 &amp; 0 \\\\ &amp; &amp; &amp;\\vdots \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; 1 \\\\ \\end{bmatrix} \\] <p>So a 2n sized Fourier transform F time \\(\\mathbf{x}\\) which we might think would require \\((2n)^2 = 4n^2\\) operations can instead be performed using two size n Fourier transforms (\\(2n^2\\) operations) plus two very simple matrix multiplications which require on the order of n multiplications. The matrix P picks out the even components \\(x_0, x_2, x_4, \\cdots\\) of a vector first, and then the odd ones - this calculation can be done very quickly.</p> <p>Thus we can do a Fourier transform of size 64 on a vector by separating the vector into its odd and even components, performing a size 32 Fourier transform on each half of its components, then recombining the two halves through a process which involves multiplication by the diagonal matrix D.</p> \\[ D = \\begin{bmatrix} 1 \\\\ &amp; w \\\\ &amp; &amp; w^2 \\\\ &amp; &amp; &amp; \\ddots \\\\ &amp; &amp; &amp; &amp; w^{n - 1} \\\\ \\end{bmatrix} \\] <p>Of course we can break each of those copies of \\(F_{32}\\) down into two copies of \\(F_{16}\\) and so on. In the end, instead of using \\(n^2\\) operations to multiply by \\(F_n\\) we get the same result using about \\(\\frac{1}{2} n log n\\) operations.</p> <p>A typical case is \\(n = 1024 = 2^{10}\\). Simply multiplying by \\(F_n\\) requires over a million calculations. The fast Fourier transform can be completed with only \\(\\frac{1}{2} n log n = 5 \\times 1024\\) calculations. This is 200 times faster!</p> <p>This is only possible because Fourier matrices are special matrices with orthogonal columns. In the next lecture we'll return to dealing exclusively with real numbers and will learn about positive definite matrices, which are the matrices most often seen in application.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/","title":"Positive Definite Matrices and Minima","text":"<p>Studying positive definite matrices brings the whole course together; we use pivots, determinants, eigenvalues and stability. The new quantity here is \\(\\mathbf{x}^T A \\mathbf{x}\\); watch for it.</p> <p>This lecture covers how to tell if a matrix is positive definite, what it means for it to be positive definite, and some geometry.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/#positive-definite-matrices","title":"Positive Definite Matrices","text":"<p>Given a symmetric two by two matrix \\(\\begin{bmatrix}a &amp; b \\\\ b &amp; c\\end{bmatrix}\\), here are four ways to tell if it's positive definite:</p> <ol> <li>Eigenvalue test: \\(\\lambda_1 &gt; 0, \\lambda_2 &gt; 0\\)</li> <li>Determinants test: \\(a &gt; 0, ac - b^2 &gt; 0\\)</li> <li>Pivot test: \\(a &gt; 0, \\frac{ac - b^2}{a} &gt; 0\\)</li> <li>\\(\\mathbf{x}^T A \\mathbf{x}\\) is positive except when \\(\\mathbf{x} = \\mathbf{0}\\)(this is usually the definition of positive definiteness)</li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/#2-by-2","title":"2 by 2","text":"<p>Using the determinants test, we know that \\(\\begin{bmatrix}2 &amp; 6 \\\\ 6 &amp; y \\end{bmatrix}\\) is positive definite when \\(2y - 36 &gt; 0\\) or when \\(y &gt; 18\\).</p> <p>The matrix \\(\\begin{bmatrix}2 &amp; 6 \\\\ 6 &amp; 18 \\end{bmatrix}\\) is on the borderline of positive definiteness and is called a <code>positive semidefinite</code> matrix. It's a singular matrix with eigenvalues 0 and 20. Positive semidefinite matrices have eigenvalues greater than or equal to 0. For a singular matrix, the determinant is 0 and it only has one pivot.</p> \\[ \\begin{align} \\mathbf{x}^TA\\mathbf{x} &amp;= \\begin{bmatrix}x_1 &amp; x_2\\end{bmatrix}\\begin{bmatrix}2 &amp; 6 \\\\ 6 &amp; 18 \\end{bmatrix} \\begin{bmatrix}x_1 \\\\ x_2\\end{bmatrix} \\\\ &amp;= \\begin{bmatrix}x_1 &amp; x_2\\end{bmatrix}\\begin{bmatrix}2x_1 + 6x_2 \\\\ 6x_1 + 18x_2 \\end{bmatrix} \\\\ &amp;= 2x_1^2 + 12 x_1 x_2 + 18 x_2^2 \\\\ = ax_1^2 + 2bx_1x_2 + cx_2^2 \\end{align} \\] <p>If this <code>quadratic form</code> is positive for every(real) \\(x_1\\) and \\(x_2\\) then the matrix is positive definite. In this positive semi-definite example, \\(2x_1^2 + 12x_1 x_2 + 18 x_2^2 = 2(x_1 + 3x_2)^2 = 0\\) when \\(x_1 = 3\\) and \\(x_2 = -1\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/#test-for-minimum","title":"Test for Minimum","text":"<p>If we apply the fourth test to the matrix \\(\\begin{bmatrix}2 &amp; 6 \\\\ 6 &amp; 7\\end{bmatrix}\\) which is not positive definite, we get the quadratic form \\(f(x, y) = 2x^2 + 12xy + 7y^2\\). The graph of this function has a saddle point at the origin:</p> <p></p> <p>The matrix \\(\\begin{bmatrix}2 &amp; 6 \\\\ 6 &amp; 20\\end{bmatrix}\\) is positive definite - its determinant is 4 and its trace is 22 so its eigenvalues are positive. The quadratic form associated with this matrix is \\(f(x, y) = 2x^2 + 12xy + 20y^2\\), which is positive except when \\(x = y = 0\\). The level curve \\(f(x, y) = k\\) of this graph are ellipses; its graph appears in next figure. If \\(a &gt; 0\\) and \\(c &gt; 0\\), the quadratic form \\(ax^2 + abxy + cy^2\\) is only negative when the value of \\(2bxy\\) is negative and overwhelms the (positive) value of \\(ax^2 + cy^2\\).</p> <p>The first derivatives \\(f_x\\) and \\(f_y\\) of this function are zero, so its graph is tangent to the xy-plane at \\((0, 0, 0)\\); but this was also true of \\(2x^2 + 12xy + 7y^2\\). as in single variable calculus, we need to look at the second derivatives of \\(f\\) to tell whether there is a minimum at the critical point.</p> <p>We can prove that \\(2x^2 + 12xy + 20y^2\\) is always positive by writing it as a sum of squares. We do this by completing the square:</p> \\[ 2 x^2 + 12xy + 20y^2 = 2(x + 3y)^2 + 2y^2 \\] <p>Note that \\(2(x + 3y)^2 = 2x^2 + 12xy + 18y^2\\), and 18 was the <code>borderline</code> between passing and failing the tests for positive definiteness.</p> <p></p> <p>When we complete the square for \\(2x^2 + 12xy + 7y^2\\) we get:</p> \\[ 2x^2 + 12xy + 7y^2 = 2(x + 3y)^2 - 11y^2 \\] <p>which may be negative; e.g. when \\(x = -3\\) and \\(y = 1\\).</p> <p>The coefficients that appear when completing the square are exactly the entries that appear when performing elimination on the original matrix. The two pivots are multiplied by the squares, and the coefficient c in the term \\((x - cy)^2\\) is the multiple of the first row that's subtracted from the second row.</p> \\[ \\begin{bmatrix} 2 &amp; 6 \\\\ 6 &amp; 20 \\end{bmatrix} \\xrightarrow{\\text{subtract 3 times row 1}}  \\begin{bmatrix} 2 &amp; 6 \\\\ 0 &amp; 2 \\end{bmatrix} \\] <p>We can see the terms that appear when completing the square in:</p> \\[ U =\\begin{bmatrix}2 &amp; 6 \\\\ 0 &amp; 2\\end{bmatrix} \\] <p>and</p> \\[ L =\\begin{bmatrix}1 &amp; 0 \\\\ 3 &amp; 1\\end{bmatrix} \\] <p>When we complete the square, the numbers multiplied by the squares are the pivots; if the pivots are all positive then the sum of squares will always be positive.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/#hessian-matrix","title":"Hessian Matrix","text":"<p>The matrix of second derivatives of \\(f(x, y)\\) is:</p> \\[ \\begin{bmatrix}f_{xx} &amp; f_{xy} \\\\ f_{yx} &amp; f_{yy}\\end{bmatrix} \\] <p>This matrix is symmetric because \\(f_{xy} = f_{yx}\\). Its determinant is positive when the matrix is positive definite, which matches the \\(f_{xx}f_{yy} &gt; f_{xy}^2\\) test for a minimum that we learned in calculus.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/#n-by-n","title":"n by n","text":"<p>A function of several variables \\(f(x_1, x_2, \\cdots, x_n)\\) has a minimum when its matrix of second derivatives is positive definite, and identifying minima of functions is often important. The tests we've just learned for 2 by 2 matrices also apply to n by n matrices.</p> <p>A 3 by 3 example:</p> \\[ A = \\begin{bmatrix}2 &amp; -1 &amp; 0 \\\\ -1 &amp; 2 &amp; -1 \\\\ 0 &amp; -1 &amp; 2\\end{bmatrix} \\] <p>Is this matrix positive definite? Our tests will say yes. What's the function \\(\\mathbf{x}^TA\\mathbf{x}\\) associated with this matrix? Does that function have a minimum at \\(\\mathbf{x} =\\mathbf{0}\\)? What does the graph of its quadratic form look like?</p> <p>Looking at determinants we see:</p> \\[ det[2] = 2, det\\begin{bmatrix}2 &amp; -1 \\\\ -1 &amp; 2\\end{bmatrix} = 5, det \\begin{bmatrix}2 &amp; -1 &amp; 0 \\\\ -1 &amp; 2 &amp; -1 \\\\ 0 &amp; -1 &amp; 2 \\end{bmatrix} = 4 \\] <p>These are all positive, so A is positive definite.</p> <p>The pivots of A are \\(2, 3/2\\) and \\(4/3\\) (all positive) because the products of the pivots equal the determinants.</p> <p>The eigenvalues of A are positive and their product is 4. It's not difficult to check that they are \\(2 - \\sqrt{2}\\), 2 and \\(2 + \\sqrt{2}\\) (all positive).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/03_minima/#ellipsoids-in-rn","title":"Ellipsoids in R^n","text":"\\[ f(x) = \\mathbf{x}^T A \\mathbf{x} = 2x_1^2 + 2x_2^2 + 2x_3^2 - 2x_1x_2 - 2x_2x_3 \\] <p>Because A is positive definite, we expect \\(f(x)\\) to be positive except when \\(\\mathbf{x} = \\mathbf{0}\\). Its graph is a sort of four dimensional bowl or <code>paraboloid</code>. If we wrote \\(f(x)\\) as a sum of three squares, those squares would be multiplied by the (positive) pivots of A. Earlier, we said that a horizontal slice of our three dimensional bowl shape would be an ellipse. Here, a horizontal slice of the four dimensional bowl is an ellipsoid - a little bit like a rugby ball. For example, if we cat the graph at height 1 we get a surface whose equation is:</p> \\[ 2x_1^2 + 2 x_2^2 + 2x_3^2 - 2x_1x_2 - 2x_2x_3 = 1 \\] <p>Just as an ellipse has a major and minor axis, an ellipsoid has three axes. If we write \\(A = Q \\Lambda Q^T\\), as the principal axis theorem tells us we can, the eigenvectors of A tell us the directions of the principal axes of the ellipsoid. The eigenvalues tell us the lengths of those axiss.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/04_similar_matrices/","title":"Similar Matrices and Jordan Form","text":"<p>We've nearly covered the entire heart of linear algebra - once we've finished singular value decompositions we'll have seen all the most central topics.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/04_similar_matrices/#ata-is-positive-definite","title":"A^TA is Positive Definite","text":"<p>A matrix is <code>positive definite</code> if \\(\\mathbf{x}^T A \\mathbf{x} &gt; 0\\) for all \\(\\mathbf{x} \\ne \\mathbf{0}\\). This is a very important class of matrices; positive definite matrices appear in the form of \\(A^TA\\) when computing least squares solutions. In many situations, a rectangular matrix is multiplied by its transpose to get a square matrix.</p> <p>Given a symmetric positive definite matrix A, is its inverse also symmetric and positive definite? Yes, because if the (positive) eigenvalues of A are \\(\\lambda_1, \\lambda_2, \\cdots, \\lambda_d\\) then the eigenvalues \\(1 / \\lambda_1, 1/ \\lambda_2, \\cdots, 1 / \\lambda_d\\) of \\(A^{-1}\\) are also positive.</p> <p>If A and B are positive definite, is \\(A + B\\) positive definite? We don't know much about the eigenvalues of \\(A + B\\), but we can use the propterty \\(\\mathbf{x}^T A \\mathbf{x} &gt; 0\\) and \\(\\mathbf{x}^TB\\mathbf{x} &gt; 0\\) to show that \\(\\mathbf{x}^T (A + B) \\mathbf{x} &gt; 0\\) for \\(\\mathbf{x} \\ne 0\\) and so \\(A + B\\) is also positive definite.</p> <p>Now suppose A is a rectangular (m by n) matrix. A is almost certainly not symmetric, but \\(A^TA\\) is square and symmetric. Is \\(A^TA\\) positive definite? We'd rather not try to find the eigenvalues or the pivots of this matrix, so we ask when \\(\\mathbf{x}^T A^T A\\mathbf{x}\\) is positive.</p> <p>Simplifying \\(\\mathbf{x}^T A^T A \\mathbf{x}\\) is just a matter of moving parentheses:</p> \\[ \\mathbf{x}^T (A^TA) \\mathbf{x} = (A \\mathbf{x})^T (A\\mathbf{x}) = |A\\mathbf{x}|^2 \\ge 0 \\] <p>The only remaining question is whether \\(A\\mathbf{x} = \\mathbf{0}\\). If A has rank n (independent columns), then \\(\\mathbf{x}^T(A^T A)\\mathbf{x} = \\mathbf{0}\\) only if \\(\\mathbf{x} = \\mathbf{0}\\) and A is positive definite.</p> <p>Another nice feature of positive definite matrices is that you never have to do row exchanges when row reducing - there are never 0's or unsuitably small numbers in their pivot positions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/04_similar_matrices/#similar-matrices-a-and-b-m-1-am","title":"Similar Matrices A and B = M^-1 AM","text":"<p>Two square matrices A and B are similar if \\(B = M^{-1} A M\\) for some matrix M. This allows us to put matrices into families in which all the matrices in a family are similar to each other. Then family can be represented by a diagnoal (or nearly diagonal) matrix.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/04_similar_matrices/#distinct-eigenvalues","title":"Distinct Eigenvalues","text":"<p>If A has a full set of eigenvectors we can create its eigenvector matrix S and write \\(S^{-1} A S = \\Lambda\\). So A is similar to \\(\\Lambda\\) (choosing M to be this S).</p> <p>If A = \\(\\begin{bmatrix}2 &amp; 1 \\\\ 1 &amp; 2 \\end{bmatrix}\\) then \\(\\Lambda = \\begin{bmatrix}3 &amp; 0 \\\\ 0 &amp; 1\\end{bmatrix}\\) and so A is similar to \\(\\begin{bmatrix}3 &amp; 0 \\\\ 0 &amp; 1 \\end{bmatrix}\\). But A is also similar to:</p> \\[ \\begin{align} M^{-1} &amp;A &amp;M &amp;= &amp;B &amp; \\\\ \\begin{bmatrix}1 &amp; -4 \\\\ 0 &amp; 1\\end{bmatrix} &amp;\\begin{bmatrix}3 &amp; 0 \\\\ 0 &amp; 1\\end{bmatrix} &amp;\\begin{bmatrix}1 &amp; 4 \\\\ 0 &amp; 1\\end{bmatrix} &amp;= \\begin{bmatrix}1 &amp; -4 \\\\ 0 &amp; 1 \\end{bmatrix} &amp;\\begin{bmatrix}2 &amp; 9 \\\\ 1 &amp; 6\\end{bmatrix}  \\\\  &amp; &amp; &amp;= \\begin{bmatrix}-2 &amp; -15 \\\\ 1 &amp; 6 \\end{bmatrix} &amp; \\end{align} \\] <p>In addition, B is similar to \\(\\Lambda\\). All these similar matrices have the same eigenvalues, 3 and 1; we can check this by computing the trace and determinant of A and B.</p> <p>Similar matrices have the same eigenvalues!</p> <p>In fact, the matrices similar to A are all the 2 by 2 matrices with eigenvalues 3 and 1. Some other members of this family are \\(\\begin{bmatrix}3 &amp; 7 \\\\ 0 &amp; 1 \\end{bmatrix}\\) and \\(\\begin{bmatrix}1 &amp; 7 \\\\ 0 &amp; 3\\end{bmatrix}\\). To prove that similar matrices have the same eigenvalues, suppose \\(A\\mathbf{x} = \\lambda\\mathbf{x}\\). We modify this equation to include \\(B = M^{-1} A M\\):</p> \\[ \\begin{align} AMM^{-1}\\mathbf{x} &amp;= \\lambda \\mathbf{x} \\\\ M^{-1}AMM^{-1}\\mathbf{x} &amp;= \\lambda M^{-1}\\mathbf{x} \\\\ BM^{-1}\\mathbf{x} &amp;= \\lambda M^{-1}\\mathbf{x} \\\\ \\end{align} \\] <p>The matrix B has the same \\(\\lambda\\) as eigenvalues. \\(M^{-1}\\mathbf{x}\\) is the eigenvector.</p> <p>If two matrices are similar, they have the same eigenvalues and the same number of independent eigenvectors(but probably not the same eigenvectors).</p> <p>When we diagonalize A, we're finding a diagonal matrix \\(\\Lambda\\) that is similar to A. If two matrices have the same n distinct eigenvalues, they'll be similar to the same diagonal matrix.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/04_similar_matrices/#repeated-eigenvalues","title":"Repeated Eigenvalues","text":"<p>If two eigenvalues of A are the same, it may not be possible to diagonalize A. Suppose \\(\\lambda_1 = \\lambda_2 = 4\\). One family of matrices with eigenvalues 4 and 4 contains only the matrix \\(\\begin{bmatrix}4 &amp; 0 \\\\ 0 &amp; 4 \\end{bmatrix}\\). The matrix \\(\\begin{bmatrix}4 &amp; 1 \\\\ 0 &amp; 4 \\end{bmatrix}\\) is not in this family.</p> <p>There are two families of similar matrices with eigenvalues 4 and 4. The larger family includes \\(\\begin{bmatrix}4 &amp; 1 \\\\ 0 &amp; 4 \\end{bmatrix}\\). Each of the members of this family has only one eigenvector.</p> <p>The matrix \\(\\begin{bmatrix}4 &amp; 0 \\\\ 0 &amp; 4\\end{bmatrix}\\) is the only member of the other family, because:</p> \\[ M^{-1} \\begin{bmatrix}4 &amp; 0 \\\\ 0 &amp; 4 \\end{bmatrix} M = 4 M^{-1} M = \\begin{bmatrix}4 &amp; 0 \\\\ 0 &amp; 4 \\end{bmatrix} \\] <p>for any invertible matrix M.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/04_similar_matrices/#jordan-form","title":"Jordan Form","text":"<p>Camille Jordan found a way to choose a <code>most diagonal</code> representative from each family of similar matrices; this representitive is said to be in <code>Jordan normal form</code>. For example, both \\(\\begin{bmatrix}4 &amp; 1 \\\\ 0 &amp; 4\\end{bmatrix}\\) and \\(\\begin{bmatrix}4 &amp; 0 \\\\ 0 &amp; 4\\end{bmatrix}\\) are in Jordan form. This form used to be the climax of linear algebra, but not any more. Numerical applications rarely need it. </p> <p>We can find more members of the family represented by \\(\\begin{bmatrix}4 &amp; 1 \\\\ 0 &amp; 4 \\end{bmatrix}\\) by choosing diagonal entries to get a trace of 4, then choosing off-diagonal entries to get a determinant of 16:</p> \\[ \\begin{bmatrix}4 &amp; 1 \\\\ 0 &amp; 4 \\end{bmatrix}, \\begin{bmatrix}5 &amp; 1 \\\\ -1 &amp; 3 \\end{bmatrix}, \\begin{bmatrix}4 &amp; 0 \\\\ 17 &amp; 4 \\end{bmatrix}, \\begin{bmatrix}a &amp; b \\\\ (8a - a^2 - 16)/b &amp; 8 - b \\end{bmatrix} \\] <p>None of these are diagonalizable, because if they were they would be similar to \\(\\begin{bmatrix}4 &amp; 0 \\\\ 0 &amp; 4\\end{bmatrix}\\). That matrix is only similar to itself. What about this one?</p> \\[ \\begin{bmatrix}0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\end{bmatrix} \\] <p>Its eigenvalues are four zeros. Its rand is 2 so the dimension of its nullspace is \\(4 - 2 = 2\\). It will have two independent eigenvectors and two \"missing\" eigenvectors. When we look instead at:</p> \\[ \\begin{bmatrix}0 &amp; 1 &amp; 7 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\end{bmatrix} \\] <p>its rank and the dimension of its nullspace are still 2, but it's not as nice as A. B is similar to A, which is the <code>Jordan normal form</code> representative of this family. A has a 1 above the diagonal for every missing eigenvector and the rest of its entries are 0.</p> <p>Now consider:</p> \\[ C = \\begin{bmatrix}0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0\\end{bmatrix} \\] <p>Again it has rank 2 and its nullspace has dimension 2. Its four eigenvalues are 0. Surprisingly, it is not similar to A. We can see this by breaking the matrices into their <code>Jordan blocks</code>:</p> \\[ A =  \\begin{array}{|ccc|c|}0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\hline 0 &amp; 0 &amp; 0 &amp; 0 \\end{array}, C =  \\begin{array}{|cc|cc|}0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\\\ \\hline 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 \\end{array} \\] <p>A Jordan block \\(J_{i}\\) has a repeated eigenvalue \\(\\lambda_i\\) on the diagonal, zeros below the diagonal and in the upper right hand corner, and ones above the diagonal:</p> \\[ J_i = \\begin{bmatrix} \\lambda_i &amp; 1 &amp; j0 \\cdots &amp; 0 \\\\ 0 &amp; \\lambda_i &amp; 1 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\cdots &amp; \\lambda_i &amp; 1 \\\\ 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; \\lambda_i \\\\ \\end{bmatrix} \\] <p>Two matrices may have the same eigenvalues and the same number of eigenvectors, but if their Jordan blocks are different sizes those matrices can not be similar.</p> <p>Jordan's theorem says that every square matrix A is similar to a Jordan matrix J, with Jordan blocks on the diagonal:</p> \\[ J =  \\begin{bmatrix} J_1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; J_2 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\cdots &amp; J_d \\end{bmatrix} \\] <p>In a Jordan matrix, the eigenvalues are on the diagonal and there may be ones above the diagonal; the rest of the entries are zero. The number of blocks is the number of eigenvectors - there is one eigenvector per block.</p> <p>To summerize:</p> <ul> <li>If A has n distinct eigenvalues, it is diagonalizable and its Jordan matrix is the diagonal matrix \\(J = \\Lambda\\)</li> <li>If A has repeated eigenvalues and \"missing\" eigenvectors, then its Jordan matrix will have \\(n - d\\) ones above the diagonal.</li> </ul> <p>We have not learned to compute the Jordan matrix of a matrix which is missing eigenvectors, but we do know how to diagonalize a matrix which has n distinct eigenvalues.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/05_svd/","title":"Singular Value Decomposition(SVD)","text":"<p>The <code>Singular Value Decomposition</code> of a matrix is usually referred to as the SVD. This is the final and best factorization of a matrix:</p> \\[ A = U \\Sigma V^T \\] <p>where \\(U\\) is the orthogonal, \\(\\Sigma\\) is diagonal, and \\(V\\) is orthogonal.</p> <p>In the decomposition \\(A = U \\Sigma V^T\\), A can be <code>any</code> matrix. We know that if A is symmetric positive definite its eigenvectors are orthogonal and we can write \\(A = Q \\Lambda Q^T\\). This is a spacial case of a SVD, with \\(U = V = Q\\). For more general A, the SVD requires two different matrices U and V.</p> <p>We've also learned how to write \\(A = S \\Lambda S^{-1}\\), where S is the matrix of n distinct eigenvectors of A. However, S may not be orthogonal; the matrices U and V in the SVD will be.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/05_svd/#how-it-works","title":"How It Works","text":"<p>We can think of A as a linear transformation taking a vector \\(\\mathbf{v}_ 1\\) in its row space to a vector \\(\\mathbf{u}_ 1 = A \\mathbf{v}_ 1\\) in its column space. The SVD arises from finding an orthogonal basis for the row space that gets transformed into orthogonal basis for the column space: \\(A\\mathbf{v}_ i = \\sigma_ i \\mathbf{u}_ i\\)</p> <p>It's not hard to find an orthogonal basis for the row space - the Gram-Schmidt process gives us one right way. But in general, there's no reason to expect A to transform that basis to another orthogonal basis.</p> <p>You may be wondering about the vectors in the nullspace of A and \\(A^T\\). There are no problem - zeros on the diagonal of \\(\\Sigma\\) will take care of them.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/05_svd/#matrix-language","title":"Matrix Language","text":"<p>The heart of the problem is to find an orthogonal basis \\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ r\\) for the row space of A for which:</p> \\[ \\begin{align} A\\begin{bmatrix}\\mathbf{v}_ 1 &amp; \\mathbf{v}_ 2 &amp; \\cdots &amp; \\mathbf{v}_ r\\end{bmatrix} &amp;=  \\begin{bmatrix}\\sigma_ 1 \\mathbf{u}_ 1 &amp; \\sigma_2 \\mathbf{u}_ 2 &amp; \\cdots &amp; \\sigma_r \\mathbf{u}_ r\\end{bmatrix} \\\\ &amp;= \\begin{bmatrix}\\mathbf{u}_ 1 &amp; \\mathbf{u}_ 2 &amp; \\cdots &amp; \\mathbf{u}_ r\\end{bmatrix} \\begin{bmatrix}\\sigma_1 &amp; &amp; &amp; \\\\ &amp; \\sigma_2 &amp; &amp; \\\\ &amp; &amp; \\ddots &amp; \\\\ &amp; &amp; &amp;\\sigma_r \\end{bmatrix} \\end{align} \\] <p>with \\(\\mathbf{u}_ 1, \\mathbf{u}_ 2, \\cdots, \\mathbf{u}_ r\\) an orthonormal basis for the column space of A. Once we add in the nullspaces, this equation will become \\(AV = U\\Sigma\\). We can complete the orthonormal bases \\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ r\\) and \\(\\mathbf{u}_ 1, \\mathbf{u}_ 2, \\cdots, \\mathbf{u}_ r\\) to orthonormal bases for the entire space any way we want. Since \\(\\mathbf{v}_ {r + 1}, \\cdots, \\mathbf{v}_ n\\) will be in the nullspace of A, the diagonal entries \\(\\sigma_{r + 1}, \\cdots, \\sigma_{n}\\) will be 0.</p> <p>The columns of \\(U\\) and \\(V\\) are bases for the row and column spaces, respectively. Usually \\(U \\ne V\\), but if A is positive definite we can use the same basis for its row and column space!</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/05_svd/#calculation","title":"Calculation","text":"<p>Suppose A is the invertible matrix \\(\\begin{bmatrix}4 &amp; 4 \\\\ -3 &amp; 3\\end{bmatrix}\\). We want to find vectors \\(\\mathbf{v}_ 1\\) and \\(\\mathbf{v}_ 2\\) in the row space \\(\\mathbb{R}^2\\), \\(\\mathbf{u}_ 1\\) and \\(\\mathbf{u}_ 2\\) in the column space \\(\\mathbb{R}^2\\), and positive numbers \\(\\sigma_1\\) and \\(\\sigma_2\\) so that the \\(\\mathbf{v}_ i\\) are orthonormal, the \\(\\mathbf{u}_ i\\) are orthonormal, and the \\(\\sigma_i\\) are the scaling factors for which \\(A \\mathbf{v}_ i = \\sigma_i u_i\\).</p> <p>This is a big step toward finding orthonormal matrices \\(V\\) and \\(U\\) and a diagonal matrix \\(\\Lambda\\) for which:</p> \\[ AV = U \\Sigma \\] <p>Since V is orthogonal, we can multiply both sides by \\(V^{-1} = V^T\\) to get:</p> \\[ A = U \\Sigma V^T \\] <p>Rather than solving for U, V and \\(\\Sigma\\) simultaneously, we multiply both sides by \\(A^T = V \\Sigma ^T U^T\\) to get:</p> \\[ \\begin{align} A^T A &amp;= V \\Sigma U^{-1} U \\Sigma V^T \\\\ &amp;= V \\Sigma^2 V^T \\\\ &amp;= V \\begin{bmatrix}\\sigma^2_1 &amp; &amp; &amp; \\\\ &amp;\\sigma^2_2 &amp; &amp; \\\\  &amp; &amp;\\ddots &amp; \\\\ &amp; &amp; &amp; \\sigma_n^2\\end{bmatrix} V^T \\end{align} \\] <p>This is in the form \\(Q\\Lambda Q^T\\); we can now find V by diagonalizing the symmetric positive definite (or semidefinite) matrix \\(A^TA\\). The columns of V are eigenvectors of \\(A^T\\) and the eigenvalues of \\(A^TA\\) are the values \\(\\sigma_i^2\\). We choose \\(\\sigma_i\\) to be the positive square root of \\(\\lambda_i\\).</p> <p>To find U, we do the same thing with \\(AA^T\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/05_svd/#svd-example","title":"SVD Example","text":"<p>We return to our matrix \\(A = \\begin{bmatrix}4 &amp; 4 \\\\ -3 &amp; 3\\end{bmatrix}\\). We start by computing:</p> \\[ \\begin{align} A^TA &amp;=\\begin{bmatrix}4 &amp; -3 \\\\ 4 &amp; 3\\end{bmatrix}\\begin{bmatrix}4 &amp; 4\\\\ -3 &amp; 3\\end{bmatrix} \\\\ &amp;= \\begin{bmatrix}25 &amp; 7 \\\\ 7 &amp; 25\\end{bmatrix} \\end{align} \\] <p>The eigenvectors of this matrix will give us the vector \\(\\mathbf{v}_ i\\), and the eigenvalues will gives us the numbers \\(\\sigma_i\\).</p> <p>Two orthogonal eigenvectors of \\(A^TA\\) are \\(\\begin{bmatrix}1 \\\\ 1\\end{bmatrix}\\) and \\(\\begin{bmatrix}1 \\\\ -1\\end{bmatrix}\\). To get an orthonormal basis, let \\(\\mathbf{v}_ 1 = \\begin{bmatrix}1 / \\sqrt{2} \\\\ 1 / \\sqrt{2}\\end{bmatrix}\\) and \\(\\mathbf{v}_ 2 = \\begin{bmatrix}1 / \\sqrt{2} \\\\ -1 / \\sqrt{2}\\end{bmatrix}\\). These have eigenvalues \\(\\sigma_1^2 = 32\\) and \\(\\sigma_2^2 = 18\\). We now have:</p> \\[ A = U \\Sigma V^T \\] \\[ \\begin{bmatrix}4 &amp; 4 \\\\ -3 &amp; 3\\end{bmatrix} = [] \\begin{bmatrix}4 \\sqrt{2} &amp; 0 \\\\ 0 &amp; 3\\sqrt{2}\\end{bmatrix} \\begin{bmatrix}1 / \\sqrt{2} &amp; 1 / \\sqrt{2} \\\\ 1 / \\sqrt{2} &amp; -1 / \\sqrt{2}\\end{bmatrix} \\] <p>We could solve this for U, but for practice we'll find U by finding orthonormal eigenvectors \\(\\mathbf{u}_ 1\\) and \\(\\mathbf{u}_ 2\\) for \\(AA^T = U \\Sigma^2 U^T\\).</p> \\[ \\begin{align} AA^T &amp;= \\begin{bmatrix}4 &amp; 4 \\\\ -3 &amp; 3\\end{bmatrix} \\begin{bmatrix}4 &amp; -3 \\\\ 4 &amp; 3\\end{bmatrix} \\\\      &amp;= \\begin{bmatrix}32 &amp; 0 \\\\ 0 &amp; 18\\end{bmatrix} \\end{align} \\] <p>Luckily, \\(AA^T\\) happens to be diagonal. It's tempting to let \\(\\mathbf{u}_ 1 = \\begin{bmatrix}1 \\\\ 0\\end{bmatrix}\\) and \\(\\mathbf{u}_ 2 = \\begin{bmatrix}0 \\\\ 1\\end{bmatrix}\\), as Professor Strang did in the lecture, but because \\(A\\mathbf{v}_ 2 = \\begin{bmatrix}0 \\\\ -3 \\sqrt{2}\\end{bmatrix}\\) we instead have \\(\\mathbf{u}_ 2 = \\begin{bmatrix}0 \\\\ -1\\end{bmatrix}\\) and \\(U = \\begin{bmatrix}1 &amp; 0 \\\\ 0 &amp; -1\\end{bmatrix}\\). Note that this also gives us a chance to double check our calculation of \\(\\sigma_1\\) and \\(\\sigma_2\\).</p> <p>Thus, the SVD of A is:</p> \\[ A = U \\Sigma V^T \\] \\[ \\begin{bmatrix}4 &amp; 4 \\\\ -3 &amp; 3\\end{bmatrix} = \\begin{bmatrix}1 &amp; 0 \\\\ 0 &amp; -1\\end{bmatrix} \\begin{bmatrix}4\\sqrt{2} &amp; 0 \\\\ 0 &amp; 3 \\sqrt{2}\\end{bmatrix} \\begin{bmatrix}1/\\sqrt{2} &amp; 1/\\sqrt{2} \\\\ 1 / \\sqrt{2} &amp; -1 / \\sqrt{2}\\end{bmatrix}. \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/05_svd/#example-with-a-nullspace","title":"Example with a Nullspace","text":"<p>Now let \\(A = \\begin{bmatrix}4 &amp; 3 \\\\ 8 &amp; 6\\end{bmatrix}\\). This has a one dimensional nullspace and one dimensional row and column spaces.</p> <p>The row space of A consists of the multiples of \\(\\begin{bmatrix}4 \\\\ 3\\end{bmatrix}\\). The column space of A is made up of multiples of \\(\\begin{bmatrix}4 \\\\ 8\\end{bmatrix}\\). The nullspace and left nullspace are perpendicular to the row and column spaces, respectively.</p> <p>Unit basis vectors of the row and column spaces are are \\(\\mathbf{v}_ 1 = \\begin{bmatrix}0.8 \\\\ 0.6\\end{bmatrix}\\) and \\(\\mathbf{u}_ 1 = \\begin{bmatrix}1/\\sqrt{5} \\\\ 1 / \\sqrt{5}\\end{bmatrix}\\). To compute \\(\\sigma_1\\) we find the nonzero eigenvalue of \\(A^TA\\).</p> \\[ \\begin{align} A^TA &amp;= \\begin{bmatrix}4 &amp; 8 \\\\ 3 &amp; 6\\end{bmatrix} \\begin{bmatrix}4 &amp; 3 \\\\ 8 &amp; 6\\end{bmatrix} \\\\      &amp;= \\begin{bmatrix}80 &amp; 60 \\\\ 60 &amp; 45\\end{bmatrix} \\end{align} \\] <p>Because this is a rank 1 matrix, one eigenvalue must be 0. The other must equal the trace, so \\(\\sigma_1^2 = 125\\). After finding unit vectors perpendicular to \\(\\mathbf{u}_ 1\\) and \\(\\mathbf{v}_ 1\\) (basis vectors for the left nullspace and nullspace, respectively) we see that the SVD of A is:</p> \\[ \\begin{bmatrix}4 &amp; 3 \\\\ 8 &amp; 6\\end{bmatrix} = \\frac{1}{\\sqrt{5}}\\begin{bmatrix}1 &amp; 2 \\\\ 2 &amp; -1\\end{bmatrix} \\begin{bmatrix}\\sqrt{125} &amp; 0 \\\\ 0 &amp; 0\\end{bmatrix}\\begin{bmatrix}0.8 &amp; 0.6 \\\\ 0.6 &amp; -0.8\\end{bmatrix} \\] \\[ A = U \\Sigma V^T \\] <p>The singular value decomposition combines topics in linear algebra ranging from positive definite matrices to the four fundamental subspaces.</p> <ul> <li>\\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ r\\) is an orthonormal basis for the row space;</li> <li>\\(\\mathbf{u}_ 1, \\mathbf{u}_ 2, \\cdots, \\mathbf{u}_ r\\) is an orthonormal basis for the column space;</li> <li>\\(\\mathbf{v}_ {r + 1}, \\mathbf{v}_ {r + 2}, \\cdots, \\mathbf{v}_ n\\) is an orthonormal basis for the nullspace;</li> <li>\\(\\mathbf{u}_ {r + 1}, \\mathbf{u}_ {r + 2}, \\cdots, \\mathbf{u}_ m\\) is an orthonormal basis for the left nullspace.</li> </ul> <p>These are the \"right\" bases to use, bacause \\(A\\mathbf{v}_ i = \\sigma_i \\mathbf{u}_ i\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/","title":"Linear Transformations and their Matrices","text":"<p>In older linear algebra courses, linear transformations were introduced before matrices. This geometric approach to linear algebra initially avoids the need for coordinates. But eventually there must be coordinates and matrices when the need for computation arises.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#without-coordinatesno-matrix","title":"Without Coordinates(no matrix)","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#example-1-projection","title":"Example 1: Projection","text":"<p>We can describe a projection as a <code>linear transformation</code> T which takes every vector in \\(\\mathbb{R}^2\\) into another vector in \\(\\mathbb{R}^2\\). In other words,</p> \\[ T : \\mathbb{R}^2 \\to \\mathbb{R}^2 \\] <p>The rule for this <code>mapping</code> is that every vector \\(\\mathbf{v}\\) is projected onto a vector \\(T(\\mathbf{v})\\) on the line of the projection. Projection is a linear transformation.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#definition-of-linear","title":"Definition of Linear","text":"<p>A transformation T is <code>linear</code> if:</p> \\[ T(\\mathbf{v} + \\mathbf{w}) = T(\\mathbf{v}) + T(\\mathbf{w}) \\] <p>and</p> \\[ T(c\\mathbf{v}) = cT(\\mathbf{v}) \\] <p>for all vectors \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) for all scalars c. Equaivalently:</p> \\[ T(c\\mathbf{v} + d\\mathbf{w}) = cT(\\mathbf{v}) + dT(\\mathbf{w}) \\] <p>for all vectors \\(\\mathbf{v}\\) and \\(\\mathbf{w}\\) and scalars c and d. It's worth noticing that \\(T(\\mathbf{0}) = \\mathbf{0}\\), because if not it couldn't be true that \\(T(c\\mathbf{0}) = cT(\\mathbf{0})\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#non-example-1-shift-the-whole-plane","title":"Non-example 1: Shift the Whole Plane","text":"<p>Consider the transformation \\(T(\\mathbf{v}) = \\mathbf{v} + \\mathbf{v}_ 0\\) that shifts every vector in the plane by adding some fixed vector \\(\\mathbf{v}_ 0\\) to it. This is <code>not</code> a linear transformation because \\(T(2\\mathbf{v}) = 2\\mathbf{v} + \\mathbf{v}_ 0 \\ne 2T(\\mathbf{v})\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#non-exmaple-2-tv-v","title":"Non-exmaple 2: T(v) = ||v||","text":"<p>The transformation \\(T(\\mathbf{v}) = ||\\mathbf{v}||\\) that takes any vector to its length is not a linear transformation because \\(T(c\\mathbf{v}) \\ne cT(\\mathbf{v})\\) if \\(c &lt; 0\\).</p> <p>We're not going to study transformations that aren't linear. From here on, we'll only use T to stand for linear transformations.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#example-2-rotation-by-45-deg","title":"Example 2: Rotation by 45 deg","text":"<p>This transformation \\(T : \\mathbf{R}^2 \\to \\mathbf{R}^2\\) takes vector \\(\\mathbf{v}\\) and outputs the vector \\(T(\\mathbf{v})\\) that comes from rotating \\(\\mathbf{v}\\) counterclockwise by \\(45^{\\circ}\\) about the origin. Note that we can describe this and see that it's linear without using any coordinates.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#the-big-picture","title":"The Big Picture","text":"<p>One advantage of describing transformations geometrically is that it helps us to see the big picture, as apposed to focusing on the transformation's effect on a single point. We can quickly see how rotation by \\(45^{\\circ}\\) will transform a picture of a house in the plane. If the transformation was described in terms of a matrix rather than as a rotation, it would be harder to guess what the house would be mapped to.</p> <p>Frequently, the best way to understand a linear transformation is to find the matrix that lies behind the transformation. To do this, we have to choose a basis and bring in coordinates.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#with-coordinatesmatrix","title":"With Coordinates(matrix)","text":"<p>All of the linear transformations we've discussed above can be described in terms of matrices. In a sense, linear transformations are an abstract description of multiplication by a matrix, as in the following example.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#example-3-tv-av","title":"Example 3: T(v) = Av","text":"<p>Given a matrix A, define \\(T(\\mathbf{v}) = A\\mathbf{v}\\). This is a linear transformation:</p> \\[ A(\\mathbf{v} + \\mathbf{w}) = A(\\mathbf{v}) + A(\\mathbf{w}) \\] <p>and</p> \\[ A(c\\mathbf{v}) = cA(\\mathbf{v}) \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#example-4","title":"Example 4","text":"<p>Suppose \\(A = \\begin{bmatrix}1 &amp; 0 \\\\ 0 &amp; -1\\end{bmatrix}\\). How would we describe the transformation \\(T(\\mathbf{v}) = A\\mathbf{v}\\) geometrically?</p> <p>When we multiply A by a vector \\(\\mathbf{v}\\) in \\(\\mathbb{R}^2\\), the x component of the vector is unchanged and the sign of the y component of the vector is reversed. The transformation \\(\\mathbf{v} \\to A\\mathbf{v}\\) reflects the xy-plane across the x axis.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#example-5","title":"Example 5","text":"<p>How could we find a linear transformation \\(T : \\mathbb{R}^3 \\to \\mathbb{R}^2\\) that takes three dimensional space to two dimensional space? Choose any 2 by 3 matrix A and define \\(T(\\mathbf{v}) = A\\mathbf{v}\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#describing-tv","title":"Describing T(v)","text":"<p>How much information do we need about T to determine \\(T(\\mathbf{v})\\) for all \\(\\mathbf{v}\\)? If we know how T transforms a single vector \\(\\mathbf{v}_ 1\\), we can use the fact that T is a linear transformation to calculate \\(T(c\\mathbf{v}_ 1)\\) for any scalar c. If we know \\(T(\\mathbf{v}_ 1)\\) and \\(T(\\mathbf{v}_ 2)\\) for two independent vectors \\(\\mathbf{v}_ 1\\) and \\(\\mathbf{v}_ 2\\), we can predict how T will transform any vector \\(c\\mathbf{v}_ 1 + d \\mathbf{v}_ 2\\) in the plan spanned by \\(\\mathbf{v}_ 1\\) and \\(\\mathbf{v}_ 2\\). If we wish to know \\(T(\\mathbf{v})\\) for all vectors \\(\\mathbf{v}\\) in \\(\\mathbb{R}^n\\), we just need to know \\(T(\\mathbf{v}_ 1), T(\\mathbf{v}_ 2), \\cdots, T(\\mathbf{v}_ n)\\) for any basis \\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ n\\) of the intput space. This is because any \\(\\mathbf{v}\\) in the input space can be written as a linear combination of basis vectors, and we know that T is linear:</p> \\[ \\mathbf{v} = c_1 \\mathbf{v}_ 1 + c_2 \\mathbf{v}_ 2 + \\cdots + c_n \\mathbf{v}_ n \\] \\[ T(\\mathbf{v}) = c_1 T(\\mathbf{v}_ 1) + c_2 T(\\mathbf{v}_ n) + \\cdots + c_n T(\\mathbf{v}_ n) \\] <p>This is how we get from a (coordinate-free) linear transformation to a (coordinate based) matrix; the \\(c_i\\) are our coordinates. Once we've chosen a basis, every vector \\(\\mathbf{v}\\) in the space can be written as a combination of basis vectors in exactly one way. The coefficients of those vectors are the <code>coordinates</code> of \\(\\mathbf{v}\\) in that basis.</p> <p>Coordinates come from a basis; changing the basis changes the coordinates of vectors in the space. We may not use the standard basis all the time - we sometimes want to use a basis of eigenvectors or some other basis</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#the-matrix-of-a-linear-transformation","title":"The Matrix of a Linear Transformation","text":"<p>Given a linear transformation T, how do we construct a matrix A that represents it?</p> <p>First, we have to choose two bases:</p> <ul> <li>\\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ n\\) of \\(\\mathbb{R}^n\\) to give coordinates to the input vectors;</li> <li>\\(\\mathbf{w}_ 1, \\mathbf{w}_ 2, \\cdots, \\mathbf{w}_ m\\) of \\(\\mathbb{R}^m\\) to give coordinates to the output vectors.</li> </ul> <p>We want to find a matrix A so that \\(T(\\mathbf{v}) = A\\mathbf{v}\\), where \\(\\mathbf{v}\\) and \\(A\\mathbf{v}\\) get their coordinates from these bases.</p> <p>The first column of A consists of the coefficients \\(a_{11}, a_{21}, \\cdots, a_{1m}\\) of \\(T(\\mathbf{v}_ 1) = a_{11}\\mathbf{w}_ 1 + a_{21}\\mathbf{w}_ 2 + \\cdots + a_{1m}\\mathbf{w}_ m\\). The entries of column i of the matrix A are determined by \\(T(\\mathbf{v}_ i) = a_{1i} \\mathbf{w}_ 1 + a_{2i} \\mathbf{w}_ 2 + \\cdots + a_{mi} \\mathbf{w}_ m\\). Because we've guaranteed that \\(T(\\mathbf{v}_ i) = A\\mathbf{v}_ i\\) for each basis vector \\(\\mathbf{v}_ i\\) and because T is linear, we know that \\(T(\\mathbf{v}) = A\\mathbf{v}\\) for all vectors \\(\\mathbf{v}\\) in the input space.</p> <p>In the example of the projection matrix, \\(n = m = 2\\). The transformation T projects every vector in the plane onto a line. In this example, it makes sense to use the same basis for the input and the output. To make our calculations as simple as possible, we'll choose \\(\\mathbf{v}_ 1\\) to be a unit vector on the line of projection and \\(\\mathbf{v}_ 2\\) to be a unit vector perpendicular to \\(\\mathbf{v}_ 1\\). Then:</p> \\[ T(c_1 \\mathbf{v}_ 1 + c_2 \\mathbf{v}_ 2) = c_1 \\mathbf{v}_ 1 + \\mathbf{0} \\] <p>and the matrix of the projection transformation is just \\(A = \\begin{bmatrix}1 &amp; 0 \\\\ 0 &amp; 0\\end{bmatrix}\\).</p> \\[ A\\mathbf{v} = \\begin{bmatrix}1 &amp; 0 \\\\ 0 &amp; 0 \\end{bmatrix} \\begin{bmatrix}c_1 \\\\ c_2 \\end{bmatrix} = \\begin{bmatrix}c_1 \\\\ 0\\end{bmatrix} \\] <p>This is a nice matrix! If our chosen basis consists of eigenvectors then the matrix of the transformation will be the diagonal matrix \\(\\Lambda\\) with eigenvalues on the diagonal.</p> <p>To see how important the choice of basis is, let's use the standard basis for the linear transformation that projects the plane onto a line at a \\(45^{\\circ}\\) angle. If we choose \\(\\mathbf{v}_ 1 = \\mathbf{w}_ 1 = \\begin{bmatrix}1 \\\\ 0\\end{bmatrix}\\) and \\(\\mathbf{v}_ 2 = \\mathbf{w}_ 2 = \\begin{bmatrix}0 \\\\ 1\\end{bmatrix}\\), we get the projection matrix \\(P = \\frac{\\mathbf{a}\\mathbf{a}^T}{\\mathbf{a}^T\\mathbf{a}} = \\begin{bmatrix}1/2 &amp; 1/2 \\\\ 1/2 &amp; 1/2\\end{bmatrix}\\). We can check by graphing that this is the correct matrix, but calculating P directly is more difficult for this basis than it was with a basis of eigenvectors.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#example-6-t-d-dx","title":"Example 6: T = d / dx","text":"<p>Let T be a transformation that takes the derivative:</p> \\[ T(c_1 + c_2x + c_3 x^2) = c_2 + 2 c_3 x \\] <p>The input space is the three dimensional space of quadratic polynomials \\(c_1 + c_2 x + c_3 x^2\\) with basis \\(\\mathbf{v}_ 1 = 1, \\mathbf{v}_ 2 = x, \\mathbf{v}_ 3 = x^2\\). The output space is a two dimensional subspace of the input space with \\(\\mathbf{w}_ 1 = \\mathbf{v}_ 1 = 1\\) and \\(\\mathbf{w}_ 2 = \\mathbf{v}_ 2 = x\\).</p> <p>This is a linear transformation! So we can find \\(A = \\begin{bmatrix}0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 2\\end{bmatrix}\\) and write the transformation as a matrix multiplication:</p> \\[ T(\\begin{bmatrix}c_1 \\\\ c_2 \\\\ c_3 \\end{bmatrix}) = A\\begin{bmatrix}c_1 \\\\ c_2 \\\\ c_3 \\end{bmatrix} = \\begin{bmatrix}c_2 \\\\ 2c_3\\end{bmatrix} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/06_transform/#conclusion","title":"Conclusion","text":"<p>For any linear transformation T we can find a matrix A so that \\(T(\\mathbf{v}) = A\\mathbf{v}\\). If the transformation is invertible, the inverse transformation has the matrix \\(A^{-1}\\). The product of two transformations \\(T_1 : \\mathbf{v} \\to A_1 \\mathbf{v}\\) and \\(T_2 : \\mathbf{w} \\to A_2 \\mathbf{w}\\) corresponds to the product \\(A_2A_1\\) of their matrices. This is where matrix multiplication came from!</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/","title":"Change of Basis and Image Compression","text":"<p>We've learned that computations can be made easier by an appropriate choice of basis. One application of this principle is to image compression. Lecture videos, music, and other data sources contain a lot of information; that information can be efficiently stored and transformitted only after we change the basis used to record it.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#compression-of-image","title":"Compression of Image","text":"<p>Suppose one frame of our lecture video is 512 by 512 pixels and that the video is recorded in black and white. the camera records a brightness level for each of the \\(512^2\\) pixels; in this sense, each frame of video is a vector in a \\(512^2\\) dimensional vector space.</p> <p>The standard basis for this space has a vector for each pixel. Transformitting the values of all \\(512^2\\) components of each frame using the standard basis would require far too much bandwidth, but if we change our basis according to the JPEG image compression standard we can transmit a fairly good copy the video very efficiently.</p> <p>For example, if we're reporting light level pixel by pixel, there's no efficient way to transmit the information \"the entire frame is black\". However, if one of our basis vectors corresponds to all pixels having the same light level(say 1), we can very efficiently transmit a recording of a blank blackboard.</p> <p>Along with a vector of all 1's, we might choose a basis vector that alternates 1's and -1's, or one that's half 1's and half -1's corresponding to an image that's bright on the left and dark on the right. Our choice of basis will directly affect how much data we need to download to watch a video, and the best choice of basis for algebra lectures might differ from the best choice for action movies!</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#fourier-basis-vectors","title":"Fourier Basis Vectors","text":"\\[ \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1\\end{bmatrix}, \\begin{bmatrix} 1 \\\\ \\omega \\\\ \\omega^2 \\\\ \\omega^3 \\\\ \\omega^4 \\\\ \\omega^5 \\\\ \\omega^6 \\\\ \\omega^ 7 \\end{bmatrix}, \\begin{bmatrix} 1 \\\\ \\omega^2 \\\\ \\omega^4 \\\\ \\omega^6 \\\\ \\omega^8 \\\\ \\omega^{10} \\\\ \\omega^{12} \\\\ \\omega^{14} \\end{bmatrix}, \\cdots, \\begin{bmatrix} 1 \\\\ \\omega^7 \\\\ \\omega^{14} \\\\ \\omega^{21} \\\\ \\omega^{28} \\\\ \\omega^{35} \\\\ \\omega^{42} \\\\ \\omega^{49} \\end{bmatrix} \\] <p>The best known basis is the Fourier basis, which is closely related to the Fourier matrices we studied earlier. The basis used by JPED is made up of cosines - the real part of \\(\\omega^{jk}\\).</p> <p>This method breaks the 512 by 512 rectangle of pixels into blocks that are 8 pixels on a side, each block containing 64 pixels total. The brightness informaton for those pixels is then compressed, possibly by eliminating all coefficients below some threshold chosen so that we can hardly see the difference once they're gone.</p> \\[ \\text{signal } \\mathbf{x} \\xrightarrow{lossless} \\text{64 coefficients } c \\xrightarrow{\\text{lossy compression}} \\hat{c}(\\text{many zeros}) \\to \\mathbf{\\hat{x}} = \\Sigma \\hat{c_i} \\mathbf{v}_ i \\] <p>In video, not only should we consider compressing each frame, we can also consider compressing sequences of frames. There's very little difference between one frame and the next. If we do it right, we only need to encode and compress the difference between frames, not every frame in its entirely.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#the-haar-wavelet-basis","title":"The Haar Wavelet Basis","text":"\\[ \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1\\end{bmatrix}, \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ -1 \\\\ -1 \\\\ -1 \\\\ -1\\end{bmatrix}, \\begin{bmatrix} 1 \\\\ 1 \\\\ -1 \\\\ -1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix}, \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 1 \\\\ 1 \\\\ -1 \\\\ -1 \\end{bmatrix}, \\begin{bmatrix} 1 \\\\ -1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix}, \\cdots, \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 1 \\\\ -1 \\end{bmatrix} \\] <p>The closet competitor to the JPEG encoding method uses a wavelet basis. (JPEG2000 improves on the Haar wavelets above.) In Haar's wavelet basis for \\(\\mathbb{R}^8\\), the non-zero entries are half 1's and half -1's (except for the vector of all 1's). However, half or even three quarters of a basis vector's entries may be 0. These vectors are chosen to be orthogonal and can be adjusted to be orthonormal.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#comppression-and-matrices","title":"Comppression and Matrices","text":"<p>Linear algebra is used to find the coefficients \\(c_i\\) in the change of basis from the standard basis (light level for each pixel) to Fourier or wavelet basis. For example, we might want to write:</p> \\[ \\mathbf{x} = c_1 \\mathbf{w}_ 1 + \\cdots + c_8 \\mathbf{w}_ 8 \\] <p>But this is just a linear combination of the wavelet basis vectors. If W is the matrix whose columns are the wavelet vectors, then our task is simply to solve for \\(\\mathbf{c}\\):</p> \\[ \\mathbf{x} = W \\begin{bmatrix}c_1 \\\\ c_2 \\\\ \\vdots \\\\ c_8\\end{bmatrix} \\] <p>So \\(\\mathbf{c} = W^{-1}\\mathbf{x}\\)</p> <p>Our calculations will be faster and easier if we don't have to spend a lot of time inverting a matrix (e.g. if \\(W^{-1} = W^T\\)) or multiplying by the inverse. So in the field of image compression, the criteria for a good basis are:</p> <ul> <li>Multiplication by the basis matrix and its inverse in fast(as in the FFT or in the wavelet basis).</li> <li>Good compression - the image can be approximated using only a few basis vectors. Most components \\(c_i\\) are small -safely set to zero.</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#change-of-basis","title":"Change of Basis","text":""},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#vectors","title":"Vectors","text":"<p>Let the columns of matrix W be the basis vectors of the new basis. Then if \\(\\mathbf{x}\\) is a vector in the old basis, we can convert it to a vector \\(\\mathbf{c}\\) in the new basis using the relation:</p> \\[ \\mathbf{x} = W \\mathbf{c} \\]"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#transformation-matrices","title":"Transformation Matrices","text":"<p>Suppose we have a linear transformation T. If T has the matrix A when working with the basis \\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ 8\\) and T has the matrix B when working with the basis \\(\\mathbf{w}_ 1, \\mathbf{w}_ 2, \\cdots, \\mathbf{w}_ 8\\), it turns out that A and B must be similar matrices. In other words, \\(B = M^{-1}AM\\) for some change of basis matrix M.</p> <p>Reminder: If we have a basis \\(\\mathbf{v}_ 1, \\mathbf{v}_ 2, \\cdots, \\mathbf{v}_ 8\\) and we know \\(T(\\mathbf{v}_ i)\\) for each i, then we can use the fact that T is a linear transformation to find \\(T(\\mathbf{v}) = c_1 T(\\mathbf{v}_ 1) + c_2 T(\\mathbf{v}_ 2) + \\cdots + c_8 T(\\mathbf{v}_ 8)\\) for any vector \\(\\mathbf{v} = c_1 \\mathbf{v}_ 1 + c_2 \\mathbf{v}_ 2 + \\cdots + c_8 \\mathbf{v}_ 8\\) in the space. The entries of column i of the matrix A are the coefficients of the output vector \\(T(\\mathbf{v}_ i)\\).</p> <p>If our basis consists of eigenvectors of our transformation, i.e. if \\(T(\\mathbf{v}_ i) = \\lambda_i\\mathbf{v}_ i\\), then \\(A = \\Lambda\\), the (diagonal) matrix of eigenvalues. It would be wonderful to use a basis of eigenvectors for image processing, but finding such a basis requires far more computation than simply using a Fourier or wavelet basis.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/07_compression/#summary","title":"Summary","text":"<p>When we change bases, the coefficients of our vectors change according to the rule \\(\\mathbf{x} = W\\mathbf{c}\\). Matrix entries change according to a rule \\(B = M^{-1}AM\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/","title":"Left and Right Inverse; Pseudoinverse","text":"<p>Although pseudoinverse will not appear on the exam, this lecture will help us to prepare.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#two-sided-inverse","title":"Two Sided Inverse","text":"<p>A <code>2-sided inverse</code> of a matrix A is a matrix \\(A^{-1}\\) for which \\(AA^{-1} = I = A^{-1}A\\). This is what we've called the <code>inverse</code> of A. Here \\(r = n = m\\); the matrix A has full rank.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#left-inverse","title":"Left Inverse","text":"<p>Recall that A has full column rank if its columns are independent; i.e. if \\(r = n\\). In this case the nullspace of A contains just the zero vector. The equation \\(A\\mathbf{x} = \\mathbf{b}\\) either has exactly one solution \\(\\mathbf{x}\\) or is not solvable.</p> <p>The matrix \\(A^TA\\) is an invertible n by n symmetric matrix, so \\((A^TA)^{-1} A^TA = I\\). We say \\(A_{left}^{-1} = (A^TA)^{-1}A\\) is <code>left inverse</code> of A. (There may be other left inverses as well, but this is our favorate.) The fact that \\(A^TA\\) is invertible when A has full column rank was central to our discussion of least squares.</p> <p>Note that \\(AA_{left}^{-1}\\) is an m by m matrix which only equals the identity if \\(m = n\\). A rectangular matrix can't have a two sided inverse because either that matrix or its trnaspose has z nonzero nullspace.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#right-inverse","title":"Right Inverse","text":"<p>If A has full row rank, then \\(r = m\\). The nullspace of \\(A^T\\) contains only the zero vector; the rows of A are independent. The equation \\(A \\mathbf{x} =\\mathbf{b}\\) always has at least one solution; the nullspace of A has dimension \\(n - m\\), so there will be \\(n - m\\) free variables and (if \\(n &gt; m\\)) infinitely many solutions.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#pseudoinverse","title":"Pseudoinverse","text":"<p>An invertible matrix(\\(r = m = n\\)) has only the zero vector in its nullspace and left nullspace. A matrix with full column rank \\(r = n\\) has only the zero vector in its nullspace. A matrix with full row rank \\(r = m\\) has only the zero vector in its left nullspace. The remaining case to consider is a matrix A for which \\(r &lt; n\\) and \\(r &lt; m\\).</p> <p>If A has full column rank and \\(A_{left}^{-1} = (A^TA)^{-1} A^T\\), then</p> \\[ AA_{left}^{-1} = A(A^TA)^{-1} A^T = P \\] <p>is the matrix which projects \\(\\mathbf{R}^m\\) onto the column space of A. This is as close as we can get to the product \\(AM = I\\).</p> <p>Similarly, if A has full row rank then \\(A_{right}^{-1}A = A^T(AA^T)^{-1}A\\) is the matrix which projects \\(\\mathbf{R}^n\\) onto the row space of A.</p> <p>It's nontriviall nullspaces that cause trouble when we try to invert matrices. If \\(A\\mathbf{x} =\\mathbf{0}\\) for some nonzero \\(\\mathbf{x}\\), then there's no hope of finding a matrix \\(A^{-1}\\) that will reverse this process to give \\(A^{-1}\\mathbf{0} = \\mathbf{x}\\).</p> <p>The vector \\(A\\mathbf{x}\\) is always in the column space of A. In fact, the correspondence between vectors \\(\\mathbf{x}\\) in the (r dimensional) row space and vectors \\(A\\mathbf{x}\\) in the (r dimensional) column space is one-to-one. In other words, if \\(\\mathbf{x} \\ne \\mathbf{y}\\) are vectors in the row space of A then \\(A\\mathbf{x} \\ne A\\mathbf{y}\\) in the column space of A. (The proof of this would make a good exam question.)</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#proof-that-if-x-y-then-ax-ay","title":"Proof that If x != y then Ax != Ay","text":"<p>Suppose the statement is false. Then we can find \\(\\mathbf{x} \\ne \\mathbf{y}\\) in the row space of A for which \\(A\\mathbf{x}=A\\mathbf{y}\\). But then \\(A(\\mathbf{x} - \\mathbf{y}) = \\mathbf{0}\\), so \\(\\mathbf{x} - \\mathbf{y}\\) is in the nullspace of A. But the row space of A is closed under linear combinations(like subtraction), so \\(\\mathbf{x} - \\mathbf{y}\\) is also in the row space. Then only vector in both the nullspace and the row space is the zero vector, so \\(\\mathbf{x} - \\mathbf{y} =\\mathbf{0}\\). This contradicts our assumption that \\(\\mathbf{x}\\) and \\(\\mathbf{y}\\) are not equal to each other.</p> <p>We conclude that the mapping \\(\\mathbf{x} \\mapsto A\\mathbf{x}\\) from row space to column space is invertible. The inverse of this operation is called the <code>pseudoinverse</code> and is very useful to statisticians in their work with linear regression - they might not be able to guarantee that their matrices have full column rank \\(r = n\\).</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#finding-the-pseudoinverse-a-plus","title":"Finding the Pseudoinverse A plus","text":"<p>The <code>pseudoinverse</code> \\(A^+\\) of A is the matrix for which \\(\\mathbf{x} = A^+A\\mathbf{x}\\) for all \\(\\mathbf{x}\\) in the row space of A. The nullspace of \\(A^+\\) is the nullspace of \\(A^T\\).</p> <p>We start from the singular value decomposition \\(A = U \\Sigma V^T\\). Recall that \\(\\Sigma\\) is a m by n matrix whose entries are zero except for the singular values \\(\\sigma_1, \\sigma_2, \\cdots, \\sigma_r\\) which appear on the diagonal of its first r rows. The matrices U and V are orthonormal and therefore easy to invert. We only need to find a pseudoinverse for \\(\\Sigma\\).</p> <p>The closet we can get to an inverse for \\(\\Sigma\\) is an n by m matrix \\(\\Sigma^+\\) whose first r rows have \\(1/\\sigma_1, 1/\\sigma_2, \\cdots, 1/\\sigma_r\\) on the diagonal. If \\(r = n = m\\) then \\(\\Sigma^+ = \\Sigma^{-1}\\). Always, the product of \\(\\Sigma\\) and \\(\\Sigma^+\\) is a square matrix whose first r diagonal entries are 1 and whose orther entries are 0.</p> <p>If \\(A = U \\Sigma V^T\\) then its pseudoinverse is \\(A^{+} = V\\Sigma^+U^T\\). Recall that \\(Q^T = Q^{-1}\\) for orthogonal matrices U, V or Q.</p> <p>We would get a similar result if we included non-zero entries in the lower right corner of \\(\\Sigma^+\\), but we prefer not to have extra non-zero entries.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Linear-Algebra/Positive-Definite-Matrices-and-Applications/08_pseudoinverse/#conclusion","title":"Conclusion","text":"<p>Although pseudoinverse will not appear on the exam, many of the topics we covered while discussing them(the four subspaces, the SVD, orthogonal matrices) are likely to appear.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/00_summary/","title":"Summary","text":"<p>TODO</p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/","title":"Sample Space and Probability","text":"<p>The main objective for probability is to develop the art of describing uncertainty in terms of probabilistic models, as well as the skill of probabilitic reasoning.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#sets","title":"Sets","text":"<p>A <code>set</code> is a collection of objects, which are the <code>elements</code> of sets.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#set-notes","title":"Set Notes","text":"<ul> <li>If S is a set and x is an element of S, we write \\(x \\in S\\);</li> <li>If x is not an element of S, we write \\(x \\notin S\\);</li> <li>A set with no elements called <code>empty set</code>, denoted by \\(\\emptyset\\);</li> <li>If S contains a finite number of elements, we write it as a list of elements in braces:</li> </ul> \\[ S = \\{ x_1, x_2, \\cdots, x_n \\} \\] <ul> <li>If S contains infinitely many elements which can be enumerated in a list, we say S is <code>countably infinite</code> and write:</li> </ul> \\[ S = \\{ x_1, x_2, \\cdots \\} \\] <ul> <li>We can alternatively make the set of all x with a certain property P, (the symbol \"|\" can be read as \"such x that satisfy P\"):</li> </ul> \\[ \\{ x | x \\text{ statisfies P} \\} \\] <ul> <li>If every element of S is also a an element of T, we say that S is a <code>subset</code> of T, denoted as \\(S \\subset T\\) or \\(T \\supset S\\);</li> <li>If \\(S \\subset T\\) and \\(T \\subset S\\), the two sets are <code>equal</code>, and we write \\(S = T\\);</li> <li>It's also expedient to introduce a <code>universal set</code>, denoted by \\(\\Omega\\), which contains all objects of interest in a particular context.</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#set-operations","title":"Set Operations","text":"<ul> <li>The <code>Component</code> of a set S, with respect to the universe \\(\\Omega\\) is the set \\(\\{x \\in \\Omega | x \\notin S \\}\\), denoted by \\(S^c\\). \\(\\Omega^c = \\emptyset\\);</li> <li>The <code>Union</code> of two sets S and T is the set of all elements that belong to S or T, denoted as \\(S \\cup T\\);</li> <li>The <code>Intersection</code> of two sets S and T is the set of all elements that belong to both S and T, denoted as \\(S \\cap T\\);</li> <li>Several sets are said to be <code>disjoint</code> if no two of them have a common element;</li> <li>A collection of sets is said to be a <code>partition</code> of a set S if the sets in the collection are disjoint and their union is S.</li> </ul> <p>Sets and the associated operations are easy to visualize in terms of Venn diagrams.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#the-algebra-of-sets","title":"The Algebra of Sets","text":"<p>Set operations have several properties:</p> <ul> <li>\\(S \\cup T\\) = \\(T \\cup S\\)</li> <li>\\(S \\cup (T \\cup U)\\) = \\((S \\cup T) \\cup S\\)</li> <li>\\(S \\cap (T \\cup U) = (S \\cap T) \\cup (S \\cap U)\\)</li> <li>\\(S \\cup (T \\cap U) = (S \\cup T) \\cap (S \\cup U)\\)</li> <li>\\((S^c)^c = S\\)</li> <li>\\(S \\cap S^c = \\emptyset\\)</li> <li>\\(S \\cup \\Omega = \\Omega\\)</li> <li>\\(S \\cap \\Omega = S\\)</li> </ul> <p>Two particularly useful properties are given by <code>de MOrgan's laws</code>:</p> \\[ (\\bigcup_n S_n)^c = \\bigcap_n S_n^c \\] \\[ (\\bigcap_n S_n)^c = \\bigcup_n S_n^c \\]"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#probabilistic-models","title":"Probabilistic Models","text":"<p>A probabilistic model is a mathematical description of an uncertain situation. It has two elements:</p> <ol> <li>The <code>sample space</code> \\(\\Omega\\), which is the set of all possible outcomes of an experiment;</li> <li>The <code>probability law</code>, which assigns to a set A of possible outcomes(also called an <code>event</code>) a nonnegtive number \\(P(A)\\)(called the <code>probability</code> of A) that encodes our knowledge or belief about the collective <code>likelihood</code> of the elements of A.</li> </ol> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#sample-space-and-events","title":"Sample Space and Events","text":"<p>Every probabilistic model involves an underlying process, called the <code>experiment</code>, which produces exactly one out of several possible <code>outcomes</code>.  The set of all possible outcomes is called the <code>sample space</code> of the experiment denoted by \\(\\Omega\\). A subset of the sample space, that is, a collection of possible outcomes, is called <code>event</code>.</p>"},{"location":"%E6%95%B0%E5%AD%A6/Probability/01_sample_space_and_probability/#choosing-an-appropriate-sample-space","title":"Choosing an Appropriate Sample Space","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/","title":"\u6570\u5b66\u57fa\u7840","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/#_1","title":"\u7ebf\u6027\u9ad8\u65af\u6a21\u578b","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/#kalman-filter","title":"kalman filter","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/#pca","title":"PCA\uff08\u4e3b\u6210\u6210\u5206\u5206\u6790\uff09","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/#mle","title":"MLE\uff1a\u6781\u5927\u4f3c\u7136\u6982\u7387","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/#map","title":"MAP\uff1a\u6700\u5927\u540e\u9a8c\u4f30\u8ba1","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/Arduino%E5%AD%A6%E4%B9%A0%EF%BC%88esp32%EF%BC%89/","title":"Arduino\u5b66\u4e60\uff08esp32\uff09","text":"<p>\u6ce8\u610f\uff1a esp32\u6709\u81ea\u5df1\u7684SDK\uff0c\u53ebESP-IDF\u3002vscode\u91cc\u6709\u4e00\u4e2a\u4e13\u95e8\u7684ide\u63d2\u4ef6espressif idf</p> <p>\u4f46esp32\u540c\u6837\u53ef\u4ee5\u7528arduino\u7684SDK\uff0cvscode\u91cc\u7684\u63d2\u4ef6\u662fplatformIO IDE \u5efa\u8bae\u4f7f\u7528arduino</p> <p>\u5b66\u4e60\u6559\u7a0b</p> <p>esp32\u7684\u6280\u672f\u89c4\u683c\uff1a </p> <p>esp32\u7684\u4f9b\u7535\uff083.3v\uff09\uff1a\u4f46\u662fesp32\u5185\u7f6e\u4e24\u4e2a\u7535\u538b\u8f6c\u6362\uff1a</p> <p>1.usb 5v \u8f6c3.3v 2.vin\u5f15\u811a\uff1a7-15v \u8f6c3.3v</p> <p></p> <p>ESP32\u4e00\u5171\u6709\u4e09\u4e2a\u4e32\u53e3\uff0cArduino\u4e2d\u901a\u8fc7<code>Serial</code>\u3001<code>Serial1</code>\u3001<code>Serial2</code>\u63a7\u5236\u8fd9\u4e09\u4e2a\u4e32\u53e3\u3002  # \u4f7f\u7528Arduino\u5f00\u53d1ESP32\uff0802\uff09\uff1a\u4e32\u53e3\uff08Serial port\uff09\u4f7f\u7528\u8bf4\u660e</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/Arduino%E5%AD%A6%E4%B9%A0%EF%BC%88esp32%EF%BC%89/#arduino","title":"Arduino\u5e38\u7528\u7684\u4e00\u4e9b\u5e93","text":"<p>LVGL\uff1a\u53ef\u89c6\u5316gui\u5e93 \u5982\u4f55\u628aLVGL8\u79fb\u690d\u5230ESP32\uff0c\u4f7f\u7528vscode\u7684pio\u73af\u5883arduino\u5f00\u53d1 http://wiki.waaax.top/index.php?title=ESP32_LVGL</p> <p>\u8f7b\u91cf\u7ea7\u64cd\u4f5c\u7cfb\u7edf\uff1aFreeRTOS</p> <p>servo\uff1a\u8235\u673a\u5e93 simplefoc\uff1a\u65e0\u5237\u7535\u673a\u548c\u6b65\u8fdb\u7535\u673a\u5e93</p> <p>\u770b\u8fd9\u4e2a\u89c6\u9891</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/can%E9%80%9A%E4%BF%A1/","title":"Can\u901a\u4fe1","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/can%E9%80%9A%E4%BF%A1/#can","title":"can\u7684\u7ec4\u6210\u65b9\u5f0f","text":"<p>CAN\u7684\u7ec4\u6210\u4e00\u822c\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a 1. \u4e00\u79cd\u662fCPU\u4e0eCAN\u63a7\u5236\u5668\u96c6\u6210\u5230\u4e00\u8d77\u3001\u518d\u5916\u63a5CAN\u6536\u53d1\u5668\uff1b 2. \u53e6\u4e00\u79cd\u662fCPU\u4e0eCAN\u63a7\u5236\u5668\u5206\u5f00\u7684\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u914d\u7f6eCAN\u63a5\u53e3\u7535\u8def\uff0c\u6bd4\u8f83\u9ebb\u70e6\u3002 3. STM32\u4e2d\u5c31\u662f\u91c7\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c06CAN\u63a5\u53e3\u96c6\u6210\u5728\u82af\u7247\u5185\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u518d\u5916\u63a5CAN\u6536\u53d1\u5668\uff08\u987e\u540d\u601d\u4e49\uff0c\u53ef\u53d1\u9001\uff0c\u53ef\u63a5\u6536\uff09\uff0c\u5e38\u7528\u7684\u6709TJA1050\u6216\u800582C250\u3002 4.CAN\u6536\u53d1\u5668\u662f\u7528\u4e8eTTL\u7535\u5e73\u4e0e\u5dee\u5206\u7535\u538b\u4fe1\u53f7\u76f8\u4e92\u8f6c\u6362\u7684\uff0cTTL\u7535\u5e73\u5373\u5355\u7247\u673a\u5f15\u811a\u76f4\u63a5\u63d0\u4f9b\u7684\u7535\u5e73\uff0c\u903b\u8f910\u4ee3\u8868\u4f4e\u7535\u5e73\uff0c\u903b\u8f911\u4ee3\u8868\u9ad8\u7535\u5e73\uff1b\u800c\u5dee\u5206\u7535\u538b\u4fe1\u53f7\u5219\u4e3a\u56fa\u5b9a\u7684\u7535\u538b\u503c\u3002</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/can%E9%80%9A%E4%BF%A1/#can_1","title":"can\u7684\u901a\u4fe1\u8fc7\u7a0b","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/can%E9%80%9A%E4%BF%A1/#can_2","title":"can\u7684\u4f20\u8f93\u539f\u7406","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/can%E9%80%9A%E4%BF%A1/#stm32can","title":"STM32\u7684can","text":"<p>\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0 STM32 \u7684\u6240\u6709\u578b\u53f7\u82af\u7247\u4e2d\u90fd\u5177\u6709 bxCAN \u63a7\u5236\u5668 (Basic Extended CAN)\uff0c\u5373\u57fa\u672c\u6269\u5c55 CAN\uff0c\u5b83\u652f\u6301 CAN \u534f\u8bae 2.0A(\u4e0d\u652f\u6301\u6269\u5c55\u683c\u5f0f) \u548c2.0B \u6807\u51c6\u3002 \u5b83\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\uff0c\u4ee5\u6700\u5c0f\u7684 CPU \u8d1f\u8377\u6765\u9ad8\u6548\u5904\u7406\u5927\u91cf\u6536\u5230\u7684\u62a5\u6587\u3002\u5b83\u4e5f\u652f\u6301\u62a5\u6587\u53d1\u9001\u7684\u4f18\u5148\u7ea7\u8981\u6c42(\u4f18\u5148\u7ea7\u7279\u6027\u53ef\u8f6f\u4ef6\u914d\u7f6e)\u3002\u5bf9\u4e8e\u5b89\u5168\u7d27\u8981\u7684\u5e94\u7528\uff0cbxCAN \u63d0\u4f9b\u6240\u6709\u652f\u6301\u65f6\u95f4\u89e6\u53d1\u901a\u4fe1\u6a21\u5f0f\u6240\u9700\u7684\u786c\u4ef6\u529f\u80fd\u3002</p> <p>\u5728 STM32 \u4e92\u8054\u578b\u4ea7\u54c1\u4e2d\uff0c\u5e26\u6709 2 \u4e2a CAN \u63a7\u5236\u5668\uff0c\u800c\u5e38\u7528\u7684 STM32F103ZET6 \u5c5e\u4e8e\u589e\u5f3a\u578b\uff0c\u4e0d\u662f\u4e92\u8054\u578b\uff0c\u53ea\u6709 1 \u4e2a CAN \u63a7\u5236\u5668</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/freeRTOS/","title":"freeRTOS","text":"<p>\u6700\u5c0f\u7684\u64cd\u4f5c\u7cfb\u7edf\uff1a\u80fd\u591f\u5b9e\u73b0\u4efb\u52a1\u4e4b\u95f4\u7684\u8c03\u5ea6\uff08\u6bcf\u4e2a\u4efb\u52a1\u6709\u81ea\u5df1\u7684\u4f18\u5148\u7ea7\uff0c\u53ef\u4ee5\u591a\u7ebf\u7a0b\uff09 </p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/","title":"\u5355\u7247\u673a\u901a\u4fe1\u5168\u89e3","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#1","title":"1. \u5355\u7247\u673a\u901a\u4fe1\u7684\u79cd\u7c7b","text":"<p>\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#11","title":"1.1. \u540c\u6b65\u548c\u5f02\u6b65","text":"<pre><code>\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u6309\u7167\u540c\u4e00\u4e2a\u65f6\u949f\u8282\u62cd\u5de5\u4f5c\u5c31\u53eb\u540c\u6b65\u3002\n\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u6ca1\u6709\u7edf\u4e00\u7684\u65f6\u949f\u8282\u62cd\u3001\u800c\u5404\u81ea\u6309\u7167\u81ea\u5df1\u7684\u8282\u62cd\u5de5\u4f5c\u5c31\u53eb\u5f02\u6b65\u3002\n</code></pre>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#12","title":"1.2 \u4e32\u884c\u901a\u4fe1\u4e0e\u5e76\u884c\u901a\u4fe1","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#13","title":"1.3 \u5355\u5de5\u901a\u4fe1\u3001\u534a\u53cc\u5de5\u901a\u4fe1\u548c\u5168\u53cc\u5de5\u901a\u4fe1","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#2","title":"2.\u4e32\u53e3\u901a\u4fe1\u7684\u539f\u7406","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#21usartuart","title":"2.1\u4e32\u53e3\u901a\u4fe1\u5c5e\u4e8e\u5168\u53cc\u5de5\u4e32\u884c\uff0c\u65e2\u6709\u540c\u6b65(USART)\u4e5f\u6709\u5f02\u6b65(UART)","text":"<ol> <li>USART\uff1a\u901a\u7528\u540c\u6b65\u5f02\u6b65\u6536\u53d1\u5668(Universal Synchronous Asynchronous Receiver and Transmitter)\u662f\u4e00\u4e2a\u4e32\u884c\u901a\u4fe1\u8bbe\u5907\uff0c\u53ef\u4ee5\u7075\u6d3b\u5730\u4e0e\u5916\u90e8\u8bbe\u5907\u8fdb\u884c\u5168\u53cc\u5de5\u6570\u636e\u4ea4\u6362\uff0c\u65e2\u53ef\u4ee5\u540c\u6b65\u901a\u4fe1\u4e5f\u53ef\u4ee5\u5f02\u6b65\u901a\u4fe1\u3002  </li> <li>UART\uff1a\u901a\u7528\u5f02\u6b65\u6536\u53d1\u5668(Universal Asynchronous Receiver and Transmitter)\uff0c\u5b83\u662f\u5728 USART \u57fa\u7840\u4e0a\u88c1\u526a\u6389\u4e86\u540c\u6b65\u901a\u4fe1\u529f\u80fd\uff08\u65f6\u949f\u540c\u6b65\uff09\uff0c\u53ea\u6709\u5f02\u6b65\u901a\u4fe1\u3002\u7b80\u5355\u533a\u5206\u540c\u6b65\u548c\u5f02\u6b65\u5c31\u662f\u770b\u901a\u4fe1\u65f6\u9700\u4e0d\u9700\u8981\u5bf9\u5916\u63d0\u4f9b\u65f6\u949f\u8f93\u51fa\uff0c\u6211\u4eec\u5e73\u65f6\u7528\u7684\u4e32\u53e3\u901a\u4fe1\u57fa\u672c\u90fd\u662f UART\u3002</li> <li> <p>UART\u3001USART\u4e0d\u662f\u534f\u8bae\uff0c\u800c\u662f\u4e00\u79cd\u201c\u8bbe\u5907\u201d\u3002\u56e0\u4e3acpu\u5904\u7406\u6570\u636e\u7684\u6700\u5c0f\u5355\u5143\u662f\u5b57\u8282\uff0c\u800c\u4e32\u53e3\u53d1\u9001\u7684\u662f\u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u628a</p> <p>UART\uff0c\u662f\u901a\u7528\u5f02\u6b65\u6536\u53d1\u4f20\u8f93\u5668\uff08Universal Asynchronous Receiver/Transmitter\uff09\uff0c\u65e2\u7136\u662f\u201c\u5668\u201d\uff0c\u663e\u7136\uff0c\u5b83\u5c31\u662f\u4e2a\u8bbe\u5907\u800c\u5df2\uff0c\u8981\u5b8c\u6210\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u7684\u786c\u4ef6\uff0c\u5b83\u672c\u8eab\u5e76\u4e0d\u662f\u534f\u8bae\u3002\u90a3\u4e48\u5b83\u8981\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd\u5462\uff1f\u5b83\u7684\u6700\u57fa\u672c\u529f\u80fd\uff0c\u662f\u4e32\u884c\u6570\u636e\u548c\u5e76\u884c\u6570\u636e\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8ba1\u7b97\u673a\u4e2d\u7684\u6570\u636e\u4ee5Byte\u4e3a\u57fa\u672c\u5355\u4f4d\uff0c\u5bf9\u4e00\u4e2aByte\u7684\u5b58\u53d6\u662f\u5e76\u884c\u7684\uff0c\u5373\uff0c\u540c\u65f6\u53d6\u5f97/\u5199\u51658\u4e2abit\u3002\u800c\u4e32\u884c\u901a\u4fe1\uff0c\u9700\u8981\u628a\u8fd9\u4e2aByte\u201c\u6253\u788e\u201d\uff0c\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6765\u6536\u53d1\u4ee5\u5b9e\u73b0\u4e32\u884c\u3002\u4f8b\u5982\uff1a \u00a0\u6bd4\u5982\u786e\u8ba4\u4e00\u4e2aByte\u7684\u8fd98\u4e2abit\u662f\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u7684\uff0c\u53c8\u662f\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\u7684\uff0c\u4e24\u4e2a\u73ed\u6b21\u4e4b\u95f4\u81f3\u5c11\u8981\u9694\u591a\u957f\u65f6\u95f4\u7684\u7f13\u51b2\uff0c\u7b49\u7b49\u3002\u8fd9\u4e00\u90e8\u5206\uff0c\u4e5f\u5177\u6709\u534f\u8bae\u7684\u7279\u5f81\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8e\u9053\u8def\u4e0a\u7684\u534f\u8bae\uff0c\u66f4\u5177\u6709\u4e00\u822c\u6027\uff0c\u6216\u66f0\uff0c\u662f\u4e0e\u8f66\u5728\u4ec0\u4e48\u9053\u8def\u4e0a\u5f00\uff0c\u76f8\u5bf9\u72ec\u7acb\u7684\u3002 \u00a0 4. \u603b\u7ed3\uff1a\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u53ef\u4ee5\u8bf4\uff0c\u7ebf\u8def\u4e0a\u5b58\u5728\u7684\u4ec5\u4ec5\u662f\u7535\u6d41\uff0cRS232/RS485\u89c4\u5b9a\u4e86\u8fd9\u4e9b\u7535\u6d41\u5728\u4ec0\u4e48\u6837\u7684\u7ebf\u8def\u4e0a\u6d41\u52a8\u548c\u6d41\u52a8\u7684\u6837\u5f0f\uff1b\u5728UART\u90a3\u91cc\uff0c\u7535\u6d41\u624d\u88ab\u89e3\u91ca\u548c\u7ec4\u88c5\u6210\u6570\u636e\uff0c\u5e76\u53d8\u6210CPU\u53ef\u76f4\u63a5\u8bfb\u5199\u7684\u5f62\u5f0f\u3002</p> </li> </ol> <p>\u6ce8\u610f\u4e0b\u8fb9\u7684\u8bf4\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\uff0c\u4f46\u662f\u4e0d\u5bf9\u3002UART\u672c\u8eab\u65e2\u5305\u542b\u534f\u8bae\uff08TTL\uff09\uff0c\u4e5f\u662f\u4e00\u4e2a\u786c\u4ef6\u8bbe\u5907\uff0c\u4f46\u662f\u5e73\u65f6\u9ed8\u8ba4UART TTL\uff0c\u4f46\u662f\u5b9e\u9645\u4e0aUART\u652f\u6301TTL RS232 485\u7b49\u6240\u6709\u7684\u4e32\u53e3\u534f\u8bae\u3002\u5b83\u672c\u8eab\u65e2\u6709\u7269\u7406\u7279\u6027\u4e5f\u6709\u534f\u8bae\u7279\u6027\u3002 </p> <p></p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#22","title":"2.2 \u4e32\u53e3\u901a\u4fe1\u7684\u6570\u636e\u7f13\u51b2\u533a","text":"<ol> <li>\u4e32\u53e3\u901a\u4fe1\u4e00\u822c\u6709\u4e00\u4e2a\u73af\u5f62\u961f\u5217\u4f5c\u4e3a\u6570\u636e\u7f13\u51b2\u533a\uff0c\u5728linux\u4e2d\uff0c\u4e32\u53e3\u7684\u8f93\u51fa\u636e\u7f13\u51b2\u533a\u4e00\u822c\u4e3a4096\u4e2a\u5b57\u8282\u3002</li> <li>\u5728linux\u4e2d\u8bfb\u53d6\u4e32\u53e3\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u4e32\u53e3\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u4e00\u6b21\u8bfb\u53d6\u7684\u6570\u636e\u4e0d\u80fd\u8d85\u8fc7\u4e32\u53e3\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u3002</li> <li>\u4e32\u53e3\u7f13\u51b2\u533a\u80fd\u591f\u6709\u6548\u89e3\u51b3\uff0c\u6570\u636e\u53d1\u7684\u5feb\uff0c\u4f46\u662f\u8bfb\u7684\u6162\u7684\u95ee\u9898\u3002\u5982\u679c\u6570\u636e\u5df2\u7ecf\u53d1\u9001\u8fc7\u6765\u4e86\uff0c\u4f46\u662f\u8fd8\u6ca1\u8bfb\uff0c\u5c31\u5148\u5b58\u5728\u6570\u636e\u7f13\u51b2\u533a\uff0c\u7b49\u5230\u8bfb\u53d6\u4e86\u4e00\u90e8\u5206\u6570\u636e\u4ee5\u540e\uff0c\u5c31\u5728\u7f13\u51b2\u533a\u961f\u5217\u628a\u5df2\u7ecf\u8bfb\u4e86\u7684\u8fd9\u90e8\u5206\u6570\u636e\u5220\u9664\u6389\u3002</li> <li>\u53ef\u4ee5\u770b\u8fd9\u4e2a\u89c6\u9891</li> </ol>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#23","title":"2.3 \u4e32\u53e3\u901a\u4fe1\u7684\u89e3\u6790\u7684\u4f8b\u5b50","text":"<p>\u6bcf\u4e2a\u4e24\u4e2a\u5341\u516d\u8fdb\u5236\u6570(hex)\uff0c\u4e5f\u5c31\u662f8\u4f4d\u4ee3\u8868\u4e00\u4e2a\u5b57\u8282\uff0c\u4e5f\u5c31\u662f\u4e32\u53e3\u901a\u4fe1\u7684\u4e00\u6b21\u53d1\u9001/\u63a5\u6536\u3002\u6211\u4eec\u901a\u8fc7\u4ed6\u7ed9\u7684\u6570\u636e\u5b9a\u4e49\u53bb\u89e3\u6790\u6570\u636e\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a\u89c6\u9891</p> <p></p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#3","title":"3. \u5404\u79cd\u901a\u4fe1\u534f\u8bae\u7684\u533a\u522b","text":"<p>\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#31-uartrs485rs232","title":"3.1 UART\u3001RS485\u3001RS232\u7684\u533a\u522b(\u4e32\u53e3)","text":"<p>\u4ed6\u4eec\u9996\u5148\u90fd\u662f\u4e32\u53e3\u901a\u4fe1\uff08\u4e32\u884c\u3001\u5f02\u6b65\u3001\u5168\u53cc\u5de5\uff09 \u5176\u6b21\uff1a  </p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#32-spi","title":"3.2 SPI","text":"<p>\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a</p> <p>\u548c\u8fd9\u4e2a SPI\u901a\u4fe1\u6709\u56db\u6761\u7ebf\uff0cSDO\uff0cSDI\uff0cSCLK\uff0cSS\u3002\u662f\u603b\u7ebf\u901a\u4fe1\u534f\u8bae\uff0c\u5b58\u5728\u4e3b\u4ece\u8bbe\u5907\u3002 \u56e0\u4e3a\u6709\u56db\u6761\u7ebf\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5168\u53cc\u5de5\u901a\u4fe1\u3002\u901f\u5ea6\u6bd4I2C\u5feb\uff0c\u901f\u5ea6\u53ef\u8fbe\u51e0Mbps\u3002</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E5%8D%95%E7%89%87%E6%9C%BA%E9%80%9A%E4%BF%A1%E5%85%A8%E8%A7%A3/#33-i2c","title":"3.3 I2C","text":"<p>\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a</p> <p>\u548c\u8fd9\u4e2a</p> <p>I2C\u901a\u4fe1\u6709\u4e24\u6761\u7ebfSCL\u548cSDA\uff0c\u662f\u4e00\u79cd\u603b\u7ebf\u901a\u4fe1\u534f\u8bae\uff0c\u5b58\u5728\u4e3b\u4ece\u8bbe\u5907\u3002\u7528\u5730\u5740\u9009\u62e9\u4ece\u673a\u3002 \u56e0\u4e3a\u53ea\u6709\u4e00\u6761\u6570\u636e\u7ebf\uff08SDA\uff09\uff0c\u6240\u4ee5\u4ed6\u662f\u534a\u53cc\u5de5\u901a\u4fe1\u3002\u4f46\u662f\u7531\u4e8e\u662f\u603b\u7ebf\u901a\u4fe1\uff0c\u6240\u4ee5\u4e24\u6761\u7ebf\u53ef\u4ee5\u9a71\u52a8\u591a\u4e2a\u8bbe\u5907\uff08\u6700\u591a256\u4e2a0x 00- 0xFF\uff09</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%92%8C%E6%AD%A5%E8%BF%9B%E7%94%B5%E6%9C%BA%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"\u65e0\u5237\u7535\u673a\u548c\u6b65\u8fdb\u7535\u673a\u7684\u533a\u522b","text":"<p>\u533a\u522b\u5728\u4e8e\uff1a \u6b65\u8fdb\u7535\u673a\u8d70\u7684\u662f\u5f88\u5c0f\u5f88\u5c0f\u7684\u5c0f\u788e\u6b65\uff0c\u6700\u9ad8\u901f\u5ea6\u6709\u9650\uff0c\u6240\u4ee5\u80fd\u591f\u7cbe\u786e\uff1b \u800c\u65e0\u5237\u7535\u673a\u5219\u662f\u5927\u6b65\u5927\u6b65\u7684\u98de\u5954\uff0c\u800c\u4e14\u6d89\u53ca\u5c31\u662f\u4e3a\u4e86\u9ad8\u901f\u98de\u5954\u63d0\u4f9b\u52a8\u529b\u7684\uff0c\u6240\u4ee5\u60f3\u7cbe\u786e\u7684\u505c\u4e0b\u6765\u662f\u4e0d\u53ef\u80fd\u7684\u3002  </p> <p>\u518d\u5c31\u662f\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u540c\uff0c\u8bbe\u8ba1\u7684\u963b\u6297\u4e5f\u4e0d\u540c\uff1a \u6b65\u8fdb\u7535\u673a\u57fa\u672c\u4e0a\u662f\u5de5\u4f5c\u5728\u5835\u8f6c\u6a21\u5f0f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f88\u591a\u4e8b\u65f6\u5019\u662f\u505c\u4e0b\u6765\u4e0d\u52a8\u7684\uff08\u5b9a\u4f4d\uff09\uff0c\u800c\u4e14\u8fd9\u662f\u7ed5\u7ec4\u4e5f\u8fd8\u662f\u7167\u6837\u901a\u7740\u7535\u7684\uff1b \u800c\u65e0\u5237\u7535\u673a\uff0c\u7ed5\u7ec4\u7684\u963b\u6297\u4e00\u822c\u90fd\u5f88\u5c0f\u5f88\u5c0f\uff08\u51e0\u5341~\u51e0\u767e\u6beb\u6b27\uff09\uff0c\u8bbe\u8ba1\u7535\u6d41\u4e5f\u5f88\u5927\uff0c\u505c\u4e0b\u6765\u7684\u65f6\u5019\u5f53\u7136\u5c31\u4e0d\u80fd\u901a\u7535\u4e86\uff0c\u4e0d\u7136\u975e\u5f97\u5192\u70df\u4e0d\u53ef.  </p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u6b65\u8fdb\u7535\u673a\u662f\u4e3a\u4e86\u7cbe\u786e\u5b9a\u4f4d\uff08\u7cbe\u5bc6\u8f6c\u52a8\u3001\u4e0d\u52a8\uff09\u800c\u8bbe\u8ba1\u7684\uff1b\u800c\u65e0\u5237\u7535\u673a\u5219\u662f\u4e3a\u4e86\u63d0\u4f9b\u9ad8\u901f\u65cb\u8f6c\u52a8\u529b\u800c\u8bbe\u8ba1\u7684\uff0c\u5b8c\u5168\u662f\u4e24\u4e2a\u6781\u7aef\u54e6~</p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E7%94%B5%E6%9C%BA%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E7%94%A8%E9%80%94/","title":"\u7535\u673a\u7684\u79cd\u7c7b\u548c\u7528\u9014","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E7%94%B5%E6%9C%BA%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E7%94%A8%E9%80%94/#1","title":"1.\u76f4\u6d41\u6709\u5237\u7535\u673a","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E7%94%B5%E6%9C%BA%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E7%94%A8%E9%80%94/#3","title":"3.\u76f4\u6d41\u51cf\u901f\u7535\u673a","text":"<p>123\u7684\u533a\u522b\u770b\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u76f4\u6d41\u7535\u673a\u4e00\u822c\u7528pwm\u9a71\u52a8\uff0c\u4e00\u822c\u4f1a\u6709\u4e00\u4e2a\u9a71\u52a8\u677f\u3002AN1 2 \u63a7\u5236\u6b63\u53cd\u8f6c\uff0cPWA 0 1 \u4ee3\u8868pwm\u7684\u8f93\u51fa\u3002 </p>"},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E7%94%B5%E6%9C%BA%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E7%94%A8%E9%80%94/#2simplefoc","title":"2.\u76f4\u6d41\u65e0\u5237\u7535\u673a\uff08simpleFOC\uff09","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E7%94%B5%E6%9C%BA%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E7%94%A8%E9%80%94/#4servo","title":"4.\u76f4\u6d41\u4f3a\u670d\u7535\u673a\uff0c\u4e5f\u53eb\u8235\u673a\uff08servo\uff09","text":""},{"location":"%E7%A1%AC%E4%BB%B6%E5%AD%A6%E4%B9%A0/%E7%94%B5%E6%9C%BA%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E7%94%A8%E9%80%94/#5simplefoc","title":"5.\u6b65\u8fdb\u7535\u673a\uff08simpleFOC\uff09","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Anchor-Based%20%E6%96%B9%E6%B3%95/","title":"Anchor Based \u65b9\u6cd5","text":"<p>\u5728\u8f68\u8ff9\u9884\u6d4b\u4e2d\u7684\u6b63\u6837\u672c\u548c\u8d1f\u6837\u672c\u7684\u5206\u7c7b\u635f\u5931\uff08Classification Loss\uff09\u4e0e\u56de\u5f52\u635f\u5931\uff08Regression Loss\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5e76\u901a\u8fc7\u5177\u4f53\u7684\u4f8b\u5b50\u8fdb\u884c\u8bf4\u660e\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Anchor-Based%20%E6%96%B9%E6%B3%95/#_1","title":"\u4e00\u3001\u635f\u5931\u51fd\u6570\u6982\u8ff0","text":"<p>\u5728\u57fa\u4e8e\u951a\u70b9\uff08Anchor-based\uff09\u7684\u65b9\u6cd5\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a     1.  \u5206\u7c7b\u635f\u5931\uff08Classification Loss\uff09\uff1a\u7528\u4e8e\u533a\u5206\u951a\u70b9\u662f\u6b63\u6837\u672c\u8fd8\u662f\u8d1f\u6837\u672c\u3002     2.  \u56de\u5f52\u635f\u5931\uff08Regression Loss\uff09\uff1a\u4ec5\u9488\u5bf9\u6b63\u6837\u672c\uff0c\u7528\u4e8e\u8c03\u6574\u951a\u70b9\u4ee5\u66f4\u597d\u5730\u62df\u5408\u771f\u5b9e\u8f68\u8ff9\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Anchor-Based%20%E6%96%B9%E6%B3%95/#_2","title":"\u4e8c\u3001\u5206\u7c7b\u635f\u5931\u7684\u8ba1\u7b97","text":"<ol> <li> <p>\u6807\u7b7e\u5206\u914d     \u2022   \u6b63\u6837\u672c\uff08Positive Samples\uff09\uff1a\u4e0e\u771f\u5b9e\u8f68\u8ff9\u9ad8\u5ea6\u5339\u914d\u7684\u951a\u70b9\uff0c\u6807\u7b7e\u4e3a1\u3002     \u2022   \u8d1f\u6837\u672c\uff08Negative Samples\uff09\uff1a\u4e0e\u771f\u5b9e\u8f68\u8ff9\u5339\u914d\u5ea6\u8f83\u4f4e\u7684\u951a\u70b9\uff0c\u6807\u7b7e\u4e3a0\u3002</p> </li> <li> <p>\u5e38\u7528\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570     \u2022   \u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\uff08Binary Cross-Entropy Loss\uff09\uff1a</p> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Anchor-Based%20%E6%96%B9%E6%B3%95/#_3","title":"\u4e09\u3001\u56de\u5f52\u635f\u5931\u7684\u8ba1\u7b97","text":"<ol> <li> <p>\u6807\u7b7e\u5206\u914d     \u2022   \u4ec5\u9488\u5bf9\u6b63\u6837\u672c\uff1a\u56de\u5f52\u635f\u5931\u53ea\u8ba1\u7b97\u6b63\u6837\u672c\u7684\u9884\u6d4b\u8f68\u8ff9\u4e0e\u771f\u5b9e\u8f68\u8ff9\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> </li> <li> <p>\u5e38\u7528\u7684\u56de\u5f52\u635f\u5931\u51fd\u6570     \u2022   L2 \u635f\u5931\uff08\u5747\u65b9\u8bef\u5dee\uff0cMSE\uff09\uff1a</p> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Anchor-Based%20%E6%96%B9%E6%B3%95/#_4","title":"\u56db\u3001\u603b\u7ed3","text":"<pre><code>\u2022   \u5206\u7c7b\u635f\u5931\u7528\u4e8e\u533a\u5206\u951a\u70b9\u662f\u6b63\u6837\u672c\u8fd8\u662f\u8d1f\u6837\u672c\uff0c\u901a\u5e38\u91c7\u7528\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\u3002\n\u2022   \u56de\u5f52\u635f\u5931\u4ec5\u9488\u5bf9\u6b63\u6837\u672c\uff0c\u7528\u4e8e\u4f18\u5316\u951a\u70b9\u7684\u9884\u6d4b\u8f68\u8ff9\uff0c\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u5305\u62ecL2\u635f\u5931\u548c\u5e73\u6ed1L1\u635f\u5931\u3002\n\u2022   \u7efc\u5408\u635f\u5931\u901a\u8fc7\u52a0\u6743\u76f8\u52a0\u7684\u65b9\u5f0f\uff0c\u7ed3\u5408\u5206\u7c7b\u548c\u56de\u5f52\u635f\u5931\uff0c\u5171\u540c\u4f18\u5316\u6a21\u578b\u7684\u6027\u80fd\u3002\n</code></pre> <p>\u901a\u8fc7\u5408\u7406\u8bbe\u8ba1\u548c\u8ba1\u7b97\u5206\u7c7b\u4e0e\u56de\u5f52\u635f\u5931\uff0c\u57fa\u4e8e\u951a\u70b9\u7684\u8f68\u8ff9\u9884\u6d4b\u6a21\u578b\u80fd\u591f\u6709\u6548\u5730\u5b66\u4e60\u533a\u5206\u6709\u610f\u4e49\u7684\u8f68\u8ff9\u6a21\u5f0f\uff0c\u5e76\u51c6\u786e\u8c03\u6574\u9884\u6d4b\u4ee5\u5339\u914d\u771f\u5b9e\u7684\u8f68\u8ff9\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%20openspace%E4%B8%AD%E7%9A%84DL-IAPS%E7%AE%97%E6%B3%95/","title":"Apollo openspace\u4e2d\u7684DL IAPS\u7b97\u6cd5","text":"<p>\u4e3b\u8981\u89e3\u51b3\u8def\u5f84\u89c4\u5212\u4e2d\u7684\u975e\u7ebf\u6027\u7ea6\u675f\u95ee\u9898\u3002 \u5728\u8def\u5f84\u89c4\u5212\u907f\u969c\u65f6\u4e3b\u8981\u6709\u4e24\u4e2a\u975e\u7ebf\u6027\u7ea6\u675f\uff1a 1. \u4f4d\u7f6e\u7ea6\u675f\uff1a\u4e0d\u80fd\u4e0e\u969c\u788d\u7269\u7684\u8ddd\u79bb\u8fc7\u8fd1\uff0c\u6709\u4e24\u6b21\u9879 2. \u66f2\u7387\u7ea6\u675f </p> <p>\u539f\u95ee\u9898\uff1a </p> <p>\u4e3a\u4e86\u53bb\u6389\u975e\u7ebf\u6027\u7ea6\u675f\uff0c\u505a\u4ee5\u4e0b\u6c42\u89e3\u3002 \u57fa\u672c\u601d\u8def\uff1a\u8fed\u4ee3\u6c42\u89e3\uff0c\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0c\u5c06\uff1a 1. \u76ee\u6807\u51fd\u6570\u4e8c\u6b21\u5316 2. \u7b49\u5f0f\u7ea6\u675f\u7ebf\u6027\u5316 3. \u4e0d\u7b49\u5f0f\u7ea6\u675f\u4e8c\u6b21\u5316  </p> <p>\u5316\u7b80\u540e\u7684\u95ee\u9898\uff1a</p> <p></p> <p></p> <p></p> <p></p> <p>trust region\u5c31\u662f\u4f4d\u7f6e\u7ea6\u675f\uff0c\u4e00\u4e2a\u4e8c\u6b21\u9879\uff0c\u9700\u8981\u628a\u4ed6\u7ebf\u6027\u5316\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/ApolloRouting%E4%B8%8EPnCMap%E7%9B%B8%E5%85%B3%E7%AC%94%E8%AE%B0/","title":"ApolloRouting\u4e0ePnCMap\u76f8\u5173\u7b14\u8bb0","text":"<p>Routing\u7684\u8bf7\u6c42:RoutingRequest </p> <p>Routing\u7684\u8fd4\u56de\uff1aRoutingResponse  </p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%ADTDR-OBCA%E7%AE%97%E6%B3%95/","title":"Apollo\u4e2dTDR OBCA\u7b97\u6cd5","text":"<p>\u6838\u5fc3\u601d\u60f3\uff1a\u524d\u7aef\u7c97\u641c\u9519\uff0c\u540e\u7aef\u4f18\u5316\u3002\u540e\u7aef\u4f18\u5316\u65f6\uff0c\u628a\u969c\u788d\u7269\u5efa\u6a21\u6210\u8d85\u5e73\u9762\u96c6\u5408\uff0c\u81ea\u8f66\u4e5f\u7528\u56db\u4e2a\u8d85\u5e73\u9762\u6765\u8868\u793a\uff0c\u907f\u969c\u7ea6\u675f\u4e3a\u4e24\u4e2a\u96c6\u5408\u4e0d\u76f8\u4ea4\uff0c\u901a\u8fc7\u8bbe\u5b9a\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u4e24\u4e2a\u8f66\u7684\u8ddd\u79bb\u3002\u5f15\u5165\u5bf9\u5076\u53d8\u91cf\u03bb\u548c\u03bc\u3002</p> <p>OBCA:\u7528\u8d85\u5e73\u9762\u8868\u793a\u969c\u788d\u7269\u3002</p> <p>H-OBCA\u76f8\u5bf9\u4e8eOBCA\uff0c\u5f15\u5165\u4e86\u5206\u5c42\u7684\u601d\u60f3\uff0c\u5148\u7528\u6df7\u5408a\u661f\u641c\u4e00\u4e2arenference\u3002</p> <p>TDR-OBCA\u76f8\u5bf9\u4e8e\u4e4b\u524d\u7684H-OBCA\uff0c\u4e0d\u4ec5\u5f15\u5165\u4e86\u5206\u5c42\u7684\u601d\u60f3\uff0c\u800c\u4e14\u5f15\u5165\u4e00\u4e2adual variable warm start \uff08\u6c42\u89e3\u4e00\u4e2aQP\u95ee\u9898\uff09\u4ee5\u53ca\u5c06mpc \u4e2d\u7684\u4e00\u4e9b\u786c\u7ea6\u675f\u52a0\u5165\u5230\u4e86cost function\u4e2d\uff0c\u4f7f\u5f97mpc\u7684\u6c42\u89e3\u66f4\u4e3a\u5feb\u901f\u548c\u9c81\u68d2\u3002 </p> <p>\u524d\u7aef\uff1a Hbyrid A*\u548cReedShepp\u7b97\u6cd5\u89c4\u5212\u5f00\u653e\u7a7a\u95f4\u65e0\u78b0\u649e\u7684\u8def\u5f84\u3002\u4f46\u662f\u8fd9\u4e00\u7b97\u6cd5\u5b58\u5728\u7684\u95ee\u9898\u662f\u7531\u4e8eHybrid A*\u5bf9\u8f6c\u5411\u89d2\u5ea6\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u4e24\u4e2a\u8282\u70b9\u7684\u66f2\u7387\u662f\u7a81\u53d8\u7684\uff1bReedShepp\u66f2\u7ebf\u4e5f\u662f\uff0c\u5728\u4e24\u4e2a\u66f2\u7ebf\u4ea4\u70b9\u4f4d\u7f6e\u66f2\u7387\u4e5f\u662f\u7a81\u53d8\u7684\uff0c\u8fd9\u6837\u7684\u8f68\u8ff9\u662f\u4e0d\u9002\u5408\u63a7\u5236\u8f66\u8f86\u8ddf\u8e2a\u8f68\u8ff9\u884c\u9a76\u7684\u3002\u6240\u4ee5\u8fd8\u9700\u8981\u89c4\u5212\u51fa\u4e00\u6761\u5e73\u6ed1\u65e0\u78b0\u649e\u7684\u8def\u5f84\u3002</p> <p>\u540e\u7aef\uff1a OBCA\u4f18\u5316\u3002OBCA\u7b97\u6cd5\u662f\u57fa\u4e8e\u6a21\u578b\u9884\u6d4b\u63a7\u5236\uff08MPC\uff09\u5efa\u7acb\u6a21\u578b\uff0c\u5e76\u7528\u4f18\u5316\u7b97\u6cd5\u8fdb\u884c\u6c42\u89e3\u3002</p> <ol> <li> <p>\u6784\u5efaMPC\u7684\u72b6\u6001\u65b9\u7a0b </p> </li> <li> <p>\u6784\u5efa\u969c\u788d\u7269\u7ea6\u675f \u5728OBCA\u7b97\u6cd5\u4e2d\u662f\u7528\u8d85\u5e73\u9762\u6784\u5efa\u969c\u788d\u7269\u96c6\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u7a7a\u95f4\uff0c\u8d85\u5e73\u9762\u5c31\u662f\u6761\u76f4\u7ebf\u3002 \u6bd4\u5982\u5bf9\u4e8e\u969c\u788d\u7269\u7684Bonding Box\u67094\u6761\u8fb9\uff0c\u5219\u75284\u6761\u76f4\u7ebf\u63cf\u8ff0\u969c\u788d\u7269\u5360\u636e\u7684\u7a7a\u95f4\u3002 \u6bd4\u5982\u5bf9\u4e8e\u4e00\u6761\u8fb9\u7ebf\u7684\u8d85\u5e73\u9762\uff1a  </p> </li> </ol> <p></p> <p></p> <p>\u81ea\u8f66\u5360\u636e\u7a7a\u95f4\u7684\u4e5f\u53ef\u4ee5\u4e3a4\u4e2a\u8d85\u5e73\u9762\u76f8\u4ea4\u7684\u96c6\u5408\u8868\u793a\uff0c\u5047\u8bbe\u81ea\u8f66\u4e2d\u5fc3\u4f4d\u4e8e\u539f\u70b9\u7684\u7a7a\u95f4\u8868\u793a\u4e3a </p> <p></p> <p></p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84PJSO%E7%AE%97%E6%B3%95/","title":"Apollo\u4e2d\u7684PJSO\u7b97\u6cd5","text":"<p>Apollo\u4e2d\u7eb5\u5411\u89c4\u5212\u662fPJSO\u7b97\u6cd5\uff0c\u7528\u6765\u4f18\u5316\u901f\u5ea6\u3002 \u6700\u57fa\u672c\u7684\u5047\u8bbe\u5982\u4e0b\uff0c\u5f15\u5165jerk\u9879\uff1a </p> <p>\u4f18\u5316\u95ee\u9898\u6784\u5efa\u5982\u4e0b\uff1a \u51b3\u7b56\u53d8\u91cf\u67093k\u4e2a\uff1a\\(s,\\dot{s},\\ddot{s}\\)</p> <p>\u76ee\u6807\u51fd\u6570\u603b\u5171\u6709\u4e09\u9879\uff1a\u4e0e\u7ec8\u70b9\u7684\u8ddd\u79bb\u5dee\uff0c\u52a0\u901f\u5ea6\u5e73\u65b9\u548c\uff0cjerk\u5e73\u65b9\u548c \u7ea6\u675f\u9664\u4e86\u6700\u57fa\u672c\u7684box\u7ea6\u675f\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5411\u5fc3\u52a0\u901f\u5ea6\u7684\u7ea6\u675f\uff086d\uff09\uff0c\u5373\u8f6c\u5f2f\u7684\u65f6\u5019\u901f\u5ea6\u4e0d\u80fd\u592a\u5feb\u3002 $$ a_{lat} = \\frac{v^2}{r} $$ \u5728Frenet\u5750\u6807\u7cfb\uff08\u53c8\u79f0\u4e3a\u5207\u5411-\u6cd5\u5411\u5750\u6807\u7cfb\uff09\u4e2d\uff0c\u6cd5\u5411\uff08\u6216\u5411\u5fc3\uff09\u52a0\u901f\u5ea6 \\(a_{lat}\\)\u4e0e\u5f27\u957f\u901f\u5ea6 \\(\\dot{s}\\) \u548c\u66f2\u7387 \\(k(s)\\) \u7684\u5173\u7cfb\u4e3a\uff1a $$ a_n = \\dot{s}^2 \\times k(s) = \\frac{\\dot{s}^2}{r} $$</p> <p>\u8fd9\u91cc\uff1a -  \\(a_{lat}\\)\u662f\u6cbf\u6cd5\u5411\u65b9\u5411\u7684\u52a0\u901f\u5ea6\uff0c\u4e5f\u662f\u5411\u5fc3\u52a0\u901f\u5ea6\u3002 - \\(\\dot{s}\\) \u662f\u7269\u4f53\u6cbf\u66f2\u7ebf\u7684\u901f\u5ea6\uff0c\u4e5f\u5c31\u662f\u5f27\u957f\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387\u3002 - \\(k(s)\\) \u662f\u7269\u4f53\u5f53\u524d\u4f4d\u7f6e\u7684\u66f2\u7387\u3002</p> <p>\u4ece\u8fd9\u4e2a\u516c\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u5411\u5fc3\u52a0\u901f\u5ea6\u4e0e\u5f27\u957f\u901f\u5ea6\u7684\u5e73\u65b9\u548c\u66f2\u7387\u6210\u6b63\u6bd4\u3002\u8fd9\u4e0e\u6211\u4eec\u5148\u524d\u63d0\u5230\u7684\u5411\u5fc3\u52a0\u901f\u5ea6\u7684\u5b9a\u4e49\uff08\\( a_c = \\frac{v^2}{r} \\)\uff09\u662f\u4e00\u81f4\u7684\uff0c\u5176\u4e2d\u66f2\u7387 \\( k \\) \u4e0e\u534a\u5f84 \\( r \\) \u7684\u5173\u7cfb\u4e3a \\( k = \\frac{1}{r} \\)\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84%E6%8A%97%E7%A7%AF%E5%88%86%E9%A5%B1%E5%92%8C/","title":"Apollo\u4e2d\u7684\u6297\u79ef\u5206\u9971\u548c","text":"<p>Apollo\u4e2dBC controller\u4e3a\u53cd\u9988\u6291\u5236\u9971\u548c</p> <p>Apollo\u4e2dIC controllor \u4e3a\u8d85\u9650\u524a\u5f31\u79ef\u5206\u6cd5</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","title":"Apollo\u4e2d\u7684\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#apollo","title":"Apollo\u4e2d\u5de5\u5382\u6a21\u5f0f\u7b80\u4ecb","text":"<p>Apollo\u9879\u76ee\uff08https://github.com/apolloauto\uff09\u7684\u5bf9\u8c61\u521b\u5efa\uff0c\u5927\u591a\u4f7f\u7528\u76f4\u63a5\u6cd5\uff0c\u4f8b\u5982\uff1a</p> <pre><code>// \u5728\u6808(stack)\u4e0a\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\nADCTrajectory not_ready_pb;\n// \u5728\u5806(heap)\u4e0a\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\nZeroCopyOutputStream *output = new FileOutputStream(file_descriptor);\n</code></pre> <p>\u8fd8\u6709\u90e8\u5206\u5bf9\u8c61\u4f7f\u7528\u5355\u4f8b\uff08Singleton\uff09\u6a21\u5f0f\u521b\u5efa\uff0c\u4f8b\u5982\uff1a <pre><code>DECLARE_SINGLETON(AdapterManager);\n</code></pre> \u8fd9\u91cc\uff0c<code>DECLARE_SINGLETON(AdapterManager)</code>\u662f\u4e00\u4e2a\u5b9a\u4e49\u5355\u4f8b\u5bf9\u8c61\u7684\u5b8f\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>#define DECLARE_SINGLETON(classname)        \\\n public:                                    \\\n  static classname *instance() {            \\\n    static classname instance;              \\\n    return &amp;instance;                       \\\n  }                                         \\\n  DISALLOW_IMPLICIT_CONSTRUCTORS(classname) \\\n private:\n</code></pre> \u5185\u5d4c\u5b8f<code>DISALLOW_IMPLICIT_CONSTRUCTORS(classname)</code>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>#define DISALLOW_IMPLICIT_CONSTRUCTORS(classname) \\\n private:                                         \\\n  classname();                                    \\\n  DISALLOW_COPY_AND_ASSIGN(classname);\n</code></pre></p> <p>\u7ee7\u7eed\u770b\u5185\u5d4c\u5b8f<code>DISALLOW_COPY_AND_ASSIGN(classname)</code>\u7684\u5b9a\u4e49\uff1a <pre><code>#define DISALLOW_COPY_AND_ASSIGN(classname) \\\n private:                                   \\\n  classname(const classname &amp;);             \\\n  classname &amp;operator=(const classname &amp;);\n</code></pre> \u4e8e\u662f\uff0c<code>DECLARE_SINGLETON(AdapterManager)</code>\u5c55\u5f00\u540e\u7684\u5b9a\u4e49\u4e3a\uff1a <pre><code>public:                                   \n  static AdapterManager *instance() {            \n    static AdapterManager instance;              \n    return &amp;instance;                       \n  }                                          \nprivate:                                        \n  AdapterManager();                                    \nprivate:                                   \n  AdapterManager(const AdapterManager &amp;);            \n  AdapterManager &amp;operator=(const AdapterManager &amp;);  \n private:\n</code></pre></p> <p>\u4e0a\u8ff0\u4ee3\u7801\u7684\u610f\u4e49\u4e00\u76ee\u4e86\u7136\uff0c\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u516c\u6709\u51fd\u6570instance()\uff0c\u8be5\u51fd\u6570\u5728\u6808\u4e0a\u521b\u5efa\u4e00\u4e2aAdapterManager\u7c7b\u7684\u9759\u6001\u5bf9\u8c61\uff0c\u7136\u540e\u4ee5\u6307\u9488\u5f62\u5f0f\u5c06\u5176\u8fd4\u56de\u3002\u540c\u65f6\uff0c\u5c06AdapterManager\u7c7b\u7684\u9ed8\u8ba4\uff08\u6216\u79f0\u7f3a\u7701\uff09\u6784\u9020\u51fd\u6570\u3001\u590d\u5236\uff08\u6216\u79f0\u62f7\u8d1d\uff09\u6784\u9020\u51fd\u6570\u3001\u590d\u5236\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u6216\u79f0\u64cd\u4f5c\u7b26\uff09\u5b9a\u4e49\u4e3a\u79c1\u6709\u51fd\u6570\uff0c\u610f\u5373\u7981\u6b62\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u548c\u590d\u5236\u64cd\u4f5c\u3002 \u8fd8\u6709\u90e8\u5206\u5bf9\u8c61\uff0c\u91c7\u7528\u5de5\u5382\u6a21\u5f0f\u521b\u5efa\uff0c\u4f8b\u5982\uff1a <pre><code>control_conf_ = control_conf;\nfor (auto controller_type : control_conf_-&gt;active_controllers()) {\n  auto controller = controller_factory_.CreateObject(\n     static_cast&lt;ControlConf::ControllerType&gt;(controller_type));\n  if (controller) {\n     controller_list_.emplace_back(std::move(controller));\n  } else {\n     AERROR &lt;&lt; \"Controller: \" &lt;&lt; controller_type &lt;&lt; \"is not supported\";\n     return Status(ErrorCode::CONTROL_INIT_ERROR,\n                    \"Invalid controller type:\" + controller_type);\n}\n</code></pre></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#apollotask","title":"Apollo\u4e2d\u5de5\u5382\u6a21\u5f0f\u4e3e\u4f8b\uff08task\u5de5\u5382\uff09","text":"<p>\u89c4\u5212\u7684\u539f\u5b50\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u53eb\u505a\u52a8\u4f5c\u6267\u884c\u5143\u7d20\u662f<code>task</code>. \u7531\u4e8e\u00a0<code>task</code>\u00a0\u592a\u591a, Apollo \u91cc\u8fdb\u884c\u4e86 3 \u6b65\u62bd\u8c61. \u7b2c\u4e00\u6b65: \u62bd\u8c61\u7c7b:\u00a0<code>Task base</code>\u00a0\u7c7b. \u7b2c\u4e8c\u6b65:\u00a0<code>Task</code>\u00a0\u7c7b\u7684\u5b50\u7c7b\u6b21\u62bd\u8c61\u7c7b, \u4e3b\u8981\u5206\u4e3a\u4e09\u79cd\u7c7b:\u00a0<code>Optimizer</code>\u7c7b,\u00a0<code>Decider</code>\u00a0\u7c7b\u4ee5\u53ca\u00a0<code>Learning</code>\u00a0\u7c7b: <pre><code>SpeedOptimizer,  \nTrajectoryOptimizer,  \nPathOptimizer,  \n\nDecider,  \nPathDecider,  \nPathReferenceDecider,  \nRSSDecider,  \nSpeedDecider,  \n\nLearningModelInferenceTask,  \nLearningModelInferenceTrajectoryTask\n</code></pre></p> <p>\u7b2c\u4e09\u6b65: \u5bf9\u4e09\u4e2a\u5927\u7c7b\u8fdb\u4e00\u6b65\u5730\u7ec6\u5206. \u4f8b\u5982\u00a0<code>Decider</code>\u00a0\u7c7b\u4e0b\u9762\u6709\u00a0<code>STBoundsDecider</code>,\u00a0<code>SpeedBoundsDecider</code>,\u00a0<code>RuleBasedStopDecider</code>,\u00a0<code>PathLaneBorrowDecider</code>\u00a0\u7b49 12 \u4e2a\u5b50\u7c7b. \u6700\u540e\u6bcf\u4e2a\u5b50\u7c7b\u901a\u8fc7\u53c2\u6570\u00a0<code>const TaskConfig &amp;config,const std::shared_ptr&lt;DependencyInjector&gt; &amp;injector</code>\u00a0\u5373 Task \u7684\u00a0<code>config</code>( protobuf \u6d88\u606f), \u4ee5\u53ca\u8f93\u5165\u4f9d\u8d56\u00a0<code>DependencyInjector</code>\u00a0\u53bb\u8fdb\u4e00\u6b65\u6267\u884c\u7ec6\u5206\u7684\u5177\u4f53\u7684\u00a0<code>task</code>.</p> <p>\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u8fd9\u4e48\u591a\u7c7b, \u5982\u4f55\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u4ea7\u751f\u7ba1\u7406\u5462? \u603b\u4e0d\u80fd\u6bcf\u6b21\u90fd\u7528 swtich case \u8bed\u53e5\u8fdb\u884c\u5224\u65ad\u7136\u540e\u751f\u6210\u6240\u9700\u8981\u7684\u7c7b. \u7531\u4e8e\u4ea7\u751f\u7c7b\u7684\u5177\u4f53(\u7ec4\u88c5)\u8fc7\u7a0b, \u6211\u4eec\u5e76\u4e0d\u5173\u5fc3, \u53ea\u60f3\u8981\u6700\u7ec8\u7684\u7c7b\u7684\u7ed3\u679c, \u56e0\u6b64\u5efa\u9020\u8005\u6a21\u5f0f\u4e0d\u9002\u7528, \u91c7\u7528\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f. \u4e3a\u4e86\u5bf9\u751f\u6210\u7c7b\u5bf9\u8c61\u8fdb\u884c\u7ba1\u7406, \u91c7\u7528\u4e86<code>std::unordered_map</code>\u00a0\u5b58\u50a8/\u67e5\u8be2\u751f\u6210\u7684\u5bf9\u8c61. \u540c\u65f6\u4e3a\u4e86\u751f\u4ea7\u4e0d\u540c\u7c7b\u578b\u7684\u7c7b, \u91c7\u53d6\u4e86\u6a21\u677f\u6a21\u5f0f, \u6700\u7ec8\u7ed3\u5408\u4e3a\u6a21\u677f\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_1","title":"\u6a21\u677f\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u8be6\u89e3","text":"<p>\u4e0b\u56fe\u4e3a Apollo \u4e2d\u6574\u4e2a\u6a21\u5f0f\u7684 UML \u56fe(\u57fa\u4e8e PlantUML). </p> <p>\u4e0b\u9762\u5bf9\u5176\u8fdb\u884c\u4e00\u6b65\u6b65\u62c6\u89e3. \u62bd\u8c61\u6a21\u677f\u5de5\u5382 base \u7c7b</p> <pre><code>//FILE_PATH:modules/common/util/factory.h  \ntemplate &lt;typename IdentifierType, class AbstractProduct,  \n          class ProductCreator = AbstractProduct *(*)(),  \n          class MapContainer = std::map&lt;IdentifierType, ProductCreator&gt;&gt;  \nclass Factory {  \n public:  \n  bool Register(const IdentifierType &amp;id, ProductCreator creator) {  \n    return producers_.insert(std::make_pair(id, creator)).second;  \n  }  \n\n  bool Contains(const IdentifierType &amp;id) {  \n    return producers_.find(id) != producers_.end();  \n  }  \n\n  bool Unregister(const IdentifierType &amp;id) {  \n    return producers_.erase(id) == 1;  \n  }  \n\n  void Clear() { producers_.clear(); }  \n\n  bool Empty() const { return producers_.empty(); }  \n\n  template &lt;typename... Args&gt;  \n  std::unique_ptr&lt;AbstractProduct&gt; CreateObjectOrNull(const IdentifierType &amp;id,  \n                                                      Args &amp;&amp;... args) {  \n    auto id_iter = producers_.find(id);  \n    if (id_iter != producers_.end()) {  \n      return std::unique_ptr&lt;AbstractProduct&gt;(  \n          (id_iter-&gt;second)(std::forward&lt;Args&gt;(args)...));  \n    }  \n    return nullptr;  \n  }  \n\n  template &lt;typename... Args&gt;  \n  std::unique_ptr&lt;AbstractProduct&gt; CreateObject(const IdentifierType &amp;id,  \n                                                Args &amp;&amp;... args) {  \n    auto result = CreateObjectOrNull(id, std::forward&lt;Args&gt;(args)...);  \n    AERROR_IF(!result) &lt;&lt; \"Factory could not create Object of type : \" &lt;&lt; id;  \n    return result;  \n  }  \n private:  \n  MapContainer producers_;  \n};\n</code></pre> <p><code>Factory</code>\u00a0\u5b58\u5728 4 \u4e2a\u6a21\u677f\u53c2\u6570:</p> <ul> <li><code>typename IdentifierType</code>: \u5bf9\u8c61 id, \u5373\u4ea7\u54c1\u5bb9\u5668\u00a0<code>std::unordered_map</code>\u00a0\u7684 key.</li> <li><code>class AbstractProduct</code>\u00a0: \u62bd\u8c61\u4ea7\u54c1(\u7c7b), \u6700\u7ec8\u751f\u4ea7\u51fa\u6765\u7684\u7c7b.</li> <li><code>class ProductCreator</code>\u00a0: \u51fd\u6570\u6307\u9488, \u8f93\u5165\u4e3a\u00a0<code>void</code>, \u8f93\u51fa\u4e3a<code>AbstractProduct</code>\u00a0\u5bf9\u8c61\u7684\u51fd\u6570\u6307\u9488. \u8fd9\u4e2a\u51fd\u6570\u6267\u884c\u5177\u4f53\u7684\u751f\u4ea7\u8fc7\u7a0b.</li> <li><code>class MapContainer</code>\u00a0: key \u4e3a<code>IdentifierType</code>, value \u4e3a\u00a0<code>ProductCreator</code>\u7684\u7ba1\u7406\u5bb9\u5668, \u65b9\u4fbf\u67e5\u8be2\u67d0\u4e2a\u7c7b\u662f\u5426\u5df2\u7ecf\u88ab\u5236\u9020\u51fa\u6765.</li> </ul> <p><code>Factory</code>\u6709\u4e24\u7c7b\u64cd\u4f5c:</p> <ul> <li>\u5bf9\u00a0<code>std::unordered_map</code>\u00a0\u5bb9\u5668\u7684\u64cd\u4f5c: Register(\u63d2\u5165), Contains(\u67e5\u8be2), Unregister(\u5220\u9664), Clear(\u6e05\u7a7a), Empty(\u5224\u65ad\u4e3a\u7a7a).</li> <li>\u751f\u4ea7\u6a21\u677f\u51fd\u6570\u00a0<code>CreateObject</code>\u00a0(\u8c03\u7528<code>CreateObjectOrNull</code>): \u903b\u8f91\u4e5f\u5f88\u7b80\u5355, \u5148\u67e5\u8be2\u5bb9\u5668\u91cc\u662f\u5426\u5df2\u7ecf\u5236\u9020\u4e86\u67d0\u7c7b\u7684\u5bf9\u8c61, \u5982\u679c\u5df2\u7ecf\u5236\u9020\u597d\u4e86, \u76f4\u63a5\u53bb\u5bb9\u5668\u91cc\u62ff, \u5982\u679c\u67e5\u8be2\u4e0d\u5230\u5c31\u5730\u751f\u4ea7\u4e00\u4e2a\u51fa\u6765\u5e76\u653e\u5165\u5bb9\u5668\u91cc.</li> </ul> <p>\u751f\u4ea7\u7684\u51fd\u6570\u00a0<code>CreateObjectOrNull</code>\u00a0\u7b2c\u4e00\u773c\u770b\u8d77\u6765\u5f88\u590d\u6742, \u5176\u5b9e\u4e5f\u5f88\u7b80\u5355.</p> <ul> <li>\u6a21\u677f\u53c2\u6570:\u00a0<code>&lt;typename... Args&gt;</code>\u00a0\u4e0d\u5b9a\u53c2\u6570, \u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u7684\u751f\u4ea7\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u90fd\u4e0d\u4e00\u6837.</li> <li>\u8fd4\u56de\u503c:\u00a0<code>std::unique_ptr&lt;AbstractProduct&gt;</code>\u00a0\u62bd\u8c61\u4ea7\u54c1\u7684\u552f\u4e00\u667a\u80fd\u6307\u9488, \u4f7f\u7528\u667a\u80fd\u6307\u9488\u4e0d\u9700\u8981\u624b\u52a8 new~delete,\u7531\u7cfb\u7edf\u6765\u7ba1\u7406\u4ea7\u54c1\u6700\u7ec8\u7684\u751f\u547d\u5468\u671f. \u540c\u65f6\u4f7f\u7528\u00a0<code>std::unique_ptr</code>\u00a0\u4fdd\u8bc1\u4e86\u6307\u9488\u6307\u5411\u5355\u4e00\u6027, \u6240\u4ee5\u8fd9\u91cc\u4e0d\u7528\u58f0\u660e\u4e3a\u00a0<code>static</code>\u51fd\u6570.</li> <li><code>std::forward&lt;Args&gt;(args)...)</code>: \u5b8c\u7f8e\u8f6c\u53d1\u4fdd\u8bc1\u53c2\u6570\u7684\u5de6\u53f3\u503c\u5f15\u7528\u6027\u4e0d\u4f1a\u88ab\u6539\u53d8.</li> <li>return \u8bed\u53e5\u6574\u4f53\u4e3a, \u5148\u57fa\u4e8e\u8f93\u5165\u7684\u53c2\u6570, \u4f7f\u7528\u5bb9\u5668\u91cc\u7684 key (\u5236\u9020\u51fd\u6570)\u5236\u9020\u51fa\u4e00\u4e2a\u62bd\u8c61\u4ea7\u54c1\u7c7b\u7684\u5bf9\u8c61, \u5e76\u7528\u4e00\u4e2a\u00a0<code>std::unique_ptr</code>\u00a0\u667a\u80fd\u6307\u9488\u53bb\u6307\u5411\u5b83.</li> </ul> <p>\u62bd\u8c61\u5de5\u5382\u7c7b</p> <p>\u9996\u5148\u6ce8\u610f\u5230\u7684\u662f\u00a0<code>TaskFactory</code>\u00a0\u4e0d\u662f\u7ee7\u627f\u00a0<code>Factory</code>\u00a0\u7684, \u800c\u662f\u91c7\u7528\u4e86\u805a\u5408\u7684\u5f62\u5f0f ( private \u7684\u00a0<code>Factory</code>\u00a0\u7c7b\u7684\u5b9e\u4f8b\u00a0<code>task_factory_</code>, \u7b26\u5408\u5408\u6210\u590d\u7528\u539f\u5219.</p> <p>\u6240\u6709\u7684\u51fd\u6570\u4ee5\u53ca\u6210\u5458\u53d8\u91cf\u5747\u4e3a\u00a0<code>static</code>, \u4fdd\u8bc1\u5355\u4f8b\u6216\u8005\u53ea\u6267\u884c\u4e00\u6b21.</p> <pre><code>//FILE_PATH:modules/planning/tasks/task_factory.h  \nclass TaskFactory {  \n public:  \n  static void Init(const PlanningConfig &amp;config,  \n                   const std::shared_ptr&lt;DependencyInjector&gt; &amp;injector);  \n  static std::unique_ptr&lt;Task&gt; CreateTask(  \n      const TaskConfig &amp;task_config,  \n      const std::shared_ptr&lt;DependencyInjector&gt; &amp;injector);  \n\n private:  \n  static apollo::common::util::Factory&lt;  \n      TaskConfig::TaskType, Task,  \n      Task *(*)(const TaskConfig &amp;config,  \n                const std::shared_ptr&lt;DependencyInjector&gt; &amp;injector),  \n      std::unordered_map&lt;  \n          TaskConfig::TaskType,  \n          Task *(*)(const TaskConfig &amp;config,  \n                    const std::shared_ptr&lt;DependencyInjector&gt; &amp;injector),  \n          std::hash&lt;int&gt;&gt;&gt;  \n      task_factory_;  \n  static std::unordered_map&lt;TaskConfig::TaskType, TaskConfig, std::hash&lt;int&gt;&gt;  \n      default_task_configs_;  \n};\n</code></pre> <p>\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li><code>Init</code>\u00a0\u51fd\u6570: \u521d\u59cb\u5316\u00a0<code>TaskFactory</code>\u00a0\u7c7b, \u505a\u4e86 2 \u4ef6\u4e8b\u60c5.</li> </ul> <p>\u4e00\u662f\u628a\u5f53\u524d\u4ee3\u7801\u4e2d\u7684\u00a0<code>Task</code>\u00a0\u7684 Derived \u7c7b\u90fd Register \u5230\u5bb9\u5668\u4e2d\u65b9\u4fbf\u540e\u9762\u76f4\u63a5\u67e5\u8be2\u4f7f\u7528, \u63d0\u9ad8\u6548\u7387. \u5176\u4e2d\u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\u00a0<code>new</code>\u00a0\u51fa\u6765\u4e00\u4e2a\u5bf9\u8c61. \u603b\u5171 Register \u4e86 25 \u4e2a\u7c7b.</p> <pre><code>task_factory_.Register(  \n    TaskConfig::OPEN_SPACE_TRAJECTORY_PROVIDER,  \n    [](const TaskConfig&amp; config,  \n       const std::shared_ptr&lt;DependencyInjector&gt;&amp; injector) -&gt; Task* {  \n      return new OpenSpaceTrajectoryProvider(config, injector);  \n    });\n</code></pre> <p>\u4e8c\u662f\u628a\u00a0<code>const PlanningConfig&amp; *config*</code>\u00a0\u91cc\u7684 task \u4e5f\u62ff\u51fa\u6765\u653e\u5230\u5bb9\u5668\u4e2d, \u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u6dfb\u52a0\u65b9\u5f0f.</p> <ul> <li> <p>\u7efc\u5408\u4e24\u70b9\u6765\u770b\u8d77\u6765\u5236\u9020\u51fd\u6570\u5df2\u7ecf\u4e0d\u9700\u8981\u4e86, \u56e0\u4e3a\u6240\u6709\u9700\u8981\u5236\u9020\u7684\u5b9e\u4f8b\u90fd\u5df2\u7ecf\u00a0<code>new</code>\u00a0\u51fa\u6765\u653e\u5230\u5bb9\u5668\u91cc\u4e86. \u4f46\u662f\u5bf9\u4e8e\u66f4\u4e00\u822c\u7684\u573a\u666f\u8fd8\u662f\u9700\u8981\u4e0b\u9762\u7684\u51fd\u6570\u6765\u5e94\u5bf9.</p> </li> <li> <p><code>CreateTask</code>\u00a0\u51fd\u6570\u4e3a\u5236\u9020\u5b9e\u4f8b\u7684\u65b9\u6cd5. \u5148\u628a\u00a0<code>TaskConfig</code>\u00a0\u4e0e\u00a0<code>PlanningConfig</code>\u00a0\u91cc\u7684 task \u90fd\u653e\u5230\u5bb9\u5668\u91cc, \u7136\u540e\u8c03\u7528 base \u7c7b\u7684\u00a0<code>CreateObject</code>\u00a0\u51fd\u6570\u521b\u5efa\u5bf9\u8c61.</p> </li> </ul> <p>\u5176\u4e2d\u00a0<code>MergeFrom</code>\u00a0\u4e3a protobuf \u7684\u5408\u5e76\u51fd\u6570 API.</p> <pre><code>std::unique_ptr&lt;Task&gt; TaskFactory::CreateTask(  \n    const TaskConfig&amp; task_config,  \n    const std::shared_ptr&lt;DependencyInjector&gt;&amp; injector) {  \n  TaskConfig merged_config;  \n  if (default_task_configs_.find(task_config.task_type()) !=  \n      default_task_configs_.end()) {  \n    merged_config = default_task_configs_[task_config.task_type()];  \n  }  \n  merged_config.MergeFrom(task_config);  \n  return task_factory_.CreateObject(task_config.task_type(), merged_config,  \n                                    injector);  \n}\n</code></pre> <p>\u62bd\u8c61\u4ea7\u54c1\u7c7b</p> <p><code>Task</code>\u00a0\u7c7b, \u6ca1\u6709 private \u6210\u5458, \u6240\u6709\u6210\u5458\u5747\u53ef\u88ab public \u7ee7\u627f. \u53ef\u4ee5\u8bb2\u7684\u6709 2 \u5904.</p> <ul> <li>\u6210\u5458\u53d8\u91cf: \u5747\u4e3a Planning \u6a21\u5757\u7684\u6838\u5fc3\u8f93\u5165\u7c7b\u6307\u9488, \u4f8b\u5982\u00a0<code>Frame,ReferenceLineInfo,TaskConfig,DependencyInjector</code>.</li> <li><code>Execute</code>\u00a0\u6210\u5458\u51fd\u6570\u8d1f\u8d23\u6267\u884c\u540e\u7eed\u6bcf\u4e2a task \u7684\u5177\u4f53\u4efb\u52a1\u5185\u5bb9, \u4e3a\u4e86\u5b9e\u73b0\u591a\u6001, \u4e24\u4e2a\u91cd\u8f7d\u7684\u51fd\u6570\u5747\u4e3a\u00a0<code>virtual</code>.</li> </ul> <pre><code>class Task {  \n public:  \n  explicit Task(const TaskConfig&amp; config);  \n\n  Task(const TaskConfig&amp; config,  \n       const std::shared_ptr&lt;DependencyInjector&gt;&amp; injector);  \n  virtual ~Task() = default;  \n  const std::string&amp; Name() const;  \n  const TaskConfig&amp; Config() const { return config_; }  \n  virtual common::Status Execute(Frame* frame,  \n                                 ReferenceLineInfo* reference_line_info);  \n  virtual common::Status Execute(Frame* frame);  \n protected:  \n  Frame* frame_ = nullptr;  \n  ReferenceLineInfo* reference_line_info_ = nullptr;  \n  TaskConfig config_;  \n  std::string name_;  \n  std::shared_ptr&lt;DependencyInjector&gt; injector_;  \n};\n</code></pre> <p>\u6b21\u62bd\u8c61\u4ea7\u54c1\u7c7b</p> <p>\u4ee5\u00a0<code>TrajectoryOptimizer</code>\u00a0\u4e3a\u4f8b, override \u4e86\u7236\u7c7b\u7684\u00a0<code>Execute</code>\u00a0\u51fd\u6570(\u8fd9\u91cc\u6ca1\u6709\u518d\u5f80\u4e0b\u4f20\u9012\u8fd9\u4e2a\u51fd\u6570\u91cc, \u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u00a0<code>Process</code>\u00a0, \u5b50\u7c7b\u91cc\u7684\u6267\u884c\u51fd\u6570\u5165\u53c2\u4e0d\u591f\u6ee1\u8db3\u5b50\u7c7b\u7684\u590d\u6742\u5ea6\u8981\u6c42). \u6ca1\u6709 private \u6210\u5458, \u6240\u6709\u6210\u5458\u5747\u53ef\u88ab public \u7ee7\u627f. \u540c\u65f6\u589e\u52a0\u4e86\u65b0\u7684\u865a\u51fd\u6570\u00a0<code>Process</code>\u00a0\u5f3a\u5236\u5b50\u7c7b\u5fc5\u987b\u91cd\u8f7d\u4e4b.</p> <pre><code>class TrajectoryOptimizer : public Task {  \n public:  \n  explicit TrajectoryOptimizer(const TaskConfig &amp;config);  \n  TrajectoryOptimizer(const TaskConfig &amp;config,  \n                      const std::shared_ptr&lt;DependencyInjector&gt; &amp;injector);  \n  virtual ~TrajectoryOptimizer() = default;  \n\n  apollo::common::Status Execute(Frame *frame) override;  \n\n protected:  \n  virtual apollo::common::Status Process() = 0;  \n};\n</code></pre> <p>\u4ea7\u54c1\u7c7b</p> <p>\u4ee5\u00a0<code>OpenSpaceTrajectoryProvider</code>\u00a0\u4e3a\u4f8b, \u91cd\u8f7d\u4e86\u00a0<code>Process</code>\u00a0\u51fd\u6570, \u5b9e\u73b0\u591a\u6001.</p> <pre><code>class OpenSpaceTrajectoryProvider : public TrajectoryOptimizer {  \n public:  \n  OpenSpaceTrajectoryProvider(  \n      const TaskConfig&amp; config,  \n      const std::shared_ptr&lt;DependencyInjector&gt;&amp; injector);  \n  ~OpenSpaceTrajectoryProvider();  \n  void Stop();  \n  void Restart();  \n private:  \n  apollo::common::Status Process() override;  \n  void GenerateTrajectoryThread();  \n  bool IsVehicleNearDestination(const common::VehicleState&amp; vehicle_state,  \n                                const std::vector&lt;double&gt;&amp; end_pose,  \n                                double rotate_angle,  \n                                const common::math::Vec2d&amp; translate_origin);  \n\n  bool IsVehicleStopDueToFallBack(const bool is_on_fallback,  \n                                  const common::VehicleState&amp; vehicle_state);  \n  void GenerateStopTrajectory(DiscretizedTrajectory* const trajectory_data);  \n  void LoadResult(DiscretizedTrajectory* const trajectory_data);  \n  void ReuseLastFrameResult(const Frame* last_frame,  \n                            DiscretizedTrajectory* const trajectory_data);  \n  void ReuseLastFrameDebug(const Frame* last_frame);  \n private:  \n  bool thread_init_flag_ = false;  \n  std::unique_ptr&lt;OpenSpaceTrajectoryOptimizer&gt;  \n      open_space_trajectory_optimizer_;  \n  size_t optimizer_thread_counter = 0;  \n  OpenSpaceTrajectoryThreadData thread_data_;  \n  std::future&lt;void&gt; task_future_;  \n  std::atomic&lt;bool&gt; is_generation_thread_stop_{false};  \n  std::atomic&lt;bool&gt; trajectory_updated_{false};  \n  std::atomic&lt;bool&gt; data_ready_{false};  \n  std::atomic&lt;bool&gt; trajectory_error_{false};  \n  std::atomic&lt;bool&gt; trajectory_skipped_{false};  \n  std::mutex open_space_mutex_;  \n};\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_2","title":"\u603b\u7ed3","text":"<p>Apollo \u7684\u8fd9\u5957\u6a21\u677f\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u6709\u5982\u4e0b\u4f18\u70b9(\u6211\u8ba4\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\u662f\u53ef\u53d8\u53ef\u7ec4\u5408\u7684, \u53ea\u6709\u8bbe\u8ba1\u539f\u5219\u662f\u4e0d\u53d8\u7684):</p> <ul> <li>\u7b26\u5408\u5f00\u95ed\u539f\u5219, \u540e\u9762\u5373\u4fbf\u6709\u65b0\u7684 task \u8981\u52a0\u5165\u8fdb\u6765, \u4e5f\u53ea\u9700\u8981\u4f7f\u7528\u8ddf\u5927\u591a\u6570\u73b0\u5b58 task \u7c7b\u76f8\u540c\u7684\u63a5\u53e3\u00a0<code>const TaskConfig&amp; config, const std::shared_ptr&lt;DependencyInjector&gt;&amp; injector</code>\u00a0\u5728\u00a0<code>TaskFactory</code>\u00a0\u4e2d Register \u5373\u53ef. \u5982\u679c\u65e0\u6cd5\u4f7f\u7528\u4e00\u6837\u7684\u63a5\u53e3\u4e5f\u53ef\u4ee5\u53e6\u8d77\u7089\u7076\u4f7f\u7528\u6a21\u677f\u57fa\u7c7b\u7684<code>CreateObject</code>\u00a0\u51fd\u6570\u81ea\u5b9a\u4e49\u5236\u9020\u51fd\u6570.</li> <li>\u5982\u524d\u6587\u6240\u8bf4\u90e8\u5206\u7b26\u5408\u5408\u6210\u590d\u7528\u539f\u5219,\u00a0<code>TaskFactory</code>\u00a0\u901a\u8fc7\u590d\u5408\u7684\u65b9\u5f0f\u8054\u5408\u00a0<code>Factory</code>.</li> <li>\u7b26\u5408\u5355\u4e00\u804c\u8d23\u539f\u5219, \u6bcf\u4e2a\u7c7b\u7684\u5b9a\u4f4d\u5355\u4e00, \u6574\u4f53\u5c42\u6b21\u660e\u6670.</li> <li>\u7531\u4e8e\u4ea7\u54c1\u7c7b\u5185\u90e8\u7684\u6210\u5458\u53d8\u91cf\u57fa\u672c\u4e3a\u76f8\u540c\u7684\u7c7b\u6307\u9488(\u6216\u8005\u662f\u667a\u80fd\u6307\u9488)\u4e5f\u95f4\u63a5\u5730\u5b9e\u73b0\u4e86\u4eab\u5143\u6a21\u5f0f.</li> </ul> <p>\u4e5f\u6709\u4e9b\u6211\u89c9\u5f97\u53ef\u4ee5\u63d0\u5347\u7684\u5730\u65b9:</p> <ul> <li>register \u7684\u90e8\u5206\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u63a5\u53e3\u5b9e\u73b0, \u53ef\u4ee5\u53c2\u8003\u77e5\u4e4e\u6587\u7ae0, \u8fd9\u6837\u53ef\u4ee5\u8ba9\u4ea7\u54c1\u7ee7\u627f/\u805a\u5408\u63a5\u53e3\u7c7b. \u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u51e0\u767e\u884c\u7684 register \u91cd\u590d\u7c7b\u4f3c\u4ee3\u7801.</li> <li>\u53ef\u4ee5\u8003\u8651\u6240\u6709\u7684\u4ea7\u54c1\u7c7b\u90fd\u7ee7\u627f\u81ea\u4e00\u4e2a\u62bd\u8c61\u4ea7\u54c1\u7c7b\u800c\u4e0d\u662f\u5148\u62bd\u8c61\u4e00\u6ce2\u518d\u6b21\u62bd\u8c61\u4e00\u6ce2. \u81f3\u4e8e\u4e0d\u540c\u7c7b\u7684\u00a0<code>Process</code>\u00a0\u4e0d\u540c\u53ef\u4ee5\u8bbe\u7f6e\u4e13\u95e8\u7684\u00a0<code>Process</code>\u00a0\u63a5\u53e3\u7c7b, \u901a\u8fc7\u7ee7\u627f/\u91cd\u8f7d\u5b9e\u73b0\u4e0d\u540c\u529f\u80fd. \u5f53\u7136 Apollo \u8fd9\u4e48\u5206\u4e5f\u6709\u53ef\u80fd\u662f\u4e3a\u4e86\u8bed\u4e49/\u5206\u5de5\u4e0a\u7684\u73b0\u5b9e\u610f\u4e49.</li> </ul> <p>\u4e0b\u56fe\u4e3a\u6539\u8fdb\u540e\u7684 UML \u793a\u610f\u56fe, \u5176\u4e2d task \u7684\u5404\u4ea7\u54c1\u7c7b\u805a\u5408\u4e86 Interface \u4ea7\u54c1\u5236\u9020\u65b9\u6cd5, \u5e76\u4e14\u5404\u81ea\u7684\u6784\u9020\u51fd\u6570\u88ab\u7981\u6b62(private \u5c5e\u6027</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E6%8E%A7%E5%88%B6/","title":"Apollo\u63a7\u5236","text":"<p>\u95ee\u9898\u4e00\uff1aApollo\u7684\u7eb5\u5411\u63a7\u5236\u7684\u53c2\u8003\u70b9\u5230\u5e95\u600e\u4e48\u627e\uff1f</p> <p>\u7b54\uff1a\u7eb5\u5411\u63a7\u5236\u7684\u6846\u67b6\u5982\u4e0b</p> <p>\u5148\u8bf4\u7ed3\u8bba\uff0cApollo\u4e2d\u7eb5\u5411\u63a7\u5236\u7684\u8ddf\u8e2a\u70b9\uff08reference_point\u6216preview_point\uff09\u662f\u6839\u636e\u7edd\u5bf9\u65f6\u95f4\u627e\u7684\uff08\u4e5f\u5c31\u662f\u901a\u8fc7\u81ea\u8f66\u5f53\u524d\u7684\u7edd\u5bf9\u65f6\u95f4\u6233\uff0c\u627e\u8f68\u8ff9\u4e2d\u8ddd\u79bb\u8be5\u65f6\u95f4\u6233\u65f6\u95f4\u6700\u77ed\u7684\u8f68\u8ff9\u70b9\uff09\u3002\u6a2a\u5411\u63a7\u5236\u7684\u8ddf\u8e2a\u70b9\u4e5f\u662f\u6839\u636e\u65f6\u95f4\u627e\u7684\uff08target_point\uff09\uff08\u4e5f\u5c31\u662f\u901a\u8fc7\u81ea\u8f66\u5f53\u524d\u7684\u7edd\u5bf9\u65f6\u95f4\u6233\uff0c\u627e\u8f68\u8ff9\u4e2d\u8ddd\u79bb\u8be5\u65f6\u95f4\u6233\u65f6\u95f4\u6700\u77ed\u7684\u8f68\u8ff9\u70b9\uff09\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6eFLAGS_query_time_nearest_point_only\u00a0 \u00a0\u8fd9\u4e2a\u53c2\u6570\u4f7ftarget_point\u4e3a\u8ddd\u79bb\u81ea\u8f66\u6700\u8fd1\u7684\u70b9\u3002</p> <p>\u7eb5\u5411\u63a7\u5236\u4e2d\u6709\u4e09\u4e2a\u91cd\u8981\u7684\u70b9\uff1a</p> <p>mathed_point\uff1a\u53c2\u8003\u7ebf\u4e0a\u8ddd\u79bb\u81ea\u8f66xy\u6700\u8fd1\u7684\u70b9\u3002\u901a\u8fc7\u627e\u5230\u6700\u8fd1\u70b9-&gt;\u627e\u5230\u6700\u8fd1\u70b9\u7684\u524d\u70b9\u548c\u540e\u70b9-&gt;\u9ec4\u91d1\u5206\u5272+\u7ebf\u6027\u63d2\u503c\u5f97\u5230\u6700\u8fd1\u70b9\u3002\u8be5\u70b9\u4e3b\u8981\u7528\u4e8e\u83b7\u5f97\u81ea\u8f66\u5728frenet\u4e0b\u7684\u5750\u6807\uff0c\u4ece\u800c\u8ba1\u7b97\u51faPID\u63a7\u5236\u5668\u8ba1\u7b97\u8bef\u5dee\u65f6\u6240\u9700\u7684s_matched\u548cs_dot_match\u3002</p> <p>reference_point\uff1a\u5982\u679cFLAGS_enable_speed_station_preview\u4e3a0\uff0c\u4e5f\u5c31\u662f\u4e0d\u8003\u8651\u9884\u7784\uff0c\u90a3\u4e48reference_point\u4e3a\u8ddf\u8e2a\u70b9\u3002</p> <p>preview_point\uff1a\u5982\u679cFLAGS_enable_speed_station_preview\u4e3a1\uff0c\u4e5f\u5c31\u662f\u8003\u8651\u9884\u7784\uff0c\u90a3\u4e48preview_point\u4e3a\u8ddf\u8e2a\u70b9\u3002</p> <p> </p> <p></p> <p></p> <p>** ** \u95ee\u9898\u4e8c\uff1aApollo\u7684\u6a2a\u5411\u63a7\u5236\u7684\u53c2\u8003\u70b9\u5230\u5e95\u600e\u4e48\u627e\uff1f</p> <p>\u7b54\uff1a  \u6a2a\u5411\u63a7\u5236\u4e2d\u6709\u4e09\u4e2a\u91cd\u8981\u7684\u70b9\uff1a</p> <p>target_point\uff1a\u76f8\u5f53\u4e8e\u7eb5\u5411\u63a7\u5236\u4e2d\u7684reference_point\u6216preview_point\uff0c\u8be5\u70b9\u4e3a\u8ddf\u8e2a\u70b9\uff0c\u4e5f\u662f\u901a\u8fc7\u7edd\u5bf9\u65f6\u95f4\u627e\u5230\u7684\uff08\u4e5f\u5c31\u662f\u901a\u8fc7\u81ea\u8f66\u5f53\u524d\u7684\u7edd\u5bf9\u65f6\u95f4\u6233\uff0c\u627e\u8f68\u8ff9\u4e2d\u8ddd\u79bb\u8be5\u65f6\u95f4\u6233\u65f6\u95f4\u6700\u77ed\u7684\u8f68\u8ff9\u70b9\uff09\u3002\uff08\u7ed9\u4e86\u9009\u9879\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167\u6700\u8fd1\u8ddd\u79bb\u6765\u627e\uff0c\u9ed8\u8ba4\u662f\u6839\u636e\u65f6\u95f4\uff09\u901a\u8fc7\u8be5\u70b9\u548c\u8f66\u8f86\u81ea\u8eab\u7684xy\u5750\u6807\uff0c\u53ef\u4ee5\u6c42\u5f97LQR\u7684\u56db\u4e2a\u72b6\u6001\u91cf\uff08\u6a2a\u5411\u8bef\u5dee\uff0c\u6a2a\u5411\u8bef\u5dee\u53d8\u5316\u7387\uff0c\u822a\u5411\u8bef\u5dee\uff0c\u822a\u5411\u8bef\u5dee\u53d8\u5316\u7387\uff09\u3002\u00a0\u00a0 \u00a0</p> <p>preview_point\uff1a\u901a\u8fc7\u4e00\u5b9a\u7684\u9884\u7784\u65f6\u95f4\uff0c\u627e\u5230\u6700\u8fd1\u7684\u8f68\u8ff9\u70b9</p> <p>matched_point\uff1a\u79bb\u8f68\u8ff9\u70b9\u6700\u8fd1\u7684\u53c2\u8003\u70b9\u3002</p> <p> </p> <p>preview_point\u548cmatched_point\u4e3b\u8981\u662f\u4e3a\u4e86\u6c42\u9884\u7784\u540e\u7684\u6a2a\u5411\u8bef\u5dee\uff0c\u6709\u5f88\u591a\u5730\u65b9\u4f1a\u7528\u5230\u8fd9\u4e2a\u8bef\u5dee\uff0c\u6bd4\u5982\u4e4b\u540e\u6c42\u53cd\u9988\u7684\u65f6\u5019\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E6%8E%A7%E5%88%B6%E6%A8%A1%E5%9D%97%E4%B8%ADmatch-point%E6%80%8E%E4%B9%88%E6%89%BE%EF%BC%9F/","title":"Apollo\u63a7\u5236\u6a21\u5757\u4e2dmatch point\u600e\u4e48\u627e\uff1f","text":"<p>\u6700\u540e\u7684match point\u4e0d\u4e00\u5b9a\u662ftrajectory\u53d1\u6765\u7684\u70b9\uff0c\u53ef\u80fd\u662f\u7ecf\u8fc7\u9ec4\u91d1\u641c\u7d22+\u63d2\u503c\u627e\u5230\u7684\u4e2d\u95f4\u70b9\u3002</p> <p></p> <p>\u627e\u5230match point\u540e\u600e\u4e48\u8ba1\u7b97\u8bef\u5dee\uff1f</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E6%B5%8B%E8%AF%95/","title":"Apollo\u6d4b\u8bd5","text":"<p>Apollo\u7684\u9884\u6d4b\u6a21\u5757\u67092\u79cd\u8c03\u8bd5\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u79bb\u7ebf\u6a21\u5f0f\uff0c\u53e6\u5916\u4e00\u79cd\u662f\u8dd1\u6d4b\u8bd5\u7528\u4f8b\u3002 </p> <p>\u79bb\u7ebf\u6a21\u5f0f\u7684\u6253\u5f00\u65b9\u5f0f\u5982\u4e0b</p> <p></p> <p>\u79bb\u7ebf\u6a21\u578b\u7684\u7ed3\u679c\u662f\u4e00\u4e9b\u7279\u5f81\u548c\u9884\u6d4b\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u3002</p> <p></p> <p></p> <p>\u6d4b\u8bd5\u7528\u4f8b \u9884\u6d4b\u7528\u5230\u7684\u5730\u56fe\u662fkml_map.bin\uff0c\u4e0b\u9762\u662f\u53ef\u89c6\u5316\u7684\u7ed3\u679c\u3002 </p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u7ed3\u5408\u5730\u56fe\u548c\u6bcf\u4e2a\u8bc4\u4f30\u5668\u3001\u9884\u6d4b\u5668\u7684\u6d4b\u8bd5\u7528\u4f8b\u6765\u719f\u6089\u548c\u6d4b\u8bd5\u5b83\u4eec\u7684\u529f\u80fd\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E8%A7%84%E5%88%92/","title":"Apollo\u89c4\u5212","text":"<p>\u95ee\u9898\u4e00\uff1a \u00a0 \u6709\u4e86\u8def\u5f84\u51b3\u7b56\u4e4b\u540e\uff0c\u8fd8\u8981\u5bf9\u8def\u5f84\u8fdb\u884c\u4f18\u5316\u3002\u8def\u5f84\u4f18\u5316\u5206\u4e3a\u56db\u4e2a\u6b65\u9aa4\uff1a</p> <p>1\uff09\u5c06\u8fde\u7eed\u6027\u95ee\u9898\u79bb\u6563\u5316\u3002\u4ee5 \u2206s \u4e3a\u95f4\u9694\u8fdb\u884c\u91c7\u6837\uff0c\u5f97\u5230 n \u4e2a\u70b9\u3002\u2206s \u4e0d\u80fd\u592a\u5927\u4e5f\u4e0d\u80fd\u592a\u5c0f\uff0c\u5982\u679c\u7279\u522b\u5c0f\u5728\u5de5\u7a0b\u4e0a\u4f1a\u5f71\u54cd\u6c42\u89e3\u901f\u5ea6\uff0c\u6240\u4ee5 \u2206s \u901a\u5e38\u8bbe\u7f6e\u4e3a 0.5 \u5398\u7c73\u3002</p> <p>2\uff09\u660e\u786e\u8981\u6ee1\u8db3\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u7ea6\u675f\u6761\u4ef6\u5305\u62ec\u4e09\u4e2a\uff1a\u4e3b\u8f66\u5fc5\u987b\u5728\u9053\u8def\u8fb9\u754c\u5185\uff0c\u540c\u65f6\u4e0d\u80fd\u4e0e\u969c\u788d\u7269\u53d1\u751f\u78b0\u649e\uff1b\u6839\u636e\u5f53\u524d\u72b6\u6001\uff0c\u4e3b\u8f66\u7684\u6a2a\u5411\u901f\u5ea6/\u52a0\u901f\u5ea6/\u52a0\u52a0\u901f\u5ea6\u6709\u7279\u5b9a\u7684\u8fd0\u52a8\u5b66\u9650\u5236\uff1b\u5fc5\u987b\u6ee1\u8db3\u57fa\u672c\u7684\u7269\u7406\u539f\u7406\u3002</p> <p>3\uff09\u660e\u786e\u8981\u52aa\u529b\u8fbe\u5230\u7684\u76ee\u6807\u3002\u7b2c\u4e00\u76ee\u6807\u662f\u786e\u4fdd\u5b89\u5168\u793c\u8c8c\u5730\u9a7e\u9a76\uff0c\u4e0d\u80fd\u56db\u5904\u4e71\u7a9c\uff0c\u7528\u6570\u5b66\u8bed\u8a00\u7684\u8868\u8fbe\u76f8\u5f53\u4e8e\u4f7f\u6a2a\u5411\u4f4d\u79fb\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\uff1b\u7b2c\u4e8c\u76ee\u6807\u662f\u786e\u4fdd\u8212\u9002\u7684\u4f53\u611f\uff0c\u5c3d\u53ef\u80fd\u964d\u4f4e\u6a2a\u5411\u901f\u5ea6/\u52a0\u901f\u5ea6/\u52a0\u52a0\u901f\u5ea6\u3002</p> <p>4\uff09\u5c06\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\u3002\u8f6c\u5316\u4e3a\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\u4e4b\u540e\uff0c\u6574\u4e2a\u590d\u6742\u95ee\u9898\u7b80\u5355\u5316\uff0c\u8fd0\u7528\u4e00\u4e9b\u73b0\u6210\u6bd4\u8f83\u597d\u7684\u6c42\u89e3\u4e8c\u6b21\u89c4\u5212\u7b97\u6cd5\uff0c\u89c4\u5212\u51fa\u6bd4\u8f83\u5408\u7406\u7684\u8fd0\u52a8\u8def\u5f84\u3002</p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E5%85%AC%E5%BC%80%E8%AF%BE/","title":"Apollo\u8def\u5f84\u89c4\u5212\u516c\u5f00\u8bfe","text":"<p>\u5982\u679creference line\u6709\u591a\u6761\uff0c\u5c31\u4f1a\u5224\u65ad\u662f\u5426\u9700\u8981\u6362\u9053 </p> <p></p> <p></p> <p></p> <p></p> <p>\u6bd4\u5982\u5bf9\u4e8e\u501f\u9053\u7684\u51b3\u7b56\uff0c\u53ef\u80fd\u5411\u5de6\u501f\u9053\uff0c\u4e5f\u53ef\u80fd\u5411\u53f3\u501f\u9053\uff0c\u90a3\u4e48\u5c31\u6709\u591a\u7ec4bounds\uff0c\u4e5f\u5c31\u6709\u591a\u7ec4\u4f18\u5316\u540e\u7684path\uff0c\u6240\u9700 assessment decider\u5c31\u662f\u9009\u51fa\u8fd9\u51e0\u6761path\u4e2d\u6700\u4f18\u7684</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E9%A2%84%E6%B5%8B/","title":"Apollo\u9884\u6d4b","text":"<p>\u95ee\u9898\u4e00\uff1a \u76ee\u524dApollo\u7684\u9884\u6d4b\u4ea4\u4e92\uff0c\u6709\u6ca1\u6709\u8003\u8651\u81ea\u8f66\u7684\u51b3\u7b56\uff1f</p> <p>\u7b54\uff1a\u6ca1\u6709\uff0c\u76ee\u524dApollo\u7684\u9884\u6d4b\u4ea4\u4e92\u53ea\u662f\u7528\u6765\u670d\u52a1\u4e8e\u969c\u788d\u7269\u7684\u9884\u6d4b\uff0c\u901a\u8fc7\u8bc4\u4ef7\u969c\u788d\u8f66\u7684\u591a\u6761\u8f68\u8ff9\uff08\u6bcf\u6761\u8f68\u8ff9\u5e26\u6709\u4e00\u5b9a\u7684\u5148\u9a8c\u6982\u7387\uff0c\u7531\u884c\u4e3a\u9884\u6d4b+\u8f68\u8ff9\u751f\u6210\u7ed9\u51fa\uff0c\u6216\u7531LSTM\u76f4\u63a5\u7ed9\u51fa\uff09\u4e0e\u81ea\u8f66\u7684\u4ea4\u4e92cost\uff0c\u6765\u66f4\u65b0\u969c\u788d\u8f66\u539f\u6765\u9884\u6d4b\u8f68\u8ff9\u7684\u6982\u7387\u5206\u5e03\u3002</p> <p>\u95ee\u9898\u4e8c\uff1a \u76ee\u524dApollo\u9884\u6d4b\u4e2d\u8f66\u9053\u7ebf\u7684\uff0c\u662f\u7531\u611f\u77e5\u6a21\u5757\u83b7\u53d6\u7684\u5417\uff1f \u7b54\uff1a\u4e0d\u662f\uff0cApollo\u4f9d\u8d56\u4e8e\u9ad8\u7cbe\u5ea6\u5730\u56fe\uff0c\u611f\u77e5\u6a21\u5757\u4e2d\u7684\u8f66\u9053\u7ebf\u68c0\u6d4b\u4e00\u822c\u7528\u4e8e\u9ad8\u7cbe\u5730\u56fe\u7684\u5236\u4f5c\uff08\u6807\u5b9a\uff09\u3002</p> <p>\u95ee\u9898\u4e09\uff1a planning\u4e2d\u4e5f\u6709scenario\u6a21\u5757\uff0c\u9884\u6d4b\u6a21\u5757\u4e2d\u7684scenario\uff08storytelling\u6a21\u5757\uff09\u548cplanning\u4e2d\u6709\u4ec0\u4e48\u533a\u522b\uff1f</p> <p>\u7b54\uff1a\u8fd9\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u6ca1\u4ec0\u4e48\u8054\u7cfb\u3002planning\u4e2dscenario\u6a21\u5757\u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u7528\u6765\u5224\u65ad\u81ea\u8f66\u6240\u5904\u7684\u573a\u666f\uff0c\u7136\u540e\u8c03\u7528\u54ea\u4e9bstage\u548ctask\u3002\u9884\u6d4b\u6a21\u5757\u4e2d\u7684scenario\u53ea\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u4ea4\u53c9\u8def\u53e3\uff0c\u4e00\u4e2a\u76f4\u9053\u3002\u7528\u6765\u5224\u65ad\u9884\u6d4b\u969c\u788d\u7269\u7684\u4f18\u5148\u7ea7\uff08\u8c28\u614e\uff08caution\uff09\u3001\u6b63\u5e38\uff08normal\uff09\u3001\u5ffd\u7565\uff08ignore\uff09\uff09</p> <p></p> <p>\u95ee\u9898\u56db\uff1a Apollo\u4e2d\u6709\u54ea\u4e9b\u9884\u6d4b\u5668\uff1f \u7b54\uff1a </p> <p></p> <p>\u95ee\u9898\u4e94\uff1a \u89c4\u5212\u7684pipeline\u662f\u4ec0\u4e48\uff1f 6.0</p> <p></p> <p>\u5bf9\u4e8ecaution\u7528LSTM\u5c5e\u4e8e\u76f4\u63a5\u9884\u6d4b\u8f68\u8ff9\uff083s\uff09\uff0c\u7136\u540e\u8fdb\u884c\u8f68\u8ff9\u7684\u6269\u5c55Trajectory Extension\uff088s\uff09</p> <p>\u5bf9\u4e8enormal\uff0c\u7528MLP\u8fdb\u884c\u95f4\u63a5\u9884\u6d4b\uff0c\u5148\u9884\u6d4b\u884c\u4e3a\uff08\u5206\u7c7b\u95ee\u9898\uff09\uff0c\u518d\u91c7\u6837\u751f\u6210\u8f68\u8ff9\uff088s\uff09\u3002</p> <p></p> <p>7.0\u52a0\u5165\u4ea4\u4e92 </p> <p>\u95ee\u9898\u516d\uff1a\u9884\u6d4b\u4e2d\u67093s\u548c8s\uff0c\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u7b54\uff1a3s\u662f\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\uff08evaluator\uff09\u9884\u6d4b\u51fa\u7684\u8f68\u8ff9\u957f\u5ea6\uff0c8s\u662f\u7ecf\u8fc7\u540e\u5904\u7406\uff08predicator\uff09\u540e\u8f68\u8ff9\u7684\u957f\u5ea6</p> <p>\u95ee\u9898\u4e03\uff1a \u8bc4\u4ef7\u6307\u6807\u662f\u4ec0\u4e48\uff1f \u7b54\uff1aADE\u548cFDE\u3002 </p> <p>\u95ee\u9898\u516b\uff1a \u9884\u6d4b\u7684\u8f93\u5165\u6570\u636e\uff0c\u662f\u6fc0\u5149\u96f7\u8fbe\u3001\u6444\u50cf\u5934\u7684\u6570\u636e\uff0b\u566a\u58f0\uff0c\u8fd8\u662f\u611f\u77e5\u8f93\u51fa\u7684\u6570\u636e\uff1f \u7b54\uff1a\u7528\u7684\u662f\u611f\u77e5\u5904\u7406\u540e\u7684\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4Apollo\u7684\u611f\u77e5\u548c\u9884\u6d4b\u662f\u89e3\u8026\u7684\u3002</p> <p>\u95ee\u9898\u4e5d\uff1a Apollo7.0\u7684\u9884\u6d4b\u548c\u4e4b\u524d\u6bd4\u6709\u4ec0\u4e48\u6539\u8fdb\uff1f \u7b54\uff1a\u589e\u52a0\u4e86\u4ea4\u4e92\u5f0f\u7684\u9884\u6d4b\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u4ea4\u4e92\u6765\u66f4\u65b0\u9884\u6d4b\u8f68\u8ff9\u7684\u540e\u9a8c\u6982\u7387\u3002</p> <p>\u95ee\u9898\u5341\uff1a \u76ee\u524d\u7684\u9884\u6d4b\u8017\u65f6\u591a\u5c11\uff1f \u7b54\uff1a\u76ee\u524d\u7684\u524d\u5411\u4f20\u64ad\u9884\u6d4b\uff0c\u7ebf\u4e0a\u9884\u6d4b\u4e00\u4e2a\u76ee\u6807\uff0c\u57281080\u663e\u5361\u4e0a\u9700\u898110ms\u91cf\u7ea7\u3002\u9884\u6d4b\u591a\u4e2a\u76ee\u524d\u4e0d\u4f1a\u663e\u8457\u589e\u52a0\uff0c\u53ef\u4ee5\u591a\u7ebf\u7a0b\u3002</p> <p>\u95ee\u9898\u5341\u4e00\uff1a \u76ee\u524d\u9884\u6d4b\u7684pipeline\uff1f</p> <p>\u9664\u4e86\u4e4b\u524d\u63d0\u5230\u7684\u6839\u636e\u573a\u666f\u9009\u62e9\u9884\u6d4b\u5668\u4e4b\u5916\u3002\u6211\u4eec\u5148\u9884\u6d4btarget\u70b9\uff08\u53ef\u4ee5\u901a\u8fc7\u7f51\u683c\u91c7\u6837\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u8f66\u9053\u5185\u91c7\u6837\u7684\u65b9\u5f0f\uff0c\u540e\u8005\u8003\u8651\u5230\u9ad8\u7cbe\u5730\u56fe\uff0c\u6548\u7387\u66f4\u9ad8\uff09\uff0c\u6839\u636etarget\u70b9\uff08\u8f68\u8ff9\u7ec8\u70b9\uff09\u6765\u751f\u6210\u8f68\u8ff9\uff08\u53ef\u4ee5\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u751f\u6210\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u89c4\u5219\u6765\u751f\u6210\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8eNormal\u969c\u788d\u7269\u00a0 \u00a0\u5148\u884c\u4e3a\u9884\u6d4b\uff08\u63a5\u4e0b\u6765\u9009\u62e9\u6bcf\u4e00\u6761\u8f66\u9053\u7684\u6982\u7387or\u5341\u5b57\u8def\u53e3\u9009\u62e9\u6bcf\u4e00\u4e2a\u8def\u53e3\u7684\u6982\u7387\uff09\uff0c\u518d\u751f\u6210\u8f68\u8ff9\uff08\u9884\u6d4b\u5668\u4e3alaneSequencePredictor\uff09\u3002</p> <p> \u5bf9\u4e8e\u884c\u4eba\u969c\u788d\u7269\uff0c\u76f4\u63a5\u9884\u6d4b\u8f68\u8ff9 \u5bf9\u4e8ecaution\u969c\u788d\u7269\uff0c\u5148\u7528\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u884c\u4e3a\uff0c\u518d\u751f\u6210\u8f68\u8ff9\uff08\u9884\u6d4b\u5668\u4e3aMoveSequencePredictor\uff09 </p> <p>\u5177\u4f53\u53c2\u8003TNT\u8bba\u6587</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Apollo%E9%A2%84%E6%B5%8B/#target-driven-trajectory-prediction","title":"Target-driveN Trajectory Prediction","text":"<p> \u5bf9\u5e94\u4e0a\u56fe\u7684\u6b65\u9aa4 </p> <p></p> <p></p> <p></p> <p>\u5c06\u4ea4\u53c9\u53e3\u6216\u8005\u6267\u884c\u9053\u8def\u884c\u4e3a\u9884\u6d4b\uff08\u610f\u56fe\u9884\u6d4b\uff0cevaluator\uff09\u7ed3\u679c\u4f5c\u4e3a\u5148\u9a8c\u6982\u7387\u3002\u91c7\u6837\u901f\u5ea6\u751f\u6210\u9884\u6d4b\u8f68\u8ff9\uff0c\u7136\u540e\u8bc4\u4ef7\uff0c\u9009\u62e9\uff0c\u66f4\u65b0\u5148\u9a8c\u6982\u7387\uff08\u8be5\u6b65\u9aa4\u5728predictor\u4e0a\u5b8c\u6210\uff09\u3002</p> <p></p> <p></p> <p>\u95ee\u9898\u5341\u4e8c\uff1a \u5728\u5341\u5b57\u8def\u53e3\u4e2d\uff0c\u8f66\u9053\u7ebf\u90fd\u662f\u865a\u62df\u4ea4\u9519\u7684\u3002\u600e\u90a3\u4e48\u4fdd\u8bc1\u9884\u6d4b\u7684\u8f68\u8ff9\u4e00\u5b9a\u5728\u8f66\u9053\u7ebf\u5185\uff1f</p> <p>\u7b54\uff1a\u8fd9\u53d6\u51b3\u4e8e\u7528\u7684\u9884\u6d4b\u5668\uff08evaluator\uff09\uff0c\u5982\u679c\u7528\u7684\u662flane sequence evaluator\uff0c\u90a3\u4e48\u662f\u6309\u7167\u8f66\u9053\u4e2d\u5fc3\u7ebf\u8d70\u7684\uff0c\u5982\u679c\u662f\u522b\u7684\u9884\u6d4b\u5668\u53ef\u80fd\u4e0d\u4f1a\u6309\u7167\u4e2d\u5fc3\u7ebf\u8d70\u3002</p> <p>\u95ee\u9898\u5341\u4e09\uff1a \u9884\u6d4b\u9700\u8981\u591a\u957f\u65f6\u95f4\u7684\u5386\u53f2\u8f68\u8ff9?\u8d8a\u957f\u8d8a\u597d\u5417\uff1f \u7b54\uff1a2s\uff0c\u4e0d\u4e00\u5b9a\u8d8a\u957f\u8d8a\u597d\uff0c\u5386\u53f2\u8f68\u8ff9\u8d8a\u957f\u9700\u8981\u7684\u5904\u7406\u65f6\u95f4\u5c31\u8d8a\u591a\u3002</p> <p>\u95ee\u9898\u5341\u56db\uff1a \u76ee\u524dcaution\u969c\u788d\u7269\u6700\u591a\u51e0\u4e2a\uff1f\u6709\u6548\u969c\u788d\u7269\u7684\u8ddd\u79bb\u8303\u56f4\u662f\u591a\u5c11\uff1f \u7b54\uff1a6\u4e2a\uff0c60m</p> <p></p> <p>\u95ee\u9898\u5341\u4e94\uff1a \u9884\u6d4b\u591a\u4e45\u6267\u884c\u4e00\u6b21\uff1f\u9884\u6d4b\u8f68\u8ff9\u4e2d\u6bcf\u4e2a\u9884\u6d4b\u70b9\u95f4\u9694\u591a\u5c11s \u7b54\uff1a100ms\uff0c100ms</p> <p>\u95ee\u9898\u5341\u516d\uff1f \u76f4\u63a5\u9884\u6d4b\u548c\u95f4\u63a5\u9884\u6d4b\u7684\u533a\u522b\uff1f\u76ee\u524dApollo\u7528\u7684\u54ea\u4e00\u79cd\uff1f</p> <p>\u7b54\uff1a\u76f4\u63a5\u9884\u6d4b\u662f\u901a\u8fc7\u4e4b\u524d\u7684\u8f68\u8ff9\uff0c\u76f4\u63a5\u8f93\u5165\u5230\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u540e\u8fb9\u51e0\u79d2\u7684\u8f68\u8ff9\u3002\u7b80\u4ecb\u9884\u6d4b\u662f\u901a\u8fc7\u5148\u9884\u6d4b\u610f\u56fe\uff08\u6bd4\u5982\u8981\u6362\u9053\u54ea\u6761\u8f66\u9053\uff0c\u6982\u7387\u662f\u591a\u5c11\uff09\uff0c\u518d\u6839\u636e\u610f\u56fe\u91c7\u6837\u751f\u6210\u8f68\u8ff9\u3002Apollo\u5bf9\u4e8e\u884c\u4eba\u91c7\u7528\u76f4\u63a5\u9884\u6d4b\uff0c\u5bf9\u4e8e\u8f66\u8f86\u91c7\u7528\u95f4\u63a5\u9884\u6d4b\u3002</p> <p></p> <p>\u95ee\u9898\u5341\u4e03\uff1a Apollo\u7684evaluator\u548cpredictor\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u7b54\uff1aevaluator\u4e3a\u524d\u5904\u7406\uff0c\u9884\u6d4b\u77ed\u65f6\u8f68\u8ff9\u6216\u8005\u610f\u56fe\u3002predictor\u4e3a\u540e\u5904\u7406\uff0c\u6269\u5c55\u77ed\u65f6\u8f68\u8ff9\u6210\u957f\u65f6\u8f68\u8ff9\uff0c\u6216\u8005\u6839\u636e\u610f\u56fe\u91c7\u6837\u751f\u6210\u957f\u65f6\u57df\u8f68\u8ff9\u3002 \u4e3b\u8981\u6309\u7167\u76f4\u63a5\u9884\u6d4b\u548c\u95f4\u63a5\u9884\u6d4b\u6765\u5212\u5206\u3002</p> <p>\u5bf9\u4e8e\u76f4\u63a5\u9884\u6d4b\uff0cevaluator\u4e00\u822c\u7531LSTM\u7ed3\u5408\u8bed\u4e49\u5730\u56fe\u76f4\u63a5\u7ed9\u51fa\u4e00\u6bb5\u8f83\u77ed\u7684\u9884\u6d4b\u8f68\u8ff9\uff083s\uff09\uff0c\u6bd4\u5982vehicle\u4e2d\u7684interaction \u548ccaution\uff0c\u6bd4\u5982SEMANTIC_LSTM_EVALUATOR\u548cJOINTLY_PREDICTION_PLANNING_EVALUATOR\u3002</p> <p>\u5bf9\u4e8e\u95f4\u63a5\u9884\u6d4bevaluator\u4e00\u822c\u7531MLP\u7ed9\u51fa\u5404\u4e2a\u884c\u4e3a\u610f\u56fe\u7684\u6982\u7387\uff0c\u6bd4\u5982JUNCTION_MLP_EVALUATOR\u548cCRUISE_MLP_EVALUATOR\u548cMLP_EVALUATOR\u3002</p> <p></p> <p>predictor\u4e2d\uff0c\u5bf9\u4e8e\u77ed\u65f6\u57df\u7684\u8f68\u8ff9\u8fdb\u884c\u6269\u5145\uff0c\u751f\u6210\u957f\u65f6\u57df\u7684\u8f68\u8ff9</p> <p>\u5bf9\u4e8e\u4e4b\u524d\u7684\u610f\u56fe\uff0c\u91c7\u6837\u751f\u6210\u957f\u65f6\u57df\u7684\u8f68\u8ff9\u3002</p> <p> </p> <p>free_move_predictor</p> <p>\u9996\u5148\u4ecb\u7ecdfree_move_predictor\uff0cfree_move_predictor\u662f\u81ea\u7531\u79fb\u52a8\u8bc4\u4f30\u5668\uff0c\u4e3b\u8981\u662f\u9884\u6d4b\u4e0d\u5728\u8def\u4e0a\u7684\u6240\u6709\u7c7b\u578b\u7684\u969c\u788d\u7269\u4ee5\u53ca\u884c\u4eba\uff0c\u4e4b\u524d\u884c\u4eba\u901a\u8fc7pedestrian_interaction_evaluator\u8bc4\u4f30\u4e4b\u540e\uff0c\u53ea\u67092s\u7684\u9884\u6d4b\u8f68\u8ff9\uff0c\u540e\u9762\u4f1a\u901a\u8fc7free_move_predictor\u8865\u51456s\u7684\u8f68\u8ff9\uff0c\u4e00\u5171\u9884\u6d4b8s\u3002free_move_predictor\u662f\u901a\u8fc7\u5f53\u524d\u7684\u901f\u5ea6\u548c\u671d\u5411\u62df\u5408\u76848s\u8f68\u8ff9\uff0c\u56e0\u6b64\u53d8\u5316\u975e\u5e38\u5927\uff0c\u8868\u73b0\u4e3a\u9884\u6d4b\u7ebf\u4f1a\u7529\u6765\u7529\u53bb\u7684\u3002</p> <p></p> <p>lane_sequence_predictor lane_sequence_predictor\u4f1a\u6839\u636e\u8bc4\u4f30\u7684\u8f66\u9053\uff0c\u8fc7\u6ee4\u4e00\u4e9b\u4e0d\u592a\u53ef\u80fd\u7684\u8f66\u9053\uff0c\u7136\u540e\u518d\u9009\u62e9\u4e00\u6761\u66f2\u7387\u6700\u4f4e\u7684\u8def\u5f84\u3002</p> <p> **move_sequence_predictor\u00a0\u00a0\u00a0 \u00a0**</p> <p>move_sequence_predictor\u548clane_sequence_predictor\u6709\u8f7b\u5fae\u4e0d\u540c\uff0c\u4e3b\u8981\u4e0d\u540c\u5728\u751f\u6210\u8f68\u8ff9\u7684\u90e8\u5206(DrawMoveSequenceTrajectoryPoints)\uff0c\u8fdb\u884c\u4e86\u591a\u9879\u5f0f\u62df\u5408EvaluateQuarticPolynomial\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u521a\u4f53\u7684\u539f\u56e0\uff1f</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/CNN%E5%8E%9F%E7%90%86/","title":"CNN\u539f\u7406","text":"<p>\u5377\u79ef\u6838\u7684\u6570\u91cf = \u8f93\u51fa\u7684\u901a\u9053\u6570 \u5377\u79ef\u6838\u7684\u5c42\u6570 = \u8f93\u5165\u7684\u901a\u9053\u6570</p> <p>\u5982\u56fe\u4e2d\u6240\u793a\uff1a - \u8f93\u5165RGB\u4e09\u4e2a\u901a\u9053\uff0cW0\u5377\u79ef\u6838\u7684\u5c42\u6570\uff08\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff09\u5373\u4e3a3 - \u4e00\u5171\u6709W0\u548cW1\u4e24\u4e2a\u5377\u79ef\u6838\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u901a\u9053\u6570\u4e3a2 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/MPPI%E8%A7%84%E5%88%92%E5%99%A8/","title":"MPPI\u89c4\u5212\u5668","text":"<p>MPPI\u89c4\u5212\u5668\uff0c\u5168\u79f0\u662f\u6a21\u578b\u9884\u6d4b\u8def\u5f84\u79ef\u5206\uff08Model Predictive Path Integral\uff09\u7b97\u6cd5\u3002\u4ed6\u4e3b\u8981\u662f\u901a\u8fc7\u968f\u673a\u751f\u6210\u63a7\u5236\u5e8f\u5217\uff0c\u6839\u636e\u63a7\u5236\u5e8f\u5217\u524d\u5411\u6a21\u62df\u8f66\u8f86\u7684\u8f68\u8ff9\uff0c\u7136\u540e\u8bc4\u4ef7\u8f68\u8ff9\u7684\u8d28\u91cf\u3002\u6839\u636e\u8f68\u8ff9\u7684\u8d28\u91cf\u6c42\u51fa\u6765\u76f8\u5e94\u7684\u6743\u91cd\uff0c\u5bf9\u4e4b\u524d\u968f\u673a\u751f\u6210\u7684\u63a7\u5236\u5e8f\u5217\u52a0\u6743\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u8f83\u597d\u7684\u63a7\u5236\u5e8f\u5217\u7684\u7b97\u6cd5\u3002\u4ed6\u7684\u601d\u60f3\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7\u591a\u4e2afor\u5faa\u73af\u5373\u53ef\u5b9e\u73b0\uff0c\u4e0d\u7528\u8c03\u7528\u4efb\u4f55\u6c42\u89e3\u5668\u3002</p> <p>MPPI\u6700\u4e3b\u8981\u7684\u4f18\u70b9\u5c31\u662f\u8003\u8651\u4e86\u4e0d\u786e\u5b9a\u6027\u548c\u52a8\u6001\u73af\u5883\u4e2d\u7684\u53d8\u5316\uff0c\u751f\u6210\u673a\u5668\u4eba\u7684\u6700\u4f73\u8f68\u8ff9\u3002\u79ef\u5206\u7684\u542b\u4e49\u662f\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\uff0c\u5bf9\u6240\u6709\u7684\u8def\u5f84\u8fdb\u884c\u52a0\u6743\uff0c\u5f97\u5230\u5f53\u524d\u65f6\u95f4\u6b65\u4e0b\u7684\u6700\u4f18\u63a7\u5236\u91cf\u3002 </p> <p></p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# \u73af\u5883\u548cMPPI\u53c2\u6570\ngoal_pos = np.array([10, 0])  # \u76ee\u6807\u4f4d\u7f6e\nobstacle_pos = np.array([5, -1])  # \u969c\u788d\u7269\u4f4d\u7f6e\nobstacle_radius = 1.0  # \u969c\u788d\u7269\u534a\u5f84\nnum_samples = 500  # \u968f\u673a\u6837\u672c\u6570\nhorizon = 20  # \u63a7\u5236\u5e8f\u5217\u7684\u957f\u5ea6\nsigma_v = 1.0  # \u901f\u5ea6\u7684\u968f\u673a\u6270\u52a8\u5f3a\u5ea6\nsigma_delta = 0.5  # \u8f6c\u89d2\u7684\u968f\u673a\u6270\u52a8\u5f3a\u5ea6\nlambda_param = 0.1  # \u6e29\u5ea6\u53c2\u6570\n\n# \u81ea\u884c\u8f66\u6a21\u578b\u6a21\u62df\u51fd\u6570\ndef simulate_bicycle(state, v, delta, dt=0.1, L=1.0):\n    x, y, theta = state\n    x += v * np.cos(theta) * dt\n    y += v * np.sin(theta) * dt\n    theta += v / L * np.tan(delta) * dt\n    return np.array([x, y, theta])\n\n# \u6210\u672c\u51fd\u6570\ndef compute_cost(trajectory):\n    # \u5230\u8fbe\u76ee\u6807\u7684\u6210\u672c\n    goal_cost = np.linalg.norm(trajectory[-1, :2] - goal_pos)\n    # \u907f\u514d\u969c\u788d\u7269\u7684\u6210\u672c\n    obstacle_cost = np.sum(np.exp(-np.linalg.norm(trajectory[:, :2] - obstacle_pos, axis=1)**2 / (2 * obstacle_radius**2)))\n    return goal_cost + obstacle_cost\n\n# MPPI\u7b97\u6cd5\ndef mppi_control(initial_state):\n    best_sequence = None\n    best_cost = float('inf')\n    weights = np.zeros(num_samples)\n    for i in range(num_samples):\n        v_samples = np.random.randn(horizon) * sigma_v\n        delta_samples = np.random.randn(horizon) * sigma_delta\n        state = initial_state.copy()\n        trajectory = np.zeros((horizon, 3))\n        for t in range(horizon):\n            state = simulate_bicycle(state, v_samples[t], delta_samples[t])\n            trajectory[t] = state\n        cost = compute_cost(trajectory)\n        weights[i] = np.exp(-cost / lambda_param)\n        if cost &lt; best_cost:\n            best_cost = cost\n            best_sequence = (v_samples, delta_samples)\n    weights /= np.sum(weights)  # \u5f52\u4e00\u5316\u6743\u91cd\n    # \u52a0\u6743\u5e73\u5747\u63a7\u5236\u5e8f\u5217\n    avg_v = np.sum(np.array([w * best_sequence[0] for w in weights]))\n    avg_delta = np.sum(np.array([w * best_sequence[1] for w in weights]))\n    return avg_v, avg_delta\n\n# \u8fd0\u884cMPPI\u7b97\u6cd5\u5e76\u7ed8\u5236\u8f68\u8ff9\ninitial_state = np.array([0, 0, np.pi/2])\nstates = [initial_state[:2]]\nfor _ in range(30):\n    v, delta = mppi_control(initial_state)\n    initial_state = simulate_bicycle(initial_state, v, delta)\n    states.append(initial_state[:2])\n\nstates = np.array(states)\n\n# \u53ef\u89c6\u5316\nplt.figure(figsize=(8, 5))\nplt.plot(states[:, 0], states[:, 1], marker='o', label='Path')\nplt.scatter([goal_pos[0]], [goal_pos[1]], color='r', zorder=5, label='Goal')\nplt.scatter([obstacle_pos[0]], [obstacle_pos[1]], color='k', s=100, zorder=5, label='Obstacle')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Trajectory Planning with MPPI')\nplt.legend()\nplt.grid(True)\nplt.axis('equal')\nplt.show()\n</code></pre> <p></p> <p>\u6838\u5fc3\u4ee3\u7801\uff1a </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/POMDP/","title":"POMDP","text":"<p>\u4f7f\u7528POMDP\u4e3a\u5176\u4ed6\u8f66\u8f86\u7684\u610f\u56fe\u9884\u6d4b\u8fdb\u884c\u5efa\u6a21\u662f\u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\uff0c\u4f46\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u793a\u4f8b\u6765\u5e2e\u52a9\u7406\u89e3\u5176\u6838\u5fc3\u601d\u60f3\uff1a</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/POMDP/#pomdp","title":"POMDP\u5efa\u6a21","text":"<p>1. \u72b6\u6001\u96c6\u5408 \\(S\\) - \\(s_1\\)\uff1a\u5176\u4ed6\u8f66\u8f86\u51c6\u5907\u53d8\u9053\u5230\u5de6\u8fb9 - \\(s_2\\)\uff1a\u5176\u4ed6\u8f66\u8f86\u4fdd\u6301\u5f53\u524d\u8f66\u9053 - \\(s_3\\)\uff1a\u5176\u4ed6\u8f66\u8f86\u51c6\u5907\u53d8\u9053\u5230\u53f3\u8fb9</p> <p>2. \u52a8\u4f5c\u96c6\u5408 \\(A\\) - \\(a_1\\)\uff1a\u52a0\u901f - \\(a_2\\)\uff1a\u4fdd\u6301\u901f\u5ea6 - \\(a_3\\)\uff1a\u51cf\u901f</p> <p>3. \u89c2\u6d4b\u96c6\u5408 \\(O\\) - \\(o_1\\)\uff1a\u5176\u4ed6\u8f66\u8f86\u7684\u8f6c\u5411\u706f\u6253\u5f00\u5411\u5de6 - \\(o_2\\)\uff1a\u5176\u4ed6\u8f66\u8f86\u7684\u8f6c\u5411\u706f\u6253\u5f00\u5411\u53f3 - \\(o_3\\)\uff1a\u65e0\u660e\u663e\u89c2\u6d4b\u4fe1\u53f7</p> <p>4. \u8f6c\u79fb\u51fd\u6570 \\(T\\) \u57fa\u4e8e\u5386\u53f2\u6570\u636e\u6216\u6a21\u62df\u6765\u786e\u5b9a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8f66\u8f86\u5728\u72b6\u6001 \\(s_1\\) \u5e76\u6267\u884c\u52a8\u4f5c \\(a_1\\)\uff0c\u5219\u8f6c\u79fb\u5230 \\(s_2\\) \u7684\u6982\u7387\u53ef\u80fd\u662f0.2\u3002</p> <p>5. \u5956\u52b1\u51fd\u6570 \\(R\\) - \u5982\u679c\u6b63\u786e\u9884\u6d4b\u5176\u4ed6\u8f66\u8f86\u7684\u610f\u56fe\u5e76\u91c7\u53d6\u9002\u5f53\u7684\u52a8\u4f5c\u4ee5\u907f\u514d\u78b0\u649e\uff0c\u5219\u7ed9\u4e88\u6b63\u5956\u52b1\u3002 - \u5982\u679c\u672a\u80fd\u9884\u6d4b\u5176\u4ed6\u8f66\u8f86\u7684\u610f\u56fe\u5e76\u91c7\u53d6\u4e86\u53ef\u80fd\u5bfc\u81f4\u78b0\u649e\u7684\u52a8\u4f5c\uff0c\u5219\u7ed9\u4e88\u8d1f\u5956\u52b1\u3002</p> <p>6. \u89c2\u6d4b\u51fd\u6570 \\(O\\) \u4f8b\u5982\uff0c\u5982\u679c\u771f\u5b9e\u72b6\u6001\u662f \\(s_1\\)\uff08\u5176\u4ed6\u8f66\u8f86\u51c6\u5907\u53d8\u9053\u5230\u5de6\u8fb9\uff09\uff0c\u4f46\u89c2\u6d4b\u5230 \\(o_3\\)\uff08\u65e0\u660e\u663e\u89c2\u6d4b\u4fe1\u53f7\uff09\u7684\u6982\u7387\u53ef\u80fd\u662f0.1\u3002</p> <p>7. \u6298\u6263\u56e0\u5b50 \\(\\gamma\\) \u8fd9\u662f\u4e00\u4e2a\u5c0f\u4e8e1\u7684\u503c\uff0c\u8868\u793a\u672a\u6765\u5956\u52b1\u76f8\u5bf9\u4e8e\u5f53\u524d\u5956\u52b1\u7684\u4ef7\u503c\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/POMDP/#_1","title":"\u8be6\u7ec6\u89e3\u91ca","text":"<p>\u52a8\u4f5c\u5f71\u54cd\u72b6\u6001\u662f\u901a\u8fc7\u8f6c\u79fb\u51fd\u6570 \\(T\\) \u5b9e\u73b0\u7684\u3002\u8f6c\u79fb\u51fd\u6570\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u7684\u72b6\u6001 \\(s\\) \u4e2d\u6267\u884c\u52a8\u4f5c \\(a\\) \u540e\u7cfb\u7edf\u8f6c\u79fb\u5230\u65b0\u72b6\u6001 \\(s'\\) \u7684\u6982\u7387\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u5904\u4e8e\u72b6\u6001 \\(s_2\\)\uff1a\u5176\u4ed6\u8f66\u8f86\u4fdd\u6301\u5f53\u524d\u8f66\u9053\u3002\u6b64\u65f6\uff0c\u81ea\u8f66\u7684\u8f66\u8f86\u51b3\u5b9a\u91c7\u53d6\u52a8\u4f5c \\(a_1\\)\uff1a\u52a0\u901f\u3002\u8fd9\u4e2a\u52a8\u4f5c\u53ef\u80fd\u4f1a\u5bf9\u5176\u4ed6\u8f66\u8f86\u7684\u884c\u4e3a\u4ea7\u751f\u5f71\u54cd\u3002</p> <p>\u4ee5\u4e0b\u662f\u52a8\u4f5c\u5982\u4f55\u53ef\u80fd\u5f71\u54cd\u72b6\u6001\u7684\u7b80\u5316\u4f8b\u5b50\uff1a</p> <ol> <li> <p>\u6267\u884c\u52a8\u4f5c \\(a_1\\)\uff08\u52a0\u901f\uff09\uff1a</p> <ul> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u539f\u672c\u60f3\u8d85\u8f66\uff08\u4f46\u81ea\u8f66\u5e76\u4e0d\u77e5\u9053\uff09\uff0c\u5b83\u53ef\u80fd\u4f1a\u56e0\u4e3a\u81ea\u8f66\u7684\u52a0\u901f\u800c\u51b3\u5b9a\u4e0d\u8d85\u8f66\uff0c\u4ece\u800c\u8f6c\u79fb\u5230\u72b6\u6001 \\(s_2\\)\u3002</li> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u539f\u672c\u5c31\u6253\u7b97\u4fdd\u6301\u901f\u5ea6\uff0c\u81ea\u8f66\u7684\u52a0\u901f\u53ef\u80fd\u4e0d\u4f1a\u5bf9\u5b83\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u72b6\u6001\u4ecd\u4e3a \\(s_2\\)\u3002</li> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u6253\u7b97\u51cf\u901f\uff0c\u81ea\u8f66\u7684\u52a0\u901f\u52a8\u4f5c\u53ef\u80fd\u4f1a\u8ba9\u5b83\u66f4\u503e\u5411\u4e8e\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a\u4e0e\u81ea\u8f66\u7684\u8ddd\u79bb\u5728\u589e\u52a0\uff0c\u72b6\u6001\u53ef\u80fd\u8f6c\u79fb\u5230 \\(s_3\\)\u3002</li> </ul> </li> <li> <p>\u6267\u884c\u52a8\u4f5c \\(a_2\\)\uff08\u4fdd\u6301\u901f\u5ea6\uff09\uff1a</p> <ul> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u6253\u7b97\u53d8\u9053\u6216\u8d85\u8f66\uff0c\u81ea\u8f66\u4fdd\u6301\u901f\u5ea6\u53ef\u80fd\u4e3a\u5b83\u63d0\u4f9b\u4e86\u673a\u4f1a\uff0c\u72b6\u6001\u53ef\u80fd\u8f6c\u79fb\u5230 \\(s_1\\) \u6216 \\(s_3\\)\u3002</li> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u6253\u7b97\u4fdd\u6301\u5f53\u524d\u8f66\u9053\uff0c\u90a3\u4e48\u72b6\u6001\u5f88\u53ef\u80fd\u4ecd\u7136\u4fdd\u6301\u5728 \\(s_2\\)\u3002</li> </ul> </li> <li> <p>\u6267\u884c\u52a8\u4f5c \\(a_3\\)\uff08\u51cf\u901f\uff09\uff1a</p> <ul> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u539f\u672c\u60f3\u8d85\u8f66\uff0c\u81ea\u8f66\u7684\u51cf\u901f\u53ef\u80fd\u4f1a\u4f7f\u5b83\u66f4\u6709\u51b3\u5fc3\u8fd9\u4e48\u505a\uff0c\u4ece\u800c\u53ef\u80fd\u8f6c\u79fb\u5230 \\(s_1\\)\u3002</li> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u539f\u672c\u60f3\u8981\u51cf\u901f\uff0c\u81ea\u8f66\u7684\u51cf\u901f\u53ef\u80fd\u4f1a\u4f7f\u4e24\u8f66\u7684\u8ddd\u79bb\u4fdd\u6301\uff0c\u72b6\u6001\u53ef\u80fd\u4ecd\u7136\u662f \\(s_2\\)\u3002</li> <li>\u5982\u679c\u5176\u4ed6\u8f66\u8f86\u539f\u672c\u6253\u7b97\u4fdd\u6301\u5f53\u524d\u8f66\u9053\uff0c\u81ea\u8f66\u7684\u51cf\u901f\u53ef\u80fd\u4f1a\u9f13\u52b1\u5b83\u52a0\u901f\uff0c\u4f46\u72b6\u6001\u53ef\u80fd\u4ecd\u7136\u4fdd\u6301\u5728 \\(s_2\\)\u3002</li> </ul> </li> </ol> <p>\u8f6c\u79fb\u51fd\u6570 \\(T\\) \u5c06\u4e3a\u6bcf\u79cd\u72b6\u6001\u548c\u52a8\u4f5c\u7684\u7ec4\u5408\u63d0\u4f9b\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u63cf\u8ff0\u6267\u884c\u7279\u5b9a\u52a8\u4f5c\u540e\u8f6c\u79fb\u5230\u65b0\u72b6\u6001\u7684\u53ef\u80fd\u6027\u3002\u8fd9\u9700\u8981\u57fa\u4e8e\u5b9e\u9645\u7684\u9a7e\u9a76\u6570\u636e\u6216\u6a21\u62df\u6765\u5efa\u7acb\u548c\u4f18\u5316\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/","title":"Tranfomer","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#attention","title":"Attention\u7ed3\u6784","text":"<p>\u5bf9\u4e8eTransformer encoder\uff0c\u4e00\u822c\u662fselft attention \u5bf9\u4e8eTransformer decoder\uff0c\u4e00\u822c\u662fcross attention</p> <p>Encoder-Decoder\u67b6\u6784\u4e00\u822c\u9002\u7528\u4e8e\u7ffb\u8bd1\u3001\u6587\u672c\u5206\u7c7b\u7b49\u4efb\u52a1\uff0cDecoder only\u67b6\u6784\u9002\u7528\u4e8e\u7eed\u5199\u7b49\u4efb\u52a1\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#transformerrnn","title":"Transformer\u8bad\u7ec3\u5feb\uff0c\u63a8\u7406\u6162\uff1bRNN\u8bad\u7ec3\u6162\u63a8\u7406\u5feb","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#transformer","title":"Transformer\u8bad\u7ec3\u5feb\uff1a","text":"<p>\u5bf9\u4e8eTransformer\u8fd9\u79cd\u81ea\u56de\u5f52\u4efb\u52a1\uff0c\u6a21\u578b\u7684\u8f93\u5165\u901a\u5e38\u662f\u4e00\u4e2a\u5177\u4f53\uff0c\u771f\u503c\u662f\u53e5\u5b50\u4e2d\u6bcf\u4e2a\u5b57\u7684\u4e0b\u4e00\u4e2a\u5b57</p> <p>\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u771f\u503c\uff08ground truth\uff09\u662f\u76ee\u6807\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u8bcd\u7684\u5b9e\u9645\u8bcd\u6c47\u7d22\u5f15\u3002\u5bf9\u4e8e\u5e8f\u5217\u751f\u6210\u4efb\u52a1\u6765\u8bf4\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u771f\u503c\u662f\u8f93\u5165\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u8bcd\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e0c\u671b\u6a21\u578b\u6b63\u786e\u9884\u6d4b\u7684\u8bcd\u6c47\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#_1","title":"\u4f8b\u5b50\uff1a","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0b\u8f93\u5165\u53e5\u5b50\uff1a</p> <p><code>\"The quick brown fox\"</code></p> <p>\u76ee\u6807\u5e8f\u5217\uff08\u5373\u771f\u503c\uff09\u662f\uff1a</p> <p><code>\"quick brown fox jumps\"</code></p> <p>\u5219\u6a21\u578b\u7684\u8f93\u5165\u7ef4\u5ea6\u662f(1, 4, d_embeding),\u8f93\u51fa\u4e5f\u662f(1, 4, d_embeding)\uff0c\u6700\u7ec8\u4f1a\u63a5\u4e00\u4e2a\u9884\u6d4b\u5934\uff0c\u5c06d_embeding\u6620\u5c04\u81f3\u8bcd\u6c47\u8868\u5927\u5c0f\uff0c\u6bd4\u598210000\uff0c\u5373\u6700\u7ec8\u8f93\u51fa\u7ef4\u5ea6\u662f(1, 4, 10000),\u771f\u503c\u7684\u7ef4\u5ea6\u662f(1,4)\uff0c\u6a21\u578b\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a (4,10000)\u7684\u6982\u7387\u5206\u5e03\uff0c\u800c\u771f\u503c\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a 4\u7684\u8bcd\u6c47\u7d22\u5f15\u5217\u8868,Loss\u4e3a\u4ea4\u53c9\u71b5\u635f\u5931\u3002</p> <p>\u6ce8\u610f\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u987b\u6709mask\uff0c\u8ba9\u6a21\u578b\u770b\u4e0d\u5230\u4e0b\u4e00\u4e2atoken\uff0c\u4e00\u822c\u662f\u4e00\u4e2a\u4e0b\u4e09\u89d2\u4e3a1\u7684\u77e9\u9635\u3002\u672c\u8d28\u4e0a\u662f\u901a\u8fc7The\u9884\u6d4bquick\uff0c\u901a\u8fc7The quick\u9884\u6d4bbrown\u4f9d\u6b21\u7c7b\u63a8\u3002</p> <p>\u8fd9\u6837\uff0ctransformer\u5728\u8bad\u7ec3\u65f6\uff0c\u4e00\u76f4\u90fd\u662f\u5e76\u884c\u7684\uff0c\u6240\u4ee5\u8bad\u7ec3\u5feb\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#transformer_1","title":"Transformer\u63a8\u7406\u6162\uff1a","text":"<p>transformer\u5728\u63a8\u7406\u65f6\u662f\u81ea\u56de\u5f52\u7684\uff0c\u6bd4\u5982\u5bf9\u4e8e\u4e00\u4e2a\u7ffb\u8bd1\u4efb\u52a1\uff0c\u8f93\u5165\u662fl love you\uff0c 1. \u9996\u5148\u4f1a\u6839\u636ei love you \u8f93\u51fa \u6211 2. \u7136\u540e\u6839\u636e  i love you \u6211\uff0c\u8f93\u51fa \u7231\uff08\u9700\u8981\u8ddf i love you \u6211\uff0c4\u4e2atoken\u8ba1\u7b97\u6ce8\u610f\u529b\u6743\u91cd\uff09 3. \u7136\u540e\u6839\u636e i love you \u6211 \u7231 \uff0c\u8f93\u51fa \u4f60\uff08\u9700\u8981\u8ddf i love you \u6211 \u7231\uff0c5\u4e2atoken\u8ba1\u7b97\u6ce8\u610f\u529b\u6743\u91cd\uff09</p> <p>\u6240\u4ee5\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u81ea\u6ce8\u610f\u529b\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u662f O(n2)\uff0c\u5373\u603b\u7684\u8ba1\u7b97\u91cf\u662f 3+4+5=12</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#rnn","title":"RNN\u8bad\u7ec3\u6162\uff0c\u63a8\u7406\u5feb","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#rnn_1","title":"RNN\u8bad\u7ec3\u6162\uff1a","text":"<p>RNN\u7684\u5f53\u524d\u6b65\u4f9d\u8d56\u4e0a\u4e00\u6b65\u7684\u9690\u85cf\u72b6\u6001\uff0c\u65e0\u6cd5\u5e76\u884c\u8bad\u7ec3\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Tranfomer/#rnn_2","title":"RNN\u63a8\u7406\u5feb\uff1a","text":"<p>RNN\u63a8\u7406\u65f6\uff0c\u8f93\u51fa\u4ec5\u4f9d\u8d56\u4e0a\u4e00\u4e2a\u9690\u72b6\u6001\uff0c\u4f8b\u5982 i love you \uff0c\u8f93\u51fa\u6211\u65f6\uff0c\u4ec5\u4f9d\u8d56you\u7684\u9690\u72b6\u6001\uff0c\u8f93\u51fa\u7231\u65f6\u4ec5\u4f9d\u8d56 \u6211 \u7684\u9690\u72b6\u6001\uff0c\u6240\u4ee5\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u81ea\u6ce8\u610f\u529b\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u662f O(n)\uff0c\u5373\u603b\u7684\u8ba1\u7b97\u91cf\u662f 1+1+1=3</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","title":"VAD\u9605\u8bfb\u7b14\u8bb0","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#1","title":"1 \u6a21\u578b\u6784\u5efa","text":"<p>\u9996\u5148\u5728train.py\u7684main\u51fd\u6570\u4e2d\u6784\u5efa - model\uff1aclass VAD - dataset\uff1aclass VADCustomNuScenesDataset </p> <p>\u8fdb\u5165custom_train_model\uff0c\u7136\u540e\u6784\u5efadetector </p> <p>\u5728\u6784\u5efatrain_detector\u51fd\u6570\u4e2d\uff0c\u4f1a\u6784\u9020runner\uff0c\u5e76\u5728\u628a\u4e00\u4e9b\u5fc5\u8981\u7684hook\u6ce8\u518c\u5230runner\u91cc\u53bb\uff0c\u6bd4\u5982optimizer\uff0clr\u7b49\u3002</p> <p></p> <p>\u7136\u540e\u4f1a\u6267\u884crunner.run\u51fd\u6570\uff0c\u5f00\u59cb\u8bad\u7ec3\uff0c\u5728run\u51fd\u6570\u4e2d\u4f1a\u8c03\u7528train\u51fd\u6570\uff0c\u8f93\u5165\u4e3adataloader\uff08\u6ce8\u610f\uff0cdataloader\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u6bd4\u5982train\u7684dataloader\u548ctest\u7684dataloader\uff09</p> <p></p> <p>\u5728run\u51fd\u6570\u4e2d\uff0c\u8c03\u7528train\u51fd\u6570\uff0c\u4ece\u800c\u8fdb\u5165run_iter\u51fd\u6570\uff08\u6ce8\u610f\uff0c\u5728run_iter\u51fd\u6570\u6267\u884c\u5b8c\u540e\u4f1a\u8fdb\u5165\u5230\u8c03\u7528\u6240\u6709\u7684hook\uff0c\u5982\u679chook\u4e2d\u6709after_train_iter\u8fd9\u4e2a\u51fd\u6570\uff0c\u5c31\u4f1a\u6267\u884c\uff0c\u6bd4\u5982optimizer\u7684hook\u4e2d\u6709after_train_iter\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f1a\u8c03\u7528loss.backward()\uff09</p> <p></p> <p>\u5728run_iter\u51fd\u6570\u4e2d\u4f1a\u8c03\u7528model\u7684train_step\u51fd\u6570\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2amodel\u4e0d\u662fconfig\u6587\u4ef6\u4e2d\u7684model\uff0c\u800c\u662f\u5305\u88c5\u4e86\u4e00\u5c42MMDataParallel\uff0c\u4ed6\u662f\u5728custom_train_detector\u4e2d\u6784\u5efa\u7684\uff0c\u6240\u4ee5\u9996\u5148\u4f1a\u6267\u884cMMDataParallel\u7684train_step\u51fd\u6570\uff0c\u4f1a\u628adata\u4e2d\u7684container\u5305\u88c5\u7ed9\u53bb\u6389\uff0c\u53ea\u5269\u4e0b\u539f\u59cb\u7684data\uff0c\u7136\u540e\u518d\u8c03\u7528\u771f\u6b63\u6a21\u578b\u7684train_step\u51fd\u6570\uff09</p> <p> </p> <p></p> <p></p> <p>\u5728\u6a21\u578b\u7684train_step\u51fd\u6570\u4e2d\uff0c\u4f1a\u628adata\u89e3\u5305\uff0c\u5e76\u8c03\u7528\u5b9e\u4f8b\u7684forward\u51fd\u6570\uff0c\u5373self(**data)\u3002 </p> <p>data\u4e2dimag\u7684\u7ef4\u5ea6\u662f\uff0cB\uff0csequence_length,cam_num,\u901a\u9053\u6570\uff0c\u9ad8\uff0c\u5bbd </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#2-vadbackboneneck","title":"2 VAD\u524d\u5411\u4f20\u64ad\uff08backbone\u548cneck\uff09","text":"<p>\u5728\u6a21\u578b\u7684forward\u4e2d\u4f1a\u901a\u8fc7backbone\u548cneck\u63d0\u53d6\u7279\u5f81\uff0c\u5982\u679c_num_levels_=4\uff0c\u5219\u4f1a\u63d0\u53d6\u56db\u4e2a\u5c3a\u5ea6\u7684\u7279\u5f81\u3002\u8fd9\u56db\u4e2a\u7279\u5f81\u4e2d\uff0c\u6709\u4e09\u4e2a\u662f\u53d6\u7684resnet50\u76842\uff0c3\uff0c4\u5c42\uff08conv3_x,conv4_x,conv5_x\uff09\u7684\u8f93\u51fa\uff0c\u6709\u4e00\u5c42\u662f\u5728fpn\u4e2d\u901a\u8fc7maxpooling\u589e\u52a0\u7684\u3002</p> <p></p> <p></p> <p>restnet\u7684\u8f93\u51fa\uff1a</p> <p>\u4e0b\u91c7\u68378\u500d\uff0c\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662fB\u548csequence_length\u76f8\u4e58\u5f97\u5230\u7684 </p> <p>\u4e0b\u91c7\u683716\u500d </p> <p>\u4e0b\u91c7\u683732\u500d </p> <p>fpn\u7684\u8f93\u51fa\uff1a \u9996\u5148fpn\u4f1a\u5c06resnet\u7684\u6240\u6709\u7279\u5f81\u6620\u5c04\u5230256\u4e2a\u901a\u9053\uff0c\u7136\u540e\u4e0b\u4e00\u5c42\u7684\u7279\u5f81\u4e0a\u91c7\u6837\uff0c\u5e76\u52a0\u5230\u4e0b\u4e00\u5c42\uff0c\u4e5f\u5c31\u662f\u8bf4 \u4e0b\u91c7\u683732\u500d\u7684\u7279\u5f81\u4f1a\u4e0a\u91c7\u68372\u500d \u7136\u540e\u52a0\u5230 \u4e0b\u91c7\u683716\u500d \u7684\u7279\u5f81\u4e0a\u3002\u7ee7\u7eed\u4e0a\u91c7\u68372\u500d\uff0c\u52a0\u5230\u4e0b\u91c7\u68378\u500d\u7684\u7279\u5f81\u56fe\u4e0a\u3002</p> <p>\u6b64\u5916\uff0cfpn\u4e2d\u6839\u636e\u4e0b\u91c7\u683732\u500d\u7684\u7279\u5f81\uff0c\u7ee7\u7eed\u4e0b\u91c7\u68372\u500d\uff0c\u5f97\u5230\u7b2c\u56db\u4e2a\u7279\u5f81\u56fe\u3002</p> <p></p> <p>\u5176\u4ed6\u4e09\u4e2a\u7279\u5f81\u56fe\u7684\u7ef4\u5ea6\u4e3a\uff1a </p> <p></p> <p></p> <p>\u6240\u6709\u7279\u5f81\u56fe\u5747\u5b58\u5728\u4e00\u4e2alist\u4e2d</p> <p></p> <p>\u63d0\u53d6\u5b8c\u7279\u5f81\u540e\u4f1a\u8fdb\u5165forward_pts_train\u51fd\u6570\u4e2d</p> <p> </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#3-vadhead","title":"3 VADHead \u524d\u5411\u4f20\u64ad","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#31-transformer","title":"3.1 transformer","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#311-encoderbev","title":"3.1.1 encoder\u5f97\u5230bev\u7279\u5f81","text":"<p>\u63a5\u7740\u4f1a\u8c03\u7528vad_head\uff0c\u9996\u5148\u8fdb\u5165transformer\uff0c\u5f97\u5230bev\u7279\u5f81\uff0c\u68c0\u6d4b\u5934\u9690\u85cf\u72b6\u6001\uff0c\u68c0\u6d4b\u5934\u521d\u59cb\u4f4d\u7f6e\uff0c\u68c0\u6d4b\u5934\u6700\u7ec8\u4f4d\u7f6e\uff0cmap\u9690\u85cf\u72b6\u6001\uff0cmap\u521d\u59cb\u4f4d\u7f6e\uff0cmap\u6700\u7ec8\u4f4d\u7f6e\uff1a</p> <p>\u8fd9\u4e9b\u4f1a\u5f53\u4f5c\u4e0b\u8fb9\u4ea4\u4e92\u7684\u8f93\u5165\u3002 </p> <p>\u5728transformer\u7684\u8f93\u5165\u4e2d\uff0c\u6709\u4e09\u4e2a\u53c2\u6570\u6bd4\u8f83\u91cd\u8981\uff0cmlvl_feats\uff0cbev_querier\uff0cpre_bev </p> <p></p> <p></p> <p>\u5728transformer\u7684forward\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u4f1aget_bev_features\uff0c\u5728\u8fd9\u91ccmlvl_feats\u4f1a\u88abconcat\u6210feat_flatten\uff0c\u5e76\u4e14\u8bb0\u5f55\u597d\u4e4b\u524d\u7684size</p> <p> </p> <p>\u7136\u540e\u4f1a\u88ab\u9001\u5165encoder(bevformer)\uff1a </p> <p>\u5728bevformer\u7684encoder\u4e2d\uff0c\u9996\u5148\u4f1a\u5f97\u52302d\u548c3d\u7684\u53c2\u8003\u70b9\uff0c\u5176\u4e2d2d\u7684\u53c2\u8003\u70b9\u7528\u4e8eTemporalSelfAttention\u4e2d\u7684\u53ef\u53d8\u5f62\u6ce8\u610f\u529b\uff08bev_queries\u4e0epre_bev\u505aattention\uff09\uff0c3d\u53c2\u8003\u70b9\u7528\u4e8eSpatialCrossAttention\u7684\u53ef\u53d8\u5f62\u6ce8\u610f\u529b\u3002</p> <p>self.point_sampling\u7528\u4e8e\u5c063d\u7684\u53c2\u8003\u70b9\u901a\u8fc7\u77e9\u9635\u53d8\u6362\u6295\u5f71\u52306\u4e2a\u76f8\u673a\u4e2d\uff0c\u5e76\u901a\u8fc7\u6295\u5f71\u540e\u5f52\u4e00\u5316\u7684uv\u503c\u5224\u65ad\u662f\u5426\u5e94\u8be5\u88abmask\uff08\u8d85\u8fc71\u8bf4\u660e\u8d85\u51fa\u56fe\u50cf\uff0c\u5e94\u8be5\u88abmask\uff09 </p> <p></p> <p>\u6ce8\u610f\u5728encoder\u4e2d\uff0c\u9700\u8981\u505aTemporalSelfAttention\uff08q\u662fbev_queries\uff0ckv\u662fpre_bev\uff09 </p> <p>SpatialCrossAttention\uff08q\u662fbev_queries\uff0ckv\u662ffeat_flatten\uff09 </p> <p>\u7ecf\u8fc7encoder\u4e4b\u540e\u5f97\u5230bev_embed</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#312-decoder-map","title":"3.1.2 decoder \u8f93\u51fa\u76ee\u6807\u68c0\u6d4b\u548cmap\u68c0\u6d4b","text":"<p>\u7136\u540e\u4f1a\u8fdb\u5165decoder\u9636\u6bb5\uff08query\u4e3aobject_query\uff0ckv\u4e3abev_embed\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728decoder\u4e2d\uff0cself attention\u662f\u4f20\u7edf\u7684attention\uff0c\u800ccross attention\u662f\u53ef\u53d8\u5f62\u6ce8\u610f\u529b\u3002\u800c\u5728encoder\u4e2d\uff0cself attention\uff08TSA\uff09\u548ccross attention\uff08SCA\uff09\u90fd\u662f\u53ef\u53d8\u5f62\u6ce8\u610f\u529b\uff0c</p> <p></p> <p></p> <p>decoder\u5f97\u5230\u7684\u662f3d\u76ee\u6807\u68c0\u6d4b\u7684\u7ed3\u679c\u548c\u6700\u540e\u9690\u85cf\u5c42\u7684\u7279\u5f81\uff0cinter_states, inter_references</p> <p> </p> <p>\u540c\u6837\uff0cVAD\u8fd8\u4f1a\u8fdb\u884c\u5728\u7ebf\u5efa\u56fe\uff0c\u5373\u5bf9map\u8fdb\u884c\u68c0\u6d4b\uff08query\u4e3amap_query\uff0ckv\u4e3abev_embed\uff09\uff1a</p> <p></p> <p>\u6700\u540e\u5c063d\u76ee\u6807\u68c0\u6d4b\u548cmap\u68c0\u6d4b\u7684\u7ed3\u679c\u90fd\u8fd4\u56de </p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#32-motion_decodercustomtransformerdecoder","title":"3.2 motion_decoder(CustomTransformerDecoder)","text":"<p>\u901a\u8fc7transformer \u8f93\u51fa\u7684\u76ee\u6807\u68c0\u6d4b\u9690\u85cf\u5c42\u7279\u5f81\u5f53\u4f5cmotion_query\uff0c\u505amotion_decoder\u5f97\u5230\u5360\u8be5\u7269\u7684\u7279\u5f81\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#33-motion_map_decodercustomtransformerdecoder","title":"3.3 motion_map_decoder\uff08CustomTransformerDecoder\uff09","text":"<p>\u901a\u8fc7transformer \u8f93\u51fa\u7684map \u68c0\u6d4b\u9690\u85cf\u5c42\u7279\u5f81\u5f53\u4f5cmap_query\uff0c\u4f5c\u4e3akv\uff0c\u4e4b\u524d3.2\u5f97\u5230\u7684motion_hs\u5f53\u4f5cq\uff0c\u505across attention\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#34-ego_agent_decodercustomtransformerdecoder","title":"3.4 ego_agent_decoder\uff08CustomTransformerDecoder\uff09","text":"<p>\u9996\u5148\u5c063.3\u7684ca_motion_query\u548c3.2\u7684motion_hs cat\u5230\u4e00\u8d77\uff0c\u5f97\u5230\u65b0\u7684motion_hs</p> <p></p> <p>\u5bf9\u81ea\u8f66\u5386\u53f2\u91cc\u8f68\u8ff9\u7f16\u7801\uff0c\u5f97\u5230ego_query\uff0c\u4f5c\u4e3aq\uff0cmotion_hs\u4e5f\u5c31\u662fagent_query\u4f5c\u4e3akey\uff0c\u505a\u4ea4\u4e92\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#35-ego_map_decoder","title":"3.5 ego_map_decoder","text":"<p>3.4\u5f97\u5230\u7684ego_agent\u4f5c\u4e3aq\uff0c3.1\u5f97\u5230\u7684map_hs\u4f5c\u4e3aky\u505a\u4ea4\u4e92 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#36","title":"3.6 \u81ea\u8f66\u89c4\u5212","text":"<p>\u5c063.5\u5f97\u5230\u7684ego_mao_query\u4e0e3.4\u5f97\u5230\u7684ego_agent_query\u62fc\u8d77\u6765\uff0c\u7136\u540e\u8fc7\u4e00\u4e2aego_fut_decoder\uff08Liner\uff0crelu\uff0cLiner\uff09\uff0c\u5f97\u5230\u81ea\u8f66\u8f68\u8ff9 </p> <p>\u6700\u540e\u8fd4\u56de\u6240\u6709\u8f93\u51fa</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/VAD%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#4-loss","title":"4 \u8ba1\u7b97loss","text":"<p>\u5f97\u52303.6\u7684\u8f93\u51fa\uff0c\u5e76\u8fd4\u56de\u540e\uff0c\u7ed3\u5408gt\uff0c\u8ba1\u7b97loss\u3002 </p> <p>\u6700\u540eVAD\u6a21\u578b\u7684forward\u4f1a\u8fd4\u56deloss</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/","title":"Apollo\u5b89\u88c5","text":"<p>apollo\u7684\u5b89\u88c5\u624b\u518c</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#_1","title":"\u6e90\u7801\u5b89\u88c5(\u76ee\u524d\u6e90\u7801\u5b89\u88c5\u4e0d\u652f\u6301\u573a\u666f\u540c\u6b65)","text":"<p>\u66f4\u65b0\u65f6\u95f4\uff1a2022-11-30</p> <p>\u672c\u624b\u518c\u65e8\u5728\u5e2e\u52a9\u7528\u6237\u91cd\u65b0\u5b89\u88c5\u00a0Apollo 8.0\u00a0\u7cfb\u7edf\u73af\u5883\u53ca\u00a0Apollo 8.0\u00a0\u6e90\u7801 \u8fd0\u884c\u8f6f\u4ef6\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#linux","title":"\u6b65\u9aa4\u4e00\uff1a\u5b89\u88c5 Linux \u7cfb\u7edf","text":"<p>Apollo \u8f6f\u4ef6\u7cfb\u7edf\u4f9d\u8d56\u4e8e Linux \u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\uff0c\u800c Linux \u64cd\u4f5c\u7cfb\u7edf\u79cd\u7c7b\u7e41\u591a\uff0c\u4e14\u53c8\u5206\u4e3a\u670d\u52a1\u5668\u7248\u672c\u548c\u684c\u9762\u7248\u672c\uff0c\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u5f53\u4e0b\u6bd4\u8f83\u6d41\u884c\u7684 Ubuntu \u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u7684 64 \u4f4d\u7248\u672c\u3002\u5b89\u88c5 Ubuntu 18.04+ \u7684\u6b65\u9aa4\uff0c\u53c2\u89c1\u00a0\u5b98\u65b9\u5b89\u88c5\u6307\u5357\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#nvidia-gpu","title":"\uff08\u53ef\u9009\uff09\u6b65\u9aa4\u4e8c\uff1a\u5b89\u88c5 NVIDIA GPU \u9a71\u52a8","text":"<p>Apollo 8.0\u00a0\u7684\u4e00\u4e9b\u6a21\u5757\u7684\u7f16\u8bd1\u548c\u8fd0\u884c\u9700\u8981\u4f9d\u8d56 NVIDIA GPU \u73af\u5883\uff08\u4f8b\u5982\u611f\u77e5\u6a21\u5757\uff09\uff0c\u5982\u679c\u60a8\u6709\u7f16\u8bd1\u548c\u8fd0\u884c\u8fd9\u7c7b\u6a21\u5757\u7684\u9700\u6c42\uff0c\u5219\u9700\u8981\u5b89\u88c5 NVIDIA GPU \u9a71\u52a8\u3002</p> <p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5728 Ubuntu \u4e0a\u8fdb\u884c\u5b89\u88c5\uff1a</p> <ul> <li>(\u63a8\u8350) apt-get \u547d\u4ee4\uff0c\u53c2\u89c1\u00a0How to Install NVIDIA Driver\u3002</li> <li>\u4f7f\u7528\u5b98\u65b9\u00a0runfile\u3002</li> </ul> <p>\u5bf9\u4e8e Ubuntu 18.04+\uff0c\u53ea\u9700\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5373\u53ef\uff1a</p> <pre><code>sudo apt-get update\nsudo apt-add-repository multiverse\nsudo apt-get update\nsudo apt-get install nvidia-driver-455\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u53ef\u4ee5\u8f93\u5165\u00a0<code>nvidia-smi</code>\u6765\u6821\u9a8c NVIDIA GPU \u9a71\u52a8\u662f\u5426\u5728\u6b63\u5e38\u8fd0\u884c\uff08\u53ef\u80fd\u9700\u8981\u5728\u5b89\u88c5\u540e\u91cd\u542f\u7cfb\u7edf\u4ee5\u4f7f\u9a71\u52a8\u751f\u6548\uff09\u3002\u5982\u679c\u6210\u529f\uff0c\u5219\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <pre><code>Prompt&gt; nvidia-smi\nMon Jan 25 15:51:08 2021\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 460.27.04    Driver Version: 460.27.04    CUDA Version: 11.2     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|=++|\n|   0  GeForce RTX 3090    On   | 00000000:65:00.0  On |                  N/A |\n| 32%   29C    P8    18W / 350W |    682MiB / 24234MiB |      7%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=|\n|    0   N/A  N/A      1286      G   /usr/lib/xorg/Xorg                 40MiB |\n|    0   N/A  N/A      1517      G   /usr/bin/gnome-shell              120MiB |\n|    0   N/A  N/A      1899      G   /usr/lib/xorg/Xorg                342MiB |\n|    0   N/A  N/A      2037      G   /usr/bin/gnome-shell               69MiB |\n|    0   N/A  N/A      4148      G   ...gAAAAAAAAA --shared-files      105MiB |\n+-----------------------------------------------------------------------------+\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#docker","title":"\u6b65\u9aa4\u4e09\uff1a\u5b89\u88c5 docker","text":"<p>Apollo 8.0 \u4f9d\u8d56\u4e8e Docker 19.03+\u3002\u8981\u5b89\u88c5 Docker\uff0c\u53c2\u89c1\u00a0Install Docker Engine on Ubuntu\u3002</p> <p>Ubuntu \u4e0a\u7684 Docker-CE \u4e5f\u53ef\u4ee5\u901a\u8fc7 Docker \u63d0\u4f9b\u7684\u5b98\u65b9\u811a\u672c\u5b89\u88c5\uff1a</p> <pre><code>curl https://get.docker.com | sh\nsudo systemctl start docker &amp;&amp; sudo systemctl enable docker\n</code></pre> <p>\u60a8\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u5b89\u88c5\u65b9\u5f0f\uff0c\u5b89\u88c5\u4e4b\u540e\uff0c\u4e0d\u8981\u5fd8\u8bb0\u6267\u884c\u00a0Linux \u4e0a\u7684\u540e\u7eed\u64cd\u4f5c\u8bf4\u660e\u3002\u66f4\u591a\u5185\u5bb9\uff0c\u53c2\u89c1\u00a0\u4f7f\u7528\u975e root \u6743\u9650\u8fd0\u884c docker\u00a0\u548c\u00a0\u914d\u7f6e\u5f00\u673a\u542f\u52a8 docker\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#nvidia-container-toolkit","title":"\uff08\u53ef\u9009\uff09\u6b65\u9aa4\u56db\uff1a\u5b89\u88c5 NVIDIA Container Toolkit","text":"<p>\u4e3a\u4e86\u5728\u5bb9\u5668\u5185\u83b7\u5f97 GPU \u652f\u6301\uff0c\u5728\u5b89\u88c5\u5b8c docker \u540e\u9700\u8981\u5b89\u88c5 NVIDIA Container Toolkit\u3002 \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 NVIDIA Container Toolkit\uff1a</p> <pre><code>distribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\nsudo apt-get -y update\nsudo apt-get install -y nvidia-docker2\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u91cd\u542f Docker \u4ee5\u4f7f\u6539\u52a8\u751f\u6548\u3002</p> <pre><code>sudo systemctl restart docker\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u53ef\u4ee5\u5728APOLLO\u5bb9\u5668\u5185\u8f93\u5165<code>nvidia-smi</code>\u6765\u6821\u9a8c NVIDIA GPU \u5728\u5bb9\u5668\u5185\u662f\u5426\u80fd\u6b63\u5e38\u8fd0\u884c\uff08\u8be6\u89c1\u6b65\u9aa4\u4e94\uff09\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#apollo","title":"\u6b65\u9aa4\u4e94\uff1a\u4e0b\u8f7d\u5e76\u7f16\u8bd1 Apollo \u6e90\u7801","text":"<ol> <li> <p>\u5b89\u88c5 git \u5e76\u5c06\u6e90\u7801 clone \u4e0b\u6765\uff1a</p> <pre><code>cd ~/\nsudo apt update\nsudo apt install git -y\ngit init\ngit clone https://github.com/ApolloAuto/apollo.git\n</code></pre> <p>\u4ee3\u7801\u4e0b\u8f7d\u7684\u65f6\u95f4\u89c6\u7f51\u901f\u7684\u5feb\u6162\u800c\u6709\u6240\u533a\u522b\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\u3002</p> </li> <li> <p>\u542f\u52a8\u5e76\u8fdb\u5165 docker \u5bb9\u5668\uff0c\u5728\u7ec8\u7aef\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code> cd ~/apollo\n bash docker/scripts/dev_start.sh\n</code></pre> <p>\u7b2c\u4e00\u6b21\u8fdb\u5165 docker \u65f6\u6216\u8005 image \u955c\u50cf\u6709\u66f4\u65b0\u65f6\u4f1a\u81ea\u52a8\u4e0b\u8f7d apollo \u6240\u9700\u7684 image \u955c\u50cf\u6587\u4ef6\uff0c\u4e0b\u8f7d\u955c\u50cf\u6587\u4ef6\u7684\u8fc7\u7a0b\u4f1a\u5f88\u957f\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\u3002</p> <p>\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5219\u4f1a\u89c1\u5230\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <pre><code>[ OK ] Congratulations! You have successfully finished setting up Apollo Dev Environment.\n[ OK ] To login into the newly created apollo_neo_dev_root container, please run the following command:\n[ OK ]   bash scripts/edu_launcher.sh enter\n[ OK ] Enjoy!\n</code></pre> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u8fdb\u5165 docker \u73af\u5883\u4e2d\uff1a</p> <pre><code>bash docker/scripts/dev_into.sh\n</code></pre> <p>\u5982\u679c\u60a8\u5728\u6b65\u9aa4\u4e8c\u548c\u6b65\u9aa4\u56db\u5206\u522b\u5b89\u88c5\u4e86 NVIDIA GPU \u9a71\u52a8\u548c NVIDIA Container Toolkit\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165<code>nvidia-smi</code>\u6765\u6821\u9a8c NVIDIA GPU \u5728\u5bb9\u5668\u5185\u662f\u5426\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4fe1\u606f:</p> <pre><code>root@in-dev-docker:/apollo_workspace## nvidia-smi \nWed Sep 14 11:43:13 2022       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|=++|\n|   0  Tesla V100-SXM2...  Off  | 00000000:03:00.0 Off |                    0 |\n| N/A   31C    P0    38W / 300W |    153MiB / 32510MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=|\n|    0   N/A  N/A      9962      C   nvidia-cuda-mps-server             29MiB |\n+-----------------------------------------------------------------------------+\n</code></pre> </li> <li> <p>\u7f16\u8bd1 Apollo \u6e90\u7801\u3002</p> <p>\u7f16\u8bd1 Apollo\uff0c\u5728\u7ec8\u7aef\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u7b49\u5f85\u7f16\u8bd1\u5b8c\u6210\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u8017\u65f6\u89c6\u673a\u5668\u914d\u7f6e\u7684\u4e0d\u540c\u800c\u6709\u6240\u533a\u522b\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\uff1a</p> <pre><code>bash apollo.sh build\n</code></pre> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/apollo%E5%AE%89%E8%A3%85/#dreamview","title":"\u6b65\u9aa4\u516d\uff1a\u8fd0\u884c Dreamview \u68c0\u9a8c\u7f16\u8bd1\u662f\u5426\u6210\u529f","text":"<ol> <li> <p>\u8fdb\u5165 Apollo \u5bb9\u5668\u73af\u5883\u3002</p> <pre><code> cd ~/apollo\n bash docker/scripts/dev_start.sh\n bash docker/scripts/dev_into.sh\n</code></pre> <p>\u6ce8\uff1a\u5982\u679c\u60a8\u5df2\u5728\u5bb9\u5668\u73af\u5883\u5185\uff0c\u8bf7\u5ffd\u7565\u6b64\u6b65\u9aa4\u3002</p> </li> <li> <p>\u542f\u52a8 dreamview\u3002</p> <p>\u5728\u7ec8\u7aef\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>bash scripts/bootstrap.sh\n</code></pre> <p>\u5982\u679c\u542f\u52a8\u6210\u529f\uff0c\u5728\u7ec8\u7aef\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <pre><code> nohup: appending output to 'nohup.out'\n Launched module monitor.\n nohup: appending output to 'nohup.out'\n Launched module dreamview.\n Dreamview is running at http://localhost:8888\n</code></pre> <p>\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4ee5\u4e0b\u5730\u5740\u8bbf\u95ee Dreamview\uff1a</p> <pre><code>http://localhost:8888\n</code></pre> </li> <li> <p>\u56de\u653e\u6570\u636e\u5305\u3002</p> <p>\u5728\u7ec8\u7aef\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u6570\u636e\u5305\uff1a</p> <pre><code>wget https://apollo-system.cdn.bcebos.com/dataset/6.0_edu/demo_3.5.record\n</code></pre> <p>\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u56de\u653e\u6570\u636e\u5305\uff0c\u5728\u6d4f\u89c8\u5668 DreamView \u4e2d\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u56de\u653e\u753b\u9762\uff1a</p> <pre><code>cyber_recorder play -f demo_3.5.record --loop\n</code></pre> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cuda%E7%9B%B8%E5%85%B3/","title":"Cuda\u76f8\u5173","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cuda%E7%9B%B8%E5%85%B3/#cuda","title":"cuda","text":"<p>\u4e3b\u673a\u6ca1\u6709\u5b89\u88c5cuda\uff0c\u53bbcuda\u5b98\u7f51 \u5b89\u88c511.1 \u7248\u672c\uff08\u5355\u72ectorch\u662f\u4e0d\u9700\u8981\u5b89\u88c5cuda\u7684\uff0c\u56e0\u4e3atorch\u7684cuda\u7248\u672c\u5df2\u7ecf\u96c6\u6210\u597d\u4e86\u4e8c\u8fdb\u5236\u7684cuda\uff0c\u4f46\u662fmmdet3d\u9700\u8981cuda\u6765\u7f16\u8bd1\uff0c\u6240\u4ee5\u8fd8\u662f\u9700\u8981\u5b89\u88c5cuda\u7684\uff0c\u5f88\u5751\u7239\uff01\uff01\uff01\uff09\uff1a</p> <p>https://developer.nvidia.com/cuda-toolkit-archive \u6700\u597d\u7528runfile</p> <p></p> <p>\u5b89\u88c5\u540e <pre><code>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\nexport PATH=$PATH:/usr/local/cuda/bin\nexport CUDA_HOME=/usr/local/cuda\n</code></pre></p> <p>\u591a\u7248\u672c\u5207\u6362\uff1a <pre><code># \u8f6f\u94fe\u63a5\u65b9\u5f0f\n$ ls -lh /usr/local\nlrwxrwxrwx  1 root root   19 Jul 15  2018 cuda -&gt; /usr/local/cuda-10.1/\ndrwxr-xr-x 19 root root 4.0K Jun  5  2019 cuda-10.0/\ndrwxr-xr-x 14 root root 4.0K Sep 21 22:54 cuda-10.1/\n......\n\n# \u9700\u8981\u5207\u6362\u7248\u672c\u65f6\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\n$ sudo rm -rf /usr/local/cuda\n$ sudo ln -s /usr/local/cuda-10.0 /usr/local/cuda\n</code></pre></p> <p>\u4e3a\u4e86\u786e\u8ba4\uff0c\u9700\u8981\u67e5\u770b\u4e00\u4e0b\u8f6f\u8fde\u63a5</p> <p></p> <pre><code>source ~/.zshrc\n</code></pre> <p>\u5176\u5b9e\u4e0d\u9700\u8981sudo ldconfig\uff1a </p> <p>LD_LIBRARY_PATH\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e/etc/ld.so.conf.d\uff0cldconfig\u547d\u4ee4\u53ea\u4f1a\u5f71\u54cdld.so.conf.d\uff0c\u4e0eLD_LIBRARY_PATH\u65e0\u5173\u3002 </p> <p>\u68c0\u9a8c\u5b89\u88c5\u7684\u7248\u672c\u662f\u5426\u6b63\u786e</p> <pre><code>nvcc -V\n</code></pre> <p>note:\u4e0d\u8981\u4ececonda\u4e2d\u5b89\u88c5cuda\uff0c\u4e0d\u7ba1\u9009\u4ec0\u4e48\u7248\u672c\uff0cconda\u90fd\u4f1a\u5b89\u88c512.4\u5f88\u5751</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cuda%E7%9B%B8%E5%85%B3/#cudnn","title":"cudnn","text":"<p>cudnn\u662f\u4e00\u4e2a\u52a0\u901f\u5e93\uff0ccuda\u662f\u4e00\u4e2a\u5de5\u5177\u7684\u96c6\u5408\uff0c\u91cc\u9762\u6709\u5f88\u591a\u5de5\u5177\uff0c\u4f8b\u5982nvcc\u7f16\u8bd1\u5668\u7b49\uff0ccudnn\u662f\u4e00\u4e2a\u52a0\u901f\u5ea6\u5e93\uff0c\u4ed6\u662fcuda\u91cc\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u4f46\u662f\u6ca1\u6709\u96c6\u6210\u5728\u91cc\u8fb9\uff0c\u9700\u8981\u81ea\u884c\u5b89\u88c5\u3002</p> <p>cuDNN Archive | NVIDIA Developer</p> <p>\u4e0b\u8f7d\u5bf9\u5e94\u7684cuda\u7248\u672c\u7684cudnn\uff0c\u5e76\u89e3\u538b\u5230\u5bf9\u5e94\u7684cuda\u7684\u6587\u4ef6\u5939\u4e2d</p> <pre><code>tar -xvf cudnn-linux-x86_64-8.4.0.27_cuda11.6-archive.tar.xz\ncd cudnn-linux-x86_64-8.4.0.27_cuda11.6-archive\n\nsudo cp include/cudnn.h /usr/local/cuda-10.0/include/\nsudo cp lib64/lib* /usr/local/cuda-10.0/lib64/\nsudo chmod a+r /usr/local/cuda-10.0/include/cudnn.h /usr/local/cuda-10.0/lib64/libcudnn*\n\ncd /usr/local/cuda-10.0/targets/x86_64-linux/lib/\nsudo ln -sf libcudnn.so.7.4.1 libcudnn.so.7\n</code></pre> <p>\u67e5\u770bcudnn\u7248\u672c\uff1a \u67e5\u770bcuDNN\u7248\u672c\uff0c\u65e7\u7248\u672c\u6307\u4ee4\u4e3acat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A2\uff0c\u65b0\u7248\u672c\u6709\u66f4\u65b0\uff0c\u5c06cuDNN\u7248\u672c\u4fe1\u606f\u5355\u62c9\u4e86\u4e00\u4e2a\u6587\u4ef6\u540d\u4e3acudnn_version.h\uff0c\u6240\u4ee5\u65b0\u7248\u672c\u67e5\u770bcuDNN\u7248\u672c\u7684\u547d\u4ee4\u4e3acat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2</p> <pre><code>cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A2\n</code></pre> <pre><code>cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cuda%E7%9B%B8%E5%85%B3/#nvidia","title":"\u91cd\u88c5nvidia\u9a71\u52a8","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cuda%E7%9B%B8%E5%85%B3/#_1","title":"\u5378\u8f7d","text":"<pre><code>#\u5148\u67e5\u770b\u9a71\u52a8\u4ee5\u53ca\u7248\u672c\u5b89\u88c5\u60c5\u51b5\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a\nls /usr/src | grep nvidia\n\n#\u8fdb\u5165\u5b89\u88c5\u76ee\u5f55\uff0c\u7528\u9a71\u52a8\u81ea\u5e26\u5378\u8f7d\u547d\u4ee4\u5378\u8f7d\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u80fd\u5378\u8f7d\u5e72\u51c0\ncd /usr/bin\nls nvidia-*\nsudo nvidia-uninstall\n\n#\u7136\u540e\u7528\u4e0a\u9762\u7684\u67e5\u770b\u547d\u4ee4\u67e5\u770b\u662f\u5426\u5378\u8f7d\u5e72\u51c0\uff0c\u5b8c\u6210\u5378\u8f7d\nls /usr/src | grep nvidia\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cuda%E7%9B%B8%E5%85%B3/#_2","title":"\u91cd\u88c5","text":"<p>\u6dfb\u52a0nvidia\u9a71\u52a8\u7684ppa\u6e90 <pre><code>sudo add-apt-repository ppa:graphics-drivers/ppa\nsudo apt-get update\n</code></pre> \u67e5\u770b\u5408\u9002\u7684\u9a71\u52a8\u7248\u672c <pre><code>ubuntu-drivers devices\n</code></pre></p> <p>\u6362\u6e90\uff1avim /etc/apt/sources.list.d/graphics-drivers-ubuntu-ppa-focal.list</p> <p>\u5c06\u5176\u4e2d\u6d89\u53cahttp://ppa.launchpad.net\u66ff\u6362\u4e3ahttps://launchpad.proxy.ustclug.org</p> <p>\u6b63\u5f0f\u5b89\u88c5 <pre><code>sudo apt-get update\nsudo apt install nvidia-driver-555\n</code></pre></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/mmdet3d%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","title":"Mmdet3d\u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/mmdet3d%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1-mmdet3d","title":"1 mmdet3d \u68af\u5ea6\u56de\u4f20","text":"<p>\u9996\u5148\u5728train.py\u4e2d\u7684main\u51fd\u6570\u4e2d\u6784\u5efaRunner\uff0crunner.run\u662f\u6574\u4e2a\u8bad\u7ec3\u7684\u5f00\u59cb</p> <p></p> <p>\u8fdb\u5165run\u51fd\u6570\uff0c\u6839\u636emode\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u6bd4\u5982mode=train\uff0c\u5219\u5728127\u884c\u8fd0\u884ctrain\u51fd\u6570</p> <p></p> <p></p> <p>\u5728runner\u4e2d\u7684run_iter\u51fd\u6570\u4e2d\uff0c\u8c03\u7528model\u7684train_step\u51fd\u6570 </p> <p>\u5728model\u7684train_step\u51fd\u6570\u4e2d\uff0c\u4f1a\u8c03\u7528\u5b9e\u4f8bself\uff0c\u5373\u8fdb\u884cforward\u524d\u5411\u4f20\u64ad\uff0c\u5f97\u5230\u4e00\u4e2alosses\uff0c\u4e3a\u4e00\u4e2adict\uff0c\u5b58\u4e86\u6a21\u578b\u7684\u6240\u6709loss\uff0ctrain_step\u4f1a\u5c06loss\u8fd4\u56de\u5230\u4e0a\u8fb9run_iter\u4e2d\u7684outputs\u4e2d </p> <p>\u5728run_iter\u8fd0\u884c\u5b8c\u540e\uff0c\u4f1a\u8c03\u7528after_train_iter\u8fd9\u4e2ahook\uff0c\u9996\u5148\u4f1a\u904d\u5386runner\u4e2d\u7684\u6240\u6709hook\uff0c\u7136\u540e\u627e\u5230\u6709after_train_iter\u8fd9\u4e2afunction\u7684hook\uff0c\u4f9d\u6b21\u8fd0\u884c\uff0c\u8fd9\u6837\u5c31\u4f1a\u8c03\u7528\u5230OptimizerHook\uff0c\u5728\u8fd9\u91cc\u8fdb\u884c\u53cd\u4f20\u548c\u68af\u5ea6\u6e05\u96f6\u4ee5\u53ca\u68af\u5ea6\u88c1\u526a\u3001\u68af\u5ea6\u66f4\u65b0\u3002</p> <p></p> <p>OptimizerHook\u662f\u5728\u6784\u9020runner\u7684\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\u6784\u9020\u7684\uff0c\u6784\u9020\u5b8crunner\u540e\u4f1a\u6ce8\u518c\u4e00\u4e9bhook\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/mmdet3d%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2","title":"2 \u4e00\u4e9b\u6559\u7a0b","text":"<p>\u8f7b\u677e\u638c\u63e1 MMDetection \u4e2d Head \u6d41\u7a0b https://zhuanlan.zhihu.com/p/343433169</p> <p>\u8f7b\u677e\u638c\u63e1 MMDetection \u6574\u4f53\u6784\u5efa\u6d41\u7a0b(\u4e00) https://zhuanlan.zhihu.com/p/337375549</p> <p>\u8f7b\u677e\u638c\u63e1 MMDetection \u6574\u4f53\u6784\u5efa\u6d41\u7a0b(\u4e8c) https://zhuanlan.zhihu.com/p/341954021</p> <p>\u5e26\u4f60\u73a9\u8f6c 3D \u68c0\u6d4b\u548c\u5206\u5272\uff08\u4e00\uff09\uff1aMMDetection3D \u6574\u4f53\u6846\u67b6\u4ecb\u7ecd https://zhuanlan.zhihu.com/p/478307528</p> <p>\u5e26\u4f60\u73a9\u8f6c 3D \u68c0\u6d4b\u548c\u5206\u5272 \uff08\u4e8c\uff09\uff1a\u6838\u5fc3\u7ec4\u4ef6\u5206\u6790\u4e4b\u5750\u6807\u7cfb\u548c Box https://zhuanlan.zhihu.com/p/491614921</p> <p>\u5e26\u4f60\u73a9\u8f6c 3D \u68c0\u6d4b\u548c\u5206\u5272 \uff08\u4e09\uff09\uff1a\u6709\u8da3\u7684\u53ef\u89c6\u5316 https://zhuanlan.zhihu.com/p/504862433</p> <p>MMDetection3D\u4ece\u5165\u95e8\u5230\u653e\u5f03\uff083\uff09-\u9b54\u6539BEV https://zhuanlan.zhihu.com/p/578459489</p> <p>MMDetection3D\u4ece\u5165\u95e8\u5230\u653e\u5f03\uff082\uff09-\u6570\u636e\u96c6\u8f6c\u6362 https://zhuanlan.zhihu.com/p/518872688</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/openspace%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","title":"Openspace\u7b97\u6cd5\u95ee\u9898\u603b\u7ed3","text":"<p>1.OPENSPACE\u6709\u91cd\u89c4\u5212\u673a\u5236\u5417\uff1f</p> <p>\u7b54\uff1a\u6ca1\u6709\uff0cOPEN SPACE\u53ea\u89c4\u5212\u4e00\u6b21\uff0c\u7136\u540e\u5faa\u8ff9\uff0c\u4e0d\u50cfemplanner\u90a3\u6837\u6bcf100ms\u6267\u884c\u4e00\u6b21\u3002\u4f46\u662f\u540efallback\u673a\u5236\uff0c\u5373\u5728\u5faa\u8ff9\u8fc7\u7a0b\u4e2d\u78b0\u5230\u4e86\u65b0\u7684\u969c\u788d\u7269\uff08\u4e4b\u524d\u6ca1\u770b\u5230\u7684\uff0c\u6216\u8005\u7a81\u7136\u51fa\u73b0\u7684\uff09\uff0c\u90a3\u4e48\u5c31\u91cd\u65b0\u518d\u89c4\u5212\u4e00\u6b21\u3002</p> <p>2.TDR-OBCA\u548cDL-IAPS\u7684\u65f6\u95f4</p> <p>\u7b54\uff1aTDR-OBCA\u9700\u89811-2s\uff0cDL-IAPS\u9700\u898170ms\u3002\u5176\u5b9e\u89c4\u5212\u65f6\u95f4\u4e0d\u592a\u91cd\u8981\uff0c\u56e0\u4e3aopenspace\u4e2d\u53ea\u89c4\u5212\u4e00\u6b21\uff0c\u7136\u540e\u5faa\u8ff9\u3002\u9047\u5230\u969c\u788d\u7269\u5728\u542f\u52a8fall back\u91cd\u89c4\u5212\u3002</p> <p>3.Apollo moudoel\u6587\u4ef6\u5939\u4e2d\uff0c\u6709\u4e00\u4e2aopenspace visual\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u81ea\u5df1\u9a8c\u8bc1\u4e00\u4e9b\u5c0f\u7684demo\u3002</p> <p>4.\u6df7\u5408A*\u600e\u4e48\u914d\u7f6e\u901f\u5ea6\uff1f \u7b54\uff1a\u4ecehybrid_a_star.CC\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5148\u914d\u7f6e\u56fa\u5b9a\u52a0\u901f\u5ea6\uff0c\u7136\u540e\u7528PJSO\u4f18\u5316\u4e00\u4e0b\u3002\u8fd9\u6837\u6df7\u5408A*\u5c31\u53ef\u4ee5\u6709\u901f\u5ea6\u4fe1\u606f\u4e86\u3002</p> <p>5.openspace\u8fd9\u79cd\u505c\u8f66\u7684\u573a\u666f\u7684\u89c4\u5212\u95ee\u9898\u548c\u9ad8\u901f\u7684\u89c4\u5212\u95ee\u9898\u6700\u4e3b\u8981\u7684\u533a\u522b\uff1f</p> <p>\u7b54\uff1aopenspace\u9002\u7528\u4e8e\u4f4e\u901f\u3002\u6240\u4ee5\u5b83\u5bf9\u5b9e\u65f6\u6027\u7684\u8981\u6c42\u4e0d\u592a\u9ad8\uff0c1s\u90fd\u53ef\u4ee5\u63a5\u53d7\u3002\u6240\u4ee5\u53ef\u4ee5\u7528\u4e00\u4e9bNMPC\u7b97\u6cd5\uff0c\u5728xy\u5750\u6807\u7cfb\u89c4\u5212\uff0c\u8003\u8651\u590d\u6742\u7684\u78b0\u649e\u7ea6\u675f\u3002\u4f46\u662f\u5982\u524d\u8fb9\u6240\u8bf4\uff0c\u7531\u4e8eOPEN SPACE\u53ea\u89c4\u5212\u4e00\u6b21\uff0c\u7136\u540e\u5faa\u8ff9\uff0c\u4e0d\u50cfemplanner\u90a3\u6837\u6bcf100ms\u6267\u884c\u4e00\u6b21\u3002\u4f46\u662f\u6709fallback\u673a\u5236\uff0c\u5373\u5728\u5faa\u8ff9\u8fc7\u7a0b\u4e2d\u78b0\u5230\u4e86\u65b0\u7684\u969c\u788d\u7269\uff08\u4e4b\u524d\u6ca1\u770b\u5230\u7684\uff0c\u6216\u8005\u7a81\u7136\u51fa\u73b0\u7684\uff09\uff0c\u90a3\u4e48\u5c31\u91cd\u65b0\u518d\u89c4\u5212\u4e00\u6b21\u3002\u6240\u4ee5openspace\u5bf9\u5b9e\u65f6\u5904\u7406\u7a81\u7136\u51fa\u73b0\u7684\u969c\u788d\u7269\uff0c\u53ea\u80fd\u505c\u8f66\uff0c\u91cd\u65b0\u8ba1\u7b97\uff0c\u6548\u7387\u592a\u4f4e\u3002</p> <p>emplaner\u9002\u7528\u4e8e\u9ad8\u901f\u3002100ms\u91cd\u89c4\u5212\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u65f6\u7684\u5904\u7406\u7a81\u7136\u51fa\u73b0\u7684\u969c\u788d\u7269\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BA%A4%E5%8F%89%E7%86%B5%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/","title":"\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570","text":"<p>\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u662f\u4e0d\u4ec5\u5305\u542b\u6b63\u6837\u672c\u7684\u68af\u5ea6\u4fe1\u606f\uff0c\u4e5f\u5305\u542b\u8d1f\u6837\u672c\u7684\u68af\u5ea6\u4fe1\u606f</p> <p>\u867d\u7136\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u5728\u8ba1\u7b97loss\u65f6\uff0c\u53ea\u8ba1\u7b97\u6b63\u6837\u672c\u7684-log\uff0c\u4f46\u662f\u7531\u4e8e\u7ecf\u8fc7\u4e86softmax\uff0csoftmax\u7684\u5206\u6bcd\u4e2d\u5b58\u5728\u8d1f\u6837\u672c\u7684\u6982\u7387\u503c\uff0c\u6240\u4ee5\u5728\u68af\u5ea6\u8ba1\u7b97\u65f6\u5bf9\u8d1f\u6837\u672c\u4e5f\u6709\u76f8\u5e94\u7684\u68af\u5ea6\u3002 </p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BB%A3%E4%BB%B7%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%BE%E8%AE%A1/","title":"\u4ee3\u4ef7\u51fd\u6570\u7684\u8bbe\u8ba1","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BB%A3%E4%BB%B7%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%BE%E8%AE%A1/#lattice","title":"lattice","text":"<p>\u5b89\u5168\uff1a 1.\u907f\u514d\u78b0\u649e\uff1a\u548c\u969c\u788d\u7269\u7684\u8ddd\u79bb</p> <p>\u8212\u9002 1.\u7eb5\u5411\u5e73\u6ed1\uff1ajerk\u7684\u5e73\u65b9\u548c 2.\u5411\u5fc3\u52a0\u901f\u5ea6\uff1akappa\u00d7\u901f\u5ea6\u5e73\u65b9 3.\u6a2a\u5411\u504f\u79fb\uff1al\u7684\u5e73\u65b9 4.\u6a2a\u5411\u8212\u9002\u6027</p> <p>\u9ad8\u6548: 1.\u7eb5\u5411\u5230\u8fbe\u76ee\u6807\uff08\u548c\u53c2\u8003\u901f\u5ea6\u7684\u504f\u5dee\uff09</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BB%A3%E4%BB%B7%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%BE%E8%AE%A1/#_1","title":"\u4f18\u5316\u65b9\u6cd5","text":"<p>DP\u8def\u5f84\u89c4\u5212 \u5b89\u5168\uff1a 1.\u78b0\u649e\uff1a\u548c\u969c\u788d\u7269\u7684\u8ddd\u79bb</p> <p>\u8212\u9002\uff1a 1.\u5e73\u6ed1\uff1a\u5bf9l\u7684\u4e00\u9636\u504f\u5bfc\uff0c\u4e8c\u9636\u504f\u5bfc\u3001\u4e09\u9636\u504f\u5bfc\u7684\u5e73\u65b9\u548c</p> <p>\u9ad8\u6548\uff1a 1.\u548c\u53c2\u8003\u8f68\u8ff9\u7684\u504f\u5dee</p> <p>QP\u8def\u5f84\u89c4\u5212\uff1a \u5b89\u5168\uff1a\u65e0</p> <p>\u8212\u9002\uff1a 1.\u5e73\u6ed1\uff1a\u5bf9l\u7684\u4e00\u9636\u504f\u5bfc\uff0c\u4e8c\u9636\u504f\u5bfc\u3001\u4e09\u9636\u504f\u5bfc\u7684\u5e73\u65b9\u548c</p> <p>\u9ad8\u6548\uff1a 1.\u548c\u53c2\u8003\u8f68\u8ff9\u7684\u504f\u5dee</p> <p>DP\u901f\u5ea6\u89c4\u5212 \u5b89\u5168\uff1aST\u56fe\u4e0a\u7684\u78b0\u649e \u8212\u9002\uff1a\u52a0\u901f\u5ea6\uff0cjerk\u7684\u5e73\u65b9\u548c \u9ad8\u6548\uff1a\u548c\u53c2\u8003\u901f\u5ea6\u7684\u504f\u5dee</p> <p>QP\u901f\u5ea6\u89c4\u5212 \u5b89\u5168\uff1a\u65e0 \u8212\u9002\uff1a\u52a0\u901f\u5ea6\uff0cjerk\u7684\u5e73\u65b9\u548c \u9ad8\u6548\uff1a\u548c\u53c2\u8003\u901f\u5ea6\u7684\u504f\u5dee</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/","title":"\u4f9d\u8d56\u6ce8\u5165(DependencyInjector)","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#_1","title":"\u6982\u5ff5","text":"<p>\u4f9d\u8d56\u6ce8\u5165\u662f\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002\u4e3e\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\uff1a</p> <pre><code>\u73b0\u5728\u4f60\u662f\u4e00\u4e2a\u805a\u4f1a\u7684\u7ec4\u7ec7\u8005\uff0c\u5728\u672c\u5730\u805a\u4f1a\u4e0a\uff0c\u4f60\u9700\u8981\u51c6\u5907\u70e4\u9762\u5305\u3001\u70e4\u9e21\u3001\u5976\u6cb9\u86cb\u7cd5\u3002\u90a3\u4e48\u4f60\u81ea\u5df1\uff08\u7ec4\u7ec7\u8005\uff09\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5bf9\u8c61\uff08class\uff09\uff0c\u9700\u8981\u4f9d\u8d56\u70e4\u9762\u5305\u3001\u70e4\u9e21\u3001\u5976\u6cb9\u86cb\u7cd5\u5bf9\u8c61\u3002\u56e0\u6b64\u70e4\u9762\u5305\u3001\u70e4\u9e21\u3001\u5976\u6cb9\u86cb\u7cd5\u4f5c\u4e3a\u4e09\u4e2a\u4f9d\u8d56\u9700\u8981\u6ce8\u5165\u5230\u4f60\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u3002\n\u4f9d\u8d56\u6ce8\u5165\u53ef\u4ee5\u4f7f\u81ea\u8eab\u548c\u81ea\u8eab\u7684\u4f9d\u8d56\u9879\u89e3\u8026\uff0c\u6bd4\u5982\u70e4\u9762\u5305\u3001\u70e4\u9e21\u3001\u5976\u6cb9\u86cb\u7cd5\u53ef\u4ee5\u4ea4\u7ed9\u4e0d\u540c\u7684\u4eba\u53bb\u505a\u3002\u6700\u540e\u7531\u7ec4\u7ec7\u8005\u8fdb\u884c\u6c47\u603b\u5373\u53ef\uff0c\u7ec4\u7ec7\u8005\u4e0d\u9700\u8981\u77e5\u9053\u70e4\u9762\u5305\u3001\u70e4\u9e21\u3001\u5976\u6cb9\u86cb\u7cd5\u662f\u8c01\u505a\u7684\u3001\u662f\u5982\u4f55\u505a\u7684\u3002\u800c\u4e14\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5bf9\u70e4\u9762\u5305\u3001\u70e4\u9e21\u3001\u5976\u6cb9\u86cb\u7cd5\u8fd9\u4e2a\u4e09\u4e2a\u4f9d\u8d56\u66f4\u6362\u5236\u4f5c\u65b9\u6cd5\u548c\u5236\u4f5c\u4eba\u3002\n\u81ea\u52a8\u9a7e\u9a76\u4e2d\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6bcf\u4e2a\u6a21\u5757\uff0c\u6bd4\u5982planning\u3001control\u4f9d\u8d56\u4e00\u4e9b\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u6bd4\u5982planning\u4f9d\u8d56\u9884\u6d4b\u63d0\u4f9b\u7684\u76ee\u6807\u4fe1\u606f\u3001\u5730\u56fe\u7b49\u3002\u6240\u4ee5\u9884\u6d4b\u63d0\u4f9b\u7684\u76ee\u6807\u4fe1\u606f\u3001\u5730\u56fe\u4f5c\u4e3a\u4f9d\u8d56\u9700\u8981\u6ce8\u5165\u5230planning\u4e2d\u3002\u800c\u8fd9\u4e2a\u6ce8\u5165\u7684\u8fc7\u7a0b\u5c31\u662f\u4f9d\u8d56\u6ce8\u5165\u3002\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#c","title":"C++\u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\u7684\u4f8b\u5b50","text":"<p>IOC(\u63a7\u5236\u53cd\u8f6c)\uff0c\u662f\u4e3a\u4e86\u7c7b\u5bf9\u8c61\u95f4\u89e3\u8026\u5408\u7684\u4e00\u79cd\u8bbe\u8ba1\u601d\u60f3\u3002 DI(\u4f9d\u8d56\u6ce8\u5165),\u662f\u4e00\u79cdIOC\u7684\u5b9e\u73b0,\u6307\u7684\u662f\u4f9d\u8d56\u5173\u7cfb\u7531\u5916\u90e8\u6ce8\u5165\uff0c\u7b49\u7b49\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7c7bA\u4f9d\u8d56\u7c7bB\uff0c\u7c7bB\u5f80\u5f80\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff08\u4f9d\u8d56\u5012\u7f6e\uff09\uff0c\u7c7bA\u4e0d\u76f4\u63a5\u5728\u5185\u90e8new\u7c7bB\u6d3e\u751f\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u4e3a\u7c7bA\u5f15\u5165\u4e86\u5bf9\u7c7bB\u5177\u4f53\u6d3e\u751f\u7c7b\u7684\u76f4\u63a5\u4f9d\u8d56\uff0c\u8f6c\u800c\u7531\u5916\u90e8\u7b2c\u4e09\u65b9DI\u5bb9\u5668\u751f\u6210\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e4b\u7c7b\u6ce8\u5165\u7c7bA\u5bf9\u8c61\u91cc\u7684\u7c7bB\u6210\u5458\u53d8\u91cf\u4e2d,\u800c\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u7684\u9009\u62e9\u5219\u7531\u5916\u90e8\u914d\u7f6e\u6765\u63a7\u5236\u53cd\u8f6c\u3002</p> <p>IOC\u548cDI\u5728java \u540e\u53f0\u5f00\u53d1\u9886\u57df\u975e\u5e38\u5e38\u89c1\uff0c\u4f46\u662f\u5728C++\u76ee\u524d\u4e5f\u6ca1\u6709\u7279\u522b\u6cdb\u7528\u7684IOC\u6846\u67b6\uff08\u4e14\u66f4\u503e\u5411\u7528\u6a21\u677f\u7f16\u8bd1\u671f\u884c\u4e3a\u6765\u63d0\u9ad8\u6027\u80fd\uff09\u3002\u4f46\u662f\u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\u8fd8\u662f\u9700\u8981\u8fd9\u79cdIOC\u7684\u601d\u60f3\u7684\u3002</p> <p>\u6839\u636eSOILD\u539f\u5219\uff0c\u5728\u4ee3\u7801\u5f00\u53d1\uff0c\u6211\u4eec\u4e00\u822c\u90fd\u4f1a\u6709\u62bd\u8c61\u63a5\u53e3\u53ca\u591a\u4e2a\u63a5\u53e3\u5b9e\u73b0\u5b50\u7c7b\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u4e0d\u540c\u4e1a\u52a1\u573a\u666f\u8c03\u7528\u4e0d\u540c\u7684\u63a5\u53e3\u5b9e\u73b0\u5b50\u7c7b\uff0c\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\u5b9e\u9645\u662f\u6839\u636e\u5916\u90e8\u573a\u666f\u6ce8\u5165\u5230\u5b9e\u9645\u4e1a\u52a1\u7c7b\u4e2d\u3002\u53ef\u4ee5\u5f88\u65b9\u4fbf\u4e1a\u52a1\u7684\u62d3\u5c55\u53ca\u5355\u5143\u6d4b\u8bd5\u3002</p> <p>\u5f52\u6839\u5230\u5e95\u90fd\u662f\uff0c\u5bfb\u627e\u4e1a\u52a1\u4e2d\u5bb9\u6613\u53d8\u5316\u7684\u70b9\uff0c\u5bfb\u627e\u89e3\u8026\u7684\u70b9, \u8ba9\u5176\u66f4\u52a0\u53ef\u63a7\uff0c\u8ba9\u7a0b\u5e8f\u5458\u6539\u4ee3\u7801\u7684\u65f6\u5019\u5bb9\u6613\u4e9b\uff0c\u540c\u65f6\u5bf9\u7cfb\u7edf\u7684\u5f71\u54cd\u66f4\u5c0f\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#apollo","title":"Apollo\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165","text":"<p>\u4ee5planning\u6a21\u5757\u4e3a\u4f8b\uff0c\u5176\u4f9d\u8d56\u6ce8\u5165\u662f\u4e00\u4e2a\u540d\u4e3aDependencyInjector\u7684\u7c7b\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5b58\u50a8\u7740planning\u9700\u8981\u7528\u5230\u7684\u5386\u53f2\u4fe1\u606f\u3002</p> <p></p> <p>\u5728planningcomponent\u4e2d\u9700\u8981\u7528\u5230\u8be5\u6ce8\u5165\u5668\u3002\u7528\u6765\u63d0\u4f9b\u89c4\u5212\u7684\u5386\u53f2\u4fe1\u606f\u3002</p> <p>\u5176\u4ed6\u7684\u4e00\u4e9b\u6d88\u606f\u6bd4\u5982map\u3001routing\u7b49\u662f\u901a\u8fc7cyber\u4e2d\u7684\u8ba2\u9605\u5668reader\u6765\u8bfb\u53d6\u7684\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#_2","title":"\u7b80\u4ecb","text":"<ul> <li>planning\u5305\uff1a\u8868\u793aapollo/modules/planning\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9</li> <li>planning\u7ec4\u4ef6\uff1a\u8868\u793aapollo/modules/planning/planning_component.h\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684PlanningComponent\u7c7b\u3001\u6216\u8005\u5bf9\u5e94\u7684\u5bf9\u8c61</li> <li>planning\u6a21\u5757\uff1a\u8868\u793a\u6765\u81eaapollo/modules/planning/planning_base.h\u4e2d\u7684PlanningBase\u7c7b\u3001\u5bf9\u8c61\uff0c\u4ee5\u53ca\u5176\u5b50\u7c7b\uff0c\u5305\u62ecOnLanePlanning\u3001NaviPlanning\u7c7b\u3001\u5bf9\u8c61\u7b49\uff0c\u672c\u6587\u9488\u5bf9OnLanePlanning\u7c7b\u5c55\u5f00\u8ba8\u8bba\uff0c\u5373\u4ee3\u6307OnLanePlanning\u6a21\u5757</li> </ul> <p>\u63a5\u4e0b\u6765\u4ecb\u7ecdplanning\u7ec4\u4ef6\u7684\u903b\u8f91\u68b3\u7406</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#_3","title":"\u6570\u636e\u6d41","text":"<p>\u8981\u60f3\u66f4\u4e3a\u6e05\u6670\u7684\u7406\u89e3planning\u6a21\u5757\u7684\u5de5\u4f5c\u903b\u8f91\uff0c\u9700\u8981\u5bf9\u6574\u4e2a\u6a21\u5757\u5de5\u4f5c\u65f6\u7684\u6570\u636e\u6d41\u8fdb\u884c\u521d\u6b65\u4e86\u89e3\u3002Apollo6.0 \u4ee3\u7801\u5e93\u7684planning\u6a21\u5757\u6570\u636e\u6d41\u5927\u81f4\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>PlanningComponent \u903b\u8f91\u56fe</p> <ul> <li>\u4e00\u4e2aplanning\u6a21\u5757\uff0c\u4f5c\u4e3aplanning\u7684\u6838\u5fc3\u7ed3\u6784\uff0c\u8d1f\u8d23\u89c4\u5212\u5de5\u4f5c</li> <li>\u591a\u4e2a\u8f93\u5165\u3001\u8f93\u51fa\u901a\u9053(channel)\uff0c\u8d1f\u8d23\u4e0e\u5176\u4ed6\u6a21\u5757\u8fdb\u884c\u6570\u636e\u901a\u4fe1</li> <li>\u4e00\u4e2a\u6570\u636e\u7f13\u5b58\u533a(DependencyInjector)\uff0c\u8d1f\u8d23\u5168\u7a0b\u6570\u636e\u7684\u7f13\u5b58\u4e0e\u4ea4\u4e92</li> <li>\u4e24\u4e2a\u5904\u7406\u6d41\uff0c\u5206\u522b\u5b9e\u73b0\u521d\u59cb\u5316(Init)\uff0c\u548c\u6d88\u606f\u54cd\u5e94\u5904\u7406(Proc)</li> </ul> <p>\u4ee5\u4e0b\u9010\u4e2a\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#planningcomponent","title":"\u7ec4\u4ef6\u5bf9\u8c61 PlanningComponent","text":"<ul> <li>planning\u7ec4\u4ef6\uff0c\u5373PlanningComponent\u7c7b\u3001\u5bf9\u8c61\uff0c\u5176\u7ee7\u627f\u81eacyber::Component\u7c7b\uff0c\u53ef\u5728CyberRT\u4e2d\u5b8c\u6210\u6ce8\u518c\u5de5\u4f5c\uff0c\u5b9e\u73b0\u6d88\u606f\u54cd\u5e94\u673a\u5236\u7684\u6258\u7ba1\uff0c\u662f\u5de5\u7a0b\u5b9e\u73b0\u548c\u7b97\u6cd5\u5b9e\u73b0\u4e4b\u95f4\u7684\u6865\u6881\u3002 <li> <p>planning\u7ec4\u4ef6\u662f\u4e00\u4e2a\u652f\u63013\u4e2achannel\u8f93\u5165\u7684\u6d88\u606f\u56de\u8c03\u578b\u7ec4\u4ef6\uff0c\u652f\u6301\u7684\u6d88\u606f\u7c7b\u578b\u5206\u522b\u5982\u4e0b\uff1a</p> </li> <li> <p>\u9884\u6d4b\u6d88\u606f\uff1aprediction::PredictionObstacles</p> </li> <li>\u5e95\u76d8\u6d88\u606f\uff1acanbus::Chassis</li> <li> <p>\u5b9a\u4f4d\u6d88\u606f\uff1alocalization::LocalizationEstimate</p> </li> <li> <p>CyberRT\u7cfb\u7edf\u6536\u5230\u4e0a\u8ff0\u4efb\u4f55\u4e00\u4e2a\u6d88\u606f\u540e\u90fd\u4f1a\u8c03\u8d77Planning\u7ec4\u4ef6\u7684Proc\u51fd\u6570\u8fdb\u884c\u6d88\u606f\u54cd\u5e94\uff08\u4e0e\u56de\u8c03\u578b\u7ec4\u4ef6\u5bf9\u5e94\u7684\u662f\u5b9a\u65f6\u5668\u578b\u7ec4\u4ef6\uff0c\u5373CyberRT\u4e2d\u7684\u5b9a\u65f6\u5668\u4f1a\u6309\u7740\u4e00\u5b9a\u7684\u9891\u7387\u8c03\u7528Proc\u51fd\u6570\uff09\u3002</p> </li> <li>planning\u6a21\u5757\uff0c\u662f\u5b9e\u9645\u7684planning\u6838\u5fc3\u6846\u67b6\uff0c\u4f5c\u4e3aplanning\u7ec4\u4ef6\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5b9e\u73b0\u5177\u4f53\u7684\u89c4\u5212\u529f\u80fd\uff0c\u5177\u4f53\u903b\u8f91\u672c\u6587\u6682\u4e0d\u5c55\u5f00\u8bb2\u89e3\u3002</li>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#dependencyinjector","title":"\u7ec4\u4ef6\u6570\u636e\u7f13\u5b58 DependencyInjector","text":"<ul> <li>DependencyInjector\uff1a\u4f9d\u8d56\u6ce8\u5165\u5668\uff0c\u8fd9\u662f\u4e00\u4e2a\u8fc7\u4e8e\u4e13\u4e1a\u7684\u540d\u8bcd\uff0c\u6765\u81ea\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u7684\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\u7684\u4e00\u79cd\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\uff0c\u8d77\u5230\u6a21\u5757\u89e3\u8026\u4f5c\u7528\u3002</li> <li>DependencyInjector\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u7f13\u5b58\u4e2d\u5fc3\uff0c\u53ebDataCacheCenter\u53ef\u80fd\u66f4\u8d34\u5207\u4e9b\u3002</li> <li>DependencyInjector\u5bf9\u8c61\u5185\u90e8\u7ba1\u7406\u8005planning\u6a21\u5757\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\u7684\u5b9e\u65f6\u6570\u636e\u548c\u51e0\u4e4e\u5168\u90e8\u5386\u53f2\u6570\u636e\uff0c\u4ee5\u4fbf\u4e8e\u89c4\u5212\u4efb\u52a1\u7684\u524d\u540e\u5e27\u4e4b\u95f4\u7684\u627f\u63a5\uff0c\u4ee5\u53ca\u5f02\u5e38\u5904\u7406\u7684\u56de\u6eaf\u3002</li> <li>DependencyInjector\u662f\u4ee5\u7a7a\u5bf9\u8c61\u7684\u5f62\u5f0f\u5f15\u5165\u5230planning\u7ec4\u4ef6\u4e2d\uff0c\u8fdb\u800c\u5f15\u5165\u5230planning\u6a21\u5757\u4e2d\u7528\u6765\u627f\u8f7d\u4e2d\u95f4\u6570\u636e\u3002 DependencyInjector\u7684\u7c7b\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a</li> </ul> <p>DependencyInjector\u7ed3\u6784\u56fe</p> <ul> <li>\u4f9d\u8d56\u6ce8\u5165\u7ed3\u6784\u4e2d\u4e3b\u8981\u67096\u7c7b\u6210\u5458\u53d8\u91cf\uff0c\u5206\u522b\u5982\u4e0b\uff1a</li> <li>PlanningContext\u00a0planning_context_\uff1a\u8d1f\u8d23planning\u4e0a\u4e0b\u6587\u7684\u7f13\u5b58\uff0c\u6bd4\u5982\u662f\u5426\u89e6\u53d1\u91cd\u65b0\u8def\u7531\u7684ReroutingStatus\u4fe1\u606f</li> <li>History\u00a0history_\uff1a\u8d1f\u8d23\u969c\u788d\u7269\u72b6\u6001\u7684\u7f13\u5b58\uff0c\u5305\u62ec\u8fd0\u52a8\u72b6\u6001\u3001\u51b3\u7b56\u7ed3\u679c\u3002\u8be5\u6570\u636e\u4e0erouting\u7ed3\u679c\u7ed1\u5b9a\uff0crouting\u53d8\u66f4\u540e\u4f1a\u6e05\u7406\u6389\u5386\u53f2\u6570\u636e\u3002</li> <li>FrameHistory\u00a0frame_history_\uff1a\u662f\u4e00\u4e2a\u53ef\u7d22\u5f15\u961f\u5217\uff0c\u8d1f\u8d23planning\u7684\u8f93\u5165\u3001\u8f93\u51fa\u7b49\u4e3b\u8981\u4fe1\u606f\u7684\u7f13\u5b58\uff0c\u4ee5Frame\u7c7b\u8fdb\u884c\u7ec4\u7ec7\uff0c\u5185\u90e8\u5305\u542bLocalView\u7ed3\u6784\u4f53\uff08\u8d1f\u8d23\u8f93\u5165\u6570\u636e\u7684\u878d\u5408\u7ba1\u7406\uff09\u3002\u4e0e\u4e0a\u8ff0\u7684History\u662f\u4e0d\u540c\u7684\u662f\uff0c\u8be5\u7f13\u6570\u636e\u81ea\u6a21\u5757\u542f\u52a8\u540e\u5c31\u5f00\u59cb\u7f13\u5b58\u6240\u6709\u7684Frame\u5bf9\u8c61\uff0c\u4e0d\u53d7routing\u53d8\u52a8\u7684\u5f71\u54cd\u3002</li> <li>EgoInfo\u00a0ego_info_\uff1a\u63d0\u4f9b\u8f66\u8f86\u52a8\u3001\u9759\u4fe1\u606f\uff0c\u5373\u8f66\u8f86\u8fd0\u52a8\u72b6\u6001\u53c2\u6570\uff08\u8f68\u8ff9\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u7b49\uff09\u548c\u8f66\u8f86\u7ed3\u6784\u53c2\u6570\uff08\u957f\u5bbd\u9ad8\u7b49\uff09</li> <li>apollo::common::VehicleStateProvider\u00a0vehicle_state_\uff1a\u8f66\u8f86\u72b6\u6001\u63d0\u4f9b\u5668\uff0c\u7528\u4e8e\u83b7\u53d6\u8f66\u8f86\u5b9e\u65f6\u4fe1\u606f</li> <li>LearningBasedData\u00a0learning_based_data_\uff1a\u57fa\u4e8e\u5b66\u4e60\u7684\u6570\u636e\uff0c\u7528\u4e8e\u5b66\u4e60\u5efa\u6a21\u7b49</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#_4","title":"\u7ec4\u4ef6\u5de5\u4f5c\u6d41","text":"<p>planning\u7ec4\u4ef6\u4e3b\u8981\u5b8c\u6210\u4e24\u9879\u4efb\u52a1\uff1a\u521d\u59cb\u5316\u5de5\u4f5cInit\uff0c\u6d88\u606f\u54cd\u5e94\u5de5\u4f5cProc\uff0c\u5177\u4f53\u8fc7\u7a0b\u53ef\u53c2\u8003\u4e0b\u56fe\u76841~6\u6b65</p> <p></p> <p>PlanningComponent\u903b\u8f91\u56fe</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#_5","title":"\u521d\u59cb\u5316","text":"<ul> <li>\u521d\u59cb\u5316\u5de5\u4f5c\u7531CyberRT\u7cfb\u7edf\u7684launch\u547d\u4ee4\u89e6\u53d1\uff0c\u5927\u81f4\u5206\u4e3a2\u6b65\uff0c\u6838\u5fc3\u4ee3\u7801\u6574\u7406\u622a\u56fe\u5982\u4e0b</li> </ul> <p>Init()</p> <ul> <li>1\u3001planning\u6a21\u5757\u7684\u521d\u59cb\u5316\uff0c\u6839\u636e\u6807\u5fd7\u4f4d\u9009\u62e9\u5177\u4f53\u7684PlanningBase\u5b50\u7c7b\uff0c\u5e76\u8c03\u7528Init\u51fd\u6570\u521d\u59cb\u5316\uff0c\u56fe\u4e2d1\u6240\u793a</li> <li>2\u3001\u5efa\u7acb\u6d88\u606f\u901a\u9053(channel)\uff0c\u5305\u62ec\u8f93\u5165\u901a\u9053traffic_light\u3001routing\u7b49\uff08\u56fe\u4e2d2-1\uff09\u548c\u8f93\u51fa\u901a\u9053rerouting\u3001planning\u7b49\uff08\u56fe\u4e2d2-2\uff09</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DependencyInjector%29/#_6","title":"\u6d88\u606f\u54cd\u5e94","text":"<ul> <li>\u6d88\u606f\u54cd\u5e94\u7531CyberRT\u5728\u63a5\u6536\u5230\u5173\u8054\u6d88\u606f\uff08\u4e0a\u6587\u6709\u63d0\u52303\u7c7b\u4e2d\u7684\u4efb\u4f551\u7c7b\uff09\u5230\u8fbe\u540e\u89e6\u53d1\uff0c\u5de5\u4f5c\u5927\u81f4\u5206\u4e3a4\u6b65\uff0c\u6838\u5fc3\u4ee3\u7801\u6574\u7406\u622a\u56fe\u5982\u4e0b</li> </ul> <p>Proc()</p> <ul> <li>3\u3001\u5de5\u4f5c\u524d\u68c0\u67e5\uff0c\u5305\u62ec\u91cd\u65b0\u8fdb\u884c\u8def\u7531\u7684\u68c0\u67e5\uff08\u56fe\u4e2d3-1\uff09\uff0c\u5982\u679c\u9700\u8981\u4f1a\u53d1\u9001rerouting\u6d88\u606f\uff1b\u8f93\u5165\u6570\u636e\u878d\u5408\u4e0e\u68c0\u67e5\uff08\u56fe\u4e2d3-2\uff09\uff0c\u6570\u636e\u6765\u6e90\u5305\u62ec\u5916\u90e8\u4f20\u53c2\u548c\u5185\u90e8\u7f13\u5b58\u6570\u636e\uff0c\u4e00\u5e76\u6c47\u603b\u5230LocalView\u7ed3\u6784\u4f53\u4e2d\uff0c\u5b9e\u73b0\u878d\u5408\uff0c\u5e76\u6700\u7ec8\u4f1a\u4fdd\u5b58\u5230Frame\u5bf9\u8c61\u4e2d</li> <li>4\u3001\u6267\u884c\u89c4\u5212\u4efb\u52a1\uff08\u56fe\u4e2d4\uff09\uff0c\u6b64\u5904\u4f1a\u8c03\u7528PlanningBase\u5b50\u7c7b\u7684RunOnce\u51fd\u6570\u8fdb\u884c\u4e00\u6b21\u89c4\u5212\u4efb\u52a1\uff0c\u751f\u6210\u89c4\u5212\u540e\u7684\u8f68\u8ff9</li> <li>5\u3001\u53d1\u5e03\u89c4\u5212\u7ed3\u679c\uff08\u56fe\u4e2d5\uff09\uff0c\u5229\u7528\u5df2\u7ecf\u521b\u5efa\u7684planning\u901a\u9053\u53d1\u9001\u89c4\u5212\u7ed3\u679c</li> <li>6\u3001\u66f4\u65b0\u5386\u53f2\u7f13\u5b58\uff08\u56fe\u4e2d6\uff09\uff0c\u5c06\u6700\u7ec8\u8f68\u8ff9\u66f4\u65b0\u5230history\u4e2d\uff08\u5176\u4ed6\u7f13\u5b58\u5728PlanningBase\u5b50\u7c7b\u4e2d\u5b8c\u6210\u7684\uff09\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%84%9F%E6%82%9F/","title":"\u51b3\u7b56\u89c4\u5212\u611f\u609f","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%8F%82%E8%80%83%E7%BA%BF%E5%B9%B3%E6%BB%91%E7%9A%84%E6%9B%B2%E7%8E%87%E7%BA%A6%E6%9D%9F%E7%9A%84%E6%8E%A8%E5%AF%BC/","title":"\u53c2\u8003\u7ebf\u5e73\u6ed1\u7684\u66f2\u7387\u7ea6\u675f\u7684\u63a8\u5bfc","text":"<p>https://zhuanlan.zhihu.com/p/371585754</p> <p></p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/","title":"\u5404\u79cd\u4f18\u5316\u7b97\u6cd5\u7684\u89e3\u6790\u4e0e\u5bf9\u6bd4","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#1","title":"1. \u524d\u7aef","text":"<p>\u524d\u7aef\u7684\u4f5c\u7528\u662f\u7ed9\u51fa\u4e00\u6761\u201c\u770b\u8d77\u6765\u8fd8\u884c\u201d\u7c97\u8f68\u8ff9\uff0c\u4e0d\u7528\u592a\u5173\u6ce8\u66f2\u7387\u662f\u5426\u8fde\u7eed\uff0c\u662f\u5426\u590d\u5408\u52a8\u529b\u5b66\u7b49\u7b49\u3002\u53ea\u8981\u8fd9\u6761\u8f68\u8ff9\u80fd\u907f\u514d\u78b0\u649e\uff0c\u51e0\u4f55\u4e0a\u76f8\u5bf9\u8f83\u4f18\u5373\u53ef\u3002</p> <p>\u524d\u7aef\u89c4\u5212\u4e00\u822c\u6ce8\u91cd\u6548\u7387\uff0c\u540e\u7aef\u4e00\u822c\u6ce8\u91cd\u8212\u9002\u3002</p> <p>\u524d\u7aef\u5e38\u7528\u5230\u7684\u4e24\u7c7b\u7b97\u6cd5\uff1a\u641c\u7d22\u7b97\u6cd5\u548c\u91c7\u6837\u7b97\u6cd5</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#1-1","title":"1. 1\u641c\u7d22\u7b97\u6cd5","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#111-dijkstra","title":"1.1.1 dijkstra","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#112-a","title":"1.1.2 a *","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#113-a","title":"1.1.3 \u6df7\u5408a*","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#12","title":"1.2\u91c7\u6837\u7b97\u6cd5\uff08\u6982\u7387\uff09","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#121-rrt","title":"1.2.1 RRT","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#122-rrt","title":"1.2.2 RRT*","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#13","title":"1.3\u91c7\u6837\u7b97\u6cd5\uff08\u89c4\u5219\uff09\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u505a\u540e\u7aef","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#131-lattice","title":"1.3.1 lattice","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#132-dwa","title":"1.3.2 dwa","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#2","title":"2. \u540e\u7aef","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#21","title":"2.1 \u76f4\u63a5\u4f18\u5316","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#22-b5","title":"2.2 \u53c2\u6570\u5316\u66f2\u7ebf+\u4f18\u5316(\u8d1d\u585e\u5c14\u3001B\u6837\u6761\u30015\u6b21\u591a\u9879\u5f0f)","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#221-bvpobvp","title":"2.2.1 \u4e94\u6b21\u591a\u9879\u5f0f\uff08BVP\u3001OBVP\uff09","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684BVP\uff08Boundary Value Problem\uff09\u95ee\u9898\uff0c\u5373\u9650\u5b9a\u4e86\u8f68\u8ff9\u7684\u521d\u59cb\u70b9\u53ca\u76ee\u6807\u70b9\uff0c\u6784\u9020\u51fa\u4e00\u6761\u5e73\u6ed1\u7684\u8f68\u8ff9\u3002  \u5047\u8bbe\u6211\u4eec\u8fb9\u754c\u6761\u4ef6\u4e3a\u8d77\u59cb\u70b9\u7684\uff08p,v,a\uff09\u53ca\u76ee\u6807\u70b9\u7684\uff08p,v,a\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u81f3\u5c11\u9700\u8981\u6784\u9020\u4e00\u4e2a\u4e94\u9636\u591a\u9879\u5f0f\uff08\u5305\u542b6\u4e2a\u7cfb\u6570\uff09\u6765\u8fdb\u884c\u8fde\u63a5\u624d\u80fd\u591f\u6ee1\u8db3\u8d77\u6b62\u70b9\u7684\u7ea6\u675f\u6761\u4ef6\u3002 </p> <p>\u8be5\u95ee\u9898\u7684\u8fb9\u754c\u6761\u4ef6\u9650\u5236\u4e3a\uff1a</p> <p></p> <p>\u56e0\u6b64\uff0c\u8be5\u95ee\u9898\u7684\u6c42\u89e3\u53ef\u4ee5\u7b80\u5355\u5730\u5217\u51fa\u77e9\u9635\u7b49\u5f0f\u5982\u4e0b\uff1a </p> <p>\u6700\u7b80\u5355\u7684BVP\u95ee\u9898\u662f\u5047\u8bbe\u4e86\u65f6\u95f4\u4e00\u5b9a=T\u7684\u60c5\u51b5\uff0c\u5176\u89e3\u662f\u56fa\u5b9a\u4e14\u552f\u4e00\u7684\u3002\u5982\u679c\u6211\u4eec\u52a0\u5165\u4e00\u4e2a\u4ee3\u4ef7\u51fd\u6570\uff0c\u8fd9\u5c31\u53d8\u6210\u4e86\u4e00\u4e2aOBVP\uff08Optimal Boundary Value Problem\uff09\u95ee\u9898\uff0c\u6b64\u65f6\u65f6\u95f4T\u5c31\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u4f18\u7684T\uff0c\u4f7f\u5f97\u4ee3\u4ef7\u51fd\u6570\u7684\u503c\u6700\u5c0f\u3002</p> <p></p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u8bbe\u5b9a\u4ee3\u4ef7\u51fd\u6570\u53ea\u8003\u8651Jerk\u7684\u5e73\u65b9\uff0c\u72b6\u6001\u7a7a\u95f4\u4e3a\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\uff0c\u7cfb\u7edf\u7684\u8f93\u5165\u4e3ajerk\u503c\uff0c\u7136\u540e\u518d\u6839\u636e\u7cfb\u7edf\u7684\u6a21\u578b\u6765\u6784\u9020\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\u8fd9\u6837\u4e00\u4e2a\u5178\u578b\u7684OBVP\u95ee\u9898\u4e5f\u5c31\u6784\u9020\u597d\u4e86\u3002</p> <p>\u6c42\u89e3\u4e0a\u8ff0OBVP\u95ee\u9898\u9700\u8981\u7528\u5230\u5e9e\u7279\u91cc\u4e9a\u91d1\u6700\u5c0f\u503c\u539f\u7406\uff0c\u8fd9\u91cc\u7684\u6570\u5b66\u63a8\u5bfc\u6bd4\u8f83\u590d\u6742\uff0c\u672c\u7bc7\u6587\u7ae0\u4e5f\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003\u8bba\u6587</p> <p>\u6700\u7ec8\u53ef\u4ee5\u63a8\u5bfc\u51facost function\u53ea\u4e0eT\u6709\u5173\uff0c\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p></p> <p>\u56e0\u6b64\u8981\u4f7f\u5f97cost function J\u6700\u5c0f\uff0c\u53ea\u9700\u8981\u5bf9\u5176\u6c42\u4e00\u9636\u5bfc\u5e76\u4ee4\u5176\u4e3a0\u5373\u53ef(\u591a\u9879\u5f0f\u6c42\u6839)\uff0c\u8fd9\u91cc\u7684\u6c42\u89e3\u65b9\u6cd5\u6709\u591a\u79cd\uff0c\u53ef\u4ee5\u5229\u7528\u4f34\u968f\u77e9\u9635\u6c42\u7279\u5f81\u503c\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528Eigen\u5185\u7f6e\u7684\u591a\u9879\u5f0f\u6c42\u89e3\u5668\u7b49\u7b49\u3002\u6700\u7ec8\u53ef\u4ee5\u6c42\u5f97\u6700\u4f18\u7684\u65f6\u95f4\u6bb5T\uff0c\u4f7f\u5f97\u8fd9\u6761\u8f68\u8ff9\u7684\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\u3002\uff08\\(\\Delta p_x,\\Delta p_y,\\Delta p_z,\\Delta v_x,\\Delta v_y,\\Delta v_z\\) \u53ef\u4ee5\u5e26\u5165\u516c\u5f0f\u6c42\u503c\uff0c\u548c\u8d77\u70b9\u4e0e\u7ec8\u70b9\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u6709\u5173\uff09\u3002\u6700\u7ec8\u53ef\u4ee5\u6c42\u5f97\u534f\u53d8\u91cf\uff0c\u8fdb\u5165\u6c42\u5f97\u72b6\u6001\u548c\u63a7\u5236\u91cf\u968ft\u5f97\u89e3\u6790\u89e3\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u9650\u5236\u4e86\u76ee\u6807\u70b9\u7684v,a\uff0c\u8fd9\u4f7f\u5f97J\u53ea\u4e0e\u65f6\u523bT\u76f8\u5173\u800c\u4e0d\u4e0eT\u65f6\u523b\u7684v\uff0ca\u72b6\u6001\u76f8\u5173\u3002\u5173\u4e8e\u4e0d\u9650\u5236\u76ee\u6807\u70b9v\uff0ca\u7684OBVP\u95ee\u9898\u8bfb\u8005\u611f\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\u3002</p> <ul> <li>\u7528\u5230\u4e94\u6b21\u591a\u9879\u5f0f\u7684\u8bba\u6587minimum snap</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#222","title":"2.2.2 \u8d1d\u585e\u5c14\u66f2\u7ebf","text":"<ul> <li>\u7528\u5230\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u8bba\u6587\uff1aepsilon</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AF%B9%E6%AF%94/#223-b","title":"2.2.3 B\u6837\u6761\u66f2\u7ebf","text":"<ul> <li>\u7528\u5230B\u6837\u6761\u7684\u8bba\u6587\uff1a</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AF%95%E7%94%A8%E5%9C%BA%E6%99%AF%E5%AF%B9%E6%AF%94/","title":"\u5404\u79cd\u63a7\u5236\u7b97\u6cd5\u8bd5\u7528\u573a\u666f\u5bf9\u6bd4","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AF%95%E7%94%A8%E5%9C%BA%E6%99%AF%E5%AF%B9%E6%AF%94/#1lqrlqr","title":"1\uff0cLQR\u548cLQR\uff1a","text":"<p>\u9002\u7528\u573a\u666f\uff1a \u8def\u5f84\u66f2\u7387\u8f83\u5c0f\u5e76\u8fde\u7eed\u4e14\u4e0d\u80fd\u53d8\u5316\u8fc7\u5feb\uff0c\u6545\u975e\u5e38\u9002\u5408\u4e2d\u9ad8\u901f\u7684\u57ce\u5e02\u9a7e\u9a76\u8ddf\u8e2a\u573a\u666f\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AF%95%E7%94%A8%E5%9C%BA%E6%99%AF%E5%AF%B9%E6%AF%94/#2-ppstanlypid","title":"2\uff0c PP\u3001stanly\u3001PID","text":"<p>\u9002\u7528\u573a\u666f\uff1a \u66f2\u7387\u8f83\u5927\uff0c\u4e0d\u8fde\u7eed\uff0c\u4f4e\u901f\u7684\u573a\u666f\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AF%95%E7%94%A8%E5%9C%BA%E6%99%AF%E5%AF%B9%E6%AF%94/#2mpc-vs-lqr-vs-pid","title":"2\uff0cMPC vs LQR vs PID\uff1a","text":"<p>LQR: \uff081\uff09\u8ba1\u7b97\u672a\u6765\u56fa\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u6700\u4f18\uff0c\u53ea\u8ba1\u7b97\u4e00\u6b21\uff0c\u5f97\u5230\u72b6\u6001\u53cd\u9988\u589e\u76ca\uff0c\u5728\u8be5\u65f6\u57df\u5185\uff0c\u6839\u636e\u5b9e\u65f6\u7684\u72b6\u6001\u6c42\u53cd\u9988\u63a7\u5236\u91cf\uff0c\u6ca1\u6709\u8003\u8651\u6267\u884c\u65f6\u4ea7\u751f\u7684\u8bef\u5dee\u4ee5\u53ca\u5e72\u6270\u5bf9\u4e8e\u7cfb\u7edf\u7684\u5f71\u54cd\u3002 \uff082\uff09LQR\u6ca1\u6709\u7ea6\u675f\uff0c\u4e0d\u662f\u8f6c\u5316\u4e3aQP\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\uff0c\u800c\u662f\u901a\u8fc7\u6c42\u89e3Riccati\u9ece\u5361\u63d0\u65b9\u7a0b\uff0c\u6700\u7ec8u = -kx\u8fdb\u884c\u6c42\u89e3 \uff083\uff09LQR\u53ef\u4ee5\u5f53\u4f5cMPC\u4e2d\u7684\u4e00\u6b65\uff0c\u6ca1\u6709\u6eda\u52a8\u7684\u8fc7\u7a0b\u3002</p> <p>\u4f18\u70b9\uff1a\u5148\u76f8\u5bf9\u4e8eMPC\uff0c\u7b97\u529b\u8f83\u5c0f\u3002\u56e0\u4e3a\u6c42\u89e3Riccat\u65b9\u7a0b\u53ef\u4ee5\u79bb\u7ebf\u8fdb\u884c\u3002 \u7f3a\u70b9\uff1a\u6ca1\u6709\u6eda\u52a8\u5bfc\u81f4\u5bf9\u5e72\u6270\u7684\u62b5\u6297\u80fd\u529b\u5f31\uff0c\u6ca1\u6709\u529e\u6cd5\u5904\u7406\u7ea6\u675f\u3002</p> <p>MPC: \uff081\uff09\u8ba1\u7b97\u672a\u6765\u4e00\u5c0f\u6bb5\u65f6\u95f4\u5185\u7684\u6700\u4f18\uff0c\u6eda\u52a8\u8ba1\u7b97\uff0c\u53ea\u6267\u884c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u63a7\u5236\u503c\uff0c\u4e0b\u4e00\u4e2a\u5468\u671f\u7ee7\u7eed\u6eda\u52a8\u8ba1\u7b97\u6700\u4f18\u63a7\u5236\u5e8f\u5217\u3002 \uff082\uff09MPC\u6a21\u578b\u6709\u7ea6\u675f\uff0c\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u7ea6\u675f \uff083\uff09MPC\u6700\u7ec8\u8f6c\u5316\u4e3aQP\u95ee\u9898\uff0c\u8c03\u7528\u5de5\u5177\u6c42\u89e3\u5668\u8fdb\u884c\u6c42\u89e3</p> <p>\u4f18\u70b9\uff1a\u53ef\u4ee5\u5904\u7406\u7ea6\u675f\uff0c\u6eda\u52a8\u66f4\u65b0\u4f7f\u9c81\u68d2\u6027\u6bd4\u8f83\u597d\u3002 \u7f3a\u70b9\uff1a\u7b97\u529b\u8981\u6c42\u8f83\u9ad8\u3002</p> <p>PID: \u53ea\u5173\u6ce8\u5f53\u524d\u65f6\u523b\u7684\u8bef\u5dee\uff0c\u4e0d\u5173\u6ce8\u672a\u6765\u65f6\u95f4\u6bb5\u5185\u7684\u8bef\u5dee\uff0c\u6ca1\u6709\u9884\u89c1\u6027\uff0c\u6613\u9020\u6210\u8d85\u8c03\u548c\u201c\u753b\u9f99\u201d\u73b0\u8c61\u3002</p> <p></p> <p>\u9488\u5bf9\u540c\u4e00\u5de5\u4f5c\u65f6\u57df[ t , t + N] : - LQR\u5728\u8be5\u65f6\u57df\u4e2d\uff0c\u53ea\u8ba1\u7b97\u4e00\u6b21\uff0c\u6709\u552f\u4e00\u6700\u4f18\u63a7\u5236\u89e3\\(u^*(t)\\) ,\u4ed6\u662f\u4e00\u4e2a\u72b6\u6001\u7684\u53cd\u9988\u91cfu=-kx\uff0c\u6839\u636e\u8be5\u65f6\u57df\u5185\u7684\u72b6\u6001\u5b9e\u65f6\u66f4\u65b0\u63a7\u5236\u91cf\u524d\u8f6e\u8f6c\u89d2\u3002 - \u800cMPC\u4ec5\u5728t\u65f6\u523b\u6709\u6700\u4f18\u89e3\\(u^*(t)\\) \u3002\u4f1a\u8ba1\u7b97N\u6b21\uff0c\u5b83\u4f1a\u8ba1\u7b97\u51fa\u4e00\u4e2a\u63a7\u5236\u5e8f\u5217U ( t )\uff0c\u5e76\u4ec5\u5c06\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u503c\\(u^*(t)\\)\u4f5c\u4e3a\u63a7\u5236\u91cf\u8f93\u51fa\u7ed9\u63a7\u5236\u7cfb\u7edf\uff0c\u8be5\u89e3\u76f4\u63a5\u662f\u4e00\u4e2a\u63a7\u5236\u91cf\u800c\u4e0d\u662f\u53cd\u9988\uff08\u53cd\u9988\u9690\u85cf\u5728\u6c42\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff09\uff0c\u7136\u540e\u5728\u4e0b\u4e00\u91c7\u6837\u65f6\u95f4\u7ed3\u5408\u8f66\u8f86\u5f53\u524d\u72b6\u51b5\u6c42\u53d6\u4e0b\u4e00\u4e2a\u6700\u4f18\u63a7\u5236\u89e3\\(u^*(t+1)\\) \u8fd9\u5c31\u662fMPC\u6240\u8c13\u7684\u6eda\u52a8\u4f18\u5316\u3002\u8fd9\u4e48\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u63a7\u5236\u6548\u679c\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u53ef\u671f\uff0c\u5e76\u4e14\u80fd\u6839\u636e\u63a7\u5236\u6548\u679c\u5c3d\u65e9\u8c03\u6574\u63a7\u5236\u53d8\u91cf\uff0c\u4f7f\u5b9e\u9645\u72b6\u6001\u66f4\u5207\u5408\u671f\u671b\u72b6\u6001\u3002 - \u6b64\u5916\uff0cLQR\u7684\u5de5\u4f5c\u65f6\u57df\u53ef\u4ee5\u62d3\u5c55\u5230\u65e0\u9650\u5927\uff0c\u5373\u53ef\u4ee5\u6c42\u53d6\u65e0\u9650\u65f6\u57df\u7684\u6700\u4f18\u63a7\u5236\u89e3\uff0c\u5f53\u7136\uff0c\u4e00\u822c\u5e76\u4e0d\u4f1a\u8fd9\u4e48\u7528\u3002\u800cMPC\u53ea\u9488\u5bf9\u6709\u9650\u65f6\u57df\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%90%84%E7%A7%8D%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AF%95%E7%94%A8%E5%9C%BA%E6%99%AF%E5%AF%B9%E6%AF%94/#3pure-pursuit","title":"3\uff0cPure Pursuit:","text":"<p>\u9002\u7528\u573a\u666f\uff1a \u4f4e\u901f\uff0c\u4f4e\u901f\uff0c\u4f4e\u901f\uff0c\u901f\u5ea6\u8fc7\u9ad8\u6613\u4ea7\u751f\u8f6c\u5f2f\u5185\u5207\u4ee5\u53ca\u8d85\u8c03</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/","title":"\u5728\u7ebf\u5efa\u56fe","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/#1topo","title":"1\u662f\u5426\u9700\u8981topo\u5173\u7cfb","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/#topo","title":"\u663e\u793a\u5efa\u6a21topo\u5173\u7cfb\u7684\u5de5\u4f5c","text":"<p>toponet\uff0c\u4f1a\u628alc\u548c\u4fe1\u53f7\u706f\u7684topo\u5173\u7cfb\u5efa\u6a21\u51fa\u6765\uff0c\u6bd4\u5982\u8f93\u51fa\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\uff0c\u884c\u662flc\u7684\u6570\u91cf\uff0c\u5217\u662f\u4fe1\u53f7\u706f\u7684\u6570\u91cf\uff0c1\u4ee3\u8868\u4ed6\u4eec\u4e4b\u95f4\u6709\u94fe\u63a5\u5173\u7cfb\uff0c0\u4ee3\u8868\u6ca1\u6709\u94fe\u63a5\u5173\u7cfb\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/#topo_1","title":"\u4e0d\u5efa\u6a21topo\u5173\u7cfb","text":"<p>\u73b0\u5728\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u6ca1\u6709\u5efa\u6a21topo\u5173\u7cfb\uff0c\u6bd4\u5982maptr\uff0c\u6211\u53f8\u65b9\u6848\u3002\u81f3\u4e8e\u5728\u8def\u53e3\u9700\u8981\u770b\u54ea\u4e2a\u7ea2\u7eff\u706f\u662f\u901a\u8fc7OBP\u89c4\u5219\u6765\u786e\u5b9a\u7684\uff0cfrom songyi\uff0c\u9996\u5148\u901a\u8fc7\u611f\u77e5\u548csdmap\uff0c\u786e\u5b9a\u81ea\u8f66\u5f53\u524d\u5728\u8def\u53e3\u9700\u8981\u524d\u8fdb\u7684\u65b9\u5411\uff0c\u6bd4\u5982\u76f4\u884c\uff0c\u5de6\u8f6c\uff0c\u53f3\u8f6c\uff0c\u6389\u5934\uff0c\u901a\u8fc7\u8fd9\u4e9b\u884c\u4e3a\u6765\u901a\u8fc7\u89c4\u5219\u7ed1\u5b9a\u5230\u4fe1\u53f7\u706f\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/#2or","title":"2\u5206\u5272or\u77e2\u91cf\u7ed3\u679c","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/#_1","title":"\u5206\u5272+\u540e\u5904\u7406","text":"<p>\u65e9\u4e00\u4e9b\u7684\u65b9\u6848\uff0c\u6bd4\u5982hdmapnet\uff0c\u4f1a\u540c\u65f6\u8bed\u4e49\u5206\u5272\uff0c\u5b9e\u4f8b\u5206\u5272\uff0c\u548c\u6bcf\u4e2a\u50cf\u7d20\u7684\u65b9\u5411\u4fe1\u606f\uff0c\u6700\u540e\u901a\u8fc7\u540e\u5904\u7406\u6765\u6700\u7ec8\u751f\u6210\u5728\u7ebf\u5730\u56fe\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9C%A8%E7%BA%BF%E5%BB%BA%E5%9B%BE/#_2","title":"\u7aef\u5230\u7aef\uff0c\u77e2\u91cf\u5316\u7ed3\u679c","text":"<p>\u76ee\u524d\u5927\u90e8\u5206\u65b9\u6848\uff0c\u6bd4\u5982maptr\u662f\u4e00\u79cd\u7aef\u5230\u7aef\u7684\u65b9\u6848\uff0c\u76f4\u63a5\u8f93\u51fa\u77e2\u91cf\u5316\u7684landmark\u4fe1\u606f\uff0cmaptr\u4e2dlc\uff0clb\uff0crb\uff0c\u4eba\u884c\u9053\u90fd\u752830\u4e2a\u70b9\u6765\u8868\u793a\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9D%90%E6%A0%87%E7%B3%BB%E7%9B%B8%E5%85%B3/","title":"\u5750\u6807\u7cfb\u76f8\u5173","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%9D%90%E6%A0%87%E7%B3%BB%E7%9B%B8%E5%85%B3/#_1","title":"\u76ee\u524d\u5e38\u7528\u5750\u6807\u7cfb\uff1a","text":"<p>\uff081\uff09. LLA\u5750\u6807\u7cfb\uff08\u6216\u8005ECEF\u5750\u6807\u7cfb\uff0c\u4e5f\u79f0WGS84\u5750\u6807\u7cfb\uff09\uff0c\u4ed6\u4eec\u90fd\u662f\u4ee5\u5730\u7403\u4e2d\u5fc3\u4e3a\u539f\u70b9\u7684\u5750\u6807\u7cfb\u3002\u5982\u56fe\u4e2d\u7684\u7eff\u8272\u5750\u6807\u7cfb\u3002\u5168\u5c40\u5750\u6807</p> <p> </p> <p>\uff082\uff09. ENU\u5750\u6807\u7cfb\uff08\u4e0eUTM\u5750\u6807\u7cfb\u914d\u5408\u4f7f\u7528\uff09\uff0c\u662f\u5c40\u90e8\u5750\u6807\u7cfb\uff0c\u901a\u8fc7\u4e0eUTM\u7684\u533a\u53f7\u914d\u5408\uff0c\u53ef\u4ee5\u786e\u5b9a\u5168\u5c40\u5750\u6807\u3002</p> <p></p> <p>\uff083\uff09. UTM\u5750\u6807\u7cfb\uff08\u53ef\u4ee5\u786e\u5b9a\u5168\u5c40\u5750\u6807\u7cfb\uff09 </p> <p>\uff084\uff09. \u8f66\u4f53\u5750\u6807\u7cfb\uff08RFU\uff0c\u6216\u8005FLU\uff09\uff0c\u5c40\u90e8\u5750\u6807</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E5%B7%B4%E7%89%B9%E6%B2%83%E6%96%AF%E4%BD%8E%E9%80%9A%E6%BB%A4%E6%B3%A2%E5%99%A8/","title":"\u5df4\u7279\u6c83\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668","text":"<p>\u5df4\u7279\u6c83\u65af\u6ee4\u6ce2\u5668\u8868\u683c\uff08\u8fde\u7eed\u7cfb\u7edf\uff0c\u6a21\u62df\u6ee4\u6ce2\uff09 \u622a\u6b62\u9891\u7387\uff1a\u6307\u5e45\u9891\u7279\u6027\u4e2d\u5e45\u5ea6\u4e0b\u964d-3dB\uff0c\u65f6\u5bf9\u5e94\u7684\u9891\u7387\u5927\u5c0f\u3002\u5728\u4f4e\u901a\u7387\u6ee4\u6ce2\u4e2d\u4e3a\uff0c\u60f3\u6ee4\u6389\u7684\u9ad8\u9891\u4fe1\u53f7\u7684\u6700\u5c0f\u9891\u7387\u3002\u5728\u9ad8\u901a\u7387\u6ee4\u6ce2\u4e2d\u4e3a\uff0c\u60f3\u6ee4\u6389\u7684\u4f4e\u9891\u4fe1\u53f7\u7684\u6700\u5927\u9891\u7387\u3002</p> <p> </p> <p></p> <p>\u6570\u5b57\u6ee4\u6ce2\uff08\u79bb\u6563\u7cfb\u7edf\uff09 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%89%8B%E5%86%99transformer/","title":"\u624b\u5199transformer","text":"<pre><code>import torch.nn as nn\nimport torch\nimport math\n\nclass PositionalEncoding(nn.Module):\n    def __init__(self, d_model, dropout=0.1, max_len=5000):\n        super(PositionalEncoding, self).__init__()\n        self.dropout = nn.Dropout(p=dropout)\n\n        pe = torch.zeros(max_len, d_model)\n        position = torch.arange(0, max_len).unsqueeze(1)\n        _2i = torch.arange(0, d_model, 2)\n        item = 1 / (10000 ** (_2i / d_model))\n        pe[:, 0::2] = torch.sin(position * item)\n        pe[:, 1::2] = torch.cos(position * item)\n        pe = pe.unsqueeze(0)\n        self.register_buffer('pe', pe)\n\n    def forward(self, x):\n        x = x + self.pe[:, :x.size(1)]\n        return self.dropout(x)\n\nclass MutiHeadSelfAttention(nn.Module):\n    def __init__(self, d_model, n_head, dropout=0.1):\n        super(MutiHeadSelfAttention, self).__init__()\n        assert d_model % n_head == 0\n        self.d_k = d_model // n_head\n        self.n_head = n_head\n        self.w_q = nn.Linear(d_model, d_model)\n        self.w_k = nn.Linear(d_model, d_model)\n        self.w_v = nn.Linear(d_model, d_model)\n        self.w_o = nn.Linear(d_model, d_model)\n        self.dropout = nn.Dropout(p=dropout)\n\n    def forward(self, q, k, v, mask=None):\n        batch_size = q.size(0)\n        q = self.w_q(q).view(batch_size, -1, self.n_head, self.d_k).transpose(1, 2)\n        k = self.w_k(k).view(batch_size, -1, self.n_head, self.d_k).transpose(1, 2)\n        v = self.w_v(v).view(batch_size, -1, self.n_head, self.d_k).transpose(1, 2)\n\n        output, attention = self.attention(q, k, v, mask)\n        output = output.transpose(1, 2).contiguous().view(batch_size, -1, self.n_head * self.d_k)\n        return self.w_o(output)\n\n    def attention(self, q, k, v, mask=None):\n        scores = torch.matmul(q, k.transpose(-2, -1)) / math.sqrt(self.d_k)\n        if mask is not None:\n            scores = scores.masked_fill(mask == 0, -1e9)\n        p_attn = nn.functional.softmax(scores, dim=-1)\n        p_attn = self.dropout(p_attn)\n        return torch.matmul(p_attn, v), p_attn\n\nclass TransformerEncoderLayer(nn.Module):\n    def __init__(self, d_model, n_head, d_ff, dropout=0.1):\n        super(TransformerEncoderLayer, self).__init__()\n        self.self_attn = MutiHeadSelfAttention(d_model, n_head, dropout)\n        self.pe = PositionalEncoding(d_model, dropout)\n        self.ffn = nn.Sequential(\n            nn.Linear(d_model, d_ff),\n            nn.ReLU(),\n            nn.Linear(d_ff, d_model)\n        )\n        self.norm1 = nn.LayerNorm(d_model)\n        self.norm2 = nn.LayerNorm(d_model)\n        self.dropout = nn.Dropout(dropout)\n\n    def forward(self, x, mask=None):\n        x = x + self.pe(x)\n        x = x + self.dropout(self.self_attn(x, x, x, mask))\n        x = self.norm1(x)\n        x = x + self.dropout(self.ffn(x))\n        x = self.norm2(x)\n        return x\n\nclass TransformerEncoder(nn.Module):\n    def __init__(self, n_layer, d_model, n_head, d_ff, dropout=0.1):\n        super(TransformerEncoder, self).__init__()\n        self.layers = nn.ModuleList([TransformerEncoderLayer(d_model, n_head, d_ff, dropout) for _ in range(n_layer)])\n\n    def forward(self, x, mask=None):\n        for layer in self.layers:\n            x = layer(x, mask)\n        return x\n\nclass TransformerDecoderLayer(nn.Module):\n    def __init__(self, d_model, n_head, d_ff, dropout=0.1):\n        super(TransformerDecoderLayer, self).__init__()\n        self.self_attn = MutiHeadSelfAttention(d_model, n_head, dropout)\n        self.src_attn = MutiHeadSelfAttention(d_model, n_head, dropout)\n        self.pe = PositionalEncoding(d_model, dropout)\n        self.ffn = nn.Sequential(\n            nn.Linear(d_model, d_ff),\n            nn.ReLU(),\n            nn.Linear(d_ff, d_model)\n        )\n        self.norm1 = nn.LayerNorm(d_model)\n        self.norm2 = nn.LayerNorm(d_model)\n        self.norm3 = nn.LayerNorm(d_model)\n        self.dropout = nn.Dropout(dropout)\n\n    def forward(self, x, memory, src_mask=None, tgt_mask=None):\n        x = x + self.pe(x)\n        x = x + self.dropout(self.self_attn(x, x, x, tgt_mask))\n        x = self.norm1(x)\n        x = x + self.dropout(self.src_attn(x, memory, memory, src_mask))\n        x = self.norm2(x)\n        x = x + self.dropout(self.ffn(x))\n        x = self.norm3(x)\n        return x\n\nclass TransformerDecoder(nn.Module):\n    def __init__(self, n_layer, d_model, n_head, d_ff, dropout=0.1):\n        super(TransformerDecoder, self).__init__()\n        self.layers = nn.ModuleList([TransformerDecoderLayer(d_model, n_head, d_ff, dropout) for _ in range(n_layer)])\n\n    def forward(self, x, memory, src_mask=None, tgt_mask=None):\n        for layer in self.layers:\n            x = layer(x, memory, src_mask, tgt_mask)\n        return x\n\nclass Transformer(nn.Module):\n    def __init__(self, n_layer, d_model, n_head, d_ff, dropout=0.1):\n        super(Transformer, self).__init__()\n        self.encoder = TransformerEncoder(n_layer, d_model, n_head, d_ff, dropout)\n        self.decoder = TransformerDecoder(n_layer, d_model, n_head, d_ff, dropout)\n\n    def forward(self, src, tgt, src_mask=None, tgt_mask=None):\n        memory = self.encoder(src, src_mask)\n        return self.decoder(tgt, memory, src_mask, tgt_mask)\n\nif __name__ == '__main__':\n    # \u53c2\u6570\u8bbe\u7f6e\n    n_layer = 6\n    d_model = 256\n    n_head = 8\n    d_ff = 2048\n    dropout = 0.1\n    src_len = 10\n    tgt_len = 20\n    batch_size = 32\n\n    # \u521b\u5efa Transformer \u5b9e\u4f8b\n    model = Transformer(n_layer, d_model, n_head, d_ff, dropout)\n\n    # \u751f\u6210\u968f\u673a\u8f93\u5165\u6570\u636e\n    #   \u793a\u4f8b\u8f93\u5165\u6570\u636e\n    # src = torch.tensor([\n    #     [[1, 2, 3], [4, 5, 6], [0, 0, 0], [7, 8, 9]],\n    #     [[0, 0, 0], [1, 1, 1], [2, 2, 2], [0, 0, 0]],\n    #     [[1, 2, 3], [4, 5, 6], [0, 0, 0], [7, 8, 9]],\n    #     [[0, 0, 0], [1, 1, 1], [2, 2, 2], [0, 0, 0]],\n    # ])\n\n    src = torch.randn(batch_size, src_len, d_model)\n    tgt = torch.randn(batch_size, tgt_len, d_model)\n\n    # \u751f\u6210\u586b\u5145\u63a9\u7801\n    src_pad_mask = (src != 0).all(dim=-1).unsqueeze(1).unsqueeze(2)  # (batch_size, 1, 1, src_len)\n    # tensor([[[[ True,  True, False,  True]]],\n    #     [[[False,  True,  True, False]]],\n    #     [[[ True,  True, False,  True]]],\n    #     [[[False,  True,  True, False]]]])\n\n    tgt_pad_mask = (tgt != 0).all(dim=-1).unsqueeze(1).unsqueeze(2)  # (batch_size, 1, 1, tgt_len)\n\n    # \u751f\u6210\u672a\u6765\u63a9\u7801\n    future_mask = torch.tril(torch.ones((tgt_len, tgt_len)), diagonal=0).bool()\n    # tensor([[ True, False, False, False, False],\n    #     [ True,  True, False, False, False],\n    #     [ True,  True,  True, False, False],\n    #     [ True,  True,  True,  True, False],\n    #     [ True,  True,  True,  True,  True]])\n\n    # \u5408\u5e76\u63a9\u7801\n    future_mask = future_mask.unsqueeze(0).unsqueeze(1)  # (1, 1, tgt_len, tgt_len)\n    tgt_mask = tgt_pad_mask &amp; future_mask  # (batch_size, 1, tgt_len, tgt_len)\n\n    # \u524d\u5411\u4f20\u64ad\n    output = model(src, tgt, src_pad_mask, tgt_mask)\n\n    print(output.size())\n\n    # \u68c0\u67e5\u8f93\u51fa\u5f62\u72b6\n    assert output.shape == (batch_size, tgt_len, d_model), f\"Expected output shape {(batch_size, tgt_len, d_model)}, but got {output.shape}\"\n\n    print(\"Test passed!\")\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/","title":"\u6570\u636e\u6316\u6398\u7ecf\u9a8c","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_1","title":"\u4e3a\u4ec0\u4e48\u8981\u6570\u636e\u6316\u6398\uff1f","text":"<ul> <li> <p>\u4eba\u7c7b\u5728\u67d0\u79cd\u573a\u666f\u4e0b\u6709\u4e2a\u9a7e\u9a76\u6570\u636e\u7684\u5206\u5e03\uff0c\u667a\u9a7e\u4ea7\u54c1\u671f\u671b\u6709\u4e2a\u4e0d\u540c\u5206\u5e03\uff0c\u6211\u4eec\u671f\u671b\u6316\u6398\u7684\u6570\u636e\u80fd\u591f\u5c3d\u53ef\u80fd\u4ece\u4eba\u7c7b\u6570\u636e\u5206\u5e03\u4e2d\u91c7\u6837\u51fa\u6ee1\u8db3\u667a\u9a7e\u4ea7\u54c1\u671f\u671b\u7684\u5206\u5e03</p> </li> <li> <p>\u5982\u679c\u4eba\u9a7e\u6570\u636e\u7684refpath\u8d28\u91cf\u8f83\u4f4e\uff0c\u9700\u8981\u5bf9refpath\u8fdb\u884c\u8fdb\u4e00\u6b65\u7b5b\u9009\uff08\u5982\u538b\u5b9e\u7ebf\u3001\u53d8\u9053\u8fc7\u7f13\u7b49\uff09</p> </li> <li> <p>\u6570\u5b66\u8868\u793a</p> </li> </ul> \\[P\\left(\u4eba\u9a7e\\right)=\\Sigma P\\left(\\text{FST}\\right) \\pi\\left(\u4eba\u9a7e \\mid \\text{FST}\\right)\\] <pre><code>                                \u6316\u6398\u2193\n</code></pre> \\[P\\left(\u8bad\u7ec3\\right)=\\Sigma Q_{\\phi}\\left(\\text{FST}\\right) \\pi^\\star\\left(\u4eba\u9a7e \\mid \\text{FST}\\right)\\] <pre><code>                                \u8bad\u7ec3\u2193\n</code></pre> \\[\\min_{\\theta}\\Sigma_{\\text{FST}} Q_{\\phi}\\left(\\text{FST}\\right)\\mathcal{L}_2\\left[\\pi_{\\theta}\\left(\u4ea7\u54c1 \\mid \\text{FST}\\right) \\Vert \\pi^\\star\\left(\u4eba\u9a7e \\mid \\text{FST}\\right)\\right]\\] <ul> <li>\\(P\\left(\\text{FST}\\right)\\)\uff1a\u771f\u5b9e\u4e16\u754c\u7684FST\u5206\u5e03</li> <li>\\(P\\left(\u4eba\u9a7e\\right)\\)\u3001\\(P\\left(\u8bad\u7ec3\\right)\\)\u4eba\u9a7e\u6570\u636e\u5206\u5e03\u548c\u8bad\u7ec3\u6570\u636e\u5206\u5e03</li> <li>\\(\\pi\\left(\u4eba\u9a7e \\mid \\text{FST}\\right)\\)\uff1aFST\u6761\u4ef6\u4e0b\u7684\u4eba\u7c7b\u9a7e\u9a76\u7b56\u7565\u91c7\u6837\uff0c\u540e\u7eed\u7701\u7565\u201cFST\u6761\u4ef6\u4e0b\u7684\u201d</li> <li>\\(\\pi^\\star\\left(\u4eba\u9a7e \\mid \\text{FST}\\right)\\)\uff1a\u6700\u4f18\u4eba\u7c7b\u9a7e\u9a76\u7b56\u7565\u91c7\u6837</li> <li>\\(\\pi_{\\theta}\\left(\u4ea7\u54c1 \\mid \\text{FST}\\right)\\)\uff1a\u8bad\u7ec3\u5f97\u5230\u7684\u4ea7\u54c1\u5b9a\u4e49\u7684\u9a7e\u9a76\u7b56\u7565\uff0c\u53c2\u6570\u4e3a\\(\\theta\\)</li> <li>\\(Q_{\\phi}\\left(\\text{FST}\\right)\\)\uff1a\u6570\u636e\u914d\u6bd4\u5206\u5e03\uff0c\u8d85\u53c2\\(\\phi\\)\u53ef\u4ee5\u6839\u636eFST\u91cd\u8981\u7a0b\u5ea6\u548cFST\u96be\u6613\u7a0b\u5ea6\u6765\u8c03\u6574</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_2","title":"\u7279\u5f81\u89d2\u5ea6","text":"<p>\u6316\u6398\u811a\u672c\u4e2d\u672c\u8eab\u81ea\u5e26\u7279\u5f81</p> <ul> <li>\u6a21\u578b\u7684\u5b66\u4e60\u95ee\u9898\u53ef\u4ee5\u770b\u6210\uff1aN\u79cd\u7a00\u758f\u7279\u5f81\u5728\u67d0\u4e9b\u9608\u503c\u8303\u56f4\u5185-&gt;\u67d0\u4e00\u7c7b\u522b\u7684refpath/\u8f68\u8ff9<ul> <li>\u6027\u80fd\u8868\u73b0\u8f83\u5dee\u7684\u573a\u666f\u9700\u8981\u4ece\u63d0\u6d4b\u3001\u81ea\u95ed\u73af\u4e2d\u53bb\u7edf\u8ba1\u548c\u603b\u7ed3\uff0c\u627e\u5230\u8fd9\u4e9b\u573a\u666f\u7684\u5171\u6027\uff0c\u624d\u80fd\u53d1\u73b0\u6a21\u578b\u6ca1\u5b66\u597d\u7684\u7279\u5f81\u662f\u4ec0\u4e48</li> <li>\u7279\u5f81\u9700\u8981\u81ea\u5df1\u5728PDV\u4e2d\u53bb\u8bc4\u4ef7meta\u51c6\u786e\u6027\uff0c\u5982\u679c\u4e0d\u591f\u597d\u6216\u8005\u7f3a\u5931\uff0c\u5219\u9700\u8981\u81ea\u5df1\u5f00\u53d1\u65b0meta</li> </ul> </li> <li>\u53ef\u4ee5\u6839\u636e\u7279\u5f81\u53bb\u5bf9\u7ec6\u5206FST\u62c6\u89e3\uff0c\u65b9\u4fbf\u8c03\u914d\u6bd4</li> <li>\u4e3e\u4f8b\uff1a\u8def\u53e3\u524dxx\u7c73\uff0c\u6709xxx\u5bfc\u822a\u4fe1\u606f\uff0c\u6709\u865a\u7ebf\uff0c\u6709/\u65e0\u5730\u9762\u8def\u6807-&gt;\u4e00\u7c7b\u5de6\u53d8\u9053\u7684refpath/\u8f68\u8ff9</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_3","title":"\u5173\u8054\u6027\u89d2\u5ea6","text":"<ul> <li>\u771f\u5b9e\u5173\u8054\u6027\u7279\u5f81</li> <li>\u865a\u5047\u5173\u8054\u6027\u7279\u5f81<ul> <li>\u975e\u5e38\u5bb9\u6613\u5b66\u5230\uff0c\u5728\u4e0d\u540c\u6570\u636e\u4e4b\u95f4\u662f\u4e0d\u7a33\u5b9a\u7684\uff08\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u7279\u6027\u964d\u4f4e\u751a\u81f3\u6d88\u9664\u5f71\u54cd\uff09</li> </ul> </li> <li>\u9700\u8981\u52a0\u6570\u636e\u5bf9\u51b2\uff0c\u8ba9\u6a21\u578b\u533a\u5206\u54ea\u4e9b\u7279\u5f81\u662f\u771f\u503c/\u865a\u5047\u7684</li> </ul> <p>\u6682\u65f6\u65e0\u6cd5\u5728\u98de\u4e66\u6587\u6863\u5916\u5c55\u793a\u6b64\u5185\u5bb9 - \u4e3e\u4f8b1\uff1a     - A\u548c\u51b3\u7b56\u5f3a\u5173\u8054\uff0cB\u5076\u5c14\u548cA\u4e00\u8d77\u51fa\u73b0\uff0cB\u548c\u51b3\u7b56\u5173\u8054\u6027\u4e5f\u8f83\u5f31\uff0c\u8bad\u7ec3\u4e2d\u5bb9\u6613\u5ffd\u7565B\uff0c\u4f7f\u5f97\u5355\u72ec\u51fa\u73b0B\u65f6\u5bb9\u6613\u51fa\u9519     - C\u867d\u7136\u662f\u4e00\u822c\u5173\u8054\uff0c\u4f46\u662f\u6ca1\u6709\u5173\u8054\u5176\u4ed6\u7279\u5f81\uff0c\u6bd4\u8f83\u7eaf\u7cb9\uff0c\u6a21\u578b\u5bb9\u6613\u5b66\u5230     - D\u548cA\u5f3a\u5173\u8054\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5bb9\u6613\u5b66\u5230D\u548c\u51b3\u7b56\u7684\u865a\u5047\u5173\u8054\u6027\uff0c\u9700\u8981\u52a0\u6570\u636e\u5bf9\u51b2\uff0c\u4f8b\u5982\u52a0\u53ea\u6709A\u6ca1\u6709D\u3001\u53ea\u6709D\u6ca1\u6709A\u7684\u6b63\u5411\u548c\u53cd\u5411\u597d\u6570\u636e\uff0c\u751a\u81f3\u53ef\u4ee5\u53ea\u5b66\u6709A\u6ca1\u6709D\u7684\u6570\u636e\u9632\u6b62\u5b66\u5230D\u7684\u865a\u5047\u5173\u8054\u6027 - \u4e3e\u4f8b2\uff1a     \u00a0\u00a0\u5927\u66f2\u7387\u5f2f\u9053+\u524d\u8f66+\u5730\u6807-&gt;\u53d8\u9053\u7684\u573a\u666f\uff0c\u9700\u8981\u52a0\uff1a     - \u5927\u66f2\u7387\u5f2f\u9053+\u6709\u524d\u8f66+\u65e0\u5730\u6807-&gt;\u4e0d\u53d8\u9053\uff0c\u5927\u66f2\u7387\u5f2f\u9053+\u65e0\u524d\u8f66+\u5730\u6807-&gt;\u53d8\u9053\uff0c\u8ba9\u6a21\u578b\u77e5\u9053\u524d\u8f66\u4e0d\u662f\u53d8\u9053\u7684\u771f\u5b9e\u5173\u8054\u7279\u5f81     - \u53ef\u80fd\u4ea7\u751f\u95ee\u9898\uff1a\u5927\u66f2\u7387\u5f2f\u9053\u4e0b\u4e0d\u5408\u7406\u53d8\u9053\uff08\u5b9e\u9645\u8868\u73b0\uff1a\u89e6\u53d1\u597d\uff0c\u6291\u5236\u5dee\uff1b\u89e6\u53d1\u5dee\uff0c\u6291\u5236\u597d\uff09\uff0c\u9700\u8981\u52a0\u6291\u5236\u6570\u636e\uff1a\u5927\u66f2\u7387\u5f2f\u9053+\u65e0\u524d\u8f66+\u65e0\u5730\u6807-&gt;\u4e0d\u53d8\u9053\uff0c\u544a\u8bc9\u6a21\u578b\u53d8\u9053\u662f\u56e0\u4e3a\u5730\u6807\u800c\u4e0d\u662f\u5927\u66f2\u7387\u5f2f\u9053     - \u65b0\u7684\u95ee\u9898\uff1a\u524d\u8f66\u957f\u65f6\u95f4\uff08\u8d85\u8fc7\u6a21\u578b\u8f93\u5165\u65f6\u95f4\uff09\u906e\u6321\u5730\u6807\u60c5\u51b5\u4e0b\u7684gt\u53d8\u9053\u6570\u636e\u8981\u5b66\u5417\uff1f\u731c\u6d4b\uff1a\u5b66\u4e86\u8fd9\u7c7b\u6570\u636e\u66f4\u5bb9\u6613\u5b66\u5230\uff1a\u5927\u66f2\u7387\u5f2f\u9053+\u6709\u524d\u8f66-&gt;\u4e0d\u5408\u7406\u8d85\u8f66\u53d8\u9053\u8fd9\u79cd\u865a\u5047\u5173\u8054\u6027\uff0c\u5bb9\u6613\u8ba9\u6a21\u578b\u6df7\u6dc6\uff0c\u5efa\u8bae\u4e0d\u5b66</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_4","title":"\u6837\u672c\u96be\u6613\u89d2\u5ea6","text":"<p>\u6570\u636e\u8d8a\u591a\u8d8a\u597d\u5417\uff1f - \u5927\u90e8\u5206\u8bad\u7ec3\u6570\u636e\uff0c\u5305\u62ec\u5927\u591a\u6570clip\u548cclip\u4e2d\u7684\u5927\u591a\u6570\u5e27\uff0c\u90fd\u662f\u5bf9\u8bad\u7ec3\u5e2e\u52a9\u4e0d\u5927\u7684\u6570\u636e - \u5c11\u91cf\u5173\u952e\u7684\u8bad\u7ec3\u6570\u636e\u5c31\u80fd\u8ba9\u6a21\u578b\u5b66\u5230\u597d\u7684\u7279\u5f81\u5173\u8054\u6027 - \u4ece\u5408\u8bad\u7684\u89d2\u5ea6\uff0c\u56fa\u5b9a\u8bad\u7ec3\u8f6e\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6548\u6570\u636e\u8d8a\u591a\u6bd4\u4f8b\uff0c\u6709\u6548\u6570\u636e\u88ab\u8bad\u7ec3\u5230\u7684\u6b21\u6570/\u6982\u7387\u5c31\u66f4\u4f4e - \u5982\u4f55\u9a8c\u8bc1\u6570\u636e\u662f\u5426\u6709\u6548\uff1a     - \u505a\u8fc7\u62df\u5408\u5b9e\u9a8c\uff0c\u5982\u6570\u636e\u914d\u6bd4\u63d0\u9ad810-20\u500d\uff0c\u89c2\u5bdf\u8bc4\u6d4b\u95ee\u9898\u662f\u5426\u5168\u89e3         - \u6ca1\u6709\u5168\u89e3\uff1a\u770b\u5230\u5e95\u54ea\u4e9b\u573a\u666f\u6548\u679c\u5dee\uff0c\u9700\u8981\u63d0\u5347\u6570\u636erecall\uff0c\u6216\u8005\u88ab\u5176\u4ed6\u6570\u636e\uff08\u4f8b\u5982\u81ea\u5df1\u7684\u810f\u6570\u636e\u6216\u8005\u522b\u7684FST\u810f\u6570\u636e\uff09\u6291\u5236\uff0c\u6216\u8005\u5b66\u5230\u4e86\u865a\u5047\u5173\u8054\u6027\u7279\u5f81         - \u51e0\u4e4e\u5168\u89e3\uff1a\u8c03\u6210\u6b63\u5e38\u914d\u6bd4\uff0c\u5982\u679c\u6307\u6807\u4e0b\u964d\u5f88\u660e\u663e\uff0c\u8bf4\u660e\u4e0d\u9700\u8981\u592a\u5173\u6ce8\u6570\u636erecall\u63d0\u5347\uff0c\u800c\u662f\u56e0\u4e3a\u65e0\u6548\u6570\u636e\u591a\uff0c\u9700\u8981\u53bb\u9664\u7b80\u5355\u573a\u666f\u7684\u65e0\u6548\u6570\u636e\uff0c\u6216\u8005\u7f29\u5c0f\u6bcf\u4e2aclip\u7684ROI\u8303\u56f4\u5230\u5173\u952e\u7247\u6bb5</p> <ul> <li>Model Mining/\u4e91\u7aef\u5f71\u5b50\u6a21\u5f0f\u6316\u6398\uff1a<ul> <li>\u5bf9\u6bd4\u8f83\u96be\u6316\u6398\u4e14\u6570\u636e\u91cf\u975e\u5e38\u5927\u7684FST\uff0c\u53ef\u4ee5\u627e\u5230Hard Good\u6570\u636e\u548c\u810f\u6570\u636e\uff0c\u4f8b\u5982\u6291\u5236\u53d8\u9053\u7c7bFST</li> <li>\u627e\u51fa\u5bf9\u68af\u5ea6\u8d21\u732e\u5927\u7684\u597d\u6570\u636e\uff0c\u4f7f\u5f97\u5728\u6709\u9650\u8bad\u7ec3\u6b21\u6570\u7684\u5408\u8bad\u4e2d\uff0c\u8be5FST\u5145\u5206\u3001\u6709\u6548\u5f97\u5230\u8bad\u7ec3</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_5","title":"\u6570\u636e\u8bef\u5dee\u4f30\u8ba1","text":"<ul> <li>\u6570\u636e\u6536\u96c6\u9636\u6bb5\uff0c\u91c7\u6837\u5206\u5e03\u7684\u8bef\u5dee\uff08\u5f00\u8f66\u4e60\u60ef\u3001\u4eba\u8111\u5730\u56fe\u5148\u9a8c\u7b49\uff09</li> <li>\u6570\u636e\u6316\u6398\u7684\u5206\u5e03\u8bef\u5dee\uff08\u53ef\u80fd\u6316\u5230\u810f\u6570\u636e\uff0c\u6316\u6398\u7684\u53ec\u56de\u7387\u4f4e\u4f7f\u5f97\u6570\u636e\u5206\u5e03\u6539\u53d8\uff09</li> <li>\u6a21\u578b\u5efa\u6a21\u8bef\u5dee\uff08\u5bf9\u8f68\u8ff9\u7684\u4e00\u4e9b\u5047\u8bbe\u7b80\u5355\uff0c\u6a21\u6001\u6570\u91cf\u6709\u9650\uff0cBEV\u7279\u5f81\u7684\u5b9e\u9645\u8303\u56f4\u6709\u9650\uff0cfixed BEV\u7279\u5f81\u7684pre-trained\u6a21\u578b\u6027\u80fd\u6709\u9650\uff09</li> <li>\u6a21\u578b\u62df\u5408\u8bef\u5dee\uff08\u6b20\u62df\u5408/\u8fc7\u62df\u5408\uff09</li> <li>\u515c\u5e95\u7b56\u7565\u8bef\u5dee\uff08\u515c\u5e95\u65b9\u6848\u4f7f\u5f97\u67d0\u4e9b\u8f68\u8ff9\u4f1a\u88ab\u4fee\u6539\u3001\u6291\u5236\uff09</li> <li>\u6267\u884c\u8bef\u5dee\uff08\u8f68\u8ff9\u8ddf\u8e2a\u8bef\u5dee\uff09</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#badevents","title":"BadEvents\u5b66\u4e60","text":"<p>Motivation\uff1a\u6709\u7684\u573a\u666f\u6b63\u5411\u6570\u636e\u4e0d\u597d\u4e13\u9879\u6316\u6398\uff0c\u53cd\u5411\u6570\u636e\u53cd\u800c\u66f4\u597d\u6316\u6398/\u66f4\u6709\u8bad\u7ec3\u4ef7\u503c\uff0c\u4e14\u8def\u6d4b\u6709\u5927\u91cf\u53cd\u5411\u7684\u8d1f\u4f8b\u6570\u636e\uff0c\u53ef\u4ee5\u5b9e\u73b0\u771f\u6b63\u7684\u6570\u636e\u95ed\u73af\u3002\u8ba4\u4e3aBadEvents\u6570\u636e\u53ef\u80fd\u80fd\u6bd4GoodEvents\u4ea7\u751f\u66f4\u5927\u68af\u5ea6\uff0c\u63d0\u9ad8\u6570\u636e\u5b66\u4e60\u6548\u7387 - \u6a21\u578b\u4e2ddecision\u7684\u610f\u4e49\u662f\u6240\u6709\u6570\u636e\u91cc\u6700\u50cf\u4eba\u7684\u624d\u662f1\uff0c\u800c\u4e0d\u662f\u884c\u4e3a\u6b63\u786e\u7684\u662f1 - BadEvents\u53ea\u80fd\u6291\u5236 TODO\uff1a - BadEvents\u6291\u5236\u8c01\uff1f\u6700\u50cfgt\u7684\uff1f</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#model-loss","title":"Model Loss","text":"<p>TODO</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_6","title":"\u6570\u636e\u8bad\u7ec3\u91c7\u6837\u6bd4\u4f8b","text":"<p>\u5047\u8bbe\u6a21\u578b\u8bad\u7ec320K \u8bad\u7ec3Frames\u603b\u6570\u91cf\uff1a888201000=1024w DLP\u6570\u636e\u914d\u6bd4\uff1a100,1200,400,400,300\uff0c\u5916\u90e8\u6bd4\u4f8b\u2153 \u5185\u90e8\u6bd4\u4f8b\uff1ax/(160+x)\uff0cx\u4e3a\u65b0\u589e\uff0c160\u4e3a0930Base\u7edf\u8ba1\u7ed3\u679c \u5185\u90e8\u914d\u6bd4\u4e3a1\u7684\u6570\u636e\uff0c\u6bcf20K\u4f1a\u88ab\u8bad\u7ec3\u5230\uff1a1024/3/160=2.13w \u4ee5train_dlp_lane_change_clip_data\u4e3a\u4f8b\uff0c\u5185\u90e8\u914d\u6bd420\uff0c600w\u5e27 \u8bad\u7ec3\u5230\u7684\u6bd4\u4f8b\uff1a2.13*20/600 = 7.1%</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_7","title":"\u597d\u6570\u636e\u7684\u5b9a\u4e49","text":"<ul> <li>Model Loss&amp;\u91c7\u6837\u7406\u8bba\uff1a\u80fd\u5bf9\u6a21\u578b\u4ea7\u751f\u8f83\u5927\u68af\u5ea6\u7684\u5173\u952e\u573a\u666f\uff08\u7ecf\u5e38\u51fa\u9519\u7684\u573a\u666f\uff09\uff0cROI\u8fd8\u8981\u9650\u5236\u975e\u5e38\u4e25\uff0c\u4e0d\u592a\u80fd\u4ea7\u751f\u68af\u5ea6\u7684\u65e0\u6548\u597d\u6570\u636e/\u975e\u5173\u952e\u5e27\u52a0\u5165\uff0c\u53cd\u800c\u4f1a\u964d\u4f4e\u5173\u952e\u6570\u636e\u88ab\u91c7\u6837\u7684\u6982\u7387\uff0c\u771f\u6b63\u503c\u5f97\u8bad\u7ec3\u7684\u597d\u6570\u636e\u53ef\u80fd\u53ea\u67095%<ul> <li>\u53d8\u9053\u573a\u666fROI Start \uff1a\u6709\u53d8\u9053\u610f\u56fe\uff08\u4f8b\u5982\u65b9\u5411\u76d8\u5f00\u59cb\u8f6c\u52a8\uff09\u6216\u8005\u6709\u4e0e\u53d8\u9053\u76f8\u5173\u7684\u7279\u5f81\u51fa\u73b0\uff08\u4f8b\u5982\u5730\u9762\u51fa\u73b0\u6c47\u6d41\u5730\u6807\uff09\u5f00\u59cb\u3002\u5982\u679croi_start\u8fc7\u4e8e\u63d0\u524d\uff0c\u4f1a\u5b66\u5230\u4e00\u4e9b\u6ca1\u6709\u56e0\u679c\u6027\u7684\u6570\u636e\uff08\u6ca1\u89c2\u5bdf\u5230\u7279\u5f81\uff0c\u76d1\u7763\u6570\u636e\u5374\u8981\u53d8\u9053\uff09\uff0c\u5982\u679croi_start\u8fc7\u665a\uff0c\u53ef\u80fd\u51b3\u7b56\u65f6\u95f4\u504f\u665a</li> <li>\u53d8\u9053\u573a\u666fROI End\uff1a\u5230\u8de8\u7ebf\u70b9\u3002\u8fc7\u957f\u4f1a\u6709\u592a\u591a\u8de8\u7ebf\u540e\u7684\u65e0\u6548\u6570\u636e\u3002\u8fc7\u77ed\u53ef\u80fd\u5728\u8de8\u7ebf\u70b9\u6765\u56de\u53d8\u9053\uff1f</li> <li>\u8bad\u7ec3\u6570\u636e\u662f\u4e00\u6279\u89e6\u53d1\u51b3\u7b56\u7684\u5173\u952e\u5e27\uff0c\u65f6\u957f\u53ef\u80fd\u53ea\u67090.5-2\u79d2</li> </ul> </li> <li>\u6570\u636e\u7a7a\u6d1e\u7406\u8bba\uff1a\u7279\u5b9a\u573a\u666f\u672a\u52a0\u8bad\u7ec3\u6570\u636e\uff0c\u53ef\u80fd\u51fa\u73b0\u4e0d\u5408\u7406\u884c\u4e3a</li> <li>\u810f\u6570\u636e\u7406\u8bba\uff1a\u810f\u6570\u636e\u4f1a\u5bf9\u6a21\u578b\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\uff0c\u4e14\u4e00\u4e2a\u7ec4\u7684\u597d\u6570\u636e\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u7ec4\u7684\u810f\u6570\u636e\uff1b\u4eba\u9a7e\u6570\u636e\u4e2d\u5b58\u5728\u8bb8\u591a\u810f\u6570\u636e</li> <li>\u573a\u666f\u7ec6\u5206\u7406\u8bba\uff1a\u4e3a\u4e86\u627e\u5230\u597d\u6570\u636e\uff0c\u5e94\u8be5\u5bf9\u573a\u666f\u7ec6\u5206\uff0c\u4f8b\u5982\u7ec6\u5206\u62101000\u4e2a\u573a\u666f\uff0c\u5206\u522b\u52a0\u9ad8\u8d28\u91cf\u6570\u636e\u8bad\u7ec3</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_8","title":"\u597d\u6a21\u578b\u7684\u5b9a\u4e49","text":"<ul> <li>\u8f68\u8ff9/\u8def\u5f84\u7684\u5b8c\u5907\u6027\uff0c\u5de6\u4e2d\u53f3\u90fd\u6709</li> <li>\u80fd\u591f\u5efa\u6a21\u591a\u6a21\u6001\u7684\u3001\u590d\u6742\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u8d85\u8f66\u3001\u7ed5\u969c</li> <li>\u5f71\u54cd\u6a21\u578b\u51b3\u7b56\u7684\u7269\u4f53/\u4e8b\u4ef6\uff0c\u5728\u6a21\u578b\u7279\u5f81\u4e2d\u90fd\u80fd\u5f88\u597d\u7684\u5b66\u5230\uff0c\u4f8b\u5982\u81ea\u8f66\u901f\u5ea6\u3001\u524d\u8f66\u662f\u4e2a\u6162\u8f66\u3001\u8def\u4e0a\u5730\u6807</li> <li>\u2026\u2026</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#rl","title":"RL","text":"<ul> <li>\u6570\u636e\u6765\u6e90\uff1a\u4eba\u9a7e\u6a21\u5f0f+\u7b5b\u9009\u5668</li> <li>\u6570\u636e\u7ed3\u6784\uff1a\u72b6\u6001\u3001\u52a8\u4f5c\u3001\u4ef7\u503c\u5bf9 \uff08S\uff0cA\uff0cR\uff09</li> <li>reward\u6765\u6e90\uff1a\u6570\u636e\u8fd4\u56de\u540e\u4ee3\u7801\u89e3\u6790\u8ba1\u7b97\uff0c\u6839\u636e\u975e\u5e38\u7b80\u5355\u7684\u4e00\u4e9b\u903b\u8f91\uff08\u7a00\u758f\u6216\u8005\u7a20\u5bc6\u5956\u52b1\uff09</li> <li>\u52a8\u4f5cSampling\u6765\u6e90\uff1a\u540c\u4e00\u4e2a\u76f8\u4f3c\u573a\u666f\uff0c\u4e0d\u540c\u4eba\u9a7e\u7684\u52a8\u4f5c\u4f5c\u4e3a\u52a8\u4f5c\u591a\u6837\u6027\u6765\u6e90</li> <li>Imitation Learning\u7684pre-trained\u6a21\u578b\u4f5c\u4e3a\u70ed\u542f\u52a8</li> <li>\u8f68\u8ff9\u5efa\u6a21\uff1a\u81ea\u56de\u5f52\u6a21\u578b\uff08\u53ef\u4ee5\u8003\u8651\u79bb\u6563\u5316\u8f93\u51fa\uff09</li> <li>Policy\u7f51\u7edc\uff1a\u539f\u6765Imitation Learning\u51fa\u8f68\u8ff9\u7684\u7f51\u7edc</li> <li>Value\u7f51\u7edc\uff1a\u989d\u5916\u589e\u52a0</li> <li>Model-based\uff1f\uff1aTODO</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%BB%8F%E9%AA%8C/#_9","title":"\u6570\u636e\u6765\u6e90","text":"<ul> <li>\u7eaf\u4eba\u9a7e\u6570\u636e\uff08\u5f71\u5b50\u6a21\u5f0f/\u7b5b\u9009\u5668\uff09\uff1aoff-policy\uff0c\u9ad8\u65b9\u5dee</li> <li>\u7eaf\u667a\u9a7e\u6570\u636e\uff1aon-policy\uff0c\u542b\u6709\u5931\u8d25\u6570\u636e<ul> <li>\u667a\u9a7e\u63a5\u7ba1\u6570\u636e\uff1aon-policy\uff0c\u6709\u4eba\u5de5\u6807\u6ce8\u7684\u8d1f\u4f8b\uff08\u63a5\u7ba1\u524d\uff09\u548c\u77eb\u6b63\u6b63\u4f8b\uff08\u63a5\u7ba1\u540e\uff09</li> <li>\u667a\u9a7eissue\u6570\u636e\uff08\u975e\u63a5\u7ba1\u7ea7\u522b\u6570\u636e\uff09\uff1aon-policy\uff0c\u975e\u63a5\u7ba1\u7ea7\u522b\u53ea\u6709\u4eba\u5de5\u6807\u6ce8\u7684\u8d1f\u4f8b</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%96%B0%E7%9F%B3%E5%99%A8%E7%9B%AE%E5%89%8D%E7%9A%84path-planning%E7%9A%84%E5%8A%A8%E9%9D%99%E6%80%81%E9%9A%9C%E7%A2%8D%E7%89%A9%E7%9A%84%E8%80%83%E8%99%91%E6%83%85%E5%86%B5/","title":"\u65b0\u77f3\u5668\u76ee\u524d\u7684path planning\u7684\u52a8\u9759\u6001\u969c\u788d\u7269\u7684\u8003\u8651\u60c5\u51b5","text":"<ol> <li> <p>\u5728path planning\u65f6\u662f\u5426\u8003\u8651\u52a8\u6001\u969c\u788d\u7269\uff1f \u7b54\uff1a\u5176\u5b9e\u662f\u8003\u8651\u4e86\u52a8\u6001\u969c\u788d\u7269\uff0c\u76ee\u524d\u65b0\u77f3\u5668\u7684\u65b9\u6848\u5728\u6c42\u89e3\u540e\u7aef\u4f18\u5316\u7684\u65f6\u5019\uff0c\u9700\u8981\u7ed9\u4e00\u4e2a\u7c97\u89e3\uff08\u671f\u671b\uff09\uff0c\u8fd9\u4e2a\u671f\u671b\u662f\u8003\u8651\u4e86\u52a8\u6001\u969c\u788d\u7269\u7684\u3002 \u5728\u786e\u5b9aboundary\u7684\u65f6\u5019\u4e0d\u8003\u8651\u52a8\u6001\u969c\u788d\u7269\uff0c\u53ea\u8003\u8651\u9759\u6001\u969c\u788d\u7269\uff08\u5c0f\u4e8e1m/s\uff09\u3002</p> </li> <li> <p>\u4e3a\u4ec0\u4e48Apollo\u4e0d\u8981\u671f\u671b\uff0c\u76f4\u63a5\u53ef\u4ee5\u6839\u636eboundary\u6765\u6c42\u540e\u7aef\u7684\u4f18\u5316path\uff0c\u800c\u65b0\u77f3\u5668\u9700\u8981\u4e00\u4e2a\u7c97\u89e3\uff08\u8003\u8651\u52a8\u6001\u969c\u788d\u7269\uff09\u6765\u4f5c\u4e3a\u540e\u7aef\u4f18\u5316\u7684\u671f\u671b\u3002</p> </li> </ol> <p>\u7b54\uff1a\u4e3b\u8981\u662f\u56e0\u4e3aApollo\u7684\u573a\u666f\u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u6761lane\u5927\u6982\u4e00\u822c\u5c31\u662f3.5m\uff0c\u53d8\u5316\u4e0d\u662f\u5f88\u5927\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u9700\u8981\u671f\u671b\uff0c\u6216\u8005\u76f4\u63a5\u7528\u8f66\u9053\u4e2d\u5fc3\u4f5c\u4e3a\u671f\u671b\u3002\u4f46\u662f\u65b0\u77f3\u5668\u7684\u573a\u666f\u76f8\u5bf9\u800c\u8a00\uff0c\u975e\u7ed3\u6784\u5316\u66f4\u5f3a\uff0c\u4e00\u6761\u8def\u7684\u5bbd\u5ea6\u53ef\u80fd\u53d8\u5316\u6bd4\u8f83\u5927\uff08\u5ffd\u5bbd\u5ffd\u7a84\uff09\uff0c\u56e0\u6b64\u6700\u597d\u7ed9\u4e00\u4e2a\u671f\u671b\uff0c\u5728\u671f\u671b\u4e2d\u8003\u8651\u7ed5\u884c\u7684\u6b21\u6570\u548c\u52a8\u6001\u969c\u788d\u7269\uff0c\u9632\u6b62\u7ed5\u884c\u6b21\u6570\u8fc7\u591a\u3002</p> <ol> <li> <p>\u76ee\u524dfreespace\u7684\u5f62\u5f0f \u7b54\uff1a\u76ee\u524dfreespace\u7ed9\u51fa\u7684\u5f62\u5f0f\u4e00\u822c\u662f\u4e00\u5806\u79bb\u6563\u7684\u70b9\u3002</p> </li> <li> <p>\u65b0\u77f3\u5668\u7684insidedecider\u548coutsidedecider\u6709\u4ec0\u4e48\u7528\uff1f \u7b54\uff1a\u65b0\u77f3\u5668\u4e2d\u7684insideplanner\u548coutsideplanner\u662f\u4e3a\u4e86\u9694\u79bbstage\u548ctask\u8bbe\u8ba1\u7684\u3002</p> </li> </ol> <p>\u4ee5Apollo\u4e3a\u4f8b\uff0capollo\u4e2d\u662fscenario-&gt;stage-&gt;task\u7684\u67b6\u6784\uff0c\u5176\u4e2d\u662f\u5426\u6362\u9053\u3001\u662f\u5426\u501f\u9053\u7684\u51b3\u7b56\u662f\u5728task\u4e2d\u7684decider\u5224\u65ad\u7684\u3002\u901a\u8fc7\u7ed9task\u4e2d\u7684decider\u4f20\u5165&amp;frame\u548c&amp;referenceline info\uff0c\u6765\u586b\u5145referenceline_info\u4e2d\u7684boundary\u4fe1\u606f\u3002</p> <p>\u65b0\u77f3\u5668\u4e2d\u4e0d\u592a\u4e00\u6837\uff0c\u65b0\u77f3\u5668\u4e2dinsideplanner\u548coutsideplanner\u5408\u8d77\u6765\u6709\u70b9\u7c7b\u4f3c\u4e8ereferenceline info\u3002\u65b0\u77f3\u5668\u4e2d\u662f\u5426\u6362\u9053\u3001\u501f\u5230\u7684\u51b3\u7b56\u662f\u7531scenario\u4e2d\u51b3\u5b9a\u7684\uff08\u6709\u4e24\u4e2adecider\uff0c\u5916\u90e8\u7684decider\u5224\u65ad\u662f\u5426\u6362\u9053\u3001\u501f\u5230\uff0c\u662f\u8bed\u4e49\u7ea7\u522bdecider\uff0c\u5185\u90e8\u7684decider\u4f4d\u4e8etask\u4e2d\uff0c\u7528\u6765\u786e\u5b9aboundary\uff09\uff0c\u5916\u90e8\u7684decider\u5224\u65ad\u662f\u5426\u6362\u9053\u3001\u501f\u9053\uff0c\u5e76\u586b\u5145insideplanner\u3002\u5185\u90e8task\u4e2d\u7684decider\u6839\u636einsideplanner\u4e2d\u7684\u4fe1\u606f\u6765\u586b\u5145boundary\u3002\u603b\u4e4b\uff0cinsideplanner\u50a8\u5b58\u7684\u662f\u8bed\u4e49\u7ea7\u522b\u7684\u51b3\u7b56\u4fe1\u606f\uff0coutsideplanner\u662f\u6839\u636e insideplanner\u7684\u4fe1\u606f\uff0c\u6765\u786e\u5b9aboundary\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%A7%84%E5%88%92%E5%92%8C%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E8%A7%84%E5%88%92%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"\u65e0\u4eba\u673a\u89c4\u5212\u548c\u81ea\u52a8\u9a7e\u9a76\u89c4\u5212\u7684\u533a\u522b","text":"<p>\u9ad8\u98de\u8001\u5e08\u4ed6\u4eec\u7ec4\u4e3b\u505a\u65e0\u4eba\u673a\u89c4\u5212\uff0c\u4f46\u662f\u4eca\u5929\u4e5f\u5f00\u59cb\u8fdb\u519b\u81ea\u52a8\u9a7e\u9a76\u4e86\u3002 \u76ee\u524d\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\u65e0\u4eba\u673a\u89c4\u5212\u548c\u81ea\u52a8\u9a7e\u9a76\u89c4\u5212\u7684\u4e3b\u8981\u533a\u522b\u5728\u54ea\u91cc\uff1f \u7b54\uff1a\u4e3b\u8981\u533a\u522b\u5728\u73af\u5883\u548c\u6a21\u578b\u3002</p> <p>\u9996\u5148\u8bf4\u73af\u5883\uff0c\u65e0\u4eba\u673a\u7684\u73af\u5883\u4e00\u822c\u90fd\u662f\u9759\u6001\u7684\uff0c\u5f88\u5c11\u6d89\u53ca\u5230\u52a8\u6001\u969c\u788d\u7269\uff0c\u56e0\u6b64\u4e5f\u5c31\u5f88\u5c11\u6d89\u53ca\u5230\u535a\u5f08\u4e0e\u4ea4\u4e92\u3002\u56e0\u6b64\u65e0\u4eba\u673a\u89c4\u5212\u5f88\u591a\u65f6\u5019\u7528\u7684\u90fd\u662f\u57fa\u4e8e\u68af\u5ea6\u4f18\u5316\u7684\u65b9\u6cd5\u53bb\u627e\u5230\u4e00\u6761\u5e73\u6ed1\u7684\u8f68\u8ff9\u3002</p> <p>\u81ea\u52a8\u9a7e\u9a76\u7684\u73af\u5883\u975e\u5e38\u590d\u6742\uff0c\u5b58\u5728\u5927\u91cf\u52a8\u6001\u969c\u788d\u7269\uff0c\u6240\u4ee5\u81ea\u52a8\u9a7e\u9a76\u76f8\u5bf9\u4e8e\u65e0\u4eba\u673a\u6765\u8bf4\uff0c\u591a\u4e86\u4e00\u5c42\u884c\u4e3a\u89c4\u5212\uff08\u51b3\u7b56\uff09\uff0c\u800c\u7528\u57fa\u4e8e\u4f18\u5316\u7684\u65b9\u6cd5\u6765\u505a\u51b3\u7b56\u4e0d\u592a\u73b0\u5b9e\uff0c\u56e0\u6b64\u51fa\u73b0\u4e86\u62d3\u6251\u641c\u7d22\u3001POMDP\uff0cRL\u4e4b\u7c7b\u7684\u505a\u51b3\u7b56\u65b9\u6cd5\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u662f\u6a21\u578b\uff0c\u5bf9\u4e8e\u81ea\u52a8\u9a7e\u9a76\u6765\u8bf4\uff0c\u81ea\u884c\u8f66\u6a21\u578b\u662f\u975e\u5b8c\u6574\u6027\u7ea6\u675f\u3002\u800c\u65e0\u4eba\u673a\u4e0d\u5b58\u5728\u3002 \u81ea\u52a8\u9a7e\u9a76\u7684\u81ea\u884c\u8f66\u6a21\u578b\u548c\u65e0\u4eba\u673a\u7684\u6a21\u578b\u90fd\u7b26\u5408\u5fae\u5206\u5e73\u5766\uff0c\u8fd9\u662f\u6bd4\u8f83\u76f8\u540c\u7684\u5730\u65b9\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/","title":"\u65f6\u7a7a\u89c4\u5212","text":"<p>\u65f6\u7a7a\u89c4\u5212\u7684\u90e8\u5206\u6982\u5ff5\uff1a</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#0","title":"0 \u89c4\u5212\u7684\u4e24\u4e2a\u81ea\u7531\u5ea6","text":"<p>\u4e0a\u4e00\u671f\u8fd0\u52a8\u89c4\u5212\u6280\u672f\u5206\u4eab\u300a\u8fd0\u52a8\u8f68\u8ff9\u4ec5\u4ec5\u662f2D\u7684\uff1f\u2014\u2014\u8bba\u81ea\u52a8\u9a7e\u9a76\u8fd0\u52a8\u89c4\u5212\u7684\u7ef4\u5ea6\u300b\u4e2d\u6211\u4eec\u63d0\u5230\uff0c\u5982\u679c\u4e0d\u8003\u8651\u8fc7\u53bb\u65f6\u95f4\u7ef4\u5ea6\u7684\u8bdd\uff0c\u65e0\u4eba\u8f66\u5bf9\u672a\u6765\u89c4\u5212\u7684\u8fd0\u52a8\u8f68\u8ff9\uff08trajectory\uff09\u662f\u5728\u4e8c\u7ef4\u7a7a\u95f4\u548c\u4e00\u7ef4\u672a\u6765\u65f6\u95f4\u4e2d\u7684\u66f2\u7ebf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7a7a\u95f4\u4f4d\u7f6e\uff082D\u5750\u6807\uff09\u5bf9\u65f6\u95f4\u7684\u51fd\u6570\u3002\u81ea\u52a8\u9a7e\u9a76\u63a7\u5236\u548c\u7ebf\u63a7\u7cfb\u7edf\u4e2d\u7684_\u7eb5\u5411\u63a7\u5236_\u548c_\u6a2a\u5411\u63a7\u5236_\uff0c\u9a7e\u9a76\u5458\u64cd\u63a7\u7684_\u5239\u8f66/\u6cb9\u95e8\u8e0f\u677f_\u548c_\u65b9\u5411\u76d8_\u8fd9\u4e24\u4e2a\u6a21\u6001\uff0c\u89c4\u5212\u4e2d\u5e38\u7528\u7684Frenet\u5750\u6807\u7cfb\u7684_\u5207\u5411_\u548c_\u6cd5\u5411_\u4e24\u4e2a\u65b9\u5411\uff0c\u90fd\u4f53\u73b0\u4e86\u8f66\u8f86\u6709\u4e24\u4e2a\u81ea\u7531\u5ea6\uff08degrees of freedom\uff09\u8fd9\u4e00\u57fa\u672c\u4e8b\u5b9e\u3002\u57fa\u4e8e\u8fd9\u4e00\u7406\u89e3\uff0c\u4e1a\u754c\u7684\u8fd0\u52a8\u89c4\u5212\u6280\u672f\u901a\u5e38\u628a\u5bf9\u8f68\u8ff9\u7684\u89c4\u5212\u62c6\u5206\u6210\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u5373\u8def\u5f84\u89c4\u5212\uff08path planning\uff0c\u6216\u8005\u53ebgeometry planning\uff09\u548c\u901f\u5ea6\u89c4\u5212\uff08speed planning\uff09\u3002\u8def\u5f84\u89c4\u5212\u5bf9\u5e94\u4e8e\u6a2a\u5411\u63a7\u5236\uff08\u65b9\u5411\u76d8\u89d2\u5ea6\uff09\uff0c\u8868\u8fbe\u5f62\u5f0f\u901a\u5e38\u662fFrenet\u5750\u6807\u7cfb\u7684\u6a2a\u5411\u504f\u79fb\u91cfl\u5bf9\u5f27\u957fs\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8def\u5f84\uff08path\uff09\uff1b\u8def\u5f84\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u7a7a\u95f4\u5f62\u72b6\uff0c\u4e0e\u65f6\u95f4\u65e0\u5173\u3002\u901f\u5ea6\u89c4\u5212\u5bf9\u5e94\u4e8e\u7eb5\u5411\u63a7\u5236\uff08\u5239\u8f66/\u6cb9\u95e8\u8e0f\u677f\u5f00\u5ea6\uff09\uff0c\u8868\u8fbe\u5f62\u5f0f\u901a\u5e38\u662fs\u5bf9\u65f6\u95f4t\u7684\u51fd\u6570\uff0c\u5373\u901f\u5ea6\u66f2\u7ebf\uff08speed profile\uff09\uff1b\u901f\u5ea6\u66f2\u7ebf\u63cf\u8ff0\u7684\u662f\u5728\u8def\u5f84\u4e0a\u7684\u8fdb\u5ea6\uff0c\u4e0e\u8def\u5f84\u7684\u7a7a\u95f4\u5f62\u72b6\u65e0\u5173\u3002\u867d\u7136\u5177\u4f53\u7684\u89c4\u5212\u7b97\u6cd5\u5343\u53d8\u4e07\u5316\uff0c\u4f46\u5f52\u6839\u7ed3\u5e95\u90fd\u662f\u751f\u6210\u4e24\u4e2a\u4e00\u7ef4\u51fd\u6570\uff0cl(s)\u548cs(t)\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u201c\u65f6\u7a7a\u89e3\u8026\u89c4\u5212\u201d\uff08space-time decoupled planning\uff09\u3002\u4eca\u5929\u7684\u8ba8\u8bba\u91cc\uff0c\u6211\u4eec\u8981\u6311\u6218\u8fd9\u4e2a\u601d\u7ef4\u5b9a\u5f0f\u3002</p> <p>\u56de\u5230\u8fd0\u52a8\u8f68\u8ff9\u7684\u8bed\u4e49\u6765\u770b\uff0c\u6700\u7ec8\u8bc4\u5224\u4e00\u4e2a\u8f68\u8ff9\u597d\u574f\u7684\u6807\u51c6\u4e2d\uff0c\u4e24\u4e2a\u7a7a\u95f4\u7ef4\u5ea6\u662f\u4e0d\u53ef\u5206\u5272\u7684\u3002\u6bd4\u5982\uff0c\u5b89\u5168\u6027\u8981\u6c42\u6211\u4eec\u5bf9\u8f68\u8ff9\u548c\u6240\u6709\u969c\u788d\u7269\u505a\u78b0\u649e\u68c0\u6d4b\uff0c\u800c\u4e0e\u52a8\u6001\u7269\u4f53\u78b0\u649e\u7684\u5b9a\u4e49\u662f\u5728\u540c\u4e00\u65f6\u95f4\u5360\u636e\u540c\u4e00\u7a7a\u95f4\u4f4d\u7f6e\uff0c\u56e0\u6b64\u53ea\u7528\u8def\u5f84\u6216\u8005\u53ea\u7528\u901f\u5ea6\u66f2\u7ebf\u90fd\u65e0\u6cd5\u51c6\u786e\u68c0\u6d4b\u78b0\u649e\uff08\u4e1a\u5185\u65f6\u7a7a\u89e3\u8026\u89c4\u5212\u5e38\u89c1\u7684\u5904\u7406\u601d\u8def\u662f\u5728\u8def\u5f84\u786e\u5b9a\u540e\uff0c\u7528\u901f\u5ea6\u66f2\u7ebf\u68c0\u67e5\u78b0\u649e\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8212\u9002\u6027\u8981\u6c42\u6211\u4eec\u4ece\u591a\u89d2\u5ea6\u5168\u65b9\u4f4d\u5730\u8bc4\u4f30\u8fd0\u52a8\u8f68\u8ff9\u7684\u5e73\u6ed1\u6027\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u51e0\u4e2a\u6307\u6807\uff0c\u50cf\u6a2a\u5411\u52a0\u52a0\u901f\u5ea6\uff08lateral jerk\uff09\uff0c\u7eb5\u5411\u52a0\u52a0\u901f\u5ea6\uff08longitudinal jerk\uff09\u7b49\uff0c\u90fd\u4e0d\u53ef\u907f\u514d\u5730\u540c\u65f6\u8ddf\u65b9\u5411\u76d8\u8f6c\u89d2/\u89d2\u901f\u5ea6\u548c\u5239\u8f66/\u6cb9\u95e8\u8e0f\u677f\u5f00\u5ea6/\u53d8\u5316\u7387\u6709\u5173\uff08\u540c\u6837\uff0c\u4e1a\u5185\u5e38\u89c1\u7684\u601d\u8def\u662f\u5728\u8def\u5f84\u786e\u5b9a\u540e\uff0c\u5728\u901f\u5ea6\u66f2\u7ebf\u4f18\u5316\u4e2d\u8003\u8651\u8fd9\u4e9b\u56e0\u7d20\uff09\u3002\u65f6\u7a7a\u89e3\u8026\u89c4\u5212\u7684\u5f31\u70b9\u5728\u8fd9\u91cc\u5f70\u663e\u65e0\u9057\uff1a\u4e0d\u8bba\u5148\u89c4\u5212\u8def\u5f84\u540e\u89c4\u5212\u901f\u5ea6\uff0c\u8fd8\u662f\u5148\u89c4\u5212\u901f\u5ea6\u540e\u89c4\u5212\u8def\u5f84\uff0c\u4e8c\u8005\u5171\u540c\u5f71\u54cd\u7684\u56e0\u7d20\u53ea\u80fd\u7559\u5230\u6700\u540e\uff0c\u800c\u5148\u89c4\u5212\u7684\u90a3\u4e00\u534a\u5c31\u5f88\u96be\u8003\u8651\u5230\u8fd9\u4e9b\u56e0\u7d20\u3002\u6bd4\u5982\uff0c\u5728\u5e38\u89c1\u7684\u5148\u8def\u5f84\u540e\u901f\u5ea6\u7684\u6846\u67b6\u4e0b\uff0c\u6211\u4eec\u5728\u89c4\u5212\u8def\u5f84\u7684\u65f6\u5019\u65e0\u6cd5\u77e5\u9053\u6700\u7ec8\u7684\u901f\u5ea6\u66f2\u7ebf\uff0c\u7b49\u5230\u901f\u5ea6\u89c4\u5212\u5b8c\u6210\u4e86\uff0c\u56de\u8fc7\u5934\u53ef\u80fd\u53d1\u73b0\u8fd9\u6837\u7684\u901f\u5ea6\u4e0b\uff0c\u8fd9\u6761\u65e9\u5df2\u89c4\u5212\u597d\u7684\u8def\u5f84\u5176\u5b9e\u5e76\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u5f88\u5dee\u7684\u3002</p> <p>\u4e00\u4e2a\u590d\u6742\u4e92\u52a8\u573a\u666f\u7684\u4f8b\u5b50\uff0c\u65e0\u4eba\u8f66\u7684\u8f66\u9053\u53f3\u65b9\u6709\u4f4e\u901f\u540c\u5411\u884c\u9a76\u7684\u81ea\u884c\u8f66\uff0c\u8def\u5bf9\u9762\u6709\u9ad8\u901f\u5bf9\u5411\u884c\u9a76\u7684\u673a\u52a8\u8f66\uff0c\u4e8c\u8005\u95f4\u8ddd\u4e0d\u8db3\u4ee5\u76f4\u63a5\u901a\u8fc7\uff0c\u56e0\u6b64\u65e0\u4eba\u8f66\u9700\u8981\u517c\u987e\u8def\u5f84\uff08\u5bf9\u81ea\u884c\u8f66\u7684\u907f\u969c\u52a8\u4f5c\uff09\u548c\u901f\u5ea6\uff08\u9009\u62e9\u4e0e\u81ea\u884c\u8f66\u548c\u673a\u52a8\u8f66\u5404\u81ea\u4ea4\u4e92\u7684\u65f6\u95f4\u70b9\uff09\uff0c\u627e\u5230\u5408\u9002\u7684\u65f6\u95f4\u548c\u5408\u9002\u7684\u5730\u70b9\u7ed5\u8fc7\u81ea\u884c\u8f66\u3002</p> <p>https://vdn6.vzuu.com/SD/86b89cfe-171f-11ed-b5b2-6ebd6d1e2a6e.mp4?pkey=AAUDTOcYaJHPaHDJ7b4-PnrZ-Zy9OmfexqiUTEufqaThb2vJJFRaT3ux5w-8FZedvBxlaMowPgxh3K09zlRHyVyG&amp;c=avc.1.1&amp;f=mp4&amp;pu=078babd7&amp;bu=078babd7&amp;expiration=1691386817&amp;v=ks6</p> <p>\u5f53\u7136\uff0c\u5f88\u591a\u670b\u53cb\u53ef\u80fd\u5bf9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4f5c\u8fc7\u4e00\u4e9b\u5c1d\u8bd5\uff0c\u53ef\u80fd\u8fd8\u627e\u5230\u4e86\u4e00\u4e9b\u6548\u679c\u4e0d\u9519\u7684\u6280\u5de7\u3002\u6bd4\u5982\uff0c\u5728\u4f18\u5316\u8def\u5f84\u7684\u65f6\u5019\uff0c\u5982\u679c\u9700\u8981\u7528\u5230\u901f\u5ea6\uff08\u6bd4\u5982\uff0c\u9700\u8981\u51b3\u5b9a\u5728\u4ec0\u4e48\u4f4d\u7f6e\u7ed5\u8fc7\u52a8\u6001\u969c\u788d\u7269\uff09\uff0c\u53ef\u4ee5\u7528\u4e0a\u4e00\u4e2a\u89c4\u5212\u5468\u671f\u7684\u901f\u5ea6\u66f2\u7ebf\u6765\u4f5c\u4e3a\u8fd1\u4f3c\u3002\u5728\u4e00\u4e9b\u5b9e\u9645\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u53ef\u80fd\u8fd9\u6837\u4e5f\u5c31\u591f\u4e86\u3002\u751a\u81f3\u8fd8\u6709\u4eba\u5c1d\u8bd5\u8fc7\u5728\u4e00\u4e2a\u89c4\u5212\u5468\u671f\u4e4b\u5185\u5148\u505a\u8def\u5f84\u89c4\u5212\uff0c\u518d\u505a\u901f\u5ea6\u89c4\u5212\uff0c\u7136\u540e\u56de\u8fc7\u5934\u6765\u7528\u6700\u65b0\u7684\uff08\u53ef\u80fd\u66f4\u51c6\u786e\u7684\uff09\u901f\u5ea6\u7ed3\u679c\u518d\u91cd\u505a\u8def\u5f84\u89c4\u5212\u3002\u4f46\u8fd9\u4e9b\u6280\u5de7\u7ec8\u7a76\u53ea\u662f\u8fd1\u4f3c\uff0c\u603b\u662f\u6709\u8bb8\u591a\u60c5\u51b5\u4f1a\u8ba9\u8fd1\u4f3c\u6548\u679c\u4e0d\u7406\u60f3\uff1b\u6bd4\u5982\u5982\u679c\u5f53\u524d\u6709\u65b0\u7684\u969c\u788d\u7269\u521a\u88ab\u68c0\u6d4b\u548c\u8ffd\u8e2a\u5230\uff0c\u4e24\u4e2a\u89c4\u5212\u5468\u671f\u4e4b\u95f4\u7684\u901f\u5ea6\u66f2\u7ebf\u53ef\u80fd\u4f1a\u5927\u76f8\u5f84\u5ead\uff0c\u8fd9\u5c31\u4f1a\u4e25\u91cd\u5f71\u54cd\u6839\u636e\u65e7\u7684\u901f\u5ea6\u66f2\u7ebf\u89c4\u5212\u51fa\u6765\u7684\u8def\u5f84\u7684\u8d28\u91cf\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#1","title":"1 \u65f6\u7a7a\u89c4\u5212\u7684\u4f18\u70b9","text":"<p>\u4e24\u4e2a\u573a\u666f\uff1a</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#11","title":"1.1 \u65c1\u8f66\u9053\u5bf9\u5411\u5feb\u8f66\uff0c\u81ea\u8f66\u9053\u6162\u8f66","text":"<p>\u4e00\u4e2a\u590d\u6742\u4e92\u52a8\u573a\u666f\u7684\u4f8b\u5b50\uff0c\u65e0\u4eba\u8f66\u7684\u8f66\u9053\u53f3\u65b9\u6709\u4f4e\u901f\u540c\u5411\u884c\u9a76\u7684\u81ea\u884c\u8f66\uff0c\u8def\u5bf9\u9762\u6709\u9ad8\u901f\u5bf9\u5411\u884c\u9a76\u7684\u673a\u52a8\u8f66\uff0c\u4e8c\u8005\u95f4\u8ddd\u4e0d\u8db3\u4ee5\u76f4\u63a5\u901a\u8fc7\uff0c\u56e0\u6b64\u65e0\u4eba\u8f66\u9700\u8981\u517c\u987e\u8def\u5f84\uff08\u5bf9\u81ea\u884c\u8f66\u7684\u907f\u969c\u52a8\u4f5c\uff09\u548c\u901f\u5ea6\uff08\u9009\u62e9\u4e0e\u81ea\u884c\u8f66\u548c\u673a\u52a8\u8f66\u5404\u81ea\u4ea4\u4e92\u7684\u65f6\u95f4\u70b9\uff09\uff0c\u627e\u5230\u5408\u9002\u7684\u65f6\u95f4\u548c\u5408\u9002\u7684\u5730\u70b9\u7ed5\u8fc7\u81ea\u884c\u8f66\u3002 https://vdn6.vzuu.com/SD/86b89cfe-171f-11ed-b5b2-6ebd6d1e2a6e.mp4?pkey=AAUDTOcYaJHPaHDJ7b4-PnrZ-Zy9OmfexqiUTEufqaThb2vJJFRaT3ux5w-8FZedvBxlaMowPgxh3K09zlRHyVyG&amp;c=avc.1.1&amp;f=mp4&amp;pu=078babd7&amp;bu=078babd7&amp;expiration=1691386817&amp;v=ks6 </p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#12-cut-in","title":"1.2 cut-in\u573a\u666f","text":"<p>\u5728\u4e0a\u6e38\u8f93\u5165\uff08\u5b9a\u4f4d\uff0c\u611f\u77e5\u7b49\uff09\u4fdd\u6301\u7a33\u5b9a\u7684\u60c5\u51b5\u4e0b\u7ed9\u51fa\u5e73\u6ed1\u7684\u89c4\u5212\u662f\u6bd4\u8f83\u5bb9\u6613\u7684\uff0c\u4f46\u65e0\u4eba\u8f66\u5728\u57ce\u5e02\u516c\u5f00\u9053\u8def\u4e0a\u9700\u8981\u5904\u7406\u5927\u91cf\u4e0d\u53ef\u9884\u6599\u7684\u60c5\u51b5\uff0c\u4e0d\u8bba\u662f\u56e0\u4e3a\u4e0a\u6e38\u5b9a\u4f4d\u611f\u77e5\u7b49\u6a21\u5757\u7ed9\u51fa\u4e0d\u7a33\u5b9a\u3001\u8df3\u53d8\u7684\u7ed3\u679c\uff0c\u8fd8\u662f\u56e0\u4e3a\u73b0\u5b9e\u4e16\u754c\u4e2d\u5b9e\u9645\u5b58\u5728\u7a81\u53d8\uff08\u6bd4\u5982\u88ab\u906e\u6321\u7684\u7269\u4f53\u7a81\u7136\u53ef\u89c1\uff0c\u6216\u8005\u8fd1\u8ddd\u79bb\u7684\u90bb\u8f66\u7a81\u7136\u51b3\u5b9a\u53d8\u9053\u7b49\uff09\uff0c\u90fd\u4f1a\u9020\u6210\u89c4\u5212\u7684\u8f93\u5165\u65e0\u6cd5\u4fdd\u8bc1\u7a33\u5b9a\u8fde\u7eed\u3002\u4e0b\u9762\u8fd9\u4e2a\u56fe\u4e2d\u5c55\u793a\u7684\u662f\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u573a\u666f\uff0c\u5c31\u662f\u6211\u4eec\u901a\u5e38\u79f0\u4e3acut in\u7684\u60c5\u51b5\uff1a</p> <p> \u8fd9\u4e9b\u60c5\u51b5\u5f88\u5e38\u89c1\uff0c\u800c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u4eba\u7c7b\u53f8\u673a\u603b\u662f\u80fd\u6cf0\u7136\u5904\u4e4b\uff0c\u5f88\u5c11\u9700\u8981\u505a\u6025\u5239\u8f66\u4e4b\u7c7b\u7684\u7d27\u6025\u64cd\u4f5c\uff0c\u8fd9\u5c31\u7ed9\u81f4\u529b\u4e8e\u6253\u9020\u81ea\u52a8\u9a7e\u9a76\u201c\u8001\u53f8\u673a\u201d\u7684\u8f7b\u821f\u667a\u822a\u56e2\u961f\u8bbe\u7acb\u4e86\u5f88\u9ad8\u7684\u76ee\u6807\u3002\u5728\u8f93\u5165\u53d1\u751f\u7a81\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027\u662f\u9996\u8981\u4efb\u52a1\uff0c\u4f46\u901a\u5e38\u5728\u4fdd\u8bc1\u5b89\u5168\u7684\u524d\u63d0\u4e0b\uff0c\u6211\u4eec\u4ecd\u7136\u6709\u5f88\u591a\u8f68\u8ff9\u7684\u9009\u62e9\uff0c\u8fd9\u65f6\u5019\u5982\u4f55\u9009\u62e9\u4f53\u611f\u6700\u4f18\u7684\u8f68\u8ff9\u5c31\u5c24\u4e3a\u91cd\u8981\u3002\u4eba\u7c7b\u53f8\u673a\u5411\u6211\u4eec\u8bc1\u660e\u4e86\uff0c\u53ea\u8981\u8010\u5fc3\u6253\u78e8\u9a7e\u9a76\u6280\u672f\uff0c\u5c31\u80fd\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u53c8\u5b89\u5168\u53c8\u8212\u9002\u7684\u9a7e\u9a76\u8f68\u8ff9\u3002\u90a3\u4e48\u6839\u636e\u6211\u4eec\u4e0a\u9762\u5bf9\u8f68\u8ff9\u5e73\u6ed1\u6027\u548c\u4f53\u611f\u4e4b\u95f4\u5173\u7cfb\u7684\u5206\u6790\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u6837\u5904\u7406cut in\u8fd9\u4e2a\u573a\u666f\u5462\uff1f</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#2","title":"2\u65f6\u7a7a\u89c4\u5212\u7684\u96be\u70b9","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#21","title":"2.1\u521d\u59cb\u89e3","text":"<p>\u6570\u503c\u4f18\u5316\u6548\u679c\u7684\u91cd\u8981\u51b3\u5b9a\u56e0\u7d20\u4e4b\u4e00\uff0c\u662f\u521d\u59cb\u89e3\u7684\u8d28\u91cf\u3002\u89c4\u5212\u95ee\u9898\u672c\u8eab\u662f\u4e2a\u9ad8\u5ea6\u975e\u51f8\uff08non-convex\uff09\u7684\u4f18\u5316\uff0c\u6709\u5f88\u591a\u5c40\u90e8\u6781\u503c\uff0c\u800c\u57fa\u4e8e\u68af\u5ea6\u7684\u6570\u503c\u4f18\u5316\u65b9\u6cd5\uff0c\u7531\u4e8e\u5176\u6839\u636e\u51fd\u6570\u5c40\u90e8\u7279\u5f81\u9010\u6b65\u6536\u655b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u90fd\u5f88\u96be\u8df3\u51fa\u521d\u59cb\u89e3\u6240\u9009\u5b9a\u7684\u5c40\u90e8\u8303\u56f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u521d\u59cb\u89e3\u7684\u9009\u62e9\u51b3\u5b9a\u4e86\u6570\u503c\u4f18\u5316\u4f1a\u63a2\u7d22\u54ea\u4e9b\u5c40\u90e8\u6781\u503c\u3002\u56e0\u6b64\uff0c\u521d\u59cb\u89e3\u7684\u751f\u6210\u5c31\u662f\u5728\u4f17\u591a\u5c40\u90e8\u6781\u503c\u4e2d\uff0c\u627e\u5230\u5168\u5c40\u6700\u4f18\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u5f97\u201c\u51b3\u7b56\u201d\uff08decision making\uff09\u7684\u8fc7\u7a0b\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u6709\u54ea\u4e9b\u5c40\u90e8\u6781\u503c\u53ef\u4f9b\u9009\u62e9\u5462\uff1f</p> <p>  \u5728\u4e0a\u6587\u7684\u969c\u788d\u7269\u7ed5\u884c\u573a\u666f\u4e2d\uff0c\u51e0\u4e2a\u4ece\u65e0\u4eba\u8f66\u5f53\u524d\u4f4d\u7f6e\uff08\u53f3\u4e0a\u65b9\uff09\u51fa\u53d1\u7684\u53ef\u80fd\u7684\u8f68\u8ff9\u3002\u7b2c\u4e00\u884c\u4e24\u4e2a\u8f68\u8ff9\u90fd\u662f\u4ece\u969c\u788d\u7269\u4e00\u4fa7\u7ed5\u884c\uff0c\u7b2c\u4e8c\u884c\u90fd\u662f\u4ece\u53e6\u4e00\u4fa7\u7ed5\u884c\u3002\u4ece\u5de6\u4fa7\u7ed5\u884c\u7684\u8f68\u8ff9\u65e0\u6cd5\u5728\u4e0d\u78b0\u649e\u969c\u788d\u7269\u7684\u6761\u4ef6\u4e0b\u901a\u8fc7\u8fde\u7eed\u53d8\u5f62\u8f6c\u53d8\u6210\u4ece\u53f3\u4fa7\u7ed5\u884c\uff0c\u56e0\u6b64\u7b2c\u4e00\u884c\u4e24\u4e2a\u8f68\u8ff9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u540c\u4f26\u7c7b\uff0c\u7b2c\u4e8c\u884c\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u540c\u4f26\u7c7b\u3002</p> <p>\u62d3\u6251\u5b66\uff08topology\uff09\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5206\u6790\u8fd9\u4e2a\u95ee\u9898\u7684\u5de5\u5177\u3002\u5728\u8f68\u8ff9\u7a7a\u95f4\u4e2d\uff0c\u6709\u5f88\u591a\u53ef\u884c\u7684\u8f68\u8ff9\u662f\u76f8\u4f3c\u7684\uff0c\u4e00\u4e2a\u8f68\u8ff9\u53ef\u4ee5\u7ecf\u8fc7\u8fde\u7eed\u53d8\u6362\u8f6c\u5316\u6210\u53e6\u4e00\u4e2a\u8f68\u8ff9\uff0c\u800c\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u59cb\u7ec8\u4fdd\u6301\u53ef\u884c\uff08\u4e0d\u4f1a\u8de8\u8fc7\u4efb\u4f55\u4e00\u4e2a\u969c\u788d\u7269\uff09\uff1b\u76f4\u89c2\u5730\u8bb2\uff0c\u5bf9\u8fd9\u4e9b\u8f68\u8ff9\u7684\u63a2\u7d22\u53ef\u80fd\u90fd\u4f1a\u88ab\u540c\u4e00\u4e2a\u521d\u59cb\u89e3\u8986\u76d6\u5230\u3002\u5982\u679c\u6211\u4eec\u628a\u8f68\u8ff9\u770b\u4f5c\u662f\u7a7a\u95f4\u4f4d\u7f6e\u5bf9\u65f6\u95f4\u7684\u8fde\u7eed\u51fd\u6570\uff0c\u90a3\u4e48\u63cf\u8ff0\u8fd9\u79cd\u8f68\u8ff9\u201c\u76f8\u4f3c\u6027\u201d\u7684\u6570\u5b66\u6982\u5ff5\u5c31\u662f\u540c\u4f26\uff08homotopy\uff09\uff0c\u76f8\u4f3c\u8f68\u8ff9\u7684\u5206\u7ec4\u5c31\u662f\u540c\u4f26\u7c7b\uff08homotopy classes\uff09\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540c\u4f26\u7c7b\u4e2d\u7684\u6240\u6709\u8f68\u8ff9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u751f\u6210\u4e00\u4e2a\u4e0e\u4e4b\u540c\u4f26\u7684\u521d\u59cb\u89e3\uff0c\u5c31\u53ef\u4ee5\u8986\u76d6\u4e86\u3002\u679a\u4e3e\u6240\u6709\u540c\u4f26\u7c7b\u53ef\u4ee5\u901a\u8fc7\u63a8\u5e7f\u7ef4\u8bfa\u56fe\uff08generalized Voronoi diagram\uff09\u7b49\u7b97\u6cd5\u6765\u5b9e\u73b0\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u9886\u57df\u5728\u5b66\u672f\u754c\u8fd8\u5728\u6d3b\u8dc3\u7684\u7814\u7a76\u4e2d\uff0c\u5728\u65f6\u7a7a\u4e2d\u5982\u4f55\u9ad8\u6548\u5730\u5904\u7406\u540c\u4f26\u7c7b\u8fd8\u6709\u5f85\u63a2\u7d22\uff0c \u800c\u4e14\u4e5f\u6709\u5b66\u8005\u8d28\u7591\u540c\u4f26\u7c7b\u53ef\u80fd\u5e76\u4e0d\u662f\u79bb\u6563\u3001\u5b9a\u6027\u5730\u63cf\u8ff0\u8f68\u8ff9\u5206\u7c7b\uff08\u4e5f\u5c31\u662f\u51b3\u7b56\uff09\u7684\u7406\u60f3\u5f62\u5f0f\u3002\u65f6\u7a7a\u8054\u5408\u89c4\u5212\u80fd\u529b\u7684\u6700\u5927\u9650\u5ea6\u7684\u53d1\u6325\uff0c\u79bb\u4e0d\u5f00\u8fd9\u4e2a\u9886\u57df\u7684\u7a81\u7834\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#3","title":"3 \u56fe\u68ee\u7684\u65f6\u7a7a\u89c4\u5212","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#30","title":"3.0 \u5361\u8f66\u7684\u7279\u70b9\uff1a","text":"<ul> <li>\u6700\u4e3b\u8981\u7684\u7279\u70b9\uff1a\u5e95\u5c42\u7684\u8fd0\u52a8\u5b66\u548c\u52a8\u529b\u5b66\u6a21\u578b\u4e0d\u4e00\u6837\u3002\u6bd4\u5982\u8f6c\u5f2f\u65f6\uff0c\u5361\u8f66\u4e00\u822c\u4f1a\u5148\u5411\u76f8\u53cd\u65b9\u5411\u8f6c\u5f2f\uff0c\u4ee5\u7559\u51fa\u8db3\u591f\u5927\u7684\u7a7a\u95f4</li> <li>\u52a0\u51cf\u901f\u54cd\u5e94\u8f83\u6162\u3002</li> <li>\u5c3a\u5bf8\u592a\u5927\uff0c\u5bf9\u78b0\u649e\u68c0\u6d4b\u66f4\u4e25\u683c\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#31","title":"3.1\u8026\u5408\u9884\u6d4b\u51b3\u7b56\u89c4\u5212","text":"<p>\u56fe\u68ee\u7684\u65b9\u6848\u662f\u8026\u5408\u9884\u6d4b\u8fd8\u6709\u51b3\u7b56\u89c4\u5212\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u81ea\u8f66\u89c4\u5212\u7684\u610f\u56fe\u8f68\u8ff9\uff0c\u4f1a\u9996\u5148\u4f7f\u7528\u535a\u5f08\u8bba\u6a21\u578b\u53bb\u9884\u6d4b\u8f66\u8f86\u53ef\u80fd\u7684\u53cd\u5e94\u4ee5\u53ca\u591a\u79cd\u53ef\u80fd\u53cd\u5e94\u7684\u6982\u7387\u5206\u5e03\u3002</p> <p>\u56fe\u68ee\u7684\u65b9\u6848\uff0c\u4f1a\u5728\u5bf9\u65b9\u8ba9\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u9009\u62e9\u62a2\u884c\u3002</p> <p>\u89c4\u63a7\u6a21\u5757\u4e2d\uff0c\u4e1a\u754c\u975e\u5e38\u5173\u5fc3\u7684\u95ee\u9898\u662f\u65f6\u7a7a\u4ee5\u53ca\u6a2a\u7eb5\u8054\u5408\u7684\u641c\u7d22\u4e0e\u4f18\u5316\uff0c\u4f20\u7edf\u7684\u8f68\u8ff9\u89c4\u5212\u4f1a\u9996\u5148\u56fa\u5b9a\u6a2a\u5411\u884c\u4e3a\u53bb\u4f18\u5316\u7eb5\u5411\u884c\u4e3a\u6216\u8005\u662f\u56fa\u5b9a\u7eb5\u5411\u884c\u4e3a\u4f18\u5316\u6a2a\u5411\u884c\u4e3a\uff0c\u9650\u5236\u4e86\u7a7a\u95f4\u4f1a\u5bfc\u81f4\u89c4\u5212\u7684\u7ed3\u679c\u4e27\u5931\u654f\u6377\u6027\uff0c\u5728\u4e00\u4e9b\u975e\u5e38\u5371\u9669\u7684\u60c5\u51b5\u4e0b\u6709\u53ef\u80fd\u4f7f\u5f97\u672c\u8f66\u89c4\u5212\u4e0d\u51fa\u5b89\u5168\u7684\u8f68\u8ff9\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#1_1","title":"\uff081\uff09\u9884\u6d4b\uff08\u535a\u5f08\uff09","text":"<p>\u7136\u540e\u51b3\u7b56\u4e0a\u9762\u5219\u662f\u91c7\u7528\u4e86\u535a\u5f08\u6a21\u578b\uff0c\u524d\u9762\u7684\u9884\u6d4b\u540c\u5b66\u8bb2\u7528\u7684level-k\u535a\u5f08\uff0c\u4e0d\u8fc7\u6ca1\u6709\u4eba\u5bf9\u4ed6\u4eec\u600e\u4e48\u505a\u7684\u51b3\u7b56\u6709\u8be6\u7ec6\u4ecb\u7ecd\u7684\uff0c\u6211\u4eec\u6682\u4e14\u9ed8\u8ba4\u5c31\u662flevel-k\u5427\uff0clevel-k\u535a\u5f08\u6a21\u578b\u4e0b\uff0c\u6839\u636e\u81ea\u8f66\u7684\u4e0d\u540c\u8f68\u8ff9\uff0c\u535a\u5f08\u51fa\u5176\u4ed6\u8f66\u7684\u610f\u56fe\u6982\u7387\uff0c\u56e0\u4e3a\u6709level-k\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ea7\u751f\u591a\u4e2a\u76ee\u6807\u4e0d\u540c\u6fc0\u8fdb\u7a0b\u5ea6\u7684\u6982\u7387\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5206\u5e03\u4e0b\u8fdb\u884ccontingency\u3002\u7136\u540e\u4e0a\u9762\u8bf4\u4e86\uff0c\u6709\u591a\u4e2a\u81ea\u8f66\u7684\u8f68\u8ff9\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8f68\u8ff9\u4e0b\u90fd\u4f1a\u6f14\u5316\u51fa\u5bf9\u5e94\u7684\u73af\u5883\uff0c\u73b0\u5728\u5c31\u901a\u8fc7reward function\u6765\u8bc4\u4f30\u4e00\u4e0bcost, \u627e\u5230\u6700\u597d\u7684\u81ea\u8f66\u7b56\u7565\uff0c\u5230\u8fd9\u91cc\u8fd8\u6ca1\u7ed3\u675f\uff0c\u4ed6\u4eec\u7684\u4f18\u5316\u76ee\u6807\u662f\u7b56\u7565\u53c2\u6570\u800c\u4e0d\u662f\u63a7\u5236\u7b56\u7565\u672c\u8eab\uff0c\u6240\u4ee5\u8fd8\u6709\u4e00\u9053\u5bf9\u7b56\u7565\u53c2\u6570\u8fdb\u884c\u5168\u5c40\u4f18\u5316\u7684\u8fc7\u7a0b\uff0c\u5f97\u5230\u81ea\u8f66\u6700\u4f18\u7684\u63a7\u5236\u7b56\u7565\u3002</p> <p>level k\uff1a  - k=0\uff0c\u6bcf\u4e2aagent\u4e0d\u8003\u8651\u5176\u4ed6\u53c2\u4e0e\u8005\u7684\u884c\u4e3a\u3002 - k\u9636\u4ea4\u4e92\uff1a\u6bcf\u4e2aagent\u8003\u8651\u5176\u4ed6\u53c2\u4e0e\u8005\u4e3ak- 1\u9636\u3002 - k=2\uff0c\u81ea\u8f66\u7684\u51b3\u7b56\u8003\u8651\u5468\u56f4\u8f66\u4f1a\u9884\u6d4b\u6211\u7684\u89c4\u5212\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#2contingency","title":"\uff082\uff09\u89c4\u5212\uff08contingency\u65b9\u6848+\u65f6\u7a7a\u8054\u5408\u89c4\u5212\uff08\u53c2\u6570\u5316\uff09\uff0c\u8054\u5408\u591a\u6a21\u6001\u7684\u9884\u6d4b\uff0c\u7ed9\u51fa\u89c4\u5212\u7ed3\u679c\uff09","text":"<ul> <li> <p>contigency\u65b9\u6848  \u5982\u4e0a\u56fecontingency\u80fd\u591f\u540c\u65f6\u8003\u8651\u4ea4\u4e92\u76ee\u6807\u7684\u591a\u6a21\u6001\uff0c\u5728\u540c\u65f6\u8003\u8651\u76ee\u6807\u7684\u4e0d\u540c\u610f\u56fe\u4e0b\u505a\u51fa\u81ea\u8f66\u7684\u7efc\u5408\u8003\u8651\u4e0b\u7684\u6700\u4f73\u7b56\u7565\u3002\u4e0d\u597d\u610f\u601d\uff0c\u5927\u7586\u5f88\u65e9\u4ee5\u524d\u5c31\u7528\u4e86\u3002</p> </li> <li> <p>\u65f6\u7a7a\u8054\u5408\u89c4\u5212 \u56fe\u68ee\u7684\u65b9\u6848\u662f\u8026\u5408\u7684\u6a2a\u7eb5\u884c\u4e3a\u7684\u4f18\u5316\uff0c\u540c\u65f6\u4e5f\u8981\u4fdd\u8bc1\u89c4\u5212\u7684\u8f68\u8ff9\u80fd\u591f\u6ee1\u8db3\u975e\u5e38\u590d\u6742\u7684\u8f66\u8f86\u52a8\u529b\u5b66\u6a21\u578b\u3002\u5177\u4f53\u800c\u8a00\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u5316\u7684\u63a7\u5236\u5e8f\u5217(\u7528\u4e00\u4e9b\u53c2\u6570\u53bb\u63a7\u5236\u751f\u6210\u591a\u6761\u8f68\u8ff9\uff0c\u53ef\u4ee5\u8bf4\u5c31\u662f\u65f6\u7a7a\u91c7\u6837\uff0c\u7136\u540e\u4f18\u5316\u8fd9\u4e9b\u53c2\u6570)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53c2\u6570\u6240\u751f\u6210\u7684\u81ea\u8f66\u8f68\u8ff9\u4f1a\u8bc4\u4f30\u4ed6\u7684\u597d\u574f\uff0c\u53c2\u8003\u56e0\u7d20\u5305\u62ec\u5b89\u5168\u6027\u3001\u6548\u7387\u3001\u4ea4\u89c4\u3001\u4ea4\u4e92\uff0c\u7b49\u7b49\u3002 \u56fe\u68ee\u7684\u65b9\u6cd5\u662f\u201cprinciple based, \u5373\u57fa\u4e8e\u6570\u5b66\u5206\u6790\u4e0e\u5efa\u6a21\u7684\u65b9\u6cd5\u201d\uff0c\u5efa\u7acb\u8d77\u7b56\u7565\u53c2\u6570\u548c\u5177\u4f53\u63a7\u5236\u7b56\u7565\u4e4b\u95f4\u7684\u8054\u7cfb\u3002</p> </li> </ul> <p>\u7531\u4e8e\u73b0\u5728\u7684\u8f68\u8ff9\u662f\u7531\u63a7\u5236\u7b56\u7565\u53c2\u6570\u6240\u786e\u5b9a\u7684\uff0c\u56e0\u6b64\u4f18\u5316\u76ee\u6807\u662f\u63a7\u5236\u7b56\u7565\u53c2\u6570\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u90a3\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u53c2\u6570\u8fdb\u884c\u4f18\u5316\uff0c\u5c31\u53ef\u4ee5\u540c\u65f6\u4f18\u5316\u6a2a\u5411\u548c\u7eb5\u5411\u7684\u884c\u4e3a\u4ee5\u53ca\u5982\u4f55\u548c\u5176\u4ed6\u8f66\u8f86\u4ea4\u4e92\u3002</p> <p>\u65f6\u7a7a\u8054\u5408\u4f18\u5316\u786e\u5b9e\u4e0d\u518d\u88ab\u4eba\u4e3a\u9650\u5236\u89e3\u7a7a\u95f4\uff0c\u6240\u4ee5\u80af\u5b9a\u6bd4\u89e3\u8026\u65b9\u6848\u8981\u4f18\u8d8a\u3002\u56fe\u68ee\u7684\u505a\u6cd5\u662f\u5148\u641e\u4e00\u4e2a\u65f6\u7a7a\u95f4\u8054\u5408\u91c7\u6837\uff0c\u5e76\u4e14\u662f\u5728\u7b56\u7565\u53c2\u6570\u7a7a\u95f4\u4e0a\u7684\u91c7\u6837\uff0c\u7ed9\u5b9a\u7b56\u7565\u53c2\u6570\uff0c\u518d\u7ed9\u5b9a\u8f66\u8f86\u6a21\u578b\uff0c\u5f97\u51fa\u5bf9\u5e94\u7684\u5f00\u73af\u63a8\u6f14\u7684\u8f68\u8ff9\uff1a </p> <ul> <li>\u8f68\u8ff9\u8bc4\u4f30 \u8bf4\u8fd9\u4e2areward function\u80af\u5b9a\u662f\u9ad8\u5ea6\u975e\u51f8\u975e\u5149\u6ed1\u7684\uff0c\u600e\u4e48\u6574\uff0c\u6709\u4e00\u4e2a\u9ad8\u7aef\u7684\u5168\u5c40\u4f18\u5316\u5668\uff0c\u5177\u4f53\u662f\u5565\u601d\u8def\u6ca1\u6709\uff1a </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#32","title":"3.2 \u8026\u5408\u89c4\u5212\u63a7\u5236","text":"<p>\u89c14 \u4e0a\u9762\u8bb2\u4e86\u7528\u5f00\u73af\u63a8\u6f14\u5f97\u5230\u672a\u6765\u8f68\u8ff9\uff0c\u6700\u540e\u5f97\u5230\u7684\u63a7\u5236\u5e8f\u5217\u90a3\u80af\u5b9a\u4e0d\u591f\uff0c\u4e0d\u80fd\u76f4\u63a5\u63d0\u4f9b\u63a7\u5236\uff0c\u5c31\u7b97\u662f\u9ad8\u9891\u5237\u65b0planning\uff0c\u4e5f\u4e0d\u4fdd\u8bc1\u7a33\u5b9a\u6027\uff0c\u6240\u4ee5\u540e\u9762\u8fd8\u6709\u4e00\u4e2a\u53cd\u9988\u63a7\u5236\u3002\u8fd9\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\uff0c\u80af\u5b9a\u5f97\u6709\u53cd\u9988\u63a7\u5236\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5728\u5b66\u5b66\u4e60\u6a21\u5757\u3002\u5b66\u7684\u4ec0\u4e48\u4e1c\u897f\u5462\uff0c\u5c31\u662fplanning\u4e2d\u4f1a\u4f4e\u9891\u66f4\u65b0\u7b56\u7565\u53c2\u6570\u3002  \u6700\u540e\u7ed9\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u628a\u63a7\u5236\u5e8f\u5217\u7684\u4f18\u5316\u548cplanning\u653e\u5728\u4e00\u8d77\u7684\u597d\u5904\u5c31\u662fplanning\u7684\u7ed3\u679c\u975e\u5e38\u4e1d\u6ed1\uff0c\u4e14\u63a7\u5236\u80fd\u591f\u5f88\u597d\u6267\u884c\u5b83\uff1a </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#33","title":"3.3\u56fe\u68ee\u7684\u4e00\u4e9b\u7f3a\u70b9\uff1a","text":"<ol> <li>\u7b56\u7565\u53c2\u6570\u7a7a\u95f4\uff0c\u7531\u53c2\u6570\u751f\u6210\u968f\u65f6\u95f4\u53d8\u5316\u63a7\u5236\u91cf\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u662f\u600e\u4e48\u505a\u7684\uff0c\u505a\u4e86\u54ea\u4e9b\u57fa\u672c\u7684\u5047\u8bbe\u548c\u7b80\u5316\uff0c\u4ed6\u548c\u65f6\u7a7a\u4e0a\u76f4\u63a5\u91c7\u6837\u7684\u533a\u522b\u4ec5\u4ec5\u5728\u4e8e\u66f4\u52a0\u7b26\u5408\u52a8\u529b\u5b66\u6a21\u578b\u5417\u3002</li> <li>\u7528\u7b56\u7565\u53c2\u6570\uff0c\u901a\u8fc7\u4f18\u5316\u7684\u5f62\u5f0f\uff0c\u5f00\u73af\u751f\u6210\u63a7\u5236\u91cf\uff0c\u63a7\u5236\u91cf\u518d\u524d\u5411\u4f20\u64ad\u5f97\u5230\u672a\u6765\u72b6\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u53c8\u4f1a\u4f5c\u4e3a\u9ad8\u9891\u53cd\u9988\u4e2d\u7684\u8f93\u5165\u3002</li> <li>\u56fe\u68ee\u7684\u65f6\u7a7a\u8054\u5408\u66f4\u50cf\u662f\u65f6\u7a7a\u8054\u5408\u7684\u4f18\u5316\uff0c\u6211\u7684\u7ecf\u9a8c\u662f\u5982\u679c\u65f6\u7a7a\u8054\u5408\u4f18\u5316\u7684\u8bdd\uff0c\u600e\u4e48\u53bb\u5904\u7406\u78b0\u649e\u7ea6\u675f\uff08\u8fd9\u662f\u5bfc\u81f4\u975e\u51f8\u6027\u7684\u7f6a\u9b41\u7978\u9996\uff09\uff0c\u6211\u5728PPT\u4e2d\u6ca1\u6709\u770b\u5230\u76f8\u5173\u7684\u8bb2\u89e3\u3002\uff08risk aware\u662f\u5426\u53ef\u884c\uff1f\uff09</li> <li>\u6700\u540e\u4f1a\u5bf9\u8f68\u8ff9\u7684cost\u8fdb\u884c\u8bc4\u4ef7\uff0c\u8fd9\u4e2acost\u8bc4\u4ef7\u662f\u6307\u53ea\u6c42\u89e3\u4e00\u6b21\u4f18\u5316\u95ee\u9898\uff0ccost\u5c31\u662f\u4f18\u5316\u76ee\u6807\uff0c\u8fd8\u662f\u8bf4\u6c42\u89e3\u591a\u4e2a\u95ee\u9898\uff0ccost\u8bc4\u4ef7\u4e0d\u540c\u4f18\u5316\u95ee\u9898\u89e3\u51fa\u6765\u7684\u8f68\u8ff9\u3002\u5982\u679c\u53ea\u6c42\u89e3\u4e00\u6b21\u95ee\u9898\uff0c\u5982\u4f55\u5f97\u5230contigency\u3002\uff08\u8fd8\u662f\u8bf4contigency\u53ea\u662f\u5728cost\u4e2d\u7528\u6982\u7387\u7684\u5f62\u5f0f\u8868\u8fbe\uff0c\u5e76\u4e0d\u662f\u771f\u7684\u89e3\u591a\u4e2a\u95ee\u9898\uff09</li> </ol> <p>\u5982\u679c\u662f\u6c42\u89e3\u591a\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u6bcf\u4e00\u6761\u8f68\u8ff9\u90fd\u662f\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u4e00\u6b21\u4f18\u5316\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u611f\u89c9\u662f\u975e\u5e38\u8017\u65f6\uff0c\u5982\u4f55\u4fdd\u8bc1\u5b9e\u65f6\u6027\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#4","title":"4 \u89c4\u5212\u63a7\u5236\u8026\u5408\u7684\u4f18\u70b9","text":"<p>\u53ef\u4ee5\u4e3e\u4f8b\u8bf4\u660e\u4f20\u7edf\u7684\u89c4\u5212\u63a7\u5236\u89e3\u8026\u548c\u8026\u5408\u89c4\u5212\u63a7\u5236\u7684\u533a\u522b\u3002</p> <p>\u7f3a\u70b9\uff1a \u5982\u81ea\u8f66\u60f3\u7ed5\u8fc7\u524d\u9762\u6bd4\u8f83\u5927\u7684\u969c\u788d\u7269\uff0c\u4f20\u7edf\u7684\u65b9\u6848\u53ef\u80fd\u89c4\u5212\u9f13\u52b1\u7684\u751f\u6210\u76ee\u6807\u8f68\u8ff9\uff0c\u63a7\u5236\u7684\u72ec\u7acb\u8ffd\u8e2a\u76ee\u6807\u8f68\u8ff9\uff0c\u8fd9\u4e24\u8005\u4e4b\u95f4\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u4ea7\u751f\u6bd4\u8f83\u5927\u7684\u504f\u5dee\u3002\u5f53\u504f\u5dee\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u867d\u7136\u89c4\u5212\u7684\u8f68\u8ff9\u89c9\u5f97\u81ea\u5df1\u7ed5\u8fc7\u969c\u788d\u7269\uff0c\u4f46\u662f\u63a7\u5236\u7684\u8fc7\u7a0b\u4e2d\u9020\u6210\u6bd4\u8f83\u5927\u7684\u8bef\u5dee\u4f7f\u5f97\u81ea\u8f66\u751f\u6210\u7684\u8f68\u8ff9\u8fd8\u662f\u548c\u969c\u788d\u7269\u53d1\u751f\u4e86\u522e\u8e6d\u3002</p> <p>\u4f18\u70b9\uff1a \u800c\u53cd\u9988\u63a7\u5236\u548c\u89c4\u5212\u8026\u5408\u7684\u7cfb\u7edf\uff0c\u4f1a\u5b9e\u65f6\u7684\u6839\u636e\u5f53\u524d\u6d4b\u91cf\u7684\u72b6\u6001\u91cd\u65b0\u89c4\u5212\u548c\u63a7\u5236\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u5927\u8303\u56f4\u7ed5\u969c\u788d\u7269\u8fc7\u7a0b\u4e2d\u4fa7\u5411\u95f4\u8ddd\u5b89\u5168\u6027\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%97%B6%E7%A9%BA%E8%A7%84%E5%88%92/#5-tesla","title":"5 Tesla\u7684\u89c4\u5212\u6a21\u5757","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%B1%82%E6%9B%B2%E7%8E%87%E6%96%B9%E6%B3%95/","title":"\u6c42\u66f2\u7387\u65b9\u6cd5","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%B1%82%E6%9B%B2%E7%8E%87%E6%96%B9%E6%B3%95/#menger","title":"Menger\u66f2\u7387\uff08\u4e09\u70b9\u66f2\u7387\uff09","text":"<pre><code>K = 4A/(|P1-P2|\u00b7|P2-P3|\u00b7|P3-P1|)\n\nA\u662f\u7531\u8fd9\u4e09\u4e2a\u70b9\u6784\u6210\u7684\u4e09\u89d2\u5f62\u7684\u9762\u79ef: A = 1/2 |(x2 - x1) * (y3-y1) - (y2 - y1) * (x3 - x1)|\n\n|Pi-Pj|\u8868\u793a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\n</code></pre> <p> <pre><code>numerator = 2 * abs((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2))\ndenominator = np.sqrt(\n    ((x3 - x2) ** 2 + (y3 - y2) ** 2)\n    * ((x2 - x1) ** 2 + (y2 - y1) ** 2)\n    * ((x3 - x1) ** 2 + (y3 - y1) ** 2)\n    )\nif denominator &gt;= epsilon:\n     curvatures[i] = numerator / denominator\n</code></pre></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%B1%82%E6%9B%B2%E7%8E%87%E6%96%B9%E6%B3%95/#_1","title":"\u66f2\u7387\u65b9\u5411","text":"<pre><code>vector1 = (x2 - x1, y2 - y1)\nvector2 = (x3 - x2, y3 - y2)\ncross_product = vector1[0] * vector2[1] - vector1[1] * vector2[0]\nif cross_product &gt; 0:\n    curvatures[i] *= 1 # \u5de6\u8f6c\nelse:\n    curvatures[i] *= -1 # \u53f3\u8f6c\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E6%B8%AF%E7%A7%91%E5%A4%A7%E4%B8%A4%E7%AF%87%E8%A7%84%E5%88%92%E6%96%87%E7%AB%A0%E7%9A%84%E8%A7%A3%E8%AF%BB%E5%8D%9A%E5%AE%A2/","title":"\u6e2f\u79d1\u5927\u4e24\u7bc7\u89c4\u5212\u6587\u7ae0\u7684\u89e3\u8bfb\u535a\u5ba2","text":"<p>\u8bba\u6587\u9605\u8bfb\u7b14\u8bb0-Safe Trajectory Generation for Complex Urban Environments Using Spatio-temporal Semantic Corridor</p> <p># \u8bba\u6587\u9605\u8bfb\u7b14\u8bb0-EPSILON An Efficient Planning System for Automated Vehicles in Highly Interactive Environments</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/","title":"\u76f8\u673a\u7684\u5185\u5916\u53c2\u6570","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/#_1","title":"\u4e16\u754c\u5750\u6807\u7cfb\u6295\u5f71\u5230\u56fe\u50cf\u5e73\u9762","text":"<p>\u5c06\u4e09\u7ef4\u4e16\u754c\u4e2d\u7684\u70b9 P \u8f6c\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb\uff0c\u518d\u6620\u5c04\u5230\u56fe\u50cf\u5e73\u9762\uff0c\u6d89\u53ca\u5230\u51e0\u4f55\u53d8\u6362\u548c\u6444\u50cf\u673a\u5185\u90e8\u53c2\u6570\u7684\u5e94\u7528\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u4e3b\u8981\u6b65\u9aa4\uff1a\u9996\u5148\u662f\u4ece\u4e16\u754c\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb\uff0c\u7136\u540e\u4ece\u76f8\u673a\u5750\u6807\u7cfb\u6295\u5f71\u5230\u56fe\u50cf\u5e73\u9762\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/#1","title":"\u6b65\u9aa4 1: \u4ece\u4e16\u754c\u5750\u6807\u7cfb\u5230\u76f8\u673a\u5750\u6807\u7cfb","text":"<ol> <li>\u5b9a\u4e49\u53d8\u6362\u77e9\u9635\uff1a    \u76f8\u673a\u5750\u6807\u7cfb\u76f8\u5bf9\u4e8e\u4e16\u754c\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\u548c\u671d\u5411\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635 \\(R\\) \u548c\u4e00\u4e2a\u5e73\u79fb\u5411\u91cf     \\(t\\) \u6765\u63cf\u8ff0\u3002\u8fd9\u4e2a\u53d8\u6362\u53ef\u4ee5\u7528\u4e00\u4e2a \\(4 \\times 4\\) \u7684\u9f50\u6b21\u53d8\u6362\u77e9\u9635\u8868\u793a\uff1a    $$    T = \\begin{bmatrix} R &amp; t \\ 0 &amp; 1 \\end{bmatrix}    $$</li> </ol> <p>\u5176\u4e2d\uff0c\\(R\\) \u662f\u4e00\u4e2a \\(3 \\times 3\\) \u7684\u65cb\u8f6c\u77e9\u9635\uff0c\\(t\\) \u662f\u4e00\u4e2a \\(3 \\times 1\\) \u7684\u5e73\u79fb\u5411\u91cf\u3002</p> <ol> <li>\u5e94\u7528\u53d8\u6362\uff1a    \u4e3a\u4e86\u5c06\u70b9 P \u7684\u4e16\u754c\u5750\u6807 \\((p_x, p_y, p_z)\\) \u8f6c\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb\uff0c\u9996\u5148\u9700\u8981\u5c06\u8fd9\u4e2a\u70b9\u8f6c\u6362\u4e3a\u9f50\u6b21\u5750\u6807 \\((p_x, p_y, p_z, 1)\\)\u3002\u7136\u540e\uff0c\u7528\u53d8\u6362\u77e9\u9635 T \u4e58\u4ee5\u8fd9\u4e2a\u9f50\u6b21\u5750\u6807\uff1a    $$</li> </ol> <p>\\begin{bmatrix} X_c \\ Y_c \\ Z_c \\ 1 \\end{bmatrix} = T \\cdot \\begin{bmatrix} p_x \\ p_y \\ p_z \\ 1 \\end{bmatrix}</p> <p>$$    \u5176\u4e2d\uff0c\\((X_c, Y_c, Z_c)\\) \u662f\u70b9$ P$ \u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e2d\u7684\u5750\u6807\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/#2","title":"\u6b65\u9aa4 2: \u4ece\u76f8\u673a\u5750\u6807\u7cfb\u5230\u56fe\u50cf\u5e73\u9762","text":"<ol> <li>\u5185\u53c2\u77e9\u9635\uff1a    \u76f8\u673a\u7684\u5185\u53c2\u77e9\u9635 K \u5b9a\u4e49\u4e86\u76f8\u673a\u7684\u7126\u8ddd\u3001\u56fe\u50cf\u4e2d\u5fc3\u7b49\u5185\u90e8\u7279\u6027\uff0c\u901a\u5e38\u5f62\u5f0f\u5982\u4e0b\uff1a    $$</li> </ol> <p>K = \\begin{bmatrix}    f_x &amp; 0 &amp; c_x \\    0 &amp; f_y &amp; c_y \\    0 &amp; 0 &amp; 1    \\end{bmatrix}</p> <p>$$    \u5176\u4e2d\uff0c\\(f_x, f_y\\) \u662f\u6cbf \\(x\\) \u548c\\(y\\) \u8f74\u7684\u7126\u8ddd\uff0c\\(c_x, c_y\\)\u662f\u56fe\u50cf\u5e73\u9762\u4e2d\u5fc3\u7684\u5750\u6807\u3002</p> <ol> <li>\u6295\u5f71\u548c\u7f29\u653e\uff1a    \u76f8\u673a\u5750\u6807\u7cfb\u4e2d\u7684\u70b9 \\((X_c, Y_c, Z_c)\\) \u53ef\u4ee5\u901a\u8fc7\u5185\u53c2\u77e9\u9635 \\(K\\) \u6295\u5f71\u5230\u56fe\u50cf\u5e73\u9762\uff1a    $$</li> </ol> <p>\\begin{bmatrix}    u \\    v \\    1    \\end{bmatrix} = K \\cdot \\begin{bmatrix}    X_c / Z_c \\    Y_c / Z_c \\    1    \\end{bmatrix}</p> <p>$$    \u8fd9\u91cc \\((u, v)\\) \u662f\u70b9\\(P\\) \u5728\u56fe\u50cf\u5e73\u9762\u4e0a\u7684\u50cf\u7d20\u5750\u6807\u3002</p> <p>\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u60a8\u53ef\u4ee5\u5b9e\u73b0\u4ece\u4e16\u754c\u5750\u6807\u7cfb\u5230\u76f8\u673a\u5750\u6807\u7cfb\u518d\u5230\u56fe\u50cf\u5e73\u9762\u7684\u8f6c\u6362\u3002\u8fd9\u4e9b\u6b65\u9aa4\u6db5\u76d6\u4e86\u4f7f\u7528\u76f8\u673a\u6a21\u578b\u548c\u53d8\u6362\u77e9\u9635\u6765\u8fdb\u884c\u7a7a\u95f4\u5750\u6807\u8f6c\u6362\u7684\u57fa\u672c\u65b9\u6cd5\u3002</p> <p>\u5c06\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u70b9 \\((u, v)\\) \u6295\u5f71\u56de\u5230\u4e09\u7ef4\u4e16\u754c\u5750\u6807\u7cfb\u662f\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4ece\u4e8c\u7ef4\u56fe\u50cf\u5230\u4e09\u7ef4\u7a7a\u95f4\u7684\u6620\u5c04\u662f\u4e0d\u552f\u4e00\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u50cf\u7d20\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u6df1\u5ea6 \\(Z_w\\)\uff08\u5373\u70b9\u5230\u76f8\u673a\u7684\u8ddd\u79bb\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u4e00\u70b9\u5728\u4e09\u7ef4\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002\u4e0b\u9762\u662f\u5177\u4f53\u6b65\u9aa4\u548c\u516c\u5f0f\uff1a</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/#_2","title":"\u56fe\u50cf\u5e73\u9762\u6295\u5f71\u5230\u4e16\u754c\u5750\u6807\u7cfb","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/#1_1","title":"\u6b65\u9aa4 1: \u4ece\u56fe\u50cf\u5e73\u9762\u5230\u76f8\u673a\u5750\u6807\u7cfb","text":"<ol> <li>\u4f7f\u7528\u5185\u53c2\u77e9\u9635\u7684\u9006\uff1a    \u9996\u5148\uff0c\u4f7f\u7528\u76f8\u673a\u7684\u5185\u53c2\u77e9\u9635 \\(K\\) \u5c06\u56fe\u50cf\u5e73\u9762\u4e0a\u7684\u50cf\u7d20\u5750\u6807 \\((u, v)\\) \u8f6c\u6362\u56de\u76f8\u673a\u5750\u6807\u7cfb\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5185\u53c2\u77e9\u9635\u7684\u9006 \\(K^{-1}\\) \u5b9e\u73b0\uff1a    $$</li> </ol> <p>\\begin{bmatrix}    X_c \\    Y_c \\    1    \\end{bmatrix} = K^{-1} \\cdot \\begin{bmatrix}    u \\    v \\    1    \\end{bmatrix}</p> <p>$$    \u5f97\u5230\u7684 (X_c, Y_c, 1) \u662f\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e2d\uff0c\u70b9\u7684\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u76f8\u673a\u7126\u70b9\u7684\u7f29\u653e\u8868\u793a\u3002</p> <ol> <li>\u8ba1\u7b97\u5b9e\u9645\u5750\u6807\uff1a    \u83b7\u5f97\u7684 \\(X_c\\) \u548c \\(Y_c\\) \u662f\u7f29\u653e\u540e\u7684\u503c\uff0c\u5b9e\u9645\u5750\u6807\u9700\u8981\u7528\u5230\u6df1\u5ea6 \\(Z_w\\)\uff08\u5047\u8bbe\u5df2\u77e5\uff09\u6765\u786e\u5b9a\uff1a    $$</li> </ol> <p>X_c = X_c \\cdot Z_w, \\quad Y_c = Y_c \\cdot Z_w</p> <p>$$    \u8fd9\u91cc Z_c \u901a\u5e38\u88ab\u5047\u5b9a\u7b49\u4e8e Z_w\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%86%85%E5%A4%96%E5%8F%82%E6%95%B0/#2_1","title":"\u6b65\u9aa4 2: \u4ece\u76f8\u673a\u5750\u6807\u7cfb\u5230\u4e16\u754c\u5750\u6807\u7cfb","text":"<ol> <li>\u5b9a\u4e49\u9006\u53d8\u6362\u77e9\u9635\uff1a    \u65e2\u7136\u70b9 \\((X_c, Y_c, Z_w)\\) \u5df2\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e2d\u786e\u5b9a\uff0c\u8981\u8f6c\u6362\u56de\u4e16\u754c\u5750\u6807\u7cfb\uff0c\u9700\u8981\u9006\u5411\u5e94\u7528\u4e4b\u524d\u7684\u76f8\u673a\u5230\u4e16\u754c\u5750\u6807\u7cfb\u7684\u53d8\u6362\u3002\u8fd9\u9700\u8981\u7528\u5230 \\(T\\) \u7684\u9006\uff0c\u901a\u5e38\u8868\u793a\u4e3a\uff1a    $$</li> </ol> <p>T^{-1} = \\begin{bmatrix}    R^T &amp; -R^T \\cdot t \\    0 &amp; 1    \\end{bmatrix}</p> <p>$$    \u5176\u4e2d\uff0c\\(R^T\\) \u662f\u65cb\u8f6c\u77e9\u9635\u7684\u8f6c\u7f6e\uff0c\\(-R^T \\cdot t\\) \u8868\u793a\u9006\u5e73\u79fb\u3002</p> <ol> <li>\u5e94\u7528\u9006\u53d8\u6362\uff1a    \u4f7f\u7528 \\(T^{-1}\\) \u5c06 \\((X_c, Y_c, Z_w, 1)\\) \u8f6c\u6362\u56de\u4e16\u754c\u5750\u6807\u7cfb\uff1a    $$</li> </ol> <p>\\begin{bmatrix}    p_x \\    p_y \\    p_z \\    1    \\end{bmatrix} = T^{-1} \\cdot \\begin{bmatrix}    X_c \\    Y_c \\    Z_w \\    1    \\end{bmatrix}</p> <p>$$    \u5f97\u5230\u7684 \\((p_x, p_y, p_z)\\) \u662f\u70b9 \\((u, v)\\) \u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002</p> <p>\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u60a8\u53ef\u4ee5\u5c06\u56fe\u50cf\u5e73\u9762\u7684\u50cf\u7d20\u70b9\u6839\u636e\u5df2\u77e5\u7684\u6df1\u5ea6\u4fe1\u606f\u6295\u5f71\u56de\u5230\u4e09\u7ef4\u4e16\u754c\u5750\u6807\u7cfb\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u77e5\u9053\u76f8\u673a\u7684\u5185\u90e8\u53c2\u6570\uff08\u5185\u53c2\u77e9\u9635\uff09\u3001\u76f8\u673a\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff08\u5916\u53c2\uff09\uff0c\u4ee5\u53ca\u6df1\u5ea6\u4fe1\u606f\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/","title":"\u7aef\u5230\u7aef know how","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#1-rltrick","title":"1 RL\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684trick","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#11-reward","title":"1.1 reward\u7cfb\u6570\u641c\u7d22","text":"<p>\u6bcf\u4e2areward\u7684scale\u90fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6bcf\u4e00\u9879\u9700\u8981\u4e58\u4ee5\u76f8\u5e94\u7684\u7cfb\u6570\uff0c\u8fd9\u4e2a\u7cfb\u6570\u5c5e\u4e8e\u8d85\u53c2\u6570\u9700\u8981\u4eba\u5de5\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7cfb\u6570\u641c\u7d22\u62bd\u8c61\u4e3a\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\uff1a \u8f93\u5165\u591a\u6761rollout\u7684\u8f68\u8ff9\u548cGT\u8f68\u8ff9\uff0c\u76ee\u6807\u662f\u8ddd\u79bbGT made\u6700\u5c0f\uff08\u6700\u8fd1\uff09\u7684rollout\u8f68\u8ff9\u7684reward\u6700\u5927\u3002\u53ef\u4ee5\u91c7\u7528\u66b4\u529b\u641c\u7d22\uff0c\u548c\u8d1d\u53f6\u65af\u4f18\u5316\u7b49\u65b9\u6cd5\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#12-overfittest-ont-train","title":"1.2 overfit/test ont train\u5b9e\u9a8c","text":"<p>RL\u4e0d\u4f9d\u8d56GT\uff0c\u5728RL\u9636\u6bb5\uff0c\u53ef\u4ee5\u7528\u5c11\u91cf\u7684case \u505aoverfit\u5b9e\u9a8c\uff0c\u6765\u68c0\u9a8creward\u8bbe\u8ba1\u662f\u5426\u5408\u7406\u3002\u5982\u679c\u5c11\u91cfcase\u80fd\u591foverfit\u6210\u529f\uff0c\u8bf4\u660ereward\u7684\u5bfc\u5411\u6b63\u786e\uff0c \u5982\u679c\u4e0d\u80fdoverfit\u6210\u529f\uff0c\u8bf4\u660ereward\u8bbe\u8ba1\u6709\u95ee\u9898\u3002\uff08\u6ce8\u610f\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u80fd\u5f15\u5165IL \u7684loss\uff09</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#13-reward","title":"1.3 reward\u53ef\u89c6\u5316\u5de5\u5177","text":"<p>\u6709\u4e00\u4e2a\u53ef\u89c6\u5316\u6bcf\u4e00\u6761rollout\u7684\u8f68\u8ff9\u3001GT\u8f68\u8ff9\u3001GT noise\u3001voc\u7684\u8f68\u8ff9\u7684\u6bcf\u4e00\u9879reward\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5206\u6790reward\u8bbe\u8ba1\u662f\u5426\u5408\u7406\uff0creward\u662f\u5426\u5b58\u5728bug\u7b49\u3002\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528bokeh\u8bbe\u8ba1\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#14-grpo","title":"1.4 GRPO\u8bad\u7ec3","text":"<p>\u91c7\u7528policy gradient\u7684RL\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u5f15\u5165GRPO\uff0c\u5176\u4e2d\u9664\u4ee5\u65b9\u5dee\u7684\u64cd\u4f5c\u53ef\u4ee5\u628a\u7eb5\u5411\u548c\u6a2a\u5411\u62c9\u5230\u4e00\u4e2areward\u5c3a\u5ea6\uff0c\u5bf9\u6a2a\u5411\u8868\u73b0\uff0c\u4f8b\u5982\u5c45\u4e2d\u907f\u8ba9\u6709\u5f88\u5927\u63d0\u5347\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#15-reward","title":"1.5 reward\u8bbe\u8ba1","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#1-oc_reward-object-collision-reward","title":"1. <code>oc_reward</code> (Object Collision Reward)","text":"<p>\u542b\u4e49\uff1a\u907f\u514d\u4e0e\u5176\u4ed6\u7269\u4f53\u78b0\u649e\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u65cb\u8f6cIoU (Intersection over Union)\u6765\u68c0\u6d4b\u81ea\u8f66\u4e0e\u5176\u4ed6\u8f66\u8f86/\u7269\u4f53\u662f\u5426\u78b0\u649e</p> </li> <li> <p>\u6839\u636emode\u53c2\u6570\u53ef\u4ee5\u8fd4\u56de\u4e0d\u540c\u5f62\u5f0f\u7684\u60e9\u7f5a\uff1a</p> <ul> <li> <p>'iou'\uff1a\u8d1f\u7684IoU\u503c\u4f5c\u4e3a\u60e9\u7f5a</p> </li> <li> <p>'bool'\uff1a\u78b0\u649e\u4e3a-1\uff0c\u65e0\u78b0\u649e\u4e3a0</p> </li> <li> <p>'risk'\uff1a\u57fa\u4e8e\u78b0\u649e\u548c\u76f8\u5bf9\u901f\u5ea6\u8ba1\u7b97\u98ce\u9669\u60e9\u7f5a\uff08\u901f\u5ea6\u8d8a\u9ad8\u60e9\u7f5a\u8d8a\u5927\uff09</p> </li> </ul> </li> <li> <p>\u53ef\u4ee5\u5ffd\u7565\u5728ground truth\u8f68\u8ff9\u4e2d\u5df2\u7ecf\u53d1\u751f\u78b0\u649e\u7684\u7269\u4f53</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#2-rbc_reward-road-boundary-collision-reward","title":"2. <code>rbc_reward</code> (Road Boundary Collision Reward)","text":"<p>\u542b\u4e49\uff1a\u907f\u514d\u4e0e\u9053\u8def\u8fb9\u754c\u78b0\u649e\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u68c0\u6d4b\u81ea\u8f66\u662f\u5426\u4e0e\u9053\u8def\u8fb9\u754c\uff08\u5b9e\u7ebf\u6216\u865a\u7ebf\uff09\u53d1\u751f\u78b0\u649e</p> </li> <li> <p>\u5982\u679c\u53d1\u751f\u78b0\u649e\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1\uff0c\u4e14\u60e9\u7f5a\u5927\u5c0f\u4e0e\u8f66\u901f\u6210\u6b63\u6bd4</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#3-slbc_reward-solid-line-boundary-collision-reward","title":"3. <code>slbc_reward</code> (Solid Line Boundary Collision Reward)","text":"<p>\u542b\u4e49\uff1a\u907f\u514d\u4e0e\u5b9e\u7ebf\u8f66\u9053\u7ebf\u78b0\u649e\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u68c0\u6d4b\u81ea\u8f66\u662f\u5426\u4e0e\u5b9e\u7ebf\u8f66\u9053\u7ebf\u53d1\u751f\u78b0\u649e</p> </li> <li> <p>\u5982\u679c\u53d1\u751f\u78b0\u649e\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#4-dlbc_reward-dashed-line-boundary-collision-reward","title":"4. <code>dlbc_reward</code> (Dashed Line Boundary Collision Reward)","text":"<p>\u542b\u4e49\uff1a\u907f\u514d\u4e0e\u865a\u7ebf\u8f66\u9053\u7ebf\u78b0\u649e\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u68c0\u6d4b\u81ea\u8f66\u662f\u5426\u4e0e\u865a\u7ebf\u8f66\u9053\u7ebf\u53d1\u751f\u78b0\u649e</p> </li> <li> <p>\u5982\u679c\u53d1\u751f\u78b0\u649e\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1\uff08\u901a\u5e38\u6bd4\u5b9e\u7ebf\u8f66\u9053\u7ebf\u60e9\u7f5a\u8f7b\uff09</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#5-acc_reward-acceleration-reward","title":"5. <code>acc_reward</code> (Acceleration Reward)","text":"<p>\u542b\u4e49\uff1a\u9650\u5236\u8fc7\u5927\u52a0\u901f\u5ea6\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u5f53\u52a0\u901f\u5ea6\u5927\u4e8e\u9608\u503c\uff08\u9ed8\u8ba43.0\uff09\u65f6\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1</p> </li> <li> <p>\u60e9\u7f5a\u5927\u5c0f\u4e0e\u8d85\u51fa\u9608\u503c\u7684\u52a0\u901f\u5ea6\u6210\u6b63\u6bd4</p> </li> <li> <p>\u5956\u52b1\u8303\u56f4\u88ab\u9650\u5236\u5728[-1.0, 0.0]</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#6-jerk_reward-jerk-reward","title":"6. <code>jerk_reward</code> (Jerk Reward)","text":"<p>\u542b\u4e49\uff1a\u9650\u5236\u8fc7\u5927\u52a0\u52a0\u901f\u5ea6(jerk)\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u5f53jerk\u5927\u4e8e\u9608\u503c\uff08\u9ed8\u8ba44.0\uff09\u65f6\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1</p> </li> <li> <p>\u60e9\u7f5a\u5927\u5c0f\u4e0e\u8d85\u51fa\u9608\u503c\u7684jerk\u6210\u6b63\u6bd4</p> </li> <li> <p>\u5956\u52b1\u8303\u56f4\u88ab\u9650\u5236\u5728[-1.0, 0.0]</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#7-efficiency_reward-efficiency-reward","title":"7. <code>efficiency_reward</code> (Efficiency Reward)","text":"<p>\u542b\u4e49\uff1a\u9f13\u52b1\u8f66\u8f86\u6cbf\u9884\u6d4b\u8f66\u9053\u7ebf\u65b9\u5411\u9ad8\u6548\u884c\u9a76\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u8f66\u8f86\u5728\u8f66\u9053\u65b9\u5411\u4e0a\u7684\u901f\u5ea6\u5206\u91cf</p> </li> <li> <p>\u6839\u636e\u4e0d\u540c\u6a21\u5f0f\u8ba1\u7b97\u5956\u52b1\uff1a</p> <ul> <li> <p>'velocity'\uff1a\u5728\u9002\u5f53\u901f\u5ea6\u8303\u56f4\u5185\u5956\u52b1\uff0c\u8fc7\u6162\u6216\u8fc7\u5feb\u90fd\u6709\u60e9\u7f5a</p> </li> <li> <p>'diff_velocity'\uff1a\u6839\u636e\u901f\u5ea6\u53d8\u5316\u7ed9\u4e88\u5956\u52b1</p> </li> <li> <p>'gt_based'\uff1a\u4e0eground truth\u8f68\u8ff9\u901f\u5ea6\u6bd4\u8f83\uff0c\u9f13\u52b1\u8f66\u8f86\u6309\u7167\u6216\u7565\u5feb\u4e8eground truth\u901f\u5ea6\u884c\u9a76</p> </li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#8-neg_speed_reward-negative-speed-reward","title":"8. <code>neg_speed_reward</code> (Negative Speed Reward)","text":"<p>\u542b\u4e49\uff1a\u60e9\u7f5a\u8f66\u8f86\u5728\u8f66\u9053\u65b9\u5411\u4e0a\u7684\u8d1f\u901f\u5ea6\uff08\u5012\u8f66\u6216\u4e25\u91cd\u504f\u79bb\uff09 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li>\u5f53\u8f66\u8f86\u5728\u8f66\u9053\u65b9\u5411\u4e0a\u7684\u901f\u5ea6\u4e3a\u8d1f\u4e14\u4f4e\u4e8e\u9608\u503c\u65f6\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#9-deviation_lp_reward-lane-position-deviation-reward","title":"9. <code>deviation_lp_reward</code> (Lane Position Deviation Reward)","text":"<p>\u542b\u4e49\uff1a\u9f13\u52b1\u8f66\u8f86\u4fdd\u6301\u5728\u9884\u6d4b\u8f66\u9053\u7ebf\u9644\u8fd1\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u8f66\u8f86\u4e0e\u9884\u6d4b\u8f66\u9053\u7ebf\u7684\u6a2a\u5411\u8ddd\u79bb</p> </li> <li> <p>\u5f53\u8ddd\u79bb\u8d85\u8fc7\u9608\u503c\uff08\u9ed8\u8ba42.0\u7c73\uff09\u65f6\uff0c\u7ed9\u4e88\u8d1f\u5956\u52b1</p> </li> <li> <p>\u60e9\u7f5a\u5927\u5c0f\u4e0e\u8d85\u51fa\u9608\u503c\u7684\u8ddd\u79bb\u6210\u6b63\u6bd4</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#10-cruise_fast_than_gt_reward-cruise-faster-than-ground-truth-reward","title":"10. <code>cruise_fast_than_gt_reward</code> (Cruise Faster Than Ground Truth Reward)","text":"<p>\u542b\u4e49\uff1a\u9f13\u52b1\u8f66\u8f86\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6bd4ground truth\u8f68\u8ff9\u884c\u9a76\u66f4\u5feb\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u9884\u6d4b\u8f68\u8ff9\u4e0eground truth\u8f68\u8ff9\u7684\u901f\u5ea6\u5dee</p> </li> <li> <p>\u5f53\u9884\u6d4b\u8f68\u8ff9\u901f\u5ea6\u5927\u4e8eground truth\u901f\u5ea6\u65f6\uff0c\u7ed9\u4e88\u6b63\u5956\u52b1</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#11-deviation_lc_reward-lane-center-deviation-reward","title":"11. <code>deviation_lc_reward</code> (Lane Center Deviation Reward)","text":"<p>\u542b\u4e49\uff1a\u9f13\u52b1\u8f66\u8f86\u5c45\u4e2d\u884c\u9a76\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u8f66\u8f86\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7ebf\u7684\u504f\u79bb\u8ddd\u79bb</p> </li> <li> <p>\u504f\u79bb\u8d8a\u5927\uff0c\u7ed9\u4e88\u7684\u8d1f\u5956\u52b1\u8d8a\u5927</p> </li> <li> <p>\u5956\u52b1\u8303\u56f4\u88ab\u9650\u5236\u5728[-1.0, 0.0]</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#12-traj_diff_reward-trajectory-difference-reward","title":"12. <code>traj_diff_reward</code> (Trajectory Difference Reward)","text":"<p>\u542b\u4e49\uff1a\u8bc4\u4f30\u9884\u6d4b\u8f68\u8ff9\u4e0eground truth\u8f68\u8ff9\u5dee\u5f02\u7684\u5956\u52b1\u51fd\u6570 \u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u9884\u6d4b\u8f68\u8ff9\u70b9\u4e0eground truth\u8f68\u8ff9\u70b9\u7684\u6b27\u6c0f\u8ddd\u79bb</p> </li> <li> <p>\u8ddd\u79bb\u8d8a\u5927\uff0c\u7ed9\u4e88\u7684\u8d1f\u5956\u52b1\u8d8a\u5927</p> </li> <li> <p>\u5956\u52b1\u8303\u56f4\u88ab\u9650\u5236\u5728[-10.0, 0.0]</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#_1","title":"\u7efc\u5408\u6982\u62ec","text":"<p>\u8fd9\u4e9breward\u51fd\u6570\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u5168\u9762\u7684\u5956\u52b1\u7cfb\u7edf\uff0c\u7528\u4e8e\u8bad\u7ec3\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\uff1a</p> <ol> <li> <p>\u5b89\u5168\u6027\uff1a\u901a\u8fc7<code>oc_reward</code>\u3001<code>rbc_reward</code>\u3001<code>slbc_reward</code>\u548c<code>dlbc_reward</code>\u907f\u514d\u78b0\u649e</p> </li> <li> <p>\u8212\u9002\u6027\uff1a\u901a\u8fc7<code>acc_reward</code>\u548c<code>jerk_reward</code>\u9650\u5236\u8fc7\u5927\u7684\u52a0\u901f\u5ea6\u548c\u52a0\u52a0\u901f\u5ea6</p> </li> <li> <p>\u6548\u7387\u6027\uff1a\u901a\u8fc7<code>efficiency_reward</code>\u548c<code>cruise_fast_than_gt_reward</code>\u9f13\u52b1\u9ad8\u6548\u884c\u9a76</p> </li> <li> <p>\u89c4\u8303\u6027\uff1a\u901a\u8fc7<code>deviation_lp_reward</code>\u548c<code>deviation_lc_reward</code>\u9f13\u52b1\u8f66\u8f86\u5728\u8f66\u9053\u5185\u5c45\u4e2d\u884c\u9a76</p> </li> <li> <p>\u76f8\u4f3c\u6027\uff1a\u901a\u8fc7<code>traj_diff_reward</code>\u9f13\u52b1\u751f\u6210\u7684\u8f68\u8ff9\u4e0e\u4e13\u5bb6\u8f68\u8ff9\u76f8\u4f3c</p> </li> </ol> <p>\u6240\u6709\u8fd9\u4e9breward\u51fd\u6570\u90fd\u4e0e<code>sample_collide_within_gt_mask</code>\u76f8\u4e58\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u8fc7\u6ee4\u90a3\u4e9b\u5728ground truth\u8f68\u8ff9\u4e2d\u5df2\u7ecf\u53d1\u751f\u78b0\u649e\u7684\u6837\u672c\u7684\u63a9\u7801\uff0c\u786e\u4fdd\u6a21\u578b\u4e0d\u4f1a\u56e0\u4e3a\u907f\u514d\u4e0d\u53ef\u907f\u514d\u7684\u78b0\u649e\u800c\u53d7\u5230\u60e9\u7f5a\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#2-iltrick","title":"2 IL\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684trick","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#21","title":"2.1 \u68af\u5ea6\u5206\u6790","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#_2","title":"\u80cc\u666f","text":"<ul> <li>\u76ee\u524dEBM DLP\u6a21\u578b\u9700\u8981\u652f\u6301\u7684\u573a\u666f\u3001\u4efb\u52a1\u975e\u5e38\u591a\u3002</li> <li>\u4e0d\u540c\u573a\u666f\u7684\u6570\u636e\u3001\u4e0d\u540c\u4efb\u52a1\u7684Loss function\u5f7c\u6b64\u4e4b\u95f4\u4f1a\u975e\u5e38\u6df1\u8fdc\u7684\u5f71\u54cd\u3002</li> <li>\u5e0c\u671b\u6709\u4e2a\u4e00\u4e2a\u65b9\u6cd5\u80fd\u591f\u91cf\u5316\u5404\u7ec4&lt;\u573a\u666f-\u4efb\u52a1&gt;\u4e4b\u95f4\u7684\u51b2\u7a81\u7a0b\u5ea6\uff0c\u7528\u4e8e\u6307\u5bfc\u8bad\u7ec3\u7b56\u7565\u3001\u6570\u636e\u914d\u6bd4\u7684\u4fee\u6539\u3001\u810f\u6570\u636e\u7684\u6392\u67e5\u3001\u6a21\u578b\u7ed3\u6784\u7684\u8c03\u6574\u3002</li> <li>\u76ee\u524d\u53d1\u7248\u5de1\u822a\u6307\u6807\u4e0d\u51c6\u51fa\u7684\u6982\u7387\u8f83\u5927\uff0c\u539f\u56e0\u4e5f\u4e0d\u662f\u7279\u522b\u6e05\u695a\uff0c\u6240\u4ee5\u5148\u4ee5\u5de1\u822a\u6307\u6807\u4f5c\u4e3a\u6700\u5c0f\u95ed\u73af\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#_3","title":"\u65b9\u6cd5","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#_4","title":"\u63a2\u9488\u68af\u5ea6\u8bbe\u8ba1","text":"<ol> <li> <p>\u8bbe\u8ba1\u4e00\u4e2a\u8bad\u7ec3\u914d\u7f6e\uff0c\u80fd\u591f\u8ba9\u6a21\u578b\u5728\u76ee\u6807\u573a\u666f\u7684MCT\u6307\u6807\u4e0a\u7a33\u5b9a\u53d8\u597d\u3002</p> </li> <li> <p>\u7136\u540e\u56fa\u5b9a\u6a21\u578b\u6743\u91cd\uff0c\u7edf\u8ba1\u591a\u4e2abatch\u7684\u6837\u672c\u6570\u636e\uff0c\u5c06\u5e73\u5747\u540e\u7684\u68af\u5ea6\u4fdd\u7559\u4e0b\u6765\u4f5c\u4e3a\u63a2\u9488\u68af\u5ea6\u3002</p> </li> <li> <p>\u8fd9\u4e2a\u68af\u5ea6\u7684\u65b9\u5411\uff0c\u5c31\u53ef\u4ee5\u5728\u5f53\u524d\u7684\u6743\u91cd\u4e0b\u88ab\u8ba4\u4e3a\u662f\u5bf9\u76ee\u6807\u573a\u666f\u4f18\u5316\u6709\u5229\u7684\u65b9\u5411\u3002</p> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#_5","title":"\u91c7\u6837\u68af\u5ea6\u8bbe\u8ba1","text":"<ol> <li> <p>\u627e\u5230\u63a2\u9488\u68af\u5ea6\u540e\uff0c\u57fa\u4e8e\u540c\u6837\u7684\u6a21\u578b\u6743\u91cd\uff0c\u4ee5\u53ca\u6548\u679c\u4e0d\u7b26\u5408\u9884\u671f\u7684\u8bad\u7ec3\u914d\u7f6e\uff0c\u5bf9\u8bad\u7ec3\u7684\u6837\u672c\u8fdb\u884c\u904d\u5386</p> </li> <li> <p>\u6bcf\u4e2a\u6837\u672c\u53cd\u4f20\u5f97\u5230\u7684\u68af\u5ea6\u5373\u4e3a\u91c7\u6837\u68af\u5ea6\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u91c7\u6837\u68af\u5ea6\u548c\u63a2\u9488\u68af\u5ea6\u8fdb\u884cmetric\u8ba1\u7b97\u3002</p> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#metric","title":"Metric\u8bbe\u8ba1","text":"<ol> <li>cosine_similarity\uff1a\u7528\u4e8e\u91cf\u5316\u91c7\u6837\u68af\u5ea6\u548c\u63a2\u9488\u68af\u5ea6\u4f18\u5316\u65b9\u5411\u7684\u5dee\u5f02\u3002</li> <li>gradient_dot_product\uff1a\u7528\u4e8e\u91cf\u5316\u5b9e\u9645\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u63a2\u9488\u68af\u5ea6\u5e72\u6270\u7684\u7684\u4e25\u91cd\u7a0b\u5ea6\u3002\u76f8\u6bd4\u4e8ecosine_similarity\uff0c\u989d\u5916\u8003\u8651\u4e86\u91c7\u6837\u68af\u5ea6\u7684\u6a21\u957f\u3002</li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#_6","title":"\u622a\u81f3\u76ee\u524d\u89c2\u5bdf\u5230\u7684\u73b0\u8c61/\u7ed3\u8bba","text":"<p>\u5206\u6790top cosine_similarity\u3001gradient_dot_product\u540e</p> <ol> <li>\u53d1\u73b0top case\u5927\u591a\u5bf9\u4e8e\u5de1\u822a\u800c\u8a00\u662f\u810f\u6570\u636e\u3002</li> <li>\u5b9a\u4f4d\u53d1\u73b0\u5230\u4e86DLP\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u81ea\u52a8\u6570\u636e\u7684dlp_loss\u6ca1\u6709\u88ab\u6b63\u786emask\u7684bug\uff0c\u76ee\u524d\u5df2\u7ecf\u4fee\u590d\u3002</li> <li>\u5b9a\u4f4d\u53d1\u73b0\u4e86\u8f85\u52a9\u76d1\u7763\u7684loss\uff0c\u5b58\u5728\u68af\u5ea6\u8fc7\u5927\u7684\u95ee\u9898\uff0c\u76ee\u524d\u5df2\u7ecf\u4fee\u590d\u3002</li> <li>\u5b9a\u4f4d\u53d1\u73b0\u4e86DLP\u8bad\u7ec3\u6570\u636e\u4e2d\u76f8\u5f53\u4e00\u90e8\u5206\u6570\u636e\u672a\u7ecf\u8fc7\u5de1\u822a\u810f\u6570\u636e\u6e05\u6d17\uff0c\u76ee\u524d\u5df2\u7ecf\u4fee\u590d\uff0c\u5bf9\u5de1\u822a\u6307\u6807\u6709\u660e\u663e\u6539\u5584\u3002</li> <li>\u5b9a\u4f4d\u53d1\u73b0\u4e86cruise_base\u6570\u636e\u96c6\u53ef\u80fd\u5bf9\u5de1\u822a\u6b63\u5411\u7684\u4f5c\u7528\u6709\u9650\uff0c\u76ee\u524d\u66ff\u6362\u6210cruise_cruise\u6570\u636e\uff0c\u5bf9\u5de1\u822a\u6307\u6807\u6709\u660e\u663e\u6539\u5584\u3002</li> <li>\u5b9a\u4f4d\u53d1\u73b0\u4e86\u7ecf\u8fc7\u810f\u6570\u636e\u6e05\u6d17\u7684\u6570\u636e\u4ecd\u65e7\u5b58\u5728\u810f\u6570\u636e\u7684\u60c5\u51b5\uff0c\u76ee\u524d\u5df2\u7ecf\u53cd\u9988\u7ed9cruise\u7684\u76f8\u5173\u540c\u5b66\u3002</li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E7%AB%AF%E5%88%B0%E7%AB%AF%20know%20how/#22","title":"2.2 \u4e0d\u540c\u8f66\u578b\u4e0a\u4e0d\u5408\u7406\u4f4e\u901f\u7684\u89e3\u51b3\u65b9\u6cd5","text":"<ol> <li>\u5185\u53c2aug\uff0c\u968f\u673acrop\u56fe\u7247\uff0c\u5e76\u5bf9\u5185\u53c2\u505a\u5bf9\u5e94\u8c03\u6574\uff1b\u5bf9\u7578\u53d8\u7cfb\u6570\u52a0\u9ad8\u65af\u566a\u58f0\uff0caug\u7684\u5e45\u5ea6\u57285%\u5de6\u53f3\u6700\u597d\uff0c20%\u592a\u5927\u4e86\u3002</li> <li>\u52a0\u4e0d\u540c\u8f66\u578b\u7684\u6570\u636e\uff0c\u4e0d\u540c\u8f66\u578b\u4e0a\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u4e0d\u5408\u7406\u4f4e\u901f\u8868\u73b0\u7684\u6838\u5fc3\u539f\u56e0\u662f\u56e0\u4e3a\u6570\u636e\u51fa\u5206\u5e03\u4e86\uff0c\u7531\u4e8e\u6ca1\u6709\u5bf9\u5e94\u8f66\u578b\u7684\u8bad\u7ec3\u6570\u636e\u5bfc\u81f4\uff0c\u6ca1\u6709\u89c1\u8fc7\u5bf9\u5e94\u7684\u56fe\u50cf\uff0c\u5c31\u4f1a\u4f4e\u901f\u3002\u89e3\u51b3\u7684\u65b9\u6cd5\u5c31\u662f\u52a0\u4e0d\u540c\u8f66\u578b\u7684\u6570\u636e\uff0c\u8f85\u4ee5\u4e0d\u540c\u7684\u5185\u53c2\u548c\u5916\u53c2\uff0c\u8ba9\u6a21\u578b\u5b66\u4f1a\u5229\u7528\u5185\u5916\u60e8\u6765\u51fa\u8f68\u8ff9\u3002\uff08\u5982\u679c\u53ea\u6709\u5355\u4e00\u8f66\u578b\uff0c\u6a21\u578b\u53ef\u80fd\u5b66\u4e0d\u4f1a\u5229\u7528\u5185\u5916\u60e8\uff09</li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/","title":"\u89c4\u5212\u7684\u4e00\u4e9b\u611f\u60f3","text":"<p>\u672c\u4eba\u5728\u7814\u7a76\u65f6\u5bf9\u4e8e\u89c4\u5212\u7684\u4e00\u4e9b\u611f\u609f</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#1","title":"1.\u89c4\u5212\u7684\u914d\u7f6e\u7a7a\u95f4\uff1a","text":"<p>\u5bf9\u4e8e\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u6765\u8bb2\uff0c\u6700\u7b80\u5355\u7684\u4f4d\u5f62\u63cf\u8ff0\u9700\u8981\u4f7f\u75283\u4e2a\u53d8\u91cf\uff1a\u8f66\u8f86\u67d0\u4e2a\u53c2\u7167\u70b9\u7684\u5750\u6807(x, y)\uff0c\u4ee5\u53ca\u8f66\u8f86\u7684\u671d\u5411\u03b8\u6765\u8868\u8fbe\u8f66\u8f86\u7684\u6784\u578b\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u53c2\u8003\u6587\u732e\u4e2d\uff0c\u5bf9\u4e8e\u975e\u548c\u8c10\u8f66\u8f86\u7cfb\u7edf\u7684\u4f4d\u5f62\u8868\u8fbe\u65b9\u5f0f\u3002\u5bf9\u4e8e\u6211\u4eec\u4e13\u95e8\u4e3a\u6709\u4eba\u4e58\u7528\u7684\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u4f5c\u8f68\u8ff9\u89c4\u5212\u7684\u95ee\u9898\u6765\u8bb2\uff0c\u66f4\u597d\u7684\u4f4d\u5f62\u7ec4\u6210\u5728\u4e0a\u9762\u76843\u4e2a\u53d8\u91cf\u57fa\u7840\u4e0a\u52a0\u5165\u8f66\u8f86\u7684\u5373\u65f6\u8f6c\u5411\u66f2\u7387\u03ba\uff1a\u5982\u679c\u8f66\u8f86\u7684\u5bfc\u5411\u8f6e\u4fdd\u6301\u4e00\u5b9a\u7684\u89d2\u5ea6\uff0c\u8f66\u8f86\u4f1a\u505a\u5706\u5468\u8fd0\u52a8\u3002\u8fd9\u4e2a\u5706\u5468\u8fd0\u52a8\u7684\u534a\u5f84\u5c31\u662f\u5373\u65f6\u8f6c\u5411\u66f2\u7387 \u03ba\u3002\u52a0\u5165\u03ba\uff0c\u6709\u52a9\u4e8e\u63a7\u5236\u6a21\u5757\u83b7\u5f97\u66f4\u51c6\u786e\u7684\u63a7\u5236\u53cd\u9988\uff0c\u8bbe\u8ba1\u66f4\u4e3a\u7cbe\u7ec6\u5e73\u7a33\u7684\u63a7\u5236\u5668</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#2","title":"2.\u8f68\u8ff9\u89c4\u5212\u95ee\u9898\u7684\u96be\u70b9","text":"<ul> <li>\u9884\u6d4b\u7684\u4e0d\u786e\u5b9a\u6027</li> <li>\u6c42\u89e3\u7a7a\u95f4\u7684\u975e\u51f8\u6027\u3001\u9ad8\u7ef4\u3001\u975e\u7ebf\u6027\u7ea6\u675f\u3002</li> <li>\u9ad8\u9891</li> </ul> <p>\u8f68\u8ff9\u89c4\u5212\u662f\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff0c\u9996\u5148\uff0c\u89c4\u5212\u4e0a\u52a0\u5165\u4e86\u901f\u5ea6\u4e0e\u65f6\u95f4\u7684\u4fe1\u606f\uff0c\u589e\u52a0\u4e86\u89c4\u5212\u7684\u7ef4\u5ea6\u3002\u5176\u6b21\uff0c\u7531\u4e8e\u8f66\u8f86\u662f\u975e\u548c\u8c10\u7cfb\u7edf\uff0c\u5177\u6709\u7279\u6b8a\u7684\u8fd0\u52a8\u5b66\u7ea6\u675f\u6761\u4ef6\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8f66\u8f86\u4e0d\u80fd\u72ec\u7acb\u7684\u6a2a\u5411\u79fb\u52a8\uff0c\u9700\u8981\u7eb5\u5411\u79fb\u52a8\u7684\u540c\u65f6\u624d\u80fd\u83b7\u5f97\u6a2a\u5411\u504f\u79fb\u3002\u8eb2\u907f\u969c\u788d\u7269\uff0c\u7279\u522b\u662f\u9ad8\u901f\u52a8\u6001\u969c\u788d\u7269\uff0c\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u56f0\u96be\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u642d\u8f7d\u4e58\u5ba2\u7684\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u6765\u8bf4\uff0c\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u8981\u6c42\uff08\u5728\u672c\u4eba\u770b\u6765\u53ef\u80fd\u662f\u6700\u91cd\u8981\u7684\uff09\u662f\u8212\u9002\u6027\uff0c\u89c4\u5212\u51fa\u7684\u8f68\u8ff9\u5fc5\u987b\u505a\u5230\u5e73\u6ed1\uff0c\u5c06\u5f71\u54cd\u4e58\u5ba2\u8212\u9002\u5ea6\u7684\u56e0\u7d20\uff0c\u6bd4\u5982\u52a0\u901f\u5ea6\uff0c\u5411\u5fc3\u52a0\u901f\u5ea6\u7b49\u7b49\uff0c\u4fdd\u6301\u5728\u80fd\u591f\u5bb9\u5fcd\u7684\u8303\u56f4\u3002</p> <p>\u53e6\u5916\uff0c\u5bf9\u4e8e\u65e0\u4eba\u9a7e \u9a76\u8f66\u8f86\u6765\u8bb2\uff0c\u4e3a\u4e86\u5904\u7406\u591a\u53d8\u7684\u884c\u8f66\u73af\u5883\uff0c\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u9700\u8981\u4ee5\u77ed\u5468\u671f\u9ad8\u9891\u7387\u8fd0\u884c\uff0c\u5bf9\u7b97\u6cd5\u7684\u8ba1\u7b97\u6548\u7387\u4e5f\u63d0\u51fa\u4e86\u8981\u6c42\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#3","title":"3.\u8f68\u8ff9\u89c4\u5212\u7b56\u7565","text":"<p>\u5728 Apollo \u5e73\u53f0\u4e2d\uff0c\u4e3a\u4e86\u89e3\u51b3\u89c4\u5212\u95ee\u9898\uff0c\u5c24\u5176\u662f\u4ece\u964d\u4f4e\u8ba1\u7b97\u7684\u590d\u6742\u6027\u4e0a\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u5bf9\u8f68\u8ff9\u7684\u8def\u5f84\u4e0e\u901f\u5ea6\u89c4\u5212\u5206\u79bb\u7684\u65b9\u5f0f\u3002\u5373\u5148\u786e\u5b9a\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u8f68\u8ff9\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u7136\u540e\u5728\u5df2\u77e5\u8def\u5f84\u7684\u57fa\u7840\u4e0a\uff0c\u8ba1\u7b97\u901f\u5ea6\u5206\u914d\u3002\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u8f68\u8ff9\u89c4\u5212\u95ee\u9898\uff0c\u8f6c\u6362\u6210\u4e86\u4e24\u4e2a\u987a\u5e8f\u8ba1\u7b97\u7684\u4f4e\u7ef4\u5ea6\u89c4\u5212\u95ee\u9898\uff1a\u8def\u5f84\u89c4\u5212\uff0c\u501f\u52a9\u4e2d\u95f4\u53d8\u91cf\u8def\u5f84\u7684\u7d2f\u8ba1\u957f\u5ea6 s\uff0c\u5148\u6c42\u89e3 s \u6620\u5c04\u5230\u51e0\u4f55\u5f62\u72b6(x, y, \u03b8, \u03ba)\u7684\u8def\u5f84\u51fd\u6570\uff1b\u901f\u5ea6\u89c4\u5212\uff0c\u518d\u6c42\u89e3\u65f6\u95f4 t\uff0c\u6620\u5c04\u5230\u4e2d\u95f4\u53d8\u91cf s,\u4e0e v\uff0ca \u7684\u901f\u5ea6\u51fd\u6570\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#4","title":"4.\u8def\u5f84\u89c4\u5212\u7684\u76ee\u6807","text":"<p>\u524d\u9762\u63d0\u5230 Apollo \u8f68\u8ff9\u89c4\u5212\u7684\u7b56\u7565\uff0c\u6211\u4eec\u5148\u770b\u8def\u5f84\u89c4\u5212\u5728\u8fd9\u79cd\u7b56\u7565\u4e0b\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff1a</p> <p>\u8def\u5f84\u9700\u8981\u6709\u8db3\u591f\u7684\u7075\u6d3b\u5ea6\uff0c\u7528\u6765\u5bf9\u590d\u6742\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u969c\u788d\u7269\u8fdb\u884c\u907f\u8ba9\u3002 \u8def\u5f84\u7684\u51e0\u4f55\u7279\u6027\u9700\u8981\u5e73\u987a\u53d8\u5316\uff0c\u8fd9\u6837\u8f66\u8f86\u5728\u6cbf\u8def\u5f84\u884c\u9a76\u65f6\u624d\u80fd\u591f\u4fdd\u8bc1\u8212\u9002\u6027\u3002 \u8def\u5f84\u7684\u89c4\u5212\u9700\u8981\u9075\u5b88\u8f66\u8f86\u7684\u8fd0\u52a8\u5b66\u9650\u5236\u6761\u4ef6\uff0c\u6bd4\u5982\uff0c\u8def\u5f84\u7684\u66f2\u7387\u3001\u66f2\u7387\u53d8\u5316\u7387\u9700\u8981\u9650\u5236\u5728\u7b26\u5408\u76ee\u6807\u8f66\u8f86\u5c5e\u6027\u7684\u8303\u56f4\u4e4b\u5185\u3002</p> <p>\u7531\u4e8e\u6211\u4eec\u5728 Apollo \u5e73\u53f0\u4e2d\u91c7\u7528\u4e86\u8def\u5f84/\u901f\u5ea6\u5206\u79bb\u7684\u7b56\u7565\uff0c\u5728\u8def\u5f84\u89c4\u5212\u65f6\u4e5f\u9700\u8981\u8003\u8651\u5230\u5f53\u524d\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001\u800c\u9002\u5f53\u7684\u8c03\u6574\u8f66\u8f86\u7684\u51e0\u4f55\u5f62\u72b6\u3002\u6bd4\u5982\u5728\u505a\u8f83\u5927\u7684\u6a2a\u5411\u8fd0\u52a8\u7684\u65f6\u5019\uff0c\u4f4e\u901f\u548c\u9ad8\u901f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u540c\u7684\u51e0\u4f55\u5f62\u72b6\u6765\u4fdd\u8bc1\u6a2a\u5411\u8fd0\u52a8\u7684\u8212\u9002\u6027\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#5","title":"5.\u8def\u5f84\u89c4\u5212\u65b9\u6cd5","text":"<p>\u5728\u8def\u5f84\u89c4\u5212\u4e2d\uff0c\u6211\u4eec\u501f\u52a9\u4e8e\u5f17\u83b1\u7eb3\uff08frenet\uff09\u5750\u6807\u7cfb\uff0c\u5c06\u5f53\u524d\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001(x, y, \u03b8, \u03ba, v, a)\u505a\u5206\u89e3\u3002\u4f7f\u7528\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u7684\u524d\u63d0\u662f\u5177\u6709\u4e00\u6761\u5149\u6ed1\u7684\u6307\u5f15\u7ebf\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6307\u5f15\u7ebf\u7406\u89e3\u4e3a\u9053\u8def\u4e2d\u5fc3\u7ebf\uff0c\u8f66\u8f86\u5728\u6ca1\u6709\u969c\u788d\u7269\u60c5\u51b5\u4e0b\u7684\u7406\u60f3\u8fd0\u52a8\u8def\u5f84\u3002\u6211\u4eec\u8fd9\u91cc\u7684\u5149\u6ed1\u7684\u6307\u5f15\u7ebf\u662f\u6307\u6307\u5f15\u7ebf\u7684\u51e0\u4f55\u5c5e\u6027\u53ef\u4ee5\u5230\u66f2\u7387\u7ea7\u522b\u7684\u5149\u6ed1\uff08\u66f2\u7387\u53ef\u5bfc\uff09\u3002\u6307\u5f15\u7ebf\u7684\u5149\u6ed1\u6027\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5176\u76f4\u63a5\u51b3\u5b9a\u4e86\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\u6c42\u5f97\u8f68\u8ff9\u7684\u5e73\u987a\u6027\u3002\u5728 Apollo \u5e73\u53f0\u4e0a\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u591a\u79cd\u5e73\u6ed1\u6307\u5f15\u7ebf\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5728\u4eca\u5929\u7684\u5206\u4eab\u4e2d\u5c31\u4e0d\u5c55\u5f00\u4ecb\u7ecd\u4e86\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u8bf7\u67e5\u9605\u76f8\u5173\u4ee3\u7801\uff08\u6216\u8005\u6211\u4eec\u518d\u8fdb\u884c\u4e00\u6b21\u4ee5\u6307\u5f15\u7ebf\u4e3a\u4e3b\u9898\u7684\u5206\u4eab\u3002</p> <p>\u5728\u7ed9\u5b9a\u4e00\u6761\u5149\u6ed1\u6307\u5f15\u7ebf\u4e0a\uff0c\u6211\u4eec\u6309\u7167\u8f66\u8f86\u4f4d\u7f6e\uff0c\u5c06\u5176\u6295\u5f71\u5230\u6307\u5f15\u7ebf\u4e0a\uff0c\u4ee5\u6295\u5c04\u70b9\u4e3a\u57fa\u7840\uff0c\u5c06\u5730\u56fe\u5750\u6807\u7cfb\u4e0b\u5f53\u524d\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001(x, y, \u03b8, \u03ba, v, a)\u8fdb\u884c\u5206\u89e3\uff0c\u83b7\u5f97\u6cbf\u7740\u6307\u5f15\u7ebf\u65b9\u5411\u7684\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\uff0c\u4ee5\u53ca\u76f8\u5bf9\u4e8e\u6307\u5f15\u7ebf\u8fd0\u52a8\u7684\u4f4d\u7f6e\uff0c \u201c\u901f\u5ea6\u201d\uff0c \u201c\u52a0\u901f\u5ea6\u201d\u3002\u8fd9\u91cc\u6253\u5f15\u53f7\u7684\u539f\u56e0\u662f\u6a2a\u5411\u7684\u201c\u901f\u5ea6\u201d\u3001\u201c\u52a0\u901f\u5ea6\u201d\u5e76\u975e\u901a\u5e38\u610f\u4e49\u4e0a\u4f4d\u79fb\u5bf9\u65f6\u95f4\u7684\u4e00\u9636/\u4e8c\u9636\u5bfc\u6570\uff0c\u800c\u662f\u6a2a\u5411\u4f4d\u79fb\u5bf9\u7eb5\u5411\u4f4d\u79fb\u7684\u4e00\u9636/\u4e8c\u9636\u5bfc\u6570\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u51e0\u4f55\u5f62\u72b6\u7684\u53d8\u5316\u8d8b\u52bf\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#6-frenet","title":"6 frenet\u5750\u6807\u7cfb\u7684\u4f18\u7f3a\u70b9","text":"<p>\u4f18\u70b9\uff1a - \u80fd\u591f\u628a\u4e00\u4e9b\u975e\u51f8\u7684\u9053\u8def\u89e3\u7a7a\u95f4\u8f6c\u6210\u51f8\u7684\uff08\u6bd4\u5982\u5341\u5b57\u8def\u53e3\uff0cT\u5b57\u8def\u53e3\u5c31\u662f\u975e\u51f8\u7684\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e9b\u975e\u7ebf\u6027\u7684\u7ea6\u675f\u53ef\u4ee5\u8f6c\u6210\u7ebf\u6027\u7ea6\u675f\u3002\u4ece\u800c\u80fd\u591f\u5f88\u597d\u7684\u628a\u95ee\u9898formulation\u6210\u51f8\u4f18\u5316\u95ee\u9898\u751a\u81f3\u662fQP\u95ee\u9898\uff0c\u6709\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u6c42\u89e3\u66f4\u7a33\u5b9a\u3002\u91c7\u7528\u4e00\u4e9b\u6bd4\u8f83\u6210\u719f\u7684\u6c42\u89e3\u5668\u6c42\u89e3\uff0c\u6548\u7387\u66f4\u9ad8\u3002 - \u66f4\u91cd\u8981\u7684\u662f\uff0c\u53ef\u4ee5\u628a\u4e00\u4e2a\u4e09\u7ef4\u7684\uff08x,y,t\uff09\u95ee\u9898\u8f6c\u5316\u4e3a\u4e24\u4e2a\u4e8c\u7ef4\u7684(s,l),(s,t)\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\uff0c\u80fd\u591f\u7b80\u5316\u95ee\u9898\uff0c\u4f7f\u8f68\u8ff9\u89c4\u5212\u95ee\u9898\u7684\u5b9e\u65f6\u6027\u66f4\u9ad8\u3002</p> <p>\u7f3a\u70b9\uff1a - \u5927\u66f2\u7387\u4e0b\u53ef\u80fd\u6295\u5f71\u4e0d\u552f\u4e00 - \u5f88\u96be\u5efa\u6a21\u8f66\u8f86\u7684\u52a8\u529b\u5b66\uff08\u81ea\u884c\u8f66\u6a21\u578b\u4e0d\u518d\u6210\u7acb\uff09 - frenet\u9700\u8981\u628a\u81ea\u8f66\u548c\u969c\u788d\u7269\u90fd\u6295\u5f71\u5230frenet\u4e0b\uff0c\u53ef\u80fd\u9020\u6210\u5f62\u72b6\u7684\u5931\u771f\u3002 - Frenet\u9ad8\u7cbe\u5ea6\u5750\u6807\u8f6c\u5316\u9700\u8981\u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\uff0c\u5426\u5219\u5c31\u53ef\u80fd\u5b58\u5728\u5398\u7c73\u7ea7\u8bef\u5dee\uff0c\u8fd9\u4f1a\u88ab\u57ce\u5e02\u573a\u666f\u4e2d\u7684\u51b3\u7b56\u5224\u65ad\u653e\u5927\u3002\u5728Frenet\u4e0b\u7684\u969c\u788d\u7269\u7b5b\u9009\u4e5f\u6ca1\u6709XY\u4e0b\u7cbe\u5ea6\u9ad8\uff0c\u4e3a\u4e86\u5b89\u5168\uff0c\u53ea\u80fd\u63d0\u9ad8\u5197\u4f59\u91cf\uff0c\u727a\u7272\u51b3\u7b56\u5224\u65ad\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#61-lattice","title":"6.1 lattice","text":"<p>lattic\u4e00\u822c\u662f\u5728frenet\u4e0b\u7684 - \u81ea\u5df1\u6709\u5e78\u4f7f\u7528Lattice\u7b97\u6cd5\u505a\u8fc7\u91cf\u4ea7\uff0c\u53d1\u73b0\u8be5\u7b97\u6cd5\u4ece\u7406\u8bba\u4e0a\u8bb2\u5c31\u81f3\u5c11\u67093\u4e2a\u7406\u8bba\u7f3a\u9677\u3002\u8be5\u7b97\u6cd5\u4e0a\u624b\u5feb\uff0c\u4f46\u662f\u540e\u671f\u6027\u80fd\u63d0\u5347\u548c\u6cdb\u5316\u80fd\u529b\u5f88\u5dee\u3002\u5bf9\u4e8e\u8f68\u8ff9\u751f\u6210\uff0c\u6211\u8ba4\u4e3a\u5728XY\u5750\u6807\u7cfb\u4e0b\uff0c\u57fa\u4e8e\u8f66\u8f86\u8fd0\u52a8\u5b66\u6216\u518d\u52a0\u52a8\u529b\u5b66\u5f97\u5230\u8f68\u8ff9\u7684\u65b9\u6cd5\u66f4\u4f18\u3002\u901a\u8fc7\u51cf\u5c11\u6c42\u89e3\u4fe1\u606f\uff0c\u8fbe\u5230\u51cf\u5c11\u8017\u65f6\uff0c\u63d0\u9ad8\u9650\u5b9a\u65f6\u95f4\u5185\u6210\u529f\u6c42\u89e3\u7684\u6982\u7387\uff1b\u51cf\u5c11\u5750\u6807\u7cfb\u8f6c\u6362\u5e26\u6765\u7684\u635f\u5931\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#7","title":"7 \u78b0\u649e\u68c0\u6d4b","text":"<p>\u78b0\u649e\u68c0\u6d4b\u4e00\u822c\u5206\u4e3a\u7c97\u68c0\u6d4b\u548c\u7cbe\u786e\u68c0\u6d4b\uff1a\u7c97\u68c0\u6d4b\u9636\u6bb5\u4e3b\u8981\u662f\u4e3a\u4e86\u7b5b\u9009\u51fa\u6ca1\u6709\u78b0\u649e\u53ef\u80fd\u7684\u7269\u4f53\uff0c\u800c\u9009\u62e9\u51fa\u975e\u5e38\u6709\u53ef\u80fd\u53d1\u751f\u78b0\u649e\u7684\u7269\u4f53\uff0c\u800c\u7cbe\u786e\u68c0\u6d4b\u9636\u6bb5\u63a5\u7740\u4e0a\u4e00\u6b65\u8fdb\u884c\u66f4\u52a0\u7cbe\u786e\u7684\u68c0\u6d4b\uff0c\u6700\u7ec8\u786e\u5b9a\u7269\u4f53\u662f\u5426\u6709\u78b0\u649e\u3002</p> <p>\u78b0\u649e\u68c0\u6d4b\u5206\u4e3a\u4e24\u5927\u7c7b\u505a\u6cd5\uff1a - box\u4e0ebox\u7684\u78b0\u649e\u68c0\u6d4b\uff1a\u4e0d\u7b80\u5316\u8f66\u8f86\u7684\u5f62\u72b6\uff0c\u8fd8\u662f\u8ba4\u4e3a\u662f\u77e9\u5f62\uff08\u7c97\u68c0\u6d4b\u548c\u7cbe\u786e\u68c0\u6d4b\uff09 - box\u4e0e\u70b9\u7684\u78b0\u649e\u68c0\u6d4b\uff1a\u628a\u8f66\u8f86\u75282-3\u4e2a\u5706\u5305\u56f4\u8d77\u6765\uff0c\u7136\u540e\u68c0\u6d4b\u4e24\u4e2a\u5706\u5fc3\u7684\u8ddd\u79bb\u3002</p> <p>\u52062\u4e2a\u9636\u6bb5\u7684\u597d\u5904\u4e3b\u8981\u662f\u4e3a\u4e86\u51cf\u5c11\u8fd0\u7b97\u91cf\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#71-aabb-box","title":"7.1 \u7c97\u68c0\u6d4b\uff08AABB-BOX\uff09","text":"<p>AABB\u7684\u8fd1\u4f3c\u8fc7\u4e8e\u7c97\u7cd9\uff08\u68c0\u6d4b\u5230\u53d1\u751f\u78b0\u649e\uff0c\u5b9e\u9645\u6ca1\u6709\u53d1\u751f\u78b0\u649e\uff09\uff0c\u4f46\u662f\u8ba1\u7b97\u901f\u5ea6\u5f88\u5feb\uff0c\u53ef\u4ee5\u901a\u8fc7AABB\u68c0\u6d4b\u5feb\u901f\u7684\u7b5b\u9009\u6389\u6ca1\u6709\u53d1\u751f\u78b0\u649e\u7684\u969c\u788d\u7269\u3002\u627e\u5230\u53ef\u80fd\u53d1\u751f\u78b0\u649e\u7684\u969c\u788d\u7269\uff0c\u7136\u540e\u505a\u66f4\u7cbe\u7ec6\u7684\u68c0\u6d4b\u3002\u5982\u679c\u8981\u5224\u65adn\u4e2a\u7269\u4f53\u662f\u5426\u53d1\u751f\u78b0\u649e\uff0c\u9700\u8981\u68c0\u6d4b\\(c_n^2\\)</p> <p>\u7c97\u68c0\u6d4b\u9636\u6bb5\u4e3b\u8981\u662f\u7ed3\u5408\u4ee5\u4e0b3\u79cd\u65b9\u6cd5\uff1a - \u5bf9\u7269\u4f53\u6a21\u578b\u505a\u7b80\u5316\uff0c\u4e00\u822c\u662f\u91c7\u7528\u5305\u56f4\u76d2 - \u5bf9\u7a7a\u95f4\u505a\u7d22\u5f15\uff0c\u7b5b\u9664\u6389\u4e0d\u5fc5\u8981\u7684\u68c0\u6d4b - Sweep and Prune</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#711","title":"7.1.1 \u5305\u56f4\u76d2","text":"<p>\uff081\uff09AABB-box AABB-box\u7b80\u5355\u70b9\u8bf4\u5c31\u662f\u5782\u76f4\u4e8e\u5750\u6807\u8f74\u7684\u5305\u56f4\u76d2\uff0c\u641e\u8fc7\u7269\u4f53\u8bc6\u522b\u7684\u6807\u6ce8\u7684\u7ae5\u978b\u90fd\u77e5\u9053\uff0c\u8fd9\u79cd\u5305\u56f4\u76d2\u4e0d\u4f1a\u65cb\u8f6c\uff08\u5f53\u7269\u4f53\u65cb\u8f6c\u7684\u65f6\u5019\uff0c\u5c31\u7528\u66f4\u5927\u7684\u5305\u56f4\u76d2\u53bb\u5305\u56f4\u5b83\uff09\uff0c\u56e0\u6b64\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002</p> <p> \u53ef\u4ee5\u770b\u5230AABB-box\u5728\u7269\u4f53\u65cb\u8f6c\u4e4b\u540e\uff0c\u8fd8\u662f\u5e73\u884c\u4e8e\u6a2a\u7eb5\u5750\u6807\u6ca1\u6709\u53d1\u751f\u65cb\u8f6c\uff0c\u4e3a\u4e86\u7ee7\u7eed\u5305\u56f4\u4f4f\u5c0f\u8f66\uff0c\u5927\u5c0f\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> <p>\uff082\uff09\u4e0eAABB-box\u5bf9\u5e94\u7684\u662fOBB-box, OBB-box\u4f1a\u8ddf\u7740\u7269\u4f53\u7684\u671d\u5411\u4e00\u8d77\u65cb\u8f6c\uff0c\u800c\u5927\u5c0f\u4e0d\u4f1a\u6539\u53d8\uff0c\u76f8\u5bf9\u6765\u8bf4\u6bd4AABB-box\u66f4\u52a0\u51c6\u786e\uff0c\u4f46\u662f\u68c0\u6d4b\u78b0\u649e\u7684\u8fd0\u7b97\u91cf\u4f1a\u6bd4AABB-box\u5927\u4e00\u70b9\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u91c7\u7528\u5305\u56f4\u76d2\u4e4b\u540e\u7b80\u5316\u4e86\u9700\u8981\u68c0\u6d4b\u78b0\u649e\u7684\u6a21\u578b\uff0c\u7528\u5176\u5b83\u66f4\u52a0\u7b80\u5355\u7684\u5f62\u72b6\u53bb\u505a\u7c97\u6821\u9a8c\uff0c\u907f\u514d\u91c7\u7528\u66f4\u590d\u6742\u7684\u591a\u8fb9\u5f62\u53bb\u68c0\u6d4b\u78b0\u649e\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#712","title":"7.1.2 \u7a7a\u95f4\u7d22\u5f15","text":"<p>\u7a7a\u95f4\u7d22\u5f15\u662f\u4e3a\u4e86\u5bf9\u7a7a\u95f4\u505a\u5207\u5206\uff0c\u7701\u7565\u4e0d\u5fc5\u8981\u7684\u6bd4\u5bf9\uff0c\u6bd4\u5982\u4e00\u6761\u8def\u4e0a\u6709n\u8f86\u8f66\uff0c\u5982\u679c\u9700\u8981\u68c0\u6d4b\u78b0\u649e\uff0c\u5219\u9700\u8981O(n*n)\u6b21\uff0c\u5982\u679c\u5bf9\u7a7a\u95f4\u505a\u5207\u5206\u90a3\u4e48\u53ef\u4ee5\u964d\u4f4e\u5230O(nlogn)\u6b21\u3002</p> <p>\u7a7a\u95f4\u7d22\u5f15\u7684\u7b97\u6cd5\u540c\u6837\u975e\u5e38\u591a\uff0c\u5927\u4f53\u4e0a\u5f52\u4e3a3\u7c7b\uff1a</p> <ul> <li>\u6811\u5f62\u7ed3\u6784\uff1aBinary-tree\uff0cRtree\uff0cQuadtrees\uff0cKDtree\uff0caabbtree\u3002</li> <li>\u6805\u683c\u56fe\uff1a\u5bf9\u7a7a\u95f4\u8fdb\u884c\u7f51\u72b6\u5212\u5206</li> <li>\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf\uff1ageohash\uff0c\u4ee5\u53cagoogle\u6700\u65b0\u7684s2geometry</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#713-sweep-and-prune","title":"7.1.3 Sweep and Prune","text":"<p>\u4e0b\u9762\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u4e00\u79cd\u5bf9AABB-box\u5feb\u901f\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u628a\u8def\u4e0a\u7684\u6c7d\u8f66\u90fd\u7528\u76d2\u5b50\u5305\u56f4\u3002\u5982\u679c\u6c7d\u8f66\u6709\u65cb\u8f6c\u7684\u60c5\u51b5\uff0c\u7528AABB-box\u4ee3\u66ffOBB-box\u3002</p> <p></p> <p>\u56fe5 \u7528AABB-box\u5305\u56f4\u6c7d\u8f66</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u7cfb\u5217\u7684\u77e9\u9635\uff0c\u68c0\u6d4b2\u4e2aAABB-box\u662f\u5426\u78b0\u649e\u5f88\u7b80\u5355\u3002\u6211\u4eec\u5148\u770b\u4e0b\u56fe</p> <p></p> <p>\u5982\u679c2\u4e2aAABB-box\u91cd\u53e0\uff0c\u90a3\u4e48\u5b83\u5728x\u548cy\u8f74\u4e0a\u7684\u6295\u5f71\u4e00\u5b9a\u90fd\u91cd\u53e0\uff0c\u5982\u679c2\u4e2aAABB-box\u6ca1\u6709\u91cd\u53e0\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u5728\u67d0\u4e00\u4e2a\u5750\u6807\u8f74\u4e0a\u6709\u91cd\u53e0\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\u91cd\u53e0\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6709N\u4e2aAABB-box\u6211\u4eec\u53ea\u9700\u8981\u5728\u67d0\u4e00\u4e2a\u8f74\u4e0a\u68c0\u6d4b\u51fa\u6709\u91cd\u53e0\u7684\u533a\u57df\u6765\u5224\u65adAABB-box\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u90a3\u4e48\u95ee\u9898\u7b80\u5316\u6210N\u4e2a\u7ebf\u6bb5\uff0c\u68c0\u6d4b\u8fd9\u4e9b\u7ebf\u7a0b\u662f\u5426\u6709\u91cd\u53e0\u533a\u57df\uff0c\u8fd9\u6837\u5c31\u628a2\u7ef4\u7684\u95ee\u9898\u7b80\u5316\u52301\u7ef4\u6765\u4e86\u3002</p> <p>\u6211\u4eec\u5148\u5bf9\u8fd9\u4e9b\u7ebf\u6bb5\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u7ec4\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bf9\u8fd9\u4e2a\u7531\u8d77\u70b9\u548c\u7ec8\u70b9\u7ec4\u6210\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u597d\u4e4b\u540e\uff0c\u904d\u5386\u4e0a\u8ff0\u6570\u7ec4\uff0c\u627e\u5230\u53ef\u80fd\u53d1\u751f\u78b0\u649e\u7684\u76d2\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u67e5\u627e\u5462\uff1f</p> <p></p> <p>\u5bf9\u7ebf\u6bb5\u8fdb\u884c\u6392\u5e8f\uff0c\u5f97\u5230\u6392\u5e8f\u53f7\u7684\u6570\u7ec4</p> <p>\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u5bf9\u7ebf\u6bb5\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u5f97\u5230\u6700\u4e0b\u9762\u7684\u6570\u7ec4\uff0c\u904d\u5386\u6570\u7ec4\u3002</p> <ol> <li>\u53d1\u73b0\u7ebf\u6bb53\u7684\u8d77\u70b9b3\uff0c\u5219\u628a3\u653e\u5165\u6fc0\u6d3b\u6570\u7ec4\uff0c\u53c8\u53d1\u73b0b6\uff0c\u5219\u628a6\u653e\u5165\u6570\u7ec4\uff0c\u8fd9\u65f6\u5019\u6570\u7ec4\u4e2d\u6709[3, 6] 2\u4e2a\u5143\u7d20\uff0c\u7ee7\u7eed\u904d\u5386\uff0c\u53d1\u73b0b1\uff0c\u5219\u628a1\u653e\u5165\u6570\u7ec4\uff0c\u8fd9\u65f6\u5019\u6570\u7ec4\u4e2d\u6709[3, 6, 1]\u3002</li> <li>\u63a5\u7740\u53d1\u73b0e6\uff0c\u7531\u4e8e\u662f\u7ec8\u70b9\uff0c\u5219\u4ece\u6570\u7ec4\u4e2d\u79fb\u96646\uff0c\u540c\u65f6\u628a(3, 6)\u548c(6,1) \u8fd92\u4e2a\u53ef\u80fd\u78b0\u649e\u7684AABB-box\u4fdd\u5b58\u5230\u7ed3\u679c\u3002\u8fd9\u65f6\u5019\u6fc0\u6d3b\u6570\u7ec4\u4e2d\u5269\u4e0b[3, 1]\uff0c\u7136\u540e\u9047\u5230e1\uff0c\u6fc0\u6d3b\u6570\u7ec4\u79fb\u96641\uff0c\u540c\u65f6\u628a(3,1)\u4fdd\u5b58\u5230\u7ed3\u679c\u3002\u6fc0\u6d3b\u6570\u7ec4\u5269\u4e0b[3]</li> <li>\u63a5\u7740\u9047\u5230b5\uff0c\u6fc0\u6d3b\u6570\u7ec4[3, 5]\uff0c\u7136\u540e\u9047\u5230b2\uff0c\u6fc0\u6d3b\u6570\u7ec4[3, 5, 2]\u7136\u540e\u9047\u5230e3\uff0c\u79fb\u96643\uff0c\u628a(3, 5)\u548c(3, 2)\u4fdd\u5b58\u7ed3\u679c\uff0c\u6fc0\u6d3b\u6570\u7ec4\u5269\u4e0b[5, 2]\u3002</li> <li>\u7ee7\u7eed\u904d\u5386\u9047\u5230b4\uff0c\u6fc0\u6d3b\u6570\u7ec4[5, 2 ,4]\uff0c\u9047\u5230e5\uff0c\u4fdd\u5b58(5, 2)\u548c(5, 4)\uff0c\u6fc0\u6d3b\u6570\u7ec4\u5269\u4e0b[2, 4]\uff0c\u9047\u5230e4\u628a4\u79fb\u9664\uff0c\u540c\u65f6\u4fdd\u5b58(2, 4)\u5230\u7ed3\u679c\uff0c\u6700\u540e\u9047\u5230e2\uff0c\u79fb\u96642\u3002</li> <li>\u81f3\u6b64\u904d\u5386\u7ed3\u675f\uff0c\u5f97\u5230\u7ed3\u679c(3, 6)\uff0c(6,1)\uff0c(3,1)\uff0c(3, 5)\uff0c(3, 2)\uff0c(5, 2)\uff0c(5, 4)\uff0c(2, 4)\uff0c\u627e\u5230\u6240\u6709\u6709\u78b0\u649e\u53ef\u80fd\u7684\u7ec4\u5408\u3002</li> </ol> <p>\u4e0a\u8ff0\u7684\u65b9\u6cd5\u9700\u8981\u5148\u6392\u5e8f\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6O(nlogn)\uff0c\u7136\u540e\u9700\u8981\u904d\u5386\u9700\u8981O(n)\u6b21\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u78b0\u649e\u7684\u7ec4\u5408\u6709k\u4e2a\u5219\u9700\u8981O(k)\uff0c\u56e0\u6b64\u603b\u7684\u590d\u6742\u5ea6\u4e3aO(nlogn)+O(n)+O(k)\u3002\u76f8\u6bd4O(n*n)\u7684\u590d\u6742\u5ea6\u63d0\u9ad8\u4e86\u4e0d\u5c11\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#72-obb-box","title":"7.2 \u7cbe\u786e\u68c0\u6d4b\uff08OBB-BOX\u3001\u51f8\u591a\u8fb9\u5f62\u7b49\uff09","text":"<p>\u4e3b\u8981\u7528\u4e24\u79cd\u65b9\u6cd5\uff0cSTA\uff08\u5206\u79bb\u8f74\u5b9a\u7406\uff09\u3001\u548cGJK\u7b97\u6cd5</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#721-sat","title":"7.2.1 SAT","text":"<p>SAT\uff08Separating Axis Theorem\uff0c\u5206\u79bb\u8f74\u5b9a\u7406\uff09\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\u76f4\u89c2\u4e14\u9ad8\u6548\u3002\u7136\u800c\uff0c\u5b83\u53ea\u9002\u7528\u4e8e\u51f8\u4f53\u7684\u78b0\u649e\u68c0\u6d4b\u3002\u5b83\u7684\u539f\u7406\u6e05\u6670\u6613\u61c2\uff0c\u5373\u82e5\u4e24\u4e2a\u7269\u4f53\u6ca1\u6709\u53d1\u751f\u78b0\u649e\uff0c\u5219\u603b\u4f1a\u5b58\u5728\u4e00\u6761\u76f4\u7ebf\uff0c\u80fd\u5c06\u4e24\u4e2a\u7269\u4f53\u5206\u79bb\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u628a\u8fd9\u6761\u80fd\u591f\u9694\u5f00\u4e24\u4e2a\u7269\u4f53\u7684\u7ebf\u79f0\u4e3a\u5206\u79bb\u8f74\u3002 \u5411\u4ec0\u4e48\u65b9\u5411\u6295\u5f71 \uff1f\uff1f\uff08\u7b80\u5316\uff0c\u662f\u5411\u81ea\u7136\u5750\u6807\u7cfb XY \u6295\u5f71\uff09</p> <p>\u82e5\u4e24\u4e2a\u51f8\u591a\u8fb9\u5f62\u6ca1\u6709\u53d1\u751f\u78b0\u649e\uff0c\u5219\u603b\u4f1a\u5b58\u5728\u4e00\u6761\u76f4\u7ebf\uff0c\u4e24\u4e2a\u591a\u8fb9\u5f62\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\u7684\u6295\u5f71\u6ca1\u6709\u91cd\u53e0\uff0c\u5982\u56fe6\u53f3\u4fa7\u56fe\u6240\u793a\uff0c\u84dd\u8272\u7ebf\u6bb5\u548c\u7c89\u7ea2\u8272\u7ebf\u6bb5\u6ca1\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u5176\u4e2d\u53f3\u4fa7\u56fe\u4e2d\u7070\u8272\u7ebf\u5c31\u662f\u4e00\u6761\u5206\u79bb\u8f74\uff08\u4e3b\u89c2\u7406\u89e3\u662f\u4e0b\u56fe\u5de6\u4fa7\u56fe\u7684\u865a\u7ebf\u5e94\u8be5\u53eb\u5206\u79bb\u8f74\uff0c\u4f46\u662f\u8fd9\u662f\u9519\u8bef\u7684\uff09\u3002</p> <p></p> <p>\u82e5\u4e24\u4e2a\u591a\u8fb9\u5f62\u78b0\u649e\uff0c\u5219\u65e0\u6cd5\u627e\u5230\u8fd9\u6837\u4e00\u6761\u5206\u79bb\u8f74\uff0c\u80fd\u4f7f\u4e24\u4e2a\u591a\u8fb9\u5f62\u5728\u76f4\u7ebf\u4e0a\u7684\u6295\u5f71\u4e0d\u91cd\u53e0\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u5b9e\u4f8b\u5982\u56fe7\u6240\u793a\uff0c\u4e24\u4e2a\u591a\u8fb9\u5f62\u5728\u4efb\u4f55\u4e00\u6761\u8f74\u4e0a\u7684\u6295\u5f71\u90fd\u6709\u91cd\u53e0\u90e8\u5206\u3002</p> <p></p> <p>\u8fd9\u4e2a\u90e8\u5206\u6211\u4eec\u5c06\u5982\u4f55\u83b7\u53d6\u5206\u79bb\u8f74\uff0c\u5373\u4e0a\u65b9\u4f2a\u4ee3\u7801\u4e2d\u7684Axis[] axises \u7684\u83b7\u53d6\u65b9\u5f0f\u3002SAT\u7b97\u6cd5\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u60f3\u6cd5\uff1a\u9009\u53d6\u591a\u8fb9\u5f62\u6bcf\u6761\u8fb9\u7684\u5782\u7ebf\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#722-gjk","title":"7.2.2 GJK","text":"<p>2D Convex Collision Detection Algorithm_\u843d\u7fbd\u5f52\u5c18\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 GJK\uff08Gilbert\u2013Johnson\u2013Keerthi\uff09\u7b97\u6cd5\u3002\u5b83\u8db3\u591f\u9ad8\u6548\uff0c\u4e14\u5f88\u5bb9\u6613\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u7684\u3002\u540c\u6837\u7684\uff0c\u5b83\u4e5f\u53ea\u9002\u7528\u4e8e\u00a0\u51f8\u591a\u8fb9\u5f62\u00a0\u95f4\u7684\u78b0\u649e\u68c0\u6d4b\u3002 \u800c GJK \u4ece\u00a0\u91cd\u53e0\u00a0\u7684\u89d2\u5ea6\u6765\u63a2\u7d22\u7269\u4f53\u95f4\u7684\u78b0\u649e\u3002</p> <p>\u672c\u8d28\u5c31\u662f\u5229\u7528Minkowski\u5dee\u6765\u5224\u65ad2\u4e2a\u51e0\u4f55\u4f53\u6709\u6ca1\u78b0\u649e\u3002\u56e0\u4e3a\u5982\u679c\u78b0\u649e\u4e86\uff0c\u90a3\u4e482\u4e2a\u51e0\u4f55\u4f53\u81f3\u5c11\u5305\u542b\u4e86\u540c\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u4eec\u7684Minkowski\u5dee\uff08\u7b2c\u4e8c\u5e45\u56fe\uff09\u5fc5\u7136\u5305\u542b\u539f\u70b9\uff1a</p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#73-box","title":"7.3 \u70b9\u4e0ebox\u7684\u78b0\u649e\u68c0\u6d4b","text":"<p>\u4e0d\u540c\u4e8e7.1\u548c7.2\u7684box\u548cbox\uff0c\u4e3b\u8981\u8ba8\u8bba\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u591a\u8fb9\u5f62\u5185</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#731","title":"7.3.1 \u5c04\u7ebf\u6cd5","text":"<p>\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u591a\u8fb9\u5f62\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8be5\u70b9\u5f15\u51fa\u4e00\u6761\u6c34\u5e73\u5c04\u7ebf\uff08\u4efb\u610f\u5c04\u7ebf\u90fd\u53ef\uff0c\u4f46\u6c34\u5e73\u4fbf\u4e8e\u8ba1\u7b97\uff09\uff0c\u89c2\u5bdf\u5c04\u7ebf\u4e0e\u591a\u53d8\u5f62\u7684\u4ea4\u70b9\u4e2a\u6570\uff0c\u5982\u679c\u4ea4\u70b9\u4e2a\u6570\u4e3a\u5947\u6570\uff0c\u5219\u8be5\u70b9\u5728\u591a\u8fb9\u5f62\u5185\uff0c\u5982\u679c\u4e3a\u5076\u6570\u5219\u5728\u591a\u8fb9\u5f62\u5916\u3002\u5982\u4e0b\u5de6\u56fe\u6240\u793a\uff0c\u5224\u65ad\u70b9P\u548c\u591a\u8fb9\u5f62\u7684\u5173\u7cfb\uff0c\u4ece\u70b9P\u5f97\u5230\u4e00\u4e2a\u6c34\u5e73\u5411\u53f3\u7684\u5c04\u7ebf\uff0c\u901a\u8fc7\u591a\u8fb9\u5f62\u7684\u6bcf\u4e24\u4e2a\u76f8\u90bb\u9876\u70b9\u53ef\u4ee5\u5f97\u5230\u8fb9\u7684\u76f4\u7ebf\u65b9\u7a0b\uff0c\u4f8b\u5982P 1 P 2 P_1P_2P1\u200bP2\u200b\uff0c\u6709y 0 y_0y0\u200b\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u70b9B\u7684\u5750\u6807\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u5c04\u7ebf\u662f\u5426\u4e0eP 1 P 2 P_1P_2P1\u200bP2\u200b\u76f8\u4ea4\u4e86\u3002\u6b64\u65b9\u6cd5\u5bf9\u591a\u8fb9\u5f62\u7684\u51f8\u51f9\u6027\u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u662f\u5982\u679c\u70b9P\u5728\u591a\u8fb9\u5f62\u8fb9\u4e0a\u6216\u8005\u9876\u70b9\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#732","title":"7.3.2 \u8f6e\u5ed3\u516d\u5206\u5706","text":"<p>\u78b0\u649e\u68c0\u6d4b\u6280\u672f\u4ecb\u7ecd_\u5c0f\u4f5c\u574a\u94b3\u5de5\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u6b64\u65b9\u6cd5\u662f\u5c06\u77e9\u5f62\u7684\u78b0\u649e\u68c0\u6d4b\u8f6c\u5316\u4e3a\u5706\u4e4b\u95f4\u7684\u78b0\u649e\u68c0\u6d4b\uff0c\u901a\u8fc7\u4e24\u4e2a\u5706\u7684\u534a\u5f84\u548c\u5706\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5224\u65ad\u4e24\u4e2a\u5706\u662f\u5426\u91cd\u53e0\u3002\u7ed9\u5b9a\u8f66\u8f86\u77e9\u5f62\u8f6e\u5ed3\uff0c\u8be5\u7b97\u6cd5\u9996\u5148\u8ba1\u7b97\u77e9\u5f62\u8f6e\u5ed3\u7684\u5916\u63a5\u5706\uff0c\u7136\u540e\u5c06\u6574\u4e2a\u77e9\u5f62\u533a\u57df\u5206\u89e3\u6210\u4e0e\u56db\u4e2a\u89d2\u70b9\u5bf9\u9f50\u7684\u540c\u7b49\u5927\u5c0f\u7684\u6b63\u65b9\u5f62\uff0c\u8f6e\u5ed3\u77e9\u5f62\u533a\u57df\u5269\u4e0b\u7684\u90e8\u5206\u518d\u8fdb\u4e00\u6b65\u5206\u89e3\u6210\u7b49\u5927\u5c0f\u7684\u5c0f\u77e9\u5f62\uff0c\u6700\u540e\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5c0f\u77e9\u5f62\u6216\u6b63\u65b9\u5f62\u7684\u5916\u63a5\u5706[1]\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#8","title":"8 \u4f18\u5316\u76f8\u5173","text":"<p>https://zhuanlan.zhihu.com/p/105313548</p> <p>\u51f8\u4f18\u5316\u6c42\u89e3\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#9","title":"9 \u89c4\u5212\u65f6\u5982\u679c\u5750\u6807\u6570\u503c\u8fc7\u5927\uff0c\u6c42\u89e3\u4e0d\u7a33\u5b9a\u600e\u4e48\u529e","text":"<p>\u4e24\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li>\u91c7\u7528local\u5750\u6807\u7cfb\uff0c\u628a\u6240\u6709\u73af\u5883\u4fe1\u606f\u53d8\u6362\u5230\u4ee5\u81ea\u8f66\u5f53\u524d\u4f4d\u7f6e\u4f4d\u57fa\u7840\u7684\u4e00\u4e2a\u53c2\u8003\u7cfb\u5185\uff0c\u8fd9\u6837\u6240\u6709\u7684\u73af\u5883\u4fe1\u606f\u90fd\u662f\u76f8\u5bf9\u5750\u6807</li> <li>\u5bf9\u4e00\u4e9b\u53d8\u91cf\u505a\u7f29\u653e\uff0c\u7b97\u51fa\u7ed3\u679c\u540e\u518d\u53d8\u56de\u53bb\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#panning","title":"panning\u4e2d\u57fa\u4e8e\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u57fa\u4e8e\u641c\u7d22\u7684\u65b9\u6cd5\u5404\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#1_1","title":"1 \u57fa\u4e8e\u91c7\u6837\u7684\u65b9\u6cd5","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#11-rrtrrt","title":"1.1 \u968f\u673a\u6027\u91c7\u6837\u65b9\u6cd5\uff08RRT\u3001RRT*\uff09","text":"<p>\u4f18\u70b9\uff1a\u9ad8\u7ef4\u5ea6\u65f6\u901f\u5ea6\u5feb \u7f3a\u70b9\uff1a\u968f\u673a\u6027\u8f83\u5f3a\uff0c\u5bfc\u81f4\u524d\u7aef\u7684\u89e3\u7a7a\u95f4\u4e0d\u7a33\u5b9a\u3002\u6ca1\u6709\u529e\u6cd5\u4fdd\u8bc1\u6700\u4f18\u6027\uff0c\u53ea\u6709\u6982\u7387\u5b8c\u5907\u6027\u3002\u4e0d\u4e00\u5b9a\u5728\u6709\u9650\u65f6\u95f4\u5185\u627e\u5230\u89e3\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#12-lattice","title":"1.2 \u786e\u5b9a\u6027\u91c7\u6837\uff08lattice\uff09","text":"<p>\u4f18\u70b9\uff1a\u66f4\u7b26\u5408\u8fd0\u52a8\u5b66\u7279\u6027\uff0ccost\u8bbe\u8ba1\u6bd4\u8f83\u597d\u65f6\uff0c\u89e3\u6bd4\u8f83\u7a33\u5b9a \u7f3a\u70b9\uff1a\u7eac\u5ea6\u9ad8\u65f6\u901f\u5ea6\u6162\uff0c\u89e3\u7684\u8d28\u91cf\u53d6\u51b3\u4e8e\u96f6\u6563\u5316\u5206\u8fa8\u7387\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%84%E5%88%92%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3/#a-dijkstra","title":"\u57fa\u4e8e\u641c\u7d22\u7684\u65b9\u6cd5\uff08A* dijkstra\uff09","text":"<p>\u4f18\u70b9\uff1a\u5168\u5c40\u6700\u4f18\u6027\uff0c\u89e3\u7a33\u5b9a \u7f3a\u70b9\uff1a\u7eac\u5ea6\u9ad8\u65f6\u901f\u5ea6\u6162\uff0c\u89e3\u7684\u8d28\u91cf\u53d6\u51b3\u4e8e\u96f6\u6563\u5316\u5206\u8fa8\u7387\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/","title":"\u89e3\u6790\u767e\u5ea6Apollo\u4e4b\u51b3\u7b56\u89c4\u5212\u6a21\u5757","text":"<p>\u672c\u6587\u662fApollo\u9879\u76ee\u7cfb\u5217\u6587\u7ae0\u4e2d\u7684\u4e00\u7bc7\uff0c\u4f1a\u89e3\u6790\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u4e2d\u6700\u6838\u5fc3\u7684\u6a21\u5757 - \u51b3\u7b56\u89c4\u5212\u6a21\u5757\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_1","title":"\u524d\u8a00","text":"<p>Apollo\u7cfb\u7edf\u4e2d\u7684Planning\u6a21\u5757\u5b9e\u9645\u4e0a\u662f\u6574\u5408\u4e86\u51b3\u7b56\u548c\u89c4\u5212\u4e24\u4e2a\u529f\u80fd\uff0c\u8be5\u6a21\u5757\u662f\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u4e2d\u6700\u6838\u5fc3\u7684\u6a21\u5757\u4e4b\u4e00\uff08\u53e6\u5916\u4e09\u4e2a\u6838\u5fc3\u6a21\u5757\u662f\uff1a\u5b9a\u4f4d\uff0c\u611f\u77e5\u548c\u63a7\u5236\uff09\u3002</p> <p>\u5173\u4e8e\u51b3\u7b56\u89c4\u5212\u7684\u7406\u8bba\u503c\u5f97\u6211\u4eec\u7814\u7a76\u597d\u4e45\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u4f1a\u901a\u8fc7\u51e0\u7bc7\u6587\u7ae0\u6765\u4e13\u95e8\u8bb2\u89e3Planning\u6a21\u5757\u3002</p> <p>\u8fd9\u4e9b\u6587\u7ae0\u4f1a\u4ee5\u767e\u5ea6Apollo\u7684Planning\u6a21\u5757\u5b9e\u73b0\u4e3a\u57fa\u7840\u3002\u5f53\u7136\uff0c\u6211\u4e5f\u5e0c\u671b\u6211\u4eec\u80fd\u591f\u4e0d\u5355\u5355\u5c40\u9650\u4e8eApollo\u9879\u76ee\u5b9e\u73b0\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u5c3d\u53ef\u80fd\u7684\u4e00\u8d77\u4e86\u89e3\u4e00\u4e0b\u76ee\u524d\u8fd9\u4e9b\u6280\u672f\u7684\u5176\u4ed6\u7814\u7a76\u6210\u679c\u3002</p> <p>\u672c\u6587\u662f\u8bb2\u89e3Planning\u6a21\u5757\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f1a\u5bf9Planning\u6a21\u5757\u7684\u6574\u4f53\u67b6\u6784\u505a\u4e00\u4e9b\u89e3\u6790\u3002</p> <p>\u5176\u4ed6\u5173\u4e8eApollo\u76f8\u5173\u7684\u6587\u7ae0\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u89e3\u6790\u767e\u5ea6Apollo\u81ea\u52a8\u9a7e\u9a76\u5e73\u53f0</p> </li> <li> <p>\u89e3\u6790\u767e\u5ea6Apollo\u4e4bRouting\u6a21\u5757</p> </li> </ul> <p>\u672c\u6587\u4ee5Apollo\u9879\u76ee2019\u5e74\u521d\u7684\u7248\u672c\u4e3a\u57fa\u7840\u8fdb\u884c\u8bb2\u89e3\u3002</p> <ul> <li> <p>\u7248\u672c\uff1a3.5</p> </li> <li> <p>\u83b7\u53d6\u4ee3\u7801\u65f6\u95f4\uff1a2019\u5e741\u670824\u65e5</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#apolloplanning","title":"Apollo\u7cfb\u7edf\u4e0ePlanning\u6a21\u5757","text":"<p>\u4e0b\u56fe\u662fApollo\u7cfb\u7edf\u7684\u6574\u4f53\u67b6\u6784\u56fe\u3002\u4ece\u8fd9\u5e45\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u6574\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u5206\u4e3a5\u5c42\u3002\u4ece\u4e0b\u81f3\u4e0a\u4f9d\u6b21\u662f\uff1a</p> <ul> <li> <p>\u8f66\u8f86\u8ba4\u8bc1\u5e73\u53f0\uff1a\u7ecf\u8fc7Apollo\u8ba4\u8bc1\u7684\u7535\u5b50\u7ebf\u63a7\u8f66\u8f86\u3002</p> </li> <li> <p>\u786c\u4ef6\u5f00\u53d1\u5e73\u53f0\uff1a\u5305\u542b\u4e86\u8ba1\u7b97\u5355\u5143\u4ee5\u53ca\u5404\u79cd\u4f20\u611f\u5668\uff0c\u4f8b\u5982\uff1aGPS\uff0c\u6444\u50cf\u5934\uff0c\u96f7\u8fbe\uff0c\u6fc0\u5149\u96f7\u8fbe\u7b49\u7b49\u3002</p> </li> <li> <p>\u5f00\u653e\u8f6f\u4ef6\u5e73\u53f0\uff1a\u8fd9\u5c31\u662fApollo\u5f00\u6e90\u4ee3\u7801\u7684\u4e3b\u4f53\uff0c\u4e5f\u662f\u81ea\u52a8\u9a7e\u9a76\u6700\u6838\u5fc3\u7684\u90e8\u5206\u3002</p> </li> <li> <p>\u4e91\u670d\u52a1\u5e73\u53f0\uff1a\u5305\u542b\u4e86\u5404\u79cd\u4e91\u7aef\u670d\u52a1\uff0c\u5b9e\u73b0\u81ea\u52a8\u9a7e\u9a76\u7684\u8f66\u8f86\u4e00\u5b9a\u4e0d\u662f\u5b64\u7acb\u7684\uff0c\u800c\u662f\u8dd1\u5728\u57fa\u4e8e\u4e92\u8054\u7f51\u7684\u4e91\u7aef\u4e0a\u7684\u3002</p> </li> <li> <p>\u91cf\u4ea7\u4ea4\u4ed8\u65b9\u6848\uff1a\u4e13\u95e8\u4e3a\u5404\u79cd\u573a\u666f\u91cf\u4ea7\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> </li> </ul> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u518d\u5c06\u6700\u6838\u5fc3\u7684\u5f00\u653e\u8f6f\u4ef6\u5e73\u53f0\u8fd9\u4e00\u5c42\u653e\u5927\u8fd1\u770b\u4e00\u4e0b\u3002</p> <p>\u4e0b\u9762\u8fd9\u5e45\u56fe\u63cf\u8ff0\u4e86\u8fd9\u5176\u4e2d\u7684\u6a21\u5757\u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u4ea4\u4e92\u5173\u7cfb\u3002</p> <p>\u8fd9\u5176\u4e2d\u7684\u9ec4\u7ebf\u4ee3\u8868\u4e86\u6570\u636e\u6d41\uff0c\u9ed1\u7ebf\u4ee3\u8868\u4e86\u63a7\u5236\u6d41\u3002</p> <p></p> <p>Planning\u6a21\u5757\u8d1f\u8d23\u6574\u4e2a\u8f66\u8f86\u7684\u9a7e\u9a76\u51b3\u7b56\uff0c\u800c\u9a7e\u9a76\u51b3\u7b56\u9700\u8981\u6839\u636e\u5f53\u524d\u6240\u5904\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u5468\u8fb9\u9053\u8def\u548c\u4ea4\u901a\u60c5\u51b5\u6765\u51b3\u5b9a\u3002Planning\u4e0d\u76f4\u63a5\u63a7\u5236\u8f66\u8f86\u786c\u4ef6\uff0c\u800c\u662f\u501f\u52a9\u4e8e\u63a7\u5236\u6a21\u5757\u6765\u5b8c\u6210\u3002</p> <p>\u4ece\u8fd9\u5e45\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8ePlanning\u6a21\u5757\u6765\u8bf4\uff1a</p> <ul> <li> <p>\u5b83\u7684\u4e0a\u6e38\u6a21\u5757\u662f\uff1a\u5b9a\u4f4d\uff0c\u5730\u56fe\uff0c\u5bfc\u822a\uff0c\u611f\u77e5\u548c\u9884\u6d4b\u6a21\u5757\u3002</p> </li> <li> <p>\u5b83\u7684\u4e0b\u6e38\u6a21\u5757\u662f\u63a7\u5236\u6a21\u5757\u3002</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_2","title":"\u6a21\u5757\u6982\u8ff0","text":"<p>\u51b3\u7b56\u89c4\u5212\u6a21\u5757\u7684\u4e3b\u8981\u8d23\u4efb\u662f\uff1a\u6839\u636e\u5bfc\u822a\u4fe1\u606f\u4ee5\u53ca\u8f66\u8f86\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5728\u6709\u9650\u7684\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u8ba1\u7b97\u51fa\u4e00\u6761\u5408\u9002\u7684\u8f68\u8ff9\u4f9b\u8f66\u8f86\u884c\u9a76\u3002</p> <p>\u8fd9\u91cc\u6709\u597d\u51e0\u4e2a\u5730\u65b9\u503c\u5f97\u6ce8\u610f\uff1a</p> <ol> <li> <p>\u8f66\u8f86\u7684\u884c\u9a76\u8def\u7ebf\u901a\u5e38\u7531Routing\u6a21\u5757\u63d0\u4f9b\uff0cRouting\u6a21\u5757\u4f1a\u6839\u636e\u76ee\u7684\u5730\u4ee5\u53ca\u5730\u56fe\u641c\u7d22\u51fa\u4e00\u6761\u4ee3\u4ef7\u5c3d\u53ef\u80fd\u5c0f\u7684\u8def\u7ebf\u3002\u5173\u4e8eRouting\u6a21\u5757\u6211\u4eec\u5df2\u7ecf\u5728\u53e6\u5916\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u8fc7\uff08\u300a\u89e3\u6790\u767e\u5ea6Apollo\u4e4bRouting\u6a21\u5757\u300b\uff09\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> </li> <li> <p>\u8f66\u8f86\u7684\u5f53\u524d\u72b6\u6001\u5305\u542b\u4e86\u5f88\u591a\u56e0\u7d20\uff0c\u4f8b\u5982\uff1a\u8f66\u8f86\u81ea\u8eab\u7684\u72b6\u6001\uff08\u5305\u62ec\u59ff\u6001\uff0c\u901f\u5ea6\uff0c\u89d2\u901f\u5ea6\u7b49\u7b49\uff09\uff0c\u5f53\u524d\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u5468\u8fb9\u7269\u7406\u4e16\u754c\u7684\u9759\u6001\u73af\u5883\u4ee5\u53ca\u4ea4\u901a\u72b6\u6001\u7b49\u7b49\u3002</p> </li> <li> <p>Planning\u6a21\u5757\u7684\u54cd\u5e94\u901f\u5ea6\u5fc5\u987b\u662f\u7a33\u5b9a\u53ef\u9760\u7684\uff08\u5f53\u7136\uff0c\u5176\u4ed6\u6a21\u5757\u4e5f\u662f\u4e00\u6837\uff09\u3002\u6b63\u5e38\u4eba\u7c7b\u7684\u53cd\u5e94\u901f\u5ea6\u662f300ms\uff0c\u800c\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u60f3\u8981\u505a\u5230\u5b89\u5168\u53ef\u9760\uff0c\u5176\u53cd\u5e94\u65f6\u95f4\u5fc5\u987b\u77ed\u4e8e100ms\u3002\u6240\u4ee5\uff0cPlanning\u6a21\u5757\u901a\u5e38\u4ee510Hz\u7684\u9891\u7387\u8fd0\u884c\u7740\u3002\u5982\u679c\u5176\u4e2d\u67d0\u4e00\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u8017\u8d39\u4e86\u592a\u957f\u65f6\u95f4\uff0c\u5c31\u53ef\u80fd\u9020\u6210\u5176\u4ed6\u6a21\u5757\u7684\u5904\u7406\u5ef6\u8fdf\uff0c\u6700\u7ec8\u53ef\u80fd\u9020\u6210\u4e25\u91cd\u7684\u540e\u679c\u3002\u4f8b\u5982\uff1a\u6ca1\u6709\u5373\u65f6\u5239\u8f66\uff0c\u6216\u8005\u8f6c\u5f2f\u3002</p> </li> <li> <p>\u201d\u5408\u9002\u7684\u8f68\u8ff9\u201c\u6709\u591a\u4e2a\u5c42\u6b21\u7684\u542b\u4e49\u3002\u9996\u5148\uff0c\u201d\u8f68\u8ff9\u201c\u4e0d\u540c\u4e8e\u201c\u8def\u5f84\u201d\uff0c\u201c\u8f68\u8ff9\u201d\u4e0d\u4ec5\u4ec5\u5305\u542b\u4e86\u884c\u9a76\u8def\u7ebf\uff0c\u8fd8\u8981\u5305\u542b\u6bcf\u4e2a\u65f6\u523b\u7684\u8f66\u8f86\u7684\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\uff0c\u65b9\u5411\u8f6c\u5411\u7b49\u4fe1\u606f\u3002\u5176\u6b21\uff0c\u8fd9\u6761\u8f68\u8ff9\u5fc5\u987b\u662f\u5e95\u5c42\u63a7\u5236\u53ef\u4ee5\u6267\u884c\u7684\u3002\u56e0\u4e3a\u8f66\u8f86\u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u60ef\u6027\uff0c\u8f66\u8f86\u7684\u8f6c\u5f2f\u89d2\u5ea6\u4e5f\u662f\u6709\u9650\u7684\u3002\u5728\u8ba1\u7b97\u884c\u9a76\u8f68\u8ff9\u65f6\uff0c\u8fd9\u4e9b\u56e0\u7d20\u90fd\u8981\u8003\u8651\u3002\u6700\u540e\uff0c\u4ece\u4eba\u7c7b\u7684\u4f53\u9a8c\u4e0a\u6765\u8bf4\uff0c\u731b\u52a0\u901f\uff0c\u6025\u5239\u8f66\u6216\u8005\u6025\u8f6c\u5f2f\u90fd\u4f1a\u9020\u6210\u975e\u5e38\u4e0d\u597d\u7684\u4e58\u5750\u4f53\u9a8c\uff0c\u56e0\u6b64\u8fd9\u4e9b\u4e5f\u9700\u8981\u8003\u8651\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u51b3\u5b9a\u89c4\u5212\u6a21\u5757\u9700\u8981\u82b1\u5f88\u591a\u7684\u7cbe\u529b\u6765\u4f18\u5316\u8f68\u8ff9\uff0cApollo\u7cfb\u7edf\u4e2d\u7684\u5b9e\u73b0\u81ea\u7136\u4e5f\u4e0d\u4f8b\u5916\u3002</p> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_3","title":"\u6a21\u5757\u67b6\u6784","text":"<p>Apollo\u7684\u4e4b\u524d\u7248\u672c\uff0c\u5305\u62ec3.0\u90fd\u662f\u7528\u4e86\u76f8\u540c\u7684\u914d\u7f6e\u548c\u53c2\u6570\u89c4\u5212\u4e0d\u540c\u7684\u573a\u666f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u7ebf\u6027\u4e14\u5b9e\u73b0\u7b80\u5355\uff0c\u4f46\u4e0d\u591f\u7075\u6d3b\u6216\u7528\u4e8e\u7279\u5b9a\u573a\u666f\u3002\u968f\u7740Apollo\u7684\u6210\u719f\u5e76\u627f\u62c5\u4e0d\u540c\u7684\u9053\u8def\u6761\u4ef6\u548c\u9a7e\u9a76\u7528\u4f8b\uff0cApollo\u9879\u76ee\u7ec4\u91c7\u7528\u4e86\u66f4\u52a0\u6a21\u5757\u5316\u3001\u9002\u7528\u4e8e\u7279\u5b9a\u573a\u666f\u548c\u6574\u4f53\u7684\u65b9\u6cd5\u6765\u89c4\u5212\u5176\u8f68\u8ff9\u3002</p> <p>\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u9a7e\u9a76\u7528\u4f8b\u90fd\u88ab\u5f53\u4f5c\u4e0d\u540c\u7684\u9a7e\u9a76\u573a\u666f\u3002\u8fd9\u6837\u505a\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u4e0e\u5148\u524d\u7684\u7248\u672c\u76f8\u6bd4\uff0c\u73b0\u5728\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u62a5\u544a\u7684\u95ee\u9898\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cd\u5176\u4ed6\u573a\u666f\u7684\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u4fee\u590d\uff0c\u5176\u4e2d\u95ee\u9898\u4fee\u590d\u5f71\u54cd\u5176\u4ed6\u9a7e\u9a76\u7528\u4f8b\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u88ab\u5f53\u4f5c\u5355\u4e2a\u9a7e\u9a76\u573a\u666f\u5904\u7406\u3002</p> <p>Apollo 3.5\u4e2dPlanning\u6a21\u5757\u7684\u67b6\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u8fd9\u5176\u4e2d\u4e3b\u8981\u7684\u7ec4\u4ef6\u5305\u62ec\uff1a</p> <ul> <li> <p>Apollo FSM\uff1a\u4e00\u4e2a\u6709\u9650\u72b6\u6001\u673a\uff0c\u4e0e\u9ad8\u6e05\u5730\u56fe\u786e\u5b9a\u8f66\u8f86\u72b6\u6001\u7ed9\u5b9a\u5176\u4f4d\u7f6e\u548c\u8def\u7ebf\u3002</p> </li> <li> <p>Planning Dispatcher\uff1a\u6839\u636e\u8f66\u8f86\u7684\u72b6\u6001\u548c\u5176\u4ed6\u76f8\u5173\u4fe1\u606f\uff0c\u8c03\u7528\u5408\u9002\u7684Planner\u3002</p> </li> <li> <p>Planner\uff1a\u83b7\u53d6\u6240\u9700\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u548c\u5176\u4ed6\u4fe1\u606f\uff0c\u786e\u5b9a\u76f8\u5e94\u7684\u8f66\u8f86\u610f\u56fe\uff0c\u6267\u884c\u8be5\u610f\u56fe\u6240\u9700\u7684\u89c4\u5212\u4efb\u52a1\u5e76\u751f\u6210\u89c4\u5212\u8f68\u8ff9\u3002\u5b83\u8fd8\u5c06\u66f4\u65b0\u672a\u6765\u4f5c\u4e1a\u7684\u4e0a\u4e0b\u6587\u3002</p> </li> <li> <p>Deciders\u548cOptimizers\uff1a\u4e00\u7ec4\u5b9e\u73b0\u51b3\u7b56\u4efb\u52a1\u548c\u5404\u79cd\u4f18\u5316\u7684\u65e0\u72b6\u6001\u5e93\u3002\u4f18\u5316\u5668\u7279\u522b\u4f18\u5316\u8f66\u8f86\u7684\u8f68\u8ff9\u548c\u901f\u5ea6\u3002\u51b3\u7b56\u8005\u662f\u57fa\u4e8e\u89c4\u5219\u7684\u5206\u7c7b\u51b3\u7b56\u8005\uff0c\u4ed6\u4eec\u5efa\u8bae\u4f55\u65f6\u6362\u8f66\u9053\u3001\u4f55\u65f6\u505c\u8f66\u3001\u4f55\u65f6\u722c\u884c\uff08\u6162\u901f\u884c\u8fdb\uff09\u6216\u722c\u884c\u4f55\u65f6\u5b8c\u6210\u3002</p> </li> <li> <p>\u9ec4\u8272\u6846\uff1a\u8fd9\u4e9b\u6846\u88ab\u5305\u542b\u5728\u672a\u6765\u7684\u573a\u666f\u548c/\u6216\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u4ee5\u4fbf\u57fa\u4e8e\u73b0\u5b9e\u4e16\u754c\u7684\u9a71\u52a8\u7528\u4f8b\u8d21\u732e\u4ed6\u4eec\u81ea\u5df1\u7684\u573a\u666f\u3002</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#pipeline","title":"\u6574\u4f53Pipeline","text":"<p>\u6709\u76f8\u5173\u4e13\u4e1a\u77e5\u8bc6\u7684\u4eba\u90fd\u4f1a\u77e5\u9053\uff0c\u51b3\u7b56\u89c4\u5212\u6a21\u5757\u7684\u4e3b\u4f53\u5b9e\u73b0\u901a\u5e38\u90fd\u662f\u8f83\u4e3a\u590d\u6742\u7684\u3002</p> <p>Apollo\u7cfb\u7edf\u4e2d\u7684\u5b9e\u73b0\u81ea\u7136\u4e5f\u4e0d\u4f8b\u5916\uff0c\u8fd9\u91cc\u5148\u901a\u8fc7\u4e00\u5e45\u56fe\u8bf4\u660e\u5176\u6574\u4f53\u7684Pipeline\u3002\u7136\u540e\u5728\u4e0b\u6587\u4e2d\u6211\u4eec\u518d\u9010\u6b65\u719f\u6089\u6bcf\u4e2a\u7ec6\u8282\u3002</p> <p></p> <p>\u8fd9\u91cc\u6709\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\u9700\u8981\u8bf4\u660e\uff1a</p> <ul> <li> <p><code>PncMap</code>\uff1a\u5168\u79f0\u662fPlanning and Control Map\u3002\u8fd9\u4e2a\u90e8\u5206\u7684\u5b9e\u73b0\u5e76\u4e0d\u5728Planning\u5185\u90e8\uff0c\u800c\u662f\u4f4d\u4e8e<code>/modules/map/pnc_map/</code>\u76ee\u5f55\u4e0b\u3002\u4f46\u662f\u7531\u4e8e\u8be5\u5b9e\u73b0\u4e0ePlanning\u6a21\u5757\u7d27\u5bc6\u76f8\u5173\uff0c\u56e0\u6b64\u8fd9\u91cc\u653e\u5728\u4e00\u8d77\u8ba8\u8bba\u3002\u8be5\u6a21\u5757\u7684\u4e3b\u8981\u4f5c\u7528\u662f\uff1a\u6839\u636eRouting\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u751f\u6210Planning\u6a21\u5757\u9700\u8981\u7684\u8def\u5f84\u4fe1\u606f\u3002</p> </li> <li> <p><code>Frame</code>\uff1aFrame\u4e2d\u5305\u542b\u4e86Planning\u4e00\u6b21\u8ba1\u7b97\u5faa\u73af\u4e2d\u9700\u8981\u7684\u6240\u6709\u6570\u636e\u3002\u4f8b\u5982\uff1a\u5730\u56fe\uff0c\u8f66\u8f86\u72b6\u6001\uff0c\u53c2\u8003\u7ebf\uff0c\u969c\u788d\u7269\u4fe1\u606f\u7b49\u7b49\u3002<code>ReferenceLine</code>\u662f\u8f66\u8f86\u884c\u9a76\u7684\u53c2\u8003\u7ebf\uff0c<code>TrafficDecider</code>\u4e0e\u4ea4\u901a\u89c4\u5219\u76f8\u5173\uff0c\u8fd9\u4e24\u4e2a\u90fd\u662fPlanning\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u5b50\u6a21\u5757\uff0c\u56e0\u6b64\u4f1a\u5728\u4e0b\u6587\u4e2d\u4e13\u95e8\u8bb2\u89e3\u3002</p> </li> <li> <p><code>EM Planner</code>\uff1a\u4e0b\u6587\u4e2d\u6211\u4eec\u4f1a\u770b\u5230\uff0cApollo\u7cfb\u7edf\u4e2d\u5185\u7f6e\u4e86\u597d\u51e0\u4e2aPlanner\uff0c\u4f46\u76ee\u524d\u9ed8\u8ba4\u4f7f\u7528\u7684\u662fEM Planner\uff0c\u8fd9\u4e5f\u662f\u4e13\u95e8\u4e3a\u5f00\u653e\u9053\u8def\u8bbe\u8ba1\u7684\u3002\u8be5\u6a21\u5757\u7684\u5b9e\u73b0\u53ef\u4ee5\u8bf4\u662f\u6574\u4e2aPlanning\u6a21\u5757\u7684\u7075\u9b42\u6240\u5728\u3002\u56e0\u6b64\u5176\u7b97\u6cd5\u503c\u5f97\u4e13\u95e8\u7528\u53e6\u5916\u4e00\u7bc7\u6587\u7ae0\u6765\u8bb2\u89e3\u3002\u8bfb\u8005\u4e5f\u53ef\u4ee5\u9605\u8bfb\u5176\u5b98\u65b9\u8bba\u6587\u6765\u4e86\u89e3\uff1aBaidu Apollo EM Motion Planner\u3002</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_4","title":"\u57fa\u7840\u6570\u636e\u7ed3\u6784","text":"<p>Planning\u6a21\u5757\u662f\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u6a21\u5757\uff0c\u56e0\u6b64\u8fd9\u5176\u4e2d\u6709\u5f88\u591a\u7684\u6570\u636e\u7ed3\u6784\u9700\u8981\u5728\u5185\u90e8\u5b9e\u73b0\u4e2d\u6d41\u8f6c\u3002</p> <p>\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u96c6\u4e2d\u5b9a\u4e49\u5728\u4e24\u4e2a\u5730\u65b9\uff1a</p> <ul> <li> <p><code>proto</code>\u76ee\u5f55\uff1a\u8be5\u76ee\u5f55\u4e0b\u90fd\u662f\u901a\u8fc7Protocol Buffers\u683c\u5f0f\u5b9a\u4e49\u7684\u7ed3\u6784\u3002\u8fd9\u4e9b\u7ed3\u6784\u4f1a\u5728\u7f16\u8bd1\u65f6\u751f\u6210C++\u9700\u8981\u7684\u6587\u4ef6\u3002\u8fd9\u4e9b\u7ed3\u6784\u6ca1\u6709\u4e1a\u52a1\u903b\u8f91\uff0c\u5c31\u662f\u4e13\u95e8\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u3002\uff08\u5b9e\u9645\u4e0a\u4e0d\u53ea\u662fPlanning\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u5927\u7684\u6a21\u5757\u90fd\u4f1a\u6709\u81ea\u5df1\u7684proto\u6587\u4ef6\u5939\u3002\uff09</p> </li> <li> <p><code>common</code>\u76ee\u5f55\uff1a\u8fd9\u91cc\u662fC++\u5b9a\u4e49\u7684\u6570\u636e\u7ed3\u6784\u3002\u5f88\u663e\u7136\uff0c\u901a\u8fc7C++\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u7684\u597d\u5904\u662f\u8fd9\u4e9b\u7c7b\u7684\u5b9e\u73b0\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u5b9a\u7684\u5904\u7406\u903b\u8f91\u3002</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#proto","title":"proto","text":"<p>proto\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>apollo/modules/planning/proto/\n\u251c\u2500\u2500 auto_tuning_model_input.proto\n\u251c\u2500\u2500 auto_tuning_raw_feature.proto\n\u251c\u2500\u2500 decider_config.proto\n\u251c\u2500\u2500 decision.proto\n\u251c\u2500\u2500 dp_poly_path_config.proto\n\u251c\u2500\u2500 dp_st_speed_config.proto\n\u251c\u2500\u2500 lattice_sampling_config.proto\n\u251c\u2500\u2500 lattice_structure.proto\n\u251c\u2500\u2500 navi_obstacle_decider_config.proto\n\u251c\u2500\u2500 navi_path_decider_config.proto\n\u251c\u2500\u2500 navi_speed_decider_config.proto\n\u251c\u2500\u2500 pad_msg.proto\n\u251c\u2500\u2500 planner_open_space_config.proto\n\u251c\u2500\u2500 planning.proto\n\u251c\u2500\u2500 planning_config.proto\n\u251c\u2500\u2500 planning_internal.proto\n\u251c\u2500\u2500 planning_stats.proto\n\u251c\u2500\u2500 planning_status.proto\n\u251c\u2500\u2500 poly_st_speed_config.proto\n\u251c\u2500\u2500 poly_vt_speed_config.proto\n\u251c\u2500\u2500 proceed_with_caution_speed_config.proto\n\u251c\u2500\u2500 qp_piecewise_jerk_path_config.proto\n\u251c\u2500\u2500 qp_problem.proto\n\u251c\u2500\u2500 qp_spline_path_config.proto\n\u251c\u2500\u2500 qp_st_speed_config.proto\n\u251c\u2500\u2500 reference_line_smoother_config.proto\n\u251c\u2500\u2500 side_pass_path_decider_config.proto\n\u251c\u2500\u2500 sl_boundary.proto\n\u251c\u2500\u2500 spiral_curve_config.proto\n\u251c\u2500\u2500 st_boundary_config.proto\n\u251c\u2500\u2500 traffic_rule_config.proto\n\u2514\u2500\u2500 waypoint_sampler_config.proto\n</code></pre> <p>\u6211\u4eec\u5728Routing\u6a21\u5757\u8bb2\u89e3\u7684\u6587\u7ae0\u4e2d\u5df2\u7ecf\u63d0\u5230\uff0c\u901a\u8fc7proto\u683c\u5f0f\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u597d\u5904\u6709\u4e24\u4e2a\uff1a</p> <ul> <li> <p>\u81ea\u52a8\u751f\u6210C++\u9700\u8981\u7684\u6570\u636e\u7ed3\u6784\u3002</p> </li> <li> <p>\u53ef\u4ee5\u65b9\u4fbf\u7684\u4ece\u6587\u672c\u6587\u4ef6\u5bfc\u5165\u548c\u5bfc\u51fa\u3002\u4e0b\u6587\u5c06\u770b\u5230\uff0cPlanning\u6a21\u5757\u4e2d\u6709\u5f88\u591a\u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u548c\u8fd9\u91cc\u7684proto\u7ed3\u6784\u76f8\u5bf9\u5e94\u7684\u3002</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#common","title":"common","text":"<p>common\u76ee\u5f55\u4e0b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a</p> <pre><code>apollo/modules/planning/common/\n\u251c\u2500\u2500 change_lane_decider.h\n\u251c\u2500\u2500 decision_data.h\n\u251c\u2500\u2500 distance_estimator.h\n\u251c\u2500\u2500 ego_info.h\n\u251c\u2500\u2500 frame.h\n\u251c\u2500\u2500 frame_manager.h\n\u251c\u2500\u2500 indexed_list.h\n\u251c\u2500\u2500 indexed_queue.h\n\u251c\u2500\u2500 lag_prediction.h\n\u251c\u2500\u2500 local_view.h\n\u251c\u2500\u2500 obstacle.h\n\u251c\u2500\u2500 obstacle_blocking_analyzer.h\n\u251c\u2500\u2500 path\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 discretized_path.h\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 frenet_frame_path.h\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 path_data.h\n\u251c\u2500\u2500 path_decision.h\n\u251c\u2500\u2500 planning_context.h\n\u251c\u2500\u2500 planning_gflags.h\n\u251c\u2500\u2500 reference_line_info.h\n\u251c\u2500\u2500 speed\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 speed_data.h\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 st_boundary.h\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 st_point.h\n\u251c\u2500\u2500 speed_limit.h\n\u251c\u2500\u2500 speed_profile_generator.h\n\u251c\u2500\u2500 threshold.h\n\u251c\u2500\u2500 trajectory\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 discretized_trajectory.h\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 publishable_trajectory.h\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 trajectory_stitcher.h\n\u2514\u2500\u2500 trajectory_info.h\n</code></pre> <p>\u8fd9\u91cc\u6709\u5982\u4e0b\u4e00\u4e9b\u7ed3\u6784\u503c\u5f97\u6211\u4eec\u6ce8\u610f\uff1a</p> <p>\u540d\u79f0 \u8bf4\u660e <code>EgoInfo</code>\u7c7b \u5305\u542b\u4e86\u81ea\u8f66\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a\u5f53\u524d\u4f4d\u7f6e\u70b9\uff0c\u8f66\u8f86\u72b6\u6001\uff0c\u5916\u56f4Box\u7b49\u3002 <code>Frame</code>\u7c7b \u5305\u542b\u4e86\u4e00\u6b21Planning\u8ba1\u7b97\u5faa\u73af\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002 <code>FrameManager</code>\u7c7b Frame\u7684\u7ba1\u7406\u5668\uff0c\u6bcf\u4e2aFrame\u4f1a\u6709\u4e00\u4e2a\u6574\u6570\u578bid\u3002 <code>LocalView</code>\u7c7b Planning\u8ba1\u7b97\u9700\u8981\u7684\u8f93\u5165\uff0c\u4e0b\u6587\u5c06\u770b\u5230\u5176\u5b9a\u4e49\u3002 <code>Obstacle</code>\u7c7b \u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684\u969c\u788d\u7269\u3002\u969c\u788d\u7269\u4f1a\u6709\u4e00\u4e2a\u552f\u4e00\u7684id\u6765\u533a\u5206\u3002 <code>PlanningContext</code>\u7c7b</p> <p>Planning\u5168\u5c40\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a\u662f\u5426\u6b63\u5728\u53d8\u9053\u3002\u8fd9\u662f\u4e00\u4e2a\u5355\u4f8b\u3002</p> <p><code>ReferenceLineInfo</code>\u7c7b \u8f66\u8f86\u884c\u9a76\u7684\u53c2\u8003\u7ebf\uff0c\u4e0b\u6587\u4f1a\u4e13\u95e8\u8bb2\u89e3\u3002 <code>path</code>\u6587\u4ef6\u5939 \u63cf\u8ff0\u8f66\u8f86\u8def\u7ebf\u4fe1\u606f\u3002\u5305\u542b\uff1aPathData\uff0cDiscretizedPath\uff0cFrenetFramePath\u4e09\u4e2a\u7c7b\u3002 <code>speed</code>\u6587\u4ef6\u5939 \u63cf\u8ff0\u8f66\u8f86\u901f\u5ea6\u4fe1\u606f\u3002\u5305\u542bSpeedData\uff0cSTPoint\uff0cStBoundary\u4e09\u4e2a\u7c7b\u3002 <code>trajectory</code>\u6587\u4ef6\u5939 \u63cf\u8ff0\u8f66\u8f86\u8f68\u8ff9\u4fe1\u606f\u3002\u5305\u542bDiscretizedTrajectory\uff0cPublishableTrajectory\uff0cTrajectoryStitcher\u4e09\u4e2a\u7c7b\u3002 <code>planning_gflags.h</code> \u5b9a\u4e49\u4e86\u6a21\u5757\u9700\u8981\u7684\u8bb8\u591a\u5e38\u91cf\uff0c\u4f8b\u5982\u5404\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u3002</p> <p>\u4f60\u6682\u65f6\u4e0d\u7528\u8bb0\u4f4f\u6240\u6709\u8fd9\u4e9b\u7c7b\uff0c\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u9010\u6e10\u77e5\u9053\u5b83\u4eec\u7684\u4f5c\u7528\u3002 </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_5","title":"\u6a21\u5757\u914d\u7f6e","text":"<p>\u5728\u4e0b\u6587\u4e2d\u5927\u5bb6\u4f1a\u53d1\u73b0\uff0cPlanning\u6a21\u5757\u4e2d\u6709\u5f88\u591a\u5904\u7684\u903b\u8f91\u662f\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u63a7\u5236\u7684\u3002\u901a\u8fc7\u5c06\u8fd9\u90e8\u5206\u5185\u5bb9\u4ece\u4ee3\u7801\u4e2d\u5265\u79bb\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u76f4\u63a5\u5bf9\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u8c03\u6574\uff0c\u800c\u4e0d\u7528\u7f16\u8bd1\u6e90\u4ee3\u7801\u3002\u8fd9\u5bf9\u4e8e\u7cfb\u7edf\u8c03\u8bd5\u548c\u6d4b\u8bd5\u6765\u8bf4\uff0c\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002</p> <p>Apollo\u7cfb\u7edf\u4e2d\uff0c\u5f88\u591a\u6a21\u5757\u90fd\u662f\u7c7b\u4f3c\u7684\u8bbe\u8ba1\u3002\u56e0\u6b64\u6bcf\u4e2a\u6a21\u5757\u90fd\u4f1a\u5c06\u914d\u7f6e\u6587\u4ef6\u96c6\u4e2d\u653e\u5728\u4e00\u8d77\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u6a21\u5757\u4e0b\u7684<code>conf</code>\u76ee\u5f55\u3002</p> <p>Planning\u6a21\u5757\u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>apollo/modules/planning/conf/\n\u251c\u2500\u2500 adapter.conf\n\u251c\u2500\u2500 cosTheta_smoother_config.pb.txt\n\u251c\u2500\u2500 navi_traffic_rule_config.pb.txt\n\u251c\u2500\u2500 planner_open_space_config.pb.txt\n\u251c\u2500\u2500 planning.conf\n\u251c\u2500\u2500 planning_config.pb.txt\n\u251c\u2500\u2500 planning_config_navi.pb.txt\n\u251c\u2500\u2500 planning_navi.conf\n\u251c\u2500\u2500 qp_spline_smoother_config.pb.txt\n\u251c\u2500\u2500 scenario\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lane_follow_config.pb.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 side_pass_config.pb.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 stop_sign_unprotected_config.pb.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 traffic_light_protected_config.pb.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 traffic_light_unprotected_right_turn_config.pb.txt\n\u251c\u2500\u2500 spiral_smoother_config.pb.txt\n\u2514\u2500\u2500 traffic_rule_config.pb.txt\n</code></pre> <p>\u8fd9\u91cc\u7684\u7edd\u5927\u90e8\u5206\u6587\u4ef6\u90fd\u662f<code>.pb.txt</code>\u540e\u7f00\u7684\u3002\u56e0\u4e3a\u8fd9\u4e9b\u6587\u4ef6\u662f\u548c\u4e0a\u9762\u63d0\u5230\u7684proto\u7ed3\u6784\u76f8\u5bf9\u5e94\u7684\u3002\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u88abproto\u6587\u4ef6\u751f\u6210\u7684\u6570\u636e\u7ed3\u6784\u8bfb\u53d6\u3002\u5bf9\u4e8e\u4e0d\u719f\u6089\u7684\u8bfb\u8005\u53ef\u4ee5\u9605\u8bfbProtocal Buffer\u7684\u6587\u6863\uff1agoogle.protobuf.text_format\u3002</p> <p>\u8bfb\u8005\u6682\u65f6\u4e0d\u7528\u592a\u5728\u610f\u8fd9\u4e9b\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u968f\u7740\u5bf9\u4e8ePlanning\u6a21\u5757\u5b9e\u73b0\u7684\u719f\u6089\uff0c\u518d\u56de\u8fc7\u6765\u770b\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0c\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u6bcf\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u4f5c\u7528\u4e86\u3002\u4e0b\u6587\u4e2d\uff0c\u5bf9\u4e00\u4e9b\u5173\u952e\u5185\u5bb9\u6211\u4eec\u4f1a\u4e13\u95e8\u63d0\u53ca\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#planner","title":"Planner","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#planningplanner","title":"Planning\u4e0ePlanner","text":"<p>Apollo 3.5\u5e9f\u5f03\u4e86\u539f\u5148\u7684ROS\uff0c\u5f15\u5165\u4e86\u65b0\u7684\u8fd0\u884c\u73af\u5883\uff1aCyber RT\u3002</p> <p>Cyber RT\u4ee5\u7ec4\u4ef6\u7684\u65b9\u5f0f\u6765\u7ba1\u7406\u5404\u4e2a\u6a21\u5757\uff0c\u7ec4\u4ef6\u7684\u5b9e\u73b0\u4f1a\u57fa\u4e8e\u8be5\u6846\u67b6\u63d0\u4f9b\u7684\u57fa\u7c7b\uff1a<code>apollo::cyber::Component</code>\u3002</p> <p>Planning\u6a21\u5757\u81ea\u7136\u4e5f\u4e0d\u4f8b\u5916\u3002\u5176\u5b9e\u73b0\u7c7b\u662f\u4e0b\u9762\u8fd9\u4e2a\uff1a</p> <pre><code>class PlanningComponent final\n\n    : public cyber::Component&lt;prediction::PredictionObstacles, canbus::Chassis, localization::LocalizationEstimate&gt;\n</code></pre> <p>\u5728<code>PlanningComponent</code>\u7684\u5b9e\u73b0\u4e2d\uff0c\u4f1a\u6839\u636e\u5177\u4f53\u7684\u914d\u7f6e\u9009\u62e9Planning\u7684\u5165\u53e3\u3002Planning\u7684\u5165\u53e3\u901a\u8fc7<code>PlanningBase</code>\u7c7b\u6765\u63cf\u8ff0\u7684\u3002</p> <p>PlanningBase\u53ea\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8be5\u7c7b\u6709\u4e09\u4e2a\u5b50\u7c7b\uff1a</p> <ul> <li> <p>OpenSpacePlanning</p> </li> <li> <p>NaviPlanning</p> </li> <li> <p>StdPlanning</p> </li> </ul> <p><code>PlanningComponent::Init()</code>\u65b9\u6cd5\u4e2d\u4f1a\u6839\u636e\u914d\u7f6e\u9009\u62e9\u5177\u4f53\u7684Planning\u5165\u53e3\uff1a</p> <p><code>bool PlanningComponent::Init() { if (FLAGS_open_space_planner_switchable) { planning_base_ = std::make_unique&lt;OpenSpacePlanning&gt;(); } else { if (FLAGS_use_navigation_mode) { planning_base_ = std::make_unique&lt;NaviPlanning&gt;(); } else { planning_base_ = std::make_unique&lt;StdPlanning&gt;(); } }</code></p> <p>\u76ee\u524d\uff0c<code>FLAGS_open_space_planner_switchable</code>\u548c<code>FLAGS_use_navigation_mode</code>\u7684\u914d\u7f6e\u90fd\u662ffalse\uff0c\u56e0\u6b64\u6700\u7ec8\u7684Planning\u5165\u53e3\u7c7b\u662f\uff1a<code>StdPlanning</code>\u3002</p> <p>\u4e0b\u9762\u8fd9\u5e45\u56fe\u63cf\u8ff0\u4e86\u4e0a\u9762\u8bf4\u5230\u7684\u8fd9\u4e9b\u903b\u8f91\uff1a</p> <p></p> <p>\u6240\u4ee5\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ea\u8981\u5173\u6ce8StdPlanning\u7684\u5b9e\u73b0\u5373\u53ef\u3002\u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u4e0b\u9762\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53ca\u5176\u91cd\u8981\u7684\uff1a</p> <pre><code>/**\n* @brief main logic of the planning module,\n* runs periodically triggered by timer.\n*/\n\nvoid RunOnce(const LocalView&amp; local_view, ADCTrajectory* const trajectory_pb) override;\n</code></pre> <p>\u65b9\u6cd5\u7684\u6ce8\u91ca\u5df2\u7ecf\u8bf4\u660e\u5f97\u5f88\u6e05\u695a\u4e86\uff1a\u8fd9\u662fPlanning\u6a21\u5757\u7684\u4e3b\u4f53\u903b\u8f91\uff0c\u4f1a\u88abtimer\u4ee5\u56fa\u5b9a\u7684\u95f4\u9694\u8c03\u7528\u3002\u6bcf\u6b21\u8c03\u7528\u5c31\u662f\u4e00\u4e2a\u89c4\u5212\u5468\u671f\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#planningcycle","title":"PlanningCycle","text":"<p>\u5f88\u663e\u7136\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u91cd\u70b9\u8981\u5173\u6ce8\u7684\u5c31\u662f<code>StdPlanning::RunOnce</code>\u65b9\u6cd5\u7684\u903b\u8f91\u3002\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0\u8f83\u957f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d34\u51fa\u4ee3\u7801\u4e86\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u5e45\u56fe\u63cf\u8ff0\u5176\u4e2d\u7684\u903b\u8f91\uff1a</p> <p></p> <p>\u8bf7\u8bfb\u8005\u5c3d\u53ef\u80fd\u4ed4\u7ec6\u7684\u5173\u6ce8\u4e00\u4e0b\u8fd9\u5e45\u56fe\uff0c\u56e0\u4e3a\u5b83\u6db5\u76d6\u4e86\u4e0b\u6587\u6211\u4eec\u8981\u8ba8\u8bba\u7684\u6240\u6709\u5185\u5bb9\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#planner_1","title":"Planner\u6982\u8ff0","text":"<p>\u5728\u6700\u65b0\u7684Apollo\u6e90\u7801\u4e2d\uff0c\u4e00\u5171\u5305\u542b\u4e865\u4e2aPlanner\u7684\u5b9e\u73b0\u3002\u5b83\u4eec\u7684\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6bcf\u4e2aPlanner\u90fd\u4f1a\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u63cf\u8ff0\u7684\u552f\u4e00\u7c7b\u578b\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\uff08\u89c1\u4e0b\u6587\uff09\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u578b\u6765\u9009\u62e9\u76f8\u5e94\u7684Planner\u3002</p> <p>\u8fd95\u4e2aPlanner\u7684\u8bf4\u660e\u5982\u4e0b\u8868\u6240\u793a\uff1a</p> \u540d\u79f0 \u52a0\u5165\u7248\u672c \u7c7b\u578b \u8bf4\u660e RTKReplayPlanner 1.0 RTK \u6839\u636e\u5f55\u5236\u7684\u8f68\u8ff9\u6765\u89c4\u5212\u884c\u8f66\u8def\u7ebf\u3002 PublicRoadPlanner 1.5 PUBLIC_ROAD \u5b9e\u73b0\u4e86EM\u7b97\u6cd5\u7684\u89c4\u5212\u5668\uff0c\u8fd9\u662f\u76ee\u524d\u7684\u9ed8\u8ba4Planner\u3002 LatticePlanner 2.5 LATTICE \u57fa\u4e8e\u7f51\u683c\u7b97\u6cd5\u7684\u8f68\u8ff9\u89c4\u5212\u5668\u3002 NaviPlanner 3.0 NAVI \u57fa\u4e8e\u5b9e\u65f6\u76f8\u5bf9\u5730\u56fe\u7684\u89c4\u5212\u5668\u3002 OpenSpacePlanner 3.5 OPEN_SPACE \u7b97\u6cd5\u6e90\u4e8e\u8bba\u6587\uff1a\u300aOptimization-Based Collision Avoidance\u300b\u3002 <p>RTKReplayPlanner\u57fa\u4e8e\u5f55\u5236\u7684\u8f68\u8ff9\uff0c\u662f\u6bd4\u8f83\u539f\u59cb\u7684\u89c4\u5212\u5668\uff0c\u6240\u4ee5\u4e0d\u7528\u591a\u505a\u8bf4\u660e\u3002\u6700\u65b0\u52a0\u5165\u7684\u4e24\u4e2a\u89c4\u5212\u5668\uff08NaviPlanner\u548cOpenSpacePlanner\uff09\u76ee\u524d\u770b\u6765\u8fd8\u9700\u8981\u66f4\u591a\u65f6\u95f4\u7684\u9a8c\u8bc1\uff0c\u6211\u4eec\u6682\u65f6\u4e5f\u4e0d\u4f1a\u8fc7\u591a\u8bb2\u89e3\u3002</p> <p>Apollo\u516c\u5f00\u8bfe\u91cc\u5bf9\u4e24\u4e2a\u8f83\u4e3a\u6210\u719f\u7684Planner\uff1aEM Planner\u548cLattice Planner\u505a\u4e86\u5bf9\u6bd4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u8d77\u6765\u770b\u4e00\u4e0b\uff1a</p> EM Planner Lattice Planner \u6a2a\u5411\u7eb5\u5411\u5206\u5f00\u6c42\u89e3 \u6a2a\u5411\u7eb5\u5411\u540c\u65f6\u6c42\u89e3 \u53c2\u6570\u8f83\u591a\uff08DP/QP, Path/Speed\uff09 \u53c2\u6570\u8f83\u5c11\u4e14\u7edf\u4e00 \u6d41\u7a0b\u590d\u6742 \u6d41\u7a0b\u7b80\u5355 \u5355\u5468\u671f\u89e3\u7a7a\u95f4\u53d7\u9650 \u7b80\u5355\u573a\u666f\u89e3\u7a7a\u95f4\u8f83\u5927 \u80fd\u9002\u5e94\u590d\u6742\u573a\u666f \u9002\u5408\u7b80\u5355\u573a\u666f \u9002\u5408\u57ce\u5e02\u9053\u8def \u9002\u5408\u9ad8\u901f\u573a\u666f <p>\u540e\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c3d\u53ef\u80fd\u96c6\u4e2d\u5728EM Planner\u7b97\u6cd5\u4e0a\u3002\u5bf9\u4e8eLattice Planner\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u7ee7\u7eed\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff1a\u300aLattice Planner\u89c4\u5212\u7b97\u6cd5\u300b\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#planner_2","title":"Planner\u914d\u7f6e","text":"<p>Planner\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u662f\u5728<code>planning_gflags.cc</code>\u4e2d\u6307\u5b9a\u7684\uff0c\u76f8\u5173\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>// /modules/planning/common/planning_gflags.cc\n\nDEFINE_string(planning_config_file, \"/apollo/modules/planning/conf/planning_config.pb.txt\", \"planning config file\");\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e0b<code>planning_config.pb.txt</code>\u4e2d\u7684\u5185\u5bb9\uff1a</p> <pre><code>// modules/planning/conf/planning_config.pb.txt\n\nstandard_planning_config {\n\n  planner_type: PUBLIC_ROAD planner_type: OPEN_SPACE planner_public_road_config { scenario_type: LANE_FOLLOW scenario_type: SIDE_PASS scenario_type: STOP_SIGN_UNPROTECTED } }\n</code></pre> <p>\u8fd9\u91cc\u8bbe\u7f6e\u4e86\u4e24\u4e2aPlanner\uff0c\u6700\u7ec8\u9009\u62e9\u54ea\u4e00\u4e2a\u7531\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u51b3\u5b9a\uff1a</p> <p><code>std::unique_ptr&lt;Planner&gt; StdPlannerDispatcher::DispatchPlanner() { PlanningConfig planning_config; apollo::common::util::GetProtoFromFile(FLAGS_planning_config_file, &amp;planning_config); if (FLAGS_open_space_planner_switchable) { return planner_factory_.CreateObject( planning_config.standard_planning_config().planner_type(1)); } return planner_factory_.CreateObject( planning_config.standard_planning_config().planner_type(0)); }</code></p> <p><code>open_space_planner_switchable</code>\u51b3\u5b9a\u4e86\u662f\u5426\u80fd\u591f\u5207\u6362\u5230OpenSpacePlanner\u4e0a\u3002\u4f46\u76ee\u524d\u8fd9\u4e2a\u914d\u7f6e\u662f<code>false</code>\uff1a</p> <pre><code>// /modules/planning/common/planning_gflags.cc\n\nDEFINE_bool(open_space_planner_switchable, false, \"true for std planning being able to switch to open space planner \" \"when close enough to target parking spot\");\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#publicroadplanner","title":"PublicRoadPlanner","text":"<p><code>PublicRoadPlanner</code>\u662f\u76ee\u524d\u9ed8\u8ba4\u7684Planner\uff0c\u5b83\u5b9e\u73b0\u4e86EM\uff08Expectation Maximization\uff09\u7b97\u6cd5\u3002</p> <p>Planner\u7684\u7b97\u6cd5\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u8f93\u5165\uff1a</p> <ul> <li> <p>\u8f66\u8f86\u81ea\u8eab\u72b6\u6001\uff1a\u901a\u8fc7<code>TrajectoryPoint</code>\u63cf\u8ff0\u3002\u8be5\u7ed3\u6784\u4e2d\u5305\u542b\u4e86\u8f66\u8f86\u7684\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\uff0c\u65b9\u5411\u7b49\u4fe1\u606f\u3002</p> </li> <li> <p>\u5f53\u524d\u73af\u5883\u4fe1\u606f\uff1a\u901a\u8fc7<code>Frame</code>\u63cf\u8ff0\u3002\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\uff0c<code>Frame</code>\u4e2d\u5305\u542b\u4e86\u4e00\u6b21Planning\u8ba1\u7b97\u5faa\u73af\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002</p> </li> </ul> <p>\u5728<code>Frame</code>\u4e2d\u6709\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u503c\u5f97\u6211\u4eec\u91cd\u70b9\u5173\u4e8e\u4e00\u4e0b\uff0c\u90a3\u5c31\u662f<code>LocalView</code>\u3002\u8fd9\u4e2a\u7c7b\u5728\u524d\u9762\u6211\u4eec\u4e5f\u5df2\u7ecf\u63d0\u5230\u8fc7\u3002\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct LocalView {\n\n  std::shared_ptr&lt;prediction::PredictionObstacles&gt; prediction_obstacles; std::shared_ptr&lt;canbus::Chassis&gt; chassis; std::shared_ptr&lt;localization::LocalizationEstimate&gt; localization_estimate; std::shared_ptr&lt;perception::TrafficLightDetection&gt; traffic_light; std::shared_ptr&lt;routing::RoutingResponse&gt; routing; bool is_new_routing = false; std::shared_ptr&lt;relative_map::MapMsg&gt; relative_map; };\n</code></pre> <p>\u4ece\u8fd9\u4e2a\u5b9a\u4e49\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4e2d\u5305\u542b\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff1a</p> <ul> <li> <p>\u969c\u788d\u7269\u7684\u9884\u6d4b\u4fe1\u606f</p> </li> <li> <p>\u8f66\u8f86\u5e95\u76d8\u4fe1\u606f</p> </li> <li> <p>\u5927\u81f4\u5b9a\u4f4d\u4fe1\u606f</p> </li> <li> <p>\u4ea4\u901a\u706f\u4fe1\u606f</p> </li> <li> <p>\u5bfc\u822a\u8def\u7531\u4fe1\u606f</p> </li> <li> <p>\u76f8\u5bf9\u5730\u56fe\u4fe1\u606f</p> </li> </ul> <p>\u5bf9\u4e8e\u6bcf\u4e2aPlanner\u6765\u8bf4\uff0c\u5176\u4e3b\u8981\u7684\u903b\u8f91\u90fd\u5b9e\u73b0\u5728<code>Plan</code>\u65b9\u6cd5\u4e2d\u3002<code>PublicRoadPlanner::Plan</code>\u65b9\u6cd5\u7684\u5b9e\u73b0\u903b\u8f91\u5982\u4e0b\uff1a</p> <p><code>Status PublicRoadPlanner::Plan(const TrajectoryPoint&amp; planning_start_point, Frame* frame) { DCHECK_NOTNULL(frame); scenario_manager_.Update(planning_start_point, *frame); \u2460 scenario_ = scenario_manager_.mutable_scenario(); \u2461 auto result = scenario_-&gt;Process(planning_start_point, frame); \u2462 ... if (result  scenario::Scenario::STATUS_DONE) { scenario_manager_.Update(planning_start_point, *frame); \u2463 } else if (result  scenario::Scenario::STATUS_UNKNOWN) { return Status(common::PLANNING_ERROR, \"scenario returned unknown\"); } return Status::OK(); }</code></p> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u51e0\u4e2a\u5173\u952e\u6b65\u9aa4\u662f\uff1a</p> <ol> <li> <p>\u786e\u5b9a\u5f53\u524dScenario\uff1a\u56e0\u4e3aFrame\u4e2d\u5305\u542b\u4e86\u5f53\u524d\u72b6\u6001\u7684\u6240\u6709\u4fe1\u606f\uff0c\u6240\u4ee5\u901a\u8fc7\u5b83\u5c31\u53ef\u4ee5\u786e\u5b9a\u76ee\u524d\u662f\u5904\u4e8e\u54ea\u4e00\u4e2a\u573a\u666f\u4e0b\u3002</p> </li> <li> <p>\u83b7\u53d6\u5f53\u524dScenario\u3002</p> </li> <li> <p>\u901a\u8fc7Scenario\u8fdb\u884c\u5177\u4f53\u7684\u5904\u7406\u3002</p> </li> <li> <p>\u5982\u679c\u5904\u7406\u6210\u529f\uff0c\u5219\u518d\u6b21\u901a\u8fc7ScenarioManager\u66f4\u65b0\u3002</p> </li> </ol> <p>Scenario\u662fApollo 3.5\u4e0a\u65b0\u589e\u7684\u9a7e\u9a76\u573a\u666f\u529f\u80fd\u3002\u524d\u9762\u5728\u6a21\u5757\u67b6\u6784\u4e2d\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8be6\u7ec6\u770b\u4e00\u4e0b\u8fd9\u65b9\u9762\u5185\u5bb9\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#scenario","title":"Scenario","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_6","title":"\u573a\u666f\u5206\u7c7b","text":"<p>Apollo3.5\u805a\u7126\u5728\u4e09\u4e2a\u4e3b\u8981\u7684\u9a7e\u9a76\u573a\u666f\uff0c\u5373\uff1a</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_7","title":"\u8f66\u9053\u4fdd\u6301","text":"<p>\u8f66\u9053\u4fdd\u6301\u573a\u666f\u662f\u9ed8\u8ba4\u7684\u9a7e\u9a76\u573a\u666f\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u5305\u542b\u5355\u8f66\u9053\u5de1\u822a\u3002\u540c\u65f6\u4e5f\u5305\u542b\u4e86\uff1a</p> <ul> <li> <p>\u6362\u9053\u884c\u9a76</p> </li> <li> <p>\u9075\u5faa\u57fa\u672c\u7684\u4ea4\u901a\u7ea6\u5b9a</p> </li> <li> <p>\u57fa\u672c\u8f6c\u5f2f</p> </li> </ul> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#side-pass","title":"Side Pass","text":"<p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5728\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\uff08ADC\uff09\u7684\u8f66\u9053\u4e0a\u6709\u9759\u6001\u8f66\u8f86\u6216\u9759\u6001\u969c\u788d\u7269\uff0c\u5e76\u4e14\u8f66\u8f86\u4e0d\u80fd\u5728\u4e0d\u63a5\u89e6\u969c\u788d\u7269\u7684\u60c5\u51b5\u4e0b\u5b89\u5168\u5730\u901a\u8fc7\u8f66\u9053\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u7b56\u7565\uff1a</p> <ul> <li> <p>\u68c0\u67e5\u90bb\u8fd1\u8f66\u9053\u662f\u5426\u63a5\u8fd1\u901a\u884c</p> </li> <li> <p>\u5982\u679c\u65e0\u8f66\u8f86\uff0c\u8fdb\u884c\u7ed5\u884c\uff0c\u7ed5\u8fc7\u5f53\u524d\u8f66\u9053\u8fdb\u5165\u90bb\u9053</p> </li> <li> <p>\u4e00\u65e6\u969c\u788d\u7269\u5b89\u5168\u901a\u8fc7\uff0c\u56de\u5230\u539f\u8f66\u9053\u4e0a</p> </li> </ul> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_8","title":"\u505c\u6b62\u6807\u8bc6","text":"<p>\u505c\u6b62\u6807\u8bc6\u6709\u4e24\u79cd\u5206\u79bb\u7684\u9a7e\u9a76\u573a\u666f\uff1a</p> <p>1\u3001\u672a\u4fdd\u62a4\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6c7d\u8f66\u9884\u8ba1\u4f1a\u901a\u8fc7\u5177\u6709\u53cc\u5411\u505c\u8f66\u4f4d\u7684\u5341\u5b57\u8def\u53e3\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684ADC\u5fc5\u987b\u722c\u8fc7\u5e76\u6d4b\u91cf\u5341\u5b57\u8def\u53e3\u7684\u4ea4\u901a\u5bc6\u5ea6\uff0c\u7136\u540e\u624d\u80fd\u7ee7\u7eed\u8d70\u4e0a\u5b83\u7684\u9053\u8def\u3002</p> <p></p> <p>2\u3001\u53d7\u4fdd\u62a4\uff1a\u5728\u6b64\u573a\u666f\u4e2d\uff0c\u6c7d\u8f66\u9884\u671f\u901a\u8fc7\u5177\u6709\u56db\u5411\u505c\u8f66\u4f4d\u7684\u5341\u5b57\u8def\u53e3\u5bfc\u822a\u3002\u6211\u4eec\u7684ADC\u5c06\u5fc5\u987b\u5bf9\u5728\u5b83\u4e4b\u524d\u505c\u4e0b\u6765\u7684\u6c7d\u8f66\u8fdb\u884c\u6d4b\u91cf\uff0c\u5e76\u5728\u79fb\u52a8\u4e4b\u524d\u4e86\u89e3\u5b83\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_9","title":"\u573a\u666f\u5b9e\u73b0","text":"<p>\u573a\u666f\u7684\u5b9e\u73b0\u4e3b\u8981\u5305\u542b\u4e09\u79cd\u7c7b\uff1a</p> <ul> <li> <p><code>ScenarioManager</code>\uff1a\u573a\u666f\u7ba1\u7406\u5668\u7c7b\u3002\u8d1f\u8d23\u6ce8\u518c\uff0c\u9009\u62e9\u548c\u521b\u5efa<code>Scenario</code>\u3002</p> </li> <li> <p><code>Scenario</code>\uff1a\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684\u573a\u666f\uff08\u4f8b\u5982\uff1aSide Pass\uff09\u3002\u8be5\u7c7b\u4e2d\u5305\u542b\u4e86<code>CreateStage</code>\u65b9\u6cd5\u7528\u6765\u521b\u5efa<code>Stage</code>\u3002\u4e00\u4e2aScenario\u53ef\u80fd\u6709\u591a\u4e2aStage\u5bf9\u8c61\u3002\u5728Scenario\u4e2d\u4f1a\u6839\u636e\u914d\u7f6e\u987a\u5e8f\u4f9d\u6b21\u8c03\u7528<code>Stage::Process</code>\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4e86\u4ece\u4e00\u4e2aStage\u5207\u6362\u5230\u53e6\u5916\u4e00\u4e2aStage\u3002</p> </li> <li> <p><code>Stage</code>\uff1a\u5982\u4e0a\u9762\u6240\u8bf4\uff0c\u4e00\u4e2aScenario\u53ef\u80fd\u6709\u591a\u4e2aStage\u5bf9\u8c61\u3002\u573a\u666f\u529f\u80fd\u5b9e\u73b0\u7684\u4e3b\u4f53\u903b\u8f91\u901a\u5e38\u662f\u5728<code>Stage::Process</code>\u65b9\u6cd5\u4e2d\u3002</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_10","title":"\u573a\u666f\u914d\u7f6e","text":"<p>\u6240\u6709\u573a\u666f\u90fd\u662f\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6765\u8fdb\u884c\u914d\u7f6e\u7684\u3002\u5f88\u663e\u7136\uff0c\u9996\u5148\u9700\u8981\u5728proto\u6587\u4ef6\u5939\u4e2d\u5b9a\u4e49\u5176\u7ed3\u6784\u3002</p> <p>\u5176\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>// proto/planning_config.proto\nmessage ScenarioConfig {\n\n  message StageConfig { optional StageType stage_type = 1; optional bool enabled = 2 [default = true]; repeated TaskConfig.TaskType task_type = 3; repeated TaskConfig task_config = 4; } optional ScenarioType scenario_type = 1; oneof scenario_config { ScenarioLaneFollowConfig lane_follow_config = 2; ScenarioSidePassConfig side_pass_config = 3; ScenarioStopSignUnprotectedConfig stop_sign_unprotected_config = 4; ScenarioTrafficLightProtectedConfig traffic_light_protected_config = 5; ScenarioTrafficLightUnprotectedRightTurnConfig traffic_light_unprotected_right_turn_config = 6; } repeated StageType stage_type = 7; repeated StageConfig stage_config = 8; }\n</code></pre> <p>\u8fd9\u91cc\u5b9a\u4e49\u4e86ScenarioConfig\u7ed3\u6784\uff0c\u4e00\u4e2aScenarioConfig\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2aStageConfig\u3002</p> <p>\u53e6\u5916\uff0cStage\u548cScenario\u90fd\u6709\u4e00\u4e2aType\u5b57\u6bb5\uff0c\u5b83\u4eec\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>enum ScenarioType {\n\n    LANE_FOLLOW = 0; // default scenario CHANGE_LANE = 1; SIDE_PASS = 2; // go around an object when it blocks the road APPROACH = 3; // approach to an intersection STOP_SIGN_PROTECTED = 4; STOP_SIGN_UNPROTECTED = 5; TRAFFIC_LIGHT_PROTECTED = 6; TRAFFIC_LIGHT_UNPROTECTED_LEFT_TURN = 7; TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN = 8; } enum StageType { NO_STAGE = 0; LANE_FOLLOW_DEFAULT_STAGE = 1; STOP_SIGN_UNPROTECTED_PRE_STOP = 100; STOP_SIGN_UNPROTECTED_STOP = 101; STOP_SIGN_UNPROTECTED_CREEP = 102 ; STOP_SIGN_UNPROTECTED_INTERSECTION_CRUISE = 103; SIDE_PASS_APPROACH_OBSTACLE = 200; SIDE_PASS_GENERATE_PATH= 201; SIDE_PASS_STOP_ON_WAITPOINT = 202; SIDE_PASS_DETECT_SAFETY = 203; SIDE_PASS_PASS_OBSTACLE = 204; SIDE_PASS_BACKUP = 205; TRAFFIC_LIGHT_PROTECTED_STOP = 300; TRAFFIC_LIGHT_PROTECTED_INTERSECTION_CRUISE = 301; TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN_STOP = 310; TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN_CREEP = 311 ; TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN_INTERSECTION_CRUISE = 312; };\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_11","title":"\u573a\u666f\u6ce8\u518c","text":"<p>\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\uff0c<code>ScenarioManager</code>\u8d1f\u8d23\u573a\u666f\u7684\u6ce8\u518c\u3002\u5b9e\u9645\u4e0a\uff0c\u6ce8\u518c\u7684\u65b9\u5f0f\u5c31\u662f\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\uff1a</p> <p><code>void ScenarioManager::RegisterScenarios() { CHECK(Scenario::LoadConfig(FLAGS_scenario_lane_follow_config_file, &amp;config_map_[ScenarioConfig::LANE_FOLLOW])); CHECK(Scenario::LoadConfig(FLAGS_scenario_side_pass_config_file, &amp;config_map_[ScenarioConfig::SIDE_PASS])); CHECK(Scenario::LoadConfig( FLAGS_scenario_stop_sign_unprotected_config_file, &amp;config_map_[ScenarioConfig::STOP_SIGN_UNPROTECTED])); CHECK(Scenario::LoadConfig( FLAGS_scenario_traffic_light_protected_config_file, &amp;config_map_[ScenarioConfig::TRAFFIC_LIGHT_PROTECTED])); CHECK(Scenario::LoadConfig( FLAGS_scenario_traffic_light_unprotected_right_turn_config_file, &amp;config_map_[ScenarioConfig::TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN])); }</code></p> <p>\u914d\u7f6e\u6587\u4ef6\u5728\u4e0a\u6587\u4e2d\u5df2\u7ecf\u5168\u90e8\u5217\u51fa\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u91cc\u8bfb\u53d6\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e<code>/modules/planning/conf/scenario</code>\u76ee\u5f55\u4e0b\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_12","title":"\u573a\u666f\u786e\u5b9a","text":"<p>\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u786e\u5b9a\u5f53\u524d\u6240\u5904\u7684\u573a\u666f\u3002\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u8bf4\u4e86\uff0c\u786e\u5b9a\u573a\u666f\u7684\u4f9d\u636e\u662f<code>Frame</code>\u6570\u636e\u3002</p> <p><code>void ScenarioManager::Update(const common::TrajectoryPoint&amp; ego_point, const Frame&amp; frame) {</code></p> <p>\u8fd9\u91cc\u9762\u7684\u903b\u8f91\u5c31\u4e0d\u8fc7\u591a\u8bf4\u660e\u4e86\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u76f8\u5173\u4ee3\u7801\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_13","title":"\u573a\u666f\u914d\u7f6e","text":"<p>\u573a\u666f\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u4f4d\u4e8e<code>/modules/planning/conf/scenario</code>\u76ee\u5f55\u4e0b\u3002\u5728\u914d\u7f6e\u573a\u666f\u7684\u65f6\u5019\uff0c\u8fd8\u4f1a\u540c\u65f6\u4e3a\u573a\u666f\u914d\u7f6e\u76f8\u5e94\u7684Task\u5bf9\u8c61\u3002\u5173\u4e8e\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u5728\u4e0b\u6587\u8bb2\u89e3Task\u7684\u65f6\u5019\u518d\u4e00\u8d77\u770b\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#frenet","title":"Frenet\u5750\u6807\u7cfb","text":"<p>\u5927\u5bb6\u6700\u719f\u6089\u7684\u5750\u6807\u7cfb\u5e94\u8be5\u662f\u6a2a\u5411\u548c\u7eb5\u5411\u5782\u76f4\u7684\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3002\u4f46\u662f\u5728\u81ea\u52a8\u9a7e\u9a76\u9886\u57df\uff0c\u6700\u5e38\u7528\u7684\u5374\u662fFrenet\u5750\u6807\u7cfb\u3002\u57fa\u4e8eFrenet\u5750\u6807\u7cfb\u7684\u52a8\u4f5c\u89c4\u5212\u65b9\u6cd5\u7531\u4e8e\u662f\u7531BMW\u7684Moritz Werling\u63d0\u51fa\u7684\u3002</p> <p>\u4e4b\u6240\u4ee5\u8fd9\u4e48\u505a\uff0c\u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u7684\u9053\u8def\u90fd\u4e0d\u662f\u7b14\u76f4\u7684\uff0c\u800c\u662f\u5177\u6709\u4e00\u5b9a\u5f2f\u66f2\u5ea6\u7684\u5f27\u7ebf\u3002</p> <p></p> <p>\u5728Frenet\u5750\u6807\u7cfb\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9053\u8def\u7684\u4e2d\u5fc3\u7ebf\u4f5c\u4e3a\u53c2\u8003\u7ebf\uff0c\u4f7f\u7528\u53c2\u8003\u7ebf\u7684\u5207\u7ebf\u5411\u91cft\u548c\u6cd5\u7ebf\u5411\u91cfn\u5efa\u7acb\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u5982\u4e0a\u56fe\u7684\u53f3\u56fe\u6240\u793a\uff0c\u5b83\u4ee5\u8f66\u8f86\u81ea\u8eab\u4e3a\u539f\u70b9\uff0c\u5750\u6807\u8f74\u76f8\u4e92\u5782\u76f4\uff0c\u5206\u4e3as\u65b9\u5411\uff08\u5373\u6cbf\u7740\u53c2\u8003\u7ebf\u7684\u65b9\u5411\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u7eb5\u5411\uff0cLongitudinal\uff09\u548cd\u65b9\u5411\uff08\u5373\u53c2\u8003\u7ebf\u5f53\u524d\u7684\u6cd5\u5411\uff0c\u88ab\u79f0\u4e3a\u6a2a\u5411\uff0cLateral\uff09\uff0c\u76f8\u6bd4\u4e8e\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff08\u4e0a\u56fe\u7684\u5de6\u56fe\uff09\uff0cFrenet\u5750\u6807\u7cfb\u660e\u663e\u5730\u7b80\u5316\u4e86\u95ee\u9898\u3002\u56e0\u4e3a\u5728\u516c\u8def\u884c\u9a76\u4e2d\uff0c\u6211\u4eec\u603b\u662f\u80fd\u591f\u7b80\u5355\u7684\u627e\u5230\u9053\u8def\u7684\u53c2\u8003\u7ebf\uff08\u5373\u9053\u8def\u7684\u4e2d\u5fc3\u7ebf\uff09\uff0c\u90a3\u4e48\u57fa\u4e8e\u53c2\u8003\u7ebf\u7684\u4f4d\u7f6e\u7684\u8868\u793a\u5c31\u53ef\u4ee5\u7b80\u5355\u7684\u4f7f\u7528\u7eb5\u5411\u8ddd\u79bb\uff08\u5373\u6cbf\u7740\u9053\u8def\u65b9\u5411\u7684\u8ddd\u79bb\uff09\u548c\u6a2a\u5411\u8ddd\u79bb\uff08\u5373\u504f\u79bb\u53c2\u8003\u7ebf\u7684\u8ddd\u79bb\uff09\u6765\u63cf\u8ff0\u3002</p> <p>\u4e0b\u9762\u8fd9\u5e45\u56fe\u63cf\u8ff0\u4e86\u540c\u6837\u4e00\u4e2a\u8def\u6bb5\uff0c\u5206\u522b\u5728\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u548cFrenet\u5750\u6807\u7cfb\u4e0b\u7684\u63cf\u8ff0\u7ed3\u679c\u3002\u5f88\u663e\u7136\uff0cFrenet\u5750\u6807\u7cfb\u8981\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u5904\u7406\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#referenceline","title":"ReferenceLine","text":"<p>\u4e0b\u9762\u8fd9\u5e45\u56fe\u662fApollo\u516c\u5f00\u8bfe\u4e0a\u5bf9\u4e8ePlanning\u6a21\u5757\u67b6\u6784\u7684\u63cf\u8ff0\u3002</p> <p></p> <p>\u4ece\u8fd9\u4e2a\u56fe\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u53c2\u8003\u7ebf\u662f\u6574\u4e2a\u51b3\u7b56\u89c4\u5212\u7b97\u6cd5\u7684\u57fa\u7840\u3002\u4ece\u524d\u9762\u7684\u5185\u5bb9\u6211\u4eec\u4e5f\u770b\u5230\u4e86\uff0c\u5728Planning\u6a21\u5757\u7684\u6bcf\u4e2a\u8ba1\u7b97\u5faa\u73af\u4e2d\uff0c\u4f1a\u5148\u751f\u6210ReferencePath\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u8fdb\u884c\u540e\u9762\u7684\u5904\u7406\u3002\u4f8b\u5982\uff1a\u628a\u969c\u788d\u7269\u6295\u5f71\u5230\u53c2\u8003\u7ebf\u4e0a\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u628a\u8be6\u7ec6\u4ee3\u7801\u8d34\u51fa\u6765\u770b\u4e00\u4e0b\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#referencelineprovider","title":"ReferenceLineProvider","text":"<p>ReferenceLine\u7531ReferenceLineProvider\u4e13\u95e8\u8d1f\u8d23\u751f\u6210\u3002\u8fd9\u4e2a\u7c7b\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#referenceline_1","title":"\u521b\u5efaReferenceLine","text":"<p>ReferenceLine\u662f\u5728<code>StdPlanning::InitFrame</code>\u51fd\u6570\u4e2d\u751f\u6210\u7684\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p><code>Status StdPlanning::InitFrame(const uint32_t sequence_num, const TrajectoryPoint&amp; planning_start_point, const double start_time, const VehicleState&amp; vehicle_state, ADCTrajectory* output_trajectory) { frame_.reset(new Frame(sequence_num, local_view_, planning_start_point, start_time, vehicle_state, reference_line_provider_.get(), output_trajectory)); ... std::list&lt;ReferenceLine&gt; reference_lines; std::list&lt;hdmap::RouteSegments&gt; segments; if (!reference_line_provider_-&gt;GetReferenceLines(&amp;reference_lines, &amp;segments)) {</code></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#referencelineinfo","title":"ReferenceLineInfo","text":"<p>\u5728ReferenceLine\u4e4b\u5916\uff0c\u5728common\u76ee\u5f55\u4e0b\u8fd8\u6709\u4e00\u4e2a\u7ed3\u6784\uff1aReferenceLineInfo\uff0c\u8fd9\u4e2a\u7ed3\u6784\u624d\u662f\u5404\u4e2a\u6a21\u5757\u5b9e\u9645\u7528\u5230\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5176\u4e2d\u5305\u542b\u4e86ReferenceLine\uff0c\u4f46\u8fd8\u6709\u5176\u4ed6\u66f4\u8be6\u7ec6\u7684\u6570\u636e\u3002</p> <p>\u4eceReferenceLine\u5230ReferenceLineInfo\u662f\u5728<code>Frame::CreateReferenceLineInfo</code>\u4e2d\u5b8c\u6210\u7684\u3002</p> <p><code>bool Frame::CreateReferenceLineInfo( const std::list&lt;ReferenceLine&gt; &amp;reference_lines, const std::list&lt;hdmap::RouteSegments&gt; &amp;segments) { reference_line_info_.clear(); auto ref_line_iter = reference_lines.begin(); auto segments_iter = segments.begin(); while (ref_line_iter != reference_lines.end()) { if (segments_iter-&gt;StopForDestination()) { is_near_destination_ = true; } reference_line_info_.emplace_back(vehicle_state_, planning_start_point_, *ref_line_iter, *segments_iter); ++ref_line_iter; ++segments_iter; } ...</code></p> <p>ReferenceLineInfo\u4e0d\u4ec5\u4ec5\u5305\u542b\u4e86\u53c2\u8003\u7ebf\u4fe1\u606f\uff0c\u8fd8\u5305\u542b\u4e86\u8f66\u8f86\u72b6\u6001\uff0c\u8def\u5f84\u4fe1\u606f\uff0c\u901f\u5ea6\u4fe1\u606f\uff0c\u51b3\u7b56\u4fe1\u606f\u4ee5\u53ca\u8f68\u8ff9\u4fe1\u606f\u7b49\u3002Planning\u6a21\u5757\u7684\u7b97\u6cd5\u5f88\u591a\u90fd\u662f\u57fa\u4e8eReferenceLineInfo\u7ed3\u6784\u5b8c\u6210\u7684\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\uff1a</p> <p><code>bool Stage::ExecuteTaskOnReferenceLine( const common::TrajectoryPoint&amp; planning_start_point, Frame* frame) { for (auto&amp; reference_line_info : *frame-&gt;mutable_reference_line_info()) { ... if (reference_line_info.speed_data().empty()) { *reference_line_info.mutable_speed_data() = SpeedProfileGenerator::GenerateFallbackSpeedProfile(); reference_line_info.AddCost(kSpeedOptimizationFallbackCost); reference_line_info.set_trajectory_type(ADCTrajectory::SPEED_FALLBACK); } else { reference_line_info.set_trajectory_type(ADCTrajectory::NORMAL); } DiscretizedTrajectory trajectory; if (!reference_line_info.CombinePathAndSpeedProfile( planning_start_point.relative_time(), planning_start_point.path_point().s(), &amp;trajectory)) { AERROR &lt;&lt; \"Fail to aggregate planning trajectory.\"; return false; } reference_line_info.SetTrajectory(trajectory); reference_line_info.SetDrivable(true); return true; } return true; }</code></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#smoother","title":"Smoother","text":"<p>\u4e3a\u4e86\u4fdd\u8bc1\u8f66\u8f86\u8f68\u8ff9\u7684\u5e73\u987a\uff0c\u53c2\u8003\u7ebf\u5fc5\u987b\u662f\u7ecf\u8fc7\u5e73\u6ed1\u7684\uff0c\u76ee\u524dApollo\u4e2d\u5305\u542b\u4e86\u8fd9\u4e48\u51e0\u4e2aSmoother\u7528\u6765\u505a\u53c2\u8003\u7ebf\u7684\u5e73\u6ed1\uff1a</p> <p></p> <p>\u5728\u5b9e\u73b0\u4e2d\uff0cSmoother\u7528\u5230\u4e86\u4e0b\u9762\u4e24\u4e2a\u5f00\u6e90\u5e93\uff1a</p> <ul> <li> <p>Ipopt Project</p> </li> <li> <p>Eigen</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#trafficrule","title":"TrafficRule","text":"<p>\u884c\u9a76\u5728\u57ce\u5e02\u9053\u8def\u4e0a\u7684\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u5fc5\u5b9a\u53d7\u5230\u5404\u79cd\u4ea4\u901a\u89c4\u5219\u7684\u9650\u5236\u3002\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8f66\u8f86\u4e0d\u5e94\u5f53\u8fdd\u53cd\u4ea4\u901a\u89c4\u5219\u3002</p> <p>\u53e6\u5916\uff0c\u4ea4\u901a\u89c4\u5219\u901a\u5e38\u662f\u591a\u79cd\u6761\u4f8b\uff0c\u4e0d\u540c\u57ce\u5e02\u548c\u56fd\u5bb6\u5730\u533a\u7684\u4ea4\u901a\u89c4\u5219\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u5982\u679c\u5904\u7406\u597d\u8fd9\u4e9b\u4ea4\u901a\u89c4\u5219\u5c31\u662f\u6a21\u5757\u5b9e\u73b0\u9700\u8981\u8003\u8651\u7684\u4e86\u3002\u76ee\u524dPlanning\u6a21\u5757\u7684\u5b9e\u73b0\u4e2d\uff0c\u6709\u5982\u4e0b\u8fd9\u4e9b\u4ea4\u901a\u89c4\u5219\u7684\u5b9e\u73b0\uff1a</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#trafficrule_1","title":"TrafficRule\u914d\u7f6e","text":"<p>\u4ea4\u901a\u6761\u4f8b\u7684\u751f\u6548\u5e76\u975e\u662f\u4e00\u6210\u4e0d\u53d8\u7684\uff0c\u56e0\u6b64\u81ea\u7136\u5c31\u9700\u8981\u6709\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6765\u8fdb\u884c\u914d\u7f6e\u3002\u4ea4\u901a\u89c4\u5219\u7684\u914d\u7f6e\u6587\u4ef6\u662f\uff1a<code>modules/planning/conf/traffic_rule_config.pb.txt</code>\u3002</p> <p>\u4e0b\u9762\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\uff1a</p> <pre><code>// modules/planning/conf/traffic_rule_config.pb.txt\n...\n\nconfig: { rule_id: SIGNAL_LIGHT enabled: true signal_light { stop_distance: 1.0 max_stop_deceleration: 6.0 min_pass_s_distance: 4.0 max_stop_deacceleration_yellow_light: 3.0 signal_expire_time_sec: 5.0 max_monitor_forward_distance: 135.0 righ_turn_creep { enabled: false min_boundary_t: 6.0 stop_distance: 0.5 speed_limit: 1.0 } } }\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#trafficdecider","title":"TrafficDecider","text":"<p>TrafficDecider\u662f\u4ea4\u901a\u89c4\u5219\u5904\u7406\u7684\u5165\u53e3\uff0c\u5b83\u8d1f\u8d23\u8bfb\u53d6\u4e0a\u9762\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u6267\u884c\u4ea4\u901a\u89c4\u5219\u7684\u68c0\u67e5\u3002\u5728\u4e0a\u6587\u4e2d\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u4ea4\u901a\u89c4\u5219\u7684\u6267\u884c\u662f\u5728<code>StdPlanning::RunOnce</code>\u4e2d\u5b8c\u6210\u7684\u3002\u5177\u4f53\u6267\u884c\u7684\u903b\u8f91\u5982\u4e0b\uff1a</p> <p><code>Status TrafficDecider::Execute(Frame *frame, ReferenceLineInfo *reference_line_info) { for (const auto &amp;rule_config : rule_configs_.config()) { if (!rule_config.enabled()) { \u2460 continue; } auto rule = s_rule_factory.CreateObject(rule_config.rule_id(), rule_config); \u2461 if (!rule) { continue; } rule-&gt;ApplyRule(frame, reference_line_info); \u2462 } BuildPlanningTarget(reference_line_info); \u2463 return Status::OK(); }</code></p> <p>\u8fd9\u6bb5\u4ee3\u7801\u8bf4\u660e\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u904d\u5386\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e00\u6761\u4ea4\u901a\u89c4\u5219\uff0c\u5224\u65ad\u662f\u5426enable\u3002</p> </li> <li> <p>\u521b\u5efa\u5177\u4f53\u7684\u4ea4\u901a\u89c4\u5219\u5bf9\u8c61\u3002</p> </li> <li> <p>\u6267\u884c\u8be5\u6761\u4ea4\u901a\u89c4\u5219\u903b\u8f91\u3002</p> </li> <li> <p>\u5728ReferenceLineInfo\u4e0a\u5408\u5e76\u5904\u7406\u6240\u6709\u4ea4\u901a\u89c4\u5219\u6700\u540e\u7684\u7ed3\u679c\u3002</p> </li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#task","title":"Task","text":"<p>\u4e00\u76f4\u5230\u76ee\u524d\u6700\u65b0\u7684Apollo 3.5\u7248\u672c\u4e3a\u6b62\uff0cPlanning\u6a21\u5757\u6700\u6838\u5fc3\u7684\u7b97\u6cd5\u5c31\u662f\u5176EM Planner\uff08\u5b9e\u73b0\u7c7b\u662f<code>PublicRoadPlanner</code>\uff09\uff0c\u800cEM Planner\u6700\u6838\u5fc3\u7684\u5c31\u662f\u5176\u51b3\u7b56\u5668\u548c\u4f18\u5316\u5668\u3002</p> <p>\u4f46\u7531\u4e8e\u7bc7\u5e45\u6240\u9650\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u672c\u6587\u4e0d\u518d\u7ee7\u7eed\u6df1\u5165\u3002\u9884\u8ba1\u540e\u9762\u4f1a\u518d\u901a\u8fc7\u4e00\u7bc7\u6587\u7ae0\u6765\u8bb2\u89e3\u3002\u8fd9\u91cc\u6211\u4eec\u4ec5\u4ec5\u7c97\u7565\u7684\u4e86\u89e3\u4e00\u4e0b\u5176\u5b9e\u73b0\u7ed3\u6784\u3002</p> <p>Planning\u4e2d\u8fd9\u90e8\u5206\u903b\u8f91\u5b9e\u73b0\u4f4d\u4e8e<code>tasks</code>\u76ee\u5f55\u4e0b\uff0c\u65e0\u8bba\u662f\u51b3\u7b56\u5668\u8fd8\u662f\u4f18\u5316\u5668\u90fd\u662f\u4ece<code>apollo::planning::Task</code>\u7ee7\u627f\u7684\u3002\u8be5\u7c7b\u5177\u6709\u4e0b\u9762\u8fd9\u4e9b\u5b50\u7c7b\uff1a</p> <p></p> <p><code>Task</code>\u7c7b\u63d0\u4f9b\u4e86<code>Execute</code>\u65b9\u6cd5\u4f9b\u5b50\u7c7b\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4f9d\u8d56\u7684\u6570\u636e\u7ed3\u6784\u5c31\u662f<code>Frame</code>\u548c<code>ReferenceLineInfo</code>\u3002</p> <p><code>Status Task::Execute(Frame* frame, ReferenceLineInfo* reference_line_info) { frame_ = frame; reference_line_info_ = reference_line_info; return Status::OK(); }</code></p> <p>\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfb\u5b50\u7c7b\u7684<code>Execute</code>\u65b9\u6cd5\u6765\u4e86\u89e3\u7b97\u6cd5\u5b9e\u73b0\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#task_1","title":"Task\u914d\u7f6e","text":"<p>\u4e0a\u6587\u4e2d\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\uff0c\u573a\u666f\u548cTask\u914d\u7f6e\u662f\u5728\u4e00\u8d77\u7684\u3002\u8fd9\u4e9b\u914d\u7f6e\u5728\u4e0b\u9762\u8fd9\u4e9b\u6587\u4ef6\u4e2d\uff1a</p> <pre><code>// /modules/planning/conf/scenario\n.\n\n\u251c\u2500\u2500 lane_follow_config.pb.txt \u251c\u2500\u2500 side_pass_config.pb.txt \u251c\u2500\u2500 stop_sign_unprotected_config.pb.txt \u251c\u2500\u2500 traffic_light_protected_config.pb.txt \u2514\u2500\u2500 traffic_light_unprotected_right_turn_config.pb.txt\n</code></pre> <p>\u4e00\u4e2aScenario\u53ef\u80fd\u6709\u591a\u4e2aStage\uff0c\u6bcf\u4e2aStage\u53ef\u4ee5\u6307\u5b9a\u76f8\u5e94\u7684Task\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>// /modules/planning/conf/scenario/lane_follow_config.pb.txt\n\nscenario_type: LANE_FOLLOW\n\nstage_type: LANE_FOLLOW_DEFAULT_STAGE stage_config: { stage_type: LANE_FOLLOW_DEFAULT_STAGE enabled: true task_type: DECIDER_RULE_BASED_STOP task_type: DP_POLY_PATH_OPTIMIZER ... task_config: { task_type: DECIDER_RULE_BASED_STOP } task_config: { task_type: QP_PIECEWISE_JERK_PATH_OPTIMIZER } task_config: { task_type: DP_POLY_PATH_OPTIMIZER } ... }\n</code></pre> <p>\u8fd9\u91cc\u7684<code>task_type</code>\u4e0eTask\u5b9e\u73b0\u7c7b\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#task_2","title":"Task\u8bfb\u53d6","text":"<p>\u5728\u6784\u9020Stage\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u8bfb\u53d6\u8fd9\u91cc\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5e94\u7684Task\uff1a</p> <p><code>Stage::Stage(const ScenarioConfig::StageConfig&amp; config) : config_(config) { name_ = ScenarioConfig::StageType_Name(config_.stage_type()); next_stage_ = config_.stage_type(); std::unordered_map&lt;TaskConfig::TaskType, const TaskConfig*, std::hash&lt;int&gt;&gt; config_map; for (const auto&amp; task_config : config_.task_config()) { config_map[task_config.task_type()] = &amp;task_config; } for (int i = 0; i &lt; config_.task_type_size(); ++i) { auto task_type = config_.task_type(i); CHECK(config_map.find(task_type) != config_map.end()) &lt;&lt; \"Task: \" &lt;&lt; TaskConfig::TaskType_Name(task_type) &lt;&lt; \" used but not configured\"; auto ptr = TaskFactory::CreateTask(*config_map[task_type]); task_list_.push_back(ptr.get()); tasks_[task_type] = std::move(ptr); } }</code></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#task_3","title":"Task\u6267\u884c","text":"<p>Task\u7684\u6267\u884c\u662f\u5728<code>Stage::Process</code>\u4e2d\uff0c\u901a\u8fc7<code>ExecuteTaskOnReferenceLine</code>\u5b8c\u6210\u7684\u3002</p> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u641e\u4e0d\u6e05\u695a\u8fd9\u4e2a\u903b\u8f91\u5173\u7cfb\uff0c\u8bf7\u56de\u5230&gt; &gt; \u4e0a\u6587&gt; \u770b\u4e00\u4e0b</p> <p><code>bool Stage::ExecuteTaskOnReferenceLine( const common::TrajectoryPoint&amp; planning_start_point, Frame* frame) { for (auto&amp; reference_line_info : *frame-&gt;mutable_reference_line_info()) { ... auto ret = common::Status::OK(); for (auto* task : task_list_) { ret = task-&gt;Execute(frame, &amp;reference_line_info); if (!ret.ok()) { AERROR &lt;&lt; \"Failed to run tasks[\" &lt;&lt; task-&gt;Name() &lt;&lt; \"], Error message: \" &lt;&lt; ret.error_message(); break; } } ... } return true; }</code></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%A7%A3%E6%9E%90%E7%99%BE%E5%BA%A6Apollo%E4%B9%8B%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%92%E6%A8%A1%E5%9D%97/#_14","title":"\u53c2\u8003\u8d44\u6599\u4e0e\u63a8\u8350\u8bfb\u7269","text":"<ul> <li> <p>ApolloAuto/apollo</p> </li> <li> <p>apollo/modules/planning README</p> </li> <li> <p>Class Architecture and Overview \u2013 Planning Module</p> </li> <li> <p>A Survey of Motion Planning and Control Techniques for Self-driving Urban Vehicles</p> </li> <li> <p>Optimal Trajectory Generation for Dynamic Street Scenarios in a Frene \u0301t Frame</p> </li> <li> <p>\u65e0\u4eba\u9a7e\u9a76\u6c7d\u8f66\u7cfb\u7edf\u5165\u95e8\u2014\u2014\u57fa\u4e8eFrenet\u4f18\u5316\u8f68\u8ff9\u7684\u65e0\u4eba\u8f66\u52a8\u4f5c\u89c4\u5212\u65b9\u6cd5</p> </li> <li> <p>Apollo\u5f00\u53d1\u8005\u793e\u533a - Lattice Planner\u89c4\u5212\u7b97\u6cd5</p> </li> <li> <p>Apollo 2.5\u7248\u5bfc\u822a\u6a21\u5f0f\u7684\u4f7f\u7528\u65b9\u6cd5</p> </li> <li> <p>Apollo \u89c4\u5212\u6280\u672f\u8be6\u89e3</p> </li> <li> <p>Apollo \u65e0\u4eba\u9a7e\u9a76\u514d\u8d39\u5165\u95e8\u8bfe\u7a0b</p> </li> <li> <p>Apollo 3.0 Software Architecture</p> </li> </ul> <p>\u539f\u6587\u5730\u5740\uff1a\u300a\u89e3\u6790\u767e\u5ea6Apollo\u4e4b\u51b3\u7b56\u89c4\u5212\u6a21\u5757\u300b by \u4fdd\u7f57\u7684\u9152\u5427</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/","title":"\u8bad\u7ec3\u7ecf\u9a8c","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#poseaug","title":"poseaug","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#dropout-sd-map","title":"dropout sd map","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#goodhardeventmodel-mining","title":"\u6570\u636e\u63d0\u7eaf\uff0c\u52a0\u5927 GoodHardEvent\u914d\u6bd4\uff08model mining\u6216\u4e91\u7aef\u5f71\u5b50\u6a21\u5f0f\uff09","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#drop-imitation-loss","title":"\u968f\u673adrop imitation loss","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#madeanchor","title":"\u6b63\u6837\u672c\u5339\u914d\u903b\u8f91\uff08made\u6700\u5c0f/\u4e0d\u538b\u5b9e\u7ebf/anchor\u5339\u914d\uff09","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#_1","title":"\u5982\u4f55\u89e3\u51b3\u56e0\u679c\u6df7\u6dc6\uff1f\u6bd4\u5982\u7ea2\u7eff\u706f\u542f\u505c","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#1-vaug","title":"1 vaug","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#2-drop","title":"2 drop \u81ea\u8f66\u72b6\u6001(\u5386\u53f2\u8f68\u8ff9)","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#3-cilrs","title":"3 \u8bba\u6587\u4e2d\u7684\u505a\u6cd5\uff08CILRS\uff09\uff0c\u7528\u56fe\u50cf\u53bb\u9884\u6d4b\u4e0b\u4e00\u65f6\u523b\u7684\u901f\u5ea6\uff0c\u8ba9\u6a21\u578b\u5b66\u4f1a\u7528\u5229\u7528\u56fe\u50cf\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u524d\u4e00\u65f6\u523b\u7684\u72b6\u6001","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#4","title":"4 \u6570\u636e","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#_2","title":"\u5982\u4f55\u89e3\u51b3\u5206\u5e03\u6f02\u79fb\uff1f\u4ece\u9519\u8bef\u4e2d\u6062\u590d\u51fa\u6765","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#1-poseaug","title":"1 poseaug","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#2","title":"2 \u6570\u636e","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#3-rl","title":"3 RL","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#trick","title":"\u5176\u4ed6trick","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#1-drop-sdmap","title":"1 drop sdmap","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%AE%AD%E7%BB%83%E7%BB%8F%E9%AA%8C/#_3","title":"\u8d85\u53c2\u6570\uff1a","text":"<p>bev\uff1a \uff08-50\uff0c110\uff09\uff0c\uff08-32\uff0c32\uff09\uff0c40\u00d716\uff0c640\u00d7256</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%BD%A6%E8%BE%86%E7%9A%84%E4%B8%89%E7%A7%8D%E8%87%AA%E8%A1%8C%E8%BD%A6%E6%A8%A1%E5%9E%8B/","title":"\u8f66\u8f86\u7684\u4e09\u79cd\u81ea\u884c\u8f66\u6a21\u578b","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%BD%A6%E8%BE%86%E7%9A%84%E4%B8%89%E7%A7%8D%E8%87%AA%E8%A1%8C%E8%BD%A6%E6%A8%A1%E5%9E%8B/#_1","title":"\u4ee5\u540e\u8f74\u4e3a\u4e2d\u5fc3","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%BD%A6%E8%BE%86%E7%9A%84%E4%B8%89%E7%A7%8D%E8%87%AA%E8%A1%8C%E8%BD%A6%E6%A8%A1%E5%9E%8B/#_2","title":"\u4ee5\u8d28\u5fc3\u4e3a\u539f\u70b9","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%BD%A6%E8%BE%86%E7%9A%84%E4%B8%89%E7%A7%8D%E8%87%AA%E8%A1%8C%E8%BD%A6%E6%A8%A1%E5%9E%8B/#_3","title":"\u4ee5\u524d\u8f74\u4e3a\u4e2d\u5fc3","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92%E7%BB%BC%E8%BF%B0/","title":"\u8f68\u8ff9\u89c4\u5212\u7efc\u8ff0","text":"<p>\u8f68\u8ff9\u89c4\u5212(Trajectories Planning)\u4e3b\u8981\u6307\u8003\u8651\u5b9e\u9645\u4e34\u65f6\u6216\u8005\u79fb\u52a8\u969c\u788d\u7269\uff0c\u8003\u8651\u901f\u5ea6\uff0c\u52a8\u529b\u5b66\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u6309\u7167\u89c4\u5212\u8def\u5f84\u8fdb\u884c\u8f68\u8ff9\u89c4\u5212\u3002</p> <p>\u8f68\u8ff9\u89c4\u5212\u7684\u6838\u5fc3\u5c31\u662f\u8981\u89e3\u51b3\u8f66\u8f86\u8be5\u600e\u4e48\u8d70\u7684\u95ee\u9898\u3002\u8f68\u8ff9\u89c4\u5212\u7684\u8f93\u5165\u5305\u62ec\u62d3\u6251\u5730\u56fe\uff0c\u969c\u788d\u7269\u53ca\u969c\u788d\u7269\u7684\u9884\u6d4b\u8f68\u8ff9\uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\u7684\u72b6\u6001\uff0c\u8fd8\u6709\u5b9a\u4f4d\u5bfc\u822a\uff08\u56e0\u4e3a\u8981\u77e5\u9053\u76ee\u7684\u5730\u662f\u54ea\u624d\u80fd\u89c4\u5212\u8def\u5f84\uff09\u3001\u8f66\u8f86\u72b6\u6001\u7b49\u5176\u4ed6\u4fe1\u606f\u3002\u800c\u8f68\u8ff9\u89c4\u5212\u7684\u8f93\u51fa\u5c31\u662f\u4e00\u4e2a\u8f68\u8ff9\uff0c\u8f68\u8ff9\u662f\u4e00\u4e2a\u65f6\u95f4\u5230\u4f4d\u7f6e\u7684\u51fd\u6570\uff0c\u5c31\u662f\u5728\u7279\u5b9a\u7684\u65f6\u523b\u8f66\u8f86\u5728\u7279\u5b9a\u7684\u4f4d\u7f6e\u4e0a\u3002</p> <p>\u8f68\u8ff9\u89c4\u5212\u7efc\u8ff0</p> <p>\u8f68\u8ff9\u89c4\u5212\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u51fa\u5b89\u5168\u3001\u8212\u9002\u7684\u8f68\u8ff9\u4f9b\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u5b8c\u6210\u9884\u5b9a\u7684\u884c\u9a76\u4efb\u52a1\u3002\u5b89\u5168\u610f\u5473\u7740\u8f66\u8f86\u5728\u884c\u9a76\u8fc7\u7a0b\u4e2d\u4e0e\u969c\u788d\u7269\u4fdd\u6301\u9002\u5f53\u7684\u8ddd\u79bb\uff0c\u907f\u514d\u78b0\u649e\uff1b\u8212\u9002\u610f\u5473\u7740\u7ed9\u4e58\u5ba2\u63d0\u4f9b\u8212\u9002\u7684\u4e58\u5750\u4f53\u9a8c\uff0c\u6bd4\u5982\u907f\u514d\u8fc7\u6025\u7684\u52a0\u51cf\u901f\u5ea6\uff0c\u5728\u5f2f\u9053\u65f6\u9002\u5f53\u51cf\u901f\u907f\u514d\u8fc7\u5927\u7684\u5411\u5fc3\u52a0\u901f\u5ea6\u7b49\u7b49\uff1b\u6700\u540e\uff0c\u5b8c\u6210\u884c\u9a76\u4efb\u52a1\u6307\u89c4\u5212\u51fa\u7684\u8f68\u8ff9\u8981\u5b8c\u6210\u7ed9\u5b9a\u7684\u884c\u9a76\u4efb\u52a1\uff0c\u4e0d\u80fd\u56e0\u4e3a\u8fc7\u4e8e\u4fdd\u5b88\u7684\u9a7e\u9a76\u5bfc\u81f4\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u9a76\u65f6\u95f4\u3002</p> <p></p> <p>\u65e0\u4eba\u9a7e\u9a76\u7684\u4f4d\u5f62\u4e0e\u72b6\u6001</p> <p>\u6211\u4eec\u8fd9\u91cc\u5bf9\u8f68\u8ff9\u89c4\u5212\u95ee\u9898\u4f5c\u6b63\u5f0f\u7684\u5b9a\u4e49\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e24\u4e2a\u673a\u5668\u4eba\u9886\u57df\u7684\u6982\u5ff5\uff1a\u4f4d\u5f62\uff08Configuration\uff09\u662f\u5728\u6240\u7814\u7a76\u7684\u89c4\u5212\u95ee\u9898\u4e2d\uff0c\u80fd\u591f\u552f\u4e00\u6027\u7684\u8868\u8fbe\u673a\u5668\u4eba\u72b6\u6001\u7684\u6700\u5c0f\u4e00\u7ec4\u53d8\u91cf\u3002\u53d8\u91cf\u7684\u6570\u91cf\u79f0\u4e3a\u4f4d\u5f62\u7684\u7ef4\u5ea6\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f4d\u5f62\u7a7a\u95f4\u7684\u7ef4\u5ea6\uff0c\u5373\u4f7f\u5bf9\u4e8e\u540c\u4e00\u4e2a\u673a\u5668\u4eba\u6765\u8bb2\uff0c\u6240\u7814\u7a76\u7684\u95ee\u9898\u4e0d\u540c\uff0c\u7ef4\u5ea6\u4e5f\u662f\u4e0d\u540c\u7684\u3002\u6bd4\u5982\uff0c\u5bf9\u4e00\u4e2a\u4eba\u5f62\u673a\u5668\u4eba\u6765\u8bb2\uff0c\u5982\u679c\u89c4\u5212\u95ee\u9898\u662f\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u79fb\u52a8\uff0c\u4f4d\u5f62\u9700\u8981\u7531\u53c2\u7167\u70b9\u7684\u53d8\u6362\u77e9\u9635\uff0c\u5173\u8282\u7684\u4f38\u5c55\u89d2\u5ea6\u7ec4\u6210\uff1b\u5982\u679c\u89c4\u5212\u95ee\u9898\u662f\u4f5c\u7269\u4f53\u7684\u64cd\u4f5c\uff08Manipulation Planning\uff09\uff0c\u5219\u5728\u524d\u9762\u95ee\u9898\u4f4d\u5f62\u7a7a\u95f4\u7684\u57fa\u7840\u4e0a\uff0c\u8fd8\u8981\u589e\u52a0\u673a\u5668\u4eba\u624b\u6307\u5173\u8282\u7684\u4f38\u5c55\u89d2\u5ea6\u7b49\u3002</p> <p>\u5bf9\u4e8e\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u6765\u8bb2\uff0c\u6700\u7b80\u5355\u7684\u4f4d\u5f62\u63cf\u8ff0\u9700\u8981\u4f7f\u75283\u4e2a\u53d8\u91cf\uff1a\u8f66\u8f86\u67d0\u4e2a\u53c2\u7167\u70b9\u7684\u5750\u6807(x, y)\uff0c\u4ee5\u53ca\u8f66\u8f86\u7684\u671d\u5411\u03b8\u6765\u8868\u8fbe\u8f66\u8f86\u7684\u6784\u578b\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u53c2\u8003\u6587\u732e\u4e2d\uff0c\u5bf9\u4e8e\u975e\u548c\u8c10\u8f66\u8f86\u7cfb\u7edf\u7684\u4f4d\u5f62\u8868\u8fbe\u65b9\u5f0f\u3002\u5bf9\u4e8e\u6211\u4eec\u4e13\u95e8\u4e3a\u6709\u4eba\u4e58\u7528\u7684\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u4f5c\u8f68\u8ff9\u89c4\u5212\u7684\u95ee\u9898\u6765\u8bb2\uff0c\u66f4\u597d\u7684\u4f4d\u5f62\u7ec4\u6210\u5728\u4e0a\u9762\u76843\u4e2a\u53d8\u91cf\u57fa\u7840\u4e0a\u52a0\u5165\u8f66\u8f86\u7684\u5373\u65f6\u8f6c\u5411\u66f2\u7387\u03ba\uff1a\u5982\u679c\u8f66\u8f86\u7684\u5bfc\u5411\u8f6e\u4fdd\u6301\u4e00\u5b9a\u7684\u89d2\u5ea6\uff0c\u8f66\u8f86\u4f1a\u505a\u5706\u5468\u8fd0\u52a8\u3002\u8fd9\u4e2a\u5706\u5468\u8fd0\u52a8\u7684\u534a\u5f84\u5c31\u662f\u5373\u65f6\u8f6c\u5411\u66f2\u7387 \u03ba\u3002\u52a0\u5165\u03ba\uff0c\u6709\u52a9\u4e8e\u63a7\u5236\u6a21\u5757\u83b7\u5f97\u66f4\u51c6\u786e\u7684\u63a7\u5236\u53cd\u9988\uff0c\u8bbe\u8ba1\u66f4\u4e3a\u7cbe\u7ec6\u5e73\u7a33\u7684\u63a7\u5236\u5668\u3002</p> <p>\u8f68\u8ff9\u89c4\u5212\u7684\u5b9a\u4e49</p> <p>\u8f68\u8ff9\u89c4\u5212\u7684\u6b63\u5f0f\u5b9a\u4e49\uff0c\u8ba1\u7b97\u4e00\u4e2a\u4ee5\u65f6\u95f4t\u4e3a\u53c2\u6570\u7684\u51fd\u6570S\uff0c\u5bf9\u4e8e\u5b9a\u4e49\u57df\u5185\uff08[0, t_max]\uff09\u7684\u6bcf\u4e00\u4e2at\uff0c\u90fd\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u72b6\u6001 s\uff1a\u6ee1\u8db3\u76ee\u6807\u8f66\u8f86\u7684\u8fd0\u52a8\u5b66\u7ea6\u675f\uff0c\u78b0\u649e\u7ea6\u675f\uff0c\u4ee5\u53ca\u8f66\u8f86\u7684\u7269\u7406\u6781\u9650\u3002</p> <p>\u8f68\u8ff9\u89c4\u5212\u95ee\u9898\u7684\u96be\u70b9</p> <p>\u8f68\u8ff9\u89c4\u5212\u662f\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff0c\u9996\u5148\uff0c\u89c4\u5212\u4e0a\u52a0\u5165\u4e86\u901f\u5ea6\u4e0e\u65f6\u95f4\u7684\u4fe1\u606f\uff0c\u589e\u52a0\u4e86\u89c4\u5212\u7684\u7ef4\u5ea6\u3002\u5176\u6b21\uff0c\u7531\u4e8e\u8f66\u8f86\u662f\u975e\u548c\u8c10\u7cfb\u7edf\uff0c\u5177\u6709\u7279\u6b8a\u7684\u8fd0\u52a8\u5b66\u7ea6\u675f\u6761\u4ef6\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8f66\u8f86\u4e0d\u80fd\u72ec\u7acb\u7684\u6a2a\u5411\u79fb\u52a8\uff0c\u9700\u8981\u7eb5\u5411\u79fb\u52a8\u7684\u540c\u65f6\u624d\u80fd\u83b7\u5f97\u6a2a\u5411\u504f\u79fb\u3002\u8eb2\u907f\u969c\u788d\u7269\uff0c\u7279\u522b\u662f\u9ad8\u901f\u52a8\u6001\u969c\u788d\u7269\uff0c\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u56f0\u96be\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u642d\u8f7d\u4e58\u5ba2\u7684\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u6765\u8bf4\uff0c\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u8981\u6c42\uff08\u5728\u672c\u4eba\u770b\u6765\u53ef\u80fd\u662f\u6700\u91cd\u8981\u7684\uff09\u662f\u8212\u9002\u6027\uff0c\u89c4\u5212\u51fa\u7684\u8f68\u8ff9\u5fc5\u987b\u505a\u5230\u5e73\u6ed1\uff0c\u5c06\u5f71\u54cd\u4e58\u5ba2\u8212\u9002\u5ea6\u7684\u56e0\u7d20\uff0c\u6bd4\u5982\u52a0\u901f\u5ea6\uff0c\u5411\u5fc3\u52a0\u901f\u5ea6\u7b49\u7b49\uff0c\u4fdd\u6301\u5728\u80fd\u591f\u5bb9\u5fcd\u7684\u8303\u56f4\u3002</p> <p>\u53e6\u5916\uff0c\u5bf9\u4e8e\u65e0\u4eba\u9a7e \u9a76\u8f66\u8f86\u6765\u8bb2\uff0c\u4e3a\u4e86\u5904\u7406\u591a\u53d8\u7684\u884c\u8f66\u73af\u5883\uff0c\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u9700\u8981\u4ee5\u77ed\u5468\u671f\u9ad8\u9891\u7387\u8fd0\u884c\uff0c\u5bf9\u7b97\u6cd5\u7684\u8ba1\u7b97\u6548\u7387\u4e5f\u63d0\u51fa\u4e86\u8981\u6c42\u3002</p> <p>\u8f68\u8ff9\u89c4\u5212\u7b56\u7565</p> <p>\u5728 Apollo \u5e73\u53f0\u4e2d\uff0c\u4e3a\u4e86\u89e3\u51b3\u89c4\u5212\u95ee\u9898\uff0c\u5c24\u5176\u662f\u4ece\u964d\u4f4e\u8ba1\u7b97\u7684\u590d\u6742\u6027\u4e0a\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u5bf9\u8f68\u8ff9\u7684\u8def\u5f84\u4e0e\u901f\u5ea6\u89c4\u5212\u5206\u79bb\u7684\u65b9\u5f0f\u3002\u5373\u5148\u786e\u5b9a\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u8f68\u8ff9\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u7136\u540e\u5728\u5df2\u77e5\u8def\u5f84\u7684\u57fa\u7840\u4e0a\uff0c\u8ba1\u7b97\u901f\u5ea6\u5206\u914d\u3002\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u8f68\u8ff9\u89c4\u5212\u95ee\u9898\uff0c\u8f6c\u6362\u6210\u4e86\u4e24\u4e2a\u987a\u5e8f\u8ba1\u7b97\u7684\u4f4e\u7ef4\u5ea6\u89c4\u5212\u95ee\u9898\uff1a\u8def\u5f84\u89c4\u5212\uff0c\u501f\u52a9\u4e2d\u95f4\u53d8\u91cf\u8def\u5f84\u7684\u7d2f\u8ba1\u957f\u5ea6 s\uff0c\u5148\u6c42\u89e3 s \u6620\u5c04\u5230\u51e0\u4f55\u5f62\u72b6(x, y, \u03b8, \u03ba)\u7684\u8def\u5f84\u51fd\u6570\uff1b\u901f\u5ea6\u89c4\u5212\uff0c\u518d\u6c42\u89e3\u65f6\u95f4 t\uff0c\u6620\u5c04\u5230\u4e2d\u95f4\u53d8\u91cf s,\u4e0e v\uff0ca \u7684\u901f\u5ea6\u51fd\u6570\u3002</p> <p>\u8def\u5f84\u89c4\u5212\u7684\u76ee\u6807 \u524d\u9762\u63d0\u5230 Apollo \u8f68\u8ff9\u89c4\u5212\u7684\u7b56\u7565\uff0c\u6211\u4eec\u5148\u770b\u8def\u5f84\u89c4\u5212\u5728\u8fd9\u79cd\u7b56\u7565\u4e0b\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff1a</p> <p>\u8def\u5f84\u9700\u8981\u6709\u8db3\u591f\u7684\u7075\u6d3b\u5ea6\uff0c\u7528\u6765\u5bf9\u590d\u6742\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u969c\u788d\u7269\u8fdb\u884c\u907f\u8ba9\u3002 \u8def\u5f84\u7684\u51e0\u4f55\u7279\u6027\u9700\u8981\u5e73\u987a\u53d8\u5316\uff0c\u8fd9\u6837\u8f66\u8f86\u5728\u6cbf\u8def\u5f84\u884c\u9a76\u65f6\u624d\u80fd\u591f\u4fdd\u8bc1\u8212\u9002\u6027\u3002 \u8def\u5f84\u7684\u89c4\u5212\u9700\u8981\u9075\u5b88\u8f66\u8f86\u7684\u8fd0\u52a8\u5b66\u9650\u5236\u6761\u4ef6\uff0c\u6bd4\u5982\uff0c\u8def\u5f84\u7684\u66f2\u7387\u3001\u66f2\u7387\u53d8\u5316\u7387\u9700\u8981\u9650\u5236\u5728\u7b26\u5408\u76ee\u6807\u8f66\u8f86\u5c5e\u6027\u7684\u8303\u56f4\u4e4b\u5185\u3002</p> <p>\u7531\u4e8e\u6211\u4eec\u5728 Apollo \u5e73\u53f0\u4e2d\u91c7\u7528\u4e86\u8def\u5f84/\u901f\u5ea6\u5206\u79bb\u7684\u7b56\u7565\uff0c\u5728\u8def\u5f84\u89c4\u5212\u65f6\u4e5f\u9700\u8981\u8003\u8651\u5230\u5f53\u524d\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001\u800c\u9002\u5f53\u7684\u8c03\u6574\u8f66\u8f86\u7684\u51e0\u4f55\u5f62\u72b6\u3002\u6bd4\u5982\u5728\u505a\u8f83\u5927\u7684\u6a2a\u5411\u8fd0\u52a8\u7684\u65f6\u5019\uff0c\u4f4e\u901f\u548c\u9ad8\u901f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u540c\u7684\u51e0\u4f55\u5f62\u72b6\u6765\u4fdd\u8bc1\u6a2a\u5411\u8fd0\u52a8\u7684\u8212\u9002\u6027\u3002</p> <p>\u8def\u5f84\u89c4\u5212\u65b9\u6cd5</p> <p>\u5728\u8def\u5f84\u89c4\u5212\u4e2d\uff0c\u6211\u4eec\u501f\u52a9\u4e8e\u5f17\u83b1\u7eb3\uff08frenet\uff09\u5750\u6807\u7cfb\uff0c\u5c06\u5f53\u524d\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001(x, y, \u03b8, \u03ba, v, a)\u505a\u5206\u89e3\u3002\u4f7f\u7528\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u7684\u524d\u63d0\u662f\u5177\u6709\u4e00\u6761\u5149\u6ed1\u7684\u6307\u5f15\u7ebf\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6307\u5f15\u7ebf\u7406\u89e3\u4e3a\u9053\u8def\u4e2d\u5fc3\u7ebf\uff0c\u8f66\u8f86\u5728\u6ca1\u6709\u969c\u788d\u7269\u60c5\u51b5\u4e0b\u7684\u7406\u60f3\u8fd0\u52a8\u8def\u5f84\u3002\u6211\u4eec\u8fd9\u91cc\u7684\u5149\u6ed1\u7684\u6307\u5f15\u7ebf\u662f\u6307\u6307\u5f15\u7ebf\u7684\u51e0\u4f55\u5c5e\u6027\u53ef\u4ee5\u5230\u66f2\u7387\u7ea7\u522b\u7684\u5149\u6ed1\uff08\u66f2\u7387\u53ef\u5bfc\uff09\u3002\u6307\u5f15\u7ebf\u7684\u5149\u6ed1\u6027\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5176\u76f4\u63a5\u51b3\u5b9a\u4e86\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\u6c42\u5f97\u8f68\u8ff9\u7684\u5e73\u987a\u6027\u3002\u5728 Apollo \u5e73\u53f0\u4e0a\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u591a\u79cd\u5e73\u6ed1\u6307\u5f15\u7ebf\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5728\u4eca\u5929\u7684\u5206\u4eab\u4e2d\u5c31\u4e0d\u5c55\u5f00\u4ecb\u7ecd\u4e86\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u8bf7\u67e5\u9605\u76f8\u5173\u4ee3\u7801\uff08\u6216\u8005\u6211\u4eec\u518d\u8fdb\u884c\u4e00\u6b21\u4ee5\u6307\u5f15\u7ebf\u4e3a\u4e3b\u9898\u7684\u5206\u4eab\u3002</p> <p>\u5728\u7ed9\u5b9a\u4e00\u6761\u5149\u6ed1\u6307\u5f15\u7ebf\u4e0a\uff0c\u6211\u4eec\u6309\u7167\u8f66\u8f86\u4f4d\u7f6e\uff0c\u5c06\u5176\u6295\u5f71\u5230\u6307\u5f15\u7ebf\u4e0a\uff0c\u4ee5\u6295\u5c04\u70b9\u4e3a\u57fa\u7840\uff0c\u5c06\u5730\u56fe\u5750\u6807\u7cfb\u4e0b\u5f53\u524d\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001(x, y, \u03b8, \u03ba, v, a)\u8fdb\u884c\u5206\u89e3\uff0c\u83b7\u5f97\u6cbf\u7740\u6307\u5f15\u7ebf\u65b9\u5411\u7684\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\uff0c\u4ee5\u53ca\u76f8\u5bf9\u4e8e\u6307\u5f15\u7ebf\u8fd0\u52a8\u7684\u4f4d\u7f6e\uff0c \u201c\u901f\u5ea6\u201d\uff0c \u201c\u52a0\u901f\u5ea6\u201d\u3002\u8fd9\u91cc\u6253\u5f15\u53f7\u7684\u539f\u56e0\u662f\u6a2a\u5411\u7684\u201c\u901f\u5ea6\u201d\u3001\u201c\u52a0\u901f\u5ea6\u201d\u5e76\u975e\u901a\u5e38\u610f\u4e49\u4e0a\u4f4d\u79fb\u5bf9\u65f6\u95f4\u7684\u4e00\u9636/\u4e8c\u9636\u5bfc\u6570\uff0c\u800c\u662f\u6a2a\u5411\u4f4d\u79fb\u5bf9\u7eb5\u5411\u4f4d\u79fb\u7684\u4e00\u9636/\u4e8c\u9636\u5bfc\u6570\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u51e0\u4f55\u5f62\u72b6\u7684\u53d8\u5316\u8d8b\u52bf\u3002</p> <p>\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\u4f5c\u8f68\u8ff9\u89c4\u5212\u7684\u4f18\u70b9</p> <p>\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\u505a\u8fd0\u52a8\u89c4\u5212\u7684\u597d\u5904\u5728\u4e8e\u501f\u52a9\u4e8e\u6307\u5f15\u7ebf\u505a\u8fd0\u52a8\u5206\u89e3\uff0c\u6211\u4eec\u5c06\u9ad8\u7ef4\u5ea6\u7684\u89c4\u5212\u95ee\u9898\uff0c\u8f6c\u6362\u6210\u4e86\u591a\u4e2a\u4f4e\u7ef4\u5ea6\u7684\u89c4\u5212\u95ee\u9898\uff0c\u6781\u5927\u7684\u964d\u4f4e\u4e86\u89c4\u5212\u7684\u96be\u5ea6\u3002\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u5728\u4e8e\u65b9\u4fbf\u7406\u89e3\u573a\u666f\uff0c\u65e0\u8bba\u9053\u8def\u5728\u5730\u56fe\u5750\u6807\u7cfb\u4e0b\u7684\u5f62\u72b6\u4e0e\u5426\uff0c\u6211\u4eec\u90fd\u80fd\u591f\u5f88\u597d\u7684\u7406\u89e3\u9053\u8def\u4e0a\u7269\u4f53\u7684\u8fd0\u52a8\u5173\u7cfb\u3002\u76f8\u8f83\u76f4\u63a5\u4f7f\u7528\u5730\u56fe\u5750\u6807\u7cfb\u4e0b\u7684\u5750\u6807\u505a\u5206\u6790\uff0c\u4f7f\u7528\u5f17\u83b1\u7eb3\u5750\u6807\uff0c\u80fd\u591f\u76f4\u89c2\u7684\u4f53\u73b0\u9053\u8def\u4e0a\u4e0d\u540c\u7269\u4f53\u7684\u8fd0\u52a8\u5173\u7cfb\u3002</p> <p></p> <p>\u8def\u5f84\u89c4\u5212-\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u4f18\u5316\u7b97\u6cd5</p> <p>\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\u7684\u51fd\u6570l(s)\uff0c\u8868\u8fbe\u4e86\u4ee5\u6307\u5f15\u7ebf\u4e3a\u53c2\u8003\uff0c\u76f8\u5bf9\u4e8e\u6307\u5f15\u7ebf\u7684\u51e0\u4f55\u5f62\u72b6\uff1b\u901a\u8fc7\u8f6c\u6362\u5230\u5730\u56fe\u5750\u6807\u7cfb\u4e0b\uff0c\u5c31\u8868\u8fbe\u4e86\u5728\u5730\u56fe\u5750\u6807\u7cfb\u7684\u8def\u5f84\u3002\u6240\u4ee5\uff0c\u672c\u8d28\u4e0a\uff0c\u8def\u5f84\u89c4\u5212\u95ee\u9898\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\uff0c\u5c31\u662f\u4e00\u4e2a\u8ba1\u7b97\u51fd\u6570l(s)\u7684\u8fc7\u7a0b\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7531\u6211\u63d0\u51fa\u7684\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u4f18\u5316\u7b97\u6cd5\uff08Piecewise Jerk Path Optimization Algorithm\uff09\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u7b97\u6cd5\u7684\u6d41\u7a0b\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u73af\u5883\u4e2d\u7684\u9759\u6001\u969c\u788d\u7269\u4ece\u5730\u56fe\u5750\u6807\u7cfb\u6620\u5c04\u5230\u4f9d\u636e\u6307\u5f15\u7ebf\u7684\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\uff08\u7ea2\u8272\u65b9\u6846\uff09\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u6cbf\u6307\u5f15\u7ebf\u7684s\u8f74\u65b9\u5411\uff0c\u4f7f\u7528\u0394s\u5c06s\u65b9\u5411\u7b49\u8ddd\u79bb\u79bb\u6563\u5316\u3002\u6839\u636e\u969c\u788d\u7269\u7684\u4fe1\u606f\u3001\u9053\u8def\u7684\u8fb9\u754c\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u79bb\u6563\u70b9\u6240\u5bf9\u5e94\u7684\u53ef\u884c\u533a\u57df(l_mini,l_maxi )\u3002\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u6211\u4eec\u5c06\u65e0\u4eba\u9a7e\u9a76\u8f66\u7b80\u5316\u6210\u4e00\u4e2a\u70b9\u3002\u4e3a\u4e86\u907f\u514d\u78b0\u649e\uff0c\u5728\u8ba1\u7b97\u53ef\u884c\u533a\u57df\u7684\u65f6\u5019\u53ef\u4ee5\u7559\u51fa\u9002\u5f53\u7684\u7f13\u51b2\u533a\u95f4\u3002</p> <p>\u7b2c\u4e09\u6b65\uff0c\u6211\u4eec\u4ecb\u7ecd\u4f18\u5316\u7b97\u6cd5\u4f7f\u7528\u7684\u4f18\u5316\u53d8\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u79bb\u6563\u70b9i\uff0c\u6211\u4eec\u5c06\u8be5\u70b9\u7684\u6a2a\u5411\u504f\u79fb l_i\uff0c\u6a2a\u5411\u504f\u79fb\u76f8\u5bf9\u4e8es\u7684\u4e00\u9636\u548c\u4e8c\u9636\u5bfc\u6570 l_i^\u2032 \u548c l_i\u2033\u4f5c\u4e3a\u4f18\u5316\u53d8\u91cf\u3002l_i\u2032 \u548c l_i\u2033\u53ef\u4ee5\u8fd1\u4f3c\u7406\u89e3\u4e3a\u6a2a\u5411\u8fd0\u52a8\u7684\u201c\u901f\u5ea6\u201d\u4e0e\u201c\u52a0\u901f\u5ea6\u201d\u3002\u4ed6\u4eec\u7684\u5927\u5c0f\u51b3\u5b9a\u4e86\u8f66\u8f86\u9760\u8fd1\u4e0e\u504f\u79bb\u6307\u5f15\u7ebf\u7684\u8d8b\u52bf\u3002\u6211\u4eec\u5047\u8bbe\u6bcf\u4e24\u4e2a\u79bb\u6563\u70b9\u4e4b\u95f4\uff0c\u6709\u4e00\u4e2a\u5e38\u4e09\u9636\u5bfc\u6570\u9879l_(i\u2192i+1)\u2034\u8fde\u63a5\u7740\u76f8\u90bb\u7684\u79bb\u6563\u70b9\uff0c \u8fd9\u4e2a\u201c\u5e38\u201d\u4e09\u9636\u5bfc\u6570\u9879\u53ef\u4ee5\u7531\u76f8\u90bb\u7684\u4e8c\u9636\u5bfc\u6570\u901a\u8fc7\u5dee\u5206\u7684\u65b9\u5f0f\u8ba1\u7b97\u5f97\u5230\u3002\u5728\u4f18\u5316\u7684\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0cl(i\u2192i+1)^\u2034 \u4f1a\u968f\u7740\u76f8\u90bb\u70b9li^\u2033 \u4e0el_(i+1)^\u2033 \u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4f46l_(i\u2192i+1)^\u2034\u5728\u4e24\u4e2a\u79bb\u6563\u70b9\u4e4b\u95f4\u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u8fd9\u4e5f\u662f\u6211\u4eec\u7b97\u6cd5\u7684\u5f97\u540d\uff0c\u5206\u6bb5\u7684\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u3002</p> <p>\u7b2c\u56db\u6b65\uff0c\u8bbe\u7f6e\u4f18\u5316\u76ee\u6807\u3002\u9996\u5148\uff0c\u5bf9\u4e8e\u8def\u5f84\u6765\u8bb2\uff0c\u5728\u6ca1\u6709\u73af\u5883\u56e0\u7d20\u5f71\u54cd\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u5c3d\u53ef\u80fd\u7684\u8d34\u8fd1\u6307\u5f15\u7ebf\u3002\u5bf9\u4e8e\u4e00\u9636\u3001\u4e8c\u9636\u4e0e\u4e09\u9636\u5bfc\u6570\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u4eec\u5c3d\u53ef\u80fd\u7684\u5c0f, \u8fd9\u6837\u53ef\u4ee5\u63a7\u5236\u6a2a\u5411\u8fd0\u52a8\u7684\u5411\u5fc3\u52a0\u901f\u5ea6\uff0c\u4fdd\u8bc1\u8def\u5f84\u7684\u8212\u9002\u6027\u3002</p> <p>\u7b97\u6cd5\u5b8c\u6574\u63cf\u8ff0 \u4e0b\u9762\uff0c\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u7b97\u6cd5\u7684\u8f93\u5165\u7531\u56db\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <p>\u5149\u6ed1\u7684\u9053\u8def\u6307\u5f15\u7ebf\uff0c\u7528\u4e8e\u5728\u5f17\u83b1\u7eb3\u5750\u6807\u7cfb\u4e0b\u7684\u8fd0\u52a8\u5206\u89e3\u3002</p> <p>\u5f53\u524d\u65e0\u4eba\u9a7e\u9a76\u8f66\u8f86\u7684\u8fd0\u52a8\u72b6\u6001\uff0c\u5305\u62ec\u4f4d\u7f6e\u3001\u671d\u5411\u3001\u5373\u65f6\u8f6c\u5411\u3001\u901f\u5ea6\u4e0e\u52a0\u901f\u5ea6\u3002\u8f66\u8f86\u8fd0\u52a8\u72b6\u6001\u4f1a\u4f9d\u7167\u5149\u6ed1\u6307\u5f15\u7ebf\u8fdb\u884c\u5206\u89e3\u3002</p> <p>\u73af\u5883\u4e2d\u9759\u6001\u969c\u788d\u7269\u7684\u4fe1\u606f\uff0c\u6295\u5f71\u5230\u6307\u5f15\u7ebf\u4e0a\u3002</p> <p>\u8f66\u8f86\u81ea\u8eab\u7684\u5c5e\u6027\uff0c\u8fd0\u52a8\u5b66\u6a21\u578b\u7b49\uff0c\u7528\u4e8e\u8ba1\u7b97\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5408\u7406\u7684\u53d8\u91cf\u9650\u5236\u6761\u4ef6\u3002</p> <p>\u7b97\u6cd5\u7684\u53d8\u91cf\u6bcf\u4e00\u4e2a\u79bb\u6563\u70b9\u7684\u6a2a\u5411\u4f4d\u79fb\uff0c\u6a2a\u5411\u4f4d\u79fb\u5bf9\u6307\u5f15\u7ebf\u7eb5\u5411\u957f\u5ea6 s \u7684\u4e00\u9636\u3001\u4e8c\u9636\u5bfc\u6570\uff0c\u5bf9\u4e8e\u6709 n \u4e2a\u8f93\u5165\u70b9\u7684\u95ee\u9898\uff0c\u4f18\u5316\u53d8\u91cf\u6709 3\u2217n \u4e2a\u3002\u5bf9\u4e8e\u9650\u5236\u6761\u4ef6\uff0c\u9996\u5148\u6a2a\u5411\u4f4d\u79fbli\u9700\u8981\u5728\u76f8\u5bf9\u5e94\u7684\u5b89\u5168\u533a\u95f4\u4e4b\u5185(l_mini,l_maxi )\u3002\u5bf9\u4e8e l_i^\u2032, \u3016l_i\u3017^\u2033, l(i\u2192i+1)^\u2034\u7684\u53d6\u503c\u8303\u56f4\uff0c\u9700\u8981\u6839\u636e\u5f53\u524d\u8f66\u8f86\u79fb\u52a8\u901f\u5ea6, \u8f66\u8f86\u7684\u52a8\u529b\u5b66\u6a21\u578b\u8ba1\u7b97\uff0c\u8fd9\u6d89\u53ca\u5230\u5177\u4f53\u7684\u8f66\u8f86\u6a21\u578b\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u4e0d\u5c55\u5f00\u4ecb\u7ecd\u4e86\u3002</p> <p>\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u7ea6\u675f\u6761\u4ef6\u662f\u8def\u5f84\u7684\u8fde\u7eed\u6027\u3002\u6211\u4eec\u5047\u8bbe\u76f8\u90bb\u4e24\u70b9\u4e4b\u95f4\u6709\u4e00\u4e2a\u5e38\u4e09\u9636\u5bfc\u6570\u91cf l_(i\u2192i+1)\u2034\u6765\u8fde\u63a5\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u7ecf\u8fc7\u8fd9\u4e2a\u5e38\u4e09\u9636\u5bfc\u6570\u91cfl(i\u2192i+1)\u2034\uff0c\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684l, l^\u2032, l\u2033\u7684\u6570\u503c\u80fd\u591f\u543b\u5408\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5c31\u597d\u6bd4\u53ef\u4ee5\u62c9\u4f38\u7684\u7ef3\u5b50\uff0cl(i\u2192i+1)^\u2034\u51b3\u5b9a\u4e86\u53ef\u4ee5\u62c9\u4f38\u7684\u7a0b\u5ea6\uff0c\u8fd9\u4e24\u4e2a\u5f0f\u7ea6\u675f\u51b3\u5b9a\u4e86\u5728\u7ef3\u5b50\u62c9\u4f38\u7684\u8fc7\u7a0b\u4e2d\u4fdd\u8bc1\u7ef3\u5b50\u4e0d\u88ab\u62c9\u65ad\u3002</p> <p>\u7b97\u6cd5\u7684\u4f18\u5316\u76ee\u6807\uff0c\u662f\u51cf\u5c0f\u6a2a\u5411\u4f4d\u79fb\u7684\u96f6\u9636\uff0c\u4e00\u9636\uff0c\u4e8c\u9636\u548c\u4e09\u9636\u5bfc\u6570\uff0c\u4f7f\u8def\u5f84\u5c3d\u53ef\u80fd\u8d34\u8fd1\u6307\u5f15\u7ebf\u7684\u540c\u65f6\u4fdd\u8bc1\u8212\u9002\u6027\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u6c42\uff0c\u9009\u62e9\u6027\u7684\u52a0\u5165\u4e0e\u8fb9\u754c\u8ddd\u79bb\u7684\u4f18\u5316\u76ee\u6807\uff0c\u4f7f\u8f66\u8f86\u4e0e\u969c\u788d\u7269\u4fdd\u6301\u9002\u5f53\u8ddd\u79bb\u3002\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u7531\u4e8e\u5176\u5927\u5bc6\u5ea6\u5206\u6bb5\u7684\u7279\u6027\uff0c\u4f7f\u5f97\u80fd\u591f\u8868\u8fbe\u7684\u8def\u5f84\u5177\u6709\u5f88\u9ad8\u7684\u7075\u6d3b\u6027\uff0c\u80fd\u591f\u89e3\u51b3\u57ce\u5e02\u9053\u8def\u4e2d\uff08\u7279\u522b\u662f\u56fd\u5185\u62e5\u6324\u7684\u73af\u5883J\uff09\u7684\u8def\u5f84\u89c4\u5212\u95ee\u9898\uff1b\u5e76\u4e14\uff0c\u7531\u4e8e\u662f\u4ee5\u52a0\u52a0\u901f\u5ea6\u7ea7\u522b\u7684\u63a7\u5236\u53d8\u91cf\u6765\u6539\u53d8\u8def\u5f84\u7684\u5f62\u72b6\uff0c\u80fd\u591f\u505a\u5230\u66f2\u7387\u7ea7\u522b\u7684\u8fde\u7eed\u6027\uff0c\u4fdd\u8bc1\u4e86\u8def\u5f84\u7684\u5e73\u6ed1\u8212\u9002\u3002</p> <p>\u8def\u5f84\u89c4\u5212\u7684\u76ee\u6807 \u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u6765\u770b\u600e\u6837\u4e3a\u8ba1\u7b97\u51fa\u7684\u8def\u5f84\u5206\u914d\u901f\u5ea6\u3002\u5bf9\u4e8e\u901f\u5ea6\u89c4\u5212\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u8981\u6c42\uff1a</p> <p>\u901f\u5ea6\u5206\u914d\u5177\u6709\u7075\u6d3b\u6027\uff0c\u80fd\u591f\u907f\u8ba9\u590d\u6742\u3001\u62e5\u6324\u7684\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u4f17\u591a\u79fb\u52a8\u969c\u788d\u7269\u3002 \u901f\u5ea6\u5206\u914d\u9700\u8981\u9075\u5b88\u8f66\u8f86\u8fd0\u52a8\u5b66\u7684\u9650\u5236\u6761\u4ef6\uff0c \u6bd4\u5982\u6700\u5927\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u3001\u52a0\u52a0\u901f\u5ea6\u7b49\uff0c\u786e\u4fdd\u89c4\u5212\u51fa\u7684\u8f68\u8ff9\u8f66\u8f86\u5b9e\u9645\u53ef\u4ee5\u6267\u884c\u3002 \u89c4\u5212\u7684\u901f\u5ea6\u5206\u914d\u9700\u8981\u9075\u5b88\u8003\u8651\u4ea4\u901a\u6cd5\u89c4\u7684\u9650\u5236\uff0c\u5728\u9650\u901f\u8303\u56f4\u5185\u89c4\u5212\u3002 \u89c4\u5212\u7684\u901f\u5ea6\u5206\u914d\u9700\u8981\u5b8c\u6210\u5230\u8fbe\u6307\u5b9a\u4f4d\u7f6e\u6216\u8005\u6307\u5b9a\u901f\u5ea6\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u5728\u4fdd\u8bc1\u8212\u9002\u5ea6\u7684\u524d\u63d0\u4e0b\uff0c\u5b8c\u6210\u65f6\u95f4\u5c3d\u53ef\u80fd\u7684\u77ed\u3002</p> <p>\u5728 Apollo \u5e73\u53f0\u7684\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u7ed3\u5408\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u548c\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u76f8\u7ed3\u5408\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u901f\u5ea6\u89c4\u5212\u95ee\u9898\u3002\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u63d0\u4f9b\u8003\u8651\u4e86\u52a8\u9759\u6001\u969c\u788d\u7269\u3001\u8def\u5f84\u51e0\u4f55\u4fe1\u606f\u3001\u9053\u8def\u4fe1\u606f\u3001\u8212\u9002\u5ea6\u3001\u76ee\u6807\u901f\u5ea6\u548c\u5730\u70b9\u591a\u79cd\u56e0\u7d20\u7efc\u5408\u4e0b\u7684\u901f\u5ea6\u89c4\u5212\u7c97\u7565\u4f30\u8ba1\uff1b\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u5bf9\u542f\u53d1\u662f\u901f\u5ea6\u89c4\u5212\u63d0\u4f9b\u7684\u7c97\u7565\u5206\u6790\u8fdb\u884c\u5e73\u6ed1\uff0c\u8f93\u51fa\u5b89\u5168\u8212\u9002\u7684\u901f\u5ea6\u5206\u914d\u3002</p> <p>\u5728\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5206\u6790\u5de5\u5177\uff0c\u8def\u5f84-\u65f6\u95f4\u969c\u788d\u7269\u56fe\uff08Path-Time Obstacle graph\uff09\u3002\u8def\u5f84-\u65f6\u95f4\u969c\u788d\u7269\u56fe\u975e\u5e38\u9002\u5408\u5728\u786e\u5b9a\u4e86\u8def\u5f84\u7684\u60c5\u51b5\u4e0b\uff0c\u8003\u8651\u52a8\u9759\u6001\u969c\u788d\u7269\u7684\u89c4\u907f\u95ee\u9898\u3002\u8fd9\u4e2a\u5206\u6790\u5de5\u5177\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c06\u8003\u8651\u4e86\u672c\u8f66\u548c\u5468\u56f4\u969c\u788d\u7269\u51e0\u4f55\u5f62\u72b6\u548c\u9884\u6d4b\u8f68\u8ff9\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u969c\u788d\u7269\u7684\u8f68\u8ff9\u6295\u5f71\u5230\u5df2\u7ecf\u786e\u5b9a\u7684\u672c\u8f66\u8def\u5f84\u4e0a\u3002\u969c\u788d\u7269\u6240\u4ee3\u8868\u7684\u542b\u4e49\u662f\u5728\u4f55\u65f6(t)\u4e0e\u4f55\u5730(s)\u672c\u8f66\u4f1a\u4e0e\u969c\u788d\u7269\u53d1\u751f\u78b0\u649e\u3002</p> <p>\u5728 Apollo \u7684\u5b9e\u73b0\u4e2d\uff0c\u8def\u5f84-\u65f6\u95f4\u969c\u788d\u7269\u56fe\u6839\u636e\u65f6\u95f4\u8f74t\u548c\u6cbf\u8def\u5f84\u7684\u7d2f\u8ba1\u8ddd\u79bbs\u79bb\u6563\u5316\uff0c\u5f62\u6210\u7b49\u8ddd\u79bb\u3001\u7b49\u65f6\u95f4\u7684\u7f51\u683c\u72b6\u56fe\u3002\u7136\u540e\u6839\u636e\u6211\u4eec\u7684\u9700\u6c42\uff0c\u5c06\u5404\u79cd\u56e0\u7d20\u4f7f\u7528\u4e0d\u540c\u7684\u6743\u91cd\uff0c\u5efa\u6a21\u6210\u4e00\u4e2a\u5355\u4e00\u719f\u77e5\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u6bcf\u4e00\u4e2a\u7f51\u683c\u7684\u8282\u70b9\u4f1a\u8d4b\u4e88\u4e00\u4e2a\u4ee3\u4ef7\uff0c\u76f8\u90bb\u7f51\u683c\u4e4b\u95f4\u7684\u8fb9\u4e5f\u89c6\u4e3a\u4ee3\u4ef7\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u5efa\u6a21\u52a0\u901f\u5ea6\u3002\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u56fe\u641c\u7d22\u7684\u8fc7\u7a0b\uff0c\u641c\u7d22\u51fa\u4e00\u4e2a\u4ee3\u4ef7\u6700\u4f18\u7684\u8def\u5f84\u3002\u641c\u7d22\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u8def\u5f84\u8ddd\u79bb\u4e0e\u65f6\u95f4\u7684\u5e8f\u5217\uff0c\u4ee3\u8868\u4f55\u65f6\uff08t\uff09\uff0c\u6211\u4eec\u671f\u671b\u65e0\u4eba\u9a7e\u9a76\u8f66\u5230\u8fbe\u4f55\u5730(s).</p> <p>\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u7684\u7c97\u7565\u7ed3\u679c\u53ea\u80fd\u63d0\u4f9b\u4f4d\u7f6e\uff0c\u7f3a\u4e4f\u63a7\u5236\u6240\u9700\u8981\u7684\u66f4\u9ad8\u7ef4\u4fe1\u606f\uff0c\u4e0d\u9002\u5408\u63a7\u5236\u6a21\u5757\u76f4\u63a5\u4f7f\u7528\u3002\u4ea7\u751f\u7684\u7ed3\u679c\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e73\u6ed1\u624d\u80fd\u6ee1\u8db3\u8212\u9002\u5ea6\u8981\u6c42\u3002\u6211\u4eec\u8fdb\u4e00\u6b65\u505a\u5e73\u6ed1\u5904\u7406\u7684\u65b9\u6cd5\u4f7f\u7528\u7684\u662f\u5206\u6bb5\u5e38\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\uff0c\u5176\u4e3b\u8981\u601d\u60f3\u7c7b\u4f3c\u4e8e\u524d\u9762\u4ecb\u7ecd\u7684\u8def\u5f84\u4f18\u5316\u7b97\u6cd5\uff0c\u5728\u7ed9\u5b9a\u8d8b\u8fd1\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\uff0c\u8c03\u6574\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\uff0c\u63d0\u9ad8\u901f\u5ea6\u5206\u914d\u7684\u5e73\u6ed1\u6027\u3002</p> <p>\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5</p> <p>\u4e0b\u9762\u6211\u4eec\u5177\u4f53\u4ecb\u7ecd\u5e94\u7528\u5728\u901f\u5ea6\u5e73\u6ed1\u4e0a\u7684\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u3002\u7531\u4e8e\u4e0e\u524d\u9762\u7684\u8def\u5f84\u4e0a\u4f7f\u7528\u7684\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u76f8\u4f3c\u7684\u5730\u65b9\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\u8be5\u7b97\u6cd5\u4ee5\u65f6\u95f4\u4f5c\u4e3a\u79bb\u6563\u53c2\u6570\uff08\u53ef\u4ee5\u4f7f\u7528\u542f\u53d1\u5f0f\u7b97\u6cd5\u4f7f\u7528\u7684\u65f6\u95f4\u95f4\u9694\uff09\uff0c\u4ee5\u6bcf\u4e2a\u79bb\u6563\u70b9\u7684\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\u4f5c\u4e3a\u4f18\u5316\u53d8\u91cf\uff0c\u5e76\u4e14\u5047\u8bbe\u76f8\u90bb\u4e24\u70b9\u4e4b\u95f4\uff0c\u662f\u4e00\u4e2a\u7531\u76f8\u90bb\u52a0\u901f\u5ea6\u53d8\u91cf\u5dee\u5206\u5f97\u5230\u7684\u52a0\u52a0\u901f\u5ea6\u3002</p> <p>\u5728\u4f18\u5316\u51fd\u6570\u7684\u8bbe\u7f6e\u4e0a\uff0c\u4e0e\u524d\u9762\u7b97\u6cd5\u76f8\u4f3c\u7684\u5730\u65b9\u662f\u60e9\u7f5a\u52a0\u901f\u5ea6\u4e0e\u52a0\u52a0\u901f\u5ea6\u7684\u4ee5\u83b7\u5f97\u8212\u9002\u7684\u4e58\u5750\u4f53\u9a8c\u3002\u4e0d\u540c\u7684\u4e00\u4e2a\u4f18\u5316\u76ee\u6807\u662f\u5e0c\u671b\u4f4d\u7f6e\u53d8\u91cf\u4e0e\u542f\u53d1\u5f0f\u89c4\u5212\u6240\u5f97\u5230\u7684\u4f4d\u7f6e\u4fe1\u606f\u5c3d\u53ef\u80fd\u8d34\u8fd1\u3002\u542f\u53d1\u5f0f\u89c4\u5212\u6240\u5f97\u5230\u7684\u4f4d\u7f6e\u4fe1\u606f\u8574\u542b\u4e86\u6839\u636e\u8def\u5f84\u51e0\u4f55\u5f62\u72b6\u3001\u9053\u8def\u9650\u901f\u7b49\u7b49\u6240\u505a\u51fa\u7684\u8ba1\u7b97\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u7ed1\u5b9a\u5728\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e0a\uff0c\u6240\u4ee5\u4f18\u5316\u4e4b\u540e\u7684\u8f68\u8ff9\u9700\u8981\u8d34\u8fd1\u4e8e\u76f8\u5e94\u7684\u542f\u53d1\u5f0f\u7ed3\u679c\u624d\u80fd\u4f53\u73b0\u542f\u53d1\u5f0f\u89c4\u5212\u6240\u505a\u7684\u9009\u62e9\u3002</p> <p>\u5927\u5bb6\u53ef\u80fd\u6709\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5728\u901f\u5ea6\u89c4\u5212\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u5206\u6210\u542f\u53d1\u5f0f\u7684\u901f\u5ea6\u89c4\u5212\u4e0e\u5206\u6bb5\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u7ed3\u5408\u7684\u5f62\u5f0f\uff1f\u4e3a\u4f55\u4e0d\u76f4\u63a5\u4f7f\u7528\u52a0\u52a0\u901f\u5ea6\u7b97\u6cd5\u8fdb\u884c\u6c42\u89e3\uff1f\u4e3b\u8981\u7684\u95ee\u9898\u5728\u4e8e\u5728\u901f\u5ea6\u89c4\u5212\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fdb\u884c\u79bb\u6563\u7684\u7ef4\u5ea6\u3001\u65f6\u95f4\uff0c\u4e5f\u662f\u6211\u4eec\u4f18\u5316\u76ee\u6807\u7684\u4e00\u90e8\u5206\u3002\u4f4d\u7f6e\u4e0e\u65f6\u95f4\u540c\u4e3a\u4f18\u5316\u53d8\u91cf\uff0c\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u9650\u5236\u6761\u4ef6, \u6bd4\u5982\u8def\u5f84\u66f2\u7387\uff0c\u9053\u8def\u9650\u901f\u4fe1\u606f\u7b49\u7b49\uff0c\u4f1a\u5f71\u54cd\u5230\u8fbe\u4f4d\u7f6e\u7684\u65f6\u95f4\uff1b\u800c\u65f6\u95f4\u7684\u53d8\u5316\u53c8\u4f1a\u5f15\u8d77\u4f18\u5316\u901f\u5ea6\u7684\u53d8\u5316\uff0c\u8fdb\u800c\u5bfc\u81f4\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e00\u79cd\u53d8\u91cf\u95f4\u8026\u5408\u53d8\u5316\u7684\u60c5\u51b5\u3002\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u4f7f\u7528\u7c97\u7565\u7684\u65b9\u6cd5\uff0c\u8fd1\u4f3c\u89e3\u51b3\u4e86\u4f4d\u7f6es\u51b3\u5b9a\u7684\u9650\u5236\u6761\u4ef6\u4e0e\u65f6\u95f4t\u76f8\u4e92\u8026\u5408\u7684\u95ee\u9898\uff0c\u4f7f\u65f6\u95f4\u6210\u4e3a\u4e86\u5e38\u91cf\u3002</p> <p>\u4f46\u662f\uff0c\u8fd9\u6837\u505a\u4e5f\u6709\u5f88\u660e\u663e\u7684\u4e0d\u5229\u5f71\u54cd\uff0c\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u7684\u7c92\u5ea6\u5f71\u54cd\u4e86\u641c\u7d22\u7684\u8d28\u91cf\uff0c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e0d\u591f\u51c6\u786e\uff0c\u4e0d\u80fd\u53cd\u6620\u8f66\u8f86\u7684\u52a8\u6001\u53d8\u5316\u3002\u5e73\u6ed1\u65f6\u5355\u7eaf\u8d34\u8fd1\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\uff0c\u901f\u5ea6\u89c4\u5212\u5e76\u975e\u6700\u4f18\u3002\u8f68\u8ff9\u89c4\u5212\u7efc\u8ff0_\u65c5\u9014\u80050107\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u8f68\u8ff9\u89c4\u5212\u4f46\u662f\uff0c\u8fd9\u6837\u505a\u4e5f\u6709\u5f88\u660e\u663e\u7684\u4e0d\u5229\u5f71\u54cd\uff0c\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\u7684\u7c92\u5ea6\u5f71\u54cd\u4e86\u641c\u7d22\u7684\u8d28\u91cf\uff0c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e0d\u591f\u51c6\u786e\uff0c\u4e0d\u80fd\u53cd\u6620\u8f66\u8f86\u7684\u52a8\u6001\u53d8\u5316\u3002\u5e73\u6ed1\u65f6\u5355\u7eaf\u8d34\u8fd1\u542f\u53d1\u5f0f\u901f\u5ea6\u89c4\u5212\uff0c\u901f\u5ea6\u89c4\u5212\u5e76\u975e\u6700\u4f18\u3002</p> <p>\u53d1\u5e03\u4e8e 2022-11-25 10:35\u30fbIP \u5c5e\u5730\u56db\u5ddd</p> <p>\u57ce\u5e02\u89c4\u5212\u8f68\u8ff9\u8fd0\u52a8\u8f68\u8ff9</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/%E9%9D%9E%E6%9E%81%E5%A4%A7%E6%8A%91%E5%88%B6%28NMS%29/","title":"\u975e\u6781\u5927\u6291\u5236(NMS)","text":"<p>\u975e\u6781\u5927\u503c\u6291\u5236\uff08Non-maximum suppression\uff0cNMS\uff09\u662f\u4e00\u79cd\u53bb\u9664\u975e\u6781\u5927\u503c\u7684\u7b97\u6cd5\uff0c\u5e38\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u8fb9\u7f18\u68c0\u6d4b\u3001\u7269\u4f53\u8bc6\u522b\u7b49\u3002</p> <p>\u7b97\u6cd5\u6d41\u7a0b\uff1a</p> <p>\u7ed9\u51fa\u4e00\u5f20\u56fe\u7247\u548c\u4e0a\u9762\u8bb8\u591a\u7269\u4f53\u68c0\u6d4b\u7684\u5019\u9009\u6846\uff08\u5373\u6bcf\u4e2a\u6846\u53ef\u80fd\u90fd\u4ee3\u8868\u67d0\u79cd\u7269\u4f53\uff09\uff0c\u4f46\u662f\u8fd9\u4e9b\u6846\u5f88\u53ef\u80fd\u6709\u4e92\u76f8\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u53ea\u4fdd\u7559\u6700\u4f18\u7684\u6846\u3002\u5047\u8bbe\u6709N\u4e2a\u6846\uff0c\u6bcf\u4e2a\u6846\u88ab\u5206\u7c7b\u5668\u8ba1\u7b97\u5f97\u5230\u7684\u5206\u6570\u4e3aSi, 1&lt;=i&lt;=N\u3002</p> <p>0\u3001\u5efa\u9020\u4e00\u4e2a\u5b58\u653e\u5f85\u5904\u7406\u5019\u9009\u6846\u7684\u96c6\u5408H\uff0c\u521d\u59cb\u5316\u4e3a\u5305\u542b\u5168\u90e8N\u4e2a\u6846\uff1b</p> <p>\u5efa\u9020\u4e00\u4e2a\u5b58\u653e\u6700\u4f18\u6846\u7684\u96c6\u5408M\uff0c\u521d\u59cb\u5316\u4e3a\u7a7a\u96c6\u3002</p> <p>1\u3001\u5c06\u6240\u6709\u96c6\u5408 H \u4e2d\u7684\u6846\u8fdb\u884c\u6392\u5e8f\uff0c\u9009\u51fa\u5206\u6570\u6700\u9ad8\u7684\u6846 m\uff0c\u4ece\u96c6\u5408 H \u79fb\u5230\u96c6\u5408 M\uff1b</p> <p>2\u3001\u904d\u5386\u96c6\u5408 H \u4e2d\u7684\u6846\uff0c\u5206\u522b\u4e0e\u6846 m \u8ba1\u7b97\u4ea4\u5e76\u6bd4\uff08Interection-over-union\uff0cIoU\uff09\uff0c\u5982\u679c\u9ad8\u4e8e\u67d0\u4e2a\u9608\u503c\uff08\u4e00\u822c\u4e3a0~0.5\uff09\uff0c\u5219\u8ba4\u4e3a\u6b64\u6846\u4e0e m \u91cd\u53e0\uff0c\u5c06\u6b64\u6846\u4ece\u96c6\u5408 H \u4e2d\u53bb\u9664\u3002</p> <p>3\u3001\u56de\u5230\u7b2c1\u6b65\u8fdb\u884c\u8fed\u4ee3\uff0c\u76f4\u5230\u96c6\u5408 H \u4e3a\u7a7a\u3002\u96c6\u5408 M \u4e2d\u7684\u6846\u4e3a\u6211\u4eec\u6240\u9700\u3002</p> <p>\u9700\u8981\u4f18\u5316\u7684\u53c2\u6570\uff1a</p> <p>IoU \u7684\u9608\u503c\u662f\u4e00\u4e2a\u53ef\u4f18\u5316\u7684\u53c2\u6570\uff0c\u4e00\u822c\u8303\u56f4\u4e3a0~0.5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u9009\u62e9\u6700\u4f18\u7684\u53c2\u6570\u3002</p> <p>\u793a\u4f8b\uff1a</p> <p></p> <p>\u6bd4\u5982\u4eba\u8138\u8bc6\u522b\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p>\u5df2\u7ecf\u8bc6\u522b\u51fa\u4e86 5 \u4e2a\u5019\u9009\u6846\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u9700\u8981\u6700\u540e\u4fdd\u7559\u4e24\u4e2a\u4eba\u8138\u3002</p> <p>\u9996\u5148\u9009\u51fa\u5206\u6570\u6700\u5927\u7684\u6846\uff080.98\uff09\uff0c\u7136\u540e\u904d\u5386\u5269\u4f59\u6846\uff0c\u8ba1\u7b97 IoU\uff0c\u4f1a\u53d1\u73b0\u9732\u4e1d\u8138\u4e0a\u7684\u4e24\u4e2a\u7eff\u6846\u90fd\u548c 0.98 \u7684\u6846\u91cd\u53e0\u7387\u5f88\u5927\uff0c\u90fd\u8981\u53bb\u9664\u3002</p> <p>\u7136\u540e\u53ea\u5269\u4e0b\u6770\u514b\u8138\u4e0a\u4e24\u4e2a\u6846\uff0c\u9009\u51fa\u6700\u5927\u6846\uff080.81\uff09\uff0c\u7136\u540e\u904d\u5386\u5269\u4f59\u6846\uff08\u53ea\u5269\u4e0b0.67\u8fd9\u4e00\u4e2a\u4e86\uff09\uff0c\u53d1\u73b00.67\u8fd9\u4e2a\u6846\u4e0e 0.81 \u7684 IoU \u4e5f\u5f88\u5927\uff0c\u53bb\u9664\u3002</p> <p>\u81f3\u6b64\u6240\u6709\u6846\u5904\u7406\u5b8c\u6bd5\uff0c\u7b97\u6cd5\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/models_for_car_like_vehicles/","title":"Models for car like vehicles","text":"<p>Here we focus on the most commonly used models of mobility of car-like vehicles. Such models are widely used in control and motiong planning algorithms to approximate a vehicle's behavior in response to control actions in relevant operating conditions.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/models_for_car_like_vehicles/#the-kinematic-single-track-model","title":"The Kinematic Single-Track Model","text":"<p>In most basic model of practical use, the car consists of two wheels connected by a rigid link and is restricted to move in a plane. It is assumed that </p> <p>wheel do not slip at their contact point with the ground, but rotate freely about their axes of rotation.</p> <p>The front wheel has an added degree of freedom where it is allowed to rotate about an axis normal to the plane of motion. This is to model steering.</p> <p></p> <ul> <li>\\(p_r\\) and \\(p_f\\) denote the location of <code>rear wheel</code> and <code>front wheel</code> with basis vectors(\\(\\hat{e}_x, \\hat{e}_y, \\hat{e}_z\\))</li> <li>\\(\\theta\\) is the angle discribing the direction that the vehicle is facing</li> <li>\\(\\delta\\) is the steering angle</li> <li>\\(l\\) is the length front rear wheel to front wheel</li> <li>Time derivatives of \\(p_r\\) and \\(p_f\\) are restricted by the noholonomic constraint to the direction indicated by the blue arrows.</li> </ul> <p>Differential constraints will be derived from the coordinate systems consisting of the angle \\(\\theta\\) , together with the motion of one of the points \\(p_r\\) and \\(p_f\\).</p> <p>As the vehicle is rotating at rear wheel, we have:</p> \\[ tan \\delta = \\frac{l}{R} \\] <p>where:</p> <ul> <li>\\(R\\) is the radius of turn</li> </ul> <p>The constraints at rear wheel is:</p> \\[ \\begin{align} \\dot x_r &amp;= v_r \\cdot \\cos{\\theta} \\\\ \\dot y_r &amp;= v_r \\cdot \\sin{\\theta} \\\\ \\dot \\theta &amp;= \\frac{v_r}{l} \\cdot \\tan{\\delta} \\end{align} \\] <p>The constraints at front wheel is:</p> \\[ \\begin{align} \\dot x_f &amp;= v_f \\cdot \\cos{(\\theta + \\delta)} \\\\ \\dot y_f &amp;= v_f \\cdot \\sin{(\\theta + \\delta)} \\\\ \\dot \\theta &amp;= \\frac{v_f}{l} \\cdot \\sin{\\delta} \\end{align} \\] <p>The ralationship between \\(v_f\\) and \\(v_r\\) is:</p> \\[ \\frac{v_r}{v_f} = cos \\delta \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/models_for_car_like_vehicles/#kinematic-unicycle-model","title":"Kinematic Unicycle Model","text":"<p>A simplification of above is to select the heading rate \\(\\omega\\) instead of steering angle \\(\\delta\\)\uff1a</p> \\[ \\delta = arctan \\frac{l \\cdot w} {v_r} \\] <p>simplifying the heading dynamics to:</p> \\[ \\dot \\theta = \\omega \\] <p>where:</p> <p>$$ \\omega \\in [\\frac{v_r}{l} tan(\\delta_{min}), \\frac{v_r}{l} tan(\\delta_{max})] $$ An important variant of this model is the case when \\(v_r\\) is fixed. This is sometimes referred to as the <code>Dubins</code> car. Another notable variantion is the <code>Reeds-Shepp</code> car for which minimum length paths are known when \\(v_r\\) takes a single forward and reverse speed.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/models_for_car_like_vehicles/#kinematic-single-track-improved","title":"Kinematic Single-Track Improved","text":"<p>The kinematic models are suitable for planning paths at low speeds where inertial effects are small in comparison to the limitations on mobility imposed by the no-slip assumption. A major drawback of this model is that it permits instaneous steering angle changes which can be problematic if the motion planning module generates solutions with such instantaneous changes.</p> <p>Continuity of the steering angle can be imposed by augmenting, where the steering angle integrates a commanded rate:</p> \\[ \\begin{align} \\dot x_f &amp;= v_f \\cdot \\cos{(\\theta + \\delta)} \\\\ \\dot y_f &amp;= v_f \\cdot \\sin{(\\theta + \\delta)} \\\\ \\dot \\theta &amp;= \\frac{v_f}{l} \\cdot \\sin{\\delta} \\\\ \\dot \\delta &amp;= v_{\\delta} \\end{align} \\] <p>In addition to the limit on the steering angle, the steering rate can now be limited: \\(v_{\\delta} \\in [\\dot \\delta_{min}, \\dot \\delta_{max}]\\). The same problem can arise with the car's speed \\(v_r\\) and can be resolved in the same way. The drawback to this technique is the increased dimension of the model which can complicate motion planning and control problems.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/models_for_car_like_vehicles/#kinematic-single-track-at-center-of-mass-with-slide-angle","title":"Kinematic Single-Track at Center of Mass with Slide Angle","text":"<p>where:</p> <ul> <li>\\(A\\): position of front wheel</li> <li>\\(B\\): position of rear wheel</li> <li>\\(C\\): position of the center of mass</li> <li>\\(O\\): position of the center of turn</li> <li>\\(R\\): radius of the turn</li> <li>\\(\\delta_f\\): steering angle of front wheel</li> <li>\\(\\delta_r\\): steering angle of rear wheel</li> <li>\\((X, Y)\\): position of C</li> <li>\\(\\Psi\\): heading of the vehicle</li> <li>\\(\\beta\\): sliding angle</li> <li>\\(V\\) : velocity of C</li> </ul> <p>Applying the sine rule to triangle OCA:</p> \\[ \\frac{sin(\\delta_f - \\beta)}{l_f} = \\frac{\\frac{\\pi}{2} - \\delta_f}{R} \\tag{1} \\] <p>Applying the sine rule to triangle OCB:</p> \\[ \\frac{sin(\\beta - \\delta_r)}{l_r} = \\frac{sin(\\frac{\\pi}{2} + \\delta_r)}{R} \\tag{2} \\] <p>from (1) we have:</p> \\[ \\frac{sin(\\delta_f)cos(\\beta) - sin(\\beta)cos(\\delta_f)}{l_f} = \\frac{cos(\\delta_f)}{R} \\tag{3} \\] <p>from (2) we have:</p> \\[ \\frac{cos(\\delta_r)sin(\\beta) - cos(\\beta)sin(\\delta_r)}{l_r} = \\frac{cos(\\delta_r)}{R} \\tag{4} \\] <p>Multiply both sides of (3) by \\(\\frac{l_f}{cos(\\delta_f)}\\):</p> \\[ tan(\\delta_f) cos(\\beta) - sin(\\beta) = \\frac{l_f}{R} \\tag{5} \\] <p>Multiply both sides of (44) by \\(\\frac{l_r}{cos(\\delta_r)}\\):</p> \\[ sin(\\beta) - tan(\\delta_r) cos(\\beta) = \\frac{l_r}{R} \\tag{6} \\] <p>Add (5) and (6):</p> \\[ \\{tan(\\delta_f) - tan(\\delta_r)\\} cos(\\beta) = \\frac{l_f + l_r}{R} \\tag{7} \\] <p>If we assume that the radius of the vehicle path changes slowly due to low vehicle speed, then the rate of change of orientation of the vehicle (\\(\\dot \\Psi\\)) must be equal to the angular velocity of the vehicle. Since the angular velocity of the vehicle is \\(\\frac{V}{R}\\), it follows that:</p> \\[ \\dot \\Psi = \\frac{V}{R} \\tag{8} \\] <p>Using (8), (7) can be re-written as:</p> \\[ \\dot \\Psi = \\frac{V cos(\\beta)} {l_f + l_r} (tan(\\delta_f) - tan(\\delta_r)) \\] <p>The final equations of motion are therefore given by:</p> \\[ \\begin{cases} \\dot X &amp;= V cos(\\Psi + \\beta) \\\\ \\dot Y &amp;= V sin(\\Psi + \\beta) \\\\ \\dot \\Psi &amp;= \\frac{V cos(\\beta)} {l_f + l_r} (tan(\\delta_f) - tan(\\delta_r)) \\end{cases} \\] <p>In this model there are three inputs:</p> <ul> <li>\\(\\delta_f\\)</li> <li>\\(\\delta_r\\)</li> <li>\\(V\\)</li> </ul> <p>The velocity \\(V\\) is an external variable and can be asssumed to be a time varying function or can be obtained from a longitudinal vehicle model.</p> <p>The slip angle \\(\\beta\\) can be obtained by multiplying (5) by \\(l_r\\) and subtracting it from (6) multiplied by \\(l_f\\):</p> \\[ \\beta = tan^{-1}(\\frac{l_f tan(\\delta_r) + l_r tan(\\delta_f)}{l_f + l_r}) \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/models_for_car_like_vehicles/#dynamic-model","title":"Dynamic Model","text":"<p>When the acceleration of the vehicle is sufficiently large, the no-slip assumption between the tire and ground becomes invalid. In this case a more accurate model for the vehicle is as a rigid body satisfying basic momentum principles. That is, the acceleration is proportional to the force generated by the ground on the tires. Taking \\(p_c\\) to the vehicles center of mass, and a coordinate of the configuration the motion of the vehicle is governed by:</p> \\[ \\begin{align} m \\ddot p_c &amp;= F_f + F_r \\\\ I_{zz} \\ddot \\theta &amp;= (p_c - p_f) \\cdot F_f + (p_c - p_r) \\cdot F_r \\end{align} \\] <p>where:</p> <ul> <li>\\(F_r\\) and \\(F_f\\) are the forces applied to the vehicle by the ground through the ground-tire interaction</li> <li>\\(m\\) is the vehicles total mass</li> <li>\\(I_{zz}\\) is the polar moment of inertia in the \\(\\hat e_z\\) direction about the center of mass</li> </ul> <p></p> <p>The force between the ground and tires is modeled as being dependent on the rate that tire slips on the ground. Although the center of mass serves as a coordinate for the configuration, the velocity of each wheel relative to the ground is needed to determine this relative speed. The kinematic relations between these three points are:</p> \\[ \\begin{align} p_r &amp;= p_c + \\begin{pmatrix} -l_r cos(\\theta) \\\\ -l_r sin(\\theta) \\\\ 0 \\end{pmatrix} \\\\ \\dot p_r &amp;= \\dot p_c + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\dot \\theta \\end{pmatrix} \\times \\begin{pmatrix} -l_r cos(\\theta) \\\\ -l_r sin(\\theta) \\\\ 0 \\end{pmatrix} \\\\ p_f &amp;= p_c + \\begin{pmatrix} l_f cos(\\theta) \\\\ l_f sin(\\theta) \\\\ 0 \\end{pmatrix} \\\\ \\dot p_f &amp;= \\dot p_c + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\dot \\theta  \\end{pmatrix} \\times \\begin{pmatrix} l_f cos(\\theta) \\\\ l_f sin(\\theta) \\\\ 0 \\end{pmatrix} \\\\ \\end{align} \\] <p>These kinematic relations are used to determine the velocities of the point on each tire in contact with the ground, \\(s_r\\) and \\(s_f\\). The velocity of these points are reffered to as the tire slip velocity. In general, \\(s_r\\) and \\(s_f\\) differ from  \\(\\dot p_r\\) and \\(\\dot p_f\\) through the angular velocity of the wheel. The kinematic raltion is:</p> \\[ \\begin{align} s_r &amp;= \\dot p_r + \\omega_r \\times R \\\\ s_f &amp;= \\dot p_f + \\omega_f \\times R \\\\ \\end{align} \\] <p>The angular velocities of the wheels are given by:</p> \\[ \\begin{align} \\omega_r &amp;= \\begin{pmatrix} \\Omega_r sin(\\theta) \\\\ -\\Omega_r cos(\\theta) \\\\ 0 \\end{pmatrix} \\\\ \\omega_f &amp;= \\begin{pmatrix} \\Omega_f sin(\\theta + \\delta) \\\\ -\\Omega_f cos(\\theta + \\delta) \\\\ 0 \\end{pmatrix} \\\\ \\end{align} \\] <p>And \\(R = (0, 0, -r)^T\\). The wheel radius is the scalar quantity \\(r\\), and \\(\\Omega_{r, f}\\) are the angular speeds of each wheel relative to the car.</p> <p></p> <p>Under static conditions, or when the height of the center of mass can be approximated as \\(p_c \\cdot \\hat e_z \\approx 0\\), the compnent of the force normal to the ground, \\(F_{r, f} \\cdot \\hat e_z\\) can be computed from a static force-torque balance as:</p> \\[ F_f \\cdot \\hat e_z = \\frac{l_r m g}{l_f + l_r},  F_r \\cdot \\hat e_z = \\frac{l_f m g}{l_f + l_r} \\] <p>The normal force is then used to compute the traction force on each tire together with the slip and a friction coefficient model, \\(\\mu\\), for the tire behavior. The traction force on the rear tire is given component-wise by:</p> \\[ \\begin{align} F_r \\cdot \\hat e_x &amp;= -\\frac{F_r \\cdot \\hat e_z \\mu \\frac{|| s_r ||}{\\Omega_r r} s_r}{||s_r||} \\cdot \\hat e_x \\\\ F_r \\cdot \\hat e_y &amp;= -\\frac{F_r \\cdot \\hat e_z \\mu \\frac{|| s_r ||}{\\Omega_r r} s_r}{||s_r||} \\cdot \\hat e_y \\\\ \\end{align} \\tag{14} \\] <p>The same expression descripes the front  tire with the r-subscript replaced by an f-subscript. The formula above models the traction force as being anti-parelled to the slip with magnitude proportional to the normal force with a nonlinear dependence on the slip ratio (the magnitude of the slip normalized by \\(\\Omega_r r\\) for the rear and \\(\\Omega_f r\\) for the front). Expressions for the net force on each wheel of the car in terms of the control variables, generalized coordinates, and their velocities. Equation above, together with following model for \\(\\mu\\)</p> \\[ \\mu (\\frac{||s_r||}{\\Omega_r r}) = D sin(C arctan(B \\frac{||s_r||}{\\Omega_r r})) \\tag{15} \\] <p>are a frequently used model for tire interaction with the ground. This equation is a simplified version of the well known model.</p> <p>The rotational symmetry of (14) together with the peak in (15) lead to a maximum norm force that the tire can exert in any direction. This peak is referred to as the friction circle depicted below.</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/","title":"Path tracking","text":"<p>One of the most popular classes of path tracking methods is geometric tracking. Geometric tracking methods exploit geometric relationships between the vehicle and the path resulting in control law solutions to the path tracking problem. Two of the most commonly used geometric methods are <code>Pure-Pursuit</code> and <code>Stanley Method</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#pure-pursuit","title":"Pure-Pursuit","text":"<p>Geometric-based pure-pursuit is one of the most basic and simple methods to compute steering wheel angle for lateral controller.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#bicycle-model","title":"Bicycle Model","text":"<p>The simplest vehicle model for path tracking is the bicycle model, which following the Ackerman steering geometry. The bicycle model simplifies the four wheel car by:</p> <ul> <li>combining the two front wheels together and the two rear wheels together to form a two wheeled model, like a bicycle;</li> <li>the vehicle can only move on a plane.</li> </ul> <p>These simplifications result in a simple geometric relationship between the front wheel steering angle and the curvature that the rear axle will follow.</p> <p>Following is the geometri bicycle model: </p> <p>This simple relationship between front wheel angle and curvature is:</p> \\[ \\tan(\\delta) = \\frac{L}{R} \\tag1 \\] <p>where \\(\\delta\\) is the front wheel steering angle, \\(L\\) is the distance between the front axle to rear axle(wheelbase) and \\(R\\) is the radius of the circle that the rear axle will travel along at the given steering angle. The bicycle model approximates the motion of a car reasonably well at:</p> <ul> <li>low speed;</li> <li>moderate steering angle.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#control-law","title":"Control Law","text":"<p>The pure pursuit method consists of geometrically calculating the curvature of a circular arc that connects the rear axle location to a goal point on the path ahead of the vehicle. The goal point is determined from a look-ahead distance \\(l_d\\) from the current rear axle position to the desired path. The goal point \\((g_x, g_y)\\) is illustrated in the figure. The vehicle's steering angle \\(\\delta\\) can be determined using only the goal point location and the angle \\(\\alpha\\) between the vehicle's heading vector and the look-ahead vector.</p> <p>According to the law of sines:</p> \\[ \\frac{l_d}{\\sin(2\\alpha)} = \\frac{R}{\\sin(\\frac{\\pi}{2} - \\alpha)} \\] \\[ \\frac{l_d}{2\\sin(\\alpha)\\cos(\\alpha)} = \\frac{R}{\\cos(\\alpha)} \\] \\[ \\frac{l_d}{\\sin(\\alpha)} = 2R \\tag2 \\] <p>Using \\((1)\\) and \\((2)\\), the pure-pursuit control law is given as:</p> \\[ \\delta = arctan(\\frac{2L\\sin(\\alpha)}{l_d}) \\tag3 \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#tuning","title":"Tuning","text":"<p>From the equation \\((3)\\) we can see that, the angle \\(\\alpha\\) and the distance \\(l_d\\) determine the scale of front wheel steer angle \\(\\delta\\), and both of them are related to goal point's distance on path. A general goal point selected method is:</p> \\[ l_d = l_{min} + v \\cdot t_{ahead} \\] <p>where \\(l_d\\) is the goal point distance, \\(l_min\\) is the minimum look ahead distance, \\(t\\) is the look ahead time time, their value can be determined by tuning.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#feature","title":"Feature","text":"<p>A short look-ahead distance provides more accurate tracking while a longer distance provides smoother tracking.</p> <p>Advantage:</p> <ul> <li>high level robustness;</li> <li>needs little calculation.</li> </ul> <p>Disadvantage:</p> <ul> <li>look-ahead distance is too small will cause instability and too large will cause bigger cross tracking error, the trade off between stability and tracking performance is difficult to balance;</li> <li>a sufficient look-ahead distance will result in <code>cutting corners</code> while executting turns on the path;</li> <li>a constant look-ahead distance will only fit a certain curvature and speed.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#stanley-method","title":"Stanley Method","text":"<p>The Stanley steering controller was deveoped by the Stanford Racing Team and implimented int their autonoumous vehicle for the DARPA Grand Challenge. The controller is based on a non-linear feedback function based on lateral errors measured from the front wheel axle.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#kinematic-model","title":"Kinematic Model","text":"<p>Following is the kinematic model which assumes the vehicle has negligible inertia. This assumption is effective for low speed driving. </p> <p>\\(v\\) is the automobile's speed; \\(e\\) is the cross-track error between desire path and the guiding wheels; \\(\\psi\\) is the heading with respect to the closet trajectory segment; \\(\\delta\\) is the front wheel steering angle. For forward driving, the guiding wheels are front wheels, and the derivative of the cross-track error is:</p> \\[ \\dot e = v \\cdot \\sin(\\psi - \\delta) \\tag4 \\] <p>while the steering is mechanically limited to \\(|\\delta| &lt; \\delta_{max}\\) The derivative of the yaw angle, the yaw rate, is </p> \\[ \\dot \\psi = - \\frac{v \\cdot \\sin(\\delta)} {a + b} \\tag5 \\] <p>where \\(a\\) and \\(b\\) are the distance from the center of gravity(CG) to the front and rear axle.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#partial-control-law","title":"Partial Control Law","text":"<p>By inspecting Equation (1) and (2), a controller is selected such that the resulting differential equation has a global asymptotically stable equilibrium at zero cross-track error:</p> \\[ \\delta =  \\begin{cases} \\psi + arctan(\\frac{k \\cdot e}{v}) &amp;  when &amp; |\\psi + \\arctan(\\frac{k \\cdot e}{e})| &lt; \\delta_{max} \\\\\\\\ \\delta_{max} &amp;  when &amp; \\psi + \\arctan(\\frac{k \\cdot e}{e}) \\geqslant \\delta_{max} \\\\\\\\ -\\delta_{max} &amp;  when &amp; \\psi + \\arctan(\\frac{k \\cdot e}{e}) &lt; -\\delta_{max}  \\end{cases} \\tag6 \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#proof-of-the-global-asymptotically-stable-equilibrium","title":"Proof of the Global Asymptotically Stable Equilibrium","text":"<p>Using the steering control law, there are three regions in the phase space of \\(e\\) and \\(\\psi\\): input saturated high, input saturated low and norminal control. When steering command (\\(\\psi + \\arctan(\\frac{k \\cdot e}{v})\\)) is at the steering limit, the equation of this boundary is as a function of \\(e\\):</p> \\[ \\psi_b = -\\arctan(\\frac{k \\cdot e}{v}) \\pm \\delta_{max} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#for-the-saturated-low-region","title":"For the Saturated Low Region","text":"<p>At this condition, the steering wheel angle is \\(-\\delta_{max}\\), considering Equation (4) and (5):</p> \\[ \\dot e = v \\cdot \\sin(\\psi + \\delta_{max})  \\] \\[ \\dot \\psi = \\frac{v \\cdot \\sin(\\delta_{max})} {a + b}  \\] <p>Because \\(\\delta_{max} &gt; 0\\), \\(\\dot\\psi &gt; 0\\) in this region, and is constant, \\(\\psi = -\\arctan(\\frac{ke}{v}) - \\delta_{max} &lt; 0\\), so \\(\\psi\\) increase linearly with time. Any state in this region will flow into the nominal region with finite time.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#for-the-saturated-high-region","title":"For the Saturated High Region","text":"<p>At this condition, the steering wheel angle is \\(\\delta_{max}\\), considering Equation (4) and (5):</p> \\[ \\dot e = v \\cdot \\sin(\\psi - \\delta_{max})  \\] \\[ \\dot \\psi = -\\frac{v \\cdot \\sin(\\delta_{max})} {a + b}  \\] <p>Because \\(\\delta_{max} &gt; 0\\), \\(\\dot\\psi &lt; 0\\) in this region, and is constant, \\(\\psi = -\\arctan(\\frac{ke}{v}) + \\delta_{max} &gt; 0\\), so \\(\\psi\\) decrease linearly with time. Any state in this region will flow into the nominal region with finite time.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#for-the-nominal-region","title":"For the Nominal Region","text":"<p>Substituting Equation (5) into Equation (1) we get:</p> \\[ \\dot e = - v \\cdot \\sin(\\arctan(\\frac{ke}{v})) = \\frac{-ke}{\\sqrt{1 + {\\frac{ke}{v}}^2}} \\tag7 \\] <p>Inside the nominal region, the sign of \\(\\dot e\\) is always opposite to \\(e\\), and for any \\(e\\), \\(\\dot e \\in [ke, v]\\). Thus the value of \\(e\\) will always converge to 0. For \\(\\psi\\), the sign of \\(\\dot\\psi\\) is opposite to \\((\\psi + \\arctan(\\frac{ke}{v}))\\), therefore, the origin is the only stable equilibrium in phase space.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#optimization","title":"Optimization","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#yaw-damping","title":"Yaw Damping","text":"<p>Using the controller as Equation (6), the tires act as dampers, providing reaction forces to sideways velocities. At low speeds, this stabilities the yaw dynamics, however the magnitude of this reaction is inversely proportional to speed. As speed increase, the damping effect diminishes, creating a need for active damping. Thus </p> \\[k_{d,yaw}(r_{meas} - r_{traj})\\] <p>is added to the steering command, where the \\(k_{d,yaw}\\) is a tuned gain, \\(r_{traj}\\) is the yaw rate for the trajectory, and \\(r_{meas}\\) is the measured yaw rate.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#actuator","title":"Actuator","text":"<p>The controller commands a steering servo, but time delay and overshot in the servo can cause instablility. One way to prevent this is to add </p> \\[ k_{d,steer}(\\delta_{meas}(i) - \\delta_{meas}(i + 1)) \\] <p>to the steering command, where \\(\\delta_{meas}\\) is the discrete time measurement of the steering angle, and i is the index of the measurement one control period earlier. This provides lead control on the software side. The value of \\(k_{d,steer}\\) is tuned to be large enough to damp the steering wheel response, but small enough to have minimal effect on performance.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#curvy-road","title":"Curvy Road","text":"<p>Automobiles point inward on curves, to generate lateral acceleration with the front and rear tires. The controller yaw setpoint should be non-zero. The steady state yaw, \\(\\psi_{ss}\\), relative to a constant curvature path, can be found using sums of forces and moments, yielding</p> \\[ \\psi_{ss} = \\frac{mvr_{traj}}{C_y(1 + \\frac{a}{b})} = k_{ag}vr_{traj} /tag8 \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#low-speed","title":"Low Speed","text":"<p>One final modification for driving at low speed prevents the gain term \\(\\frac{k}{v}\\) from becoming so large that it is oversensitive to noise on \\(e\\). A tuned gain, \\(k_{soft}\\), is added to the denominator, permitting control to be arbitrarily soft at low speeds. In experiments, \\(k_{soft} = 1\\) was found appropriate.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#final-control-law","title":"Final Control Law","text":"<p>So, the complete steering law is</p> \\[ \\delta = (\\psi - \\psi_{ss}) + \\arctan(\\frac{ke}{k_{soft} + v}) + k_{d,yaw}(r_{meas} - r_{traj}) + k_{d,steer}(\\delta_{meas}(i) - \\delta_{meas}(i + 1)) \\] <p>with saturation at \\(\\pm\\delta_{max}\\).</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Control/path_tracking/#reference","title":"Reference","text":"<ol> <li>Automatic Steering Methods for Autonomous Automobile Path Tracking</li> <li>Autonomous Automobile Trajectory Tracking for Off-Road Driving: Controller Design, Experimental Validation and Racing</li> <li>Dynamic Speed Adaptation for Path Tracking Based on Curvature Information and Speed Limits</li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/","title":"Autonomous Hdmap Format","text":"<p>After collecting map data, we need to describe the map in detail and store it, which needs <code>HD Map</code> format. There are two generally used data standards in the world for <code>HD Map</code>: NDS(Navigation Data Standard) and OpenDRIVE. Based on OpenDRIVE format, Baidu develop its own format, <code>appollo OpenDRIVE</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#navigation-data-standard","title":"Navigation Data Standard","text":"<p>The Navigation Data Standard(NDS) is a standardized format for automotive-grade navigation databases, jointly developed by automobile manufactures and supplies. NDS is an association registered in Germany, members are automotive OEMs, map data providers, and navigation device/applications providers. NDS seperates navigation software from navigation data, thus enhancing flexibility for creating various navigation products for end users. In addition to this interoperability, NDS databases support incremental updates, protection against illegal use and compactness.</p> <p>NDS uses the SQLite Database File Format. An NDS database can consist of several product databases, and each product database may be divided further into update regions. This concept supports a flexible and consistent versioning concept for NDS databases and makes it possible to integrate databases from different database suppliers into one NDS database.</p> <p>NDS format is very heavy, there is little usage in china, it's mainly used by big OEMs like BMW, Daimler and Volkswagen.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#opendrive","title":"OpenDRIVE","text":"<p>OpenDRIVE is an open format specification to describe a road network's logic, its objective is to standardize the logical road description to facilitate the data exchange between different driving simulators.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#co-ordinate-systems","title":"Co-ordinate Systems","text":"<p>OpenDRIVE uses two co-ordinate systems: track system for road and lane and inertial system for point.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#track-system","title":"Track System","text":"<p>The Track co-ordinate system applies along the reference line of the road. It is a right-handed co-ordinate system. The following degrees of freedom are defined:</p> <p> </p> <ul> <li>\\(s\\): poistion along reference line, measured in [m] from the beginning of the track;</li> <li>\\(t\\): lateral position, positive to the left;</li> <li>\\(h\\): height position, positive to the up;</li> <li>\\(heading\\): around \\(h-axis\\);</li> <li>\\(pitch\\): around \\(t-axis\\);</li> <li>\\(roll\\): around \\(s-axis\\);</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#inertial-system","title":"Inertial System","text":"<p>The inertial system is a right-handed co-ordinate system according to ISO 8855 projected on a drawing plane with the axes pointing to the following directions: </p> <ul> <li>\\(x\\): right(east);</li> <li>\\(y\\): up(north);</li> <li>\\(z\\): coming out of drawing plane(up);</li> <li>\\(heading\\): around \\(z-axis\\), 0 = direction of \\(x-axis/east\\);</li> <li>\\(pitch\\): around \\(y-axis\\);</li> <li>\\(roll\\): around \\(x-axis\\);</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#road-layout","title":"Road Layout","text":"<p>A full overview of OpenDRIVE road layout can be shown below:</p> <p></p> <p>All roads contain a reference line which defines the basic geometry(arcs, straight lines etc.). Along the reference line, various properties of the road can be defined like elevation profile, lanes, traffic signs, etc. Roads can be linked to each other directly(see road1 and road2) or via junctions(see road2 and road6).</p> <p>The convention applies that properties of the same type defined along a single reference line must be listed in ascending order. </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#reference-line","title":"Reference Line","text":"<p>The geometry of the reference line is described as a sequence of primitives of various types. The available primitives are:</p> <ul> <li>straight line: constant zero curvature;</li> <li>spiral line: linear change of curvature;</li> <li>curve line: constant non-zero curvature along run-length;</li> <li>cubic polynom: expenstion as \\(ax^3 + bx^2 + cx + d\\);</li> <li>parametric cubic curves.</li> </ul> <p>The following figure illustrates the composition of a reference line from some of the above mentioned elements.</p> <p></p> <p>In OpenDRIVE format, reference line is described by <code>geometry</code> under <code>planView</code> element. For example, the reference line above can be described as: <pre><code>&lt;planView&gt;\n  &lt;geometry s=\"0.0\" x=\"-7.07\" y=\"7.07\" hdg=\"5.49\" length=\"5.0\"/&gt;\n    &lt;line/&gt;\n  &lt;geometry s=\"5.0\" x=\"-9.57\" y=\"12.36\" hdg=\"0.4\" length=\"5.0\"/&gt;\n    &lt;spiral curvStart=\"0.0\" curvEnd=\"-3.0\"/&gt;\n  &lt;geometry s=\"10.0\" x=\"-12.33\" y=\"16.17\" hdg=\"1.9\" length=\"5.0\"/&gt;\n    &lt;spiral curvature=\"-3.0\"/&gt;\n&lt;/planView&gt;\n</code></pre> A road may contains more than one reference line, it depends on the road shape. In above xml code, \\(x\\), \\(y\\), \\(hdg\\) are start point's position\\((x, y)\\) and initial angle.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#lanes","title":"Lanes","text":"<p>Lanes are identified by numbers which are:</p> <ul> <li>unique</li> <li>insequence</li> <li>starting from 0 on reference line</li> <li>ascending to the left</li> <li>descending to the right</li> </ul> <p>The total number of lanes is not limited. The reference line is defined as lane zero and must not have a width entry. A road may contains many lanes, and lane has its width and <code>roadMark</code> like dotted line, solid line, double lines, etc.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#lane-offset","title":"Lane Offset","text":"<p>In certain situations(see raod picture above) it may be more convenient to shift the lane profile instead of shifting the reference line.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#lane-sections","title":"Lane Sections","text":"<p>The lanes appearing in a given cross-section along the road are defined in so-called lane sections. Multiple lane sections may be defined in ascending order along a reference line. Per lane section, the number of lanes is constant. However, the properties of each lane(e.g. width, road marks, friction etc.) may change.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#lane-properties","title":"Lane Properties","text":"<p>Lane properties are defined to the start of the corresponding lane section. Offset start at 0.0 for the beginning of the lane section and increase corresponding to the road co-ordinate s. In OpenDRIVE, <code>width</code> defines the width of the lane, and <code>roadMark</code> defines the properties of lane. The lane properties can be following:</p> <ul> <li>none</li> <li>solid</li> <li>broken</li> <li>solid solid (for double solid line)</li> <li>solid broken (from inside to outside, exception: center lane - from left to right)</li> <li>broken solid (from inside to outside, exception: center lane - from left to right)</li> <li>broken broken (from inside to outside, exception: center lane - from left to right)</li> <li>botts dots</li> <li>grass (meaning a grass edge)</li> <li>curb</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#superelevation-and-crossfall","title":"Superelevation and Crossfall","text":"<p>In many cases, a road's cross section will not be parallel to the underlying terrain. Instead, it will be elevanted to one side (e.g. in curves) or to the center(for drainage). Both properties are covered by the OpenDRIVE format with the former being called \"superelevation\" and the latter \"crossfall\".</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#road-linkage","title":"Road Linkage","text":"<p>In order to navigate through a road network, the application must know the linkage between different roads. Two types of linkage are possible:</p> <ul> <li>successor/predecessor linkage (standard linkage)</li> <li>junctions</li> </ul> <p>Whenever the linkage between two roads is clear, a standard linkage is sufficient. A junction is required when the successor or predecessor relationship of a road is ambiguous.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#junctions","title":"Junctions","text":"<p>Junctions link in-coming roads via paths(connecting roads) to out-going roads.</p> <p>In road layout figure, Road 2 is a in-coming road, Road 6 - 8 are out-going roads, Road 3 - 5 are connecting roads.</p> <p>Junctions consist of a connection matrix which indicates all possibilities to enter a connecting road from a given in-coming road. These connections are listed on a per-lane basis in order to facilitate navigation. Once a connecting road is entered, the following connection to the corresponding outgoing road can be retrieved from the general successor/predecessor information that is stored with each road.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#surface","title":"Surface","text":"<p>OpenDRIVE provides two approaches for describing surface properties:</p> <ul> <li>Standard description: a <code>&lt;material&gt;</code> record may be defined per lane of the road, providing parameters for:<ul> <li>surface material code</li> <li>roughness</li> <li>friction</li> </ul> </li> <li>Extended description: A more detailed description of road surface data may be provided within the newly introduced <code>&lt;surface&gt;</code> record. OpenDRIVE provides reference to the respective data files, formats supported are listed below:<ul> <li>Open Curved Regular Grid (OpenCRG)</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#apollo-opendrive","title":"Apollo OpenDRIVE","text":"<p>OpenDRIVE format is mainly designed for simulator, it lacks lots of information that autodirve need. Apollo OpenDRIVE is based on OpenDRIVE and expends some specifications.  </p> <p>Some concepts may cause ambiguity:</p> <ul> <li>overlap: link two elements, describe two elements's spatial relations. If two elements have overlaps, we make them a Overlap. For example, Deceleration Zone on a Lane, or Stop Zone on a Lane</li> <li>virtual lane: guide the driving at intersection</li> <li>left sample: distance between lane center and left boundary</li> <li>right sample: distance between lane center and right boundary</li> <li>co-ordinate system: utm, WGS84</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#main-difference","title":"Main Difference","text":"<p> Apollo OpenDRIVE change the discription of elements' shape and classify all the elements: all the roadMark are classified into Objects; all the signals classified into Signal; use Overlap to link them.</p> No. Iterm OpenDRIVE Apollo OpenDRIVE Note 1 The description of elements' shape Equations Co-ordination Point 2 The expansion of elements' type - Add no-stop area, crosswalk, deceleration zone, etc. 3 The expansion of linkage between elements - Add the linkage between junction and elements inside junctions 4 Other expansion - Add the distance between lane center and road boundary, linkage between stop line and traffic lights"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Map/hdmap/#reference","title":"Reference","text":"<ul> <li>wikipedia-Navigation Data Standard</li> <li>wikipedia-OpenDRIVE</li> <li>OpenDRIVE Format Spec Rev 1.5</li> <li>OpenDrive\u683c\u5f0f\u5730\u56fe\u6570\u636e\u89e3\u6790</li> <li>Apollo\u9ad8\u7cbe\u5730\u56fe\u8be6\u89e3</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/00_summary/","title":"Summary","text":"<p>Path-planning is an important primitive for autonomous mobile robots that lets robots find the shortest(or otherwise optimal) path between two points. Otherwise optimal paths could be paths that minimize the amount of turning, the amount of braking or whatever a specific application requires. Algorithms to find a shortest path are important not only in robotics, but also in network routing, video games and gene sequencing.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/00_summary/#basic-requirements","title":"Basic Requirements","text":"<p>There are three basic requirements for motion planning:</p> <ul> <li>Safey: collision avoidance</li> <li>Smoothness: energy saving and comfortable </li> <li>Kinodynamic feasibility: executable, controllable</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/00_summary/#methods-for-motion-planning","title":"Methods for Motion Planning","text":"<p>The old-school pipeline of motion planing is:</p> <ul> <li>Front-end path finding<ul> <li>Search for an initial safe path</li> <li>Low dimensional</li> <li>Discrete space</li> </ul> </li> <li>Back-end trajectory generation<ul> <li>Search for an executable trajectory</li> <li>High dimensional</li> <li>Continous space</li> </ul> </li> </ul> <p>And the general methods includes:</p> <ul> <li>Front-end: Path finding<ul> <li>Search-based Path Finding<ul> <li>Graph Search Basis</li> <li>Dijkstra and A*</li> <li>Jump Point Search</li> </ul> </li> <li>Sampling-Based Path Finding<ul> <li>Probabilistic Road Map</li> <li>Rapidly-exploring Random Tree(RRT)</li> <li>Optimal Sampling-Based Methods</li> <li>Advanced Sampling-based Methods</li> </ul> </li> <li>Kinodynamic Path Finding<ul> <li>State-state Boundary Value Optimal Control Problem</li> <li>State Lattice Search</li> <li>Kinodynamic RRT*</li> <li>Hybrid A*</li> </ul> </li> </ul> </li> <li>Back-end: Trajectory Generation<ul> <li>Minimum Snap Trajectory Generation<ul> <li>Differential Flatness</li> <li>Minimum Snap Optimization </li> <li>Closed-form Solution to Minimum Snap</li> <li>Time Allocation</li> <li>Implementation in Practice</li> </ul> </li> <li>Soft and Hard Constrained Trajectory Optimization<ul> <li>Soft Constrained Trajectory Optimization</li> <li>Hard Constrained Trajectory Optimization</li> </ul> </li> </ul> </li> <li>MDP &amp; MPC<ul> <li>Markov Decision Process-based Planning<ul> <li>Uncertainties in Planning and MDP</li> <li>Minimax Cost Planning and Excected Cost Minimal Planning</li> <li>Value Iteration and Real-Time Dynamic Programming</li> </ul> </li> <li>Model Prediction Control for robotics Planning<ul> <li>Linear MPC</li> <li>Non-linear MPC</li> </ul> </li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/00_summary/#reference","title":"Reference","text":"<ul> <li>Motion Planning for Mobile Robots</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/","title":"Search-based Path Finding","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#graph-search-basis","title":"Graph Search Basis","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#configuration-space","title":"Configuration Space","text":"<p>Here are some definations:</p> <ul> <li><code>Robot Configuration</code>: a specification of the positions of all points of the robot</li> <li><code>Degree of Freedom(DOF)</code>: the minimum number \\(n\\) of real-valued coordinates needed to represent the robot configuration</li> <li><code>Configuration Space</code>: a n-dim space containing all possible robot configurations, denoted as <code>C-space</code>, and each robot pose is a point in the C-space</li> </ul> <p>Because:</p> <ul> <li>robot has different shape and size</li> <li>Collision detection requires knowing the robot geometry, which is time consuming and hard</li> </ul> <p>we choose to do planning in configuration space. A transformation is as below:</p> <p></p> <ul> <li>Robot is represented by a point in C-space, e.g. position(a point in \\(\\mathbb{R}^3\\)), pose(a point in \\(SO(3)\\)), etc.</li> <li>Obstacles need to be represented in configuration space(one-time work prior to motion planning), called configuration space obstacle, or C-obstacle</li> <li>\\(\\text{C-space} = \\text{C-obstacle} \\cup \\text{C-free}\\)</li> <li>The path planning is finding a path between start point \\(q_{start}\\) and goal point \\(q_{goal}\\) within \\(\\text{C-free}\\)</li> </ul> <p>The basic introduction for graph and search methods can be found in Coding/Algorithm/Graph.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#heuristic-search","title":"Heuristic Search","text":"<p>BFS(Breadth First Search) and DFS(Depth First Search) pick the next node off the frontiers based on which was \"first in\" or \"last in\", and Greedy Best First picks the \"best\" node according to some rule, called a <code>heuristic</code>.</p> <p>A Heuristic is a <code>guess</code> of how close you are to the target. There are many kinds of heuristics for distance estimation:</p> <ul> <li>Euclidean Distance</li> <li>Manhattan Distance</li> <li>Diagonal Distance</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#dijkstra","title":"Dijkstra","text":"<p>Dijkstra expands/visits the node with the <code>cheapest accumulated cost g(n)</code>, where</p> <ul> <li>\\(g(n)\\) is the current best estimates of the accumulated cost from the start state to node <code>n</code>;</li> <li>Update the accumulated costs \\(g(m)\\) for all unexpanded neighbors <code>m</code> of node <code>n</code></li> <li>A node that has been expanded/visited is guaranteed to have the smallest cost from the start state.</li> </ul> <p>A work flow for dijkstra can be:</p> <ul> <li>Maintain a <code>priority queue</code> to store all the nodes to be expanded</li> <li>The priority queue is initialized with the start state \\(X_s\\)</li> <li>Assign \\(g(X_s) = 0\\) and \\(g(n) = infinite\\) for all other nodes in graph</li> <li>Loop:<ul> <li>If the queue is empty, return <code>False</code>, break;</li> <li>Remove the node n with the lowest \\(g(n)\\) from the priority queue</li> <li>Mark node n as expanded</li> <li>If the node n is the goal state, return <code>True</code>, break</li> <li>For all unexpanded neighbors \"m\" of \"n\":<ul> <li>If \\(g(m) == infinite\\)<ul> <li>\\(g(m)=g(n) + C_{nm}\\)</li> <li>Push node \"m\" into the queue</li> </ul> </li> <li>If \\(g(m) &gt; g(n) + C_{nm}\\)<ul> <li>\\(g(m) = g(n) + C_{nm}\\)</li> </ul> </li> </ul> </li> </ul> </li> <li>End Loop</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#pros-and-cons","title":"Pros and Cons","text":"<ul> <li>Pros<ul> <li>Complete and optimal</li> </ul> </li> <li>Cons<ul> <li>Can only see the cost accumulated so far, thus exploring next station in every <code>direction</code></li> <li>No information about goal location</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#a","title":"A*","text":"<p>The A star algorithm is a dijkstra with a heuristic. It expands the node with cheapest cost \\(f(n) = g(n) + h(n)\\), where</p> <ul> <li>\\(g(n)\\) is the current best estimates of the accumulated cost from the start state to node <code>n</code></li> <li>\\(h(n)\\) is the estimated least cost from the node <code>n</code> to goal state.</li> </ul> <p>A general workflow is:</p> <ul> <li>Maintain a <code>priority queue</code> to store all the nodes to be expanded</li> <li>The priority queue is initialized with the start state \\(X_s\\)</li> <li>Assign \\(g(X_s) = 0\\) and \\(g(n) = infinite\\) for all other nodes in graph</li> <li>Loop:<ul> <li>If the queue is empty, return <code>False</code>, break;</li> <li>Remove the node n with the lowest \\(f(n) = g(n) + h(n)\\) from the priority queue</li> <li>Mark node n as expanded</li> <li>If the node n is the goal state, return <code>True</code>, break</li> <li>For all unexpanded neighbors \"m\" of \"n\":<ul> <li>If \\(g(m) == infinite\\)<ul> <li>\\(g(m)=g(n) + C_{nm}\\)</li> <li>Push node \"m\" into the queue</li> </ul> </li> <li>If \\(g(m) &gt; g(n) + C_{nm}\\)<ul> <li>\\(g(m) = g(n) + C_{nm}\\)</li> </ul> </li> </ul> </li> </ul> </li> <li>End Loop</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#optimality","title":"Optimality","text":"<p><code>A*</code> has optimality only if:</p> \\[ h(n) \\le h_{real}(n) \\] <p>where \\(h(n)_{real}\\) is the true least cost to goal from node \"n\".</p> <ul> <li>if \\(h(n) &lt;&lt; h_{real}(n)\\), then the solution is optimal, but the searching speed will be slow;</li> <li>if \\(h(n)  &gt; h_{real}(n)\\), the solution is not optimal, which means that the path found by <code>A*</code> may not be the shortest path;</li> <li>if \\(h(n)  = h_{real}(n)\\), the solution is optimal and the speed is the fastest.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#speed-up-a","title":"Speed up <code>A*</code>","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#the-best-heuristic","title":"The best heuristic","text":"<p>Even if we have an optimal heuristic cost, there is still something to optimize. For example, if we use the \\(f(n) = g(n)\\) as cost function, we can surely find the shortest path, but the speed is slow. The closer our heuristic cost is to the actual distance from node to goal, the less steps we go through to reach the goal.</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#tie-breaker","title":"Tie breaker","text":"<p>In a 2D path without any obstacles, many paths have the same \\(f(n)\\) value. There is no differences among them which makes them explored by <code>A*</code> equally.</p> <p></p> <p>We can change the \\(f(n)\\) value slightly to break the tie:</p> <ul> <li>Interfere \\(h\\) slightly: \\(h = h * (1.0 + p)\\), where \\(p &lt; \\frac{\\text{minimum cost of one step}} {\\text{expected maximum path cost}}\\);</li> <li>when \\(f\\) is the same, compares \\(h\\);</li> <li>add deterministic random numbers to the heuristic or edge costs(A hash of the coordinates);</li> <li>prefer paths that are along the straight line from the starting point to the goal;</li> <li>other more...</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#jump-point-search","title":"Jump Point Search","text":"<p>Jump point search is a systematic approach to solve the tie problem of <code>A*</code>. The core idea of JPS is to find the symmetry and break them.</p> <p></p> <p>JPS explores intelligently, becasue it always looks ahead and jump.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#look-ahead-rule","title":"Look ahead rule","text":"<ul> <li>Neighbor pruning:<ul> <li>gray node: inferior neighbors, when going to them, the path without x is cheaper, Discard.</li> <li>white node: nutural neighbors.</li> <li>we only need to consider natural neighbors when expand the search.</li> </ul> </li> <li>Forced neighbors<ul> <li>There is obstacle adjacent to x.</li> <li>Red nodes are forced neighbors.</li> <li>A cheaper path from x's parent to them is blocked by obstacle.</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#jumping-rule","title":"Jumping rule","text":"<ul> <li>Recursively apply straight pruning rule and identify y as a jump point successor of x. This node is interesting because it has a neighbor z that can not reached optimally except by a path that visit x then y.</li> <li>Recursively apply the diagonal pruning rulea and identify y as a jump point successor of x.</li> <li>Before each diagonal step we first recurse straight. Only if both straight recursions fail to identify a jmp point do we step diagonally again.</li> <li>Node w, a forced neighbor of x, is expanded as normal.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#conclusion","title":"Conclusion","text":"<ul> <li>Most time, especially in complex environments, JPS is better, but far away from alway. For example, a large map with not many obstacles, JPS may be slower than <code>A*</code>.</li> <li>JPS reduces the number of nodes in <code>open list</code>, but increase the number of status query.</li> <li>JPS' limitation: only applicable to uniform grid map.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/01_search/#practice","title":"Practice","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/","title":"Sample-based Path Finding","text":"<p>Sampling-based planner has following features:</p> <ul> <li>Do not attempt to explicitly construct the C-space and its boundaries</li> <li>Simply need to know if a single robot configuration is in collision</li> <li>Exploits simple tests for collision with full knowledge of the space</li> <li>Collision detection is a separate module, and can be tailored to the application</li> <li>As collision detection improves, so do these algorithms</li> <li>Different approaches for single-query and multi-query requests</li> </ul> <p>Some notions of completeness in planning:</p> <ul> <li><code>Complete Planner</code>: always answers a path planning query correctly in bounded time</li> <li><code>Probabilistic Complete Planner</code>: if a solution exists, planner will eventrually find it, using random sampling(e.g. Monte Carlo sampling)</li> <li><code>Resolution Complete Planner</code>: same as above but based on a deterministic sampling(e.g. sampling on a fixed grid)</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#probabilistic-road-map","title":"Probabilistic Road Map","text":"<p>A <code>PRM</code>(Probablistic Road Map) is:</p> <ul> <li>A graph structure</li> <li>Dividing planning into two phases:<ul> <li>Learning phase</li> <li>Query phase</li> </ul> </li> <li>Checking sampled configurations and connections between samples for collision can be done efficiently</li> <li>A relatively small number of milestones and local paths are sufficient to capture the connectivity of the free space</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#learning-phase","title":"Learning Phase","text":"<ul> <li>Sample N points in C-space</li> <li>Delete points that are not collision-free</li> <li>Connect to nearest points and get collision-free segments</li> <li>Delete segments that are not collision free</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#query-phase","title":"Query Phase","text":"<ul> <li>Search on the road map to find a path from the start to the goal(using Dijkstra or A star algortihm)</li> <li>Road map is now similar with the grid map(or a simplified grid map) </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#pros","title":"Pros","text":"<ul> <li>probabilitically complete</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#cons","title":"Cons","text":"<ul> <li>Required to solve 2 point boundary value problem</li> <li>Build graph over state space but no particular focus on generating a path</li> <li>Not efficiet</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#lazy-collision-checking","title":"Lazy Collision-checking","text":"<p>To improving efficiency of PRM, we can use lazy collision-checking</p> <ul> <li>Collision-checking process is time-consuming, especially in complex or high-dimensional environments</li> <li>Sample points and generate segments without considering the collision(<code>lazy</code>)</li> <li>Find a path on the road map generated without collision checking</li> <li>Delete the corresponding edges and nodes if the path is not collision free</li> <li>Restart path-finding</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#rapidly-exploring-random-treerrt","title":"Rapidly-exploring Random Tree(RRT)","text":"<p>RRT builds up a tree through generating <code>next states</code> in the tree by executing random controls. The algorithm process is:</p> <p></p> <ul> <li>get a random point from C-space \\(x_{rand}\\)</li> <li>check the nearest point \\(x_{near}\\) from rrt-tree </li> <li>move from \\(x_{near}\\) to \\(x_{rand}\\) by a distance \\(step_size\\) to get a new point \\(x_{new}\\)</li> <li>if \\(x_{new}\\) is collision-free, add it to the rrt-tree</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#pros_1","title":"Pros","text":"<ul> <li>Aims to find a path from the start to the goal</li> <li>More target-oriented than PRM</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#cons_1","title":"Cons","text":"<ul> <li>Not optimal solution</li> <li>Not efficient(leave room for improvement)</li> <li>Sample in the whole space</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#kd-tree","title":"KD Tree","text":"<p>We can use Kd-tree to accumulate the search nearest point process.</p> <p>A detail describe can be found kd-tree</p> <p> </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#bidirectional-rrtrrt-connect","title":"Bidirectional RRT/RRT Connect","text":"<p>We can also grow the tree from both start point and the goal point, the path would be found when two trees are connected.</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#optimal-sampling-based-path-planning-methods","title":"Optimal Sampling-based Path Planning Methods","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#rrt","title":"RRT*","text":"<p>The difference between RRT and RRT star is:</p> <p>After adding a new node to RRT tree, RRT* check all nodes around the new added node.</p> <p>If surrounding points can get to start point with lower cost through the new node, they change their parents to the new node. That's the rewire step.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#kinodynamic-rrt","title":"Kinodynamic-RRT*","text":"<p>Kinodynamic-RRT* changes the steer step of RRT* to fit with motion or other constraints in robot navigation.</p> <ul> <li>Kinodynamic RRT*: Optimal Motion Planning for Systems with Linear Differential Constraints</li> <li>video</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#anytime-rrt","title":"Anytime RRT*","text":"<p>Keep optimizing the leaf RRT Tree when the robot executes the current trajectory Anytime Fashion.</p> <ul> <li>Anytime Motion Planning using the RRT*</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#advanced-path-planning-methods","title":"Advanced Path Planning Methods","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#informed-rrt","title":"Informed RRT*","text":"<p>Informed RRT* makes the RRT tree to grow only in an ellipse, start point and end point are ellipse's two focal points, and the distance from curve to focal points is the length of path. If a new path shorter is found, the distance will decrease. </p> <ul> <li>Informed RRT*: Optimal sampling-based path planning focused via direct sampling of an admissible ellipsoidal heuristic</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#cross-entropy-motion-planning","title":"Cross-entropy Motion Planning","text":"<ul> <li>Cross-entropy motion planning</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#other-variants","title":"Other Variants","text":"<ul> <li>Lower Bound Tree RRT</li> <li>Sparse Stable RRT</li> <li>Transition-based RRT</li> <li>Vector Field RRT</li> <li>Parallel RRT</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#some-materials","title":"Some Materials","text":"<ul> <li>An Overview of the Class of Rapidly-Exploring Random Trees</li> <li>RRT</li> <li>Asymptotically near-optimal RRT for fast, high-quality, motion planning</li> <li>SST software</li> <li>Transition-based RRT for Path Planning in Continuous Cost Spaces</li> <li>VF-RRT: Introducing optimization into randomized motion planning</li> <li>Parallel Sampling-Based Motion Planning with Superlinear Speedup</li> <li>Charle Wong's Github</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/02_sample/#implementation","title":"Implementation","text":"<ul> <li>ROS Training</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/","title":"Kinodynamic Path Finding","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#introduction","title":"Introduction","text":"<p>The <code>kinodynamic</code> planning problem is to synthesize a robot subject to simultaneous </p> <ul> <li><code>kinematic</code> constraints, such as <code>avoiding obstacles</code></li> <li><code>dynamic</code> constraints, such as modulus <code>bounds on velocity, acceleration, and force</code></li> </ul> <p>A kinodynamic solution is a mapping from time to generalized forces or accelerations.</p> <p>We choose kinodynamic planning because:</p> <ul> <li>Straight-line connections between pairs of states are typically not valid trajectories due to the system's <code>differential constraints</code>.</li> <li>The smoother the path we found, the easier we optimize it.</li> <li>Coarse-to-fine process</li> <li>Trajectory only optimizes locally</li> <li>Infeasible path means nothing to nonholonomic system</li> </ul> <p></p> <p>The typical models we used are:</p> <ul> <li>Unicycle model:</li> </ul> <p></p> <ul> <li>Bicycle model:</li> </ul> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#state-lattice-planning","title":"State Lattice Planning","text":"<p>As learned in search-based path finding, we have many weapons to attack graph search. But to assume the robot a mass point is not satisfactory any more, we require a graph with <code>feasible motion connections</code> now.</p> <p>The search-based path finding is actually a discretization of control space with the assumption that the robot can move in 4/8 directions:</p> <p></p> <p>And the sample-based path finding is a discretization of state sapce where the state is \\(\\mathbb{R}^2\\), only position \\((x, y)\\) is considered.</p> <p></p> <p>We can manually create(build) a graph with all edges executable by robot in two ways:</p> <ul> <li>forward direction: discrete (sample) in <code>control</code> space</li> <li>reverse direction: discrete (sample) in <code>state</code> space</li> </ul> <p>This is the basic motivation for all kinodynamic planning, and state lattice planning is the most straight-forward one.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#build-the-graph-sample-in-control-vs-state-space","title":"Build the Graph, Sample in Control vs. State Space","text":"<p>For a robot model:</p> \\[ \\dot{s} = f(s, u) \\] <ul> <li>The robot is differentially driven</li> <li>We have an inital state \\(s_0\\) of the robot</li> <li>We can generate feasible local motions by:<ul> <li>Select a \\(u\\), fix a time duration \\(T\\), forward simulate the system(numerical integration)</li> <li></li> <li>Select a \\(s_f\\), find the connection (a trajectory) between \\(s_0\\) and \\(s_f\\)</li> <li></li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#sample-in-control-space","title":"Sample in Control Space","text":"<ul> <li>Search-based Motion Planning for Quadrotors using Linear Quadratic Minimum Time Control</li> </ul> <p>The lattice graph obtained by searching is:</p> <p></p> <p>Note that:</p> <ul> <li>During searching, the graph can be built when necessary.</li> <li>Create nodes(state) and edges(motion primitive) when nodes are newly discovered.</li> <li>Save computational time/space.</li> </ul> <p>And for vehicle, things are different.</p> <p>The <code>state</code> can be:</p> \\[ s = \\begin{bmatrix} x \\\\ y \\\\ \\theta \\end{bmatrix} \\] <p><code>Input</code>:</p> \\[ u = \\begin{bmatrix} v \\\\ \\phi \\end{bmatrix} \\] <p><code>System equation</code>:</p> \\[ \\begin{bmatrix} \\dot{x} \\\\ \\dot{y} \\\\ \\dot{\\theta} \\end{bmatrix} = \\begin{bmatrix} v \\cdot cos\\theta \\\\ v \\cdot sin\\theta \\\\ \\frac{R}{L} \\cdot tan\\phi \\end{bmatrix} \\] <p>where:</p> <ul> <li>\\(\\theta\\) is heading angle</li> <li>\\(\\phi\\) is steering angle</li> <li>\\(R\\) is steering radius</li> <li>\\(L\\) is the length from front to rear axle</li> </ul> <p>For every \\(s \\in T\\) from the search tree, we pick a control vector \\(u\\) and integrate the equation over short duration, and finally add collision-free motions to the search tree.</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#sample-in-state-space","title":"Sample in State Space","text":"<p>We build a lattice graph with:</p> <ul> <li>Given an origin</li> <li>For 8 neighbor nodes around the origin, feasible paths are found</li> <li>Extend outward to 24 neighbos.</li> <li>Complete lattice</li> </ul> <p>Following is build with <code>Reeds-Shepp Car Model</code>:</p> <p></p> <ul> <li>Generating Near Minimal Spanning Control Sets for Constrained Motion Planning in Discrete State Spaces</li> </ul> <p>And for two or more layers lattice graph, only first layer is different:</p> <p></p> <ul> <li>Optimal Rough Terrain Trajectory Generation for Wheeled Mobile Robot</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#comparison","title":"Comparison","text":"<ul> <li>Trajectories are denser in the direction of the initial angular velocity</li> <li> <p>Very similar outputs for several distinct inputs</p> </li> <li> <p>State Space Sampling of Feasible Motions for High-Performance Mobile Robot Navigation in Complex Environments</p> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#boundary-value-problembvp","title":"Boundary Value Problem(BVP)","text":"<p>Boundary Value Problem is the basis of state sampled lattice planning. It has no general solution, we have to design case by case. It often envolves complicated numerical optimization.</p> <p>The basic problem is to design a trajectory (in x direction, for example) such that:</p> <ul> <li>\\(x(0) = a\\)</li> <li>\\(x(T) = b\\)</li> </ul> <p></p> <p>We can take the trajecotry \\(5^{th}\\) order polynomial trajectory:</p> \\[ x(t) = c_{5}t^{5} + c_{4}t^{4} + c_{3}t^{3} + c_{2}t^{2} + c_{1}t + c_{0} \\] <p>The boundary condition will be:</p> Position Velocity Acceleration t = 0 a 0 0 t = T b 0 0 <p>The problem will be solved with:</p> \\[ \\begin{bmatrix} a \\\\ b \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix} = \\begin{bmatrix} 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ T^5 &amp; T^4 &amp; T^3 &amp; T^2 &amp; T &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 5T^4 &amp; 4T^3 &amp; 3T^2 &amp; 2T &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 2 &amp; 0 &amp; 0 \\\\ 20T^3 &amp; 12T^2 &amp; 6T &amp; 2 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} \\begin{bmatrix} c_5 \\\\ c_4 \\\\ c_3 \\\\ c_2 \\\\ c_1 \\\\ c_0 \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#optimal-boundary-value-problemobvp","title":"Optimal Boundary Value Problem(OBVP)","text":"<p>If \\(T\\) is fixed, we can get the unique solution of:</p> \\[ \\begin{bmatrix} c_5 \\\\ c_4 \\\\ c_3 \\\\ c_2 \\\\ c_1 \\\\ c_0 \\end{bmatrix} \\] <p>But if \\(T\\) is a variable, we can get more than one solutions. This is an optimal boundary value problem.</p> <p>The general step for this problem is:</p> <ol> <li>System modelling</li> <li><code>Pontryain's Minimum Principle</code> constructing</li> <li>Solving costate</li> <li>Solving optimal control</li> </ol> <p>We take the quadratic as an example.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#fixed-final-state","title":"Fixed Final State","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#1-system-modeling","title":"1. System modeling","text":"<p>a. State:</p> \\[ S_{k} = \\begin{bmatrix} p_{k} \\\\ v_{k} \\\\ a_{k} \\end{bmatrix} \\tag{2} \\] <p>b. System modle</p> \\[ \\dot {S_{k}} = f_s(s_k, u_K) = \\begin{bmatrix} v_k \\\\ a_k \\\\ j_k \\end{bmatrix} \\tag{4} \\] <p>c. Input:</p> \\[ u_{k} = j_{k} \\tag{3} \\] <p>d. Boundary state:</p> \\[ S(0) = \\begin{bmatrix} p(0) \\\\ v(0) \\\\ a(0) \\end{bmatrix} \\tag{5} \\] \\[ S(f) = \\begin{bmatrix} p(f) \\\\ v(f) \\\\ a(f) \\end{bmatrix} \\tag{6} \\] <p>e. Cost Function:</p> \\[ J_{\\sum} = \\sum_{k=1}^{3}J_{k}, J_{k} = \\frac{1}{T} \\int_0^T j_{k}^2(t) dt \\tag{1} \\] <p>The \\(k\\) in equation is the dimension(x, y, z) of state, and we assume that three dimensions are independent, so we throw away the \\(k\\) in the following equations.</p> <p>And we also define that the quadratic must arrive the final position with the state of \\(S(f)\\), which causes some difference with undefined dimensions' case, we'll discuss this condition later.</p> <ul> <li>A Computationally Efficient Motion Primitive for Quadrocopter Trajectory Generation</li> <li>Dynamic Programming and Optimal Control</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#2-pontryain-minimum-principle-constructing","title":"2. <code>Pontryain Minimum Principle</code> constructing","text":"<p>Generally, the cost function can be described as:</p> \\[ J = h(s(T)) + \\int^T_0{g(s(t), u(t)) \\cdot dt} \\] <p>where:</p> <ul> <li>\\(h(s(T))\\) is the <code>final state</code>;</li> <li>\\(\\int^T_0{g(s(t), u(t)) \\cdot dt}\\) is the <code>transition cost</code>.</li> </ul> <p>Write the <code>Hamiltonian function</code> and <code>costate</code>:</p> \\[ H(s, u, \\lambda) = g(s, u) + \\lambda^T f(s, u) \\] \\[ \\lambda = (\\lambda_1, \\lambda_2, \\lambda_3) \\] <p>and suppose:</p> <ul> <li>\\(s^\\star\\) is the <code>optimal state</code></li> <li>\\(u^\\star\\) is the <code>optimal input</code></li> </ul> <p>We have following conclusions:</p> \\[ \\dot{s^\\star} = f(s^\\star(t), u^\\star(t)), given: s^\\star(0) = s(0) \\] <p>\\(\\lambda(t)\\) is the solution of:</p> \\[ \\dot{\\lambda(t)} = -\\nabla_s H(s^\\star(t), u^\\star(t), \\lambda(t)) \\] <p>with the boundary condition of:</p> \\[ \\lambda(T) = - \\nabla h(s^\\star(T)) \\] <p>and the optimal control input is:</p> \\[ u^\\star(t) = arg \\min_{u(t)} H(s^\\star (t), u(t), \\lambda(t)) \\] <p>By <code>Pontryain's minimum principle</code>, we first inctroduce the <code>costate</code>:</p> \\[ \\lambda = \\begin{bmatrix} \\lambda_1 \\\\ \\lambda_2 \\\\ \\lambda_3 \\end{bmatrix} \\tag{7} \\] <p>And define the <code>Hamiltonian function</code>:</p> \\[ \\begin{align} H(s, u, \\lambda) &amp;= \\frac{1}{T} j^2 + \\lambda^T f_s(s, u) \\\\                  &amp;= \\frac{1}{T} j^2 + \\lambda_1v + \\lambda_2a + \\lambda_3j \\\\  \\end{align} \\tag{8} \\] <p>The <code>Pontryain's minimum principle</code> says:</p> \\[ \\dot {S}^*(t) = f(S^*(t), u^*(t)) \\tag{9} \\] <p>with \\(S^*(0) = S(0)\\), where:</p> <ul> <li><code>*</code>, means optimal.</li> </ul> <p>And \\(\\lambda(t)\\) is the solution of:</p> \\[ \\dot{\\lambda}(t) = - \\nabla H(S^*(t), u^*(t), \\lambda(t)) \\tag{10} \\] <p>with the boundary condition of:</p> \\[ \\lambda(T) = - \\nabla h(S^*(T)) \\tag{11} \\] <p>and the optimal control input is:</p> \\[ u^*(t) = arg \\min_{u(t)} H(S^*(t), u(t), \\lambda(t)) \\tag{12} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#3-solving-costate","title":"3. Solving costate","text":"<p>From equation (8) and (10), calculating the partial derivatives of \\((p, v, a)\\), we get:</p> \\[ \\dot{\\lambda}(t) = \\begin{bmatrix} 0 \\\\ -\\lambda_1 \\\\ -\\lambda_2 \\end{bmatrix} \\] <p>We define \\(\\lambda_1 = \\alpha\\), and calculate the integration of \\(\\lambda_2\\) and \\(\\lambda_3\\):</p> \\[ \\lambda (t) = \\begin{bmatrix} \\alpha \\\\ -\\alpha t + \\beta  \\\\ \\frac{1}{2} \\alpha t^2 + \\beta t + \\gamma \\end{bmatrix} \\] <p>As for that \\(\\alpha\\), \\(\\beta\\) and \\(\\gamma\\) are all unknown variables, we can organize the formula above to:</p> \\[ \\lambda (t) = \\frac{1}{T} \\begin{bmatrix} -2 \\alpha \\\\ 2 \\alpha t + 2 \\beta  \\\\ - \\alpha t^2 - 2 \\beta t - 2 \\gamma \\end{bmatrix} \\] <p>According to (12), \\(u^*(t)\\) is the \\(u(t)\\) value when formula (8) get minimum value with the costate \\([\\lambda_1, \\lambda_2, \\lambda_3]'\\), so:</p> \\[ u(t) = \\frac{1}{T} (j^2 -(\\alpha t^2 + 2\\beta t + 2\\gamma) j + - 2\\alpha v + 2\\alpha ta + 2 \\beta a) \\] <p>As we have known (3), to minimize the \\(u(t)\\), we let the derivative of \\(j\\) to \\(0\\):</p> \\[ 2j - (\\alpha t^2 + 2\\beta t + 2\\gamma) = 0 \\] \\[ u^*(t) = j^* = \\frac{1}{2} + \\beta t + \\gamma \\tag{13} \\] <p>We already have the start state (5), according to (2), \\(S^{*}(t)\\) is the <code>1/2/3</code> order integration of \\(u^{*}(t) = j\\):</p> \\[ S^{\\star}(t) =  \\begin{bmatrix} \\frac{1}{120} \\alpha t^5 + \\frac{1}{24} \\beta t^4 + \\frac{1}{6} \\gamma t^3 + \\frac{1}{2} a_0 t^2 + v_0 t + p_0 \\\\ \\frac{1}{24} \\alpha t^4 + \\frac{1}{6} \\beta t^3 + \\frac{1}{2} \\gamma t^2 + a_0 T + v_0 \\\\ \\frac{1}{6} \\alpha t^3 + \\frac{1}{2} \\beta t^2 + \\gamma t + a_0 \\\\ \\end{bmatrix} \\tag{14} \\] <p>The optimal \\(S^\\star (t)\\) should meet the end state (6), so:</p> \\[ \\begin{bmatrix} \\frac{1}{120} \\alpha T^5 + \\frac{1}{24} \\beta T^4 + \\frac{1}{6} \\gamma T^3 + \\frac{1}{2} a_0 T^2 + v_0 T + p_0 \\\\ \\frac{1}{24} \\alpha T^4 + \\frac{1}{6} \\beta T^3 + \\frac{1}{2} \\gamma T^2 + a_0 T + v_0 \\\\ \\frac{1}{6} \\alpha T^3 + \\frac{1}{2} \\beta T^2 + \\gamma T + a_0 \\\\ \\end{bmatrix} = \\begin{bmatrix} p_f \\\\ v_f \\\\ a_f \\\\ \\end{bmatrix} \\tag{15} \\] <p>The equation above is actually a combination of three independent equations, we can move some iterms from left of equal sign to right:</p> \\[ \\begin{bmatrix} \\frac{1}{120} \\alpha T^5 + \\frac{1}{24} \\beta T^4 + \\frac{1}{6} \\gamma T^3 \\\\ \\frac{1}{24} \\alpha T^4 + \\frac{1}{6} \\beta T^3 + \\frac{1}{2} \\gamma T^2 \\\\ \\frac{1}{6} \\alpha T^3 + \\frac{1}{2} \\beta T^2 + \\gamma T\\\\ \\end{bmatrix} = \\begin{bmatrix} p_f - \\frac{1}{2} a_0 T^2 - v_0 T - p_0 \\\\ v_f - a_0 T - v_0 \\\\ a_f - a_0 \\\\ \\end{bmatrix} \\] <p>we let:</p> \\[ \\begin{bmatrix} \\Delta p \\\\ \\Delta v \\\\ \\Delta a \\\\ \\end{bmatrix} = \\begin{bmatrix} p_f - \\frac{1}{2} a_0 T^2 - v_0 T - p_0 \\\\ v_f - a_0 T - v_0 \\\\ a_f - a_0 \\\\ \\end{bmatrix} \\] <p>in linear algebra form:</p> \\[ \\begin{bmatrix} \\frac{1}{120} T^5 &amp; \\frac{1}{24} T^4 &amp; \\frac{1}{6} T^3 \\\\ \\frac{1}{24} T^4 &amp; \\frac{1}{6} T^3 &amp; \\frac{1}{2} T^2 \\\\ \\frac{1}{6} T^3 &amp; \\frac{1}{2} T^2 &amp; \\gamma T\\\\ \\end{bmatrix} \\begin{bmatrix} \\alpha \\\\ \\beta \\\\ \\gamma \\\\ \\end{bmatrix} = \\begin{bmatrix} \\Delta p \\\\ \\Delta v \\\\ \\Delta a \\\\ \\end{bmatrix} \\] <p>We can calculate the inverse of first matrix with Gauss-Jordan Elimination:</p> \\[ \\begin{bmatrix} \\alpha \\\\ \\beta \\\\ \\gamma \\\\ \\end{bmatrix} = \\frac{1}{T^5} \\begin{bmatrix} 720 &amp; -360T &amp; 60T^2 \\\\ -360T &amp; 168T^2 &amp; -24T^3 \\\\ 60T^2 &amp; -24T^3 &amp; 3T^4 \\end{bmatrix} \\begin{bmatrix} \\Delta p \\\\ \\Delta v \\\\ \\Delta a \\\\ \\end{bmatrix} \\tag{16} \\] <p>And then take the result to (1), we will get the equation about \\(J\\):</p> \\[ J = \\gamma ^ 2 + \\beta \\gamma T + \\frac{1}{3} \\beta ^ 2 T ^ 2 + \\frac{1}{3} \\alpha \\gamma T^2 + \\frac{1}{4} \\alpha \\beta T ^ 3 + \\frac{1}{20} \\alpha ^ 2 T ^ 4 \\tag{17} \\] <p>\\(J\\) only depends on \\(T\\), and the boundary states are known, so we can get the optimal T.</p> <p>This is a polynomial function root finding problem, we can solve it with:</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#1-quartic-equation-root-finding","title":"1. Quartic Equation Root Finding","text":"<p>There are many methods to find roots of quartic equation, we need to ignore negtive and virtual root. But the root is very complex. Not recommanded.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#2-use-companion-matrix-to-find-determinant","title":"2. Use Companion Matrix to Find Determinant","text":"<p>In linear algebra, the Frobenius companion matrix of the monic polynomial:</p> \\[ p(t) = c_0 + c_1 t + \\cdots + c_{n - 1} t^{n - 1} + t^n \\] <p>is the square matrix defined as</p> \\[ C(p) = \\begin{bmatrix} 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; -c_0 \\\\ 1 &amp; 0 &amp; \\cdots &amp; 0 &amp; -c_1 \\\\ 0 &amp; 1 &amp; \\cdots &amp; 0 &amp; -c_2 \\\\ \\vdots &amp; \\vdots  &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\cdots &amp; 1 &amp; -c_{n-1} \\\\ \\end{bmatrix} \\] <p>We can calculate the determinant of \\(C(p)\\) and take all positive root to equation (17) to get the optimal \\(T\\), this can be done within <code>Eigen</code> library.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#3-eigen-polynomialsolver","title":"3. Eigen PolynomialSolver","text":"<p>This is a solver in <code>Eigen</code>, more in example.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#partial-free-final-state","title":"Partial Free Final State","text":"<p>The previous process is about fixed final state problem, you may notice that the boundary contidtion (10):</p> \\[ \\dot{\\lambda}(t) = - \\nabla H(S^*(t), u^*(t), \\lambda(t)) \\] <p>is not used. That's because that:</p> \\[ h(s(T)) = \\begin{cases} 0, &amp; \\text{if } s = s(T) \\\\ \\infty, &amp; otherwise \\\\ \\end{cases} \\] <p>is not differentialble, so we discard this condition and use given \\(S(T)\\) to directly solve for unknown variables.</p> <p>We will solve this again with fixed final \\(p\\) and free \\(v\\) and \\(a\\).</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#1-modeling","title":"1. Modeling","text":"<p>a. Cost Function:</p> \\[ J_{\\sum} = \\sum_{k=1}^{3}J_{k}, J_{k} = \\frac{1}{T} \\int_0^T j_{k}^2(t) dt \\] <p>b. State:</p> \\[ S_{k} = \\begin{bmatrix} p_{k} \\\\ v_{k} \\\\ a_{k} \\end{bmatrix} \\] <p>c. Input:</p> \\[ u_{k} = j_{k} \\] <p>d. System Model:</p> \\[ \\dot {S_{k}} = f_s(s_k, u_K) = \\begin{bmatrix} v_k \\\\ a_k \\\\ j_k \\end{bmatrix} \\] <p>e. Start and End State:</p> \\[ S(0) = \\begin{bmatrix} p(0) \\\\ v(0) \\\\ a(0) \\end{bmatrix} \\] \\[ S(f) = \\begin{bmatrix} p(f) \\\\ v(f) \\\\ a(f) \\end{bmatrix} \\] <p>The \\(k\\) in equation is the dimension(x, y, z) of state, and we assume that three dimensions are independent, so we throw away the \\(k\\) in the following equations.</p> <p>And we also define that the quadratic must arrive the final position with the state of \\(S(f)\\), which causes some difference with undefined dimensions' case, we'll discuss this condition later.</p> <ul> <li>A Computationally Efficient Motion Primitive for Quadrocopter Trajectory Generation</li> <li>Dynamic Programming and Optimal Control</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#2-solving","title":"2. Solving","text":"<p>By <code>Pontryain's minimum principle</code>, we first inctroduce the <code>costate</code>:</p> \\[ \\lambda = \\begin{bmatrix} \\lambda_1 \\\\ \\lambda_2 \\\\ \\lambda_3 \\end{bmatrix} \\] <p>And define the <code>Hamiltonian function</code>:</p> \\[ \\begin{align} H(s, u, \\lambda) &amp;= \\frac{1}{T} j^2 + \\lambda^T f_s(s, u) \\\\                  &amp;= \\frac{1}{T} j^2 + \\lambda_1v + \\lambda_2a + \\lambda_3j \\\\  \\end{align} \\] <p>The <code>Pontryain's minimum principle</code> says:</p> \\[ \\dot {S}^*(t) = f(S^*(t), u^*(t)) \\] <p>with \\(S^*(0) = S(0)\\), where:</p> <ul> <li><code>*</code>, means optimal.</li> </ul> <p>And \\(\\lambda(t)\\) is the solution of:</p> \\[ \\dot{\\lambda}(t) = - \\nabla H(S^*(t), u^*(t), \\lambda(t)) \\] <p>with the boundary condition of:</p> \\[ \\lambda(T) = - \\nabla h(S^*(T)) \\] <p>and the optimal control input is:</p> \\[ u^*(t) = arg \\min_{u(t)} H(S^*(t), u(t), \\lambda(t)) \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#3-details","title":"3. Details","text":"<p>From equation (8) and (10), calculating the partial derivatives of \\((p, v, a)\\), we get:</p> \\[ \\dot{\\lambda}(t) = \\begin{bmatrix} 0 \\\\ -\\lambda_1 \\\\ -\\lambda_2 \\end{bmatrix} \\] <p>We define \\(\\lambda_1 = -\\frac{1}{T} 2 \\alpha\\), and calculate the integration of \\(\\lambda_2\\) and \\(\\lambda_3\\):</p> \\[ \\lambda (t) = \\frac{1}{T} \\begin{bmatrix} -2 \\alpha \\\\ 2 \\alpha t + 2 \\beta  \\\\ - \\alpha t^2 - 2 \\beta t - 2 \\gamma \\end{bmatrix} \\] <p>Using the boundary condition (10), we know that the \\(v\\) and \\(a\\) are free, so the function \\(h\\) has no relationships with \\(v, a\\) at \\(T\\). Then:</p> \\[ \\lambda_2(T) = 0 \\] \\[ \\lambda_3(T) = 0 \\] <p>With the formula about \\(\\lambda (t)\\), we have:</p> \\[ \\begin{cases} \\beta = - \\alpha T \\\\ \\gamma = \\frac{\\alpha}{2} T^2 \\\\ \\end{cases} \\] <p>So the equation can be simplified to:</p> \\[ \\lambda(t) = \\frac{1}{T} \\begin{bmatrix} -2\\alpha \\\\ -2\\alpha (t - T) \\\\ -\\alpha t^2 + 2 \\alpha T t - \\alpha T^2 \\\\ \\end{bmatrix} \\] <p>The optimal input can be solve:</p> \\[ u^*(t) = - \\frac{\\lambda_3 T} {2} = -\\frac{T}{2} \\frac{1}{T}(-\\alpha t^2 + 2 \\alpha Tt - \\alpha T^2) = \\frac{1}{2}(\\alpha t^2 - 2 \\alpha Tt + \\alpha T^2) \\] <p>Integrating the \\(u^\\star(t) = j\\), we have:</p> \\[ S^\\star (t) = \\begin{bmatrix} \\frac{1}{120} \\alpha t^5 - \\frac{1}{24} \\alpha Tt^4 + \\frac{1}{12} \\alpha T^2t^3 + \\frac{a(0)}{2} t^2 + v(0) t + p(0) \\\\ \\frac{1}{24} \\alpha t^4 - \\frac{1}{6} \\alpha Tt^3 + \\frac{1}{4} \\alpha T^2 t^2 + a(0) t + v(0) \\\\ \\frac{1}{6} \\alpha t^3 - \\frac{1}{2} \\alpha T t^2 + \\frac{1}{2} \\alpha T^2 t + a_0 \\end{bmatrix} \\] <p>We have the final \\(p(f)\\), so:</p> \\[ \\frac{1}{120} \\alpha T^5 - \\frac{1}{24} \\alpha T^5 + \\frac{1}{12} \\alpha T^5 + \\frac{a(0)}{2} T^2 + v(0) T + p(0) = p(f) \\] <p>so:</p> \\[ \\alpha = frac{20 \\Delta p} {T^5} \\] <p>where:</p> \\[ \\Delta p = p(f) - p(0) - v(0)T - \\frac{1}{2} a(0) T^2 \\] <p>Finally, we get:</p> \\[ u^\\star(t) = \\frac{1}{2}(\\alpha t^2 - 2 \\alpha Tt + \\alpha T^2) =  \\] \\[ J = \\frac{1}{T} \\int_0^T (u^\\star(t))^2 dt = \\frac{20 (\\Delta p)^2} {T^6} \\] <p>\\(J\\) is the function about \\(T\\), to minimize \\(J\\), we calculate the result of \\(J' = 0\\):</p> \\[ (p(f) - p(0) - v(0) T - \\frac{1}{2} T^2)(a(0) T^2 + 4 v(0) T - 6p(f) + 6p(0)) = 0 \\] <p>So:</p> \\[ T^\\star = \\frac{-v(0) \\pm \\sqrt{v(0)^2 + 2a(0)(p(f) - p(0))}} {a(0)} \\] <p>or </p> \\[ T^\\star = \\frac{-2v(0) \\pm \\sqrt{4v(0)^2 + 6a(0)(p(f) - p(0))}} {a(0)} \\] <ul> <li>A Computationally Efficient Motion Primitive for Quadrocopter Trajectory Generation</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#wheeled-robots","title":"Wheeled Robots","text":"<ul> <li>Optimal Rough Terrain Trajectory Generation for Wheeled Mobile Robot</li> <li>Maximum Likelihood Path Planning for Fast Aerial Maneuvers and Collision Avoidance</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#heuristic-design","title":"Heuristic Design","text":"<p>We can design the heuristic in practice, the principle is:</p> <p>Solve an easier problem</p> <p>There are mainly two methods:</p> <ul> <li>Assume no obstacle existence</li> <li>Assume no dynamic existence</li> </ul> <p>Ref:</p> <ul> <li>Planning Long Dynamically Feasible Maneuvers for Autonomous Vehicle</li> <li>Path Planning for Autonomous Vehicles in Unknown Semi-structured Environment</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#planning-in-frenet-serret-frame","title":"Planning in Frenet-serret Frame","text":"<p>The frenet-serret frame is widely used in autonomous driving, it's a dynamic reference frame.</p> <p>The lateral and longitudinal motivations of autonomous vehicle are independently, for lane following problem, the lateral and longitudinal motions are decoupled.</p> <p>We firstly define the motion/control parametrization(quintic polynomial):</p> \\[ d(t) = a_{d0} + a_{d1}t + a_{d2} t^2 + a_{d3} t^3 + a_{d4} t^4 + a_{d5} t^5 \\] \\[ s(t) = a_{s0} + a_{s1}t + a_{s2} t^2 + a_{s3} t^3 + a_{s4} t^4 + a_{s5} t^5 \\] <p>and then solve the optimal control problem.</p> <p>We only discuss the lateral planning here, for longitudinal planning, please refer to:</p> <ul> <li>Optimal Trajectory Generation for Dynamic Street Scenarios in a Frenet Frame</li> <li>Optimal trajectoires for time-critical street scenarios using discretized terminal manifolds</li> </ul> <p></p> <p>We have known the initial state:</p> \\[ d(0) = \\begin{bmatrix} d_{0} \\\\ \\dot d_{0} \\\\ \\ddot d_{0} \\end{bmatrix} \\] <p>As we need a lane following, the terminate state will be:</p> \\[ d(T) = \\begin{bmatrix} d_{T} \\\\ \\dot d_{T} \\\\ \\ddot d_{T} \\end{bmatrix} = \\begin{bmatrix} d_{T} \\\\ 0 \\\\ 0 \\end{bmatrix} \\] <p>Use what we have learned from <code>Partial Free Final State</code>, we can get everything.</p> \\[ \\begin{bmatrix} T^3 &amp; T^4 &amp; T^5 \\\\ 3T^2 &amp; 4T^3 &amp; 5T^4 \\\\ 6T &amp; 12T^2 &amp; 20T^3 \\\\ \\end{bmatrix} \\begin{bmatrix} a_{d3} \\\\ a_{d4} \\\\ a_{d5} \\\\ \\end{bmatrix} = \\begin{bmatrix} \\Delta p \\\\ \\Delta v \\\\ \\Delta a \\\\ \\end{bmatrix} \\] <p>where:</p> \\[ \\begin{bmatrix} \\Delta p \\\\ \\Delta v \\\\ \\Delta a \\\\ \\end{bmatrix} = \\begin{bmatrix} d_{f} - (d_{0} + \\dot d_{0} T + \\frac{1}{2} \\ddot d_{0} T^2) \\\\ \\dot d_{f} - (\\dot d_{0} + \\ddot d_{0} T) \\\\ \\ddot d_{f} - \\ddot d_{0} \\end{bmatrix} \\] <p></p> <ul> <li>optimal trajectory in a frenet frame</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#hybrid-a","title":"Hybrid A*","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#basic-idea","title":"Basic Idea","text":"<p>Online generating a dense lattice costs too much time, so how about <code>prune</code> some nodes?</p> <p>Hybird A star use the grid map to prune the branches.</p> <p></p> <p>If there is no node in the grid, we add the node to grid; if there is a node in grid, we check the cost of the node in grid and new node and reserve the lower one.</p> <p>Reference:</p> <ul> <li>Pratical Search Techniques in Path Planning for Autonomous Driving</li> <li>Path Planning for Autonomous Vehicles in Unknown Semi-structured Environments</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#heuristic-design_1","title":"Heuristic Design","text":"<p>To accumulate the search process, we can use following methods to design the heuristic:</p> <ol> <li>2D-Euclidean distance</li> <li>non-holonomic-without-obstacles</li> <li>non-holonomic-without-obstacles, bad performance in dead ends</li> <li>non-holonomic-without-obstacles + holonomic-with-obstacles(2D shortest path)</li> </ol> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#other-tricks","title":"Other Tricks","text":"<p>Control space sample(discretization) is kind of low-efficient, since no target biasing is encoded. So how about we manually add(try) state space sample?</p> <p>Here come's the <code>Analytic Expansions</code>(One shot): add a state-driven bias towards the searching process, if at some state we can get an optimal path to the final state, the search process is terminated. A trade-off is that if we do this <code>one-shot</code> each time visit a node, the cost will be huge. We can do this <code>one-shot</code> each \\(N\\) nodes. And as the frontier of graph goes towards the target node, we can decrease the \\(N\\).</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#application","title":"Application","text":"<ul> <li>Practical Search Techniques in Path Planning for Autonomous Driving</li> <li>Robust and Efficient Quadrotor Trajectory Generation for Fast Autonomous</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#kinodynamic-rrt","title":"Kinodynamic RRT*","text":"<p>Kinodynamic RRT* is similar to \\(RRT\\star\\), but different in details, the main process is:</p> <ul> <li>Input: \\(E\\), \\(x_{init}\\), \\(x_{goal}\\)</li> <li>Output: A trajectory \\(T\\) from \\(x_{init}\\) to \\(x_{goal}\\)</li> <li>T.init()</li> <li>for \\(i = 1 \\to n\\) do:<ul> <li>\\(x_{rand} \\gets Sample(E)\\)</li> <li>\\(x_{near} \\gets Near(x_{rand})\\)</li> <li>\\(x_{min} \\gets ChooseParent(x_{near}, x_{rand})\\)</li> <li>T.addNode(\\(x_{rand}\\))</li> <li>T.rewire()</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#how-to-sample","title":"How to \"Sample\"?","text":"<p>System state-space equation:</p> \\[ \\dot{x(t)} = A x(t) + B u(t) + c \\] <p>For example for double integrator systems:</p> \\[ x = \\begin{bmatrix} p \\\\ v \\end{bmatrix}, A = \\begin{bmatrix} 0 &amp; I \\\\ 0 &amp; 0 \\end{bmatrix}, B = \\begin{bmatrix} 0 \\\\ I \\end{bmatrix} \\] <p>Instead of sampling in Euclidean space like RRT, it requires to <code>sample in full state space</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#how-to-define-near","title":"How to define \"Near\"?","text":"<p>If without motion constraints, Euclidean distance or Manhattan distance can be used.</p> <p>In state space with motion constriants, binging in <code>optimal control</code>.</p> <p>We can define <code>cost funtion</code> of transferring from states to states, typically, a quadratic form of time energy optimal is adopted.</p> \\[ c[\\tau] = \\int^{\\tau}_{0} (1 + u(t)^T R u(t)) dt \\] <p>where:</p> <ul> <li>\\(\\tau\\) is the arriving time</li> <li>\\(u(t)\\) is the control policy of transferring</li> <li>\\(R\\) is the weight matrix</li> </ul> <p>Two states are <code>near</code> if the cost of transferring from one state to the other is small.(Note that the cost may be different if transfer reversely.)</p> <p>If we know \\(\\tau\\) and \\(u(t)\\), we can calculate the cost, it'll in classic optimal control solutions(OBVP).</p> <p>Reference: - Optimal Control</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#fixed-final-state-x1-fixed-final-time-tau","title":"Fixed final state x1, fixed final time \\(\\tau\\)","text":"<p>The optimal control policy \\(u^{\\star}(t)\\):</p> \\[ u^{\\star}(t) = R^{-1} B^T e^{A^T(\\tau - t)}G(\\tau)^{-1}[x_1 - \\bar{x}(\\tau)] \\] <p>Where \\(G(t)\\) is the weighted controllability Gramian:</p> \\[ G(t) = \\int^{t}_0 e^{A(t - t')} BR^{-1} e^{A^T(t - t')} dt' \\] <p>Which is the solution to the Lyapunov equation:</p> \\[ \\dot{G}(t) = AG(t) + G(t)A^T + BR^{-1} B^T, G(0) = 0 \\] <p>And \\(\\bar{x}(t)\\) describe what the state x would be at time t if no control input were applied:</p> \\[ \\bar{x}(t) = e^{At} x_0 + \\int^t_0 e^{A(t - t')} c dt' \\] <p>Which is the solution to the differential equation:</p> \\[ \\dot{\\bar{x}}(t) = A\\bar{x}(t) + c, \\bar{x}(0) = x_0 \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#fixed-final-state-x1-free-final-time-tau","title":"Fixed final state x1, free final time \\(\\tau\\)","text":"<p>If we want to find the optimal arrival time \\(\\tau\\), we do this by filling in the control policy \\(u^\\star(t)\\) into the cost function \\(c[\\tau]\\) and evaluating the integral:</p> \\[ c[\\tau] = \\tau + [x_{1} - \\bar{x}(\\tau)]^T G(t)^{-1} [x_{1} - \\bar{x}(\\tau)] \\] <p>The optimal \\(\\tau\\) is found by taking the derivative of \\(\\c[\\tau]\\) with respect to \\(\\tau\\):</p> \\[ \\dot{c}[\\tau] = 1 - 2(Ax_1 + c)^T d(\\tau) - d(\\tau)^T B R^{-1} B^T d(\\tau) \\] <p>where:</p> \\[ d(\\tau) = G(t)^{-1} [x_1 - \\bar{x}(\\tau)] \\] <p>Solve \\(\\dot c [\\tau] = 0\\) for \\(\\tau^\\star\\).</p> <p>Noted that the function \\(c[\\tau]\\) may have multiple local minima. And for a double integrator system, it's a \\(4^{th}\\) order polynomail.</p> <p>Given the optimal arrival time \\(\\tau^\\star\\) as defined above, it again turns into a fixed final state, fixed final time problem.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#how-to-chooseparent","title":"How to <code>ChooseParent</code>?","text":"<p>Now if we sample a random state, we can calculate control policy and cost from those state-nodes in the tree to the sampled state.</p> <p>Choose one with the minimal cost and <code>check x(t) and u(t) are in bounds</code>. If no qualified parent found, sample another state.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#how-to-find-near-nodes-efficiently","title":"How to find near nodes efficiently","text":"<p>Every time we sample a random state \\(x_{rand}\\), it requires to check every node in the tree to find its parent, that is solving a <code>OBVP</code> for each node, which is not efficient.</p> <p>If we set a <code>cost tolerance</code> \\(r\\), we can actually calculate bounds of the states(forward-reachable set) that can be reached by \\(x_{rand}\\) and bounds of the states (backward-reachable set) that can reach \\(x_{rand}\\) with cost less than \\(r\\).</p> <p>And if we store nodes in from of a <code>kd-tree</code>, we can then do range query in the tree.</p> \\[ c[\\tau] = \\tau + [x_{1} - \\bar{x}(\\tau)]^T G(t)^{-1} [x_{1} - \\bar{x}(\\tau)] \\] <p>This formula describes how cost of transferring from state \\(x_0\\) to state \\(x_1\\) changes with arrval time \\(\\tau\\).</p> <p>We can see that given inital state \\(x_0\\), cost tolerance \\(r\\) and arrival time \\(\\tau\\), the forward-reachable set of \\(x_0\\) is:</p> \\[ \\begin{align}  &amp;\\{x_1 | \\tau + [x_1 - \\bar{x}(\\tau)]^T g(t)^{-1} [x_1 - \\bar{x}(\\tau)] &lt; r\\} \\\\ =&amp;\\{x_1 | [x_1 - \\bar{x}(\\tau)^T \\frac{G(t)^{-1}}{r - \\tau} [x_1 - \\bar{x}(\\tau)] &lt; 1\\} \\\\ =&amp; \\varepsilon [\\bar{x}(\\tau), G(t) (r - \\tau)] \\end{align} \\] <p>where \\(\\varepsilon[x, M]\\) is an <code>ellipsoid</code> with center \\(x\\) and positive definite weight matrix \\(M\\), formally defined as:</p> \\[ \\varepsilon[x, M] = \\{x' | (x' - x)^T M^{-1} (x' - x) &lt; 1\\} \\] <p>Hence, the forward-reachable set is the union of high dimensional ellipsoids for all possible arrival times \\(\\tau\\).</p> <p>For simplification, we sample several \\(\\tau\\)s and calculate axis-aligned bounding boxe of the ellipsoids for each \\(\\tau\\) and update the maximum and minimum in each dimension:</p> \\[ \\Pi^n_{k = 1} \\begin{bmatrix} min\\{0 &lt; \\tau &lt; r\\}(\\bar{x}(\\tau)_k - \\sqrt{G[\\tau]_{(k, k)}(r - \\tau)}), \\\\ max\\{0 &lt; \\tau &lt; r\\}(\\bar{x}(\\tau)_k - \\sqrt{G[\\tau]_{(k, k)}(r - \\tau)}) \\\\ \\end{bmatrix} \\] <p>Simmilar for the calculation of the backward-reachable set.</p> <p>When do <code>Near</code> query and <code>ChooseParent</code>, \\(x_{near}\\) can be found from the <code>backward-reachable set</code> of \\(x_{rand}\\)</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/03_kinodynamic/#how-to-rewire","title":"How to <code>Rewire</code>?","text":"<p>When <code>Rewire</code>, we calculate the <code>forward-reachable set</code> of \\(x_{rand}\\), and solve <code>OBVP</code>s.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/","title":"Minimum Snap Trajectory Generation","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#introduction","title":"Introduction","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#why-smooth-trajectory","title":"Why Smooth Trajectory?","text":"<ul> <li>Good for autonomous moving</li> <li>Velocity/higher-order dynamics can't change immediately</li> <li>The robot should not stop at turns</li> <li>Save energy</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#smooth-trajectory-generation","title":"Smooth Trajectory Generation","text":"<p>There are ways to generate smooth trajectory:</p> <ul> <li>Boundary condition: start, goal positions(orientations)</li> <li>Intermediate condition: waypoint positions(orientations) <ul> <li>Waypoints can be found by path planning (A star, RRT star, etc.)</li> </ul> </li> <li>Smoothness criteria<ul> <li>Generally translates into minimizing rate of change of \"input\"</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#minimum-snap-optimization","title":"Minimum Snap Optimization","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#differential-flatness","title":"Differential Flatness","text":"<p>The states and the inputs of a quadrotor can be written as algebraic functions of four carefully selected flat outputs and their derivatives.</p> <ul> <li>Enables automated generation of trajectories</li> <li>Any smooth trajectory in the space of flat outputs (with reasonably bounded derivatives) can be followed by the under-actuated quadrotor.</li> <li>A possible choice: \\(\\sigma = [x, y, z, \\psi]^T\\)</li> <li>Trajectory in the space of flat outputs: \\(\\sigma(t) = [T_0, T_M] \\to \\mathbb{R}^3 \\times SO(2)\\)</li> </ul> <p>Reference:</p> <ul> <li>Minimum Snap Trajectory Generation and Control for Quadrotors, Daniel Mellinger and Vijay Kumar</li> </ul> <p>Polynomial functions can be used to specify trajectories in the space of flat outputs:</p> <ul> <li>Easy determination of smoothness criterion with polynomial orders.</li> <li>Easy and closed form calculation of derivatives.</li> <li>Decoupled trajectory generation in three dimensions.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#mimimum-snap","title":"Mimimum Snap","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#smooth-1d-trajectory","title":"Smooth 1D Trajectory","text":"<p>It's just a simple BVP(Boundary Value Problem).</p> <p></p> <p>We design a trajectory \\(x(t)\\) follows boundary condition:</p> \\[ \\begin{align} x(0) = a \\\\ x(T) = b \\end{align} \\] <p>As we have known, smoothness means continuous and differential, and polynomial is \\(n\\) order differential and \\(n + 1\\) order continuous. So the smoothness is ensured by parametrization, we use a \\(5^{th}\\) order polynomial trajectory, this is the smoothness criteria:</p> \\[ x(t) = p_5t^5 + p_4t^4 + p_3t^3 + p_2t^2 + p_1t + p_0 \\] <p>The boundary condition is:</p> Position Velocity Acceleration t = 0 a 0 0 t = T b 0 0 <p>It can be solved with:</p> \\[ \\begin{bmatrix} a \\\\ b \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ \\end{bmatrix} = \\begin{bmatrix} 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ T^5 &amp; T^4 &amp; T^3 &amp; T^2 &amp; T &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 5T^4 &amp; 4T^3 &amp; 3T^2 &amp; 2T &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 2 &amp; 0 &amp; 0 \\\\ 20T^3 &amp; 12T^2 &amp; 6T &amp; 2 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} \\begin{bmatrix} p_5 \\\\ p_4 \\\\ p_3 \\\\ p_2 \\\\ p_1 \\\\ p_0 \\\\ \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#smooth-multi-segment-trajectory","title":"Smooth Multi-Segment Trajectory","text":"<p>If intermediate conditions are given, we get a multi-segment problem. We prefer constant velocity motion at \\(v\\), and zero acceleration.</p> <p></p> <p>The boundary conditions become:</p> Position Velocity Acceleration t = 0 a \\(v_0\\) 0 t = T b \\(v_T\\) 0 <p>The solution is:</p> \\[ \\begin{bmatrix} a \\\\ b \\\\ v_0 \\\\ v_T \\\\ 0 \\\\ 0 \\\\ \\end{bmatrix} = \\begin{bmatrix} 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ T^5 &amp; T^4 &amp; T^3 &amp; T^2 &amp; T &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 5T^4 &amp; 4T^3 &amp; 3T^2 &amp; 2T &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 2 &amp; 0 &amp; 0 \\\\ 20T^3 &amp; 12T^2 &amp; 6T &amp; 2 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} \\begin{bmatrix} p_5 \\\\ p_4 \\\\ p_3 \\\\ p_2 \\\\ p_1 \\\\ p_0 \\\\ \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#optimization-based-trajectory-generation","title":"Optimization-based Trajectory Generation","text":"<p>If we know the \\(v\\) and \\(a\\), we can use multi-segment trajectory generation method to solve the problem. But the critical point is, we have no idea what is the best value for these variables. That's where we use optimization-base method.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#smooth-3d-trajectory","title":"Smooth 3D Trajectory","text":"<p>Let's take an example of quadrotor trajectory generation. The problem can be described as:</p> <ul> <li>Boundary condition: start, goal positions(orientations)</li> <li>Intermediate condition: waypoint positions(orientations)<ul> <li>Waypoints can be found by path planning(A star, RRT star, etc)</li> <li>Introduced in previous lectures</li> </ul> </li> <li>Smoothness criterion<ul> <li>Generally translates into minimizing rate of change of \"input\"</li> </ul> </li> </ul> <p>But what derivatives should we minimize?</p> <p>As inferenced before, we have following relationships between derivatives and state of quadrotor:</p> Derivative Translation Rotation Thrust 0 Position 1 Velocity 2 Acceleration Rotation 3 Jerk Angular Velocity Thrust 4 Snap Angular Acceleration Differential Thrust <p>We got following conclutions:</p> <ul> <li>Minimum jerk: minimizing angular velocity, which is good for visual tracking;</li> <li>Minimum snap: minimizing differential thrust, which saves energy.</li> </ul> <p>So in math language, the problem is:</p> \\[ f(t) =  \\begin{cases} f_1(t) \\doteq \\sum^N_{i = 0} p_{1, i}t^i, &amp;T_0 &lt;= t &lt;= T_1 \\\\ f_2(t) \\doteq \\sum^N_{i = 0} p_{2, i}t^i, &amp;T_0 &lt;= t &lt;= T_2 \\\\ \\vdots f_M(t) \\doteq \\sum^N_{i = 0} p_{M, i}t^i, &amp;T_{M - 1} &lt;= t &lt;= T_{M} \\\\ \\end{cases} \\] <p>Attention:</p> <ul> <li>Each segment is a polynomial</li> <li>No need to fix the order, but keeping the same order makes this problem simpler</li> <li><code>Time durations</code> for each segment must be known</li> </ul> <p>The constraints:</p> <p></p> <p>Smoothness means its derivative is continuous!</p> <p>How to determine the trajectory order? Following iterms are what we should think about:</p> <ul> <li>which order to ensure the smoothness?</li> <li>which order to ensure the continuity?</li> <li>which order to minimize control input?</li> </ul> <p>and these three items are <code>not</code> coupled, we can set them seperately.</p> <p>A general method to define the order of <code>1D trajectory</code> is:</p> \\[ N = 2 * d - 1 \\] <p>where \\(N\\) is the minimum degree of polynomial, \\(d\\) is the order of difference. For example:</p> <ul> <li>Minimum jerk: \\(N = 2 * 3(jerk) - 1 = 5\\)</li> <li>MInimum snap: \\(N = 2 * 4(snap) - 1 = 7\\)</li> </ul> <p>How this works? If we want to solve the minimum jerk problem, the number of equations is \\(2 * 3\\), because we have start and end point, and each has \\(3\\) equations(v, a, j), and the 5 order polynomial has \\(5 + 1\\) unknowns.</p> <p>And for k-segment trajectory, the constraints number of jerk will be \\(3 + 3 + (k - 1) = k + 5\\), and the number of unknowns is \\((N + 1) * k\\), so the relationship between degree of polynomial and k is:</p> \\[ (N + 1) * k = k + 5 \\] \\[ N = \\frac{5}{k} \\] <p>The more segments we divide, the less degrees of polynomial we need. But \\(k\\) may be \\(1\\), so \\(5\\) is a good choice.</p> <p>As for the timeline of problem, we can use</p> <ul> <li>many relative timeline, which is good for </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#convex-optimization","title":"Convex Optimization","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#closed-form-solution-to-minimum-snap","title":"Closed-form Solution to Minimum Snap","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/04_trajectory/#implementation-details","title":"Implementation Details","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/","title":"Model Prediction Control (MPC)","text":"<p>As for the control problem, the simplest is <code>Reactive Control</code>. </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#reactive-control","title":"Reactive Control","text":"<p>The advantages of reactive control are:</p> <ul> <li>Easy to design</li> <li>Consider errors</li> </ul> <p>But there are also limitations:</p> <ul> <li>Non-trivial for more <code>complex systems</code></li> <li>Control gains must be <code>tuned manually</code></li> <li>No handling of <code>coupled dynamics</code>  and <code>constraints</code></li> <li>Ignores <code>future dicision</code></li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#optimal-control","title":"Optimal Control","text":"<p><code>Optimal Control</code> solves the problem that how to <code>best</code> control the system. In order to answer the question how the input influences the future state, we should build the system model firstly.</p> <p><code>Model</code> of the system can be continuous:</p> \\[ \\dot {\\mathbf{x}} = f_c(\\mathbf{x}, \\mathbf{u}) \\] <p>or discrete:</p> \\[ \\mathbf{x}_{k + 1} = f_d(\\mathbf{x}_k, \\mathbf{u}_k) \\] <p>where:</p> <ul> <li>\\(\\mathbf{x}_0\\) is the initial condition</li> <li>\\(\\mathbf{x}_k\\) is state</li> <li>\\(\\mathbf{u}_k\\) is input</li> </ul> <p>After the system model, another neccesary thing we define is the <code>Objective Function</code>, which describes the expectation of future trajectory.</p> \\[ \\min_{u_0 : N-1} \\sum_{k = 0}^{N-1} q(x_k, u_k) + p(x_N) \\] <p>where:</p> <ul> <li>\\(q(x_k, u_k)\\) describes the <code>stage cost</code></li> <li>\\(p(x_N)\\) describes the <code>terminal cost</code></li> </ul> <p>we can define the \\(q(x_k, u_k) = ||e_k||^2 + \\rho \\Delta u_k^2\\) , where \\(e_k = x_k - x_k^{ref}\\) is the tracking error, \\(\\rho \\Delta u_k^2\\) is the smoothing cost.</p> <p>Except for the objective function, <code>constraints</code> should also be considered:</p> \\[ \\begin{align} x_{k + 1} &amp;= f_d(x_k, u_k) \\\\ h(x_k, u_k) &amp;= 0 \\\\ g(x_k, u_k) &amp;\\le 0 \\\\ \\end{align} \\] <p>where \\(h(x_k, u_k)\\) is the euqality constraints, \\(g(x_k, u_k)\\) is the inequality constrains.</p> <p>So in general, the procedure of the optimal control is:</p> <ul> <li>Build <code>Objective Function</code>:</li> </ul> \\[ \\min_{u_0 : N-1} \\sum_{k = 0}^{N-1} q(x_k, u_k) + p(x_N) \\] <ul> <li>Add <code>Constraints</code>:</li> </ul> \\[ \\begin{align} x_{k + 1} &amp;= f_d(x_k, u_k) \\\\ h(x_k, u_k) &amp;= 0 \\\\ g(x_k, u_k) &amp;\\le 0 \\\\ \\end{align} \\] <ul> <li>Solve <code>Optimal vector</code>:</li> </ul> \\[ z^\\star = (u_0^T, \\cdots, u_{N - 1}^T) \\] <p>The optimal vector is ideal, of course. In reality, the difficulties of (Open Loop) optimal control are:</p> <ul> <li>The <code>dynamic model</code> is usually <code>inaccurate</code>, model errors accumulate over time.</li> <li>The optimizer \\(z^\\star\\) we get can not be accurately applied.</li> <li>Long task-horizons make the problem <code>intractable</code>.</li> <li>The system may be affected by <code>external disturbances</code>.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#model-predictive-control-mpc","title":"Model Predictive Control (MPC)","text":"<p>MPC combines <code>Reactive Control</code> and <code>Optimal Control</code>, it uses a dynamic <code>model</code> of the process to <code>predict</code> its future evolution(finite time horizon) and choose the best <code>control</code> action.</p> <pre><code>  +------------------+ update states\n  | prediction model &lt;---------+\n  +--------+---------+         |\n           |                   |\n           |                   |\n+----------v------------+      |\n| model|based optimizer |      | measurements\n+----------+------------+      |\n           | control inputs    |\n           |                   |\n     +-----v------+            |\n     | real model +------------+\n     +------------+\n</code></pre> <p>The process is:</p> <ul> <li><code>Feedback</code> of the measurement information, which starts from the estimated <code>current state</code></li> <li><code>Optimize</code> the best control sequence, which finds controls for <code>limited preview</code> into the future</li> <li><code>Receding horizon</code> framework, which applies only the first input, then <code>replan</code></li> </ul> <p>The advantages of MPC are:</p> <ul> <li>Considers future (although a limited future)</li> <li>Accounts for errors</li> <li>Reduces problem size (solver is usually warm-started with the previous solution)</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#design-of-mpc","title":"Design of MPC","text":"<ul> <li><code>Prediction model</code>, trade-off in choice of model family:<ul> <li>Simplicity model, lower computation</li> <li>Accuracy model, higher computation</li> </ul> </li> <li><code>Cost function</code>, vary in different requirements</li> <li><code>Prediction horizon</code>, trade-off of<ul> <li>computation overload</li> <li>recursive feasibility</li> </ul> </li> <li><code>Terminal constraints</code></li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#linear-mpc","title":"Linear MPC","text":"<p>Linear MPC has following <code>linear prediction model</code>:</p> \\[ \\begin{cases} x_{k + 1} &amp;= A x_k + B u_k \\\\ y_k &amp;= C x_k \\end{cases} \\] <p>And each state at time \\(k\\) has the relation with inputs:</p> \\[ x_k = A^k x_0 + \\sum_{j = 0}^{k - 1} A^j B u_{k - 1 - j} \\] <p>Rewrite the equation above as matrix:</p> \\[ \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots x_{N - 1} \\\\ x_{N} \\end{bmatrix} = \\begin{bmatrix} B &amp; 0 &amp; \\cdots &amp; 0 \\\\ AB &amp; B &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ A^{N - 1}B &amp; A^{N - 2}B &amp; \\cdots &amp; B \\end{bmatrix} \\begin{bmatrix} u_0 \\\\ u_1 \\\\ \\vdots \\\\ u_{N - 1} \\end{bmatrix} + \\begin{bmatrix} A \\\\ A^2 \\\\ \\vdots \\\\ A^N \\end{bmatrix} x_0 \\] <p>The cost function of linear MPC is quadratic:</p> \\[ J = x_N^T P x_N + \\sum_{k = 0}^{N - 1} (x_k^T Q x_k + u_k^T R u_k) \\] <p>where \\(P\\), \\(Q\\) and \\(R\\) are <code>positive semi-definite</code>.</p> <p>The goal is to find the best control sequence \\(u_{0:N-1}^\\star\\) that minimizes:</p> \\[ J = x_0^T Q x_0 + \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_{N - 1} \\\\ x_{N} \\end{bmatrix}^T \\begin{bmatrix} Q &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; Q &amp; 0 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 &amp; Q &amp; 0 \\\\ 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; P \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_{N - 1} \\\\ x_{N} \\end{bmatrix} + \\begin{bmatrix} u_0 \\\\ u_1 \\\\ \\vdots \\\\ u_{N - 1} \\end{bmatrix}^T \\begin{bmatrix} R &amp;  0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; R &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 &amp; R \\\\ \\end{bmatrix} \\begin{bmatrix} u_0 \\\\ u_1 \\\\ \\vdots \\\\ u_{N - 1} \\end{bmatrix} \\] <p>We define:</p> <ul> <li>\\(\\bar{S} =  \\begin{bmatrix} B &amp; 0 &amp; \\cdots &amp; 0 \\\\ AB &amp; B &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ A^{N - 1}B &amp; A^{N - 2}B &amp; \\cdots &amp; B \\end{bmatrix}\\) </li> <li>\\(z = \\begin{bmatrix} u_0 \\\\ u_1 \\\\ \\vdots \\\\ u_{N - 1} \\end{bmatrix}\\) </li> <li>\\(\\bar{T} = \\begin{bmatrix} A \\\\ A^2 \\\\ \\vdots \\\\ A^N \\end{bmatrix}\\)</li> <li>\\(\\bar{Q} = \\begin{bmatrix} Q &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; Q &amp; 0 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 &amp; Q &amp; 0 \\\\ 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; P \\end{bmatrix}\\)</li> <li>\\(\\bar{R} = \\begin{bmatrix} R &amp;  0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; R &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 &amp; R \\\\ \\end{bmatrix}\\)</li> </ul> <p>Then:</p> \\[ \\begin{align} J(z, x_0) &amp;= (\\bar{S}z + \\bar{T}x_0)^T\\bar{Q}(\\bar{S}z + \\bar{T}x_0) + z^T \\bar{R} z + x_0^T Q x_0 \\\\ &amp;= \\frac{1}{2} z^T 2 (\\bar{R} + \\bar{S}^T \\bar{Q} \\bar{S}) z + x_0^T 2 \\bar{T}^T\\bar{Q}\\bar{S}z + \\frac{1}{2} x_0^T 2 (Q + \\bar{T}^T \\bar{Q} \\bar{T})x_0 \\end{align} \\] <p>Then define:</p> <ul> <li>\\(H = 2 (\\bar{R} + \\bar{S}^T \\bar{Q} \\bar{S})\\)</li> <li>\\(F = 2 \\bar{T}^T\\bar{Q}\\bar{S}\\)</li> <li>\\(Y = 2 (Q + \\bar{T}^T \\bar{Q} \\bar{T})\\)</li> </ul> <p>So we got the <code>Condensed form</code> of MPC:</p> \\[ J(z, x_0) = \\frac{1}{2} z^T H z + x_0^T F z + \\frac{1}{2} x_0^T Y x_0 \\] <p>where, \\(z = \\begin{bmatrix} u_0 \\\\ u_1 \\\\ \\vdots u_{N - 1} \\end{bmatrix}\\)</p> <p>The optimum is obtained by zeroing the gradient:</p> \\[ \\Delta_z J(z, x_0) = Hz + F^Tx_0 \\] <p>So we got the optimal batch solution \\(z\\):</p> \\[ z^\\star = - H^{-1} F^T x_{0} \\] <p>Unconstrained linear MPC is a linear state-feedback</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#linear-quadratic-regulatorlqr","title":"Linear Quadratic Regulator(LQR)","text":"<p>Linear Quadratic Regulator(LQR) uses <code>dynamic programming</code> to solve the problem. It exploiting the sequential structure of the problem.</p> <p>According to <code>Bellman's principle of optimality</code>:</p> <p>An optimal policy has the property that, regardless of the decisions taken to enter a particular state, the remaining decisions made for leaving that stage must constitute an optimal policy.</p> <p>We can solve the problem from back to front.</p> <p></p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#other-mpc","title":"Other MPC","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#explicit-mpc","title":"Explicit MPC","text":"<p>Explicit MPC implement constrained linear MPC <code>without an online QP solver</code></p> <p>For an <code>online</code> optimization, with given \\(x(t)\\), we solve the problem at each time step \\(t\\), which is  a <code>Quadratic Programming(QP)</code>.</p> <p>For an <code>offline</code> optimization, we solve the QP in advance for all \\(x(t)\\) in a given range to find the control law \\(u = u_0^\\star (x)\\) explicity, which is a <code>Multi-parametric Quadratic Programming(mpQP)</code></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#linear-time-varying-mpc-and-nonlinear-mpc","title":"Linear Time-Varying MPC and Nonlinear MPC","text":"<p><code>Time-Varying</code> means in linear model:</p> \\[ x_{k + 1} = A x_k + B u_k = A_k x_k + B_k u_k \\] <p>the matrix \\(A\\) and \\(B\\) are varying by time.</p> <p>A nonlinear MPC has nonlinear model:</p> \\[ \\dot x = f(x, u) \\] <p>A <code>Linear Time-Varying</code> model can be obtained by linearing a nonlinear model.</p> <p>Convert linear model to <code>discrete-time</code> using forward Euler method:</p> \\[ \\begin{align} \\dot x &amp;= A_c x + B_c u + g_c \\\\ \\frac{x_{k + 1} - x_k}{T_s} &amp;= A_c x_k + B_c u_k + g_c \\\\ x_{k + 1} &amp;= (I + T_s A_c) x_k + T_s B_c u_k + T_s g_c \\\\ x_{k + 1} &amp;= A_kx_k + B_ku_k + g_k \\end{align} \\] <p>Then we can solve a linear MPC online.</p> <p><code>Augmented model</code> is often used in practice, which use the state matrix and control matrix as state, difference of control as new input vector. It's good to add cost on difference of input.</p> \\[ \\begin{bmatrix} x \\\\ u \\end{bmatrix}_{k + 1} =  \\begin{bmatrix} A &amp; B \\\\ 0 &amp; I \\end{bmatrix}\\begin{bmatrix} x \\\\ u \\end{bmatrix}_{k} + \\begin{bmatrix} B \\\\ I \\end{bmatrix} \\Delta u_k \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#tube-mpc","title":"Tube MPC","text":"<p>The advantages of nonlinear MPC:</p> <ul> <li>Sometimes it's hard to carry out <code>system identification</code>, especially for nonlinear systems;</li> <li>Recursive feasibility and stability cannot be guaranteed for complex systems.</li> </ul> <p>Here comes the <code>Tube MPC</code>, which use an independent <code>noninal model</code> of the system, and use a feedback controller to ensure the actual state converges to the nomial state.</p> <p>An ancillary feedback controller is designed to keep the actual state within an invariant <code>tube</code> around a nomial trajectory computed neglecting <code>disturbances</code>.</p> <p></p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#hybrid-mpc","title":"Hybrid MPC","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/05_mpc/#model-predictive-contouring-controlmpcc","title":"Model Predictive Contouring Control(MPCC)","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/ref_line/","title":"Reference Line","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/ref_line/#femfinite-element-methodpos-smooth","title":"Fem(Finite Element Method)pos Smooth","text":"<p>The optimization variables are points(x, y) position. The object function can be wrriten as:</p> \\[ Cost_{all} = Cost_{smooth} + Cost_{length} + Cost_{deviation} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/ref_line/#smooth-cost","title":"Smooth Cost","text":"<p>As we can see, </p> \\[ \\vec{v_2} = \\vec{v_0} + \\vec{v_1} \\] <p>and the shorter \\(|\\vec{v_2}|\\) is, the smoother \\(p_0 \\to p_1 \\to p_2\\)  become. In vector format:</p> <p>$$ \\begin{align} \\vec{v_0} &amp;= P_0 - P_1 \\ \\vec{v_1} &amp;= P_2 - P_1 \\ \\vec{v_2} &amp;= \\vec{v_0} + \\vec{v_1} \\end{align} $$ So,</p> \\[ Cost_{smooth} = \\sum_{k = 1}^{n - 2} ||2 P_k - P_{k - 1} + P_{k + 1}||^2_2 \\] <p>This cost can also be descriped as: </p> <p>As \\(\\theta\\) decreases, \\(cos \\theta\\) decreases too. So,</p> \\[ Cost_{smooth} = \\sum_{k = 1}^{n - 2} \\frac{\\vec{v_0} \\cdot \\vec{v_1}}{|\\vec{v_0}| \\cdot |\\vec{v_1}|} \\] <p>As we can see, if we use \\(\\theta\\) for smooth, the cost will not be a <code>qp problem</code>, we should solve it with a nonlinear solver.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/ref_line/#length-cost","title":"Length Cost","text":"\\[ Cost_{length} = \\sum_{k = 0}^{n - 2} ||P_{k + 1} - P_{k}||^2_2 \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/ref_line/#deviation-cost","title":"Deviation Cost","text":"\\[ Cost_{deviation} = \\sum_{k = 0}^{n - 1} ||P_k - P_{k_{ref}}||_2^2 \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Planning/ref_line/#curve-rate-constraints","title":"Curve Rate Constraints","text":"<p>Assumption:</p> <ul> <li>\\(|P_0 P_1| \\approx |P_1 P_2|\\), each piece of segment has almost the same length;</li> <li>\\(\\theta\\) is small, so \\(sin\\theta \\approx cos \\theta\\);</li> <li>\\(ds \\approx arc P_1 \\to P_2\\) , distance between two points is approximately equal to the arc of them.</li> </ul> <p>As we can see in above figure, \\(|P_0P_1| = |P_1 P_2|\\), \\(|P_0 A| = |P_0P_1|\\) :</p> \\[ \\frac{L}{ds} =\\frac{ds}{R} \\] \\[ L = |\\vec{P_0P_1} + \\vec{P_1P_2}| = \\frac{|\\vec{P_1P_2}|^2} {R} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/","title":"Introduce to Apollo(3.5) Prediction Module","text":"<p>The prediction module studies and predicts the behavior of all the obstacles detected by the perception module. Prediction receives data of obstacles along with basic perception information including positions, headings, velocities, accelerations and then generates predicted trajectories with probabilities for those obstacles.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#input","title":"Input","text":"<ul> <li>Obstacles information from the perception module;</li> <li>Localization information from the localization module;</li> <li>Planning trajectory of ego vehicle of the previous computing cycle from the planning module.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#output","title":"Output","text":"<ul> <li>Obstacles annotated with predicted trajectories and their priorities.</li> </ul> <p>Obstacle priority is now calculated as individual scenarios are prioritized differently. The priorities include:</p> <ul> <li>ignore;</li> <li>caution;</li> <li>normal(default).</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#functionalities","title":"Functionalities","text":"<p>The prediction module comprises of 4 main functionalities: </p> <ul> <li>Container</li> <li>Scenario</li> <li>Evaluator</li> <li>Predictor</li> </ul> <p>shown as below: <pre><code>Localization +-------------+          +-------------+           +-------------+          +-------------+\npose         |             |          |             |           |             |          |             |\n+------------&gt;             |          |             |           |             |          |             |\nPlanning     |             |structured|             | Scenario  |             |Lane      |             |Predicted\ntrajectory   |             |obstacle  |             | type      |             |probability             |trajectory\n+------------&gt;  CONTAINER  +----------&gt;  SCENARIO   +-----------&gt;  EVALUATOR  +----------&gt;  PREDICTOR  +----------&gt;\nPerception   |             |          |             |           |             |          |             |\nobstacles    |             |          |             |           |             |          |             |\n+------------&gt;             |          |             |           |             |          |             |\n             |             |          |             |           |             |          |             |\n             +-------------+          +-------------+           +-------------+          +-------------+\n</code></pre></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#container","title":"Container","text":"<p>Container stores structured data from subscribed channels. Current supported inputs:</p> <ul> <li>perception obstacles</li> <li>ego vehicle localization</li> <li>ego vehicle planning trajectory</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#architecture","title":"Architecture","text":"<p>The architecture of the container is as below. The class <code>Container</code> defines the interface of all containers and it can't be realized because it has a pure virtual function <code>Insert</code>. <code>PoseContainer</code>, <code>ADCTrajectoryContainer</code> and  <code>ObstacleContainer</code> are derived from <code>Container</code> and realize the <code>Insert</code> function. The <code>ContainerManager</code> class has many containers. It generates all three types of contianer and stores them in an unordered map to speed up the search process. I just list some important methods of the class here, for more functions and their description, you can read the documents generated from <code>doxygen</code>. </p> <p>Current container contains:</p> <ul> <li>PoseContainer</li> <li>ADCTrajectoryContainer</li> <li>ObstacleContainer</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#posecontainer","title":"PoseContainer","text":"<p><code>PoseContainer</code> receives localization message:</p> <ul> <li>position(3d);</li> <li>theta(orientation);</li> <li>velocity(3d);</li> </ul> <p>and inserts ego vehicle as an obstacle into <code>ObstacleContainer</code> with id <code>-1</code> and type <code>VEHICLE</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#trajectorycontainer","title":"TrajectoryContainer","text":"<p><code>TrajectoryContainer</code> receives trajectory message from planning and sets the information of current lane:</p> <ul> <li>junction id;</li> <li>the distance to junction;</li> <li>lane sequence;</li> <li>overlaps of the lane.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#obstaclecontainer","title":"ObstacleContainer","text":"<p><code>ObstacleContainer</code> structures and stores all obstacles from perception, it has a <code>LRU(Latest Recently Used)Cache</code> class to manage the latest recently used 10 items. The <code>value</code> of LRUCache is the obstacle and the <code>key</code>  is the id of the obstacle. The functionality of <code>ObstacleContainer</code> depends on the class <code>ObstacleCluster</code>, because method <code>SortObstacle</code> is used.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#obstaclecluster","title":"ObstacleCluster","text":"<p><code>ObstacleCluster</code> contains not only <code>Obstcles</code> in an unordered map to speedup <code>set</code> and <code>get</code> but also the relationship between <code>Obstacles</code> and <code>LaneGraphs</code> from <code>HdMap</code> like <code>Overlaps</code> and <code>Stopsigns</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#obstacle","title":"Obstacle","text":"<p><code>Obstacle</code> class is a basic unit to store <code>Obstacles</code> generated by <code>perception</code> module. It stores the information of an obstacle in a data structure <code>Feature</code> which is defined in google's data interchange format protobuf. </p> <p>In addtion to the information about the obstacle, <code>Obstacle</code> uses</p> <ul> <li>a <code>KalmanFilter</code> to track the trajectory of pedestrian;</li> <li>a <code>KalmanFilter</code> to track the trajectory of other obstacles(vehicle, bicycle, etc.)</li> <li>a <code>DigitalFilter</code> to filter the heading of bicycles and pedestrians.</li> </ul> <p><code>Obstacle</code> contains many methods about obstacle's property:</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#isstill-return-true-if-the-obstacle-is-still","title":"<code>IsStill</code>: return true if the obstacle is still.","text":"<p>There are two checks to determine whether an obstacle is still or not:</p> <ul> <li>distance check.</li> <li>speed check.</li> </ul> <p>Firstly, we can calculate the average distance deviation of an obstacle's history position:</p> \\[ x_{avg} = \\sum_{i = 1}^{n} \\frac{x_{i} - x_{0}}{n - 1} \\] \\[ y_{avg} = \\sum_{i = 1}^{n} \\frac{y_{i} - y_{0}}{n - 1} \\] <p>In the above equations,</p> <ul> <li>\\(x_{avg}\\) is the average distance deviation of \\(x\\);</li> <li>\\(y_{avg}\\) is the average distance deviation of \\(y\\);</li> <li>\\(n\\) is the history size of an obstacle, in the program is \\(10\\);</li> <li>\\(x_{i}\\) is the <code>i</code>th \\(x\\) of the position in history;</li> <li>\\(y_{i}\\) is the <code>i</code>th \\(y\\) of the position in history;</li> <li>\\(x_{0}\\) is the current \\(x\\) of the position of an obstacle;</li> <li>\\(y_{0}\\) is the current \\(y\\) of the position of an obstacle.</li> </ul> <p>Then, the speed sensibility is defined as:</p> \\[ K_{v} = \\frac{\\sqrt{2 * n} * 4 * k_{std}}{(n + 1) * d_{t}} \\] <p>In the equation:</p> <ul> <li>\\(K_{v}\\) is the sensibility of speed;</li> <li>\\(n\\) is the history size of an obstacle;</li> <li>\\(k_{std}\\) is the position standard deviation of an obstacle, it's \\(1.0\\)(obstacle) or \\(0.5\\)(other) in program;</li> <li>\\(d_{t}\\) is the duration of the history.</li> </ul> <p>Nextly, we calculate the distance:</p> \\[ D = \\sqrt{x_{avg}^2 + y_{avg}^2} \\] \\[ D_{std} = \\sqrt{\\frac{2.0}{n}} * k_{std} \\] <p>In the equation:</p> <ul> <li>\\(D\\) is the distance of obstacle;</li> <li>\\(D_{std}\\) is the standard distance of obstacle.</li> </ul> <p>Now we can determine the obstacle is:</p> <ul> <li>still, if \\(v &lt; v_{threshold}\\)(\\(v\\) is current speed, \\(v_{threshold}\\) is the threshold of speed, it's \\(0.8\\)(obstacle) or \\(0.5\\)(other) in program);</li> <li>not still, if \\(v &gt; v_{threshold}\\) and \\(K_{v} &lt; v_{threshold}\\);</li> <li>not still, if \\(v &gt; v_{threshold}\\) and \\(K_{v} &gt; v_{threshold}\\) and \\(D &gt; 2.0 * D_{std}\\);</li> <li>still, if \\(v &gt; v_{threshold}\\) and \\(K_{v} &gt; v_{threshold}\\) and \\(D &lt; 2.0 * D_{std}\\);</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#scenario","title":"Scenario","text":"<p>The <code>Scenario</code> sub-module analyzes scenarios that includes the ego vehicle. Currently, two scenarios are defined:</p> <ul> <li>Cruise : this scenario includes lane keeping and following.</li> <li>Junction : this scenario involves junctions. Junctions can either have traffic lights and/or STOP signs.</li> </ul> <p>The architecture of <code>Scenario</code> is as below: </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#scenariomanager","title":"ScenarioManager","text":"<p>The <code>ScenarioManager</code> class depends on <code>FeatureExtractor</code> to generate environment features and depends on <code>ScenarioAnalyzer</code> to analyze current scenario. If necessary, <code>ScenarioManager</code> will set obstacls' priorities as:</p> <ul> <li>IGNORE, if the obstacle is no need to be considered;</li> <li>NORMAL, if the obstacle should be considered.</li> </ul> <p></p> <p>The obstacle is set to <code>NORMAL</code> if the obstacle is:</p> <ul> <li><code>in scan area</code>, the scan arear is a rectanglar in front of ego vehicle with the length(\\(80\\) in program) and width(\\(12\\) in program), for example, the obstacle with id of 5 is in scan area but 6 not;</li> <li><code>on lane</code>, for example, the obstacle with id of 3 is on lane but 2 not;</li> <li><code>near junction</code>, means that the distance between obstacle and junction is less than threshold(it's \\(1\\) in program), see obstacle 4 and 5;</li> <li><code>near lane</code>, this rule is not for the obstacle with the type of <code>VEHICLE</code>, if the distance is less than threshold(\\(3\\) in program), obstacle 2 and 3 is near lane.</li> </ul> <p>Otherwise the priority of the obstacle is <code>IGNORE</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#featureextractor","title":"FeatureExtractor","text":"<p><code>FeatureExtractor</code> sets</p> <ul> <li>Ego lane feature, including ego lane <code>id</code> and distance <code>s</code> of lane;</li> <li>Left and right lane feature, including lane <code>id</code> and distance <code>s</code> of lane;</li> <li>Junction feature, including junction <code>id</code>, we only consider the junction that has signals or stop signs. </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#scenarioanalyzer","title":"ScenarioAnalyzer","text":"<p><code>ScenarioAnalyzer</code> determines which scene ego vehicle is in:</p> <ul> <li>Junction, if the distance between ego vehicle and junction is less than threshold(\\(10\\) in program);</li> <li>Cruise, otherwise.</li> </ul> <p><code>ScenarioAnalyzer</code> works depends on <code>ScenarioFeatures</code>. Once which scenario is determined, it will generate corresponding scenario features.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#scenariofeatures","title":"ScenarioFeatures","text":"<p><code>CruiseScenariosFeatures</code> and <code>CruiseScenariosFeatures</code> are derived from the base class <code>ScenarioFeatures</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#evaluator","title":"Evaluator","text":"<p>The <code>Evaluator</code> predicts path and speed separately for any given obstacle. An evaluator evaluates a path by outputting a probability for it (lanesequence) using the given model stored in <code>prediction/data/</code>.</p> <p>Now in <code>prediction</code>, the <code>Evaluator</code> for <code>Cyclist</code> are:</p> <ul> <li><code>CyclistKeepLaneEvaluator</code>;</li> </ul> <p>and the <code>Evaluator</code> for <code>Vehicle</code> are:</p> <ul> <li><code>CostEvaluator</code>: probability is calculated by a set of cost functions;</li> <li><code>MLPEvaluator</code>: probability is calculated using an MLP model;</li> <li><code>RNNEvaluator</code>: probability is calculated using an RNN model;</li> <li><code>CruiseMLPEvaluator</code>: probability is calculated using a mix of MLP and CNN-1d models for the cruise scenario;</li> <li><code>JunctionMLPEvaluator</code>: probability is calculated using an MLP model for junction scenario.</li> </ul> <p>The architecture of <code>Evaluator</code> is as below:</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#evaluatormanager","title":"EvaluatorManager","text":"<p>The <code>EvaluatorManager</code> creates and stores all types of evaluators, so it has many <code>Evaluator</code> pointers. The <code>Evaluator</code> class is a base class that defines a pure virtual function <code>Evaluate</code>. <code>EvaluatorManager</code> calls <code>Evaluator</code>'s subclass's function <code>Evaluate</code> to calculate probability for a lanesequence. If the <code>obstacle</code> type is:</p> <ul> <li><code>VEHICLE</code> and it's <ul> <li><code>ON_LANE</code>, the <code>Evaluator</code> will be <code>CruiseMLPEvaluator</code>;</li> <li><code>IN_JUNCTION</code>, the <code>Evaluator</code> will be <code>JunctionMLPEvaluator</code>;</li> </ul> </li> <li><code>BICYCLE</code> and it's<ul> <li><code>ON_LANE</code>, the <code>Evaluator</code> will be <code>CyclistKeepLaneEvaluator</code>;</li> </ul> </li> <li><code>UNKNOWN</code> and it's<ul> <li><code>ON_LANE</code>, the <code>Evaluator</code> will be <code>MLPEvaluator</code>;</li> </ul> </li> </ul> <p>otherwise, the <code>Evaluator</code> would not work.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#cyclistkeeplaneevaluator","title":"CyclistKeepLaneEvaluator","text":"<p>The <code>CyclistKeepLaneEvaluator</code> is simple and has only two probability values:</p> <ul> <li>1.0, if current lane id is equal to the lane id in lane sequence;</li> <li>0.0, if current lane id is not equal to the lane id in lane sequence.</li> </ul> <p>The lanes sequence is a list of lane id that covers the length:</p> \\[ D_{lane} = v_{0} * t_{max} + 0.5 * a_{max} * t_{max}^2 \\] <p>In equation,</p> <ul> <li>\\(D_{lane}\\) is the distance the lane sequance covers;</li> <li>\\(v_{0}\\) is current speed the obstacle has;</li> <li>\\(t_{max}\\) is the predicted trajectory duration, it's 8.0 in program;</li> <li>\\(a_{max}\\) is the maximum linear acceleration of vehicle, it's 4.0 in program;</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#mlpevaluator","title":"MLPEvaluator","text":"<p>This <code>Evaluator</code> uses a MLP(Multilayer Perceptron):</p> <p></p> <p>The model has \\(62\\) inputs, \\(22\\) of which are obstacle features:</p> <ul> <li>\\(\\theta_{filter}\\), the average of the latest 5 heading values in an obstacle's history;</li> <li>\\(\\theta_{mean}\\), the average of all the heading values in an obstacle's history;</li> <li>\\(\\theta_{filter} - \\theta_{mean}\\);</li> <li>\\(\\theta_{diff} = \\theta_{curr} - \\theta_{prev}\\), where \\(\\theta_{curr}\\) is the average of the latest \\(0 \\to 4\\) heading values in an obstacle's history, \\(\\theta_{prev}\\) is the average of the latest \\(5 \\to 9\\) heading values;</li> <li>\\(\\theta_{diff}'\\), $\\theta_{diff}' = \\frac{\\theta_{diff}}{\\Delta_t} $;</li> <li>\\(l_{filter}\\), the average of the latest 5 lateral distance values in an obstacle's history;</li> <li>\\(l_{mean}\\), the average of all the lateral distance values in an obstacle's history;</li> <li>\\(l_{filter} - l_{mean}\\);</li> <li>\\(l_{diff} = l_{curr} - l_{prev}\\), where \\(l_{curr}\\) is the average of the latest \\(0 \\to 4\\) lateral distance values in an obstacle's history, \\(l_{prev}\\) is the average of the latest \\(5 \\to 9\\) lateral distance values;</li> <li>\\(v\\), the velocity of the obstacle;</li> <li>\\(a\\), the acceleration of the obstacle;</li> <li>\\(D_{lb}\\), the distance from obstacle to left lane boundary;</li> <li>\\(D_{lb}' = \\frac{D_{first} - D_{last}}{dt}\\), where \\(D_{first}\\) is the first \\(D_{lb}\\) of the history, \\(D_{last}\\) is the last \\(D_{lb}\\) of the history, \\(dt\\) is the duration of the history;</li> <li>\\(D_{lb diff}' = D_{lb curr} - D_{lb prev}\\), where \\(D_{lb curr}\\) is the average of the latest \\(0 \\to 4\\) \\(D_{lb}\\) values in an obstacle's history, \\(D_{lb prev}\\) is the average of the latest \\(5 \\to 9\\) \\(D_{lb}\\) values;</li> <li>\\(D_{rb}\\), the distance from obstacle to right lane boundary;</li> <li>\\(D_{rb}' = \\frac{D_{first} - D_{last}}{dt}\\), where \\(D_{first}\\) is the first \\(D_{rb}\\) of the history, \\(D_{last}\\) is the last \\(D_{rb}\\) of the history, \\(dt\\) is the duration of the history;</li> <li>\\(D_{rb diff}' = D_{rb curr} - D_{rb prev}\\), where \\(D_{rb curr}\\) is the average of the latest \\(0 \\to 4\\) \\(D_{rb}\\) values in an obstacle's history, \\(D_{rb prev}\\) is the average of the latest \\(5 \\to 9\\) \\(D_{rb}\\) values;</li> <li><code>is_curr_lane_no_turn</code>, this value is \\(1\\) if current lane is <code>NoTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_left_turn</code>, this value is \\(1\\) if current lane is <code>LeftTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_right_turn</code>, this value is \\(1\\) if current lane is <code>RightTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_uturn</code>, this value is \\(1\\) if current lane is <code>UTurn</code>, or it's \\(0\\).</li> </ul> <p>And the other 40 features are lane features, we choose 10 points from the reference line, each of them has 4 features:</p> <ul> <li>\\(\\psi_{diff}\\): the heading deviation between obstacle and reference line;</li> <li>\\(l_{point}\\): the lateral distance of the lane point;</li> <li>\\(\\psi_{point}\\): the heading of the lane point;</li> <li>\\(\\psi_{dev}\\): the heading divation between obstacle and the point closet to the obstacle.</li> </ul> <p>The output \\(\\widehat{y}\\) is the probability that an obstacle stays on a lane.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#cruisemlpevaluator","title":"CruiseMLPEvaluator","text":"<p>The model has \\(23 + 5 * 9 + 8 + 20 * 4 = 146\\) inputs, \\(23\\) of which are obstacle features:</p> <ul> <li>\\(\\theta_{filter}\\), the average of the latest 5 heading values in an obstacle's history;</li> <li>\\(\\theta_{mean}\\), the average of all the heading values in an obstacle's history;</li> <li>\\(\\theta_{filter} - \\theta_{mean}\\);</li> <li>\\(\\theta_{diff} = \\theta_{curr} - \\theta_{prev}\\), where \\(\\theta_{curr}\\) is the average of the latest \\(0 \\to 4\\) heading values in an obstacle's history, \\(\\theta_{prev}\\) is the average of the latest \\(5 \\to 9\\) heading values;</li> <li>\\(\\theta_{diff}'\\), \\(\\theta'_{diff} = \\frac{\\theta_{diff}}{\\Delta_t}\\);</li> <li>\\(l_{filter}\\), the average of the latest 5 lateral distance values in an obstacle's history;</li> <li>\\(l_{mean}\\), the average of all the lateral distance values in an obstacle's history;</li> <li>\\(l_{filter} - l_{mean}\\);</li> <li>\\(l_{diff} = l_{curr} - l_{prev}\\), where \\(l_{curr}\\) is the average of the latest \\(0 \\to 4\\) lateral distance values in an obstacle's history, \\(l_{prev}\\) is the average of the latest \\(5 \\to 9\\) lateral distance values;</li> <li>\\(v\\), the velocity of the obstacle;</li> <li>\\(a\\), the acceleration of the obstacle;</li> <li>\\(j\\), the jerk of the obstacle;</li> <li>\\(D_{lb}\\), the distance from obstacle to left lane boundary;</li> <li>\\(D_{lb}' = \\frac{D_{first} - D_{last}}{dt}\\), where \\(D_{first}\\) is the first \\(D_{lb}\\) of the history, \\(D_{last}\\) is the last \\(D_{lb}\\) of the history, \\(dt\\) is the duration of the history;</li> <li>\\(D_{lb diff}' = D_{lb curr} - D_{lb prev}\\), where \\(D_{lb curr}\\) is the average of the latest \\(0 \\to 4\\) \\(D_{lb}\\) values in an obstacle's history, \\(D_{lb prev}\\) is the average of the latest \\(5 \\to 9\\) \\(D_{lb}\\) values;</li> <li>\\(D_{rb}\\), the distance from obstacle to right lane boundary;</li> <li>\\(D_{rb}' = \\frac{D_{first} - D_{last}}{dt}\\), where \\(D_{first}\\) is the first \\(D_{rb}\\) of the history, \\(D_{last}\\) is the last \\(D_{rb}\\) of the history, \\(dt\\) is the duration of the history;</li> <li>\\(D_{rb diff}' = D_{rb curr} - D_{rb prev}\\), where \\(D_{rb curr}\\) is the average of the latest \\(0 \\to 4\\) \\(D_{rb}\\) values in an obstacle's history, \\(D_{rb prev}\\) is the average of the latest \\(5 \\to 9\\) \\(D_{rb}\\) values;</li> <li><code>is_curr_lane_no_turn</code>, this value is \\(1\\) if current lane is <code>NoTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_left_turn</code>, this value is \\(1\\) if current lane is <code>LeftTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_right_turn</code>, this value is \\(1\\) if current lane is <code>RightTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_uturn</code>, this value is \\(1\\) if current lane is <code>UTurn</code>, or it's \\(0\\).</li> </ul> <p>And \\(5 * 9\\) features are obstacle history features, we search \\(5\\) frames of history, each frame has \\(9\\) fearures:</p> <ul> <li><code>is_curr_frame_has_hisotry</code>, the value is \\(1\\) if current frame and previous frame all have position/velocity/acceleration/velocity_heading information, otherwise it's \\(0\\);</li> <li>\\(x\\), in local coordinate system;</li> <li>\\(y\\), in local coordiante system;</li> <li>\\(x^{\\prime}\\);</li> <li>\\(y^{\\prime}\\);</li> <li>\\(x^{\\prime\\prime}\\);</li> <li>\\(y^{\\prime\\prime}\\);</li> <li>\\(\\theta_{v}\\), the heading of velocity;</li> <li>\\(\\theta_{v}^{\\prime}\\).</li> </ul> <p>\\(8\\) features are for forward and backward obstacles:</p> <ul> <li>\\(s_{forward}\\), the forward obstacle's distance;</li> <li>\\(l_{forward}\\), the forward obstacle's lateral distance;</li> <li>\\(L_{forward}\\), the forward obstacle's length;</li> <li>\\(v_{forward}\\), the forward obstacle's velocity;</li> <li>\\(s_{backward}\\), the backward obstacle's distance;</li> <li>\\(l_{backward}\\), the backward obstacle's lateral distance;</li> <li>\\(L_{backward}\\), the backward obstacle's length;</li> <li>\\(v_{backward}\\), the backward obstacle's velocity;</li> </ul> <p>And the other \\(20 * 4\\) features are lane features, we choose \\(20\\) points from the reference line, each of them has 4 features:</p> <ul> <li>\\(s_{point}\\), the lane point's distance;</li> <li>\\(l_{point}\\), the lane point's lateral distance;</li> <li>\\(\\psi_{point}\\): the heading of the lane point;</li> <li>\\(\\kappa_{point}\\): the curvature of the lane point.</li> </ul> <p>The result of <code>CruiseMLPEvaluator</code> is:</p> <ul> <li>the probability of an obstacle on a lane;</li> <li>the time of an obstacle to travel to reference line.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#junctionmlpevaluator","title":"JunctionMLPEvaluator","text":"<p>This model has 3 obstacle features:</p> <ul> <li>\\(v\\), the velocity of an obstacle;</li> <li>\\(a\\), the acceleration of an obstacle;</li> <li>\\(S_{junction}\\), the area of the junction.</li> </ul> <p>The other \\(12 * 5\\) features are junction features. We divide area aroud the vehicle to 12 regions and calculate the probability of each exit.  Each exit has 5 features:</p> <ul> <li><code>is_exit_exist</code>, it's 1 if the exit of junction exists;</li> <li>\\(x_{diff} / S_{junction}\\), \\(x_{diff}\\) is the deviation between obstacle and exit in x direction;</li> <li>\\(y_{diff} / S_{junction}\\), \\(y_{diff}\\) is the deviation between obstacle and exit in y direction;</li> <li>\\(L_{diff} / S_{junction}\\), \\(L_{diff}\\) is the distance between obstacle and exit;</li> <li>\\(\\theta_{diff}\\), the heading difference between obstacle and exit.</li> </ul> <p>And the output of the model is the probability of an obstacle to exit in 12 directions.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#costevaluator","title":"CostEvaluator","text":"<p><code>CostEvaluator</code> calculates the probability based on the distance between obstacle and lane boundary.</p> \\[ E_{l} = \\frac{W_{lane}}{2} - W_{l} \\] \\[ P_{cost} = \\frac{1}{1 + e^{-E_{l}}} \\] <p>In the equation:</p> <ul> <li>\\(E_{l}\\) is the distance from lane boundary to obstacle's location;</li> <li>\\(W_{lane}\\) is the width of lane;</li> <li>\\(W_{l}\\) is the lateral distance from lane reference line to obstacle's location;</li> <li>\\(P_{cost}\\) is the probability, calculated by a Sigmoid function.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#rnnevaluator","title":"RNNEvaluator","text":"<p>Not used in program.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#predictor","title":"Predictor","text":"<p>Predictor generates predicted trajectories for obstacles. Currently, the supported predictors include:</p> <ul> <li>Empty: obstacles have no predicted trajectories;</li> <li>Single lane: Obstacles move along a single lane in highway navigation mode. Obstacles not on lane will be ignored;</li> <li>Lane sequence: obstacle moves along the lanes;</li> <li>Move sequence: obstacle moves along the lanes by following its kinetic pattern;</li> <li>Free movement: obstacle moves freely;</li> <li>Regional movement: obstacle moves in a possible region;</li> <li>Junction: Obstacles move toward junction exits with high probabilities.</li> </ul> <p>The relationship between <code>predictor</code>s is as below: </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#predictormanager","title":"PredictorManager","text":"<p><code>PredictorManager</code> creates and stores all kinds of <code>predictor</code>s. It has pointers of base class <code>Predictor</code> to points to its subclasses, the specail predictors. <code>PredictorManager</code> runs the special predictor's method <code>Predict</code> to generate trajectories according to obstacles's type. If the obstacle's type is:</p> <ul> <li><code>Vehicle</code>, and it's<ul> <li><code>InJunction</code>, the predictor will be <code>LaneSequencePredictor</code>;</li> <li><code>OnLane</code>, the predictor will be <code>MoveSequencePredictor</code>;</li> <li><code>OffLane</code>, the predictor will be <code>FreeMovePredictor</code>;</li> </ul> </li> <li><code>Pedestrian</code>, the predictor will be <code>FreeMovePredictor</code>;</li> <li><code>Bicycle</code>, and it's<ul> <li><code>OnLane</code>, the predictor will be <code>MoveSequencePredictor</code>;</li> <li><code>OffLane</code>, the predictor will be <code>FreeMovePredictor</code>;</li> </ul> </li> <li><code>Unknown</code>, and it's<ul> <li><code>OnLane</code>, the predictor will be <code>MoveSequencePredictor</code>;</li> <li><code>OffLane</code>, the predictor will be <code>FreeMovePredictor</code>;</li> </ul> </li> <li>other case, the predictor will be <code>EmptyPredictor</code>.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#predictor_1","title":"Predictor","text":"<p><code>Predictor</code> is a base class with the pure virtual function <code>Predict</code>. It also realizes some methods about trajectories:</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#trimtrajectory","title":"TrimTrajectory","text":"<p>If the obstacle is in junction, we don't trim obstacle's trajectory; otherwise, trim the trajectory to the front of junction.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#supposedtostop","title":"SupposedToStop","text":"<p>Determine if an obstacle is supposed to stop within a distance.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#emptypredictor","title":"EmptyPredictor","text":"<p><code>EmptyPredictor</code> does nothing but clear the trajectory of obstacle.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#freemovepredictor","title":"FreeMovePredictor","text":"<p><code>FreeMovePredictor</code> assumes that the obstacle always moves with initial velocity and acceleration, the state is:</p> \\[ \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ x^\\prime \\\\\\\\ y^\\prime \\\\\\\\ x^{\\prime\\prime} \\\\\\\\ y^{\\prime\\prime} \\end{bmatrix} \\] <p>and the transition matrix is:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; t &amp; 0 &amp; 0.5 * t^2 &amp; 0 \\\\\\\\ 0 &amp; 1 &amp; 0 &amp; t &amp; 0 &amp; 0.5 * t^2 \\\\\\\\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; t &amp; 0 \\\\\\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; t \\\\\\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\\\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#junctionpredictor","title":"JunctionPredictor","text":"<p><code>JunctionPredictor</code> uses a cubic polynomial to fit start-point(obstacle's position) and end-point(junction exit position) within given time.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#regionalpredictor","title":"RegionalPredictor","text":"<p>Not used in program.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#sequencepredictor","title":"SequencePredictor","text":"<p><code>SequencePredictor</code> defines some common methods relatived to sequence.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#filterlanesequence","title":"FilterLaneSequence","text":"<p>This method filters out those obstacles that are close to the ego vehicle so that we will ignore them and drive normally unless they really kick into our lane.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#lanesequencepredictor","title":"LaneSequencePredictor","text":"<p><code>LaneSequencePredictor</code> is derived from <code>SequencePredictor</code>. After filtering lane sequence, it use the method from <code>Predictor</code> to check if an obstacle is to stop:</p> <ul> <li><code>true</code>, generate constant acceleration trajectory;</li> <li><code>false</code>, generate lane sequence trajectory.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#constant-acceleration-trajectory","title":"Constant acceleration trajectory","text":"<p>In this case, <code>predictor</code> refresh trajectory point with the equation:</p> \\[ s = v * t + 0.5 * a * t^2 \\] \\[ v = v_0 + a * t \\] \\[ l = l_0 * K_{approach} \\] <p>In equation:</p> <ul> <li>\\(s\\) is the obstacle distance on the lane;</li> <li>\\(v\\) is current velocity;</li> <li>\\(t\\) is the duration;</li> <li>\\(a\\) is current acceleration;</li> <li>\\(v_0\\) is the velocity from last step;</li> <li>\\(l\\) is the lateral distance between obstacle and lane reference line;</li> <li>\\(l_0\\) is the lateral distance last step.</li> <li>\\(K_{approach}\\) is the coefficient that obstacle moves towards lane reference line;</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#lane-sequence-trajectory","title":"Lane sequence trajectory","text":"<p>In this case, we assume that the obstacle moves with constant velocity:</p> \\[ s = s_0 + v * t \\] \\[ l = l_0 * K_{approach} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#movesequencepredictor","title":"MoveSequencePredictor","text":"<p><code>MoveSequencePredictor</code> is derived from <code>SequencePredictor</code>. After filtering lane sequence, it use the method from <code>Predictor</code> to check if an obstacle is to stop:</p> <ul> <li><code>true</code>, generate constant acceleration trajectory;</li> <li><code>false</code>, generate lane sequence trajectory using best trajectory selection.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#const-acceleration-trajectory","title":"Const acceleration trajectory","text":"<p>This trajectory is the same as LaneSequencePredictor</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#lane-sequence-trajectory-using-best-trajectory-selection","title":"Lane sequence trajectory using best trajectory selection","text":"<p>This trajectory traverses all the time to reach the end point and selects the best trajectory that has the minimum cost.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#generate-a-list-of-time-to-reach-the-end","title":"Generate a list of time to reach the end.","text":"<p>In program, we use the method <code>GenerateCandidateTimes</code> with the time gap of \\(0.5\\) and end time \\(8.0\\) to generate a sample time list: <code>{0, 0.5, 1, 1.5, ..., 7.5, 8.0}</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#calculate-the-5th-degree-polynomial-of-lateral-ditance-with-each-end-time","title":"Calculate the 5<sup>th</sup> degree polynomial of lateral ditance with each end time.","text":"<p>Since we have known the start state:</p> \\[ \\begin{cases} l_{0} = l_{obstacle} \\\\ l_{0}^\\prime = v_{lateral} \\\\ l_{0}^{\\prime\\prime} = 0 \\end{cases} \\] <p>and end state:</p> \\[ \\begin{cases} l_{1} = 0 \\\\ l_{1}^{\\prime} = 0 \\\\ l_{1}^{\\prime\\prime}= 0 \\end{cases} \\] <p>with the 5<sup>th</sup> degree polynomial equation:</p> \\[ \\begin{cases} l = a_0 + a_1 \\cdot t + a_2 \\cdot t^2 + a_3 \\cdot t^3 + a_4 \\cdot t^4 + a_5 \\cdot t^5 \\\\ l^{\\prime} = a_1 + 2 \\cdot a_2 \\cdot t + 3 \\cdot a_3 \\cdot t^2 + 4 \\cdot a_4 \\cdot t^3 + 5 \\cdot a_5 \\cdot t^4 \\\\ l^{\\prime\\prime} = 2 \\cdot a_2 \\cdot t + 6 \\cdot a_3 \\cdot t + 12 \\cdot a_4 \\cdot t^2 + 20 \\cdot a_5 \\cdot t^3 \\end{cases} \\] <p>we can get the coefficients \\(a_0\\) to \\(a_5\\).</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#calculate-the-4th-degree-polynomial-of-longitude-distance-with-each-end-time","title":"Calculate the 4<sup>th</sup> degree polynomial of longitude distance with each end time.","text":"<p>Since we have known the start state:</p> \\[ \\begin{cases} s_{0} = s_{obstacle} \\\\ s_{0}^\\prime = v_{longitude} \\\\ s_{0}^{\\prime\\prime} = 0 \\end{cases} \\] <p>and end state:</p> \\[ \\begin{cases} s_{1} = s_{end} \\\\ s_{1}^{\\prime} = v_{end} \\\\ s_{1}^{\\prime\\prime}= 0 \\end{cases} \\] <p>with the 4<sup>th</sup> degree polynomial equation:</p> \\[ \\begin{cases} s = a_0 + a_1 \\cdot t + a_2 \\cdot t^2 + a_3 \\cdot t^3 + a_4 \\cdot t^4 \\\\ s^{\\prime} = a_1 + 2 \\cdot a_2 \\cdot t + 3 \\cdot a_3 \\cdot t^2 + 4 \\cdot a_4 \\cdot t^3 \\\\ s^{\\prime\\prime} = 2 \\cdot a_2 \\cdot t + 6 \\cdot a_3 \\cdot t + 12 \\cdot a_4 \\cdot t^2 \\end{cases} \\] <p>we can get the coefficients \\(a_0\\) to \\(a_4\\).</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#find-the-coefficients-of-lateral-and-longitude-with-the-lowest-cost","title":"Find the coefficients of lateral and longitude with the lowest cost.","text":"<p>The cost of each group of coefficients can be calculated with:</p> \\[ C = a_{max lateral} + \\alpha * t_{end} \\] <p>In equation,</p> <ul> <li>\\(C\\) is the cost;</li> <li>\\(\\alpha\\) is ratio of time, it's \\(0.25\\) in program;</li> <li>\\(t_{end}\\) is the time to reach end point.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#generate-each-point-of-the-trajectory-with-the-lowest-cost","title":"Generate each point of the trajectory with the lowest cost.","text":"<p>Now that we know the equation of longitude and lateral and the time to reach end point, we can generate each point of the trajectory with  time gap(\\(0.1\\) in program)</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/apollo_prediction_module/#singlelanepredictor","title":"SingleLanePredictor","text":"<p>This <code>predictor</code> uses the same method as <code>LaneSequencePredictor</code> lane sequence case.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/","title":"Compilation Optimization of C++ Project","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#why-doing-this-work","title":"Why Doing This Work","text":"<ul> <li>We change our platform from <code>x86</code> to <code>arm</code>, the cpu performance is getting weaker;</li> <li>Every time we debug on the vehicle, we suffer from the slow compilation time.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#compilation-process","title":"Compilation Process","text":"<p>In general, the compilation of a C++ program involves these four steps:</p> <ol> <li>Preprocessing</li> <li>Compiling</li> <li>Assembling</li> <li>Linking</li> </ol> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#preprocessing","title":"Preprocessing","text":"<p>Preprocessor directives are one of the unique feature of C++. Before a C++ program gets compiled by the compiler, the source code gets preprocessed by the preprocessor. </p> <p>All preprocessor directives in C++ begin with <code>#</code>, and they do not need to end with a semicolon(<code>;</code>) because this is not a statement in C++.</p> <p>There are different preprocessor directives that perform different tasks.</p> <ul> <li>Inclusion Directives:<ul> <li><code>#include</code>: specifies the files to be included, especially header-file</li> </ul> </li> <li>Macro Definition Directive:<ul> <li><code>#define</code>: define a macro substitution</li> <li><code>#undef</code>: undefine a macro</li> </ul> </li> <li>Conditional Compilation Directive:<ul> <li><code>#if</code>: test a condition</li> <li><code>#elif</code>: else if condition</li> <li><code>#endif</code>: end of <code>#if</code></li> <li><code>#ifdef</code>: used to test for macro definition</li> <li><code>#ifndef</code>: used to test for whether a macro is not defined</li> <li><code>#else</code>: it provides an alternative option when <code>#if</code> fails</li> </ul> </li> <li>Other directives:<ul> <li><code>#error</code>: syntax \"#error err_msg\", shows the given error message and renders the program ill-formed</li> <li><code>#line</code>: Supplies a line number for compiler message</li> <li><code>#pragma</code>: Supplies implementation-defined instructions to the compiler</li> </ul> </li> </ul> <p>Some macros C++ predefined are:</p> <ul> <li><code>__LINE__</code>: this contians the current line number of the program when it is being compiled</li> <li><code>__FILE__</code>: this contians the current file name of the program when it is being compiled</li> <li><code>__DATE__</code>: this contians the string of the form <code>month/day/year</code> that is the date of the translation of the source code into object code</li> <li><code>__TIME__</code>: this contians the string of the form <code>hour:minute:second</code> that is the time at which the program was compiled</li> </ul> <p>The processor obeys directives defined in file to:</p> <ul> <li>replacing macros</li> <li>expanding include files</li> <li>expanding conditinal code</li> <li>removing comments</li> </ul> <p>You can use <code>g++ -E</code> to get preprocessed file with the extension <code>.i</code> or <code>.ii</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#compiling","title":"Compiling","text":"<p>Compiling is the second step. It takes the output of the preprocessor and generates assembly language, an intermediate human readable language, specific to the target processor. The compiler parses the pure C++ source code (now without any preprocessor directives) and converts it into assembly code. Compilers usually let you stop compilation at this point. This is very useful because with it you can compile each source code file separately. The advantage this provides is that you don\u2019t need to recompile everything if you only change a single file. It's at this stage that \"regular\" compiler errors, like syntax errors or failed overload resolution errors are reported.</p> <p>You can use <code>g++ -S</code> to get compiled file with the extension <code>.s</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#assembling","title":"Assembling","text":"<p>After compiling, we get the assembly code. Then the assembler will translate the assembly code into machine code producing actual binary file in some format(ELF, COFF, a.out, etc.). This object file contains the compiled code(in binary form) of the symbols defined in the input. Symbols in the object files are referred to by name.</p> <p>Object files can refer to symbols that are not defined. This is the case when you use a declaration, and don't provide a definition for it. The compiler doesn't mind this and will happily produce the object file as long as the source code is well-formed.</p> <p>You can use <code>g++ -c</code> to get assembled file with the extension <code>.o</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#linking","title":"Linking","text":"<p>The linker is what produces the final compilation output from the <code>object file</code> that compiler generated. The output of linker can be:</p> <ul> <li>shared library: it doesn't add the library code to the output, so it has the smallest file size;</li> <li>static library: it add all the library code to the output, which makes its larger size;</li> <li>executable file: it combine all the binary file to an executable, and has the largest file size.</li> </ul> <p>While linking, the linker links all the boject files by replacing the references to undefined symbols with the correct addresses. Each of these symbols can be defined in other object files or in libraries. If they are defined in libraries other than the standard library, you need to tell the linker the path of them.</p> <p>At this stage the most common erros are:</p> <ul> <li>missing definitions, which means that either the definitions don't exist or the object files or libraries they reside were not given to the linker</li> <li>duplicate definitions, which means that the same symbol was defined in two different object files or libraries</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#optimization-methods-and-results","title":"Optimization Methods and Results","text":"<p>The origin compilation time:</p> compile step preprocessing compiling assembling linking total time(s) 0.337 54.403 3.741 8.272 66.416"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#compile-what-we-used","title":"Compile what we used","text":"<p>In prediction module, we have three parts of code:</p> <ul> <li>onboard: which runs on our computing platform and supports for auto-driving system;</li> <li>offboard: which contains tools and deep-learning model trainers and runs on our develop PC;</li> <li>unittest: which is the unit-test case of above parts.</li> </ul> <p>In our previous work we compile all of three parts with a bash script. The file tree is like this: <pre><code>.\n\u251c\u2500\u2500 build\n\u251c\u2500\u2500 cmake\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 offboard\n\u251c\u2500\u2500 onboard\n\u2514\u2500\u2500 unit_test\n</code></pre> And we use the script to build them all: <pre><code>##!/bin/bash\ncmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCMAKE_BUILD_TYPE=Debug \\\n      -Bbuild -H.\nmake -C build -j12 install\n</code></pre></p> <p>But when we develop new features or fix bugs, what we want is to varify our code quickly, it's no need to build offboard or unit_test code.</p> <p>Now we split the code into three parts and just compile the part we interested. The file tree is like this: <pre><code>.\n\u251c\u2500\u2500 build\n\u251c\u2500\u2500 build.sh\n\u251c\u2500\u2500 cmake\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 Doxyfile\n\u251c\u2500\u2500 offboard\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CMakeLists.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model_training\n\u251c\u2500\u2500 onboard\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CMakeLists.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 proto\n\u2514\u2500\u2500 unit_test\n    \u251c\u2500\u2500 CMakeLists.txt\n    \u2514\u2500\u2500 onboard\n</code></pre></p> <p>At the top level of repo, we use three flags to define which part of code we want to compile in <code>CMakeLists.txt</code>:</p> <pre><code>## Build options\nset(BUILD_ONBOARD OFF CACHE BOOL \"build_onboard\")\nset(BUILD_OFFBOARD OFF CACHE BOOL \"build_offboard\")\nset(BUILD_UNIT_TEST OFF CACHE BOOL \"build_unit_test\")\n\nif(${BUILD_ONBOARD})\n  add_subdirectory(onboard)\nendif(${BUILD_ONBOARD})\n\nif(${BUILD_OFFBOARD})\n  add_subdirectory(offboard)\nendif(${BUILD_OFFBOARD})\n\nif(${BUILD_UNIT_TEST})\n  add_subdirectory(unit_test)\nendif(${BUILD_UNIT_TEST})\n</code></pre> <p>In bash script file, we choose what we want to build:</p> <pre><code>function build_onboard(){\n  set +e\n  mkdir build\n  set -e\n  cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCMAKE_BUILD_TYPE=Debug \\\n        -DBUILD_ONBOARD=ON -DBUILD_OFFBOARD=OFF -DBUILD_UNIT_TEST=OFF \\\n        -Bbuild -H.\n  make -C build -j12 install  || {\n    echo \"$R -&gt; Build failed! $E\"\n    exit 1\n  }\n  echo -e \"$G -&gt; Build onboard successfully! $TAIL $E\"\n  return $?\n}\n</code></pre> <p>Result:</p> Before optimization After optimization time(s) 81 66"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#compiler-options","title":"Compiler options","text":"<p>A compiler is a special program that processes statements written in a particular programming language and turns them into machine language or \"code\" that a computer's processor uses. In linux platform, we use GCC to compile our code. When you invoke GCC, it normally does preprocessing, compilation, assembly and linking.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#parallel-compilation","title":"Parallel compilation","text":"<p>In Linux platform we use <code>GNU/Make</code> tool to compile code. When we execute make command, we should use the <code>-j</code> option to define parallel jobs. In the bash script we use <code>$(nproc)</code> to get the number of cpu core as the <code>-j</code> parameter and increase the compilation performance.</p> <pre><code>make -C build -j$(nproc) install\n</code></pre> <p>Result:</p> Before optimization(<code>j8</code>) After optimization(<code>j12</code>) time(s) 70 66"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#optimize-options","title":"Optimize options","text":"<p>These options control various sorts of optimizations. Without any optimization option, the compiler\u2019s goal is to reduce the cost of compilation and to make debugging produce the expected results. Turning on optimization flags makes the compiler attempt to improve the performance and/or code size at the expense of compilation time and possibly the ability to debug the program.</p> <p>Here are some option levels:</p> <ul> <li><code>-O/-O1</code>: Optimizing compilation takes somewhat more time, and a lot more memory for a large function.With <code>-O</code>, the compiler tries to reduce code size and execution time, without performing any optimizations that take a great deal of compilation time.</li> <li> <p><code>-O2</code>: Optimize even more. GCC performs nearly all supported optimizations that do not involve a space-speed tradeoff. As compared to -O, this option increases both compilation time and the performance of the generated code.</p> </li> <li> <p><code>-O3</code>: Optimize yet more.</p> </li> <li><code>-O0</code>: Reduce compilation time and make debugging produce the expected results. This is the default.</li> <li><code>-Os</code>: Optimize for size. -Os enables all -O2 optimizations except those that often increase code size</li> <li><code>-Ofast</code>: Disregard strict standards compliance. -Ofast enables all -O3 optimizations. It also enables optimizations that are not valid for all standard-compliant programs.</li> <li><code>-Og</code>: Optimize debugging experience.</li> </ul> <p>Results:</p> Compilation option Assume time(<code>s</code>) Shared library size(<code>M</code>) <code>-O0</code> 49 29 <code>-O1</code> 43 3.5 <code>-O2</code> 48 3.4 <code>-O3</code> 49 3.4 <code>-Os</code> 46 3.5 <code>-Ofast</code> 49 3.4"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#debugging-options","title":"Debugging options","text":"<p>To tell GCC to emit extra information for use by a debugger, in almost all cases you need only to add <code>-g</code> to your other options.</p> <p>GCC allows you to use <code>-g</code> with <code>-O</code>. But this combination taken by optimized code may occasionally be surprising:</p> <ul> <li>some variables you declared may not exist at all;</li> <li>flow of control may briefly move where you did not expect it;</li> <li>some statements may not be executed because they compute constant results or their values are already at hand;</li> <li>some statements may execute in different places because they have moved out of loops.</li> </ul> <p>This makes it reasonable to use the optimizer for programs that might have bugs.</p> <p>If you are not using some other optimization option, consider <code>-Og -g</code> option. With no <code>-O</code> option at all, some compiler passes that collect information useful for debugging do not run at all, so that <code>-Og</code> may result in a better debugging experience.</p> <p>Here are some options for debugging:</p> <ul> <li><code>-g</code>: Produce debugging information in the operating system\u2019s native format (stabs, COFF, XCOFF, or DWARF). GDB can work with this debugging information.</li> <li><code>-g[level]</code>: Request debugging information ans also use <code>level</code> to specify how much information. The default level is 2.<ul> <li>Level 0: produces no debug information at all</li> <li>Level 1: produces minimal information, enough for making backtraces in parts of the program that you don\u2019t plan to debug. This includes descriptions of functions and external variables, and line number tables, but no information about local variables.</li> <li>Level 2: produces normal debug information as default.</li> <li>Level 3: includes extra information, such as all the macro definitions present in the program. Some debuggers support macro expansion when you use -g3.</li> </ul> </li> </ul> <p>What we should know is that producing debug symbols will increase both executable file size and compilation time, so the conclusion is:</p> <ul> <li>if you don't need to debug with gdb, do not add <code>-g</code> option to g++ flags;</li> <li>if you need to debug with gdb, use <code>-Og -g</code> option to get better debugging experience.</li> </ul> <p>Results:</p> Compilation option Assume time(<code>s</code>) Shared library size(<code>M</code>) <code>-O0 -g</code> 66 151 <code>-Og -g</code> 67 135 <code>-O</code> 45 3.5 <code>NONE</code> 63 130"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#include-denpencies-optimization","title":"Include denpencies optimization","text":"<p>There are two kinds of dependencies:</p> <ul> <li>logical dependencies: which is between classes, functions, etc.</li> <li>compile time dependencis: which is between files and libraries.</li> </ul> <p>The compile time dependencies have a huge impact on building, refactoring, testing and on the structure of your software. For small programs that just consists of a couple of filess, it is not a problem. But as soon as our software grows and so the number of includes files do, the impact of inappropriate handled includes can be huge:</p> <ul> <li>Increasing compilation time</li> <li>Increasing code complexity</li> <li>Harder to refactor/restructure your program</li> <li>More difficult to test code in isolation</li> </ul> <p>When you change a header file, all translation units depending on this header file need to be recompiled. This can be very expensive.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#gcc-compiler-options","title":"GCC compiler options","text":"<p>GCC provides some helpful options to determine/analyze include dependencies:</p> <ul> <li>-M: output a rule suitable for make describing the dependencies of the main source file.</li> <li>-MM: like -M but do not mention header files that are found in system header directories, nor header files that are included, directly or indirectly, from such a header.</li> <li>-MF: when used with -M or -MM, specifies a file to write the dependencies to.</li> <li>-H: prints the name of each header file used. Each name is indented to show how deep in the #include stack it is.</li> </ul> <p>An example can be: <pre><code>gcc -M main.cpp\n\nmain.o: main.cpp /usr/include/stdc-predef.h a.h b.h c.h d.h \\\n /usr/include/c++/4.9.0/iostream \\\n /usr/include/c++/4.9.0/x86_64-unknown-linux-gnu/bits/c++config.h \\\n /usr/include/c++/4.9.0/x86_64-unknown-linux-gnu/bits/os_defines.h \\\n /usr/include/features.h /usr/include/sys/cdefs.h \\\n /usr/include/bits/wordsize.h /usr/include/gnu/stubs.h \\\n /usr/include/gnu/stubs-64.h \\\n /usr/include/c++/4.9.0/x86_64-unknown-linux-gnu/bits/cpu_defines.h \\\n ...\n &lt;truncated&gt;\n</code></pre></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#doxygen","title":"Doxygen","text":"<p>Doxygen can generate nice interactive include graphs. This is how you can enable it in the doxygen configuration file (Doxyfile) - directly from the doxygen documentation:</p> <p>If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to YES then doxygen will generate a graph for each documented file showing the direct and indirect include dependencies of the file with other documented files. The default value is: YES. This tag requires that the tag HAVE_DOT is set to YES.</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#include-what-you-need","title":"include-what-you-need","text":"<p>\"Include what you use\" means this: for every symbol (type, function, variable, or macro) that you use in foo.cc (or foo.cpp), either foo.cc or foo.h should include a .h file that exports the declaration of that symbol.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#install","title":"Install","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#dependencies-install","title":"Dependencies install","text":"<pre><code>sudo apt install llvm-9.0-dev libclang-9.0-dev clang-9.0\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#build","title":"Build","text":"<pre><code>git clone https://github.com/include-what-you-use/include-what-you-use.git iwyu &amp;&amp;\ncd iwyu &amp;&amp;\ngit checkout clang_9.0 &amp;&amp;\nmkdir build &amp;&amp;\ncd build &amp;&amp;\ncmake -G \"Unix Makefiles\" -DIWYU_LLVM_ROOT_PATH=/usr/lib/llvm-9 .. &amp;&amp;\nmake install\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#usage","title":"Usage","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#iwyucmake","title":"Iwyu.cmake","text":"<pre><code>## Include denpendency analysis, you should include iwyu first\n## https://github.com/include-what-you-use/include-what-you-use\nfind_program(CMAKE_CXX_INCLUDE_WHAT_YOU_USE NAMES include-what-you-use iwyu)\n\nif(CMAKE_CXX_INCLUDE_WHAT_YOU_USE)\n  set(CMAKE_CXX_INCLUDE_WHAT_YOU_USE  # options\n    ${CMAKE_CXX_INCLUDE_WHAT_YOU_USE}\n    -Xiwyu\n    --cxx17ns\n    #-Xiwyu\n    #--no_fwd_decls\n    -Xiwyu\n    --keep=${CMAKE_CURRENT_SOURCE_DIR}/build/onboard/generated/proto/*.*\n    -Xiwyu\n    --keep=${WORK_ROOT}/opt/include/cyber/proto/*.*\n    #-Xiwyu\n    #--transitive_includes_only\n    -Xiwyu\n    --mapping_file=${CMAKE_CURRENT_SOURCE_DIR}/cmake/iwyu.imp\n    )\nendif(CMAKE_CXX_INCLUDE_WHAT_YOU_USE)\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#cmakeliststxt","title":"CMakeLists.txt","text":"<p>This tool is only used when we compile static library or executable binary, so we need to add a static library additionally: <pre><code>if(CMAKE_CXX_INCLUDE_WHAT_YOU_USE)\n  add_library(${PROJECT_NAME}_iwyu ${SRCS})\n  target_link_libraries(${PROJECT_NAME}_iwyu\n    ${PROJECT_NAME}_proto\n    cyber\n    gflags\n    glog\n    map_data\n    semantic_map\n    topological_map\n    ${TORCH_LIBRARIES}\n    ${TENSORRT_LIBRARIES}\n    stdc++fs\n  )\nendif(CMAKE_CXX_INCLUDE_WHAT_YOU_USE)\n</code></pre></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#how-to-correct-iwyu-mistakes","title":"how to correct iwyu mistakes","text":"<p>Use the command: <pre><code>cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCMAKE_BUILD_TYPE=Debug \\\n      -DBUILD_ONBOARD=ON -DBUILD_OFFBOARD=OFF -DBUILD_UNIT_TEST=OFF \\\n      -Bbuild -H. &amp;&amp;\nmake -C build -j$(nproc) 2&gt; build/iwyu.log &amp;&amp;\npython2 fix_includes.py &lt; /build/iwyu.log\n</code></pre></p> <p>Results:</p> Before optimization After optimization time(s) 66 65 size(M) 151 151"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#other-solutions","title":"Other solutions","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#forward-declaration","title":"Forward-declaration","text":"<p>The compiler wants to ensure you haven't made spelling mistakes or passed the wrong number of arguments to the function. So, it insists that it first sees a declaration of a <code>type</code> before it used.</p> <p>If you didn't have to forward declare things, the compiler would produce an object file that would have to contain information about all the possible guesses as to what the <code>type</code> might be. This may take a lot of time.</p> <p>And if other file includes this header, expand the header may waste space and time.</p> <p>A general class may be like this:</p> <pre><code>// in obstacle.h\n#include \"feature_a.h\"\n#include \"feature_b.h\"\n\nclass Obstacle {\n  FeatureA feature_a{};\n  FeatureB feature_b{};\n public:\n  void MethodA() const;\n};\n\n// in obstacle.cc\n#include \"obstacle.h\"\n\nvoid Obstacle::MethodA() const {\n  feature_a.MethodA();\n  feature_b.MethodB();\n}\n</code></pre> <p>Using forward-declaration, we can rewrite it as:</p> <pre><code>// in obstacle.h\nclass FeatureA;\nclass FeatureB;\n\nclass Obstacle {\n  FeatureA* feature_a{nullptr};\n  FeatureB* feature_b{nullptr};\n public:\n  void MethodA() const;\n};\n\n// in obstacle.cc\n#include \"obstacle.h\"\n#include \"feature_a.h\"\n#include \"feature_b.h\"\n\nvoid Obstacle::MethodA() const {\n  feature_a-&gt;MethodA();\n  feature_b-&gt;MethodB();\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#extern-template","title":"<code>extern template</code>","text":"<p>We can use the C++11 new feature <code>extern template</code> to force the compiler to not instantiate a template when you know that it instantiated somewhere else. It is used to reduce compile time and object file size.</p> <p>For example: <pre><code>// in function.h\ntemplate &lt;typename T&gt;\nvoid function() {\n  // do something\n}\n\n// in source1.cpp\n#include \"function.h\"\nvoid function1() {\n  function&lt;double&gt;();\n}\n\n// in source2.cpp\n#include \"function.h\"\nvoid function2() {\n  function&lt;double&gt;();\n}\n</code></pre></p> <p>This will result in the following object files: <pre><code>// source1.o\nvoid function1()\nvoid function&lt;double&gt;()  // compile first time\n\n// source2.o\nvoid function2()\nvoid function&lt;double&gt;()  // compile second time\n</code></pre></p> <p>If both files are linked together, one <code>void function&lt;double&gt;()</code> will be discarded, resulting in wasted comile time and object file size.</p> <p>To not waste compile time and object file size, there is an <code>extern</code> keyword which makes the compiler not compile a template function. You should use this if and only if you know it is used in the same binary somewhere else.</p> <pre><code>// in function.h\ntemplate &lt;typename T&gt;\nvoid function() {\n  // do something\n}\n\n// in source1.cpp\n#include \"function.h\"\nvoid function1() {\n  function&lt;double&gt;();\n}\n\n// in source2.cpp\n#include \"function.h\"\nextern template void function&lt;double&gt;();  // you know it's initialized somewhere\nvoid function2() {\n  function&lt;double&gt;();\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#replace-boost-library","title":"Replace boost library","text":"<p>The main disadvantage of boost library is that it add declaration and definition in one <code>hpp</code>file, which makes the file size explore after expending it in a <code>.cc</code> file. </p> <p>We can remove the <code>boost</code> library from project to reduce the time and size of compilation.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/compile_cpp_project/#reference","title":"Reference","text":"<ul> <li>C++ Preprocessor</li> <li>The Compilation Process</li> <li>GCC Command Options</li> <li>Open source tools to examine and adjust include dependencies</li> <li>include-what-you-use</li> <li>C++\u670d\u52a1\u7f16\u8bd1\u8017\u65f6\u4f18\u5316\u539f\u7406\u53ca\u5b9e\u8df5</li> <li>What are forward-declaration in C++</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/","title":"Dig into Apollo(6.0) Prediction","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#predictioncomponent","title":"PredictionComponent","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#proc","title":"Proc","text":"<p>This is a callback function for <code>PerceptionObstacle</code> Reader. If a new message is generated in channel, this function will execute.</p> <pre><code>if (FLAGS_use_lego) return ContainerSubmoduleProcess(perception_obstacles);\nreturn PredictionEndToEndProc(perception_obstacles); \n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#containersubmoduleprocess","title":"ContainerSubmoduleProcess","text":"<p>This is another prediction process which is the same as <code>PredictionEndToEnd</code>. This function is created for <code>Lego</code> architecture, whose communication system may have much difference with current <code>cyber</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#predictionendtoend","title":"PredictionEndToEnd","text":"<p>Almost all the work is doing in <code>MessageProcess</code> class.</p> <ul> <li>Transform all messages(perception/localization/planning/storytelling) to obstacle</li> <li><code>message_process.OnPerception</code></li> <li>Send the prediction message to channel</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#messageprocess","title":"MessageProcess","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#init","title":"Init","text":"<p>Initialize following classes with configures:</p> <ul> <li>ContainerManager</li> <li>EvaluatorManager</li> <li>PredictorManager</li> <li>PredictionMap</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#onperception","title":"OnPerception","text":"<p>Prediction module is driven by perception module, which means that once a frame of message is generated by perception, this function is called. The process is:</p> <ul> <li>use <code>ContainerProcess</code> function to process all messages</li> <li>insert all messages to a proto file for offline model training</li> <li>generate intension of obstacle with <code>evaluator</code> module</li> <li>generate trajectory of obstacle with <code>predictor</code> module</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#containerprocess","title":"ContainerProcess","text":"<p>This function :</p> <ul> <li>transforms messages from perception/localization/planning to abstract obstacles and</li> <li>prioritizes all obstacles to determine if the obstacle is need to consider and</li> <li>analyzes scenarios ego vehicle is in of:<ul> <li>Unknown</li> <li>Cruise</li> <li>Junction</li> </ul> </li> <li>builds junction(conditional) and cruise features and</li> <li>sets <code>Caution</code> priority of obstacle and</li> <li>sets the weight of way in a distance to<ul> <li>-20, for left turn</li> <li>-10, for right turn</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#obstacleprioritizer","title":"ObstaclePrioritizer","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#assignignorelevel","title":"AssignIgnoreLevel","text":"<p>This function set obstacle's priority of:</p> <ul> <li><code>Ignore</code>, which means it's no need to consider</li> <li><code>Normal</code>, which means it should be considered</li> </ul> <p>And if an obstacle's priority is <code>Normal</code>, it is either:</p> <ul> <li>in <code>scan box</code>, which is a rectangular centered on ego vehicle</li> <li>on lane</li> <li>near lane with the type of <code>pedestrian</code></li> <li>near junction</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#assigncautionlevel","title":"AssignCautionLevel","text":"<p>Set the obstacle priority to be <code>Caution</code> if the obstacle is close to ego vehicle and</p> <ul> <li>in junction(under junction scenario)</li> <li>the first obstacle in front of ego vehicle(searched within lane sequence, may not be unique)</li> <li>its lane sequence is on ego vehicle's planning trajectory</li> </ul> <p>And if enabled, this function will shrink the number of caution obstacles to a threshold according to distance.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#evaluatormanager","title":"EvaluatorManager","text":"<p><code>EvaluatorManager</code> class to manage all <code>Evaluator</code>s' lifecycle and </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#init_1","title":"Init","text":"<p>This is a initialization function to initialize:</p> <ul> <li>semantic map</li> <li>all evaluators with configures</li> <li>default evaluator types by obstacle's:<ul> <li>type</li> <li>priority(normal/caution)</li> <li>status(onlane/offlane/junction)</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#getevaluator","title":"GetEvaluator","text":"<p>You can get the pointer to evaluator by inputing evaluator's type. It's better to use unordered_map(hash) other than map(balanced binary tree) to accumulate the looking up process.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#run","title":"Run","text":"<p>This is the main process to <code>evaluate</code> an obstacle's intension(or trajectory) with multiple evaluators. According to <code>Single Responsibility</code> principle, I don't think it's a good idea to do these stuffs in a <code>manager</code> class.</p> <p>The function does:</p> <ul> <li>BuildObstacleIdHistoryMap</li> <li>DumpCurrentFrameEnv</li> <li>Evaluate obstacles with:<ul> <li>multiple thread according to <code>GroupObstaclesByObstacleIds</code> results</li> <li>single thread</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#buildobstacleidhistorymap","title":"BuildObstacleIdHistoryMap","text":"<p>Build a feature proto for each obstacle in current frame, every feature proto contains <code>max_num_frame</code>s with:</p> <ul> <li>id</li> <li>timestamp</li> <li>type</li> <li>position(x, y, z)</li> <li>theta(heading)</li> <li>length</li> <li>width</li> <li>is_trainable(bool, calculated with the function <code>IsTrainable</code>)</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#istrainable","title":"IsTrainable","text":"<p>A helper function defined in <code>evaluator_manager.cc</code>'s unnamed namespace. Return <code>false</code> if the obstacle:</p> <ul> <li>is ego vehicle</li> <li>has the priority of <code>Ignore</code></li> <li>is still</li> <li>is not vehicle</li> </ul> <p>otherwise, return true;</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#dumpcurrentframeenv","title":"DumpCurrentFrameEnv","text":"<p>Another helper fucntion in unnamed namespace, the main purpose of this is to insert all obstacles' history information to <code>FrameEnv</code> class for output.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#groupobstaclesbyobstacleids","title":"GroupObstaclesByObstacleIds","text":"<p>This function assigns thread id for each obstacle according to its priority(caution or normal). Each thread has <code>obstacle_num / thread_num</code> obstacle ids(tasks).</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#cyclistkeeplaneevaluator","title":"CyclistKeepLaneEvaluator","text":"<p>The <code>CyclistKeepLaneEvaluator</code> is simple and has only two probability values:</p> <ul> <li>1.0, if current lane id is equal to the lane id in lane sequence;</li> <li>0.0, if current lane id is not equal to the lane id in lane sequence.</li> </ul> <p>The lanes sequence is a list of lane id that covers the length:</p> \\[ D_{lane} = v_{0} * t_{max} + 0.5 * a_{max} * t_{max}^2 \\] <p>In equation,</p> <ul> <li>\\(D_{lane}\\) is the distance the lane sequance covers;</li> <li>\\(v_{0}\\) is current speed the obstacle has;</li> <li>\\(t_{max}\\) is the predicted trajectory duration, it's 8.0 in program;</li> <li>\\(a_{max}\\) is the maximum linear acceleration of vehicle, it's 4.0 in program;</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#pedestrianinteractionevaluator","title":"PedestrianInteractionEvaluator","text":"<p>This evaluator follows the paperSocial LSTM: Human Trajectory Prediction in Crowded Spaces. I guess that this evaluator is not completed, because:</p> <ul> <li>the input trajectory size is only one</li> <li>the social part of work is not implemented, and without the social, lstm has little advance over constant velocity model.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#costevaluator","title":"CostEvaluator","text":"<p><code>CostEvaluator</code> calculates the probability based on the distance between obstacle and lane boundary.</p> \\[ E_{l} = \\frac{W_{lane}}{2} - W_{l} \\] \\[ P_{cost} = \\frac{1}{1 + e^{-E_{l}}} \\] <p>In the equation:</p> <ul> <li>\\(E_{l}\\) is the distance from lane boundary to obstacle's location;</li> <li>\\(W_{lane}\\) is the width of lane;</li> <li>\\(W_{l}\\) is the lateral distance from lane reference line to obstacle's location;</li> <li>\\(P_{cost}\\) is the probability, calculated by a Sigmoid function.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#cruisemlpevaluator","title":"CruiseMLPEvaluator","text":"<p>The model has \\(23 + 5 * 9 + 8 + 20 * 4 = 146\\) inputs, \\(23\\) of which are obstacle features:</p> <ul> <li>\\(\\theta_{filter}\\), the average of the latest 5 heading values in an obstacle's history;</li> <li>\\(\\theta_{mean}\\), the average of all the heading values in an obstacle's history;</li> <li>\\(\\theta_{filter} - \\theta_{mean}\\);</li> <li>\\(\\theta_{diff} = \\theta_{curr} - \\theta_{prev}\\), where \\(\\theta_{curr}\\) is the average of the latest \\(0 \\to 4\\) heading values in an obstacle's history, \\(\\theta_{prev}\\) is the average of the latest \\(5 \\to 9\\) heading values;</li> <li>\\(\\theta_{diff}'\\), \\(\\theta'_{diff} = \\frac{\\theta_{diff}}{\\Delta_t}\\);</li> <li>\\(l_{filter}\\), the average of the latest 5 lateral distance values in an obstacle's history;</li> <li>\\(l_{mean}\\), the average of all the lateral distance values in an obstacle's history;</li> <li>\\(l_{filter} - l_{mean}\\);</li> <li>\\(l_{diff} = l_{curr} - l_{prev}\\), where \\(l_{curr}\\) is the average of the latest \\(0 \\to 4\\) lateral distance values in an obstacle's history, \\(l_{prev}\\) is the average of the latest \\(5 \\to 9\\) lateral distance values;</li> <li>\\(v\\), the velocity of the obstacle;</li> <li>\\(a\\), the acceleration of the obstacle;</li> <li>\\(j\\), the jerk of the obstacle;</li> <li>\\(D_{lb}\\), the distance from obstacle to left lane boundary;</li> <li>\\(D_{lb}' = \\frac{D_{first} - D_{last}}{dt}\\), where \\(D_{first}\\) is the first \\(D_{lb}\\) of the history, \\(D_{last}\\) is the last \\(D_{lb}\\) of the history, \\(dt\\) is the duration of the history;</li> <li>\\(D_{lb diff}' = D_{lb curr} - D_{lb prev}\\), where \\(D_{lb curr}\\) is the average of the latest \\(0 \\to 4\\) \\(D_{lb}\\) values in an obstacle's history, \\(D_{lb prev}\\) is the average of the latest \\(5 \\to 9\\) \\(D_{lb}\\) values;</li> <li>\\(D_{rb}\\), the distance from obstacle to right lane boundary;</li> <li>\\(D_{rb}' = \\frac{D_{first} - D_{last}}{dt}\\), where \\(D_{first}\\) is the first \\(D_{rb}\\) of the history, \\(D_{last}\\) is the last \\(D_{rb}\\) of the history, \\(dt\\) is the duration of the history;</li> <li>\\(D_{rb diff}' = D_{rb curr} - D_{rb prev}\\), where \\(D_{rb curr}\\) is the average of the latest \\(0 \\to 4\\) \\(D_{rb}\\) values in an obstacle's history, \\(D_{rb prev}\\) is the average of the latest \\(5 \\to 9\\) \\(D_{rb}\\) values;</li> <li><code>is_curr_lane_no_turn</code>, this value is \\(1\\) if current lane is <code>NoTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_left_turn</code>, this value is \\(1\\) if current lane is <code>LeftTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_right_turn</code>, this value is \\(1\\) if current lane is <code>RightTurn</code>, or it's \\(0\\);</li> <li><code>is_curr_lane_uturn</code>, this value is \\(1\\) if current lane is <code>UTurn</code>, or it's \\(0\\).</li> </ul> <p>And \\(5 * 9\\) features are obstacle history features, we search \\(5\\) frames of history, each frame has \\(9\\) fearures:</p> <ul> <li><code>is_curr_frame_has_hisotry</code>, the value is \\(1\\) if current frame and previous frame all have position/velocity/acceleration/velocity_heading information, otherwise it's \\(0\\);</li> <li>\\(x\\), in local coordinate system;</li> <li>\\(y\\), in local coordiante system;</li> <li>\\(x^{\\prime}\\);</li> <li>\\(y^{\\prime}\\);</li> <li>\\(x^{\\prime\\prime}\\);</li> <li>\\(y^{\\prime\\prime}\\);</li> <li>\\(\\theta_{v}\\), the heading of velocity;</li> <li>\\(\\theta_{v}^{\\prime}\\).</li> </ul> <p>\\(8\\) features are for forward and backward obstacles:</p> <ul> <li>\\(s_{forward}\\), the forward obstacle's distance;</li> <li>\\(l_{forward}\\), the forward obstacle's lateral distance;</li> <li>\\(L_{forward}\\), the forward obstacle's length;</li> <li>\\(v_{forward}\\), the forward obstacle's velocity;</li> <li>\\(s_{backward}\\), the backward obstacle's distance;</li> <li>\\(l_{backward}\\), the backward obstacle's lateral distance;</li> <li>\\(L_{backward}\\), the backward obstacle's length;</li> <li>\\(v_{backward}\\), the backward obstacle's velocity;</li> </ul> <p>And the other \\(20 * 4\\) features are lane features, we choose \\(20\\) points from the reference line, each of them has 4 features:</p> <ul> <li>\\(s_{point}\\), the lane point's distance;</li> <li>\\(l_{point}\\), the lane point's lateral distance;</li> <li>\\(\\psi_{point}\\): the heading of the lane point;</li> <li>\\(\\kappa_{point}\\): the curvature of the lane point.</li> </ul> <p>The result of <code>CruiseMLPEvaluator</code> is:</p> <ul> <li>the probability of an obstacle on a lane;</li> <li>the time of an obstacle to travel to reference line.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/dig_into_apollo_prediction/#junctionmlpevaluator","title":"JunctionMLPEvaluator","text":"<p>This model has 3 obstacle features:</p> <ul> <li>\\(v\\), the velocity of an obstacle;</li> <li>\\(a\\), the acceleration of an obstacle;</li> <li>\\(S_{junction}\\), the area of the junction.</li> </ul> <p>The other \\(12 * 5\\) features are junction features. We divide area aroud the vehicle to 12 regions and calculate the probability of each exit.  Each exit has 5 features:</p> <ul> <li><code>is_exit_exist</code>, it's 1 if the exit of junction exists;</li> <li>\\(x_{diff} / S_{junction}\\), \\(x_{diff}\\) is the deviation between obstacle and exit in x direction;</li> <li>\\(y_{diff} / S_{junction}\\), \\(y_{diff}\\) is the deviation between obstacle and exit in y direction;</li> <li>\\(L_{diff} / S_{junction}\\), \\(L_{diff}\\) is the distance between obstacle and exit;</li> <li>\\(\\theta_{diff}\\), the heading difference between obstacle and exit.</li> </ul> <p>And the output of the model is the probability of an obstacle to exit in 12 directions.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/","title":"Interacting Multiple Models(IMM) for Prediction","text":"<p>For self-driving vehicle, it's important to reliably predict the movement of traffic agents around ego car, such as vehicles, cyclists and pedestrians.</p> <p>We have many neural networks to predict obstacle on lane, but for obstacles which are not on lane, we now have poor method to predict them.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#current-predictor-for-obstacles-not-on-lane","title":"Current predictor for obstacles not on lane","text":"<p>If an obstacle(vehicle/bicycle/pedestrian) is not on lane, we use a <code>FreeMovePredictor</code> to predict its trajectory. <code>FreeMovePredictor</code> assumes that the obstacle always moves with constant acceleration, the state is:</p> \\[ \\begin{bmatrix} x \\\\ y \\\\ x^\\prime \\\\ y^\\prime \\\\ x^{\\prime\\prime} \\\\ y^{\\prime\\prime} \\end{bmatrix} \\] <p>and the transition matrix is:</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; t &amp; 0 &amp; 0.5 * t^2 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; t &amp; 0 &amp; 0.5 * t^2 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; t &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; t \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>The disadvantages are:</p> <ol> <li>We use the newest position and velocity from perception module, but the result is not so accurate.</li> <li>It performs not so good especially for vehicles.</li> </ol> <p>To solve these problems and imporve the prediction accuracy off lane, we use - constant velocity kalman filter to predict pedestrian; - interacting multiple model(IMM) of constant velocity(cv), constant acceleration(ca) and constant turn rate(ct) to predict vehicle and bicycle.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#kalman-filter","title":"Kalman filter","text":"<p>In 1960, R.E. Kalman published his famous paper describing a recursive solution to the discent-data linear filtering problem. Since that time, due in large part to advances in digital computing, the Kalman filter has been the subject of extensive research and application, particularly in the area of autonomous or assisted navigation.</p> <p>The Kalman filter is a set of mathematical equations that provides an efficient computational (recursive) means to estimate the state of a process, in a way that minimizes the mean of the squared error. The filter is very powerful in several aspects: it supports estimations of past, present, and even future states, and it can do so even when the precise nature of the modeled system is unknown.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#the-process-to-be-estimated","title":"The process to be estimated","text":"<p>The Kalman filter addresses the general problem of trying to estimate the state \\(x \\in \\Re^n\\) of a discrete-time controlled process that is governed by the linear stochastic difference equation:</p> \\[ x_k = Ax_{k-1} + Bu_{k-1} + w_{k-1} \\tag1 \\] <p>with a measurement \\(z \\in \\Re^m\\) that is:</p> \\[ z_k = Hx_k + v_k \\tag2 \\] <ul> <li>The \\(n * n\\) matrix \\(A\\) is <code>transition matrix</code> which relates the state at the previous time step \\(k - 1\\) to the state at the current step \\(k\\), in the absence of either a driving function or process noise. Note that in practice A might change with each time step, but here we assume it is constant.</li> <li>The \\(n * l\\) matrix \\(B\\) is <code>control matrix</code> which relates the optional control input \\(u \\in \\Re^l\\) to the state \\(x\\).</li> <li>The \\(m * n\\) matrix \\(H\\) is <code>measurement matrix</code> which relates the state to the measurement \\(z_k\\). In practice \\(H\\) might change with each time step ore measurement, but we assume it is constant.</li> </ul> <p>The random variable \\(w_k\\) and \\(v_k\\) represent the process and measurement noise. They are assumed to be independent(of each other), white and with normal probability distributions:</p> \\[ p(w) \\sim N(0, Q) \\tag3 \\] \\[ p(v) \\sim N(0, R) \\tag4 \\] <p>where the \\(Q\\) is <code>process noise covariance</code> and R is <code>measurement noise convariance</code>, they might change with each time step or measurement, but we assume that they are constant.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#the-computational-origin-of-the-filter","title":"The computational origin of the filter","text":"<p>We define \\(\\hat{x}_k^- \\in \\Re^n\\) to be our <code>priori state</code> estimate at step \\(k\\) given knowledge of the process prior to step \\(k\\) and \\(\\hat{x}_k \\in \\Re^n\\) to be our <code>posteriori state</code> estimate at step \\(k\\) given measurement \\(z_k\\). We can then define a <code>priori</code> and a <code>posteriori</code> estimate errors as:</p> \\[ e_k^- \\equiv x_k - \\hat{x}_k^- \\tag5 \\] \\[ e_k \\equiv x_k - \\hat{x}_k \\tag6 \\] <p>The <code>priori</code> estimate error covariance is then:</p> \\[ P_k^- = E[e_k^-(e_k^-)^T] \\tag7 \\] <p>and the <code>posteriori</code> estimate error covariance is:</p> \\[ P_k = E[e_ke_k^T] \\tag8 \\] <p>In deriving the equation for the Kalman filter, we begin with the goal of finding an equation that compute an <code>posteriori</code> state estimate \\(\\hat{x}_k\\) as a linear combination of the <code>priori</code> estimate \\(\\hat{x}_k^-\\) and a weighted difference between an actual measurement \\(z_k\\) and a measurement prediction \\(H\\hat{x}_k^-\\) as shown below:</p> \\[ \\hat{x}_k = \\hat{x}_k^- + K(z_k - H\\hat{x}_k^-) \\tag9 \\] <p>The difference \\((z_k - H\\hat{x}_k^-)\\) is called the measurement <code>innovation</code> or <code>residual</code>. The residual reflects the discrepancy between the predicted measurement \\(H\\hat{x}_k^-\\) and the actual measurement \\(z_k\\). A residual of zero means that the two are in complete agreement.</p> <p>The \\(n*m\\) matrix \\(K\\) is chosen to be the <code>gain</code> or <code>blending factor</code> that minimizes the <code>posteriori</code> error covariance in (8). </p> <p>This minimization can be accomplished by </p> <ol> <li>substituting (9) into the (6) and substituting that into (8);</li> <li>performing the indicated expectations;</li> <li>taking the derivative of the trace of the result with respcet to \\(K\\),</li> <li>setting the result equal to \\(0\\) and then solving for \\(K\\).</li> </ol> <p>One form of the resulting \\(K\\) that minimizeds (8) is:</p> \\[ \\begin{align} K_k &amp;= P_k^-H^T(HP_k^-H^T + R)^{-1} \\\\\\\\     &amp;= \\frac{P_k^-H^T}{HP_k^-HT + R} \\end{align} \\tag{10} \\] <p>Looking at (10) we see that as the measurement error covariance \\(R \\to 0\\), the gain \\(K\\) weights the residual more heavily. Specifically,</p> \\[ \\lim_{R_k \\to 0}K_k = H^-1 \\tag{11} \\] <p>On the other hand, as the <code>priori</code> estimate error convariance \\(P_k^- \\to 0\\), the gain \\(K\\) weights the residual less heavily. Specially,</p> \\[ \\lim_{P_0^- \\to 0} K_k = 0 \\tag{12} \\] <p>Another way of thinking about the weighting by \\(K\\) is that as the measurement error covariance \\(R \\to 0\\), the actual measurement \\(z_k\\) is <code>trusted</code> more and more, while the predicted measurement \\(H\\hat{x}_k^-\\) is trusted less and less. On the other hand, as the <code>priori</code> estimate error covariance \\(P_k^- \\to 0\\) the actual measurement \\(z_k\\) is trusted less and less, while the predicted measurement \\(H\\hat{x}_k^-\\) is trusted more and more.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#the-discrete-kalman-filter-algorithm","title":"The discrete kalman filter algorithm","text":"<p>The Kalman filter estimate a process by using a form of feedback control: the filter estimates the process state at some time and then obtains feedback in the form of (noisy) measurement. As such, the equations for the Kalman filter falls into two groups:</p> <ul> <li><code>time update</code>(predict) equations;</li> <li><code>measurement update</code>(correct) equations.</li> </ul> <p>The <code>time update</code> equations are responsible for projecting forward(in time) the current state and error covariance estimates to obtain the <code>priori</code> estimates for the next time step.</p> <p>The <code>measurement update</code> equations are responsible for the feedback, incorporating a new measurement into the <code>priori</code> estimate to obtain an improved <code>posteriori</code> estimate.</p> <p>The final estimation algorithm resembles that of a <code>predictor-corrector</code> algorithm for solving numerical problems: <pre><code>           Time Update -----&gt; Measurement Update\n            (Predict)             (Correct)\n                ^                     |\n                |                     |\n                -----------------------\n</code></pre></p> <p>The specific equations for the <code>time update</code> are:</p> \\[ \\hat{x}_k^- = A \\hat{X}_{k-1} + B u_{k-1} \\tag{13} \\] \\[ P_k^- = AP_{k-1}A^T + Q \\tag{14} \\] <p>where:</p> <ul> <li>\\(\\hat{X}_{k-1}\\) is the <code>posteriori</code> state from time step \\(k-1\\);</li> <li>\\(u_{k-1}\\) is the control from time step \\(k-1\\);</li> <li>\\(\\hat{x}_k^-\\) is the <code>priori</code> state from time step \\(k\\);</li> <li>\\(P_{k-1}\\) is the <code>posteriori</code> estimate error covariance from time step \\(k-1\\);</li> <li>\\(P_k^-\\) is the <code>priori</code> estimate error covariance from time step \\(k\\).</li> </ul> <p>The specific equations for the <code>measurement update</code> are:</p> \\[ K_k = P_k^-H^T(HP_k^-H^T + R)^{-1} \\tag{15} \\] \\[ \\hat{x}_k = \\hat{x}_k^- + K_k(z_k - H\\hat{x}_k^-) \\tag{16} \\] \\[ P_k = (I - K_kH)P_k^- \\tag{17} \\] <p>where:</p> <ul> <li>\\(K_k\\) is the <code>gain</code> from time step \\(k\\);</li> <li>\\(z_k\\) is the measurement variable from time step \\(k\\);</li> <li>\\(\\hat{x}_k\\) is the <code>posteriori</code> state from time step \\(k\\);</li> <li>\\(P_k\\) is the <code>posteriori</code> estimate error covariance from time step \\(k\\).</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#filter-prameters-and-tunning","title":"Filter prameters and tunning","text":"<p>In the actual implementation of the filter, the measurement noise covariance \\(R\\) is usually measured prior to operation of the filter. Measuring the measurement error covariance \\(R\\) is generally practical (possible) because we need to be able to measure the process anyway (while operating the filter) so we should generally be able to take some off-line sample measurements in order to determine the variance of the measurement noise.</p> <p>The determination of the process noise covariance \\(Q\\) is generally more difficult as we typically do not have the ability to directly observe the process we are estimating. Sometimes a relatively simple (poor) process model can produce acceptable results if one \u201cinjects\u201d enough uncertainty into the process via the selection of \\(Q\\). Certainly in this case one would hope that the process measurements are reliable.</p> <p>In either case, whether or not we have a rational basis for choosing the parameters, often times superior filter performance (statistically speaking) can be obtained by <code>tuning</code> the filter parameters \\(Q\\) and \\(R\\). The tuning is usually performed off-line, frequently with the help of another (distinct) Kalman filter in a process generally referred to as <code>system identification</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#dynamic-model","title":"Dynamic model","text":"<p>The motion of a target object(pedestrian or vehicle) can be modeled as:</p> <ul> <li>Moving with constant speed(CV) in straight;</li> <li>Moving with constant acceleration(CA) in straight;</li> <li>Moving with constant turn(CT).</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#cv-model","title":"CV model","text":"<p>For this model, the states under consideration are:</p> \\[ X = \\begin{bmatrix} x \\\\\\\\ \\dot{x} \\\\\\\\ y \\\\\\\\ \\dot{y} \\end{bmatrix} \\] <p>where:</p> <ul> <li>\\(x\\) is the position in longitudinal component;</li> <li>\\(y\\) is the position in lateral component;</li> <li>\\(\\dot{x}\\) is the velocity in x-direction;</li> <li>\\(\\dot{y}\\) is the velocity in y-direction;</li> </ul> <p>For this model, state transition matrix is:</p> \\[ A_{CV} =  \\begin{bmatrix}  1 &amp; dt &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; dt \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#ca-model","title":"CA model","text":"<p>For this model, the states under consideration are:</p> \\[ X = \\begin{bmatrix}  x \\\\ \\dot{x} \\\\ \\ddot{x} \\\\ y \\\\ \\dot{y} \\\\ \\ddot{y}  \\end{bmatrix} \\] <p>where:</p> <ul> <li>\\(x\\) is the position in longitudinal component;</li> <li>\\(y\\) is the position in lateral component;</li> <li>\\(\\dot{x}\\) is the velocity in x-direction;</li> <li>\\(\\dot{y}\\) is the velocity in y-direction;</li> <li>\\(\\ddot{x}\\) is the acceleration in x-direction;</li> <li>\\(\\ddot{y}\\) is the acceleration in y-direction;</li> </ul> <p>For this model, state transition matrix is:</p> \\[ A_{CA} =  \\begin{bmatrix}  1 &amp; dt &amp; \\frac{dt^2}{2} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; dt &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; dt &amp; \\frac{dt^2}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; dt \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#ct-model","title":"CT model","text":"<p>For this model, the states under consideration are:</p> \\[ X = \\begin{bmatrix}  x \\\\ \\dot{x} \\\\ y \\\\ \\dot{y} \\\\ \\dot{\\theta} \\\\ \\end{bmatrix} \\] <p>where:</p> <ul> <li>\\(x\\) is the position in longitudinal component;</li> <li>\\(y\\) is the position in lateral component;</li> <li>\\(\\dot{x}\\) is the velocity in x-direction;</li> <li>\\(\\dot{y}\\) is the velocity in y-direction;</li> <li>\\(\\dot{\\theta}\\) is the yawrate of obstacle;</li> </ul> <p>For this model, state transition matrix is:</p> \\[ A_{CT} =  \\begin{bmatrix}  1 &amp; \\frac{sin(\\dot{\\theta} * dt)}{\\dot{\\theta}}&amp; 0 &amp; -\\frac{1-cos(\\dot{\\theta} * dt)}{\\dot{\\theta}}&amp; 0 \\\\ 0 &amp; cos(\\dot{\\theta} * dt)&amp; 0 &amp; -sin(\\dot{\\theta} * dt)&amp; 0 \\\\ 0 &amp; \\frac{1-cos(\\dot{\\theta} * dt)}{\\dot{\\theta}} &amp; 1 &amp; \\frac{sin(\\dot{\\theta} * dt)}{\\dot{\\theta}}&amp; 0 \\\\ 0 &amp; sin(\\dot{\\theta} * dt)&amp; 0 &amp; cos(\\dot{\\theta} * dt)&amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#simulation-for-kalman-filter","title":"Simulation for kalman filter","text":"<p>To check if the algorithm is correct, we build the equation of kalman in python. For details, visit imm</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#kalman-filter_1","title":"Kalman filter","text":"<pre><code>class kalman_filter:\n    def __init__(self, A, B, H, Q, R):\n        self.A = A\n        self.B = B\n        self.H = H\n        self.Q = Q\n        self.R = R\n\n        self.U = np.zeros((B.shape[0], 1))\n        self.X = np.zeros((A.shape[0], 1))\n        self.X_pre = self.X\n        self.P = np.zeros(A.shape)\n        self.P_pre = self.P\n\n    def filt(self, Z):\n        self.__predict()\n        self.__update(Z)\n        return self.X\n\n    def __predict(self):\n        self.X_pre = np.dot(self.A, self.X) + np.dot(self.B, self.U)\n        self.P_pre = np.dot(np.dot(self.A, self.P), self.A.T) + self.Q\n\n    def __update(self, Z):\n        K = np.dot(np.dot(self.P_pre, self.H.T),\n                   np.linalg.inv(np.dot(np.dot(self.H, self.P_pre), self.H.T) +\\\n                                 self.R))\n        self.X = self.X_pre + np.dot(K, Z - np.dot(self.H, self.X_pre))\n        self.P = self.P_pre - np.dot(np.dot(K, self.H), self.P_pre)\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#constant-velocity-model","title":"Constant velocity model","text":"<p><pre><code>def kf_cv():\n    A = np.array([\n            [1., dt, 0., 0.],\n            [0., 1., 0., 0.],\n            [0., 0., 1., dt],\n            [0., 0., 0., 1.]\n            ])\n    B = np.eye(A.shape[0])\n    H = np.array([\n        [1., 0., 0., 0.],\n        [0., 1., 0., 0.],\n        [0., 0., 1., 0.],\n        [0., 0., 0., 1.]\n        ])\n    Q = np.eye(A.shape[0])\n    R = np.eye(4) * 10. ** 2\n\n    kf = kalman_filter(A, B, H, Q, R)\n    return kf\n</code></pre> The simulation result: </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#constant-acceleration-model","title":"Constant acceleration model","text":"<p><pre><code>def kf_ca():\n    A = np.array([\n            [1., dt, 0.5 * dt**2, 0., 0., 0.],\n            [0., 1., dt, 0., 0., 0.],\n            [0., 0., 1., 0., 0., 0.],\n            [0., 0., 0., 1., dt, 0.5 * dt**2],\n            [0., 0., 0., 0., 1., dt],\n            [0., 0., 1., 0., 0., 1.]\n            ])\n    B = np.eye(A.shape[0])\n    H = np.array([\n        [1., 0., 0., 0., 0., 0.],\n        [0., 1., 0., 0., 0., 0.],\n        [0., 0., 0., 1., 0., 0.],\n        [0., 0., 0., 0., 1., 0.]\n        ])\n    Q = np.eye(A.shape[0])\n    R = np.eye(4) * 150\n\n    kf = kalman_filter(A, B, H, Q, R)\n    return kf\n</code></pre> The simulation result: </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#constant-turn-rate-model","title":"Constant turn rate model","text":"<pre><code>def kf_ct():\n    dtheta = math.pi / 180 * 15\n    theta = dtheta * dt\n    A = np.array([\n         [1., math.sin(theta)/dtheta, 0., -(1 - math.cos(theta))/dtheta, 0.],\n         [0., math.cos(theta), 0., -math.sin(theta), 0.],\n         [0., (1 - math.cos(theta)) / dtheta, 1., math.sin(theta)/dtheta, 0.],\n         [0., math.sin(theta), 0., math.cos(theta), 0.],\n         [0., 0., 0., 0., 1.],\n         ])\n    B = np.eye(A.shape[0])\n    H = np.array([\n        [1., 0., 0., 0., 0.],\n        [0., 1., 0., 0., 0.],\n        [0., 0., 1., 0., 0.],\n        [0., 0., 0., 1., 0.]\n        ])\n    Q = np.eye(A.shape[0])\n    R = np.eye(4) * 150\n    return kalman_filter(A, B, H, Q, R)\n</code></pre> <p>The simulation result: </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#interacting-multiple-model","title":"Interacting multiple model","text":"<p>The IMM estimator was originally proposed by Bloom in An efficient filter for abruptly changing systems. It is one of the most cost-effective class of estimators for a single maneuvering target. The IMM has been receiving special attention in the last few years, due to its capability of being combined with other algorithms to resolve the multiple target tracking problem.</p> <p>The main idea of imm is the identification and transition between different models: at every tracking moment, by setting weight-coefficient and probability for each filter, and finally weighting calculation, we obtain the current optimal estimation state.</p> <p></p> <p>Assume that we have \\(r\\) models, each model's state equation:</p> \\[ X_{k+1} = A^jX_{k} + w^j_{k} \\] <p>where</p> <ul> <li>\\(j \\in [1, r]\\), \\(X\\) is state vector,</li> <li>\\(A_j\\) is transition matrix,</li> <li>\\(w\\) is noise with the variance of \\(Q\\).</li> </ul> <p>The measurement equation is:</p> \\[ Z_{k} = H^jX_{k} + v^j_k \\] <p>where </p> <ul> <li>\\(Z\\) is measurement vector,</li> <li>\\(H\\) is measurement matrix,</li> <li>\\(v\\) is the noise with the variance of \\(R\\).</li> </ul> <p>The transition matrix between models can be:</p> \\[ P =  \\begin{bmatrix}  p_{11} &amp; \\cdots &amp; p_{1r} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ p_{r1} &amp; \\cdots &amp; p_{rr} \\end{bmatrix} \\] <p>and probability vector of each model is:</p> \\[ U = \\begin{bmatrix} u_1 &amp; \\cdots &amp; u_{r} \\end{bmatrix} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#step1-input-mix","title":"Step1: Input mix","text":"\\[ X^{0j}_{k-1|k-1} = \\sum_{i=1}^{r}{X^j_{k-1|k-1}\\mu^{ij}_{k-1|k-1}} \\] \\[ P^{0j}_{k-1|k-1} = \\sum_{i=1}^{r}{\\mu^{ij}_{k-1|k-1}[P^j_{k-1|k-1} + (X^j_{k-1|k-1}) - X^{0j}_{k-1|k-1}][P^j_{k-1|k-1} + (X^j_{k-1|k-1}) - X^{0j}_{k-1|k-1}]^T} \\] <p>where</p> <ul> <li>\\(X^j_{k-1|k-1}\\) is the optimal state estimate,</li> <li>\\(P^j_{k-1|k-1}\\) is the optimal state estimate;</li> </ul> \\[ \\mu^{ij}_{k-1|k-1} = \\frac{p_{ij}U^j_{k-1}}{C^j} \\] <p>and</p> \\[ C^j = \\sum_{i=1}^r{p_{ij}U^j_{k-1}} \\] <p>where</p> <ul> <li>\\(i,j = 1, \\cdots, r\\);</li> <li>\\(\\mu_{k-1}^j\\) is the probabiltiy of model \\(j\\) at time \\(k-1\\);</li> <li>\\(p_{ij}\\) is the probability of a transition from model \\(i\\) to \\(j\\).</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#step2-model-estimate","title":"Step2: Model estimate","text":"<p>It's the same as normal kalman filter.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#step3-probability-update","title":"Step3: Probability update","text":"<p>With the use of the latest measurement \\(z_k\\), the likelihood function value of the model \\(j\\) at time \\(k\\) is given by:</p> \\[ \\Lambda_k^j = N(z_k;z_{k|k-1}^j,v_k^j) = \\begin{vmatrix} 2\\pi S_k^j\\end{vmatrix}^{-\\frac{n_z}{2}} \\cdot e^{-\\frac{1}{2}(z_k - z_{k|k-1}^j)^T S_k^j (z_k-z_{k|k-1}^j)} \\] <p>where:</p> <ul> <li>\\(v_k^j = z_k-z_{k|k-1}^j\\) denotes the filter residual;</li> <li>\\(S_k^j\\) denotes the innovation convariance;</li> <li>\\(n_z\\) denotes the dimension of measurement vector.</li> </ul> <p>The model probability \\(\\mu_{k|k}^j\\) at time \\(k\\) is computed by the following equation:</p> \\[ \\mu_{k|k}^j = \\frac{\\Lambda_k^j C_j}{C} \\] <p>where:</p> \\[ C = \\sum_{i=1}^r{\\Lambda_k^jCi} \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#step4-output-integration","title":"Step4: Output Integration","text":"<p>Finally, the state estimate \\(\\hat{x}_{k|k}\\) and corresponding covariance \\(P_{k|k}\\) are obtained by the model-conditional estimates and covariances of different models:</p> \\[ \\hat{x}_{k|k} = \\sum_{j=1}^r{\\mu_{k|k}^j\\hat{x}_{k|k}^j} \\] \\[ P_{k|k} = \\sum_{j=1}^r{\\mu_{k|k}^j}(P_{k|k}^j + (\\hat{x}_{k|k}^j-\\hat{x}_{k|k})(\\hat{x}_{k|k}^j-\\hat{x}_{k|k})^T) \\]"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#simulation-for-imm","title":"Simulation for imm","text":"<p>To volidate the performance of the proposed algorithm, a simulation in python is operated.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#imm-algorithm","title":"Imm algorithm","text":"<pre><code>class Imm:\n    def __init__(self, models, model_trans, P_trans, U_prob):\n        self.models = models\n        self.P_trans = P_trans\n        self.U_prob = U_prob\n        self.model_trans = model_trans\n\n        self.mode_cnt = len(models)\n        self.dim = models[0].A.shape[0]\n\n    def filt(self, Z):\n        # setp1: input mix\n        u = np.dot(self.P_trans.T, self.U_prob)\n        mu = np.zeros(self.P_trans.shape)\n        for i in range(self.mode_cnt):\n            for j in range(self.mode_cnt):\n                mu[i, j] = self.P_trans[i, j] * self.U_prob[i, 0] / u[j, 0];\n\n        X_mix = [np.zeros(model.X.shape) for model in self.models]\n\n        for j in range(self.mode_cnt):\n            for i in range(self.mode_cnt):\n                X_mix[j] += np.dot(self.model_trans[j][i],\n                                   self.models[i].X) * mu[i, j]\n\n        P_mix = [np.zeros(model.P.shape) for model in self.models]\n        for j in range(self.mode_cnt):\n            for i in range(self.mode_cnt):\n                P = self.models[i].P + np.dot((self.models[i].X - X_mix[i]),\n                                              (self.models[i].X - X_mix[i]).T)\n                P_mix[j] += mu[i, j] * np.dot(np.dot(self.model_trans[j][i], P),\n                                              self.model_trans[j][i].T)\n        ## step2: filt\n        for j in range(self.mode_cnt):\n            self.models[j].X = X_mix[j]\n            self.models[j].P = P_mix[j]\n            self.models[j].filt(Z)\n\n        ### step3: update probability\n        for j in range(self.mode_cnt):\n            mode = self.models[j]\n            D = Z - np.dot(mode.H, mode.X_pre)\n            S = np.dot(np.dot(mode.H, mode.P_pre), mode.H.T) + mode.R\n\n            Lambda = (np.linalg.det(2 * math.pi * S)) ** (-0.5) * \\\n                     np.exp(-0.5 * np.dot(np.dot(D.T, np.linalg.inv(S)), D))\n            self.U_prob[j, 0] = Lambda * u[j, 0]\n        self.U_prob = self.U_prob / np.sum(self.U_prob)\n\n        return self.U_prob\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#input","title":"Input","text":"<p>To test the algorithm performance, following curves are used:</p> <ul> <li>generated constant velocity curve + constant turn rate curve + constant acceleration;</li> <li>vehicle pose data from real autonomous car;</li> <li>vehicle pose data from argoverse dataset.</li> </ul> <p>\\(cv + ct + ca\\) curve is generated with:</p> <pre><code>def cv_z(x0, dx, y0, dy, dt, cnt):\n    Z = [np.array([\n            [x0],\n            [dx],\n            [y0],\n            [dy]\n        ])]\n    for i in np.arange(1, cnt):\n        Z.append(np.array([\n            [Z[i-1][0, 0] + dx * dt],\n            [dx],\n            [Z[i-1][2, 0] + dy * dt],\n            [dy]\n            ]))\n\n    return Z\n\ndef ca_z(x0, dx, ddx, y0, dy, ddy, dt, cnt):\n    Z = [np.array([\n            [x0],\n            [dx],\n            [y0],\n            [dy]\n        ])]\n    for i in np.arange(1, cnt):\n        Z.append(np.array([\n            [Z[i-1][0,0] + Z[i-1][1,0] * dt + 0.5 * ddx * dt**2],\n            [Z[i-1][1,0]+ ddx * dt],\n            [Z[i-1][2,0] + Z[i-1][3,0] * dt + 0.5 * ddy * dt**2],\n            [Z[i-1][3,0]+ ddy * dt]\n            ]))\n\n    return Z\n\ndef ct_z(x0, dx, y0, dy, dtheta, dt, cnt):\n    Z = [np.array([\n            [x0],\n            [dx],\n            [y0],\n            [dy]\n        ])]\n    theta = math.atan2(dy, dx)\n    v = math.hypot(dx, dy)\n    for i in np.arange(1, cnt):\n        theta += dtheta * dt\n        Z.append(np.array([\n            [Z[i-1][0, 0] + v * dt * math.cos(theta)],\n            [v * math.cos(theta)],\n            [Z[i-1][2, 0] + v * dt * math.sin(theta)],\n            [v * math.sin(theta)]\n            ]))\n\n    return Z\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#simulation-result","title":"Simulation result","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#cv-ct-ca","title":"CV + CT + CA","text":"<p>From the figure we can see:</p> <ul> <li>the algorithm can figure out three models correctly;</li> <li>it's more difficult to figure out the \\(CA\\) model, because the acceleration information is not in the observation vector;</li> <li>it's not easy to distinguish \\(CV\\) and \\(CA\\) model.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#real-vehicle-data","title":"Real vehicle data","text":"<p>The result is not so good, because its characteristics do not fit any model.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#argoverse-data","title":"Argoverse data","text":"<p> I choose a turning vehicle's path and add it's velocity information, we can say:</p> <ul> <li>it takes 2.5s to predict the right model;</li> <li>after test, I found that if we set the inital probability a more precise number, it can predict the right model more quickly(within 0.5s).</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#generate-prediction-trajectory","title":"Generate prediction trajectory","text":"<p>With the right model probabilities, we can predict the obstacle's trajectory in longer time. We use the probabilities and three models to generate trajectory:</p> <p></p> <p>The red line is the real trajectory of a vehicle, and the green line is predicted trajectory every time.</p> <p>We can see that:</p> <ul> <li>At the beginning it can not figure out the right model, so it mixes them up to generate trajectory;</li> <li>After figure out the CT model, the trajectory is getting closer to the real trajectory.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#cpp-class-diagram","title":"Cpp class diagram","text":"<p>After testing the correctness of the algorithm, we designed the class diagram of the code: </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#lrt-class","title":"LRT class","text":"<p>We should create a filter(kalman filter or imm) for every obstacle, it's important to construct and deconstruct the filters dynamiclly.</p> <p>We already have a <code>LRU</code>(Latest Recently Used) class, which will destroy the oldest node when it's capacity is to reach maximum. But it has the following problems:</p> <ul> <li>If the capacity is too big and the the number of filters we used is small, <code>LRU</code> will waste much memory space;</li> <li>If the capacity is too small and the the number of filters we used is big, <code>LRU</code> will destroy some filters in use, which hurts the prediction module.</li> </ul> <p>So we add the time limit to <code>LRU</code> structure and names it <code>LRT</code>. If a node is not used for a given time, it will be destroyed.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#kalmanfilter","title":"KalmanFilter","text":"<p>To fit with different filter parameters, we use a template to generate instance.</p> <pre><code>//!\n//! \\class KalmanFilter\n//! \\brief Implement a discrete-time Kalman Filter\n//!        https://www.cs.unc.edu/~welch/media/pdf/kalman_intro.pdf\n//! \n//! \\param T DataType(double/float/int, etc.)\n//! \\param Xn dimension of state\n//! \\param Zn dimension of observations\n//! \\param Un dimension of controls\n//!\ntemplate &lt;typename T, unsigned int Xn, unsigned int Zn, unsigned int Un&gt;\nclass KalmanFilter {\n public:\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/imm-for-prediction/#immkf","title":"ImmKf","text":"<p>To fit with different kalman filters, we use a parameter pack to input all filters.</p> <pre><code>//!\n//! \\class ImmKf\n//! \\brief Implement a discrete-time Imm with kalman filter\n//!        https://sci-hub.do/10.1109/cdc.1984.272089#\n//! \n//! \\param T DataType(double/float/int, etc.)\n//! \\param Kf Kalman filters\n//! \\param Zn dimension of observations\n//!\n[[deprecated]]\ntemplate&lt;typename T, std::size_t Zn, typename... Kf&gt;\nclass ImmKf {\n  using TupleType = typename std::tuple&lt;Kf...&gt;;\n  using Mat1xN = Eigen::Matrix&lt;T, 1, std::tuple_size&lt;TupleType&gt;::value&gt;;\n  using MatNxN = Eigen::Matrix&lt;T, std::tuple_size&lt;TupleType&gt;::value,\n                               std::tuple_size&lt;TupleType&gt;::value&gt;;\n  using MatZx1 = Eigen::Matrix&lt;T, Zn, 1&gt;;\n public:\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/visualizer/","title":"The Design of A Visualization Tool for Autonomous Vehicle Developers(TODO)","text":"<p>This is a tool to visualize map and agents for self-driving developers. It's based on two libraries:</p> <ul> <li>Dear ImGui</li> <li>ImPlot</li> </ul> <p>It works with <code>Apollo Cyber</code>, and support:</p> <ul> <li>Show hdmap(apollo) lane boundaries and reference line with ids;</li> <li>Show agents(ego vehicle and obstacles, extract from apollo channel) with history/shape/futures(planning or prediction trajectory);</li> <li>Show real time plot of vlaues(extracted from apollo channel)</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Prediction/visualizer/#architecture","title":"Architecture","text":"<p>The <code>.png</code> picture is created by Draw.io you can re-edit the pic with that.</p> <p></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/","title":"A star","text":"<p>In computer science, <code>A*</code>(pronounced A-Star) is a computer algorithm that is widely used in pathfinding and graph traversal, which is the process of finding a path between multiple points, called \"nodes\". It enjoys widespread use due to its performance and accuracy. Peter Hart, Nils Nilsson and Bertram Raphael of Stanford Research Institude(now SRI International) first published the algorithm in 1968. It can be seen as an extension of Edsger Dijkstra's 1959 algorithm. <code>A*</code> achieves better performance by using heuristics to guide its search.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#problem","title":"Problem","text":"<p>In real world, we often want to find a path from one location to another, it may be the shortest one or the most suitable one. Movement for a single object seems easy, pathfinding is complex, but pathfinder let you plan a path before you meet the obstacles, then you can move the short or suitable path. Path planning generally is slow, but gives better results.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#assumption","title":"Assumption","text":"<p>To find the path, we can sue a <code>graph search</code> algorithm, which works when the map is represented as a graph.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#input","title":"Input","text":"<p>Graph search algorithms take a <code>graph</code> as input. A graph is a set of locations(\"node\") and the connections(\"edge\") between them, like this:</p> <p></p> <p>Pathfinder doesn't see anything else, it only see the graph.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#output","title":"Output","text":"<p>The path found by pathfinder is made of <code>graph nodes and edges</code>. It tells you to move from one location to another, but it can't tell you how. You have to decide whether a graph edge you got means walking in a straight line or running along a curved path.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#early-solutions","title":"Early Solutions","text":"<p>There are lots of algorithms that run on graphs and find the path, the simplest is \"Breadth First Search\".</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#breadth-first-search","title":"Breadth First Search","text":"<p>Breadth First Search explores equally in all directions. The key idea for this algorithm is that we keep track of an expanding ring called <code>frontier</code>. On a grid, this process is somtimes called \"flood fill\", but the same technique works for non-grids. </p> <p>The main process is:</p> <p>Loop:</p> <ul> <li>Pick and remove a <code>location</code> from the <code>frontier</code>;</li> <li>Expand it by looking at its <code>neighbors</code>, any neighbors we haven't visited yet we add to the <code>frontier</code>, and also to the <code>visited</code> set;</li> <li>if <code>frontier</code> is empty or reach the target node, break.</li> </ul> <p>So far we assume that every step has the same <code>cost</code>, however, in some scenarios there are difference costs for different types of movements. For example, a diagonal movement on a grid costs more than axial movement. We'd like the pathfinder to take these costs into account. For this purpose, we use <code>Dijkstra's Algorithm</code></p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#dijkstras-algorithm","title":"Dijkstra's Algorithm","text":"<p>Dijkstra's Algorithm tracks movement cost from the start location. The pathfinder may visit a location multiple times, with different costs. Instead of visit every node in <code>frontier</code>, we visit the lowest cost node at the beginning of the loop. The main process is below:</p> <ul> <li>Create a priority queue <code>frontier</code> and put the init node into <code>frontier</code>.</li> <li>Loop:<ul> <li>choose the lowest cost node from <code>frontier</code></li> <li>if <code>frontier</code> is empty or current node is goal node, break;</li> <li>get current node's neighbours, for each neighbour:<ul> <li>if the neighbour node has not been visited yet or its cost is lower than current node:<ul> <li>put the neighbour node into <code>frontier</code></li> <li>set the cost so far as the neighbour node's cost</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p> <p>With Breadth First Search and Dijkstra's Algorithm, the frontier expands in all directions. This is a reasonable choice if you only need to find a location and don't care about the time. However, a common case is that we want to find the path not only correctly but also quickly. Here comes the <code>Greedy Best First Search</code>.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#greedy-best-first-search","title":"Greedy Best First Search","text":"<p>Greedy Best First Search use the estimated distance to the goal for priority queue ordering. The location closet to the goal will be explored first. Its process can be described as:</p> <ul> <li>Create a priority queue <code>frontier</code> and put the init node into <code>frontier</code>.</li> <li>Loop:<ul> <li>choose the node with lowest distance to goad node from <code>frontier</code></li> <li>if <code>frontier</code> is empty or current node is goal node, break;</li> <li>get current node's neighbours, for each neighbour:<ul> <li>if the neighbour node has not been visited yet: <ul> <li>put the neighbour node into <code>frontier</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p> <p>The algorithm is really fast, but in complex map it may not find the shortest path, shown as below. </p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#a-algorithm","title":"A* Algorithm","text":"<p>Dijkstra\u2019s Algorithm works well to find the shortest path, but it wastes time exploring in directions that aren\u2019t promising. Greedy Best First Search explores in promising directions but it may not find the shortest path. The A* algorithm uses both the actual distance from the start and the estimated distance to the goal.</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#evaluation-function","title":"Evaluation Function","text":"<p>In this algorithm, we use \\(g(n)\\) to describe the cost from initial node to \\(n\\) node, \\(h(n)\\) describes the estimated cost between any node \\(n\\) and the target node, and the total cost is: $$ f(n) = g(n) + h(n) $$</p>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#process","title":"Process","text":"<p>The <code>A* Algorithm</code> uses a <code>open lsit</code> and a <code>close list</code>, <code>open list</code> stores nodes haven't been calculated yet, and <code>close list</code> stores nodes have been searched. Every time we select a best node from <code>open list</code> and put it to <code>close list</code>, then we search the best node's neighbours, put the neighbour into <code>close list</code> if it is not in. Loop, until we find the goal node or there is no node in <code>open list</code>.</p> <ol> <li>Put start node into <code>open list</code></li> <li>Loop:<ul> <li>Take the node A with lowest <code>F</code> from <code>open lsit</code>;</li> <li>Put the node A into <code>close list</code>;</li> <li>Search A's neighbours:<ul> <li>if the neighbour node is goal node, break;</li> <li>if the neighbour node is unreachable or it's in <code>close list</code>, ignore it;</li> <li>if the neighbour node is not in <code>open list</code>, put it into <code>open list</code>;</li> <li>if the neighbour node is in <code>open list</code> but its new <code>G</code> is lower than its older, set its parent to A and reset its <code>G</code> and <code>H</code></li> </ul> </li> </ul> </li> <li>From the goal node link all nodes' parent, we get the best path.</li> </ol>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#heuristics","title":"Heuristics","text":"<p>The heuristic function \\(h(n)\\) tells A an estimate of the minimum cost from any vetex \\(n\\) to the goal, it can be used to control A's behavior.</p> <ul> <li>At one extreme, if \\(h(n)\\) is 0, then only \\(g(n)\\) plays a role, and A* turns into Dijkstra\u2019s Algorithm, which is guaranteed to find a shortest path.</li> <li>If \\(h(n)\\) is always lower than (or equal to) the cost of moving from \\(n\\) to the goal, then A is guaranteed to find a shortest path. The lower \\(h(n)\\) is, the more node A expands, making it slower.</li> <li>If \\(h(n)\\) is exactly equal to the cost of moving from \\(n\\) to the goal, then A will only follow the best path and never expand anything else, making it very fast. Although you can\u2019t make this happen in all cases, you can make it exact in some special cases. It\u2019s nice to know that given perfect information, A will behave perfectly.</li> <li>If \\(h(n)\\) is sometimes greater than the cost of moving from \\(n\\) to the goal, then A* is not guaranteed to find a shortest path, but it can run faster.</li> <li>At the other extreme, if \\(h(n)\\) is very high relative to \\(g(n)\\), then only \\(h(n)\\) plays a role, and A* turns into Greedy Best-First-Search.</li> </ul>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#implementation","title":"Implementation","text":""},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#astarh","title":"Astar.h","text":"<pre><code>// By yongcong.wang @ 16/07/2019\n#ifndef A_STAR_H_\n#define A_STAR_H_\n\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;list&gt;\n#include &lt;math.h&gt;\n#include &lt;limits&gt;\n\nnamespace a_star {\n\nstruct Node {\n  Node(int x, int y) : x(x), y(y), F(0), G(0), H(0), parent(nullptr) {}\n\n  int x;\n  int y;\n  int F;\n  int G;\n  int H;\n\n  Node *parent;\n};\n\nclass Astar {\n public:\n  Astar(std::vector&lt;std::vector&lt;int&gt;&gt; *maze);\n  Astar();\n  ~Astar();\n\n  void setMaze(std::vector&lt;std::vector&lt;int&gt;&gt; *maze);\n  Node *calcPath(Node *start_node, Node *end_node);\n  void printPath(Node *header_node);\n\n private:\n  Astar(const Astar &amp;rhs);\n  Astar &amp;operator=(const Astar &amp;rhs);\n\n  const int straight_cost_;\n  const int slope_cost_;\n\n  std::vector&lt;std::vector&lt;int&gt;&gt; *maze_;\n\n  int calcGcost(Node *curr_node, Node *next_node);\n  int calcHcost(Node *curr_node, Node *end_node);\n  int calcFcost(Node *node);\n  bool isPassable(Node *curr_node, Node *next_node);\n  bool isInList(std::list&lt;Node *&gt; &amp;node_list, Node *node);\n  bool isEqual(Node *first_node, Node *second_node);\n  Node *getMinFcostNode(std::list&lt;Node *&gt; &amp;node_list);\n  std::list&lt;Node *&gt; getSurroundingNodes(Node *node);\n};\n\n}\n\n#endif // A_STAR_H_\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#astarcc","title":"Astar.cc","text":"<pre><code>// By yongcong.wang @ 16/07/2019\n#include \"Astar.h\"\n\nnamespace a_star {\n\nAstar::Astar(std::vector&lt;std::vector&lt;int&gt;&gt; *maze) : \n    straight_cost_(10), slope_cost_(14), maze_(maze) {}\n\nAstar::Astar() : straight_cost_(10), slope_cost_(14) {}\n\nAstar::~Astar() {}\n\nvoid Astar::setMaze(std::vector&lt;std::vector&lt;int&gt;&gt; *maze) {\n  maze_ = maze;\n}\n\nNode *Astar::calcPath(Node *start_node, Node *end_node) {\n  if (start_node == nullptr || end_node == nullptr) {\n    std::cout &lt;&lt; \"calc Path: one of the nodes is not exist.\" &lt;&lt; std::endl;\n    return 0;\n  }\n\n  if (isEqual(start_node, end_node)) {\n    return end_node;\n  }\n\n  std::list&lt;Node *&gt; open_list;\n  std::list&lt;Node *&gt; close_list;\n  open_list.push_back(start_node);\n\n  while (!open_list.empty()) {\n    Node *curr_node = getMinFcostNode(open_list);\n    open_list.remove(curr_node);\n    close_list.push_back(curr_node);\n    std::list&lt;Node *&gt; surr_nodes = getSurroundingNodes(curr_node);\n\n    for (auto next_node : surr_nodes) {\n      if (isEqual(end_node, next_node)) {\n        next_node-&gt;parent = curr_node;\n        return next_node;\n      }\n\n      if (!isPassable(curr_node, next_node) ||\n          isInList(close_list, next_node)) {\n        continue;\n      }\n\n      if (!isInList(open_list, next_node)) {\n        next_node-&gt;parent = curr_node;\n        next_node-&gt;G = calcGcost(curr_node, next_node);\n        next_node-&gt;H = calcHcost(next_node, end_node);\n        next_node-&gt;F = calcFcost(next_node);\n        open_list.push_back(next_node);\n      } else {\n        int new_g = calcGcost(curr_node, next_node);\n        if (new_g &lt; next_node-&gt;G) {\n          next_node-&gt;parent = curr_node;\n          next_node-&gt;G = new_g;\n          next_node-&gt;H = calcHcost(next_node, end_node);\n          next_node-&gt;F = calcFcost(next_node);\n          open_list.push_back(next_node);\n        }\n      }\n    }\n  }\n\n  return nullptr;\n}\n\nvoid Astar::printPath(Node *header_node) {\n  if (header_node == nullptr) {\n    return;\n  }\n\n  std::cout &lt;&lt; \"[\" &lt;&lt; header_node-&gt;x &lt;&lt; \", \" &lt;&lt; header_node-&gt;y &lt;&lt; \"]\" &lt;&lt; std::endl;\n\n  printPath(header_node-&gt;parent);\n}\n\nint Astar::calcGcost(Node *curr_node, Node *next_node) {\n  if (curr_node == nullptr || next_node == nullptr) {\n    std::cout &lt;&lt; \"G Cost: one of the nodes is not exist.\" &lt;&lt; std::endl;\n    return 0;\n  }\n\n  if (abs(curr_node-&gt;x - next_node-&gt;x) + abs(curr_node-&gt;y - next_node-&gt;y) == 1) {\n    return curr_node-&gt;G + straight_cost_;\n  } else {\n    return curr_node-&gt;G + slope_cost_;\n  }\n}\n\n\nint Astar::calcHcost(Node *curr_node, Node *end_node) {\n  if (curr_node == nullptr || end_node == nullptr) {\n    std::cout &lt;&lt; \"H Cost: one of the nodes is not exist.\" &lt;&lt; std::endl;\n    return 0;\n  }\n\n  return abs(pow(curr_node-&gt;x - end_node-&gt;x, 2) + pow(curr_node-&gt;y - end_node-&gt;y, 2));\n}\n\nint Astar::calcFcost(Node *node) {\n  if (node == nullptr ) {\n    std::cout &lt;&lt; \"F Cost: node is not exist.\" &lt;&lt; std::endl;\n    return 0;\n  }\n\n  return node-&gt;G + node-&gt;H;\n}\n\nbool Astar::isPassable(Node *curr_node, Node *next_node) {\n  if (curr_node == nullptr || next_node == nullptr) {\n    std::cout &lt;&lt; \"Reachable check: one of the nodes is not exist.\" &lt;&lt; std::endl;\n    return false;\n  }\n\n  if ((*maze_)[curr_node-&gt;x][curr_node-&gt;y] == 1 ||\n      (*maze_)[next_node-&gt;x][next_node-&gt;y] == 1) {\n    return false; // on obstacle\n  }\n\n  if ((*maze_)[curr_node-&gt;x][next_node-&gt;y] == 1 ||\n      (*maze_)[next_node-&gt;x][curr_node-&gt;y] == 1) {\n    return false; // on slope\n  }\n\n  return true;\n}\n\nbool Astar::isInList(std::list&lt;Node *&gt; &amp;node_list, Node *node) {\n  if (node_list.empty() || node == nullptr) {\n    return false;\n  }\n\n  for (auto nd : node_list) {\n    if (nd-&gt;x == node-&gt;x &amp;&amp; nd-&gt;y == node-&gt;y) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nbool Astar::isEqual(Node *first_node, Node *second_node) {\n  if (first_node == nullptr || second_node == nullptr) {\n    std::cout &lt;&lt; \"Equal check: one of the inputs is not exist.\" &lt;&lt; std::endl;\n    return false;\n  }\n\n  return (first_node-&gt;x == second_node-&gt;x) &amp;&amp; (first_node-&gt;y == second_node-&gt;y);\n}\n\nNode *Astar::getMinFcostNode(std::list&lt;Node *&gt; &amp;node_list) {\n  if (node_list.empty()) {\n    std::cout &lt;&lt; \"Calc Min F Cost Node: node list is empty.\" &lt;&lt; std::endl;\n    return nullptr;\n  }\n\n  int min_f_cost = std::numeric_limits&lt;int&gt;::max();\n  Node *min_node = nullptr;\n  for (auto node : node_list) {\n    if (min_f_cost &gt; node-&gt;F) {\n      min_f_cost = node-&gt;F;\n      min_node = node;\n    }\n  }\n\n  return min_node;\n}\n\nstd::list&lt;Node *&gt; Astar::getSurroundingNodes(Node *node) {\n  std::list&lt;Node *&gt; res;\n  if (node == nullptr) {\n    std::cout &lt;&lt; \"calc surrounding: input is not exist.\" &lt;&lt; std::endl;\n    return res;\n  }\n\n  for (int i = -1; i &lt;= 1; ++i) {\n    for (int j = -1; j &lt;= 1; ++j) {\n      if (i == 0 &amp;&amp; j == 0) {\n        continue;\n      } else {\n        res.push_back(new Node(node-&gt;x + i, node-&gt;y + j));\n      }\n    }\n  }\n\n  return res;\n}\n\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#maincc","title":"main.cc","text":"<pre><code>// By yongcong.wang @ 16/07/2019\n#include \"Astar.h\"\n\nint main() {\n  std::vector&lt;std::vector&lt;int&gt;&gt; maze = {\n    {1,1,1,1,1,1,1,1,1,1,1,1},\n    {1,0,0,1,1,0,1,0,0,0,0,1},\n    {1,0,0,1,1,0,0,0,0,0,0,1},\n    {1,0,0,0,0,0,1,0,0,1,1,1},\n    {1,1,1,0,0,0,0,0,1,1,0,1},\n    {1,1,0,1,0,0,0,0,0,0,0,1},\n    {1,0,1,0,0,0,0,1,0,0,0,1},\n    {1,1,1,1,1,1,1,1,1,1,1,1}\n  };\n\n  a_star::Astar a(&amp;maze);\n  a_star::Node start_node(6, 4);\n  a_star::Node end_node(6, 10);\n\n  auto *header = a.calcPath(&amp;start_node, &amp;end_node);\n  a.printPath(header);\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#build-and-test","title":"Build and Test","text":"<pre><code>g++ -std=c++11 -c Astar.cc &amp;&amp; g++ -std=c++11 -c main.cc &amp;&amp; g++ main.o Astar.o -o test &amp;&amp; ./test\n</code></pre>"},{"location":"%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/Routing/a_star/#reference","title":"Reference","text":"<ul> <li>Wikipedia: A* search algorithm</li> <li>Clear visual A* explanation, with advice and thoughts on path-finding</li> <li>\u8def\u5f84\u89c4\u5212\u4e4b A* \u7b97\u6cd5</li> </ul>"},{"location":"%E8%8B%B1%E8%AF%AD/%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A8%E7%A4%BA/","title":"\u6570\u5b57\u7684\u8868\u793a","text":""},{"location":"%E8%8B%B1%E8%AF%AD/%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A8%E7%A4%BA/#_1","title":"\u57fa\u6570\u8bcd+\u5e8f\u6570\u8bcd","text":""},{"location":"%E8%8B%B1%E8%AF%AD/%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A8%E7%A4%BA/#_2","title":"\u5c0f\u6570","text":""},{"location":"%E8%8B%B1%E8%AF%AD/%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A8%E7%A4%BA/#_3","title":"\u5206\u6570","text":""},{"location":"%E8%8B%B1%E8%AF%AD/%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A8%E7%A4%BA/#_4","title":"\u5176\u4ed6","text":""},{"location":"%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/%E6%9B%B2%E7%8E%87%E8%AE%A1%E7%AE%97/","title":"\u66f2\u7387\u8ba1\u7b97","text":""},{"location":"%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/%E8%9A%81%E7%BE%A4%E7%AE%97%E6%B3%95/","title":"\u8681\u7fa4\u7b97\u6cd5","text":""},{"location":"%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%921%EF%BC%88Dijkstra%EF%BC%89/","title":"\u8def\u5f84\u89c4\u52121\uff08Dijkstra\uff09","text":"<p>\u8def\u5f84\u89c4\u5212\u4e3b\u8981\u5206\u4e3a\uff1a\u5168\u5c40\u8def\u5f84\u89c4\u5212\uff08routing\uff09\u548c\u5c40\u90e8\u8def\u5f84\u89c4\u5212\uff08motion planning\uff09 \u51b3\u7b56\u662f\u5728\u8def\u5f84\u89c4\u5212\u4e4b\u540e\u7684\uff0c\u8def\u5f84\u89c4\u5212\u53ef\u80fd\u89c4\u5212\u51fa\u591a\u6761\u8def\u5f84\uff0c\u6027\u80fd\u6307\u6807\u4e0d\u540c\uff0c\u9700\u8981\u51b3\u7b56\u6a21\u5757\u51b3\u5b9a\u53d6\u54ea\u6761\u89c4\u5212\u8def\u7ebf </p> <p>Dijkstra\u7b97\u6cd5</p> <p>\u7b80\u4ecb\uff1a\u4ece\u4e00\u4e2a\u8282\u70b9\u904d\u5386\u5176\u4f59\u5404\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff0c\u89e3\u51b3\u6709\u6743\u56fe\u4e2d\u6700\u77ed\u8def\u5f84\u95ee\u9898</p> <p></p> <p></p> <p></p>"},{"location":"%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E6%80%BB%E7%BB%93/","title":"\u8def\u5f84\u89c4\u5212\u603b\u7ed3","text":""}]}